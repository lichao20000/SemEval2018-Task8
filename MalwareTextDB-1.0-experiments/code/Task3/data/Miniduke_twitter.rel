At IN O O
the DT O O
end NN O O
of IN O O
April NNP O O
Microsoft NNP O O
announced VBD O O
that IN O O
a DT O O
vulnerability NN O O
in IN O O
Word NN O O
was VBD O O
actively RB O O
being VBG O O
exploited VBN O O
. . O O

This DT O O
vulnerability NN O O
occurred VBD O O
in IN O O
parsing VBG O O
RTF NN O O
files NNS O O
and CC O O
was VBD O O
assigned VBN O O
CVE-2014-1761 NN O O
, , O O
a DT O O
thorough JJ O O
analysis NN O O
of IN O O
which WDT O O
can MD O O
be VB O O
found VBN O O
on IN O O
the DT O O
HP NNP O O
Security NNP O O
Research NNP O O
blog NN O O
. . O O

We PRP O O
have VBP O O
since RB O O
seen VBN O O
multiple JJ O O
cases NNS O O
where WRB O O
this DT B-Entity 1
exploit VBP I-Entity O
is VBZ O O
used VBN O O
to TO O O
deliver VB B-Action 2
malware NN B-Entity 3
and CC O O
one NN O O
was VBD O O
particularly RB O O
interesting JJ O O
as IN O O
it PRP O O
contained VBD O O
a DT O O
new JJ O O
variant NN O O
of IN O O
MiniDuke FW O O
( FW O O
also RB O O
known VBN O O
as IN O O
Win32/SandyEva FW O O
) FW O O
. . O O

MiniDuke NNP O O
was VBD O O
first RB O O
discussed VBN O O
by IN O O
Kaspersky NNP O O
in IN O O
March NNP O O
2013 CD O O
in IN O O
their PRP$ O O
paper NN O O
The DT O O
MiniDuke NNP O O
Mystery NNP O O
: : O O
PDF NN O O
0- CD O O
day NN O O
Government NNP O O
Spy NNP O O
Assembler NNP O O
0x29A NNP O O
Micro NNP O O
Backdoorand NNP O O
shortly RB O O
after IN O O
in IN O O
a DT O O
paper NN O O
by IN O O
Bitdefender NNP O O
. . O O

Some DT O O
of IN O O
the DT O O
characteristics NNS O O
of IN O O
MiniDuke NNP B-Entity 1
- : O O
such JJ O O
as IN O O
its PRP$ O O
small JJ O O
size NN O O
( NN O O
20 CD O O
KB NN O O
) NN O O
, , O O
its PRP$ O O
crafty JJ O O
use NN O O
of IN O O
assembly NN O O
programming NN O O
, , O O
and CC O O
the DT O O
use NN B-Action 2
of IN O O
zero-day JJ B-Entity 3
exploits NNS I-Entity O
for IN B-Modifier 4
distribution NN B-Entity 5
- : O O
made VBD O O
it PRP O O
an DT O O
intriguing JJ O O
threat NN O O
. . O O

Although IN O O
the DT O O
backdoor NN O O
is VBZ O O
still RB O O
quite RB O O
similar JJ O O
to TO O O
its PRP$ O O
previous JJ O O
versions NNS O O
, , O O
some DT O O
important JJ O O
changes NNS O O
were VBD O O
made VBN O O
since IN O O
last JJ O O
year NN O O
, , O O
the DT O O
most RBS O O
notable JJ O O
being VBG O O
the DT O O
introduction NN O O
of IN O O
a DT B-Entity 1
secondary JJ I-Entity O
component NN I-Entity O
written VBN I-Entity O
in IN I-Entity O
JScript NN I-Entity O
to TO O O
contact VB B-Action 2
a DT B-Entity 3
C NN I-Entity O
& CC I-Entity O
C NN I-Entity O
server NN I-Entity O
via IN B-Modifier 4
Twitter NNP B-Entity 5
. . O O

The DT O O
exploit VBP O O
document NN O O
was VBD O O
named VBN O O
Proposal-Cover-Sheet-English.rtf NN O O
and CC O O
is VBZ O O
quite RB O O
bland JJ O O
when WRB O O
compared VBN O O
to TO O O
the DT O O
documents NNS O O
that WDT O O
were VBD O O
used VBN O O
in IN O O
2013 CD O O
, , O O
which WDT O O
were VBD O O
of IN O O
a DT O O
political JJ O O
nature NN O O
. . O O

We PRP O O
received VBD O O
the DT O O
document NN O O
on IN O O
April NNP O O
8th JJ O O
, , O O
only RB O O
three CD O O
days NNS O O
after IN O O
the DT O O
compilation NN O O
of IN O O
the DT O O
MiniDuke NNP O O
payload NN O O
, , O O
dated VBN O O
April NNP O O
5th NN O O
in IN O O
the DT O O
PE NN O O
header NN O O
. . O O

The DT O O
payload NN O O
remains VBZ O O
quite RB O O
small JJ O O
at IN O O
only RB O O
24 CD O O
KB NN O O
. . O O

The DT O O
functionality NN O O
of IN O O
the DT B-Entity 1
shellcode NN I-Entity O
which WDT O O
is VBZ B-Action 2
executed VBN I-Action O
by IN B-Modifier 3
triggering VBG B-Entity 4
the DT I-Entity O
vulnerability NN I-Entity O
is VBZ O O
rather RB O O
simple JJ O O
and CC O O
straightforward JJ O O
. . O O

After IN O O
decrypting VBG O O
itself PRP O O
and CC O O
obtaining VBG O O
the DT O O
addresses NNS O O
of IN O O
some DT O O
functions NNS O O
exported VBN O O
by IN O O
kernel32.dll NN O O
, , O O
it PRP B-Entity 1
decrypts VBZ B-Action 2
and CC I-Action O
drops VBZ I-Action O
the DT B-Entity 3
payload NN I-Entity O
in IN B-Modifier 4
the DT B-Entity 5
% NN I-Entity O
TEMP NN I-Entity O
% NN I-Entity O
directory NN I-Entity O
in IN I-Entity O
a DT I-Entity O
file NN I-Entity O
named VBN I-Entity O
'' '' I-Entity O
a.l NN I-Entity O
'' '' I-Entity O
which WDT O O
is VBZ B-Action 6
subsequently RB I-Action O
loaded VBN I-Action O
by IN B-Modifier 7
calling VBG B-Entity 8
kernel32 NN I-Entity O
! . I-Entity O
LoadLibraryA NN I-Entity O
. . O O

An DT O O
interesting JJ O O
thing NN O O
about IN O O
the DT O O
shellcode NN O O
is VBZ O O
that IN O O
before IN O O
transferring VBG O O
control NN O O
to TO O O
any DT O O
API NNP O O
function NN O O
it PRP B-Entity 1
checks VBZ O O
the DT O O
first JJ O O
bytes NNS O O
of IN O O
the DT O O
function NN O O
in IN O O
order NN O O
to TO O O
detect VB B-Action 2
hooks NNS B-Entity 3
and CC I-Entity O
debugger NN I-Entity O
breakpoints NNS I-Entity O
which WDT I-Entity O
may MD I-Entity O
be VB I-Entity O
set VBN I-Entity O
by IN I-Entity O
security NN I-Entity O
software NN I-Entity O
and CC I-Entity O
monitoring NN I-Entity O
tools NNS I-Entity O
. . O O

If IN O O
any DT O O
of IN O O
these DT O O
are VBP O O
found VBN O O
the DT O O
shellcode NN O O
skips VBZ O O
the DT O O
first JJ O O
5 CD O O
bytes NNS O O
of IN O O
the DT O O
function NN O O
being VBG O O
called VBN O O
by IN O O
manually RB O O
executing VBG O O
prologue NN O O
instructions NNS O O
( CD O O
mov NN O O
edi NN O O
, , O O
edi NN O O
; : O O
push NN O O
ebp NN O O
; : O O
mov FW O O
ebp FW O O
, , O O
esp FW O O
) FW O O
and CC O O
then RB O O
jumping VBG O O
to TO O O
the DT O O
function NN O O
code NN O O
as IN O O
illustrated VBN O O
below IN O O
. . O O

The DT O O
next JJ O O
graph NN O O
presents VBZ O O
the DT O O
execution NN O O
flow NN O O
of IN O O
this DT O O
malware NN O O
when WRB O O
the DT O O
exploitation NN O O
is VBZ O O
successful JJ O O
. . O O

As IN O O
mentioned VBN O O
previously RB O O
this DT O O
version NN O O
of IN O O
the DT O O
MiniDuke NNP O O
payload NN O O
comes VBZ O O
with IN O O
two CD O O
modules NNS O O
which WDT O O
we PRP O O
refer VBP O O
to TO O O
as IN O O
the DT O O
main JJ O O
module NN O O
and CC O O
the DT O O
TwitterJS NN O O
module NN O O
. . O O

Once IN O O
MiniDuke NNP O O
receives VBZ O O
control NN O O
it PRP O O
checks VBZ O O
that IN O O
the DT O O
host NN O O
process NN O O
is VBZ O O
not RB O O
rundll32.exe NN O O
and CC O O
whether IN O O
the DT O O
current JJ O O
directory NN O O
is VBZ O O
% NN O O
TEMP NN O O
% NN O O
. . O O

If IN O O
either DT O O
of IN O O
those DT O O
conditions NNS O O
is VBZ O O
met VBN O O
the DT O O
malware NN O O
assumes VBZ O O
it PRP O O
is VBZ O O
run VBN O O
for IN O O
the DT O O
first JJ O O
time NN O O
and CC O O
it PRP B-Entity 1
proceeds VBZ B-Action 2
with IN B-Modifier 3
its PRP$ B-Entity 4
installation NN I-Entity O
onto IN I-Entity O
the DT I-Entity O
system NN I-Entity O
. . O O

MiniDuke NNP B-Entity 1
gathers VBZ B-Action 2
information NN B-Entity 3
about IN I-Entity O
the DT I-Entity O
system NN I-Entity O
and CC O O
encrypts VBZ B-Action 4
its PRP$ B-Entity 5
configuration NN I-Entity O
based VBN B-Modifier 6
on IN I-Modifier O
that DT B-Entity 7
information NN I-Entity O
, , O O
a DT O O
method NN O O
also RB O O
used VBN O O
by IN O O
OSX/Flashback FW O O
( FW O O
this DT O O
process NN O O
is VBZ O O
called VBN O O
watermarking VBG O O
by IN O O
Bitdefender FW O O
) FW O O
. . O O

The DT O O
end NN O O
result NN O O
is VBZ O O
that IN O O
it PRP O O
is VBZ O O
impossible JJ B-Action 1
to TO I-Action O
retrieve VB I-Action O
the DT B-Entity 2
configuration NN I-Entity O
of IN I-Entity O
an DT I-Entity O
encrypted JJ I-Entity O
payload NN I-Entity O
if IN B-Modifier 3
analyzing VBG B-Entity 4
it PRP I-Entity O
on IN I-Entity O
a DT I-Entity O
different JJ I-Entity O
computer NN I-Entity O
. . O O

The DT O O
information NN O O
collected VBN O O
on IN O O
infection NN O O
has VBZ O O
not RB O O
changed VBN O O
since IN O O
the DT O O
previous JJ O O
version NN O O
and CC O O
consists VBZ O O
of IN O O
the DT O O
following JJ O O
values NNS O O
: : O O
Once RB O O
the DT B-Entity 1
encrypted JJ I-Entity O
version NN I-Entity O
of IN I-Entity O
the DT I-Entity O
malware NN I-Entity O
is VBZ B-Action 2
created VBN I-Action O
, , O O
it PRP B-Entity 3
is VBZ B-Action 4
written VBN I-Action O
into IN B-Modifier 5
a DT B-Entity 6
file NN I-Entity O
in IN I-Entity O
the DT I-Entity O
% NN I-Entity O
ALLUSERSPROFILE NN I-Entity O
% NN I-Entity O
\Application NN I-Entity O
Data NN I-Entity O
directory NN I-Entity O
. . O O

The DT O O
name NN O O
of IN O O
the DT O O
file NN O O
is VBZ O O
randomly RB O O
picked VBN O O
from IN O O
the DT O O
following JJ O O
values NNS O O
( VBP O O
you PRP O O
can MD O O
find VB O O
this DT O O
listing NN O O
and CC O O
those DT O O
of IN O O
the DT O O
next JJ O O
screenshots NNS O O
on IN O O
the DT O O
VirusRadar NNP O O
description NN O O
: : O O
The DT O O
filename NN O O
extension NN O O
is VBZ O O
also RB O O
picked VBN O O
randomly RB O O
from IN O O
the DT O O
following JJ O O
list NN O O
: : O O
To TO O O
persist VB B-Action 1
on IN B-Modifier 2
the DT B-Entity 3
infected JJ I-Entity O
system NN I-Entity O
after IN B-Modifier 4
reboots NNS B-Entity 5
, , O O
the DT B-Entity 6
malware NN I-Entity O
creates VBZ B-Action 7
a DT B-Entity 8
hidden JJ I-Entity O
.LNK NN I-Entity O
file NN I-Entity O
in IN B-Modifier 9
the DT B-Entity 10
'' '' I-Entity O
Startup NNP I-Entity O
'' '' I-Entity O
directory NN I-Entity O
pointing VBG O O
to TO O O
the DT O O
modified VBN O O
main JJ O O
module NN O O
. . O O

The DT O O
name NN O O
of IN O O
the DT O O
.LNK NN O O

file NN O O
is VBZ O O
randomly RB O O
drawn VBN O O
from IN O O
the DT O O
following JJ O O
values NNS O O
: : O O
The DT B-Entity 1
.LNKfile NN I-Entity O

is VBZ B-Action 1
created VBN I-Action O
using VBG B-Modifier 2
a DT B-Entity 3
COM NN I-Entity O
object NN I-Entity O
with IN B-Modifier 4
the DT B-Entity 5
IShellLinkA NN I-Entity O
interface NN I-Entity O
and CC O O
contains VBZ O O
the DT O O
following JJ O O
command NN O O
: : O O
'' '' O O
C NN O O
: : O O
\Windows\system32\rundll32.exe NN O O
% NN O O
pathtomainmodule CD O O
% NN O O
, , O O
exportfunction NN O O
'' '' O O
Which WDT O O
gives VBZ O O
something NN O O
like IN O O
: : O O
'' '' O O
C NN O O
: : O O
\Windows\system32\rundll32.exe NN O O
C NN O O
: : O O
\DOCUME~1\ALLUSE~1\APPLIC~1\data.cat NN O O
, , O O
IlqUenn NNP O O
'' '' O O
. . O O

When WRB O O
the DT B-Entity 1
malware NN I-Entity O
is VBZ B-Action 2
loaded VBN I-Action O
by IN O O
rundll32.exe NN B-Entity 3
and CC O O
the DT O O
current JJ O O
directory NN O O
is VBZ O O
n't RB O O
% NN O O
TEMP NN O O
% NN O O
, , O O
the DT B-Entity 4
malware NN I-Entity O
starts VBZ O O
with IN O O
gathering VBG B-Action 5
the DT B-Entity 6
same JJ I-Entity O
system NN I-Entity O
information NN I-Entity O
as IN I-Entity O
described VBN I-Entity O
in IN I-Entity O
the DT I-Entity O
'' '' I-Entity O
Installation NN I-Entity O
'' '' I-Entity O
section NN I-Entity O
to TO B-Modifier 7
decrypt VB B-Entity 8
configuration NN I-Entity O
information NN I-Entity O
. . O O

As IN O O
with IN O O
the DT O O
previous JJ O O
version NN O O
of IN O O
MiniDuke NNP O O
, , O O
it PRP O O
checks VBZ O O
for IN O O
the DT O O
presence NN O O
of IN O O
the DT O O
following JJ O O
processes NNS O O
in IN O O
the DT O O
system NN O O
: : O O
If IN O O
any DT O O
of IN O O
these DT O O
are VBP O O
found VBN O O
in IN O O
the DT O O
system NN O O
the DT O O
configuration NN O O
information NN O O
will MD O O
be VB O O
decrypted VBN O O
incorrectly RB O O
, , O O
i.e NN O O
. . O O

the DT O O
malware NN O O
will MD O O
run VB O O
on IN O O
the DT O O
system NN O O
without IN O O
any DT O O
communication NN O O
to TO O O
C NN O O
& CC O O
C NN O O
servers NNS O O
. . O O

If IN O O
the DT O O
configuration NN O O
data NNS O O
is VBZ O O
decrypted VBN O O
correctly RB O O
, , O O
MiniDuke NNP B-Entity 1
retrieves VBZ B-Action 2
the DT B-Entity 3
Twitter NNP I-Entity O
page NN I-Entity O
of IN I-Entity O
@ SYM I-Entity O
FloydLSchwartz NNP I-Entity O
in IN B-Modifier 4
search NN B-Entity 5
of IN I-Entity O
URLs NNS I-Entity O
by IN I-Entity O
which WDT I-Entity O
to TO I-Entity O
reach VB I-Entity O
C NNP I-Entity O
& CC I-Entity O
C NNP I-Entity O
server NN I-Entity O
. . O O

It PRP O O
looks VBZ O O
for IN O O
the DT O O
tag NN O O
'' '' O O
X NNP O O
) NNP O O
) NNP O O
) NNP O O
'' '' O O
on IN O O
the DT O O
page NN O O
( NNP O O
MiniDuke NNP O O
was VBD O O
searching VBG O O
for IN O O
'' '' O O
uri NN O O
! . O O
'' '' O O
in IN O O
previous JJ O O
samples NNS O O
) NN O O
and CC O O
if IN O O
the DT O O
tag NN O O
is VBZ O O
found VBN O O
it PRP O O
decrypts VBZ O O
a DT O O
URL NN O O
from IN O O
the DT O O
data NNS O O
that WDT O O
follows VBZ O O
it PRP O O
. . O O

The DT O O
Twitter NNP O O
account NN O O
@ SYM O O
FloydLSchwartz NNP O O
does VBZ O O
exist VB O O
but CC O O
has VBZ O O
only JJ O O
retweets NNS O O
and CC O O
no DT O O
strings NNS O O
with IN O O
the DT O O
special JJ O O
tag NN O O
. . O O

As IN O O
the DT O O
next JJ O O
step NN O O
, , O O
MiniDuke NNP B-Entity 1
gathers VBZ B-Action 2
the DT B-Entity 3
following VBG I-Entity O
information NN I-Entity O
from IN B-Modifier 4
the DT B-Entity 5
infected JJ I-Entity O
systems NNS I-Entity O
: : O O
This DT B-Entity 6
information NN I-Entity O
is VBZ B-Action 7
then RB I-Action O
sent VBN I-Action O
to TO B-Modifier 8
the DT B-Entity 9
C NN I-Entity O
& CC I-Entity O
C NN I-Entity O
server NN I-Entity O
along IN O O
with IN O O
the DT O O
request NN B-Action 10
to TO B-Modifier 11
download VB B-Entity 12
a DT I-Entity O
payload NN I-Entity O
. . O O

The DT B-Entity 1
final JJ I-Entity O
URL NN I-Entity O
used VBN B-Action 2
to TO B-Modifier 3
communicate VB B-Entity 4
with IN I-Entity O
the DT I-Entity O
C NN I-Entity O
& CC I-Entity O
C NN I-Entity O
server NN I-Entity O
looks VBZ O O
like IN O O
this DT O O
: : O O
< JJR O O
urlstart NN O O
> JJR O O
/create.php NN O O
? . O O
< JJR O O
rndparam NN O O
> JJR O O
= JJ O O
< JJR O O
systeminfo NN O O
> JJR O O
Those DT O O
tokens NNS O O
are VBP O O
derived VBN O O
as IN O O
follows VBZ O O
: : O O
An DT O O
example NN O O
of IN O O
such PDT O O
a DT O O
URL NN O O
is VBZ O O
given VBN O O
below IN O O
: : O O
The DT B-Entity 5
payload NN I-Entity O
is VBZ B-Action 6
downloaded VBN I-Action O
in IN B-Modifier 7
the DT B-Entity 8
file NN I-Entity O
named VBN I-Entity O
'' '' I-Entity O
fdbywu NN I-Entity O
'' '' I-Entity O
using VBG B-Modifier 9
the DT B-Entity 10
urlmon NN I-Entity O
! . I-Entity O
URLDownloadToFileA JJ I-Entity O
API NN I-Entity O
: : O O
The DT O O
downloaded VBN O O
payload NN O O
is VBZ O O
a DT O O
fake JJ O O
GIF8 NN O O
file NN O O
containing NN O O
encrypted VBD O O
executable JJ O O
. . O O

The DT O O
malware NN O O
processes VBZ O O
the DT O O
downloaded VBN O O
file NN O O
in IN O O
the DT O O
same JJ O O
way NN O O
as IN O O
previous JJ O O
samples NNS O O
of IN O O
MiniDuke NNP O O
: : O O
it PRP B-Entity 1
verifies VBZ B-Action 2
the DT B-Entity 3
integrity NN I-Entity O
of IN I-Entity O
the DT I-Entity O
file NN I-Entity O
using VBG B-Modifier 4
RSA-2048 NN B-Entity 5
, , O O
then RB O O
decrypts VBZ O O
it PRP O O
, , O O
stores NNS O O
in IN O O
a DT O O
file NN O O
and CC O O
finally RB O O
executes VBZ B-Action 6
it PRP B-Entity 7
. . O O

The DT B-Entity 1
RSA-2048 NN I-Entity O
public JJ I-Entity O
key NN I-Entity O
to TO O O
verify VB B-Action 2
integrity NN B-Entity 3
of IN I-Entity O
the DT I-Entity O
executable JJ I-Entity O
inside IN I-Entity O
the DT I-Entity O
GIF NN I-Entity O
file NN I-Entity O
is VBZ O O
the DT O O
same JJ O O
as IN O O
in IN O O
the DT O O
previous JJ O O
version NN O O
of IN O O
MiniDuke NNP O O
. . O O

In IN O O
the DT O O
event NN O O
that IN O O
MiniDuke NNP O O
is VBZ O O
unable JJ O O
to TO O O
retrieve VB O O
a DT O O
C NN O O
& CC O O
C NN O O
URL NN O O
from IN O O
this DT O O
account NN O O
, , O O
it PRP O O
generates VBZ O O
a DT O O
username NN O O
to TO O O
search VB O O
for IN O O
based VBN O O
on IN O O
the DT O O
current JJ O O
date NN O O
. . O O

The DT O O
search NN O O
query NN O O
changes VBZ O O
roughly RB O O
every DT O O
seven CD O O
days NNS O O
and CC O O
is VBZ O O
similar JJ O O
to TO O O
the DT O O
backup NN O O
mechanism NN O O
in IN O O
previous JJ O O
versions NNS O O
that WDT O O
was VBD O O
using VBG O O
Google NNP O O
searches NNS O O
. . O O

A DT O O
Python NNP O O
implementation NN O O
of IN O O
the DT O O
algorithm NN O O
can MD O O
be VB O O
found VBN O O
in IN O O
Appendix NN O O
B NN O O
. . O O

The DT O O
TwitterJS NN O O
module NN O O
is VBZ O O
extracted VBN O O
by IN O O
creating VBG B-Action 1
a DT B-Entity 2
copy NN I-Entity O
of IN I-Entity O
the DT I-Entity O
Windows NNP I-Entity O
DLL NNP I-Entity O
cryptdll.dll NNP I-Entity O
, , O O
injecting VBG O O
a DT O O
block NN O O
of IN O O
code NN O O
into IN O O
it PRP O O
and CC O O
redirecting VBG O O
the DT O O
exported VBN O O
functions NNS O O
to TO O O
this DT O O
code NN O O
. . O O

Here RB O O
is VBZ O O
how WRB O O
the DT O O
export NN O O
address NN O O
table NN O O
of IN O O
the DT O O
patched VBN O O
binary JJ O O
looks NNS O O
after IN O O
modifications NNS O O
. . O O

This DT B-Entity 1
file NN I-Entity O
is VBZ B-Action 2
then RB I-Action O
stored VBN I-Action O
in IN B-Modifier 3
an DT B-Entity 4
Alternate JJ I-Entity O
Data NNP I-Entity O
Stream NNP I-Entity O
( NNP I-Entity O
ADS NNPS I-Entity O
) NNP I-Entity O
in IN I-Entity O
NTUSER.DAT NNP I-Entity O
in IN I-Entity O
the DT I-Entity O
% NN I-Entity O
USERPROFILE NN I-Entity O
% NN I-Entity O
folder NN I-Entity O
. . O O

Finally RB O O
this DT B-Entity 1
DLL NNP I-Entity O
is VBZ B-Action 2
registered VBN I-Action O
as IN B-Modifier 3
the DT B-Entity 4
Open NNP I-Entity O
command NN I-Entity O
when WRB I-Entity O
a DT I-Entity O
drive NN I-Entity O
is VBZ I-Entity O
open JJ I-Entity O
, , O O
which WDT O O
has VBZ O O
the DT O O
effect NN O O
of IN O O
starting VBG B-Action 5
the DT B-Entity 6
bot NN I-Entity O
every DT B-Modifier 7
time NN I-Modifier O
the DT B-Entity 8
user NN I-Entity O
opens VBZ I-Entity O
a DT I-Entity O
disk NN I-Entity O
drive NN I-Entity O
. . O O

Below IN O O
you PRP O O
can MD O O
find VB O O
the DT O O
content NN O O
of IN O O
the DT O O
init.cmd NN O O
script NN O O
used VBN O O
by IN O O
MiniDuke NNP B-Entity 1
to TO O O
install VB B-Action 2
TwitterJS NN B-Entity 3
module NN I-Entity O
onto IN B-Modifier 4
the DT B-Entity 5
system NN I-Entity O
. . O O

When WRB O O
loaded VBN O O
, , O O
TwitterJS NN O O
instantiates VBZ O O
the DT O O
JScript NN O O
COM NN O O
object NN O O
and CC O O
decrypts VBZ O O
a DT O O
JScript NN O O
file NN O O
containing VBG O O
the DT O O
core NN O O
logic NN O O
of IN O O
the DT O O
module NN O O
. . O O

Prior RB O O
to TO O O
executing VBG O O
it PRP O O
, , O O
MiniDuke NNP B-Entity 1
applies VBZ B-Action 2
a DT B-Entity 3
light JJ I-Entity O
encoding NN I-Entity O
to TO B-Modifier 4
the DT B-Entity 5
script NN I-Entity O
: : O O
The DT O O
next JJ O O
images NNS O O
show VBP O O
the DT O O
result NN O O
of IN O O
two CD O O
separate JJ O O
obfuscations NNS O O
, , O O
we PRP O O
can MD O O
see VB O O
that IN O O
the DT O O
variables NNS O O
have VBP O O
different JJ O O
values NNS O O
. . O O

This DT B-Entity 1
is VBZ O O
probably RB O O
done VBN O O
to TO O O
thwart VB B-Action 2
security NN B-Entity 3
systems NNS I-Entity O
that WDT I-Entity O
scan VBP I-Entity O
at IN I-Entity O
the DT I-Entity O
entry NN I-Entity O
points NNS I-Entity O
of IN I-Entity O
the DT I-Entity O
JScript NN I-Entity O
engine NN I-Entity O
. . O O

The DT O O
purpose NN O O
of IN O O
this DT B-Entity 1
script NN I-Entity O
is VBZ O O
to TO O O
use VB B-Action 2
Twitter NNP B-Entity 3
to TO B-Modifier 4
find VB B-Entity 5
a DT I-Entity O
C NN I-Entity O
& CC I-Entity O
C NN I-Entity O
and CC O O
retrieve VB B-Action 6
JScript NN B-Entity 7
code NN I-Entity O
to TO I-Entity O
execute VB I-Entity O
. . O O

It PRP O O
first RB O O
generates VBZ O O
a DT O O
Twitter NNP O O
user NN O O
to TO O O
search VB O O
for IN O O
; : O O
this DT O O
search NN O O
term NN O O
changes VBZ O O
every DT O O
7 CD O O
days NNS O O
and CC O O
is VBZ O O
actually RB O O
a DT O O
match NN O O
to TO O O
the DT O O
real JJ O O
account NN O O
name NN O O
, , O O
not RB O O
the DT O O
Twitter NNP O O
account NN O O
name NN O O
. . O O

The DT O O
bot NN O O
then RB O O
visits VBZ O O
the DT O O
Twitter NNP O O
profiles NNS O O
returned VBN O O
by IN O O
the DT O O
search NN O O
and CC O O
looks VBZ O O
for IN O O
links NNS O O
that WDT O O
end VBP O O
with IN O O
'' '' O O
.xhtml NN O O

'' '' O O
. . O O

When WRB O O
one CD O O
is VBZ O O
found VBN O O
, , O O
it PRP O O
replaces VBZ O O
'' '' O O
.xhtml NN O O

'' '' O O
with IN O O
'' '' O O
.php NN O O

'' '' O O
and CC O O
fetches VBZ O O
that DT O O
link NN O O
. . O O

Information NNP O O
about IN O O
the DT O O
computer NN O O
is VBZ O O
embedded VBN O O
in IN O O
the DT O O
Accept NNP O O
HTTP NNP O O
header NN O O
. . O O

The DT O O
first JJ O O
link NN O O
on IN O O
the DT O O
retrieved VBN O O
page NN O O
should MD O O
contain VB O O
base64 NN O O
data NNS O O
; : O O
the DT O O
name NN O O
attribute NN O O
of IN O O
the DT O O
link NN O O
is VBZ O O
used VBN O O
as IN O O
a DT O O
rolling JJ O O
XOR NN O O
key NN O O
to TO O O
decrypt VB O O
the DT O O
JScript NN O O
code NN O O
. . O O

Finally RB O O
, , O O
MiniDuke NNP O O
calculates VBZ O O
a DT O O
hash NN O O
of IN O O
the DT O O
fetched VBN O O
script NN O O
and CC O O
compares VBZ O O
it PRP O O
with IN O O
a DT O O
hardcoded JJ O O
hash NN O O
in IN O O
the DT O O
TwitterJS NN O O
script NN O O
. . O O

If IN O O
they PRP O O
match VBP O O
, , O O
the DT O O
fetched VBN O O
script NN O O
is VBZ O O
executed VBN O O
by IN O O
calling VBG O O
eval JJ O O
( NNP O O
) NNP O O
. . O O

The DT O O
code NN O O
hashing VBG O O
algorithm NN O O
used VBN O O
by IN O O
the DT O O
component NN O O
looks VBZ O O
very RB O O
much RB O O
like IN O O
SHA-1 NN O O
but CC O O
outputs VBZ O O
different JJ O O
hashes NNS O O
( VBP O O
you PRP O O
can MD O O
find VB O O
the DT O O
complete JJ O O
implementation NN O O
in IN O O
Appendix NN O O
B NN O O
. . O O

We PRP O O
decided VBD O O
to TO O O
search VB O O
for IN O O
what WP O O
was VBD O O
changed VBN O O
in IN O O
the DT O O
algorithm NN O O
; : O O
one CD O O
of IN O O
our PRP$ O O
working VBG O O
hypotheses NNS O O
was VBD O O
that IN O O
the DT O O
algorithm NN O O
might MD O O
have VB O O
been VBN O O
altered VBN O O
to TO O O
make VB O O
collisions NNS O O
feasible JJ O O
. . O O

We PRP O O
could MD O O
n't RB O O
find VB O O
an DT O O
obvious JJ O O
difference NN O O
; : O O
all PDT O O
the DT O O
constants NNS O O
and CC O O
the DT O O
steps NNS O O
of IN O O
the DT O O
algorithm NN O O
were VBD O O
as IN O O
expected VBN O O
. . O O

Then RB O O
we PRP O O
noticed VBD O O
that IN O O
for IN O O
short JJ O O
messages NNS O O
only RB O O
the DT O O
second JJ O O
32-bit JJ O O
word NN O O
was VBD O O
different JJ O O
when WRB O O
compared VBN O O
to TO O O
the DT O O
original JJ O O
SHA-1 NN O O
. . O O

By IN O O
examining VBG O O
how WRB O O
this DT O O
2nd JJ O O
word NN O O
was VBD O O
generated VBN O O
we PRP O O
finally RB O O
discovered VBD O O
that IN O O
this DT O O
was VBD O O
caused VBN O O
by IN O O
a DT O O
scope NN O O
issue NN O O
. . O O

As IN O O
shown VBN O O
below IN O O
the DT O O
SHA-1 NN O O
function NN O O
used VBD O O
a DT O O
variable NN O O
named VBN O O
f SYM O O
: : O O
the DT O O
function NN O O
Z NN O O
( FW O O
) FW O O
is VBZ O O
then RB O O
called VBN O O
which WDT O O
also RB O O
uses VBZ O O
a DT O O
variable NN O O
named VBN O O
f FW O O
without IN O O
the DT O O
var FW O O
keyword FW O O
, , O O
causing VBG O O
it PRP O O
to TO O O
be VB O O
treated VBN O O
as IN O O
a DT O O
global JJ O O
variable NN O O
rather RB O O
than IN O O
local JJ O O
to TO O O
the DT O O
function NN O O
. . O O

The DT O O
end NN O O
result NN O O
is VBZ O O
that IN O O
the DT O O
value NN O O
of IN O O
f FW O O
is VBZ O O
also RB O O
changed VBN O O
in IN O O
the DT O O
SHA-1 NN O O
function NN O O
which WDT O O
affects VBZ O O
the DT O O
value NN O O
of IN O O
the DT O O
2nd JJ O O
word NN O O
for IN O O
that DT O O
round NN O O
and CC O O
ultimately RB O O
the DT O O
whole JJ O O
hash NN O O
for IN O O
long JJ O O
messages NNS O O
. . O O

A DT O O
likely JJ O O
explanation NN O O
of IN O O
how WRB O O
this DT O O
problem NN O O
came VBD O O
to TO O O
be VB O O
is VBZ O O
that IN O O
the DT O O
variable JJ O O
names NNS O O
were VBD O O
changed VBN O O
to TO O O
single JJ O O
letters NNS O O
using VBG O O
an DT O O
automated JJ O O
tool NN O O
prior RB O O
to TO O O
embedding VBG O O
it PRP O O
in IN O O
the DT O O
payload NN O O
. . O O

The DT O O
2 CD O O
f LS O O
variables NNS O O
probably RB O O
had VBD O O
different JJ O O
names NNS O O
in IN O O
the DT O O
original JJ O O
script NN O O
which WDT O O
avoided VBD O O
the DT O O
issue NN O O
. . O O

So IN O O
this DT O O
leaves VBZ O O
us PRP O O
with IN O O
two CD O O
takeaways NNS O O
: : O O
1 CD O O
) CD O O
The DT O O
difference NN O O
in IN O O
the DT O O
hashing VBG O O
algorithm NN O O
was VBD O O
unintentional JJ O O
and CC O O
2 CD O O
) NNS O O
Always RB O O
declare VBP O O
your PRP$ O O
local JJ O O
variables NNS O O
with IN O O
the DT O O
var FW O O
keyword FW O O
. . O O

; : O O
- : O O
) NN O O
We PRP O O
generated VBD O O
the DT O O
list NN O O
of IN O O
Twitter NNP O O
search NN O O
terms NNS O O
for IN O O
2013-2014 CD O O
and CC O O
checked VBD O O
if IN O O
any DT O O
of IN O O
those DT O O
were VBD O O
registered VBN O O
. . O O

At IN O O
the DT O O
moment NN O O
only RB O O
one CD O O
exists VBZ O O
, , O O
@ IN O O
AA2ADcAOAA NN O O
, , O O
which WDT O O
is VBZ O O
the DT O O
TwitterJS NN O O
account NN O O
that WDT O O
was VBD O O
generated VBN O O
between IN O O
August NNP O O
21st JJ O O
and CC O O
27th JJ O O
2013 CD O O
. . O O

This DT O O
account NN O O
has VBZ O O
no DT O O
tweets NNS O O
. . O O

In IN O O
an DT O O
effort NN O O
to TO O O
discover VB O O
potential JJ O O
victims NNS O O
, , O O
we PRP O O
registered VBD O O
the DT O O
Twitter NNP O O
accounts NNS O O
corresponding VBG O O
to TO O O
the DT O O
current JJ O O
week NN O O
both DT O O
for IN O O
the DT O O
main NN O O
and CC O O
TwitterJS NN O O
components NNS O O
and CC O O
set VBD O O
up RP O O
tweets NNS O O
with IN O O
encrypted JJ O O
URLs NNS O O
so IN O O
that IN O O
an DT O O
infected JJ O O
computer NN O O
would MD O O
reach VB O O
out RP O O
to TO O O
our PRP$ O O
server NN O O
. . O O

So RB O O
far RB O O
we PRP O O
have VBP O O
received VBN O O
connections NNS O O
via IN O O
the DT O O
TwitterJS NN O O
accounts NNS O O
from IN O O
four CD O O
computers NNS O O
located JJ O O
in IN O O
Belgium NNP O O
, , O O
France NNP O O
and CC O O
the DT O O
UK NNP O O
. . O O

We PRP O O
have VBP O O
contacted VBN O O
national JJ O O
CERTs NNS O O
to TO O O
notify VB O O
the DT O O
affected VBN O O
parties NNS O O
. . O O

We PRP O O
detect VBP O O
the DT O O
RTF NN O O
exploit VBP O O
document NN O O
as IN O O
Win32/Exploit.CVE-2014-1761.D NN O O
and CC O O
the DT O O
MiniDuke NNP O O
components NNS O O
as IN O O
Win32/SandyEva.G NN O O
. . O O

