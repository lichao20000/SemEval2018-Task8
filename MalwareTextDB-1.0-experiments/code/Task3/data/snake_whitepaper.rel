One CD O O
of IN O O
the DT O O
questions NNS O O
which WDT O O
comes VBZ O O
up RP O O
in IN O O
the DT O O
months NNS O O
after IN O O
big JJ O O
security NN O O
whitepaper NN O O
disclosures NNS O O
is VBZ O O
: : O O
where WRB O O
are VBP O O
they PRP O O
now RB O O
? . O O
In IN O O
other JJ O O
words NNS O O
, , O O
what WP O O
happened VBD O O
to TO O O
the DT O O
operators NNS O O
, , O O
tools NNS O O
, , O O
and CC O O
infrastructure NN O O
which WDT O O
was VBD O O
revealed VBN O O
in IN O O
the DT O O
reports NNS O O
, , O O
blog-posts NNS O O
, , O O
and CC O O
press NN O O
interviews NNS O O
. . O O

Did VBD O O
they PRP O O
continue VBP O O
on IN O O
as RB O O
before RB O O
, , O O
did VBD O O
they PRP O O
re-build VB O O
the DT O O
disclosed VBN O O
infrastructure NN O O
and CC O O
tools NNS O O
, , O O
did VBD O O
they PRP O O
go VB O O
away RB O O
and CC O O
get VB O O
jobs NNS O O
in IN O O
another DT O O
line NN O O
of IN O O
work NN O O
? . O O
In IN O O
some DT O O
cases NNS O O
, , O O
the DT O O
disclosure NN O O
had VBD O O
little JJ O O
, , O O
if IN O O
any DT O O
impact NN O O
on IN O O
the DT O O
operation NN O O
. . O O

For IN O O
example NN O O
, , O O
after IN O O
the DT O O
McAfee FW O O
ShadyRAT FW O O
report NN O O
in IN O O
2011 CD O O
, , O O
there EX O O
was VBD O O
absolutely RB O O
no DT O O
change NN O O
in IN O O
the DT O O
attacks NNS O O
from IN O O
the DT O O
group NN O O
behind IN O O
this DT O O
. . O O

However RB O O
, , O O
when WRB O O
Mandiant NNP O O
released VBD O O
their PRP$ O O
APT1 NN O O
report NN O O
in IN O O
2013 CD O O
, , O O
there EX O O
was VBD O O
a DT O O
noticeable JJ O O
reduction NN O O
in IN O O
activity NN O O
from IN O O
the DT O O
group NN O O
– NN O O
and CC O O
much JJ O O
of IN O O
the DT O O
tools NNS O O
and CC O O
infrastructure NN O O
has VBZ O O
not RB O O
been VBN O O
seen VBN O O
since IN O O
. . O O

In IN O O
the DT O O
September NNP O O
2010 CD O O
issue NN O O
of IN O O
Foreign NNP O O
Affairs NNP O O
magazine NN O O
, , O O
former JJ O O
US NNP O O
Deputy NNP O O
Secretary NNP O O
of IN O O
Defense NNP O O
William NNP O O
J. NNP O O
Lynn NNP O O
discussed VBD O O
a DT O O
cyber-attack NN O O
which WDT O O
happened VBD O O
two CD O O
years NNS O O
previously RB O O
on IN O O
the DT O O
DoD's NN O O
classified JJ O O
computer NN O O
networks NNS O O
. . O O

Lynn NNP O O
described VBD O O
how WRB O O
a DT O O
foreign JJ O O
intelligence NN O O
agency NN O O
planted VBD O O
malicious JJ O O
code NN O O
on IN O O
the DT O O
networks NNS O O
with IN O O
the DT O O
aim NN O O
of IN O O
transferring VBG O O
data NNS O O
to TO O O
servers NNS O O
under IN O O
their PRP$ O O
control NN O O
. . O O

The DT O O
article NN O O
included VBD O O
the DT O O
now RB O O
oft-quoted JJ O O
phrase NN O O
'digital JJ O O
beachhead NN O O
' '' O O
to TO O O
describe VB O O
what WP O O
was VBD O O
undoubtedly RB O O
a DT O O
significant JJ O O
compromise NN O O
of IN O O
US NNP O O
military JJ O O
systems NNS O O
. . O O

Further JJ O O
reports NNS O O
in IN O O
the DT O O
press NN O O
kept VBD O O
the DT O O
story NN O O
alive JJ O O
in IN O O
2011 CD O O
, , O O
but CC O O
since IN O O
then RB O O
this DT O O
threat NN O O
has VBZ O O
received VBN O O
remarkably RB O O
little JJ O O
attention NN O O
. . O O

However RB O O
, , O O
the DT O O
operation NN O O
behind IN O O
the DT O O
attacks NNS O O
has VBZ O O
continued VBN O O
with IN O O
little JJ O O
modification NN O O
to TO O O
the DT O O
tools NNS O O
and CC O O
techniques NNS O O
, , O O
in IN O O
spite NN O O
of IN O O
the DT O O
widespread JJ O O
attention NN O O
a DT O O
few JJ O O
years NNS O O
ago RB O O
. . O O

They PRP B-Entity 1
use VBP O O
highly RB O O
sophisticated JJ O O
malware NN O O
tools NNS O O
to TO O O
maintain VB B-Action 2
persistent JJ B-Entity 3
access NN I-Entity O
to TO I-Entity O
their PRP$ I-Entity O
targets NNS I-Entity O
. . O O

These DT B-Entity 1
tools NNS I-Entity O
can MD O O
be VB B-Action 2
used VBN I-Action O
for IN B-Modifier 3
covert JJ B-Entity 4
communications NNS I-Entity O
in IN B-Modifier 5
a DT B-Entity 6
number NN I-Entity O
of IN I-Entity O
different JJ I-Entity O
modes NNS I-Entity O
, , O O
some DT B-Entity 7
of IN I-Entity O
which WDT I-Entity O
present JJ B-Action 8
significant JJ B-Entity 9
challenges NNS I-Entity O
for IN I-Entity O
traditional JJ I-Entity O
security NN I-Entity O
technologies NNS I-Entity O
to TO I-Entity O
detect VB I-Entity O
. . O O

There EX O O
are VBP O O
some DT O O
threats NNS O O
which WDT O O
come VBP O O
and CC O O
go VBP O O
, , O O
whilst IN O O
there EX O O
are VBP O O
others NNS O O
which WDT O O
are VBP O O
permanent JJ O O
features NNS O O
of IN O O
the DT O O
landscape NN O O
. . O O

In IN O O
this DT O O
paper NN O O
, , O O
we PRP O O
describe VBP O O
the DT O O
tools NNS O O
and CC O O
techniques NNS O O
of IN O O
one CD O O
of IN O O
the DT O O
most RBS O O
sophisticated JJ O O
and CC O O
persistent JJ O O
threats NNS O O
we PRP O O
track VBP O O
. . O O

We PRP O O
hope VBP O O
this DT O O
will MD O O
help VB O O
victims NNS O O
identify VB O O
intrusions NNS O O
and CC O O
understand VB O O
their PRP$ O O
need NN O O
to TO O O
improve VB O O
defences NNS O O
. . O O

Cyber NNP O O
security NN O O
is VBZ O O
a DT O O
collaborative JJ O O
effort NN O O
– CD O O
the DT O O
operation NN O O
described VBN O O
in IN O O
this DT O O
paper NN O O
again RB O O
raises VBZ O O
the DT O O
bar NN O O
for IN O O
the DT O O
security NN O O
community NN O O
in IN O O
their PRP$ O O
efforts NNS O O
to TO O O
keep VB O O
up RP O O
with IN O O
the DT O O
attackers NNS O O
in IN O O
cyber-space NN O O
. . O O

When WRB O O
antivirus JJ O O
back-end JJ O O
classification NN O O
platforms NNS O O
can MD O O
not RB O O
identify VB O O
a DT O O
malware NN O O
family NN O O
for IN O O
an DT O O
analysed JJ O O
malicious JJ O O
sample NN O O
, , O O
they PRP O O
assign VBP O O
generic JJ O O
names NNS O O
, , O O
such JJ O O
as IN O O
'' '' O O
Trojan NNP O O
Horse NNP O O
'' '' O O
or CC O O
'' '' O O
Agent NNP O O
'' '' O O
. . O O

The DT O O
variant JJ O O
letters NNS O O
are VBP O O
also RB O O
assigned VBN O O
automatically RB O O
, , O O
by IN O O
using VBG O O
hexavigesimal JJ O O
( NN O O
or CC O O
Base26 FW O O
) FW O O
notation NN O O
. . O O

That DT O O
is VBZ O O
, , O O
the DT O O
variant JJ O O
letters NNS O O
are VBP O O
auto-assigned JJ O O
starting VBG O O
from IN O O
'' '' O O
A NNP O O
'' '' O O
, , O O
followed VBD O O
with IN O O
'' '' O O
B NN O O
'' '' O O
, , O O
and CC O O
so RB O O
on IN O O
until IN O O
'' '' O O
Z NN O O
'' '' O O
. . O O

Next NNP O O
comes VBZ O O
'' '' O O
AA NNP O O
'' '' O O
, , O O
'' '' O O
AB NNP O O
'' '' O O
and CC O O
so RB O O
on IN O O
, , O O
until IN O O
'' '' O O
ZZ NNP O O
'' '' O O
. . O O

After IN O O
that DT O O
, , O O
the DT O O
variant JJ O O
letters NNS O O
start VBP O O
from IN O O
'' '' O O
AAA NNP O O
'' '' O O
, , O O
'' '' O O
AAB NNP O O
'' '' O O
and CC O O
so RB O O
on IN O O
, , O O
until IN O O
'' '' O O
ZZZ NNP O O
'' '' O O
. . O O

Back NNP O O
in IN O O
2008 CD O O
an DT O O
unknown JJ O O
malicious JJ O O
file NN O O
was VBD O O
discovered VBN O O
and CC O O
auto-classified JJ O O
as IN O O
'' '' O O
Agent.BTZ NN O O
'' '' O O
, , O O
meaning VBG O O
it PRP O O
was VBD O O
registered VBN O O
as IN O O
unknown JJ O O
malicious JJ O O
sample NN O O
# # O O
1,898 CD O O
in IN O O
an DT O O
anti-virus JJ O O
classification NN O O
system NN O O
. . O O

It PRP O O
was VBD O O
n't RB O O
given VBN O O
an DT O O
actual JJ O O
name NN O O
, , O O
only RB O O
a DT O O
generic JJ O O
one CD O O
. . O O

Meanwhile RB O O
, , O O
internally RB O O
the DT O O
authors NNS O O
behind IN O O
this DT O O
malware NN O O
were VBD O O
using VBG O O
their PRP$ O O
own JJ O O
naming NN O O
systems NNS O O
- : O O
with IN O O
specific JJ O O
titles NNS O O
for IN O O
their PRP$ O O
file NN O O
components NNS O O
and CC O O
projects NNS O O
such JJ O O
as IN O O
'' '' O O
snake NN O O
'' '' O O
, , O O
'' '' O O
uroburos NNS O O
'' '' O O
, , O O
'' '' O O
sengoku NN O O
'' '' O O
, , O O
and CC O O
'' '' O O
snark NN O O
'' '' O O
used VBN O O
to TO O O
denote VB O O
variants NNS O O
of IN O O
their PRP$ O O
framework NN O O
. . O O

A DT O O
recent JJ O O
report NN O O
from IN O O
German JJ O O
security NN O O
company NN O O
GData NN O O
described VBD O O
a DT O O
sample NN O O
from IN O O
the DT O O
'' '' O O
uroburos NN O O
'' '' O O
variant NN O O
of IN O O
this DT O O
framework NN O O
. . O O

Their PRP$ O O
report NN O O
revealed VBD O O
the DT O O
complex JJ O O
nature NN O O
of IN O O
this DT O O
malware NN O O
family NN O O
, , O O
and CC O O
showed VBD O O
that IN O O
the DT O O
operation NN O O
behind IN O O
'' '' O O
Agent.BTZ NN O O
'' '' O O
has VBZ O O
continued VBN O O
. . O O

As IN O O
a DT O O
result NN O O
of IN O O
this DT O O
disclosure NN O O
, , O O
we PRP O O
are VBP O O
also RB O O
releasing VBG O O
our PRP$ O O
own JJ O O
technical JJ O O
analysis NN O O
of IN O O
the DT O O
threat NN O O
, , O O
including VBG O O
a DT O O
timeline NN O O
of IN O O
known JJ O O
samples NNS O O
, , O O
known VBN O O
Command-and-Control NNP O O
( NNP O O
C NNP O O
& CC O O
C NNP O O
) NNP O O
servers NNS O O
, , O O
and CC O O
other JJ O O
indicators NNS O O
to TO O O
aid VB O O
investigators NNS O O
in IN O O
discovering VBG O O
attacks NNS O O
. . O O

Reverse JJ O O
engineering NN O O
of IN O O
recent JJ O O
malware NN O O
samples NNS O O
shows VBZ O O
these DT O O
to TO O O
be VB O O
much RB O O
more RBR O O
advanced JJ O O
variants NNS O O
of IN O O
Agent.BTZ NN O O
, , O O
though IN O O
still RB O O
sharing VBG O O
many JJ O O
similarities NNS O O
and CC O O
encryption NN O O
methods NNS O O
with IN O O
the DT O O
original NN O O
. . O O

Further JJ O O
investigation NN O O
allowed VBD O O
us PRP O O
to TO O O
locate VB O O
related JJ O O
samples NNS O O
compiled VBN O O
between IN O O
2006 CD O O
and CC O O
2014 CD O O
, , O O
and CC O O
spanning NN O O
across IN O O
several JJ O O
distinctive JJ O O
generations NNS O O
. . O O

The DT O O
first JJ O O
section NN O O
of IN O O
this DT O O
report NN O O
gives VBZ O O
an DT O O
overview NN O O
of IN O O
the DT O O
samples NNS O O
collected VBN O O
, , O O
where WRB O O
they PRP O O
were VBD O O
reported VBN O O
and CC O O
the DT O O
timelines NNS O O
derived VBN O O
from IN O O
their PRP$ O O
analysis NN O O
. . O O

Snake NNP O O
's POS O O
architecture NN O O
turned VBD O O
out RP O O
to TO O O
be VB O O
quite RB O O
interesting JJ O O
. . O O

We PRP O O
have VBP O O
identified VBN O O
two CD B-Entity 1
distinct JJ I-Entity O
variants NNS I-Entity O
, , O O
both DT O O
highly RB O O
flexible JJ O O
but CC O O
with IN O O
two CD O O
different JJ O O
techniques NNS O O
for IN O O
establishing VBG B-Action 2
and CC I-Action O
maintaining VBG I-Action O
a DT B-Entity 3
presence NN I-Entity O
on IN B-Modifier 4
the DT B-Entity 5
target NN I-Entity O
system NN I-Entity O
. . O O

In IN O O
general JJ O O
, , O O
its PRP$ O O
operation NN O O
relies VBZ O O
on IN O O
kernel NN O O
mode NN O O
drivers NNS O O
, , O O
making VBG O O
it PRP O O
a DT O O
rootkit NN O O
. . O O

It PRP B-Entity 1
is VBZ O O
designed VBN O O
to TO O O
covertly RB B-Action 2
install VB I-Action O
a DT B-Entity 3
backdoor NN I-Entity O
on IN B-Modifier 4
a DT B-Entity 5
compromised VBN I-Entity O
system NN I-Entity O
, , O O
hide VBP B-Action 6
the DT B-Entity 7
presence NN I-Entity O
of IN I-Entity O
its PRP$ I-Entity O
components NNS I-Entity O
, , O O
provide VBP B-Action 8
a DT B-Entity 9
communication NN I-Entity O
mechanism NN I-Entity O
with IN I-Entity O
its PRP$ I-Entity O
C NN I-Entity O
& CC I-Entity O
C NN I-Entity O
servers NNS I-Entity O
, , O O
and CC O O
enable VB B-Action 10
an DT B-Entity 11
effective JJ I-Entity O
data NN I-Entity O
exfiltration NN I-Entity O
mechanism NN I-Entity O
. . O O

At IN O O
the DT O O
same JJ O O
time NN O O
, , O O
Snake NNP O O
exposed VBD O O
a DT O O
flexibility NN O O
to TO O O
conduct VB O O
its PRP$ O O
operations NNS O O
by IN O O
engaging VBG O O
these DT O O
noticeably RB O O
different JJ O O
architectures NNS O O
. . O O

In IN O O
the DT O O
first JJ O O
model NN O O
, , O O
the DT B-Entity 1
network NN I-Entity O
communications NNS I-Entity O
are VBP B-Action 2
carried VBN I-Action O
out RP I-Action O
from IN B-Modifier 3
the DT B-Entity 4
userland NN I-Entity O
- : O O
i.e NN O O
. . O O

the DT O O
area NN O O
of IN O O
the DT O O
computer NN O O
system NN O O
where WRB O O
application NN O O
software NN O O
executes VBZ O O
. . O O

In IN O O
another DT O O
model NN O O
, , O O
the DT B-Entity 1
network NN I-Entity O
communications NNS I-Entity O
are VBP B-Action 2
handled VBN I-Action O
by IN O O
a DT B-Entity 3
kernel NN I-Entity O
mode NN I-Entity O
driver NN I-Entity O
- : O O
i.e NN O O
. . O O

the DT O O
area NN O O
where WRB O O
lower JJR O O
level NN O O
system NN O O
code NN O O
such JJ O O
as IN O O
device NN O O
drivers NNS O O
run VBP O O
. . O O

The DT B-Entity 1
choice NN I-Entity O
of IN I-Entity O
what WDT I-Entity O
architecture NN I-Entity O
should MD I-Entity O
be VB I-Entity O
used VBN I-Entity O
may MD O O
depend VB B-Action 2
on IN I-Action O
a DT B-Entity 3
specific JJ I-Entity O
target NN I-Entity O
's POS I-Entity O
environment NN I-Entity O
, , O O
allowing VBG O O
the DT O O
Snake NNP O O
operators NNS O O
to TO O O
choose VB O O
the DT O O
most RBS O O
suitable JJ O O
architecture NN O O
to TO O O
be VB O O
deployed VBN O O
. . O O

In IN O O
both DT O O
architectures NNS O O
there EX O O
is VBZ O O
a DT B-Entity 1
kernel NN I-Entity O
mode NN I-Entity O
driver NN I-Entity O
installed VBN B-Action 2
and CC O O
a DT B-Entity 3
usermode JJ I-Entity O
DLL NN I-Entity O
injected VBN B-Action 4
by IN O O
the DT B-Entity 5
driver NN I-Entity O
into IN B-Modifier 6
the DT B-Entity 7
system NN I-Entity O
processes NNS I-Entity O
. . O O

In IN O O
both DT O O
architectures NNS O O
, , O O
there EX O O
is VBZ O O
both CC O O
32-bit JJ O O
and CC O O
64-bit JJ O O
code NN O O
involved VBN O O
. . O O

In IN O O
order NN O O
to TO O O
distinguish VB O O
between IN O O
these DT O O
architectures NNS O O
, , O O
we PRP O O
will MD O O
call VB O O
them PRP O O
the DT O O
usermode-centric JJ O O
and CC O O
the DT O O
kernel-centric JJ O O
architectures NNS O O
respectively RB O O
. . O O

The DT O O
remainder NN O O
of IN O O
this DT O O
report NN O O
gives VBZ O O
a DT O O
detailed JJ O O
explanation NN O O
of IN O O
how WRB O O
the DT O O
two CD O O
Snake NNP O O
architectures NNS O O
embed VBD O O
themselves PRP O O
in IN O O
the DT O O
target NN O O
system NN O O
and CC O O
communicate VBP O O
with IN O O
the DT O O
outside JJ O O
world NN O O
. . O O

We PRP O O
have VBP O O
also RB O O
provided VBN O O
a DT O O
set NN O O
of IN O O
technical JJ O O
indicators NNS O O
in IN O O
the DT O O
Appendix NN O O
to TO O O
enable VB O O
organisations NNS O O
and CC O O
the DT O O
security NN O O
research NN O O
community NN O O
to TO O O
identify VB O O
compromises NNS O O
. . O O

In IN O O
total NN O O
we PRP O O
have VBP O O
collected VBN O O
over IN O O
100 CD O O
unique JJ O O
files NNS O O
related VBN O O
to TO O O
this DT O O
espionage NN O O
toolkit NN O O
. . O O

Many JJ O O
of IN O O
these DT O O
were VBD O O
submitted VBN O O
to TO O O
online JJ O O
malware NN O O
analysis NN O O
websites NNS O O
by IN O O
victims NNS O O
and CC O O
investigators NNS O O
over IN O O
several JJ O O
years NNS O O
. . O O

In IN O O
many JJ O O
cases NNS O O
the DT O O
source NN O O
country NN O O
information NN O O
of IN O O
the DT O O
submission NN O O
is VBZ O O
available JJ O O
. . O O

These DT O O
allow VBP O O
us PRP O O
to TO O O
visualise VB O O
the DT O O
distribution NN O O
of IN O O
countries NNS O O
where WRB O O
this DT O O
malware NN O O
has VBZ O O
been VBN O O
seen VBN O O
: : O O
Whilst IN O O
this DT O O
view NN O O
is VBZ O O
likely JJ O O
to TO O O
only RB O O
be VB O O
the DT O O
tip NN O O
of IN O O
the DT O O
iceberg NN O O
, , O O
it PRP O O
does VBZ O O
give VB O O
us PRP O O
an DT O O
initial JJ O O
insight NN O O
into IN O O
the DT O O
profile NN O O
of IN O O
targets NNS O O
for IN O O
the DT O O
Snake NNP O O
operations NNS O O
. . O O

Other JJ O O
useful JJ O O
visualisations NNS O O
of IN O O
the DT O O
operations NNS O O
come VBP O O
from IN O O
the DT O O
compile VBP O O
timestamps NNS O O
. . O O

Below NNP O O
is VBZ O O
shown VBN O O
a DT O O
table NN O O
with IN O O
a DT O O
count NN O O
of IN O O
the DT O O
number NN O O
of IN O O
files NNS O O
in IN O O
our PRP$ O O
sample NN O O
set VBN O O
from IN O O
recent JJ O O
years NNS O O
. . O O

Two CD O O
samples NNS O O
compiled VBN O O
in IN O O
late JJ O O
January NNP O O
2014 CD O O
show VBP O O
that IN O O
this DT O O
activity NN O O
is VBZ O O
ongoing JJ O O
. . O O

Plotting VBG O O
the DT O O
day NN O O
of IN O O
the DT O O
week NN O O
in IN O O
which WDT O O
the DT O O
samples NNS O O
were VBD O O
compiled VBN O O
shows VBZ O O
a DT O O
now RB O O
familiar JJ O O
pattern NN O O
for IN O O
analysts NNS O O
of IN O O
modern JJ O O
cyber-attacks NNS O O
. . O O

The DT O O
creators NNS O O
of IN O O
the DT O O
malware NN O O
operate VBP O O
a DT O O
working VBG O O
week NN O O
, , O O
just RB O O
like IN O O
any DT O O
other JJ O O
professional NN O O
. . O O

The DT O O
single JJ O O
sample NN O O
in IN O O
our PRP$ O O
set NN O O
which WDT O O
was VBD O O
compiled VBN O O
on IN O O
a DT O O
Saturday NNP O O
is VBZ O O
an DT O O
outlier NN O O
, , O O
but CC O O
does VBZ O O
n't RB O O
alter VB O O
the DT O O
conclusion NN O O
. . O O

Similarly RB O O
, , O O
plotting VBG O O
the DT O O
hour NN O O
of IN O O
the DT O O
day NN O O
in IN O O
which WDT O O
the DT O O
samples NNS O O
were VBD O O
compiled VBN O O
reveals VBZ O O
another DT O O
human JJ O O
pattern NN O O
– NN O O
the DT O O
working VBG O O
day NN O O
. . O O

This DT O O
has VBZ O O
been VBN O O
adjusted VBN O O
to TO O O
UTC+4 NN O O
to TO O O
show VB O O
a DT O O
possible JJ O O
fit NN O O
to TO O O
the DT O O
operators NNS O O
' POS O O
local JJ O O
time NN O O
. . O O

The DT O O
usermode-centric JJ O O
architecture NN O O
of IN O O
Snake NNP O O
is VBZ O O
known VBN O O
to TO O O
have VB O O
been VBN O O
used VBN O O
from IN O O
2011 CD O O
till IN O O
2014 CD O O
, , O O
with IN O O
the DT O O
most RBS O O
recent JJ O O
sample NN O O
compiled VBN O O
on IN O O
January NNP O O
28 CD O O
, , O O
2014 CD O O
. . O O

With IN O O
this DT O O
architecture NN O O
, , O O
the DT B-Entity 1
Snake NNP I-Entity O
driver NN I-Entity O
is VBZ O O
mainly RB O O
used VBN O O
to TO O O
load VB B-Action 2
the DT B-Entity 3
DLL NNP I-Entity O
module NN I-Entity O
into IN B-Modifier 4
the DT B-Entity 5
usermode NN I-Entity O
processes NNS I-Entity O
, , O O
and CC O O
then RB O O
use VB B-Action 6
that DT B-Entity 7
module NN I-Entity O
for IN B-Modifier 8
the DT B-Entity 9
communications NNS I-Entity O
. . O O

One CD O O
of IN O O
the DT O O
analysed VBN O O
samples NNS O O
exposed VBD O O
multiple JJ O O
debug NN O O
messages NNS O O
and CC O O
source NN O O
control NN O O
check-in NN O O
logs NNS O O
. . O O

It PRP O O
is VBZ O O
not RB O O
clear JJ O O
why WRB O O
those DT O O
messages NNS O O
were VBD O O
allowed VBN O O
in IN O O
the DT O O
deployed VBN O O
driver NN O O
- : O O
possibly RB O O
an DT O O
operational JJ O O
security NN O O
lapse NN O O
. . O O

However RB O O
, , O O
they PRP O O
give VBP O O
some DT O O
insight NN O O
into IN O O
the DT O O
internal JJ O O
structure NN O O
of IN O O
the DT O O
source NN O O
code NN O O
. . O O

For IN O O
example NN O O
, , O O
the DT O O
analysed JJ O O
driver NN O O
gave VBD O O
away RB O O
the DT O O
following VBG O O
source NN O O
file NN O O
names NNS O O
: : O O
The DT O O
source NN O O
control NN O O
check-in NN O O
log NN O O
examples NNS O O
, , O O
showing VBG O O
the DT O O
names NNS O O
of IN O O
the DT O O
developers NNS O O
to TO O O
be VB O O
'vlad NN O O
' '' O O
and CC O O
'gilg NN O O
' '' O O
: : O O
It PRP O O
also RB O O
exposed VBD O O
the DT O O
project NN O O
name NN O O
of IN O O
this DT O O
particular JJ O O
variant NN O O
as IN O O
'sengoku NN O O
' '' O O
: : O O
Now RB O O
it PRP O O
's VBZ O O
time NN O O
to TO O O
execute VB O O
the DT O O
driver NN O O
and CC O O
see VB O O
what WP O O
it PRP O O
does VBZ O O
. . O O

When WRB O O
first RB O O
executed VBN O O
, , O O
the DT B-Entity 1
driver NN I-Entity O
creates VBZ B-Action 2
device NN B-Entity 3
named VBN I-Entity O
\Device\vstor32 NN I-Entity O
with IN B-Modifier 4
a DT B-Entity 5
symbolic JJ I-Entity O
link NN I-Entity O
\DosDevices\vstor32 NN I-Entity O
. . O O

This DT B-Entity 1
device NN I-Entity O
is VBZ B-Action 2
used VBN I-Action O
for IN B-Modifier 3
userland/kernel NN B-Entity 4
communications NNS I-Entity O
. . O O

Next NNP O O
, , O O
it PRP B-Entity 1
drops VBZ B-Action 2
a DT B-Entity 3
DLL NNP I-Entity O
into IN B-Modifier 4
the DT B-Entity 5
% NN I-Entity O
windows NNS I-Entity O
% NN I-Entity O
directory NN I-Entity O
- : O O
the DT O O
DLL NNP O O
is VBZ O O
carried VBN O O
in IN O O
the DT O O
body NN O O
of IN O O
the DT O O
driver NN O O
as IN O O
a DT O O
binary JJ O O
chunk NN O O
with IN O O
XOR NN B-Entity 6
0xAA NN I-Entity O
applied VBD B-Action 7
on IN B-Modifier 8
top NN I-Modifier O
of IN I-Modifier O
it PRP B-Entity 9
, , O O
so IN O O
the DT O O
driver NN O O
decrypts VBZ O O
it PRP O O
first RB O O
. . O O

Depending VBG O O
on IN O O
the DT O O
variant NN O O
, , O O
the DT B-Entity 1
DLL NNP I-Entity O
is VBZ B-Action 2
dropped VBN I-Action O
either CC O O
under IN B-Modifier 3
a DT B-Entity 4
random JJ I-Entity O
name NN I-Entity O
or CC I-Entity O
a DT I-Entity O
hard-coded JJ I-Entity O
name NN I-Entity O
, , O O
such JJ O O
as IN O O
mscpx32n.dll NN O O
. . O O

The DT O O
purpose NN O O
of IN O O
this DT B-Entity 1
DLL NNP I-Entity O
is VBZ O O
to TO O O
be VB B-Action 2
injected VBN I-Action O
into IN B-Modifier 3
the DT B-Entity 4
user-mode JJ I-Entity O
processes NNS I-Entity O
. . O O

Some DT O O
variants NNS O O
of IN O O
Snake NNP O O
carry VBP O O
the DT O O
DLL NNP B-Entity 1
modules NNS I-Entity O
that WDT O O
can MD O O
be VB B-Action 2
installed VBN I-Action O
as IN B-Modifier 3
a DT B-Entity 4
service NN I-Entity O
, , O O
to TO O O
be VB B-Action 5
run VBN I-Action O
within IN B-Modifier 6
taskhost.exe NN B-Entity 7
or CC I-Entity O
services.exe NN I-Entity O
processes NNS I-Entity O
. . O O

Next NNP O O
, , O O
the DT B-Entity 1
driver NN I-Entity O
sets VBZ B-Action 2
up RP I-Action O
the DT B-Entity 3
hooks NNS I-Entity O
for IN B-Modifier 4
the DT B-Entity 5
following JJ I-Entity O
kernel-mode JJ I-Entity O
APIs NNS I-Entity O
: : O O
After IN O O
that DT O O
, , O O
it PRP B-Entity 6
calls VBZ B-Action 7
PsSetCreateProcessNotifyRoutine FW B-Entity 8
( FW I-Entity O
) NN I-Entity O
in IN O O
order NN O O
to TO O O
be VB B-Action 9
notified VBN I-Action O
whenever WRB B-Modifier 10
a DT B-Entity 11
new JJ I-Entity O
process NN I-Entity O
is VBZ I-Entity O
started VBN I-Entity O
. . O O

The DT O O
handlers NNS O O
of IN O O
the DT O O
hooks NNS O O
above IN O O
along IN O O
with IN O O
the DT O O
notification NN O O
callback NN O O
allow VBP O O
Snake NNP B-Entity 1
to TO O O
stay VB B-Action 2
persistent JJ B-Entity 3
on IN I-Entity O
a DT I-Entity O
system NN I-Entity O
, , O O
being VBG O O
able JJ O O
to TO O O
infect VB B-Action 4
any DT B-Entity 5
newly RB I-Entity O
created VBN I-Entity O
processes NNS I-Entity O
, , O O
and CC O O
restore VB B-Action 6
its PRP$ B-Entity 7
driver NN I-Entity O
file NN I-Entity O
in IN B-Modifier 8
case NN I-Modifier O
it PRP B-Entity 9
gets VBZ I-Entity O
deleted VBN I-Entity O
. . O O

Another DT B-Entity 1
set NN I-Entity O
of IN I-Entity O
hooks NNS I-Entity O
it PRP B-Entity 2
sets VBZ B-Action 3
is VBZ O O
designed VBN O O
to TO O O
hide VB B-Action 4
the DT B-Entity 5
presence NN I-Entity O
of IN I-Entity O
the DT I-Entity O
Snake NNP I-Entity O
components NNS I-Entity O
on IN I-Entity O
the DT I-Entity O
system NN I-Entity O
: : O O
The DT B-Entity 6
driver NN I-Entity O
then RB O O
watches VBZ B-Action 7
for IN B-Modifier 8
all DT B-Entity 9
userland JJ I-Entity O
processes NNS I-Entity O
to TO B-Modifier 10
see VB B-Entity 11
if IN I-Entity O
they PRP I-Entity O
load VBP I-Entity O
any DT I-Entity O
web NN I-Entity O
pages NNS I-Entity O
. . O O

As RB B-Modifier 1
long RB I-Modifier O
as IN I-Modifier O
the DT B-Entity 2
user NN I-Entity O
is VBZ I-Entity O
not RB I-Entity O
using VBG I-Entity O
the DT I-Entity O
Internet NNP I-Entity O
, , O O
Snake NNP B-Entity 3
stays VBZ B-Action 4
dormant JJ B-Entity 5
too RB O O
, , O O
as IN O O
there EX O O
is VBZ O O
no DT O O
process NN O O
that WDT O O
communicates VBZ O O
with IN O O
the DT O O
web NN O O
servers NNS O O
. . O O

However RB O O
, , O O
as RB B-Modifier 1
soon RB I-Modifier O
as IN I-Modifier O
the DT B-Entity 2
user NN I-Entity O
goes VBZ I-Entity O
online NN I-Entity O
, , O O
the DT B-Entity 3
driver NN I-Entity O
intercepts VBZ B-Action 4
that IN B-Entity 5
event NN I-Entity O
and CC O O
then RB O O
immediately RB O O
injects VBZ B-Action 6
the DT B-Entity 7
malicious JJ I-Entity O
DLL NNP I-Entity O
module NN I-Entity O
into IN B-Modifier 8
the DT B-Entity 9
process NN I-Entity O
that WDT I-Entity O
initiated VBD I-Entity O
connection NN I-Entity O
( CD O O
the DT O O
browser NN O O
) NN O O
. . O O

Once RB O O
injected VBN O O
, , O O
the DT B-Entity 1
module NN I-Entity O
initiates VBZ B-Action 2
polling NN B-Entity 3
from IN B-Modifier 4
one CD B-Entity 5
of IN I-Entity O
the DT I-Entity O
hard-coded JJ I-Entity O
C NN I-Entity O
& CC I-Entity O
C NN I-Entity O
servers NNS I-Entity O
. . O O

The DT O O
purpose NN O O
of IN O O
this DT B-Entity 1
behaviour NN I-Entity O
is VBZ O O
to TO O O
blend VB B-Action 2
Snake NNP B-Entity 3
's POS I-Entity O
traffic NN I-Entity O
with IN B-Modifier 4
the DT B-Entity 5
browser NN I-Entity O
traffic NN I-Entity O
, , O O
bypassing VBG B-Action 6
the DT B-Entity 7
firewalls NNS I-Entity O
, , O O
and CC O O
keeping VBG B-Action 8
a DT B-Entity 9
low JJ I-Entity O
profile NN I-Entity O
at IN O O
the DT O O
same JJ O O
time NN O O
. . O O

By IN O O
communicating VBG O O
from IN O O
within IN O O
a DT O O
process NN O O
that WDT O O
also RB O O
communicates VBZ O O
, , O O
even RB O O
a DT O O
technically RB O O
savvy JJ O O
user NN O O
will MD O O
find VB O O
it PRP O O
challenging JJ O O
to TO O O
detect VB O O
Snake NNP O O
traffic NN O O
among IN O O
legitimate JJ O O
traffic NN O O
. . O O

The DT O O
reason NN O O
behind IN O O
such JJ O O
difficulty NN O O
is VBZ O O
because IN O O
modern JJ O O
web NN O O
pages NNS O O
often RB O O
fetch VBP O O
pages NNS O O
from IN O O
the DT O O
different JJ O O
web NN O O
servers NNS O O
, , O O
including VBG O O
such JJ O O
data NNS O O
as IN O O
additional JJ O O
scripts NNS O O
, , O O
CSS NN O O
templates NNS O O
, , O O
advertising NN O O
contents NNS O O
, , O O
analytics NNS O O
data NNS O O
, , O O
blogs NNS O O
, , O O
social JJ O O
networking NN O O
data NNS O O
, , O O
etc FW O O
. . O O

When WRB O O
intercepted VBN O O
with IN O O
the DT O O
purpose NN O O
of IN O O
analysis NN O O
, , O O
such JJ O O
traffic NN O O
may MD O O
literally RB O O
represent VB O O
itself PRP O O
hundreds NNS O O
of IN O O
DNS NNP O O
and CC O O
HTTP NNP O O
requests NNS O O
made VBD O O
when WRB O O
a DT O O
popular JJ O O
website NN O O
, , O O
such JJ O O
as IN O O
a DT O O
news NN O O
website NN O O
is VBZ O O
open JJ O O
. . O O

Hiding VBG B-Action 1
a DT B-Entity 2
few JJ I-Entity O
DNS/HTTP NN I-Entity O
requests NNS I-Entity O
among IN B-Modifier 3
busy JJ B-Entity 4
network NN I-Entity O
traffic NN I-Entity O
allows VBZ O O
Snake NNP B-Entity 5
rootkit NN I-Entity O
to TO O O
stay VB B-Action 6
unnoticed JJ B-Entity 7
. . O O

In IN O O
order NN O O
to TO O O
test VB O O
Snake NNP O O
's POS O O
communications NNS O O
with IN O O
the DT O O
C NN O O
& CC O O
C NN O O
servers NNS O O
, , O O
and CC O O
still RB O O
being VBG O O
able JJ O O
to TO O O
clearly RB O O
distinguish VB O O
its PRP$ O O
traffic NN O O
, , O O
a DT O O
small JJ O O
tool NN O O
was VBD O O
built VBN O O
to TO O O
generate VB O O
GET VB O O
request NN O O
to TO O O
a DT O O
web NN O O
server NN O O
running VBG O O
on IN O O
the DT O O
analysed JJ O O
system NN O O
. . O O

The DT O O
tool NN O O
was VBD O O
named VBN O O
as IN O O
chrome.exe NN O O
in IN O O
order NN O O
to TO O O
trigger VB O O
the DT O O
malware NN O O
communications NNS O O
. . O O

As RB O O
long RB O O
as IN O O
the DT O O
test NN O O
tool NN O O
named VBN O O
chrome.exe NN O O
did VBD O O
not RB O O
make VB O O
any DT O O
requests NNS O O
, , O O
its PRP$ O O
memory NN O O
stayed VBD O O
pristine JJ O O
. . O O

There EX O O
were VBD O O
no DT O O
injections NNS O O
made VBN O O
by IN O O
the DT O O
driver NN O O
. . O O

As RB O O
soon RB O O
as IN O O
the DT O O
tool NN O O
made VBD O O
its PRP$ O O
first JJ O O
GET VB O O
requests NNS O O
, , O O
the DT B-Entity 1
driver NN I-Entity O
immediately RB O O
injected VBD B-Action 2
a DT B-Entity 3
malicious JJ I-Entity O
DLL NN I-Entity O
module NN I-Entity O
in IN B-Modifier 4
it PRP B-Entity 5
, , O O
and CC O O
that IN B-Entity 6
module NN I-Entity O
started VBD B-Action 7
producing VBG B-Entity 8
the DT I-Entity O
following JJ I-Entity O
traffic NN I-Entity O
: : O O
↓ CD O O
The DT B-Entity 9
domain NN I-Entity O
names NNS I-Entity O
of IN I-Entity O
the DT I-Entity O
C NN I-Entity O
& CC I-Entity O
C NN I-Entity O
servers NNS I-Entity O
it PRP B-Entity 10
relies VBZ B-Action 11
on IN I-Action O
are VBP O O
hard-coded JJ O O
in IN O O
the DT O O
body NN O O
of IN O O
the DT O O
malware NN O O
. . O O

Some DT O O
examples NNS O O
are VBP O O
given VBN O O
below IN O O
, , O O
and CC O O
a DT O O
full JJ O O
list NN O O
of IN O O
known JJ O O
domains NNS O O
is VBZ O O
given VBN O O
in IN O O
the DT O O
Appendix NN O O
D NN O O
: : O O
As IN O O
seen VBN O O
in IN O O
the DT O O
traffic NN O O
dump NN O O
above IN O O
, , O O
the DT B-Entity 1
malware NN I-Entity O
first RB O O
resolves VBZ B-Action 2
the DT B-Entity 3
domain NN I-Entity O
name NN I-Entity O
of IN I-Entity O
its PRP$ I-Entity O
C NNP I-Entity O
& CC I-Entity O
C NNP I-Entity O
. . O O

Next NNP O O
, , O O
it PRP B-Entity 1
fetches VBZ B-Action 2
a DT B-Entity 3
file NN I-Entity O
/D/pub.txt NN I-Entity O
, , O O
and CC O O
expects VBZ B-Action 4
the DT B-Entity 5
server NN I-Entity O
to TO I-Entity O
respond VB I-Entity O
with IN I-Entity O
a DT I-Entity O
string NN I-Entity O
'' '' I-Entity O
1 CD I-Entity O
'' '' I-Entity O
, , I-Entity O
acknowledging VBG I-Entity O
it PRP I-Entity O
's VBZ I-Entity O
active JJ I-Entity O
: : O O
Once RB O O
acknowledged VBD O O
, , O O
it PRP B-Entity 6
asks VBZ B-Action 7
the DT B-Entity 8
server NN I-Entity O
for IN B-Modifier 9
a DT B-Entity 10
command NN I-Entity O
, , O O
and CC O O
the DT B-Entity 11
server NN I-Entity O
returns VBZ B-Action 12
a DT B-Entity 13
new JJ I-Entity O
command NN I-Entity O
to TO I-Entity O
execute VB I-Entity O
: : O O
The DT B-Entity 14
command NN I-Entity O
it PRP B-Entity 15
receives VBZ B-Action 16
from IN B-Modifier 17
C NNP B-Entity 18
& CC I-Entity O
C NNP I-Entity O
above IN O O
( NNP O O
swim.onlinewebshop.net NNP O O
) NNP O O
is VBZ B-Action 19
encrypted VBN I-Action O
. . O O

In IN O O
order NN O O
to TO O O
decrypt VB B-Action 1
it PRP B-Entity 2
, , O O
the DT B-Entity 3
malware NN I-Entity O
first RB O O
applies VBZ B-Action 4
the DT B-Entity 5
XOR NN I-Entity O
mask NN I-Entity O
to TO B-Modifier 6
the DT B-Entity 7
bytes NNS I-Entity O
that WDT I-Entity O
start VBP I-Entity O
from IN I-Entity O
offset VBN I-Entity O
0x40 NN I-Entity O
: : O O
An DT O O
identical JJ O O
XOR NN O O
mask NN O O
was VBD O O
also RB O O
used VBN O O
by IN O O
Agent.BTZ NNP O O
. . O O

Next NNP O O
, , O O
it PRP B-Entity 1
calculates VBZ B-Action 2
and CC I-Action O
confirms VBZ I-Action O
a DT B-Entity 3
CRC32 NN I-Entity O
checksum NN I-Entity O
within IN B-Modifier 4
the DT B-Entity 5
command NN I-Entity O
, , O O
further RB O O
decrypts VBZ B-Action 6
the DT B-Entity 7
data NNS I-Entity O
by IN B-Modifier 8
using VBG B-Entity 9
the DT I-Entity O
Number NNP I-Entity O
Theory NNP I-Entity O
Library NNP I-Entity O
( NNP I-Entity O
NTL NNP I-Entity O
) NNP I-Entity O
, , O O
and CC O O
makes VBZ B-Action 10
sure JJ I-Action O
the DT B-Entity 11
command NN I-Entity O
is VBZ I-Entity O
destined VBN I-Entity O
to TO I-Entity O
the DT I-Entity O
current JJ I-Entity O
host NN I-Entity O
by IN B-Modifier 12
matching VBG B-Entity 13
the DT I-Entity O
ID NNP I-Entity O
field NN I-Entity O
in IN I-Entity O
it PRP I-Entity O
. . O O

Once RB O O
decrypted VBN O O
, , O O
the DT B-Entity 1
malware NN I-Entity O
interprets VBZ B-Action 2
the DT B-Entity 3
received JJ I-Entity O
command NN I-Entity O
, , O O
as IN O O
reflected VBN O O
in IN O O
the DT O O
malware NN O O
log NN O O
below IN O O
( NN O O
the DT O O
new JJ O O
C NN O O
& CC O O
C NN O O
server NN O O
address NN O O
is VBZ O O
highlighted VBN O O
in IN O O
it PRP O O
) CD O O
: : O O
After IN O O
that DT O O
, , O O
the DT B-Entity 4
malware NN I-Entity O
connects VBZ B-Action 5
to TO B-Modifier 6
the DT B-Entity 7
new JJ I-Entity O
C NNP I-Entity O
& CC I-Entity O
C NNP I-Entity O
, , O O
asking VBG B-Action 8
it PRP B-Entity 9
for IN B-Modifier 10
another DT B-Entity 11
command NN I-Entity O
: : O O
The DT B-Entity 12
command NN I-Entity O
it PRP B-Entity 13
receives VBZ B-Action 14
is VBZ O O
called VBN O O
UpLoad NNP O O
, , O O
so IN O O
it PRP B-Entity 15
uploads VBZ B-Action 16
all PDT B-Entity 17
the DT I-Entity O
collected VBN I-Entity O
logs NNS I-Entity O
to TO B-Modifier 18
the DT B-Entity 19
server NN I-Entity O
, , O O
and CC O O
then RB O O
cleans VBZ B-Action 20
out RP I-Action O
those DT B-Entity 21
logs NNS I-Entity O
: : O O
The DT B-Entity 22
files NNS I-Entity O
it PRP B-Entity 23
uploads VBZ B-Action 24
are VBP O O
stored VBN O O
inside IN O O
its PRP$ O O
home NN O O
directory NN O O
% NN O O
windows NNS O O
% NN O O
\ CD O O
$ $ O O
NtUninstallQ FW O O
[ FW O O
random JJ O O
] NN O O
$ $ O O
, , O O
where WRB O O
[ JJ O O
random JJ O O
] NN O O
is VBZ O O
a DT O O
random JJ O O
number NN O O
. . O O

For IN O O
example NN O O
, , O O
Snake NNP O O
's POS O O
home NN O O
directory NN O O
could MD O O
be VB O O
C NN O O
: : O O
\WINDOWS\ NN O O
$ $ O O
NtUninstallQ812589 JJ O O
$ $ O O
. . O O

The DT B-Entity 1
files NNS I-Entity O
within IN I-Entity O
that DT I-Entity O
directory NN I-Entity O
are VBP B-Action 2
used VBN I-Action O
by IN O O
the DT O O
rootkit NN B-Entity 3
to TO O O
store NN B-Action 4
configuration NN B-Entity 5
and CC I-Entity O
log NN I-Entity O
data NNS I-Entity O
. . O O

When WRB O O
decrypted VBN O O
with IN O O
the DT O O
same JJ O O
XOR NN O O
key NN O O
that WDT O O
was VBD O O
used VBN O O
by IN O O
Agent.BTZ NN O O
, , O O
these DT O O
files NNS O O
expose VBP O O
the DT O O
following JJ O O
contents NNS O O
: : O O
Analysis NN O O
of IN O O
the DT O O
sample NN O O
reveals VBZ O O
that IN O O
it PRP B-Entity 1
supports VBZ B-Action 2
3 CD B-Entity 3
modes NNS I-Entity O
of IN I-Entity O
fetching VBG I-Entity O
C NN I-Entity O
& CC I-Entity O
C NN I-Entity O
commands NNS I-Entity O
. . O O

• NN O O
In IN O O
the DT O O
first JJ O O
mode NN O O
, , O O
it PRP B-Entity 1
relies VBZ B-Action 2
on IN I-Action O
Windows NNP B-Entity 3
Internet NNP I-Entity O
( FW I-Entity O
WinINet FW I-Entity O
) FW I-Entity O
APIs NNS I-Entity O
, , I-Entity O
such JJ I-Entity O
as IN I-Entity O
HttpOpenRequest NNP I-Entity O
( NNP I-Entity O
) NNP I-Entity O
, , I-Entity O
HttpSendRequest NNP I-Entity O
( NNP I-Entity O
) NNP I-Entity O
, , I-Entity O
InternetReadFile NNP I-Entity O
( NNP I-Entity O
) NNP I-Entity O
, , I-Entity O
etc FW I-Entity O
. . O O

• NN O O
In IN O O
the DT O O
second JJ O O
mode NN O O
, , O O
it PRP B-Entity 1
uses VBZ B-Action 2
Windows NNP B-Entity 3
Sockets NNP I-Entity O
2 CD I-Entity O
( FW I-Entity O
Winsock FW I-Entity O
) FW I-Entity O
APIs NNS I-Entity O
, , I-Entity O
such JJ I-Entity O
as IN I-Entity O
WSAStartup NNP I-Entity O
( NNP I-Entity O
) NNP I-Entity O
, , I-Entity O
socket NN I-Entity O
( FW I-Entity O
) FW I-Entity O
, , I-Entity O
connect VB I-Entity O
( FW I-Entity O
) FW I-Entity O
, , I-Entity O
send VB I-Entity O
( FW I-Entity O
) FW I-Entity O
, , I-Entity O
etc FW I-Entity O
. . O O

• NN O O
In IN O O
the DT O O
third JJ O O
mode NN O O
, , O O
it PRP B-Entity 1
works VBZ B-Action 2
in IN B-Modifier 3
the DT B-Entity 4
'pipe NN I-Entity O
server NN I-Entity O
' '' I-Entity O
mode NN I-Entity O
, , O O
when WRB O O
it PRP B-Entity 5
passes VBZ B-Action 6
the DT B-Entity 7
web NN I-Entity O
requests NNS I-Entity O
it PRP I-Entity O
is VBZ I-Entity O
interested JJ I-Entity O
in FW I-Entity O
( FW I-Entity O
as IN I-Entity O
a DT I-Entity O
client NN I-Entity O
) NN I-Entity O
to TO B-Modifier 8
the DT B-Entity 9
pipe NN I-Entity O
server NN I-Entity O
that WDT I-Entity O
runs VBZ I-Entity O
within IN I-Entity O
Windows NNP I-Entity O
Explorer NNP I-Entity O
( NNP I-Entity O
explorer.exe NNP I-Entity O
) NNP I-Entity O
and/or CC I-Entity O
Internet NNP I-Entity O
Explorer NNP I-Entity O
( FW I-Entity O
iexplore.exe FW I-Entity O
) FW I-Entity O
processes NNS I-Entity O
. . O O

Memory NN O O
pipes NNS O O
is VBZ O O
a DT O O
common JJ O O
mechanism NN O O
for IN O O
Inter-Process NNP O O
Communications NNPS O O
( FW O O
IPC FW O O
) FW O O
. . O O

When WRB O O
the DT O O
pipe NN O O
server NN O O
reads VBZ O O
such JJ O O
requests NNS O O
from IN O O
the DT O O
pipes NNS O O
, , O O
it PRP O O
performs VBZ O O
the DT O O
web NN O O
request NN O O
on IN O O
behalf NN O O
of IN O O
a DT O O
client NN O O
by IN O O
using VBG O O
WinINet NNP O O
APIs NNS O O
, , O O
so IN O O
it PRP O O
effectively RB O O
serves VBZ O O
as IN O O
a DT O O
proxy NN O O
. . O O

The DT O O
diagram NN O O
below IN O O
demonstrates VBZ O O
the DT O O
last JJ O O
, , O O
'pipe JJ O O
server NN O O
' '' O O
mode NN O O
of IN O O
Snake NNP O O
operation NN O O
: : O O
The DT O O
diagram NN O O
illustrates VBZ O O
the DT O O
operation NN O O
steps NNS O O
1-4 CD O O
: : O O
1 CD O O
First NNP O O
, , O O
the DT B-Entity 1
malicious JJ I-Entity O
driver NN I-Entity O
with IN I-Entity O
the DT I-Entity O
embedded JJ I-Entity O
DLL NNP I-Entity O
module NN I-Entity O
injects VBZ B-Action 2
that IN B-Entity 3
DLL NNP I-Entity O
into IN B-Modifier 4
a DT B-Entity 5
system NN I-Entity O
process NN I-Entity O
, , I-Entity O
such JJ I-Entity O
as IN I-Entity O
services.exe NN I-Entity O
; : O O
once RB O O
loaded VBN O O
, , O O
the DT B-Entity 6
DLL NNP I-Entity O
will MD O O
function VB B-Action 7
in IN B-Modifier 8
the DT B-Entity 9
'pipe NN I-Entity O
server NN I-Entity O
' '' I-Entity O
mode NN I-Entity O
. . O O

2 CD O O
As RB O O
soon RB O O
as IN O O
the DT B-Entity 1
driver NN I-Entity O
detects VBZ B-Action 2
a DT B-Entity 3
usermode NN I-Entity O
process NN I-Entity O
that WDT I-Entity O
goes VBZ I-Entity O
online JJ I-Entity O
( FW I-Entity O
e.g FW I-Entity O
. . I-Entity O
a DT I-Entity O
browser NN I-Entity O
) NN I-Entity O
, , O O
it PRP B-Entity 4
will MD O O
inject VB B-Action 5
malicious JJ B-Entity 6
DLL NNP I-Entity O
module NN I-Entity O
into IN B-Modifier 7
it PRP B-Entity 8
; : O O
depending VBG O O
on IN O O
the DT O O
operational JJ O O
mode NN O O
, , O O
the DT B-Entity 9
DLL NNP I-Entity O
may MD O O
start VB B-Action 10
communicating VBG B-Entity 11
with IN I-Entity O
C NN I-Entity O
& CC I-Entity O
C NN I-Entity O
directly RB I-Entity O
. . O O

3 CD O O
In IN O O
the DT O O
'pipe NN O O
mode NN O O
' '' O O
of IN O O
operation NN O O
, , O O
the DT B-Entity 1
injected VBN I-Entity O
DLL NNP I-Entity O
will MD O O
start VB B-Action 2
communicating VBG B-Entity 3
with IN I-Entity O
the DT I-Entity O
pipe NN I-Entity O
server NN I-Entity O
by IN O O
sending VBG B-Action 4
messages NNS B-Entity 5
into IN B-Modifier 6
the DT B-Entity 7
established JJ I-Entity O
inter-process JJ I-Entity O
communication NN I-Entity O
pipes NNS I-Entity O
. . O O

4 CD O O
Once RB O O
the DT B-Entity 1
task NN I-Entity O
of IN I-Entity O
communication NN I-Entity O
with IN I-Entity O
C NNP I-Entity O
& CC I-Entity O
C NNP I-Entity O
is VBZ B-Action 2
delegated VBN I-Action O
to TO B-Modifier 3
the DT B-Entity 4
pipe NN I-Entity O
server NN I-Entity O
, , O O
it PRP B-Entity 5
will MD O O
start VB B-Action 6
communicating VBG B-Entity 7
with IN I-Entity O
the DT I-Entity O
C NN I-Entity O
& CC I-Entity O
C NN I-Entity O
, , O O
bypassing VBG B-Action 8
the DT B-Entity 9
host-based JJ I-Entity O
firewalls NNS I-Entity O
that WDT I-Entity O
keep VBP I-Entity O
an DT I-Entity O
infected JJ I-Entity O
system NN I-Entity O
process NN I-Entity O
in IN I-Entity O
a DT I-Entity O
white-list NN I-Entity O
. . O O

The DT O O
reason NN O O
behind IN O O
the DT B-Entity 1
pipes NNS I-Entity O
usage NN I-Entity O
is VBZ O O
to TO O O
'legitimise VB B-Action 2
' '' I-Action O
the DT B-Entity 3
outbound JJ I-Entity O
web NN I-Entity O
requests NNS I-Entity O
, , O O
forcing VBG O O
them PRP O O
to TO O O
originate VB O O
from IN O O
the DT O O
host NN O O
firewall- JJ O O
friendly JJ O O
system NN O O
services NNS O O
. . O O

Pipe NNP O O
server NN O O
is VBZ O O
a DT O O
special JJ O O
mode NN O O
of IN O O
the DT O O
injected VBN O O
DLL NNP O O
. . O O

In IN O O
order NN O O
to TO O O
switch VB O O
into IN O O
that DT O O
mode NN O O
, , O O
a DT B-Entity 1
dedicated JJ I-Entity O
thread NN I-Entity O
is VBZ B-Action 2
spawned VBN I-Action O
to TO O O
listen VB B-Action 3
for IN B-Modifier 4
IPC NNP B-Entity 5
messages NNS I-Entity O
received VBD I-Entity O
through IN I-Entity O
the DT I-Entity O
pipes NNS I-Entity O
. . O O

The DT O O
memory NN O O
pipes NNS O O
used VBN O O
by IN O O
Snake NNP O O
are VBP O O
named VBN O O
as IN O O
: : O O
Apart RB O O
from IN O O
GET VB B-Entity 1
/ / O O
POST VB B-Entity 2
requests NNS I-Entity O
, , O O
the DT B-Entity 3
pipe NN I-Entity O
clients NNS I-Entity O
( VBP I-Entity O
infected JJ I-Entity O
usermode NN I-Entity O
processes NNS I-Entity O
) NN I-Entity O
may MD O O
also RB O O
ask VB B-Action 4
the DT B-Entity 5
pipe NN I-Entity O
server NN I-Entity O
to TO O O
perform VB B-Action 6
other JJ O O
operations NNS O O
on IN O O
their PRP$ O O
behalf NN O O
, , O O
such JJ O O
as IN O O
saving VBG B-Action 7
data NNS B-Entity 8
into IN B-Modifier 9
a DT B-Entity 10
temporary JJ I-Entity O
file NN I-Entity O
, , O O
copy VB B-Action 11
/ / O O
delete VB B-Action 12
files NNS B-Entity 13
, , O O
save VB B-Action 14
configuration NN B-Entity 15
data NNS I-Entity O
into IN B-Modifier 16
the DT B-Entity 17
registry NN I-Entity O
under IN B-Modifier 18
the DT B-Entity 19
aforementioned JJ I-Entity O
ShellCore NN I-Entity O
value NN I-Entity O
. . O O

This DT B-Entity 1
delegation NN I-Entity O
of IN I-Entity O
tasks NNS I-Entity O
is VBZ O O
designed VBN O O
to TO O O
keep VB B-Action 2
infected JJ B-Entity 3
processes NNS I-Entity O
under IN B-Modifier 4
the DT B-Entity 5
radar NN I-Entity O
of IN I-Entity O
the DT I-Entity O
behavioural JJ I-Entity O
analysis NN I-Entity O
tools NNS I-Entity O
for IN B-Modifier 6
as RB B-Entity 7
long JJ I-Entity O
as IN I-Entity O
possible JJ I-Entity O
. . O O

Another DT O O
reason NN O O
is VBZ O O
to TO O O
overcome VB B-Action 1
account NN B-Entity 2
restrictions NNS I-Entity O
imposed VBN I-Entity O
on IN I-Entity O
a DT I-Entity O
browser NN I-Entity O
process NN I-Entity O
in IN O O
order NN O O
to TO O O
be VB O O
able JJ O O
to TO O O
write VB B-Action 3
into IN B-Modifier 4
files NNS B-Entity 5
/ / O O
registry NN B-Entity 6
. . O O

To TO O O
delegate VB O O
different JJ O O
types NNS O O
of IN O O
tasks NNS O O
, , O O
the DT B-Entity 1
clients NNS I-Entity O
send VBP B-Action 2
messages NNS B-Entity 3
to TO B-Modifier 4
the DT B-Entity 5
pipe NN I-Entity O
server NN I-Entity O
using VBG B-Modifier 6
the DT B-Entity 7
following VBG I-Entity O
task NN I-Entity O
identification NN I-Entity O
headers NNS I-Entity O
: : O O
The DT B-Entity 8
usermode JJ I-Entity O
component NN I-Entity O
of IN I-Entity O
Snake NNP I-Entity O
communicates VBZ B-Action 9
with IN B-Modifier 10
its PRP$ B-Entity 11
kernel-mode JJ I-Entity O
driver NN I-Entity O
via IN B-Modifier 12
a DT B-Entity 13
device NN I-Entity O
called VBN I-Entity O
\\.\vstor32 FW I-Entity O
( FW I-Entity O
created VBN I-Entity O
under IN I-Entity O
kernel NN I-Entity O
as IN I-Entity O
\Device\vstor32 FW I-Entity O
) FW I-Entity O
. . O O

In IN O O
its PRP$ O O
communication NN O O
protocol NN O O
with IN O O
the DT O O
driver NN O O
it PRP O O
uses VBZ O O
the DT O O
IOCTL NNP O O
code NN O O
of IN O O
0x222038 NN O O
. . O O

To TO O O
write VB B-Action 1
data NNS B-Entity 2
, , O O
it PRP B-Entity 3
opens VBZ B-Action 4
the DT B-Entity 5
device NN I-Entity O
with IN B-Modifier 6
CreateFile FW B-Entity 7
( FW I-Entity O
'' '' I-Entity O
\\.\vstor32 NN I-Entity O
'' '' I-Entity O
) NN I-Entity O
, , O O
then RB O O
calls VBZ B-Action 8
DeviceIoControl NNP B-Entity 9
( NNP I-Entity O
) NNP I-Entity O
API NNP I-Entity O
on IN B-Modifier 10
its PRP$ B-Entity 11
handle VB I-Entity O
with IN B-Modifier 12
IOCTL NN B-Entity 13
code NN I-Entity O
of IN I-Entity O
0x222038 NN I-Entity O
. . O O

Configuration NN O O
parameters NNS O O
along IN O O
with IN O O
the DT B-Entity 1
initial JJ I-Entity O
set NN I-Entity O
of IN I-Entity O
domain NN I-Entity O
names NNS I-Entity O
are VBP B-Action 2
hard-coded JJ I-Action O
within IN B-Modifier 3
the DT B-Entity 4
body NN I-Entity O
of IN I-Entity O
the DT I-Entity O
DLL NNP I-Entity O
. . O O

However RB O O
, , O O
the DT O O
data NN O O
appears VBZ O O
to TO O O
be VB O O
defined VBN O O
in IN O O
the DT O O
structures NNS O O
, , O O
so IN O O
it PRP O O
is VBZ O O
very RB O O
likely JJ O O
the DT O O
DLL NNP O O
could MD O O
be VB O O
generated VBN O O
by IN O O
a DT O O
stand-alone JJ O O
builder NN O O
that WDT O O
'patches VBZ O O
' '' O O
the DT O O
DLL NNP O O
with IN O O
the DT O O
new/updated JJ O O
list NN O O
of IN O O
C NNP O O
& CC O O
C NNP O O
. . O O

Analysis NNP O O
of IN O O
the DT B-Entity 1
commands NNS I-Entity O
performed VBN B-Action 2
by IN O O
the DT B-Entity 3
malware NN I-Entity O
suggests VBZ O O
the DT O O
following JJ O O
capabilities NNS O O
: : O O
Together RB O O
, , O O
these DT B-Entity 4
commands NNS I-Entity O
provide VBP B-Action 5
complete JJ B-Entity 6
backdoor JJ I-Entity O
functionality NN I-Entity O
, , O O
allowing VBG B-Action 7
remote JJ B-Entity 8
attacker NN I-Entity O
full JJ B-Entity 9
control NN I-Entity O
over IN I-Entity O
the DT I-Entity O
compromised VBN I-Entity O
system NN I-Entity O
. . O O

The DT O O
ability NN O O
to TO O O
update VB B-Action 1
the DT B-Entity 2
driver NN I-Entity O
and CC O O
then RB O O
rely VB B-Action 3
on IN I-Action O
its PRP$ B-Entity 4
communication NN I-Entity O
capabilities NNS I-Entity O
means VBZ O O
that IN O O
the DT O O
components NNS O O
of IN O O
Snake NNP O O
are VBP O O
flexible JJ O O
, , O O
making VBG O O
possible JJ O O
the DT O O
existence NN O O
of IN O O
the DT O O
hybrid NN O O
( NN O O
kernel-centric JJ O O
and CC O O
usermode-centric JJ O O
) NN O O
architectures NNS O O
. . O O

For IN O O
example NN O O
, , O O
the DT O O
virtual JJ O O
partitions NNS O O
are VBP O O
used VBN O O
by IN O O
kernel-centric JJ O O
Snake NNP O O
variants NNS O O
, , O O
where WRB O O
the DT B-Entity 1
kernel-mode JJ I-Entity O
driver NN I-Entity O
is VBZ B-Action 2
responsible JJ B-Entity 3
for IN I-Entity O
the DT I-Entity O
communications NNS I-Entity O
. . O O

If IN O O
such PDT B-Entity 1
a DT I-Entity O
driver NN I-Entity O
is VBZ B-Action 2
installed VBN I-Action O
via IN B-Modifier 3
an DT B-Entity 4
update VBP I-Entity O
, , O O
the DT B-Entity 5
usermode NN I-Entity O
component NN I-Entity O
can MD O O
be VB B-Action 6
instructed VBN I-Action O
to TO O O
delegate VB O O
the DT O O
file NN O O
upload NN O O
task NN O O
to TO O O
the DT O O
driver NN O O
by IN O O
copying VBG B-Action 7
all PDT B-Entity 8
the DT I-Entity O
necessary JJ I-Entity O
logs NNS I-Entity O
into IN B-Modifier 9
the DT B-Entity 10
shared JJ I-Entity O
virtual JJ I-Entity O
partition NN I-Entity O
, , O O
physically RB O O
located JJ O O
on IN O O
the DT O O
compromised VBN O O
host NN O O
and CC O O
thus RB O O
, , O O
accessible JJ O O
from IN O O
kernel NN O O
. . O O

This DT O O
particular JJ O O
architecture NN O O
relies VBZ O O
on IN O O
a DT B-Entity 1
kernel-mode JJ I-Entity O
driver NN I-Entity O
to TO O O
carry VB B-Action 2
out RP I-Action O
the DT B-Entity 3
network NN I-Entity O
communications NNS I-Entity O
. . O O

The DT B-Entity 1
usermode JJ I-Entity O
DLLs NNS I-Entity O
are VBP B-Action 2
still RB I-Action O
injected VBN I-Action O
into IN B-Modifier 3
the DT B-Entity 4
system NN I-Entity O
processes VBZ I-Entity O
to TO B-Modifier 5
perform VB B-Entity 6
high-level JJ I-Entity O
tasks NNS I-Entity O
. . O O

The DT O O
delivery NN O O
mechanism NN O O
is VBZ O O
not RB O O
known VBN O O
: : O O
it PRP B-Entity 1
may MD O O
be VB B-Action 2
distributed VBN I-Action O
via IN B-Modifier 3
a DT O O
thumb-drive JJ O O
, , O O
a DT B-Entity 4
phishing NN I-Entity O
email NN I-Entity O
attachment NN I-Entity O
, , O O
or CC O O
be VB B-Action 5
delivered VBN I-Action O
via IN B-Modifier 6
an DT B-Entity 7
exploit VB I-Entity O
across IN I-Entity O
the DT I-Entity O
network NN I-Entity O
( FW O O
e.g FW O O
. . O O

by IN O O
using VBG O O
the DT O O
reconnaissance NN O O
tool NN O O
that WDT O O
is VBZ O O
explained VBN O O
later JJ O O
) NN O O
. . O O

Infection NN B-Entity 1
starts VBZ B-Action 2
from IN B-Modifier 3
a DT B-Entity 4
dropper NN I-Entity O
penetrating VBG I-Entity O
into IN I-Entity O
the DT I-Entity O
compromised VBN I-Entity O
system NN I-Entity O
where WRB I-Entity O
it PRP I-Entity O
is VBZ I-Entity O
allowed VBN I-Entity O
to TO I-Entity O
run VB I-Entity O
. . O O

Once RB O O
executed VBN B-Action 1
, , O O
the DT B-Entity 2
dropper NN I-Entity O
installs VBZ B-Action 3
the DT B-Entity 4
kernel NN I-Entity O
mode NN I-Entity O
driver NN I-Entity O
in IN B-Modifier 5
a DT B-Entity 6
pre-defined JJ I-Entity O
location NN I-Entity O
. . O O

The DT O O
dropper NN O O
itself PRP O O
is VBZ O O
32-bit JJ O O
, , O O
so IN O O
it PRP O O
will MD O O
run VB O O
both DT O O
on IN O O
32-bit JJ O O
and CC O O
64-bit JJ O O
Windows NNP O O
OS NNP O O
( NNP O O
in IN O O
WoW64 NN O O
mode NN O O
) NN O O
. . O O

On IN B-Modifier 1
a DT B-Entity 2
32-bit JJ I-Entity O
OS NN I-Entity O
, , O O
it PRP B-Entity 3
will MD O O
install VB B-Action 4
a DT B-Entity 5
32-bit JJ I-Entity O
driver NN I-Entity O
. . O O

On IN B-Modifier 1
a DT B-Entity 2
64-bit JJ I-Entity O
OS NN I-Entity O
, , O O
it PRP B-Entity 3
will MD O O
install VB B-Action 4
a DT B-Entity 5
64-bit JJ I-Entity O
driver NN I-Entity O
. . O O

The DT B-Entity 1
analysed VBN I-Entity O
32-bit JJ I-Entity O
dropper NN I-Entity O
creates VBZ B-Action 2
a DT B-Entity 3
driver NN I-Entity O
in IN B-Modifier 4
the DT B-Entity 5
following JJ I-Entity O
location NN I-Entity O
: : O O
However RB O O
, , O O
different JJ O O
samples NNS O O
may MD O O
use VB O O
a DT O O
different JJ O O
path NN O O
and CC O O
driver NN O O
file NN O O
name NN O O
. . O O

For IN O O
example NN O O
, , O O
some DT O O
samples NNS O O
exposed VBD O O
these DT O O
filenames NNS O O
: : O O
fdisk32.sys NNS O O
, , O O
A0009547.sys NNS O O
, , O O
or CC O O
Ultra3.sys NNS O O
. . O O

The DT O O
filename NN O O
of IN O O
the DT O O
dropper NN O O
could MD O O
be VB O O
rknginst.exe NN O O
or CC O O
fdiskmon.exe NN O O
. . O O

Once RB O O
executed VBN O O
, , O O
the DT O O
driver NN O O
first RB O O
makes VBZ O O
sure JJ O O
it PRP O O
is VBZ O O
registered VBN O O
under IN O O
a DT O O
pre-defined JJ O O
name NN O O
, , O O
such JJ O O
as IN O O
Ultra3 NN O O
. . O O

Other JJ O O
samples NNS O O
may MD O O
have VB O O
a DT O O
different JJ O O
registration NN O O
name NN O O
, , O O
such JJ O O
as IN O O
~ROOT NN O O
. . O O

The DT B-Entity 1
registration NN I-Entity O
is VBZ B-Action 2
ensured VBN I-Action O
with IN B-Modifier 3
creation NN B-Entity 4
of IN I-Entity O
the DT I-Entity O
following VBG I-Entity O
registry NN I-Entity O
entries NNS I-Entity O
: : O O
The DT B-Entity 5
driver NN I-Entity O
then RB O O
flags NNS B-Action 6
the DT B-Entity 7
following JJ I-Entity O
events NNS I-Entity O
with IN B-Modifier 8
the DT B-Entity 9
notification NN I-Entity O
purposes NNS I-Entity O
: : O O
The DT B-Entity 10
rootkit NN I-Entity O
then RB O O
places VBZ B-Action 11
a DT B-Entity 12
number NN I-Entity O
of IN I-Entity O
the DT I-Entity O
hooks NNS I-Entity O
. . O O

The DT O O
first JJ O O
API NN O O
it PRP B-Entity 1
hooks VBZ B-Action 2
is VBZ O O
IoCreateDevice NNP B-Entity 3
( NNP I-Entity O
) NNP I-Entity O
. . O O

The DT B-Entity 1
installed JJ I-Entity O
hook NN I-Entity O
handler NN I-Entity O
calls VBZ B-Action 2
the DT B-Entity 3
original JJ I-Entity O
API NN I-Entity O
and CC O O
then RB O O
checks NNS B-Action 4
if IN B-Entity 5
the DT I-Entity O
name NN I-Entity O
of IN I-Entity O
the DT I-Entity O
device NN I-Entity O
is VBZ I-Entity O
netbt NN I-Entity O
or CC I-Entity O
afd NN I-Entity O
. . O O

If IN O O
so RB O O
, , O O
it PRP B-Entity 1
will MD O O
install VB B-Action 2
a DT B-Entity 3
TDI NNP I-Entity O
filter NN I-Entity O
driver NN I-Entity O
. . O O

If IN O O
the DT O O
device NN O O
name NN O O
is VBZ O O
Null NNP O O
, , O O
Beep NNP O O
, , O O
tcpip NN O O
or CC O O
Nsiproxy NNP O O
, , O O
it PRP O O
will MD O O
activate VB O O
itself PRP O O
by IN O O
enabling VBG O O
its PRP$ B-Entity 1
hooks NNS I-Entity O
designed VBN O O
to TO O O
hide VB B-Action 2
the DT B-Entity 3
presence NN I-Entity O
of IN I-Entity O
Snake NNP I-Entity O
on IN I-Entity O
a DT I-Entity O
system NN I-Entity O
, , O O
set VBN O O
up RP O O
its PRP$ O O
access NN O O
control NN O O
lists NNS O O
and CC O O
the DT O O
messaging NN O O
system NN O O
. . O O

In IN O O
order NN O O
to TO O O
hide VB B-Action 1
its PRP$ B-Entity 2
components NNS I-Entity O
, , O O
the DT B-Entity 3
driver NN I-Entity O
hooks VBZ B-Action 4
the DT B-Entity 5
following JJ I-Entity O
APIs NNS I-Entity O
: : O O
For IN O O
example NN O O
, , O O
the DT B-Entity 6
hook NN I-Entity O
handlers NNS I-Entity O
of IN I-Entity O
the DT I-Entity O
registry-related JJ I-Entity O
APIs NNS I-Entity O
will MD O O
block VB B-Action 7
access NN B-Entity 8
to TO I-Entity O
the DT I-Entity O
registry NN I-Entity O
entries NNS I-Entity O
that WDT I-Entity O
contain VBP I-Entity O
the DT I-Entity O
name NN I-Entity O
of IN I-Entity O
the DT I-Entity O
driver NN I-Entity O
. . O O

In IN O O
one CD O O
example NN O O
, , O O
the DT B-Entity 1
rootkit NN I-Entity O
blocks VBZ B-Action 2
access NN B-Entity 3
to TO I-Entity O
registry NN I-Entity O
entries NNS I-Entity O
that WDT I-Entity O
contain VBP I-Entity O
the DT I-Entity O
strings NNS I-Entity O
'' '' I-Entity O
Ultra3 NN I-Entity O
'' '' I-Entity O
and CC I-Entity O
'' '' I-Entity O
~ROOT NNP I-Entity O
'' '' I-Entity O
. . O O

The DT B-Entity 1
ZwReadFile NNP I-Entity O
( NNP I-Entity O
) NNP I-Entity O
hook NN I-Entity O
handler NN I-Entity O
will MD O O
block VB B-Action 2
access NN B-Entity 3
to TO I-Entity O
the DT I-Entity O
home NN I-Entity O
directory NN I-Entity O
where WRB I-Entity O
the DT I-Entity O
rootkit NN I-Entity O
keeps VBZ I-Entity O
its PRP$ I-Entity O
file NN I-Entity O
. . O O

In IN O O
one CD O O
of IN O O
the DT O O
analysed VBN O O
kernel-centric JJ O O
Snake NNP O O
samples NNS O O
the DT O O
home NN O O
directory NN O O
was VBD O O
hard-coded JJ O O
as IN O O
% JJ O O
windows NNS O O
% NN O O
\ CD O O
$ $ O O
NtUninstallQ817473 JJ O O
$ $ O O
, , O O
so IN O O
it PRP B-Entity 1
blocked VBD B-Action 2
file NN B-Entity 3
read NN I-Entity O
access NN I-Entity O
from IN I-Entity O
that DT I-Entity O
directory NN I-Entity O
. . O O

The DT B-Entity 1
ZwClose FW I-Entity O
( FW I-Entity O
) FW I-Entity O
hook NN I-Entity O
handler NN I-Entity O
is VBZ O O
used VBN O O
to TO O O
inject VB B-Action 2
the DT B-Entity 3
DLL NNP I-Entity O
module NN I-Entity O
into IN B-Modifier 4
the DT B-Entity 5
userland NN I-Entity O
processes NNS I-Entity O
. . O O

The DT B-Entity 1
hook NN I-Entity O
handler NN I-Entity O
for IN I-Entity O
ZwTerminateProcess NNP I-Entity O
( NNP I-Entity O
) NNP I-Entity O
checks NNS B-Action 2
if IN B-Entity 3
the DT I-Entity O
process NN I-Entity O
being VBG I-Entity O
shut VBN I-Entity O
down RP I-Entity O
is VBZ I-Entity O
svchost.exe NNP I-Entity O
. . O O

If IN O O
so RB O O
, , O O
it PRP O O
considers VBZ O O
it PRP O O
to TO O O
be VB O O
a DT O O
system NN O O
shutdown NN O O
, , O O
so IN O O
it PRP B-Entity 1
unloads VBZ B-Action 2
its PRP$ B-Entity 3
usermode NN I-Entity O
DLL NN I-Entity O
and CC O O
deactivates VBZ B-Action 4
its PRP$ B-Entity 5
own JJ I-Entity O
network NN I-Entity O
drivers NNS I-Entity O
, , O O
just RB O O
like IN O O
it PRP O O
does VBZ O O
when WRB O O
its PRP$ O O
ZwShutdownSystem NNP O O
( FW O O
) FW O O
hook NN O O
handler NN O O
gets VBZ O O
invoked VBN O O
. . O O

The DT B-Entity 1
ObOpenObjectByName NNP I-Entity O
( NNP I-Entity O
) NNP I-Entity O
hook NN I-Entity O
is VBZ O O
designed VBN O O
to TO O O
hide VB B-Action 2
the DT B-Entity 3
presence NN I-Entity O
of IN I-Entity O
its PRP$ I-Entity O
virtual JJ I-Entity O
partitions NNS I-Entity O
( RB O O
described VBN O O
later JJ O O
) NN O O
. . O O

To TO O O
encrypt VB B-Action 1
data NNS B-Entity 2
stored VBN I-Entity O
on IN I-Entity O
its PRP$ I-Entity O
virtual JJ I-Entity O
partitions NNS I-Entity O
, , O O
the DT B-Entity 3
driver NN I-Entity O
sets VBZ B-Action 4
a DT B-Entity 5
hook NN I-Entity O
for IN I-Entity O
another DT I-Entity O
API NNP I-Entity O
: : O O
To TO O O
re-infect VB B-Action 6
the DT B-Entity 7
usermode NN I-Entity O
process NN I-Entity O
svchost.exe NN I-Entity O
and CC O O
to TO O O
re-enable VB B-Action 8
its PRP$ B-Entity 9
network NN I-Entity O
drivers NNS I-Entity O
, , O O
the DT B-Entity 10
rootkit NN I-Entity O
hooks VBZ B-Action 11
these DT B-Entity 12
APIs NNS I-Entity O
: : O O
Snake NNP O O
then RB O O
proceeds VBZ O O
to TO O O
the DT O O
task NN O O
of IN O O
deep JJ O O
packet NN O O
inspection NN O O
and CC O O
modification NN O O
. . O O

In IN O O
order NN O O
to TO O O
accomplish VB O O
it PRP O O
, , O O
it PRP B-Entity 1
registers VBZ B-Action 2
a DT B-Entity 3
callout NN I-Entity O
driver NN I-Entity O
for IN I-Entity O
Windows NNP I-Entity O
Filtering NNP I-Entity O
Platform NNP I-Entity O
( NNP I-Entity O
WFP NNP I-Entity O
) NNP I-Entity O
, , O O
an DT O O
architecture NN O O
first RB O O
introduced VBN O O
with IN O O
Windows NNP O O
Vista NNP O O
and CC O O
nowadays RB O O
normally RB O O
used VBN O O
by IN O O
antivirus NN O O
and/or CC O O
intrusion NN O O
detection NN O O
systems NNS O O
to TO O O
inspect/block JJ O O
malicious JJ O O
traffic NN O O
. . O O

Snake NNP O O
sets VBZ O O
filters NNS O O
at IN O O
the DT O O
layers NNS O O
FWPMLAYERSTREAMV4 NN O O
and CC O O
FWPMLAYERALEFLOWESTABLISHEDV4 NN O O
in IN O O
the DT O O
TCP/ NNP O O
IP NNP O O
stack VB O O
, , O O
so IN O O
that IN O O
its PRP$ B-Entity 1
callout NN I-Entity O
driver NN I-Entity O
is VBZ B-Action 2
notified VBN I-Action O
whenever WRB B-Modifier 3
a DT B-Entity 4
TCP NN I-Entity O
connection NN I-Entity O
is VBZ I-Entity O
established VBN I-Entity O
by IN I-Entity O
a DT I-Entity O
browser NN I-Entity O
. . O O

When WRB O O
that DT O O
happens VBZ O O
, , O O
the DT B-Entity 1
rootkit NN I-Entity O
triggers VBZ B-Action 2
an DT B-Entity 3
event NN I-Entity O
named VBN I-Entity O
\BaseNamedObjects\wininetactivate NN I-Entity O
. . O O

When WRB B-Modifier 1
the DT B-Entity 2
data NN I-Entity O
arrives VBZ I-Entity O
, , O O
it PRP B-Entity 3
is VBZ B-Action 4
intercepted VBN I-Action O
with IN B-Modifier 5
the DT B-Entity 6
FwpsCopyStreamDataToBuffer0 NN I-Entity O
( FW I-Entity O
) FW I-Entity O
API NN I-Entity O
, , O O
and CC O O
then RB O O
scanned VBN B-Action 7
for IN B-Modifier 8
the DT B-Entity 9
presence NN I-Entity O
of IN I-Entity O
the DT I-Entity O
hidden JJ I-Entity O
commands NNS I-Entity O
from IN I-Entity O
C NNP I-Entity O
& CC I-Entity O
C NNP I-Entity O
. . O O

The DT B-Entity 1
driver NN I-Entity O
inspects VBZ B-Action 2
bidirectional JJ B-Entity 3
network NN I-Entity O
data NNS I-Entity O
on IN B-Modifier 4
a DT B-Entity 5
per IN I-Entity O
stream NN I-Entity O
basis NN I-Entity O
, , O O
as IN O O
it PRP O O
's VBZ O O
located JJ O O
right RB O O
on IN O O
the DT O O
stream NN O O
data NNS O O
path NN O O
. . O O

An DT O O
ability NN O O
to TO O O
manipulate VB B-Action 1
data NNS B-Entity 2
streams NNS I-Entity O
is VBZ O O
provided VBN O O
with IN O O
the DT O O
packet NN O O
injection NN O O
logic NN O O
below IN O O
, , O O
allowing VBG O O
Snake NNP B-Entity 3
to TO O O
covertly RB O O
insert VB B-Action 4
traffic NN B-Entity 5
destined VBN I-Entity O
to TO I-Entity O
its PRP$ I-Entity O
C NN I-Entity O
& CC I-Entity O
C NN I-Entity O
servers NNS I-Entity O
: : O O
In IN O O
order NN O O
to TO O O
qualify VB O O
as IN O O
a DT O O
browser NN O O
, , O O
the DT O O
usermode NN O O
process NN O O
must MD O O
have VB O O
any DT O O
of IN O O
the DT O O
following JJ O O
names NNS O O
: : O O
In IN O O
addition NN O O
to TO O O
WFP NNP O O
, , O O
Snake NNP B-Entity 6
also RB O O
hooks VBZ B-Action 7
the DT B-Entity 8
Transport NNP I-Entity O
Driver NN I-Entity O
Interface NNP I-Entity O
( NNP I-Entity O
TDI NNP I-Entity O
) NNP I-Entity O
network NN I-Entity O
routines NNS I-Entity O
by IN B-Modifier 9
setting VBG B-Entity 10
itself PRP I-Entity O
up RP I-Entity O
as IN I-Entity O
a DT I-Entity O
TDI NNP I-Entity O
filter NN I-Entity O
driver NN I-Entity O
. . O O

TDI NNP O O
is VBZ O O
considered VBN O O
deprecated VBN O O
and CC O O
will MD O O
be VB O O
removed VBN O O
in IN O O
future JJ O O
versions NNS O O
of IN O O
Microsoft NNP O O
Windows NNP O O
, , O O
but CC O O
it PRP O O
's VBZ O O
still RB O O
supported VBN O O
on IN O O
Windows NNP O O
7 CD O O
. . O O

Being VBG O O
registered VBN B-Action 1
as IN B-Modifier 2
a DT B-Entity 3
TDI NNP I-Entity O
driver NN I-Entity O
on IN B-Modifier 4
the DT B-Entity 5
device NN I-Entity O
stack VBP I-Entity O
, , O O
Snake NNP B-Entity 6
hooks VBZ B-Action 7
TCP NN B-Entity 8
calls NNS I-Entity O
. . O O

This DT O O
way NN O O
it PRP B-Entity 1
intercepts VBZ B-Action 2
all DT B-Entity 3
requests NNS I-Entity O
along IN I-Entity O
with IN I-Entity O
their PRP$ I-Entity O
parameters NNS I-Entity O
via IN B-Modifier 4
IRP NNP B-Entity 5
( NNP I-Entity O
IO NNP I-Entity O
request NN I-Entity O
package NN I-Entity O
) CD I-Entity O
hooks NNS I-Entity O
. . O O

By IN O O
'sniffing NN O O
' '' O O
all PDT O O
the DT O O
requests NNS O O
, , O O
it PRP B-Entity 1
can MD O O
now RB O O
inspect VB B-Action 2
the DT B-Entity 3
traffic NN I-Entity O
, , O O
looking VBG B-Action 4
for IN I-Action O
and CC I-Action O
then RB I-Action O
parsing VBG I-Action O
GET VB B-Entity 5
/ / I-Entity O
POST VB I-Entity O
HTTP NNP I-Entity O
requests NNS I-Entity O
and CC I-Entity O
also RB I-Entity O
SMTP NNP I-Entity O
communications NNS I-Entity O
, , O O
in IN O O
order NN O O
to TO O O
distinguish VB B-Action 6
commands NNS B-Entity 7
addressed VBN I-Entity O
to TO I-Entity O
itself PRP I-Entity O
. . O O

If IN O O
the DT B-Entity 1
rootkit NN I-Entity O
detects VBZ B-Action 2
that IN B-Modifier 3
the DT B-Entity 4
OS NN I-Entity O
version NN I-Entity O
is VBZ I-Entity O
pre-Vista NNP I-Entity O
( NNP I-Entity O
e.g NNP I-Entity O
. . I-Entity O
Windows NNP I-Entity O
XP NN I-Entity O
) CD I-Entity O
or CC I-Entity O
Windows NNP I-Entity O
Server NN I-Entity O
2008 CD I-Entity O
( FW I-Entity O
e.g FW I-Entity O
. . I-Entity O
Windows NNP I-Entity O
Server NN I-Entity O
2003 CD I-Entity O
) NN I-Entity O
, , O O
it PRP B-Entity 5
will MD O O
invoke VB B-Action 6
FwpsStreamInjectAsync0 NNP B-Entity 7
( NNP I-Entity O
) NNP I-Entity O
API NNP I-Entity O
in IN O O
order NN O O
to TO O O
generate VB B-Action 8
outbound NN B-Entity 9
requests NNS I-Entity O
. . O O

Whenever NNP B-Modifier 1
the DT B-Entity 2
client NN I-Entity O
establishes VBZ I-Entity O
connections NNS I-Entity O
, , O O
the DT B-Entity 3
TDI NNP I-Entity O
driver NN I-Entity O
will MD O O
also RB O O
'pulse VB B-Action 4
' '' I-Action O
the DT B-Entity 5
\BaseNamedObjects\wininetactivate NN I-Entity O
event NN I-Entity O
, , O O
just RB O O
like IN O O
the DT O O
WPF NNP O O
driver NN O O
's POS O O
component NN O O
of IN O O
it PRP O O
, , O O
in IN O O
order NN O O
to TO O O
notify VB O O
the DT O O
userland NN O O
service NN O O
about IN O O
the DT O O
event NN O O
. . O O

The DT B-Entity 1
data NNS I-Entity O
that IN O O
the DT B-Entity 2
driver NN I-Entity O
intercepts NNS B-Action 3
, , O O
along IN O O
with IN O O
the DT O O
important JJ O O
notifications NNS O O
, , O O
is VBZ O O
passed VBN O O
to TO O O
the DT O O
userland NN O O
DLL NNP O O
to TO O O
be VB O O
processed VBN O O
. . O O

If IN B-Modifier 1
the DT B-Entity 2
data NN I-Entity O
contains VBZ I-Entity O
commands NNS I-Entity O
from IN I-Entity O
C NNP I-Entity O
& CC I-Entity O
C NNP I-Entity O
, , O O
the DT B-Entity 3
DLL NNP I-Entity O
module NN I-Entity O
is VBZ O O
expected VBN O O
to TO O O
execute VB B-Action 4
them PRP B-Entity 5
and CC O O
report NN O O
results NNS O O
back RB O O
to TO O O
the DT B-Entity 6
driver NN I-Entity O
to TO O O
be VB B-Action 7
delivered VBN I-Action O
back RB B-Modifier 8
to TO I-Modifier O
C NNP B-Entity 9
& CC I-Entity O
C NNP I-Entity O
. . O O

For IN O O
NDIS NN O O
versions NNS O O
5.X NNP O O
, , O O
Snake NNP O O
rootkit NN O O
contains VBZ O O
code NN B-Entity 1
that WDT O O
installs VBZ B-Action 2
NDIS NN B-Entity 3
filter NN I-Entity O
intermediate JJ I-Entity O
driver NN I-Entity O
. . O O

This DT B-Entity 1
driver NN I-Entity O
is VBZ B-Action 2
set VBN I-Action O
up RP I-Action O
above IN B-Modifier 3
a DT B-Entity 4
miniport NN I-Entity O
driver NN I-Entity O
( CD O O
a DT O O
driver NN O O
that WDT O O
communicates VBZ O O
with IN O O
the DT O O
physical JJ O O
device NN O O
) NN O O
and CC O O
below IN B-Modifier 5
a DT B-Entity 6
protocol NN I-Entity O
driver NN I-Entity O
( CD O O
a DT O O
driver NN O O
that WDT O O
implements VBZ O O
a DT O O
protocol NN O O
, , O O
e.g NN O O
. . O O

TCP/IP FW O O
) FW O O
. . O O

The DT B-Entity 1
driver NN I-Entity O
is VBZ B-Action 2
registered VBN I-Action O
with IN B-Modifier 3
NdisIMRegisterLayeredMiniport NNP B-Entity 4
( NNP I-Entity O
) NNP I-Entity O
API NNP I-Entity O
. . O O

After IN O O
that DT O O
, , O O
the DT B-Entity 1
drivers NNS I-Entity O
hooks VBZ B-Action 2
the DT B-Entity 3
following JJ I-Entity O
exports NNS I-Entity O
within IN B-Modifier 4
ndis.sys NNS B-Entity 5
: : O O
The DT O O
rootkit NN O O
contains VBZ O O
code NN B-Entity 6
that WDT O O
installs VBZ B-Action 7
NDIS NN B-Entity 8
filter NN I-Entity O
driver NN I-Entity O
for IN I-Entity O
NDIS NN I-Entity O
6.0 CD I-Entity O
and CC I-Entity O
above JJ I-Entity O
: : O O
NDIS NN B-Entity 9
filter NN I-Entity O
driver NN I-Entity O
configuration NN I-Entity O
is VBZ B-Action 10
stored VBN I-Action O
in IN B-Modifier 11
the DT B-Entity 12
registry NN I-Entity O
entry NN I-Entity O
: : O O
The DT B-Entity 13
driver NN I-Entity O
is VBZ B-Action 14
registered VBN I-Action O
with IN B-Modifier 15
NdisFRegisterFilterDriver NNP B-Entity 16
( NNP I-Entity O
) NNP I-Entity O
API NNP I-Entity O
. . O O

After IN O O
that DT O O
, , O O
the DT B-Entity 1
drivers NNS I-Entity O
hooks VBZ B-Action 2
the DT B-Entity 3
following JJ I-Entity O
exports NNS I-Entity O
within IN B-Modifier 4
ndis.sys NNP B-Entity 5
( NNP I-Entity O
for IN I-Entity O
NDIS NNP I-Entity O
6.0 CD I-Entity O
) NN I-Entity O
: : O O
Another DT B-Entity 6
set NN I-Entity O
of IN I-Entity O
exports NNS I-Entity O
it PRP B-Entity 7
attempts VBZ O O
to TO O O
hook NN B-Action 8
in IN B-Modifier 9
ndis.sys NNP B-Entity 10
( NNP I-Entity O
for IN I-Entity O
NDIS NNP I-Entity O
6.0 CD I-Entity O
) NN I-Entity O
is VBZ O O
: : O O
With IN O O
the DT B-Entity 11
hooks NNS I-Entity O
installed VBN B-Action 12
, , O O
whenever WRB O O
the DT O O
network NN O O
adapter NN O O
driver NN O O
attempts VBZ O O
to TO O O
register VB O O
to TO O O
NDIS NNP O O
, , O O
or CC O O
whenever WRB O O
there EX O O
is VBZ O O
an DT O O
attempt NN O O
to TO O O
install VB O O
NDIS NNP O O
intermediate JJ O O
driver NN O O
or CC O O
NDIS NN O O
filter NN O O
driver NN O O
, , O O
the DT B-Entity 13
hook NN I-Entity O
handlers NNS I-Entity O
will MD O O
register VB B-Action 14
Snake NNP B-Entity 15
's POS I-Entity O
own JJ I-Entity O
MiniportXxx NNP I-Entity O
functions NNS I-Entity O
with IN B-Modifier 16
the DT B-Entity 17
NDIS NN I-Entity O
library NN I-Entity O
. . O O

With IN O O
its PRP$ O O
own JJ O O
miniport NN O O
handler NN O O
functions NNS O O
, , O O
it PRP B-Entity 1
can MD O O
send VB B-Action 2
/ / O O
receive VB B-Action 3
data NNS B-Entity 4
by IN B-Modifier 5
using VBG B-Entity 6
a DT I-Entity O
private JJ I-Entity O
TCP/IP NN I-Entity O
stack VBP I-Entity O
, , O O
bypassing VBG B-Action 7
all DT B-Entity 8
firewall NN I-Entity O
hooks NNS I-Entity O
, , O O
and CC O O
making VBG B-Action 9
its PRP$ B-Entity 10
open JJ I-Entity O
ports NNS I-Entity O
invisible JJ B-Entity 11
to TO I-Entity O
scanners NNS I-Entity O
. . O O

The DT B-Entity 1
Snake NNP I-Entity O
rootkit NN I-Entity O
registers VBZ B-Action 2
itself PRP B-Entity 3
as IN B-Modifier 4
Network NNP B-Entity 5
Driver NN I-Entity O
Interface NNP I-Entity O
Specification NNP I-Entity O
( FW I-Entity O
NDIS FW I-Entity O
) FW I-Entity O
protocol NN I-Entity O
driver NN I-Entity O
. . O O

Whenever NNP O O
the DT B-Entity 1
underlying VBG I-Entity O
miniport NN I-Entity O
driver NN I-Entity O
receives VBZ B-Action 2
data NNS B-Entity 3
from IN B-Modifier 4
the DT B-Entity 5
network NN I-Entity O
, , O O
it PRP B-Entity 6
calls VBZ O O
NDIS NN O O
by IN O O
invoking VBG B-Action 7
a DT B-Entity 8
data NNS I-Entity O
receive VBP I-Entity O
indication NN I-Entity O
function NN I-Entity O
NdisMIndicateReceiveNetBufferLists NNP I-Entity O
( NNP I-Entity O
) NNP I-Entity O
. . O O

When WRB O O
that DT O O
happens VBZ O O
, , O O
NDIS NNP B-Entity 1
invokes VBZ B-Action 2
Snake NNP B-Entity 3
's POS I-Entity O
hook NN I-Entity O
function NN I-Entity O
( FW O O
ProtocolReceiveNetBufferLists FW O O
) NN O O
to TO O O
process VB O O
the DT O O
received JJ O O
data NNS O O
. . O O

To TO O O
send VB B-Action 1
the DT B-Entity 2
data NNS I-Entity O
back RB O O
, , O O
the DT B-Entity 3
protocol NN I-Entity O
driver NN I-Entity O
defines VBZ B-Action 4
the DT B-Entity 5
data NNS I-Entity O
in IN B-Modifier 6
a DT B-Entity 7
list NN I-Entity O
of IN I-Entity O
NETBUFFERLIST NN I-Entity O
structures NNS I-Entity O
, , O O
and CC O O
then RB O O
passes VBZ O O
them PRP O O
to TO O O
NDIS NNP O O
by IN O O
calling VBG B-Action 8
NdisSendNetBufferLists NNP B-Entity 9
( NNP I-Entity O
) NNP I-Entity O
. . O O

NDIS NNP B-Entity 1
, , O O
in IN O O
turn NN O O
, , O O
calls VBZ B-Action 2
the DT B-Entity 3
miniport FW I-Entity O
driver's FW I-Entity O
MiniportSendNetBufferLists FW I-Entity O
( FW I-Entity O
) FW I-Entity O
function NN I-Entity O
to TO O O
forward RB O O
the DT O O
data NNS O O
to TO O O
an DT O O
underlying JJ O O
miniport NN O O
driver NN O O
. . O O

Being VBG O O
able JJ O O
to TO O O
fully RB O O
manipulate VB B-Action 1
traffic NN B-Entity 2
at IN B-Modifier 3
3 CD B-Entity 4
different JJ I-Entity O
levels NNS I-Entity O
( FW I-Entity O
NDIS FW I-Entity O
protocol NN I-Entity O
driver NN I-Entity O
, , I-Entity O
TDI NN I-Entity O
Driver NN I-Entity O
, , I-Entity O
and CC I-Entity O
WPF FW I-Entity O
callout FW I-Entity O
driver NN I-Entity O
) NN I-Entity O
, , O O
Snake NNP B-Entity 5
is VBZ O O
able JJ O O
to TO O O
'inject VB B-Action 6
' '' I-Action O
the DT B-Entity 7
traffic NN I-Entity O
into IN B-Modifier 8
existing VBG B-Entity 9
communications NNS I-Entity O
to TO O O
reach VB B-Action 10
out RP I-Action O
to TO B-Modifier 11
external JJ B-Entity 12
components NNS I-Entity O
, , O O
and CC O O
at IN O O
the DT O O
same JJ O O
time NN O O
parse VB B-Action 13
all DT B-Entity 14
incoming JJ I-Entity O
traffic NN I-Entity O
to TO O O
detect VB B-Action 15
traffic NN B-Entity 16
addressed VBN I-Entity O
to TO I-Entity O
itself PRP I-Entity O
: : O O
As IN O O
the DT B-Entity 17
driver NN I-Entity O
intercepts VBZ B-Action 18
all DT B-Entity 19
connections NNS I-Entity O
( FW O O
e.g FW O O
. . O O

on IN O O
TDIRECEIVE NNP O O
TDI NNP O O
event NN O O
or CC O O
ClientEventReceive NNP O O
( NNP O O
) NNP O O
event NN O O
notification NN O O
triggered VBD O O
through IN O O
its PRP$ O O
TDI NNP O O
Filter NNP O O
Driver NN O O
) NN O O
, , O O
it PRP B-Entity 1
parses VBZ B-Action 2
all DT B-Entity 3
incoming JJ I-Entity O
HTTP NN I-Entity O
and CC I-Entity O
SMTP NN I-Entity O
traffic NN I-Entity O
to TO O O
see VB O O
if IN O O
it PRP B-Entity 4
can MD O O
be VB B-Action 5
authenticated VBN I-Action O
as IN B-Modifier 6
Snake NNP B-Entity 7
traffic NN I-Entity O
. . O O

The DT B-Entity 1
authentication NN I-Entity O
is VBZ B-Action 2
implemented VBN I-Action O
by IN O O
decrypting VBG B-Action 3
the DT B-Entity 4
data NNS I-Entity O
and CC O O
making VBG B-Action 5
sure JJ I-Action O
it PRP B-Entity 6
starts VBZ I-Entity O
with IN I-Entity O
the DT I-Entity O
markers NNS I-Entity O
0xDEADBEAF NN I-Entity O
and CC I-Entity O
0xC001BA5E NN I-Entity O
( NN I-Entity O
which WDT I-Entity O
appear VBP I-Entity O
to TO I-Entity O
derive VB I-Entity O
from IN I-Entity O
'DEAD NNP I-Entity O
BEEF NNP I-Entity O
' POS I-Entity O
and CC I-Entity O
'COOL NNP I-Entity O
BASE NNP I-Entity O
' POS I-Entity O
) NN I-Entity O
. . O O

Here RB O O
are VBP O O
specific JJ O O
steps NNS O O
: : O O
By IN O O
observing VBG O O
such JJ O O
behaviour NN O O
, , O O
one CD O O
might NN O O
wonder NN O O
why WRB O O
the DT O O
driver NN O O
is VBZ O O
expecting VBG O O
HTTP NN O O
or CC O O
SMTP NN O O
clients NNS O O
? . O O
Why WRB O O
does VBZ O O
it PRP O O
act VB O O
like IN O O
HTTP/SMTP NN O O
server NN O O
processing NN O O
client NN O O
traffic NN O O
, , O O
and CC O O
serving VBG O O
back RB O O
normal JJ O O
responses NNS O O
as IN O O
per IN O O
the DT O O
protocol NN O O
? . O O
For IN O O
example NN O O
, , O O
in IN O O
HTTP NNP O O
the DT B-Entity 1
driver NN I-Entity O
will MD O O
respond VB B-Action 2
with IN B-Modifier 3
messages NNS B-Entity 4
like IN I-Entity O
'' '' I-Entity O
HTTP/1.1 NN I-Entity O
200 CD I-Entity O
OK JJ I-Entity O
'' '' I-Entity O
or CC I-Entity O
'' '' I-Entity O
HTTP/1.1 NN I-Entity O
500 CD I-Entity O
Server NN I-Entity O
Error NN I-Entity O
'' '' I-Entity O
. . O O

For IN O O
SMTP NN O O
traffic NN O O
, , O O
it PRP O O
communicates VBZ O O
back RB O O
normal JJ O O
SMTP NNP O O
server NN O O
responses NNS O O
, , O O
such JJ O O
as IN O O
'' '' O O
250 CD O O
Sender NN O O
OK JJ O O
'' '' O O
, , O O
'' '' O O
503 CD O O
Bad JJ O O
sequence NN O O
of IN O O
commands NNS O O
'' '' O O
, , O O
etc FW O O
. . O O

The DT O O
reason NN O O
behind IN O O
such JJ O O
behaviour NN O O
is VBZ O O
that IN O O
the DT B-Entity 1
driver NN I-Entity O
is VBZ B-Action 2
acting VBG I-Action O
in IN B-Modifier 3
this DT B-Entity 4
mode NN I-Entity O
like IN B-Modifier 5
a DT B-Entity 6
proxy NN I-Entity O
, , O O
routing VBG B-Action 7
requests NNS B-Entity 8
from IN I-Entity O
other JJ I-Entity O
infected JJ I-Entity O
hosts NNS I-Entity O
to TO B-Modifier 9
a DT B-Entity 10
remote JJ I-Entity O
C NN I-Entity O
& CC I-Entity O
C NN I-Entity O
server NN I-Entity O
. . O O

Another DT O O
opportunity NN O O
this DT O O
mode NN O O
unlocks VBZ O O
is VBZ O O
a DT O O
peer-to-peer JJ O O
network NN O O
mode NN O O
with IN O O
no DT O O
centralised VBN O O
C NNP O O
& CC O O
C NNP O O
. . O O

The DT O O
infected JJ O O
hosts NNS O O
are VBP O O
capable JJ O O
of IN O O
transferring VBG O O
the DT O O
following VBG O O
peer-2-peer NN O O
commands NNS O O
defining VBG O O
fragment NN O O
size NN O O
, , O O
reliability NN O O
parameters NNS O O
, , O O
new JJ O O
peer VBP O O
information NN O O
, , O O
peer VB O O
impersonation NN O O
flags NNS O O
, , O O
etc FW O O
. . O O

: : O O
Once RB O O
the DT B-Entity 1
incoming JJ I-Entity O
data NNS I-Entity O
is VBZ B-Action 2
authenticated VBN I-Action O
and CC I-Action O
decrypted VBN I-Action O
, , O O
the DT O O
driver NN O O
passes VBZ O O
it PRP O O
to TO O O
the DT O O
DLL NN O O
by IN O O
using VBG O O
memory NN O O
pipes NNS O O
. . O O

For IN O O
example NN O O
, , O O
on IN O O
HTTP NN O O
traffic NN O O
arrival NN O O
it PRP B-Entity 1
may MD O O
send VB B-Action 2
traffic NN B-Entity 3
data NNS I-Entity O
into IN B-Modifier 4
a DT B-Entity 5
memory NN I-Entity O
pipe NN I-Entity O
\Device\NamedPipe\isapihttp NN I-Entity O
, , O O
and CC O O
then RB O O
, , O O
send VB B-Action 6
a DT B-Entity 7
received VBN I-Entity O
peer-2-peer NN I-Entity O
command NN I-Entity O
message NN I-Entity O
writepeernfo= FW I-Entity O
[ FW I-Entity O
IPADDRESS NN I-Entity O
: : I-Entity O
PORT FW I-Entity O
] FW I-Entity O
0fragnoscrambling=Y0 NN I-Entity O
into IN B-Modifier 8
another DT B-Entity 9
memory NN I-Entity O
pipe NN I-Entity O
called VBN I-Entity O
\Device\NamedPipe\isapidg NN I-Entity O
. . O O

In IN O O
order NN O O
to TO O O
log VB B-Action 1
its PRP$ B-Entity 2
activity NN I-Entity O
, , O O
the DT B-Entity 3
driver NN I-Entity O
writes VBZ B-Action 4
log NN B-Entity 5
data NNS I-Entity O
into IN B-Modifier 6
the DT B-Entity 7
pipe NN I-Entity O
\Device\NamedPipe\isapilog NN I-Entity O
, , O O
so IN O O
that IN O O
the DT B-Entity 8
DLL NNP I-Entity O
could MD O O
log VB B-Action 9
the DT B-Entity 10
data NNS I-Entity O
into IN B-Modifier 11
the DT B-Entity 12
log NN I-Entity O
files NNS I-Entity O
. . O O

Full JJ O O
list NN O O
of IN O O
the DT B-Entity 1
named VBN I-Entity O
pipes NNS I-Entity O
used VBN B-Action 2
for IN B-Modifier 3
communications NNS B-Entity 4
is VBZ O O
provided VBN O O
below IN O O
: : O O
Messages NNS B-Entity 5
submitted VBN B-Action 6
into IN B-Modifier 7
the DT B-Entity 8
pipes NNS I-Entity O
are VBP O O
wrapped VBN O O
into IN O O
the DT O O
structures NNS O O
. . O O

The DT O O
structures NNS O O
appear VBP O O
to TO O O
contain VB O O
headers NNS O O
to TO O O
allow VB O O
the DT B-Entity 1
pipe NN I-Entity O
server NN I-Entity O
, , O O
that WDT O O
runs VBZ O O
within IN O O
an DT O O
infected JJ O O
userland NN O O
module NN O O
, , O O
to TO O O
identify VB B-Action 2
the DT B-Entity 3
messages NNS I-Entity O
first RB O O
and CC O O
then RB O O
unwrap VB O O
the DT O O
structures NNS O O
accordingly RB O O
. . O O

For IN O O
example NN O O
, , O O
the DT O O
message NN O O
headers NNS O O
could MD O O
be VB O O
: : O O
Once RB O O
received VBN B-Action 1
from IN B-Modifier 2
the DT B-Entity 3
pipes NNS I-Entity O
and CC O O
unwrapped/decoded JJ O O
, , O O
the DT B-Entity 4
data NN I-Entity O
is VBZ O O
then RB O O
handled VBN O O
by IN O O
the DT O O
usermode NN O O
DLL NNP O O
as IN O O
per IN O O
the DT O O
data NNS O O
intention NN O O
- : O O
whether IN O O
it PRP O O
's VBZ O O
a DT O O
traffic NN O O
sniffing VBG O O
task NN O O
, , O O
a DT O O
peer-2-peer NN O O
client NN O O
logic NN O O
, , O O
a DT O O
logging VBG O O
task NN O O
, , O O
or CC O O
a DT O O
task NN O O
of IN O O
saving NN O O
received VBD O O
files NNS O O
into IN O O
the DT O O
virtual JJ O O
volumes NNS O O
. . O O

The DT B-Entity 1
driver NN I-Entity O
creates VBZ B-Action 2
virtual JJ B-Entity 3
file NN I-Entity O
volumes NNS I-Entity O
for IN B-Modifier 4
encrypted JJ B-Entity 5
storage NN I-Entity O
of IN I-Entity O
its PRP$ I-Entity O
files NNS I-Entity O
and CC I-Entity O
configuration NN I-Entity O
data NNS I-Entity O
: : O O
The DT B-Entity 6
volumes NNS I-Entity O
are VBP B-Action 7
mounted VBN I-Action O
from IN B-Modifier 8
the DT B-Entity 9
virtual JJ I-Entity O
file NN I-Entity O
systems NNS I-Entity O
RawDisk1 NN I-Entity O
and CC I-Entity O
RawDisk2 NN I-Entity O
. . O O

The DT B-Entity 1
first JJ I-Entity O
partition NN I-Entity O
is VBZ B-Action 2
created VBN I-Action O
with IN B-Modifier 3
the DT B-Entity 4
following JJ I-Entity O
steps NNS I-Entity O
: : O O
The DT B-Entity 5
hook NN I-Entity O
installed VBN B-Action 6
by IN O O
the DT B-Entity 7
rootkit NN I-Entity O
on IN B-Modifier 8
IofCallDriver NNP B-Entity 9
( NNP I-Entity O
) NNP I-Entity O
API NNP I-Entity O
provides VBZ B-Action 10
on-the-fly JJ B-Entity 11
data NNS I-Entity O
encryption/decryption NN I-Entity O
whenever WRB O O
that DT B-Entity 12
data NN I-Entity O
is VBZ B-Action 13
written VBN I-Action O
to TO B-Modifier 14
or CC O O
read VB B-Action 15
from IN B-Modifier 16
the DT B-Entity 17
volume NN I-Entity O
. . O O

The DT B-Entity 1
encryption NN I-Entity O
algorithm NN I-Entity O
is VBZ B-Action 2
based VBN I-Action O
on IN B-Modifier 3
CAST-128 NN B-Entity 4
, , O O
with IN B-Modifier 5
the DT B-Entity 6
hard-coded JJ I-Entity O
key NN I-Entity O
stored VBN I-Entity O
in IN I-Entity O
the DT I-Entity O
rootkit NN I-Entity O
body NN I-Entity O
. . O O

As IN O O
a DT O O
result NN O O
, , O O
whenever WRB O O
the DT B-Entity 1
data NN I-Entity O
is VBZ B-Action 2
saved VBN I-Action O
into IN B-Modifier 3
the DT B-Entity 4
volume NN I-Entity O
Hd1 NN I-Entity O
, , O O
it PRP B-Entity 5
will MD O O
be VB B-Action 6
scrambled VBN I-Action O
on-the-fly JJ B-Entity 7
, , O O
and CC O O
reflected VBN B-Action 8
in IN B-Entity 9
the DT I-Entity O
persistent JJ I-Entity O
storage NN I-Entity O
file NN I-Entity O
hotfix.dat NN I-Entity O
, , O O
which WDT O O
is VBZ O O
physically RB O O
located JJ O O
within IN O O
the DT O O
rootkit NN O O
's POS O O
'home NN O O
' '' O O
directory NN O O
: : O O
Analysis NN O O
of IN O O
the DT O O
hotfix.dat NN O O
file NN O O
contents NNS O O
reveals VBZ O O
it PRP B-Entity 10
's VBZ B-Action 11
a DT B-Entity 12
fully RB I-Entity O
encrypted JJ I-Entity O
file NN I-Entity O
with IN I-Entity O
flat JJ I-Entity O
entropy NN I-Entity O
. . O O

Thus RB O O
, , O O
it PRP O O
is VBZ O O
not RB O O
possible JJ O O
to TO O O
reveal VB O O
the DT O O
contents NNS O O
of IN O O
the DT O O
Snake NNP O O
's POS O O
volume NN O O
by IN O O
accessing VBG O O
the DT O O
contents NNS O O
of IN O O
this DT O O
file NN O O
( NN O O
unless IN O O
the DT O O
encryption NN O O
is VBZ O O
broken VBN O O
, , O O
that WDT O O
is VBZ O O
) NNP O O
. . O O

Enlisting VBG O O
the DT O O
contents NNS O O
of IN O O
the DT O O
created VBN O O
volume NN O O
is VBZ O O
possible JJ O O
, , O O
along IN O O
with IN O O
creating VBG O O
files NNS O O
on IN O O
it PRP O O
: : O O
However RB O O
, , O O
as RB O O
soon RB O O
as IN O O
IofCallDriver NNP O O
( NNP O O
) NNP O O
hook NN O O
is VBZ O O
removed VBN O O
, , O O
the DT O O
same JJ O O
'dir NN O O
' '' O O
command NN O O
will MD O O
fail VB O O
, , O O
as IN O O
with IN O O
no DT O O
hook NN O O
the DT O O
rootkit NN O O
can MD O O
not RB O O
decrypt VB O O
the DT O O
scrambled VBN O O
volume NN O O
: : O O
The DT O O
second JJ O O
volume NN O O
\\.\Hd2 NN O O
is VBZ O O
not RB O O
mapped VBN O O
to TO O O
a DT O O
file NN O O
, , O O
so RB O O
when WRB O O
a DT O O
computer NN O O
is VBZ O O
switched VBN O O
off RP O O
, , O O
its PRP$ O O
contents NNS O O
is VBZ O O
lost VBN O O
. . O O

Thus RB O O
, , O O
it PRP O O
could MD O O
be VB O O
used VBN O O
as IN O O
a DT O O
temporary JJ O O
or CC O O
a DT O O
cache NN O O
storage NN O O
. . O O

The DT B-Entity 1
data NNS I-Entity O
stored VBN I-Entity O
in IN I-Entity O
\\.\Hd2 NN I-Entity O
is VBZ B-Action 2
encrypted VBN I-Action O
the DT B-Entity 3
same JJ I-Entity O
way NN I-Entity O
the DT I-Entity O
first JJ I-Entity O
volume NN I-Entity O
's POS I-Entity O
data NNS I-Entity O
. . O O

Both DT B-Entity 1
volumes NNS I-Entity O
appear VBP O O
to TO O O
be VB B-Action 2
set VBN I-Action O
up RP I-Action O
as IN B-Modifier 3
FAT NN B-Entity 4
volumes NNS I-Entity O
. . O O

An DT O O
attempt NN O O
to TO O O
read VB O O
the DT O O
data NNS O O
from IN O O
these DT O O
volumes NNS O O
with IN O O
the DT O O
code NN O O
below IN O O
: : O O
This DT O O
will MD O O
produce VB O O
the DT O O
following JJ O O
results NNS O O
: : O O
For IN O O
\\.\Hd1 NN O O
: : O O
For IN O O
\\.\Hd2 NN O O
: : O O
The DT O O
ability NN O O
to TO O O
keep VB B-Action 1
its PRP$ B-Entity 2
data NNS I-Entity O
on IN B-Modifier 3
TrueCrypt-like JJ B-Entity 4
volumes NNS I-Entity O
provides VBZ O O
Snake NNP B-Entity 5
with IN O O
a DT O O
powerful JJ O O
ability NN O O
to TO O O
exchange VB O O
data NNS O O
with IN O O
the DT O O
usermode NN O O
DLL NNP O O
, , O O
as IN O O
these DT O O
volumes NNS O O
are VBP O O
accessible JJ O O
both CC O O
from IN O O
usermode NN O O
and CC O O
kernel NN O O
mode NN O O
. . O O

Static JJ O O
analysis NN O O
of IN O O
the DT O O
code NN O O
reveals VBZ O O
that IN O O
the DT B-Entity 1
Snake NNP I-Entity O
driver NN I-Entity O
uses VBZ B-Action 2
virtual JJ B-Entity 3
volumes NNS I-Entity O
to TO O O
store VB B-Action 4
its PRP$ B-Entity 5
data NNS I-Entity O
and CC I-Entity O
additional JJ I-Entity O
files NNS I-Entity O
on IN B-Modifier 6
it PRP B-Entity 7
. . O O

For IN O O
example NN O O
, , O O
it PRP B-Entity 1
stores VBZ B-Action 2
its PRP$ B-Entity 3
message NN I-Entity O
queue NN I-Entity O
in IN B-Modifier 4
a DT B-Entity 5
file NN I-Entity O
called VBN I-Entity O
: : O O
The DT O O
message NN O O
queue NN O O
indicates VBZ O O
an DT O O
asynchronous JJ O O
communication NN O O
model NN O O
between IN O O
kernel NN O O
mode NN O O
driver NN O O
and CC O O
a DT O O
usermode JJ O O
DLL NNP O O
, , O O
e.g NNP O O
. . O O

to TO O O
pass VB O O
commands NNS O O
, , O O
configuration NN O O
parameters NNS O O
, , O O
binary JJ O O
images NNS O O
of IN O O
additional JJ O O
Snake NNP O O
components NNS O O
. . O O

Other JJ O O
files NNS O O
that WDT O O
may MD O O
also RB O O
be VB O O
found VBN O O
on IN O O
the DT O O
virtual JJ O O
volume NN O O
are VBP O O
: : O O
klog NN O O
, , O O
conlog NN O O
, , O O
dump NN O O
, , O O
rknginst.exe NN O O
, , O O
where WRB O O
rknginst.exe NN O O
could MD O O
be VB O O
the DT O O
name NN O O
of IN O O
the DT O O
original JJ O O
dropper NN O O
, , O O
and CC O O
other JJ B-Entity 1
log NN I-Entity O
files NNS I-Entity O
could MD O O
potentially RB O O
contain VB B-Action 2
executed VBN B-Entity 3
command NN I-Entity O
outputs NNS I-Entity O
, , O O
intercepted VBN B-Action 4
keystrokes NNS B-Entity 5
, , O O
and CC O O
other JJ O O
output NN O O
logs NNS O O
. . O O

The DT O O
64-bit JJ O O
version NN O O
of IN O O
Snake NNP O O
must MD O O
deal VB O O
with IN O O
a DT O O
number NN O O
of IN O O
additional JJ O O
security NN O O
protections NNS O O
implemented VBN O O
in IN O O
64-bit JJ O O
editions NNS O O
of IN O O
Microsoft NNP O O
Windows NNP O O
, , O O
the DT O O
most RBS O O
significant JJ O O
of IN O O
which WDT O O
are VBP O O
kernel NN O O
driver NN O O
signature NN O O
validation NN O O
and CC O O
Kernel NNP O O
Patch NNP O O
Protection NNP O O
( NNP O O
more RBR O O
commonly RB O O
known VBN O O
as IN O O
PatchGuard NNP O O
) NNP O O
. . O O

PatchGuard NNP O O
is VBZ O O
a DT O O
feature NN O O
of IN O O
64-bit JJ O O
Windows NNP O O
which WDT O O
aims VBZ O O
to TO O O
prevent VB O O
modification NN O O
of IN O O
the DT O O
Windows NNP O O
kernel NN O O
, , O O
something NN O O
that WDT O O
is VBZ O O
often RB O O
performed VBN O O
by IN O O
malware NN O O
attempting VBG O O
to TO O O
hide VB O O
itself PRP O O
on IN O O
an DT O O
infected JJ O O
system NN O O
. . O O

Although IN O O
PatchGuard NN O O
is VBZ O O
successful JJ O O
at IN O O
preventing VBG O O
kernel NN O O
patching NN O O
once RB O O
initialised VBD O O
, , O O
several JJ O O
published VBN O O
bypass NN O O
approaches NNS O O
exist VBP O O
, , O O
. . O O

The DT O O
technique NN O O
used VBN O O
by IN O O
Snake NNP O O
appears VBZ O O
to TO O O
be VB O O
similar JJ O O
to TO O O
these DT O O
approaches NNS O O
. . O O

The DT O O
driver NN O O
signing NN O O
policy NN O O
enforced VBN O O
by IN O O
all DT O O
64-bit JJ O O
versions NNS O O
of IN O O
Windows NNP O O
from IN O O
Vista NNP O O
onwards NNS O O
requires VBZ O O
all DT O O
kernel-mode JJ O O
drivers NNS O O
to TO O O
be VB O O
signed VBN O O
with IN O O
a DT O O
valid JJ O O
digital JJ O O
signature NN O O
. . O O

The DT O O
Snake NNP O O
dropper NN O O
contains VBZ O O
both CC O O
32-bit JJ O O
and CC O O
64-bit JJ O O
unsigned JJ O O
drivers NNS O O
, , O O
and CC O O
it PRP B-Entity 1
can MD O O
successfully RB O O
load VB B-Action 2
its PRP$ B-Entity 3
unsigned JJ I-Entity O
64-bit JJ I-Entity O
driver NN I-Entity O
on IN B-Modifier 4
a DT B-Entity 5
64-bit JJ I-Entity O
version NN I-Entity O
of IN I-Entity O
Windows NNP I-Entity O
XP NN I-Entity O
– NN O O
as IN O O
driver NN O O
signing NN O O
is VBZ O O
not RB O O
enforced VBN O O
it PRP O O
does VBZ O O
not RB O O
have VB O O
to TO O O
resort VB O O
to TO O O
any DT O O
tricks NNS O O
under IN O O
this DT O O
OS NN O O
version NN O O
. . O O

In IN O O
this DT O O
case NN O O
, , O O
in IN O O
order NN O O
to TO O O
ensure VB B-Action 1
the DT B-Entity 2
driver NN I-Entity O
is VBZ I-Entity O
loaded VBN I-Entity O
automatically RB I-Entity O
at IN I-Entity O
startup NN I-Entity O
, , O O
the DT B-Entity 3
dropper NN I-Entity O
can MD O O
install VB B-Action 4
the DT B-Entity 5
64-bit JJ I-Entity O
driver NN I-Entity O
on IN B-Modifier 6
64-bit JJ B-Entity 7
Windows NNP I-Entity O
XP NN I-Entity O
in IN O O
the DT O O
same JJ O O
way NN O O
it PRP B-Entity 8
installs VBZ B-Action 9
a DT B-Entity 10
32-bit JJ I-Entity O
driver NN I-Entity O
on IN B-Modifier 11
a DT B-Entity 12
32-bit JJ I-Entity O
version NN I-Entity O
of IN I-Entity O
Windows NNP I-Entity O
XP NN I-Entity O
. . O O

On IN B-Modifier 1
64-bit JJ B-Entity 2
versions NNS I-Entity O
of IN I-Entity O
Windows NNP I-Entity O
Vista NNP I-Entity O
and CC I-Entity O
above IN I-Entity O
it PRP B-Entity 3
behaves VBZ B-Action 4
differently RB B-Entity 5
. . O O

Firstly RB O O
, , O O
the DT B-Entity 1
64-bit JJ I-Entity O
unsigned JJ I-Entity O
driver NN I-Entity O
file NN I-Entity O
is VBZ B-Action 2
created VBN I-Action O
as IN O O
usual JJ O O
: : O O
However RB O O
, , O O
the DT O O
driver NN O O
is VBZ O O
not RB O O
registered VBN O O
; : O O
what WP O O
is VBZ B-Action 3
registered VBN I-Action O
instead RB O O
is VBZ O O
the DT B-Entity 4
dropper NN I-Entity O
itself PRP I-Entity O
. . O O

To TO O O
do VB O O
that DT O O
, , O O
the DT B-Entity 1
dropper NN I-Entity O
first JJ O O
copies NNS B-Action 2
itself PRP B-Entity 3
as IN O O
: : O O
The DT B-Entity 4
dropper NN I-Entity O
then RB O O
registers VBZ B-Action 5
itself PRP B-Entity 6
as IN B-Modifier 7
a DT B-Entity 8
service NN I-Entity O
to TO O O
ensure VB B-Action 9
it PRP B-Entity 10
starts VBZ I-Entity O
every DT I-Entity O
time NN I-Entity O
Windows NNP I-Entity O
is VBZ I-Entity O
booted VBN I-Entity O
, , O O
by IN O O
creating VBG O O
the DT O O
values NNS O O
: : O O
Now RB O O
comes VBZ O O
the DT O O
most RBS O O
interesting JJ O O
part NN O O
: : O O
does VBZ O O
the DT O O
dropper NN O O
manage VBP O O
to TO O O
load VB O O
its PRP$ O O
64-bit JJ O O
unsigned JJ O O
driver NN O O
under IN O O
64-bit JJ O O
versions NNS O O
of IN O O
Windows NNP O O
Vista NNP O O
and CC O O
later JJ O O
versions NNS O O
, , O O
such JJ O O
as IN O O
64-bit JJ O O
Windows NNP O O
7/8 CD O O
? . O O
The DT O O
answer NN O O
: : O O
Yes UH O O
, , O O
it PRP O O
does VBZ O O
. . O O

Does VBZ O O
it PRP O O
resort NN O O
to TO O O
using VBG O O
bootkit NN O O
technology NN O O
, , O O
which WDT O O
has VBZ O O
been VBN O O
used VBN O O
in IN O O
the DT O O
past NN O O
to TO O O
bypass VB O O
protections NNS O O
to TO O O
load VB O O
unsigned JJ O O
64-bit JJ O O
drivers NNS O O
? . O O
The DT O O
answer NN O O
: : O O
No DT O O
. . O O

Bootkits NNPS O O
must MD O O
overwrite VB O O
the DT O O
Master NNP O O
Boot NNP O O
Record NNP O O
( NNP O O
MBR NNP O O
) NN O O
and CC O O
antivirus NN O O
products NNS O O
are VBP O O
well RB O O
trained VBN O O
to TO O O
catch VB O O
that DT O O
kind NN O O
of IN O O
bad JJ O O
behavior NN O O
. . O O

The DT O O
masterminds NNS O O
behind IN O O
Snake NNP O O
rootkit NN O O
seem VBP O O
to TO O O
be VB O O
well RB O O
aware JJ O O
of IN O O
this DT O O
so RB O O
what WP O O
they PRP O O
resorted VBD O O
to TO O O
instead RB O O
is VBZ O O
leveraging VBG O O
a DT O O
vulnerability NN O O
in IN O O
a DT O O
well-known JJ O O
virtualization NN O O
product NN O O
called VBN O O
VirtualBox NNP O O
, , O O
a DT O O
product NN O O
made VBN O O
by IN O O
Oracle NNP O O
which WDT O O
is VBZ O O
widely RB O O
used VBN O O
by IN O O
researchers NNS O O
to TO O O
analyse VB O O
malware NN O O
. . O O

VirtualBox NN O O
driver NN O O
version NN O O
1.6.2 CD O O
was VBD O O
released VBN O O
in IN O O
June NNP O O
2 CD O O
, , O O
2008 CD O O
. . O O

Two CD O O
months NNS O O
later RB O O
, , O O
in IN O O
August NNP O O
2008 CD O O
, , O O
security NN O O
researchers NNS O O
reported VBD O O
that IN O O
its PRP$ O O
main JJ O O
driver NN O O
component NN O O
, , O O
which WDT O O
is VBZ O O
signed VBN O O
under IN O O
the DT O O
entity NN O O
'' '' O O
innotek FW O O
Gmbh FW O O
'' '' O O
, , O O
contained VBD O O
a DT O O
privilege NN O O
escalation NN O O
vulnerability NN O O
. . O O

In IN O O
a DT O O
nutshell NN O O
, , O O
the DT O O
VirtualBox NNP O O
software NN O O
installs VBZ O O
a DT O O
driver NN O O
called VBN O O
VBoxDrv NNP O O
. . O O

The DT O O
driver NN O O
is VBZ O O
controlled VBN O O
with IN O O
the DT O O
Input/Ouput NNP O O
Control NNP O O
Codes NNS O O
( VBP O O
32-bit JJ O O
values NNS O O
called VBN O O
IOCTL FW O O
) FW O O
passed VBN O O
along IN O O
DeviceIoControl NNP O O
( NNP O O
) NNP O O
API NNP O O
. . O O

One CD O O
of IN O O
the DT O O
documented JJ O O
transfer NN O O
methods NNS O O
that IN O O
the DT O O
system NN O O
uses VBZ O O
to TO O O
pass VB O O
data NNS O O
between IN O O
the DT O O
caller NN O O
of IN O O
DeviceIoControl NNP O O
( NNP O O
) NNP O O
API NNP O O
and CC O O
the DT O O
driver NN O O
itself PRP O O
is VBZ O O
called VBN O O
METHODNEITHER NN O O
. . O O

As IN O O
per FW O O
MSDN FW O O
documentation NN O O
, , O O
METHODNEITHER NN O O
is VBZ O O
a DT O O
special JJ O O
transfer NN O O
type NN O O
when WRB O O
Input/Output NNP O O
Request NNP O O
Packet NNP O O
( NNP O O
IRP NNP O O
) NNP O O
supplies VBZ O O
the DT O O
user-mode JJ O O
virtual JJ O O
addresses NNS O O
of IN O O
the DT O O
input NN O O
and CC O O
output NN O O
buffers NNS O O
, , O O
without IN O O
validating VBG O O
or CC O O
mapping VBG O O
them PRP O O
. . O O

It PRP O O
is VBZ O O
the DT O O
responsibility NN O O
of IN O O
the DT O O
driver NN O O
to TO O O
validate VB O O
the DT O O
addresses NNS O O
sent VBN O O
from IN O O
user NN O O
mode NN O O
in IN O O
order NN O O
to TO O O
make VB O O
sure JJ O O
those DT O O
addresses NNS O O
are VBP O O
valid JJ O O
usermode JJ O O
addresses NNS O O
. . O O

The DT O O
source NN O O
code NN O O
of IN O O
the DT O O
vulnerable JJ O O
driver NN O O
( NN O O
shown VBN O O
below IN O O
) NN O O
demonstrates VBZ O O
how WRB O O
the DT O O
integer NN O O
value NN O O
of IN O O
the DT O O
rc NN O O
variable NN O O
is VBZ O O
first RB O O
derived VBN O O
from IN O O
the DT O O
input NN O O
parameters NNS O O
pDevObj FW O O
( FW O O
device NN O O
object NN O O
) NN O O
and CC O O
pIrp FW O O
( FW O O
request NN O O
packet NN O O
) NN O O
. . O O

Next NNP O O
, , O O
that IN O O
integer NN O O
value NN O O
is VBZ O O
written VBN O O
into IN O O
the DT O O
UserBuffer NNP O O
- : O O
an DT O O
arbitrary JJ O O
address NN O O
, , O O
pointed VBN O O
by IN O O
the DT O O
input NN O O
parameter NN O O
pIrp FW O O
( FW O O
request NN O O
packet NN O O
) NN O O
. . O O

As IN O O
there EX O O
are VBP O O
no DT O O
validations NNS O O
made VBN O O
for IN O O
the DT O O
UserBuffer NNP O O
an DT B-Entity 1
attacker NN I-Entity O
can MD O O
craft VB B-Action 2
such JJ B-Entity 3
input NN I-Entity O
parameters NNS I-Entity O
that WDT I-Entity O
will MD I-Entity O
define VB I-Entity O
address NN I-Entity O
within IN I-Entity O
kernel NN I-Entity O
memory NN I-Entity O
to TO I-Entity O
patch NN I-Entity O
and CC I-Entity O
the DT I-Entity O
data NNS I-Entity O
to TO I-Entity O
patch NN I-Entity O
it PRP I-Entity O
with IN O O
: : O O
Now RB O O
that IN O O
the DT B-Entity 4
vulnerable JJ I-Entity O
driver NN I-Entity O
can MD O O
be VB B-Action 5
used VBN I-Action O
as IN B-Modifier 6
a DT B-Entity 7
weapon NN I-Entity O
to TO I-Entity O
patch NN I-Entity O
kernel NN I-Entity O
memory NN I-Entity O
, , O O
all PDT O O
the DT O O
malware NN O O
needs VBZ O O
to TO O O
do VB O O
is VBZ O O
to TO O O
patch NN O O
the DT O O
content NN O O
of IN O O
the DT O O
variable JJ O O
nt NN O O
! . O O
gCiEnabled VBN O O
, , O O
a DT O O
boolean JJ O O
variable NN O O
'' '' O O
Code NNP O O
Integrity NNP O O
Enabled NNP O O
'' '' O O
that IN O O
marks NNS O O
whether IN O O
the DT O O
system NN O O
was VBD O O
booted VBN O O
in IN O O
WinPE NN O O
mode NN O O
. . O O

When WRB O O
running VBG O O
in IN O O
WinPE NN O O
mode NN O O
there EX O O
is VBZ O O
no DT O O
Code NNP O O
Integrity NNP O O
control NN O O
, , O O
therefore RB O O
by IN O O
enabling VBG O O
this DT O O
mode NN O O
by IN O O
patching VBG O O
only RB O O
one CD O O
bit NN O O
, , O O
Code NNP B-Entity 1
Integrity NNP I-Entity O
verification NN I-Entity O
is VBZ B-Action 2
disabled JJ I-Action O
so IN O O
that IN O O
the DT B-Entity 3
unsigned JJ I-Entity O
64-bit JJ I-Entity O
driver NN I-Entity O
can MD O O
be VB B-Action 4
loaded VBN I-Action O
. . O O

This DT O O
variable NN O O
is VBZ O O
used VBN O O
within IN O O
the DT O O
function NN O O
SepInitializeCodeIntegrity NNP O O
( NNP O O
) NNP O O
, , O O
implemented VBN O O
within IN O O
CI.dll NN O O
's POS O O
function NN O O
CiInitialize NNP O O
( NNP O O
) NNP O O
and CC O O
imported VBN O O
by IN O O
the DT O O
NT NNP O O
core NN O O
( NNP O O
ntoskrnl.exe NNP O O
) NNP O O
. . O O

In IN O O
order NN O O
to TO O O
find VB O O
the DT O O
variable NN O O
in IN O O
kernel NN O O
memory NN O O
, , O O
the DT B-Entity 1
Snake NNP I-Entity O
dropper NN I-Entity O
loads NNS B-Action 2
a DT B-Entity 3
copy NN I-Entity O
of IN I-Entity O
the DT I-Entity O
NT NN I-Entity O
core NN I-Entity O
image NN I-Entity O
( NNP I-Entity O
ntoskrnl.exe NNP I-Entity O
) NNP I-Entity O
, , O O
locates VBZ B-Action 4
the DT B-Entity 5
import NN I-Entity O
of IN I-Entity O
CI.dll NN I-Entity O
's POS I-Entity O
function NN I-Entity O
CiInitialize NNP I-Entity O
( NNP I-Entity O
) NNP I-Entity O
, , O O
and CC O O
then RB O O
SepInitializeCodeIntegrity NNP B-Entity 6
( NNP I-Entity O
) NNP I-Entity O
within IN I-Entity O
it PRP I-Entity O
. . O O

Then RB O O
it PRP B-Entity 1
parses VBZ B-Action 2
the DT B-Entity 3
function NN I-Entity O
's POS I-Entity O
code NN I-Entity O
to TO B-Modifier 4
locate VB B-Entity 5
the DT I-Entity O
offset VBN I-Entity O
of IN I-Entity O
the DT I-Entity O
variable NN I-Entity O
. . O O

Once RB O O
located JJ O O
, , O O
the DT O O
content NN O O
of IN O O
the DT O O
variable JJ O O
nt NN O O
! . O O
gCiEnabled VBN O O
is VBZ O O
patched VBN O O
in IN O O
kernel NN O O
memory NN O O
and CC O O
the DT B-Entity 1
64-bit JJ I-Entity O
unsigned JJ I-Entity O
driver NN I-Entity O
is VBZ B-Action 2
loaded VBN I-Action O
. . O O

This DT O O
explains VBZ O O
why WRB O O
Snake NNP B-Entity 1
dropper NN I-Entity O
registers VBZ B-Action 2
itself PRP B-Entity 3
as IN B-Modifier 4
a DT B-Entity 5
service NN I-Entity O
to TO O O
start VB B-Action 6
each DT B-Entity 7
time NN I-Entity O
Windows NNP I-Entity O
starts VBZ I-Entity O
: : O O
in IN O O
order NN O O
to TO O O
install VB B-Action 8
the DT B-Entity 9
vulnerable JJ I-Entity O
VBox NN I-Entity O
driver NN I-Entity O
first RB O O
, , O O
then RB O O
pass VB O O
it PRP O O
a DT O O
malformed JJ O O
structure NN O O
to TO O O
disable VB B-Action 10
Code NNP B-Entity 11
Integrity NNP I-Entity O
control NN I-Entity O
with IN B-Modifier 12
a DT B-Entity 13
DeviceIoControl NNP I-Entity O
( NNP I-Entity O
) NNP I-Entity O
API NNP I-Entity O
call NN I-Entity O
, , O O
and CC O O
finally RB O O
, , O O
load VBP B-Action 14
the DT B-Entity 15
driver NN I-Entity O
. . O O

In IN O O
order NN O O
to TO O O
be VB O O
able JJ O O
to TO O O
perform VB O O
the DT O O
steps NNS O O
above RB O O
, , O O
the DT B-Entity 1
dropper NN I-Entity O
must MD O O
first RB O O
obtain VB B-Action 2
Administrator NNP B-Entity 3
privileges NNS I-Entity O
. . O O

It PRP B-Entity 1
attempts VBZ O O
to TO O O
do VB O O
this DT O O
by IN O O
running VBG B-Action 2
MS09-025 NN B-Entity 3
and CC I-Entity O
MS10-015 NN I-Entity O
exploits NNS I-Entity O
on IN B-Modifier 4
the DT B-Entity 5
target NN I-Entity O
system NN I-Entity O
. . O O

These DT O O
exploits NNS O O
are VBP O O
bundled VBN O O
within IN O O
the DT O O
dropper NN O O
in IN O O
its PRP$ O O
resource NN O O
section NN O O
as IN O O
executable JJ O O
files NNS O O
. . O O

Other JJ O O
resources NNS O O
embedded VBN O O
within IN O O
the DT O O
dropper NN O O
are VBP O O
the DT O O
32-bit JJ O O
and CC O O
64-bit JJ O O
builds NNS O O
of IN O O
its PRP$ O O
driver NN O O
, , O O
a DT B-Entity 1
tool NN I-Entity O
for IN O O
creating VBG B-Action 2
NTFS NN B-Entity 3
file NN I-Entity O
systems NNS I-Entity O
, , O O
and CC O O
the DT B-Entity 4
initial JJ I-Entity O
message NN I-Entity O
queue NN I-Entity O
file NN I-Entity O
which WDT O O
is VBZ B-Action 5
written VBN I-Action O
into IN B-Modifier 6
the DT B-Entity 7
virtual JJ I-Entity O
volume NN I-Entity O
. . O O

The DT O O
message NN O O
queue NN O O
file NN O O
contains VBZ O O
configuration NN O O
data NNS O O
and CC O O
the DT O O
libraries NNS B-Entity 1
that WDT O O
will MD O O
be VB B-Action 2
injected VBN I-Action O
into IN B-Modifier 3
usermode NN B-Entity 4
processes NNS I-Entity O
. . O O

The DT B-Entity 1
usermode JJ I-Entity O
DLLs NNS I-Entity O
injected VBN B-Action 2
by IN O O
the DT B-Entity 3
kernel-mode JJ I-Entity O
driver NN I-Entity O
into IN B-Modifier 4
the DT B-Entity 5
userland NN I-Entity O
system NN I-Entity O
process NN I-Entity O
( FW O O
e.g FW O O
. . O O

explorer.exe FW O O
) FW O O
are VBP O O
: : O O
The DT B-Entity 1
rkctlWin32.dll/rkctlx64.dll NN I-Entity O
module NN I-Entity O
uses VBZ B-Action 2
the DT B-Entity 3
following JJ I-Entity O
hard-coded JJ I-Entity O
named VBN I-Entity O
pipe NN I-Entity O
for IN B-Modifier 4
communications NNS B-Entity 5
: : O O
The DT B-Entity 6
remote JJ I-Entity O
commands NNS I-Entity O
it PRP B-Entity 7
receives VBZ B-Action 8
appear VBP O O
to TO O O
be VB O O
designed VBN O O
to TO O O
control VB B-Action 9
other JJ B-Entity 10
components NNS I-Entity O
of IN I-Entity O
Snake NNP I-Entity O
: : O O
The DT O O
injsnakeWin32.dll/injsnakex64.dll NN O O
module NN O O
exports VBZ O O
61 CD O O
functions NNS O O
. . O O

It PRP O O
is VBZ O O
designed VBN O O
to TO O O
perform VB O O
the DT O O
high-level JJ O O
tasks NNS O O
such JJ O O
as IN O O
: : O O
When WRB O O
the DT B-Entity 1
DLL NNP I-Entity O
activates VBZ B-Action 2
, , O O
it PRP B-Entity 3
reads VBZ B-Action 4
configuration NN B-Entity 5
parameters NNS I-Entity O
from IN B-Modifier 6
the DT B-Entity 7
configuration NN I-Entity O
queue NN I-Entity O
, , O O
that IN O O
the DT B-Entity 8
driver NN I-Entity O
creates VBZ B-Action 9
on IN B-Modifier 10
a DT B-Entity 11
virtual JJ I-Entity O
volume NN I-Entity O
. . O O

One CD O O
of IN O O
the DT O O
parameters NNS O O
defines VBZ O O
the DT B-Entity 1
pipe NN I-Entity O
name NN I-Entity O
( CD I-Entity O
s NN I-Entity O
) NN I-Entity O
that IN O O
the DT B-Entity 2
DLL NNP I-Entity O
should MD O O
use VB B-Action 3
for IN B-Modifier 4
its PRP$ B-Entity 5
communications NNS I-Entity O
. . O O

The DT B-Entity 1
remote JJ I-Entity O
commands NNS I-Entity O
received VBN B-Action 2
by IN O O
this DT B-Entity 3
Snake NNP I-Entity O
DLL NNP I-Entity O
module NN I-Entity O
are VBP O O
designed VBN O O
to TO O O
set VB O O
up RP O O
various JJ O O
communication NN O O
parameters NNS O O
: : O O
To TO O O
post VB B-Action 4
the DT B-Entity 5
data NNS I-Entity O
, , O O
the DT B-Entity 6
DLL NNP I-Entity O
can MD O O
use VB O O
the DT O O
following JJ O O
User-Agent JJ O O
string NN O O
'' '' O O
Mozilla/4.0 FW O O
( FW O O
compatible JJ O O
; : O O
MSIE NN O O
6.0 CD O O
) NN O O
'' '' O O
. . O O

It PRP B-Entity 1
may MD O O
rely VB B-Action 2
on IN I-Action O
the DT B-Entity 3
following JJ I-Entity O
Internet NNP I-Entity O
Media NNP I-Entity O
types NNS I-Entity O
( NNP I-Entity O
MIME NNP I-Entity O
types NNS I-Entity O
) NN I-Entity O
for IN B-Modifier 4
data NNS B-Entity 5
exfiltration NN I-Entity O
: : O O
Request NN B-Entity 6
type NN I-Entity O
it PRP B-Entity 7
uses VBZ B-Action 8
can MD O O
either RB O O
be VB B-Action 9
POST NN B-Entity 10
of IN O O
GET VB B-Entity 11
, , O O
and CC O O
C NN B-Entity 12
& CC I-Entity O
C NN I-Entity O
server NN I-Entity O
resource NN I-Entity O
name NN I-Entity O
is VBZ B-Action 13
/default.asp NNP B-Entity 14
. . O O

One CD B-Entity 1
of IN I-Entity O
the DT I-Entity O
Snake NNP I-Entity O
components NNS I-Entity O
that WDT O O
could MD O O
have VB O O
been VBN B-Action 2
downloaded VBN I-Action O
from IN B-Modifier 3
a DT B-Entity 4
remote JJ I-Entity O
C NN I-Entity O
& CC I-Entity O
C NN I-Entity O
server NN I-Entity O
, , O O
was VBD B-Action 5
identified VBN I-Action O
as IN B-Modifier 6
a DT B-Entity 7
network NN I-Entity O
reconnaissance NN I-Entity O
tool NN I-Entity O
. . O O

When WRB B-Modifier 1
run VBN B-Entity 2
as IN I-Entity O
a DT I-Entity O
command NN I-Entity O
line NN I-Entity O
tool NN I-Entity O
, , O O
with IN O O
its PRP$ O O
logic NN O O
defined VBN O O
with IN O O
the DT O O
command NN O O
line NN O O
switches VBZ O O
, , O O
this DT B-Entity 3
tool NN I-Entity O
enumerates VBZ B-Action 4
other JJ B-Entity 5
network NN I-Entity O
hosts NNS I-Entity O
and CC O O
detects VBZ B-Action 6
what WP B-Entity 7
Windows NNP I-Entity O
RPC NNP I-Entity O
services NNS I-Entity O
are VBP I-Entity O
enabled VBN I-Entity O
at IN I-Entity O
the DT I-Entity O
endpoints NNS I-Entity O
. . O O

It PRP O O
carries VBZ O O
a DT B-Entity 1
list NN I-Entity O
of IN I-Entity O
interface NN I-Entity O
identifiers NNS I-Entity O
associated VBN B-Action 2
with IN B-Modifier 3
the DT B-Entity 4
named VBN I-Entity O
pipes NNS I-Entity O
. . O O

It PRP B-Entity 1
then RB O O
uses VBZ O O
these DT O O
identifiers NNS O O
to TO O O
write VB B-Action 2
a DT B-Entity 3
message NN I-Entity O
to TO B-Modifier 4
and CC O O
read VB B-Action 5
a DT B-Entity 6
message NN I-Entity O
from IN B-Modifier 7
the DT B-Entity 8
associated VBN I-Entity O
named VBN I-Entity O
pipes NNS I-Entity O
. . O O

By IN O O
knowing VBG O O
what WP O O
RPC NNP O O
services NNS O O
are VBP O O
running VBG O O
, , O O
it PRP B-Entity 1
can MD O O
successfully RB O O
fingerprint NN B-Action 2
all DT B-Entity 3
network NN I-Entity O
hosts NNS I-Entity O
by IN B-Modifier 4
mimicking VBG B-Entity 5
the DT I-Entity O
Metasploit NNP I-Entity O
's POS I-Entity O
logic NN I-Entity O
of IN I-Entity O
OS NNP I-Entity O
fingerprinting VBG I-Entity O
via IN I-Entity O
SMB NNP I-Entity O
. . O O

The DT O O
fingerprinting NN O O
allows VBZ O O
it PRP B-Entity 1
to TO O O
reveal VB B-Action 2
the DT B-Entity 3
following JJ I-Entity O
characteristics NNS I-Entity O
for IN B-Modifier 4
each DT B-Entity 5
host NN I-Entity O
found VBN I-Entity O
in IN I-Entity O
the DT I-Entity O
network NN I-Entity O
: : O O
The DT B-Entity 6
data NNS I-Entity O
it PRP O O
retrieves VBZ O O
is VBZ B-Action 7
encrypted VBN I-Action O
and CC O O
saved VBN B-Action 8
into IN B-Modifier 9
a DT B-Entity 10
configuration NN I-Entity O
file NN I-Entity O
% NN I-Entity O
system NN I-Entity O
% NN I-Entity O
\vtmon.bin NN I-Entity O
. . O O

This DT B-Entity 1
file NN I-Entity O
is VBZ B-Action 2
then RB I-Action O
further RB I-Action O
encrypted VBN I-Action O
with IN B-Modifier 3
an DT B-Entity 4
NTL-based JJ I-Entity O
( NN I-Entity O
Number NNP I-Entity O
Theory NNP I-Entity O
Library NNP I-Entity O
) NNP I-Entity O
algorithm NN I-Entity O
and CC O O
is VBZ B-Action 5
uploaded VBN I-Action O
by IN B-Modifier 6
the DT B-Entity 7
usermode-centric JJ I-Entity O
Snake NNP I-Entity O
rootkit NN I-Entity O
to TO B-Modifier 8
the DT B-Entity 9
C NN I-Entity O
& CC I-Entity O
C NN I-Entity O
server NN I-Entity O
, , O O
along IN B-Modifier 10
with IN I-Modifier O
other JJ B-Entity 11
configuration NN I-Entity O
files NNS I-Entity O
, , I-Entity O
such JJ I-Entity O
as IN I-Entity O
mtmon.sdb NN I-Entity O
, , I-Entity O
mtmon32.sdb NN I-Entity O
, , I-Entity O
gstatsnd.bin NN I-Entity O
, , I-Entity O
gstat.bin NN I-Entity O
, , I-Entity O
gstat32.bin NN I-Entity O
, , I-Entity O
and CC I-Entity O
other JJ I-Entity O
log NN I-Entity O
files NNS I-Entity O
found VBN I-Entity O
in IN I-Entity O
the DT I-Entity O
% NN I-Entity O
windows NNS I-Entity O
% NN I-Entity O
\ CD I-Entity O
$ $ I-Entity O
NtUninstallQ FW I-Entity O
[ FW I-Entity O
random JJ I-Entity O
] NN I-Entity O
$ $ I-Entity O
directory NN I-Entity O
. . O O

By IN O O
using VBG O O
this DT O O
function NN O O
the DT B-Entity 1
remote JJ I-Entity O
attacker NN I-Entity O
can MD O O
identify VB B-Action 2
any DT B-Entity 3
potentially RB I-Entity O
exploitable JJ I-Entity O
hosts NNS I-Entity O
located JJ I-Entity O
in IN I-Entity O
the DT I-Entity O
same JJ I-Entity O
network NN I-Entity O
as IN I-Entity O
the DT I-Entity O
victim NN I-Entity O
. . O O

The DT B-Entity 1
attacker NN I-Entity O
may MD O O
then RB O O
craft VB O O
an DT O O
exploit VB O O
against IN O O
those DT O O
hosts NNS O O
, , O O
possibly RB O O
by IN O O
using VBG O O
the DT O O
Metasploit NNP O O
framework NN O O
, , O O
and CC O O
then RB O O
deliver VB B-Action 2
the DT B-Entity 3
generated VBN I-Entity O
shellcode NN I-Entity O
back RB B-Modifier 4
to TO I-Modifier O
the DT B-Entity 5
reconnaissance NN I-Entity O
tool NN I-Entity O
to TO B-Modifier 6
be VB B-Entity 7
applied VBN I-Entity O
against IN I-Entity O
the DT I-Entity O
identified VBN I-Entity O
hosts NNS I-Entity O
by IN I-Entity O
running VBG I-Entity O
the DT I-Entity O
tool NN I-Entity O
with IN I-Entity O
the DT I-Entity O
'expos NNS I-Entity O
' POS I-Entity O
switch NN I-Entity O
. . O O

If IN O O
the DT B-Entity 1
tool NN I-Entity O
successfully RB O O
delivers VBZ B-Action 2
the DT B-Entity 3
payload NN I-Entity O
and CC O O
exploits VBZ B-Action 4
the DT B-Entity 5
remote JJ I-Entity O
host NN I-Entity O
( CD I-Entity O
s NN I-Entity O
) NN I-Entity O
, , O O
it PRP B-Entity 6
will MD O O
replicate VB B-Action 7
the DT B-Entity 8
infection NN I-Entity O
across IN B-Modifier 9
the DT B-Entity 10
network NN I-Entity O
, , O O
taking VBG B-Action 11
control NN I-Action O
over IN B-Modifier 12
new JJ B-Entity 13
hosts NNS I-Entity O
, , O O
thus RB O O
repeating VBG B-Action 14
the DT B-Entity 15
infection NN I-Entity O
cycle NN I-Entity O
all DT B-Entity 16
over IN I-Entity O
again RB I-Entity O
and CC O O
spreading VBG B-Action 17
the DT B-Entity 18
infection NN I-Entity O
further RB B-Entity 19
. . O O

Unlike IN O O
traditional JJ O O
worm NN O O
techniques NNS O O
, , O O
this DT O O
process NN O O
is VBZ O O
rather RB O O
manual JJ O O
, , O O
but CC O O
its PRP$ O O
danger NN O O
is VBZ O O
in IN O O
the DT O O
fact NN O O
that IN O O
the DT B-Entity 1
attacker NN I-Entity O
can MD O O
flexibly RB O O
craft VB O O
new JJ O O
attack NN O O
methods NNS O O
, , O O
adjusting VBG B-Action 2
them PRP B-Entity 3
to TO B-Modifier 4
the DT B-Entity 5
hosts NNS I-Entity O
present JJ I-Entity O
within IN I-Entity O
the DT I-Entity O
network NN I-Entity O
, , O O
thus RB O O
preying VBG O O
on IN O O
the DT O O
weakest JJS O O
( NN O O
least RBS O O
updated VBN O O
, , O O
most RBS O O
vulnerable JJ O O
) NN O O
victims NNS O O
along IN O O
its PRP$ O O
path NN O O
. . O O

As IN O O
seen VBN O O
from IN O O
the DT O O
check-in NN O O
logs NNS O O
found VBN O O
within IN O O
one CD O O
of IN O O
the DT O O
recent JJ O O
samples NNS O O
, , O O
the DT O O
time NN O O
span NN O O
covers VBZ O O
almost RB O O
6 CD O O
years NNS O O
from IN O O
January NNP O O
2007 CD O O
till IN O O
December NNP O O
2012 CD O O
, , O O
which WDT O O
is VBZ O O
aligned VBN O O
with IN O O
the DT O O
first JJ O O
reports NNS O O
of IN O O
Agent.BTZ NN O O
. . O O

It PRP O O
's VBZ O O
worth JJ O O
noting VBG O O
that IN O O
Agent.BTZ NN B-Entity 1
used VBD B-Action 2
the DT B-Entity 3
same JJ I-Entity O
XOR NN I-Entity O
key NN I-Entity O
for IN B-Modifier 4
its PRP$ B-Entity 5
logs NNS I-Entity O
as IN O O
the DT O O
most RBS O O
recent JJ O O
variants NNS O O
: : O O
Log VB B-Entity 6
files NNS I-Entity O
created VBN B-Action 7
by IN O O
the DT B-Entity 8
latest JJS I-Entity O
samples NNS I-Entity O
of IN I-Entity O
Snake NNP I-Entity O
, , O O
compiled VBN O O
in IN O O
2013 CD O O
and CC O O
2014 CD O O
, , O O
were VBD O O
successfully RB O O
decrypted VBN O O
with IN O O
the DT O O
same JJ O O
XOR NN O O
key NN O O
. . O O

Other JJ O O
similarities NNS O O
include VBP O O
the DT O O
usage NN O O
of IN O O
the DT O O
virtual JJ O O
partition NN O O
\\.\Vd1 NN O O
, , O O
the DT O O
temporary JJ O O
file NN O O
named VBN O O
FA.tmp NN O O
, , O O
usage NN O O
of IN O O
files NNS O O
named VBN O O
mswmpdat.tlb NN O O
, , O O
wmcache.nld NN O O
, , O O
winview.ocx NN O O
. . O O

The DT O O
cyber-espionage JJ O O
operation NN O O
behind IN O O
the DT O O
Snake NNP O O
rootkit NN O O
is VBZ O O
well RB O O
established VBN O O
, , O O
a DT O O
sample NN O O
comiled VBN O O
in IN O O
January NNP O O
2006 CD O O
indicates VBZ O O
that IN O O
the DT O O
activity NN O O
would MD O O
have VB O O
begun VBN O O
in IN O O
at IN O O
least JJS O O
2005 CD O O
. . O O

It PRP B-Entity 1
is VBZ O O
also RB O O
sophisticated JJ O O
, , O O
using VBG B-Action 2
complex JJ B-Entity 3
techniques NNS I-Entity O
for IN B-Modifier 4
evading VBG B-Entity 5
host NN I-Entity O
defences NNS I-Entity O
and CC O O
providing VBG B-Action 6
the DT B-Entity 7
attackers NNS I-Entity O
covert JJ B-Entity 8
communication NN I-Entity O
channels NNS I-Entity O
. . O O

Toolmarks NNPS O O
left VBD O O
behind RP O O
by IN O O
the DT O O
authors NNS O O
'vlad NN O O
' '' O O
& CC O O
'gilg NN O O
' '' O O
, , O O
leave VBP O O
tantalizing JJ O O
clues NNS O O
as IN O O
to TO O O
the DT O O
personas NNS O O
behind IN O O
this DT O O
. . O O

From IN O O
a DT O O
technical JJ O O
perspective NN O O
, , O O
Snake NNP O O
demonstrates VBZ O O
two CD O O
very RB O O
different JJ O O
approaches NNS O O
to TO O O
the DT O O
task NN O O
of IN O O
building VBG O O
a DT O O
cyber-espionage JJ O O
toolkit NN O O
. . O O

One CD O O
approach NN O O
is VBZ O O
to TO O O
delegate VB B-Action 1
the DT B-Entity 2
network NN I-Entity O
communication NN I-Entity O
engine NN I-Entity O
to TO B-Modifier 3
usermode NN B-Entity 4
code NN I-Entity O
, , O O
backed VBD O O
up RP O O
by IN O O
a DT O O
usermode NN O O
rootkit NN O O
. . O O

Another DT O O
approach NN O O
is VBZ O O
to TO O O
carry VB B-Action 1
out RP I-Action O
all DT B-Entity 2
of IN I-Entity O
the DT I-Entity O
communications NNS I-Entity O
from IN B-Modifier 3
the DT B-Entity 4
kernel-mode JJ I-Entity O
driver NN I-Entity O
, , O O
which WDT O O
is VBZ O O
a DT O O
very RB O O
challenging JJ O O
task NN O O
by IN O O
itself PRP O O
. . O O

The DT O O
complexity NN O O
of IN O O
the DT O O
usermode-centric JJ O O
approach NN O O
is VBZ O O
on IN O O
par NN O O
with IN O O
Rustock NN O O
rootkit NN O O
- : O O
it PRP O O
uses VBZ O O
similar JJ O O
techniques NNS O O
. . O O

It PRP O O
's VBZ O O
an DT O O
old JJ O O
well-polished JJ O O
technology NN O O
that WDT O O
evolved VBD O O
over IN O O
the DT O O
years NNS O O
and CC O O
demonstrated VBD O O
its PRP$ O O
resilience NN O O
and CC O O
survivability NN O O
under IN O O
the DT O O
stress NN O O
of IN O O
security NN O O
counter- NN O O
measures NNS O O
. . O O

The DT O O
complexity NN O O
of IN O O
the DT O O
kernel-centric JJ O O
architecture NN O O
of IN O O
Snake NNP O O
is VBZ O O
quite RB O O
unique JJ O O
. . O O

This DT O O
architecture NN O O
is VBZ O O
designed VBN O O
to TO O O
grant VB O O
Snake NNP O O
as IN O O
much JJ O O
flexibility NN O O
as IN O O
possible JJ O O
. . O O

When WRB B-Modifier 1
most JJS B-Entity 2
of IN I-Entity O
the DT I-Entity O
infected JJ I-Entity O
hosts NNS I-Entity O
are VBP I-Entity O
cut VBN I-Entity O
off RP I-Entity O
from IN I-Entity O
the DT I-Entity O
outside JJ I-Entity O
world NN I-Entity O
, , O O
it PRP B-Entity 3
only RB B-Action 4
needs VBZ I-Action O
one CD B-Entity 5
host NN I-Entity O
to TO I-Entity O
be VB I-Entity O
connected JJ I-Entity O
online NN I-Entity O
. . O O

The DT B-Entity 1
traffic NN I-Entity O
is VBZ B-Action 2
then RB I-Action O
routed VBN I-Action O
through IN B-Modifier 3
that DT B-Entity 4
host NN I-Entity O
to TO O O
make VB B-Action 5
external JJ B-Entity 6
control NN I-Entity O
and CC O O
data NN B-Entity 7
exfiltration NN I-Entity O
still RB B-Entity 8
possible JJ I-Entity O
. . O O

The DT B-Entity 1
presence NN I-Entity O
of IN I-Entity O
the DT I-Entity O
reconnaissance NN I-Entity O
tool NN I-Entity O
in IN I-Entity O
the DT I-Entity O
Snake NNP I-Entity O
operators NNS I-Entity O
' POS I-Entity O
framework NN I-Entity O
suggests VBZ B-Action 2
the DT B-Entity 3
existence NN I-Entity O
of IN I-Entity O
an DT I-Entity O
arsenal NN I-Entity O
of IN I-Entity O
infiltration NN I-Entity O
tools NNS I-Entity O
, , O O
designed VBN O O
to TO O O
compromise VB B-Action 4
a DT B-Entity 5
system NN I-Entity O
, , O O
then RB O O
find VB O O
a DT O O
way NN O O
to TO O O
replicate VB B-Action 6
into IN B-Modifier 7
other JJ B-Entity 8
hosts NNS I-Entity O
, , O O
infect VB B-Action 9
them PRP B-Entity 10
, , O O
and CC O O
spread VBD B-Action 11
the DT B-Entity 12
infection NN I-Entity O
even RB B-Entity 13
further RBR I-Entity O
. . O O

As IN O O
demonstrated VBN O O
, , O O
the DT B-Entity 1
backdoor JJ I-Entity O
commands NNS I-Entity O
allow VBP B-Action 2
Snake NNP B-Entity 3
to TO O O
provide VB B-Action 4
remote JJ B-Entity 5
attackers NNS I-Entity O
with IN B-Modifier 6
full JJ B-Entity 7
remote JJ I-Entity O
access NN I-Entity O
to TO I-Entity O
the DT I-Entity O
compromised VBN I-Entity O
system NN I-Entity O
. . O O

Its PRP$ O O
ability NN O O
to TO O O
hibernate VB B-Action 1
, , O O
staying VBG B-Action 2
fully RB B-Entity 3
inactive JJ I-Entity O
for IN B-Modifier 4
a DT B-Entity 5
number NN I-Entity O
of IN I-Entity O
days NNS I-Entity O
, , O O
makes VBZ B-Action 6
its PRP$ B-Entity 7
detection NN I-Entity O
during IN I-Entity O
that DT I-Entity O
time NN I-Entity O
very RB B-Entity 8
difficult JJ I-Entity O
. . O O

The DT O O
analysed JJ O O
code NN O O
suggests VBZ O O
that IN O O
even RB O O
file VB O O
system NN O O
and CC O O
registry NN O O
operations NNS O O
can MD O O
be VB O O
delegated VBN O O
by IN O O
an DT O O
infected JJ O O
module NN O O
to TO O O
another DT O O
module NN O O
in IN O O
order NN O O
to TO O O
stay VB B-Action 1
unnoticed JJ B-Entity 2
by IN B-Modifier 3
behaviour NN B-Entity 4
analysis NN I-Entity O
engines NNS I-Entity O
of IN I-Entity O
the DT I-Entity O
antivirus JJ I-Entity O
products NNS I-Entity O
, , O O
and CC O O
to TO O O
overcome VB B-Action 5
account NN B-Entity 6
restrictions NNS I-Entity O
of IN I-Entity O
the DT I-Entity O
browser NN I-Entity O
processes NNS I-Entity O
so IN O O
that IN O O
the DT B-Entity 7
injected VBN I-Entity O
module NN I-Entity O
could MD O O
still RB O O
write VB B-Action 8
into IN B-Modifier 9
files NNS B-Entity 10
and CC O O
into IN B-Modifier 11
the DT B-Entity 12
sensitive JJ I-Entity O
registry NN I-Entity O
hives NNS I-Entity O
. . O O

The DT B-Entity 1
logs NNS I-Entity O
and CC I-Entity O
dumps VBZ I-Entity O
it PRP B-Entity 2
creates VBZ B-Action 3
on IN B-Modifier 4
the DT B-Entity 5
hidden JJ I-Entity O
virtual JJ I-Entity O
volumes NNS I-Entity O
contributes VBZ O O
to TO O O
its PRP$ O O
stealthiness NN O O
too RB O O
. . O O

A DT O O
great JJ O O
deal NN O O
of IN O O
attention NN O O
has VBZ O O
also RB O O
been VBN O O
given VBN O O
to TO O O
keep VB B-Action 1
its PRP$ B-Entity 2
network NN I-Entity O
communications NNS I-Entity O
as RB B-Entity 3
quiet JJ I-Entity O
as IN I-Entity O
possible JJ I-Entity O
. . O O

Its PRP$ O O
ability NN O O
to TO O O
generate VB B-Action 1
malicious JJ B-Entity 2
traffic NN I-Entity O
whenever WRB B-Modifier 3
the DT B-Entity 4
user NN I-Entity O
goes VBZ I-Entity O
online NN I-Entity O
and CC I-Entity O
start VB I-Entity O
loading VBG I-Entity O
the DT I-Entity O
web NN I-Entity O
pages NNS I-Entity O
allows VBZ O O
it PRP B-Entity 5
to TO O O
'blend FW B-Action 6
in FW I-Action O
' '' I-Action O
with IN B-Modifier 7
the DT B-Entity 8
legitimate JJ I-Entity O
communications NNS I-Entity O
. . O O

We PRP O O
expect VBP O O
much RB O O
more RBR O O
will MD O O
be VB O O
uncovered VBN O O
by IN O O
researchers NNS O O
in IN O O
the DT O O
coming VBG O O
weeks NNS O O
as IN O O
the DT O O
capabilities NNS O O
of IN O O
this DT O O
operation NN O O
are VBP O O
further RB O O
fleshed VBN O O
out RP O O
. . O O

However RB O O
, , O O
as IN O O
we PRP O O
implied VBD O O
in IN O O
the DT O O
opening NN O O
section NN O O
, , O O
we PRP O O
view VBP O O
this DT O O
threat NN O O
to TO O O
be VB O O
a DT O O
permanent JJ O O
feature NN O O
of IN O O
the DT O O
landscape NN O O
. . O O

Whether NNP O O
they PRP O O
dismantle VBP O O
this DT O O
toolset NN O O
and CC O O
start VB O O
from IN O O
scratch NN O O
, , O O
or CC O O
continue VB O O
using VBG O O
tools NNS O O
which WDT O O
have VBP O O
been VBN O O
exposed VBN O O
, , O O
remains VBZ O O
to TO O O
be VB O O
seen VBN O O
. . O O

For IN O O
their PRP$ O O
targets NNS O O
though IN O O
the DT O O
considerable JJ O O
challenge NN O O
of IN O O
keeping VBG O O
secrets NNS O O
safe JJ O O
on IN O O
sensitive JJ O O
networks NNS O O
will MD O O
certainly RB O O
continue VB O O
for IN O O
years NNS O O
to TO O O
come VB O O
. . O O

