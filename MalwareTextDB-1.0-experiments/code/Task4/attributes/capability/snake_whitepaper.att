fingerprint 015
it 015

reveal 015
it 015

stay 013
persistent 013
on 013
a 013
system 013

is 002
encrypted 002
The 002
data 002

saved O
The O
data O

is 002
then 002
further 002
encrypted 002
This 002
file 002

is 005
uploaded 005
This 005
file 005

identify 010
the 010
remote 010
attacker 010

infect 012
Snake 012

deliver 005
the 005
generated 005
shellcode 005

adjusting 010
them 010

delivers 010
the 010
tool 010

exploits 010
the 010
tool 010

replicate 010
it 010

spreading 010
the 010
infection 010

repeating 010
the 010
infection 010
cycle 010

restore 013
Snake 013

taking 016
control 016
over 016
new 016
hosts 016

used 002
Agent.BTZ 002

created 017
Log 017
files 017

using 002
for 002
evading 002
host 002
defences 002

providing 002
It 002

carry 005
out 005
all 005
of 005
the 005
communications 005

delegate 005
the 005
network 005
communication 005
engine 005

only 005
needs 005
When 005
most 005
of 005
the 005
infected 005
hosts 005
are 005
cut 005
off 005
from 005
the 005
outside 005
world 005

is 011
then 011
routed 011
The 011
traffic 011

make 012
external 012
control 012

make 006
data 006
exfiltration 006

present 002
significant 002
challenges 002
for 002
traditional 002
security 002
technologies 002
to 002
detect 002

sets O
it O

suggests 010
The 010
presence 010
of 010
the 010
reconnaissance 010
tool 010
in 010
the 010
Snake 010
operators’ 010
framework 010

compromise 012
a 012
system 012

replicate 010
into 010
other 010
hosts 010

infect 010
them 010

spread 010
the 010
infection 010

allow 012
the 012
backdoor 012
commands 012

provide 012
Snake 012

staying 017
fully 017
inactive 017

hibernate 017

makes 002
its 002
detection 002
during 002
that 002
time 002

hide 002
the 002
presence 002
of 002
the 002
Snake 002
components 002
on 002
the 002
system 002

stay 002
unnoticed 002

overcome 018
account 018
restrictions 018
of 018
the 018
browser 018
processes 018

write O
the O
injected O
module O

creates 017
it 017

keep 002
its 002
network 002
communications 002

generate 011
malicious 011
traffic 011

‘blend 002
in’ 002
it 002

watches 019
The 019
driver 019

stays 017
Snake 017

intercepts 011
as 011
soon 011
as 011
the 011
user 011
goes 011
online 011

injects 012
the 012
driver 012

initiates 005
the 005
module 005

establishing 013
and 013
maintaining 013
a 013
presence 013

blend 002
this 002
behaviour 002

bypassing 018
the 018
firewalls 018

keeping 002
a 002
low 002
profile 002

stay 002
Snake 002
rootkit 002

Hiding 002
Snake 002
rootkit 002

injected 012
the 012
driver 012

started 011
producing 011
the 011
following 011
traffic 011

relies 005
on 005
The 005
domain 005
names 005
of 005
the 005
C&C 005
servers 005

resolves 005
the 005
malware 005

fetches 005
it 005

expects 005
the 005
server 005
to 005
respond 005
with 005
a 005
string 005
“1”, 005
acknowledging 005
it’s 005
active 005

asks 005
it 005

returns 005
the 005
server 005

receives 005
it 005

is 002
encrypted 002
The 002
command 002

calculates 005
and 005
confirms 005
it 005

covertly 012
install 012
It 012

decrypt 005
the 005
malware 005

applies 005
the 005
malware 005

maintain 013
They 013

decrypts 005
the 005
data 005

makes 005
sure 005
the 005
command 005
is 005
destined 005
to 005
the 005
current 005
host 005

interprets 005
the 005
malware 005

connects 005
the 005
malware 005

asking 005
the 005
malware 005

receives 005
The 005
command 005

uploads 005
it 005

cleans 017
out 017
it 017

hide 002
the 002
presence 002
of 002
its 002
components 002

uploads 005
it 005

store 017
configuration 017
and 017
log 017
data 017

are O
used O
rootkit O

supports 005
3 005
modes 005
of 005
fetching 005
C&C 005
commands 005

relies 005
on 005
Windows 005
Internet 005
(WinINet) 005
APIs, 005
such 005
as 005
HttpOpenRequest(), 005
HttpSendRequest(), 005
InternetReadFile(), 005
etc 005

uses 005
Windows 005
Sockets 005
2 005
(Winsock) 005
APIs, 005
such 005
as 005
WSAStartup(), 005
socket(), 005
connect(), 005
send(), 005
etc 005

works 005
it 005

provide 005
a 005
communication 005
mechanism 005
with 005
its 005
C&C 005
servers 005

passes 005
it 005

injects 012
the 012
malicious 012
driver 012
with 012
the 012
embedded 012
DLL 012
module 012

function O
the O
DLL O

detects 019
the 019
driver 019

inject 012
it 012

enable 006
an 006
effective 006
data 006
exfiltration 006
mechanism 006

start 005
the 005
DLL 005

start 005
the 005
injected 005
DLL 005

sending 005
the 005
injected 005
DLL 005

is 005
delegated 005
the 005
task 005
of 005
communication 005
with 005
C&C 005

start 005
it 005

bypassing 018
the 018
host-based 018
firewalls 018
that 018
keep 018
an 018
infected 018
system 018
process 018
in 018
a 018
white-list 018

‘legitimise’ 018
the 018
pipes 018
usage 018

is O
spawned O
a O
dedicated O
thread O

listen 019
for 019
IPC 019
messages 019
received 019
through 019
the 019
pipes 019

are 005
carried 005
out 005
the 005
network 005
communications 005

perform 005
GET 005

perform 005
POST 005
requests 005

ask O
the O
pipe O
server O

saving 012
the 012
pipe 012
server 012

copy 012
files 012

delete 012
files 012

save 012
configuration 012
data 012

keep 002
This 002
delegation 002
of 002
tasks 002

overcome 018
account 018
restrictions 018
imposed 018
on 018
a 018
browser 018
process 018

write 012
into 012
files 012

write 012
into 012
registry 012

send 005
the 005
clients 005

are 005
handled 005
the 005
network 005
communications 005

calls O
it O

communicates 012
The 012
usermode 012
component 012
of 012
Snake 012

write O
data O

opens O
it O

are 005
hard-coded 005
the 005
initial 005
set 005
of 005
domain 005
names 005

provide 012
these 012
commands 012

allowing 012
remote 012
attacker 012

depend 015
on 015
The 015
choice 015
of 015
what 015
architecture 015
should 015
be 015
used 015

performed 012
the 012
malware 012

update 005
the 005
driver 005

rely 005
on 005
its 005
communication 005
capabilities 005

is 017
installed 017
via 017
an 017
update 017

is 005
the 005
kernel-mode 005
driver 005

be 012
instructed 012
the 012
usermode 012
component 012

copying 012
all 012
the 012
necessary 012
logs 012

carry 005
out 005
a 005
kernel-mode 005
driver 005

are 012
still 012
injected 012
The 012
usermode 012
DLLs 012

installed 010
a 010
kernel 010
mode 010
driver 010

be 010
distributed 010
via 010
a 010
phishing 010
email 010
attachment 010

be 010
delivered 010
via 010
an 010
exploit 010
across 010
the 010
network 010

starts 010
Infection 010

executed O
the O
dropper O

installs 017
the 017
kernel 017
mode 017
driver 017

install 017
On 017
a 017
32-bit 017
OS 017

install 017
a 017
64-bit 017
driver 017

injected 012
a 012
usermode 012
DLL 012

creates 017
The 017
analysed 017
32-bit 017
dropper 017

is O
ensured O
with O
creation O
of O
the O
following O
registry O
entries O

places O
The O
rootkit O

flags O
The O
driver O

hooks O
it O

install 017
it 017

calls O
The O
installed O
hook O
handler O

checks O
if O
the O
name O
of O
the O
device O
is O
netbt O
or O
afd O

hide 002
its 002
hooks 002

hide 002
the 002
driver 002

hooks O
the O
driver O

block 003
the 003
hook 003
handlers 003
of 003
the 003
registry-related 003
APIs 003

load 012
the 012
Snake 012
driver 012

blocks 003
the 003
rootkit 003

block 003
The 003
ZwReadFile() 003
hook 003
handler 003

blocked 003
it 003

inject 012
The 012
ZwClose() 012
hook 012
handler 012

checks O
The O
hook O
handler O
for O
ZwTerminateProcess() O

unloads O
it O

deactivates O
it O

hide 002
The 002
ObOpenObjectByName() 002
hook 002

encrypt 002
data 002
stored 002
on 002
its 002
virtual 002
partitions 002

sets O
the O
driver O

re-infect 013
the 013
rootkit 013

be 002
used 002
These 002
tools 002

re-enable 015
the 015
rootkit 015

hooks O
the O
rootkit O

registers 011
it 011

is 011
notified 011
its 011
callout 011
driver 011

use 005
the 005
Snake 005
driver 005

triggers O
the O
rootkit O

is 011
intercepted 011
it 011

scanned 005
for 005
the 005
presence 005
of 005
the 005
hidden 005
commands 005
from 005
C&C 005

inspects 011
The 011
driver 011

manipulate 011
data 011
streams 011

insert 005
Snake 005

hooks O
Snake O

hooks O
Snake O

intercepts 011
it 011

inspect 011
it 011

looking 005
for 005
and 005
then 005
parsing 005
GET/POST 005
HTTP 005
requests 005
and 005
also 005
SMTP 005
communications 005

distinguish 005
it 005

detects 015
the 015
rootkit 015

invoke O
FwpsStreamInjectAsync0() O
API O

creates O
the O
driver O

generate 005
outbound 005
requests 005

‘pulse’ O
the O
TDI O
driver O

intercepts 011
the 011
driver 011

execute 005
the 005
DLL 005
module 005

be 005
delivered 005
the 005
driver 005

installs 017
code 017

is 017
set 017
up 017
This 017
driver 017

hooks O
the O
drivers O

hooks O
the O
following O
exports O

installs 017
code 017

is O
stored O
NDIS O
filter O
driver O
configuration O

hook O
it O

is 005
used 005
This 005
device 005

installed O
the O
hooks O

register O
the O
hook O
handlers O

send 005
it 005

receive 005
it 005

bypassing 018
it 018

making 002
it 002

invokes O
NDIS O

receives 005
the 005
underlying 005
miniport 005
driver 005

invoking O
it O

drops O
it O

calling O
NdisSendNetBufferLists() O

defines 006
the 006
protocol 006
driver 006

send 006
the 006
data 006

calls O
NDIS O

manipulate 011
Snake 011

parse 011
all 011
incoming 011
traffic 011

‘inject’ 011
the 011
traffic 011

reach 005
out 005
to 005
external 005
components 005

detect 011
traffic 011
addressed 011
to 011
itself 011

registered O
Snake O

is O
registered O
The O
driver O

is O
registered O
The O
driver O

registers O
The O
Snake O
rootkit O

intercepts 011
the 011
driver 011

parses 011
it 011

applied 001
XOR 001
0xAA 001

be 005
authenticated 005
it 005

is 005
implemented 005
The 005
authentication 005

decrypting 005
the 005
data 005

making 005
sure 005
it 005
starts 005
with 005
the 005
markers 005
0xDEADBEAF 005
and 005
0xC001BA5E 005
(which 005
appear 005
to 005
derive 005
from 005
‘DEAD 005
BEEF’ 005
and 005
‘COOL 005
BASE’) 005

routing 011
the 011
driver 011

is 005
acting 005
the 005
driver 005

respond 005
the 005
driver 005

is 005
authenticated 005
and 005
decrypted 005
the 005
incoming 005
data 005

log 017
its 017
activity 017

writes 017
the 017
driver 017

send O
it O

send O
a O
received O
peer-2-peer O
command O
message O
write_peer_nfo=[IP_ADDRESS:PORT]0frag_no_scrambling=Y0 O

log 017
the 017
DLL 017

is O
dropped O
the O
DLL O

used O
the O
named O
pipes O

submitted O
Messages O

received O
the O
data O

identify O
the O
pipe O
server O

creates 002
The 002
driver 002

are O
mounted O
The O
volumes O

is O
created O
The O
first O
partition O

installed O
The O
hook O

be 012
injected 012
into 012
the 012
user-mode 012
processes 012

provides 002
The 002
hook 002

is O
written O
that O
data O

read O
that O
data O

is 002
based 002
The 002
encryption 002
algorithm 002

be 002
scrambled 002
on-the-fly 002

is O
saved O
the O
data O

reflected 017
in 017
the 017
persistent 017
storage 017
file 017
hotfix.dat 017

’s 002
a 002
fully 002
encrypted 002
file 002
with 002
flat 002
entropy 002

is 002
encrypted 002
The 002
data 002
stored 002
in 002
\\.\Hd2 002

be O
set O
up O
Both O
volumes O

keep 002
Snake 002

be O
installed O
as O
a O
service O

uses O
the O
Snake O
driver O

store O
the O
Snake O
driver O

stores O
it O

intercepted 019
keystrokes 019

contain 017
other 017
log 017
files 017

load O
its O
unsigned O
64-bit O
driver O

ensure 013
the 013
driver 013
is 013
loaded 013
automatically 013
at 013
startup 013

install 017
the 017
dropper 017

installs 017
it 017

behaves 015
it 015

be 012
run 012
within 012
taskhost.exe 012
or 012
services.exe 012
processes 012

is O
created O

copies O
itself O

registers O
The O
dropper O

is O
registered O
the O
dropper O
itself O

ensure 013
The 013
dropper 013

craft 018
an 018
attacker 018

be 018
used 018
the 018
vulnerable 018
driver 018

is 018
disabled 018
Code 018
Integrity 018
verification 018

be O
loaded O
the O
unsigned O
64-bit O
driver O

loads O
the O
Snake O
dropper O

locates O
the O
import O
of O
CI.dll’s O
function O
CiInitialize() O

sets O
up O
the O
driver O

parses O
it O

is O
loaded O
the O
64-bit O
unsigned O
driver O

registers O
Snake O
dropper O

start 013
Snake 013
dropper 013

load O
the O
driver O

install 017
Snake 017
dropper 017

disable 018
Snake 018
dropper 018

obtain 014
the 014
dropper 014

running 014
It 014

be O
injected O
libraries O

creating O
NTFS O
file O
systems O

is O
written O
the O
initial O
message O
queue O
file O

injected O
The O
usermode O
DLLs O

uses 005
The 005
rkctl_Win32.dll/rkctl_x64.dll 005
module 005

receives 005
it 005

control 005
other 005
components 005
of 005
Snake 005

activates O
the O
DLL O

calls O
PsSetCreateProcessNotifyRoutine() O

reads O
it O

creates O
the O
driver O

use 005
the 005
DLL 005

received 005
The 005
remote 005
commands 005

post 005
the 005
data 005

be 015
notified 015
whenever 015
a 015
new 015
process 015
is 015
started 015

rely 006
on 006
It 006

uses 005
it 005

be 005
Request 005
type 005

is 005
C&C 005
server 005
resource 005
name 005

be 005
GET 005

was 015
identified 015
as 015
a 015
network 015
reconnaissance 015
tool 015

been 017
downloaded 017
One 017
of 017
the 017
Snake 017
components 017

enumerates 015
this 015
tool 015

detects 015
what 015
Windows 015
RPC 015
services 015
are 015
enabled 015
at 015
the 015
endpoints 015

associated O
a O
list O
of O
interface O
identifiers O

write O
a O
message O

read O
It O

