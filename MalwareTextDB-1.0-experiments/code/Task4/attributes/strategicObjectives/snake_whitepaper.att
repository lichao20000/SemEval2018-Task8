fingerprint 047
it 047

reveal 046
it 046

stay O
persistent O
on O
a O
system O

is 007
encrypted 007
The 007
data 007

saved O
The O
data O

is 007
then 007
further 007
encrypted 007
This 007
file 007

is 018
uploaded 018
This 018
file 018

identify 031
the 031
remote 031
attacker 031

infect 038
Snake 038

deliver 017
the 017
generated 017
shellcode 017

adjusting 031
them 031

delivers 031
the 031
tool 031

exploits 031
the 031
tool 031

replicate 031
it 031

spreading 031
the 031
infection 031

repeating 031
the 031
infection 031
cycle 031

restore 043
Snake 043

taking 048
control 048
over 048
new 048
hosts 048

used 007
Agent.BTZ 007

created 052
Log 052
files 052

using 009
for 009
evading 009
host 009
defences 009

providing 007
It 007

carry O
out O
all O
of O
the O
communications O

delegate O
the O
network O
communication O
engine O

only O
needs O
When O
most O
of O
the O
infected O
hosts O
are O
cut O
off O
from O
the O
outside O
world O

is 034
then 034
routed 034
The 034
traffic 034

make O
external O
control O

make O
data O
exfiltration O

present O
significant O
challenges O
for O
traditional O
security O
technologies O
to O
detect O

sets O
it O

suggests O
The O
presence O
of O
the O
reconnaissance O
tool O
in O
the O
Snake O
operators’ O
framework O

compromise O
a O
system O

replicate 031
into 031
other 031
hosts 031

infect 031
them 031

spread 031
the 031
infection 031

allow O
the O
backdoor O
commands O

provide 038
Snake 038

staying 051
fully 051
inactive 051

hibernate 051

makes O
its O
detection O
during O
that O
time O

hide 007
the 007
presence 007
of 007
the 007
Snake 007
components 007
on 007
the 007
system 007

stay 009
unnoticed 009

overcome 057
account 057
restrictions 057
of 057
the 057
browser 057
processes 057

write O
the O
injected O
module O

creates 052
it 052

keep 007
its 007
network 007
communications 007

generate 034
malicious 034
traffic 034

‘blend 007
in’ 007
it 007

watches 064
The 064
driver 064

stays 051
Snake 051

intercepts 034
as 034
soon 034
as 034
the 034
user 034
goes 034
online 034

injects 038
the 038
driver 038

initiates 017
the 017
module 017

establishing O
and O
maintaining O
a O
presence O

blend 007
this 007
behaviour 007

bypassing 058
the 058
firewalls 058

keeping O
a O
low O
profile O

stay O
Snake O
rootkit O

Hiding 009
Snake 009
rootkit 009

injected 038
the 038
driver 038

started 034
producing 034
the 034
following 034
traffic 034

relies 016
on 016
The 016
domain 016
names 016
of 016
the 016
C&C 016
servers 016

resolves 016
the 016
malware 016

fetches 018
it 018

expects 017
the 017
server 017
to 017
respond 017
with 017
a 017
string 017
“1”, 017
acknowledging 017
it’s 017
active 017

asks 018
it 018

returns 017
the 017
server 017

receives 017
it 017

is 007
encrypted 007
The 007
command 007

calculates 017
and 017
confirms 017
it 017

covertly 039
install 039
It 039

decrypt 017
the 017
malware 017

applies 017
the 017
malware 017

maintain O
They O

decrypts 017
the 017
data 017

makes 017
sure 017
the 017
command 017
is 017
destined 017
to 017
the 017
current 017
host 017

interprets 017
the 017
malware 017

connects 016
the 016
malware 016

asking 018
the 018
malware 018

receives 017
The 017
command 017

uploads 018
it 018

cleans 054
out 054
it 054

hide 007
the 007
presence 007
of 007
its 007
components 007

uploads 018
it 018

store 052
configuration 052
and 052
log 052
data 052

are O
used O
rootkit O

supports O
3 O
modes O
of O
fetching O
C&C O
commands O

relies O
on O
Windows O
Internet O
(WinINet) O
APIs, O
such O
as O
HttpOpenRequest(), O
HttpSendRequest(), O
InternetReadFile(), O
etc O

uses O
Windows O
Sockets O
2 O
(Winsock) O
APIs, O
such O
as O
WSAStartup(), O
socket(), O
connect(), O
send(), O
etc O

works O
it O

provide O
a O
communication O
mechanism O
with O
its O
C&C O
servers O

passes O
it O

injects 038
the 038
malicious 038
driver 038
with 038
the 038
embedded 038
DLL 038
module 038

function O
the O
DLL O

detects 064
the 064
driver 064

inject 038
it 038

enable O
an O
effective O
data O
exfiltration O
mechanism O

start O
the O
DLL O

start O
the O
injected O
DLL O

sending 018
the 018
injected 018
DLL 018

is O
delegated O
the O
task O
of O
communication O
with O
C&C O

start O
it O

bypassing 058
the 058
host-based 058
firewalls 058
that 058
keep 058
an 058
infected 058
system 058
process 058
in 058
a 058
white-list 058

‘legitimise’ 058
the 058
pipes 058
usage 058

is O
spawned O
a O
dedicated O
thread O

listen 064
for 064
IPC 064
messages 064
received 064
through 064
the 064
pipes 064

are O
carried O
out O
the O
network O
communications O

perform O
GET O

perform O
POST O
requests O

ask O
the O
pipe O
server O

saving 038
the 038
pipe 038
server 038

copy 038
files 038

delete 038
files 038

save 038
configuration 038
data 038

keep 009
This 009
delegation 009
of 009
tasks 009

overcome 057
account 057
restrictions 057
imposed 057
on 057
a 057
browser 057
process 057

write 038
into 038
files 038

write 038
into 038
registry 038

send 018
the 018
clients 018

are O
handled O
the O
network O
communications O

calls O
it O

communicates O
The O
usermode O
component O
of O
Snake O

write O
data O

opens O
it O

are 016
hard-coded 016
the 016
initial 016
set 016
of 016
domain 016
names 016

provide 038
these 038
commands 038

allowing 038
remote 038
attacker 038

depend 046
on 046
The 046
choice 046
of 046
what 046
architecture 046
should 046
be 046
used 046

performed 038
the 038
malware 038

update 017
the 017
driver 017

rely O
on O
its O
communication O
capabilities O

is 050
installed 050
via 050
an 050
update 050

is O
the O
kernel-mode O
driver O

be 038
instructed 038
the 038
usermode 038
component 038

copying 038
all 038
the 038
necessary 038
logs 038

carry O
out O
a O
kernel-mode O
driver O

are 038
still 038
injected 038
The 038
usermode 038
DLLs 038

installed O
a O
kernel O
mode O
driver O

be 031
distributed 031
via 031
a 031
phishing 031
email 031
attachment 031

be 031
delivered 031
via 031
an 031
exploit 031
across 031
the 031
network 031

starts O
Infection O

executed O
the O
dropper O

installs 050
the 050
kernel 050
mode 050
driver 050

install 050
On 050
a 050
32-bit 050
OS 050

install 050
a 050
64-bit 050
driver 050

injected 038
a 038
usermode 038
DLL 038

creates 050
The 050
analysed 050
32-bit 050
dropper 050

is O
ensured O
with O
creation O
of O
the O
following O
registry O
entries O

places O
The O
rootkit O

flags O
The O
driver O

hooks O
it O

install 050
it 050

calls O
The O
installed O
hook O
handler O

checks O
if O
the O
name O
of O
the O
device O
is O
netbt O
or O
afd O

hide 009
its 009
hooks 009

hide 007
the 007
driver 007

hooks O
the O
driver O

block 011
the 011
hook 011
handlers 011
of 011
the 011
registry-related 011
APIs 011

load 038
the 038
Snake 038
driver 038

blocks 011
the 011
rootkit 011

block 011
The 011
ZwReadFile() 011
hook 011
handler 011

blocked 011
it 011

inject 038
The 038
ZwClose() 038
hook 038
handler 038

checks O
The O
hook O
handler O
for O
ZwTerminateProcess() O

unloads O
it O

deactivates O
it O

hide 007
The 007
ObOpenObjectByName() 007
hook 007

encrypt 007
data 007
stored 007
on 007
its 007
virtual 007
partitions 007

sets O
the O
driver O

re-infect 042
the 042
rootkit 042

be O
used O
These O
tools O

re-enable 042
the 042
rootkit 042

hooks O
the O
rootkit O

registers 034
it 034

is 034
notified 034
its 034
callout 034
driver 034

use O
the O
Snake O
driver O

triggers O
the O
rootkit O

is 034
intercepted 034
it 034

scanned O
for O
the O
presence O
of O
the O
hidden O
commands O
from O
C&C O

inspects 034
The 034
driver 034

manipulate 034
data 034
streams 034

insert 018
Snake 018

hooks O
Snake O

hooks O
Snake O

intercepts 034
it 034

inspect 034
it 034

looking O
for O
and O
then O
parsing O
GET/POST O
HTTP O
requests O
and O
also O
SMTP O
communications O

distinguish O
it O

detects 046
the 046
rootkit 046

invoke O
FwpsStreamInjectAsync0() O
API O

creates O
the O
driver O

generate 018
outbound 018
requests 018

‘pulse’ O
the O
TDI O
driver O

intercepts 034
the 034
driver 034

execute 017
the 017
DLL 017
module 017

be 018
delivered 018
the 018
driver 018

installs 050
code 050

is 050
set 050
up 050
This 050
driver 050

hooks O
the O
drivers O

hooks O
the O
following O
exports O

installs 050
code 050

is O
stored O
NDIS O
filter O
driver O
configuration O

hook O
it O

is O
used O
This O
device O

installed O
the O
hooks O

register O
the O
hook O
handlers O

send 018
it 018

receive 017
it 017

bypassing 058
it 058

making 007
it 007

invokes O
NDIS O

receives 017
the 017
underlying 017
miniport 017
driver 017

invoking O
it O

drops O
it O

calling O
NdisSendNetBufferLists() O

defines 021
the 021
protocol 021
driver 021

send 020
the 020
data 020

calls O
NDIS O

manipulate 034
Snake 034

parse 034
all 034
incoming 034
traffic 034

‘inject’ 034
the 034
traffic 034

reach O
out O
to O
external O
components O

detect 034
traffic 034
addressed 034
to 034
itself 034

registered O
Snake O

is O
registered O
The O
driver O

is O
registered O
The O
driver O

registers O
The O
Snake O
rootkit O

intercepts 034
the 034
driver 034

parses 034
it 034

applied 004
XOR 004
0xAA 004

be 017
authenticated 017
it 017

is 017
implemented 017
The 017
authentication 017

decrypting 017
the 017
data 017

making 017
sure 017
it 017
starts 017
with 017
the 017
markers 017
0xDEADBEAF 017
and 017
0xC001BA5E 017
(which 017
appear 017
to 017
derive 017
from 017
‘DEAD 017
BEEF’ 017
and 017
‘COOL 017
BASE’) 017

routing O
the O
driver O

is O
acting O
the O
driver O

respond 018
the 018
driver 018

is 017
authenticated 017
and 017
decrypted 017
the 017
incoming 017
data 017

log 052
its 052
activity 052

writes 052
the 052
driver 052

send O
it O

send O
a O
received O
peer-2-peer O
command O
message O
write_peer_nfo=[IP_ADDRESS:PORT]0frag_no_scrambling=Y0 O

log 052
the 052
DLL 052

is O
dropped O
the O
DLL O

used O
the O
named O
pipes O

submitted O
Messages O

received O
the O
data O

identify O
the O
pipe O
server O

creates 007
The 007
driver 007

are O
mounted O
The O
volumes O

is O
created O
The O
first O
partition O

installed O
The O
hook O

be 038
injected 038
into 038
the 038
user-mode 038
processes 038

provides 007
The 007
hook 007

is O
written O
that O
data O

read O
that O
data O

is 007
based 007
The 007
encryption 007
algorithm 007

be 007
scrambled 007
on-the-fly 007

is O
saved O
the O
data O

reflected 052
in 052
the 052
persistent 052
storage 052
file 052
hotfix.dat 052

’s 007
a 007
fully 007
encrypted 007
file 007
with 007
flat 007
entropy 007

is 007
encrypted 007
The 007
data 007
stored 007
in 007
\\.\Hd2 007

be O
set O
up O
Both O
volumes O

keep 007
Snake 007

be O
installed O
as O
a O
service O

uses O
the O
Snake O
driver O

store O
the O
Snake O
driver O

stores O
it O

intercepted 061
keystrokes 061

contain 052
other 052
log 052
files 052

load O
its O
unsigned O
64-bit O
driver O

ensure 042
the 042
driver 042
is 042
loaded 042
automatically 042
at 042
startup 042

install 050
the 050
dropper 050

installs 050
it 050

behaves 046
it 046

be 038
run 038
within 038
taskhost.exe 038
or 038
services.exe 038
processes 038

is O
created O

copies O
itself O

registers O
The O
dropper O

is O
registered O
the O
dropper O
itself O

ensure 042
The 042
dropper 042

craft 058
an 058
attacker 058

be 058
used 058
the 058
vulnerable 058
driver 058

is 058
disabled 058
Code 058
Integrity 058
verification 058

be O
loaded O
the O
unsigned O
64-bit O
driver O

loads O
the O
Snake O
dropper O

locates O
the O
import O
of O
CI.dll’s O
function O
CiInitialize() O

sets O
up O
the O
driver O

parses O
it O

is O
loaded O
the O
64-bit O
unsigned O
driver O

registers O
Snake O
dropper O

start 042
Snake 042
dropper 042

load O
the O
driver O

install 050
Snake 050
dropper 050

disable 059
Snake 059
dropper 059

obtain O
the O
dropper O

running 044
It 044

be O
injected O
libraries O

creating O
NTFS O
file O
systems O

is O
written O
the O
initial O
message O
queue O
file O

injected O
The O
usermode O
DLLs O

uses O
The O
rkctl_Win32.dll/rkctl_x64.dll O
module O

receives 017
it 017

control 018
other 018
components 018
of 018
Snake 018

activates O
the O
DLL O

calls O
PsSetCreateProcessNotifyRoutine() O

reads O
it O

creates O
the O
driver O

use O
the O
DLL O

received 017
The 017
remote 017
commands 017

post 018
the 018
data 018

be 046
notified 046
whenever 046
a 046
new 046
process 046
is 046
started 046

rely O
on O
It O

uses O
it O

be O
Request O
type O

is O
C&C O
server O
resource O
name O

be O
GET O

was 047
identified 047
as 047
a 047
network 047
reconnaissance 047
tool 047

been 050
downloaded 050
One 050
of 050
the 050
Snake 050
components 050

enumerates 047
this 047
tool 047

detects 047
what 047
Windows 047
RPC 047
services 047
are 047
enabled 047
at 047
the 047
endpoints 047

associated O
a O
list O
of O
interface O
identifiers O

write O
a O
message O

read O
It O

