There EX O
are VBP O
two CD O
types NNS O
of IN O
Derusbi NNP O
malware NN O
: : O
a DT O
client NN O
- HYPH O
server NN O
model NN O
and CC O
a DT O
server NN O
- HYPH O
client NN O
model NN O
. . O

Both DT O
types NNS O
provide VBP O
basic JJ O
RAT NN O
functionality NN O
with IN O
the DT O
distinction NN O
between IN O
the DT O
two CD O
being VBG O
largely RB O
the DT O
directionality NN O
of IN O
the DT O
communication NN O
. . O

This DT O
report NN O
will MD O
focus VB O
on IN O
the DT O
server NN O
- HYPH O
client NN O
variant NN O
( -LRB- O
or CC O
simply RB O
, , O
the DT O
" `` O
server NN O
variant NN O
" '' O
) -RRB- O
of IN O
Derusbi NNP B-Entity
, , O
which WDT O
acts VBZ O
as IN O
a DT O
server NN O
on IN O
a DT O
victim NN O
's POS O
machine NN O
and CC O
waits VBZ B-Action
for IN B-Modifier
commands VBZ O
from IN B-Entity
a DT I-Entity
controlling VBG I-Entity
client NN I-Entity
. . O

In IN O
and CC O
of IN O
itself PRP O
, , O
the DT O
Derusbi NNP O
server NN O
variant NN O
is VBZ O
a DT O
largely RB O
unremarkable JJ O
RAT NN O
when WRB O
viewed VBN O
from IN O
the DT O
perspective NN O
of IN O
functional JJ O
capabilities NNS O
. . O

The DT O
server NN O
variant NN O
supports VBZ O
basic JJ O
RAT NNP O
functionality NN O
such JJ O
as IN O
file NN O
management NN O
( -LRB- O
uploading NN O
and CC O
downloading NN O
) -RRB- O
, , O
network NN O
tunneling NN O
and CC O
remote JJ O
command NN O
shell NN O
. . O

What WP O
makes VBZ O
the DT O
server NN O
variant NN O
interesting JJ O
is VBZ O
the DT B-Entity
device NN I-Entity
driver NN I-Entity
that IN O
the DT B-Entity
variant NN I-Entity
installs VBZ B-Action
. . O

The DT O
server NN B-Entity
variant NN I-Entity
utilizes VBZ O
a DT O
device NN O
driver NN O
in IN O
order NN O
to IN O
hook NN B-Action
into IN B-Modifier
the DT O
Windows NNP B-Entity
firewall NN I-Entity
by IN O
either DT O
using VBG O
largely RB O
undocumented JJ O
Windows NNP O
Firewall NNP O
hooking VBG O
techniques NNS O
found VBN O
in IN O
Windows NNP O
XP NNP O
and CC O
older JJR O
or CC O
by IN O
using VBG O
the DT O
documented VBN O
Windows NNP O
Filtering NNP O
Platform NNP O
found VBD O
in IN O
Windows NNP O
Vista NNP O
and CC O
later RB O
. . O

The DT O
driver NN B-Entity
, , O
after IN O
hooking VBG B-Action
the DT O
firewall NN B-Entity
using VBG O
either CC O
of IN O
the DT O
two CD O
mentioned VBN O
interfaces NNS O
, , O
will MD O
inspect VB O
incoming JJ O
network NN O
packets NNS O
. . O

If IN O
a DT O
specific JJ O
handshake NN O
occurs VBZ O
between IN O
the DT O
client NN O
and CC O
the DT O
server NN O
variant NN O
, , O
the DT O
remainder NN O
of IN O
the DT O
communication NN O
session NN O
for IN O
the DT O
established VBN O
session NN O
will MD O
be VB O
redirected VBN O
to IN O
the DT O
server NN O
variant NN O
. . O

If IN O
the DT O
driver NN O
does VBZ O
not RB O
detect VB O
the DT O
appropriate JJ O
handshake NN O
, , O
then RB O
the DT O
network NN O
traffic NN O
is VBZ O
allowed VBN O
to TO O
pass VB O
unobstructed JJ O
. . O

This DT O
allows VBZ O
an DT B-Entity
attacker NN I-Entity
to IN O
hide VB B-Action
their PRP$ O
communication NN B-Entity
within IN O
a DT O
cluster NN O
of IN O
network NN O
sessions NNS O
originating VBG O
from IN O
a DT O
single JJ O
IP NN O
such JJ O
as IN O
would MD O
be VB O
the DT O
case NN O
for IN O
a DT O
client NN O
performing VBG O
multiple JJ O
HTTP NNP O
requests NNS O
against IN O
a DT O
web NN O
server NN O
. . O

The DT O
server NN O
variant NN O
runs VBZ O
as IN O
a DT O
svchost NN O
dependent JJ O
service NN O
. . O

While IN O
the DT O
server NN O
variant NN O
binary NN O
does VBZ O
have VB O
exports NNS O
related VBN O
to IN O
the DT O
standard JJ O
service NN O
DLL NNP O
( -LRB- O
e.g. RB O

ServiceMain NNP O
, , O
DllRegisterService NNP O
, , O
etc FW O
. . O
) -RRB- O
, , O
the DT O
startup NN O
sequence NN O
truly RB O
begins VBZ O
in IN O
the DT O
DllEntryPoint NN O
function NN O
. . O

When WRB O
loaded VBD B-Action
into IN B-Modifier
memory NN B-Entity
via IN B-Modifier
a DT O
LoadLibrary NNP B-Entity
or CC I-Entity
equivalent JJ I-Entity
function NN I-Entity
call NN I-Entity
, , O
the DT B-Entity
server NN I-Entity
variant NN I-Entity
will MD O
determine VB O
the DT O
name NN O
of IN O
the DT O
host NN O
binary NN O
( -LRB- O
presumably RB O
svchost.exe NNS O
) -RRB- O
as RB O
well RB O
as IN O
its PRP$ O
own JJ O
DLL NNP O
's POS O
name NN O
. . O

The DT O
binary JJ B-Entity
then RB O
spawns VBZ B-Action
a DT O
new JJ B-Entity
thread NN I-Entity
that WDT O
contains VBZ O
the DT O
main JJ O
server NN O
variant NN O
code NN O
in IN O
order NN O
to TO O
allow VB O
the DT O
DllEntryPoint NN O
routine NN O
to TO O
return VB O
to IN O
the DT O
calling NN O
function NN O
. . O

Within IN O
the DT O
main JJ O
server NN O
variant NN O
function NN O
( -LRB- O
dubbed VBN O
mainThread NNP O
) -RRB- O
, , O
the DT O
server NN O
variant NN O
loads VBZ O
a DT O
pointer NN O
to IN O
the DT O
API NN O
function NN O
GetCommandLineW NNP O
, , O
locates VBZ O
the DT O
pointer NN O
in IN O
memory NN O
to IN O
the DT O
command NN O
line NN O
string NN O
, , O
and CC O
then RB O
locates VBZ O
the DT O
first JJ O
space NN O
within IN O
the DT O
command NN O
line NN O
string NN O
and CC O
terminates VBZ O
the DT O
string NN O
by IN O
placing VBG O
a DT O
NULL JJ O
character NN O
at IN O
the DT O
location NN O
. . O

The DT O
server NN B-Entity
variant NN I-Entity
then RB O
attempts VBZ O
to TO O
determine VB B-Action
if IN B-Modifier
it PRP O
has VBZ B-Entity
suitable JJ I-Entity
access NN I-Entity
rights NNS I-Entity
within IN O
the DT O
system NN O
in IN O
order NN O
to IN O
operation NN O
. . O

The DT O
check NN B-Entity
for IN I-Entity
access NN I-Entity
rights NNS I-Entity
effectively RB O
checks NNS B-Action
to TO O
see VB O
if IN B-Modifier
the DT O
server NN B-Entity
variant NN I-Entity
process NN I-Entity
is VBZ I-Entity
running VBG I-Entity
under IN I-Entity
the DT I-Entity
NT NNP I-Entity
Authority NNP I-Entity
. . O

If IN O
the DT O
check NN O
is VBZ O
unsuccessful JJ O
, , O
then RB O
the DT O
server NN O
variant NN O
terminates VBZ O
. . O

With IN O
the DT O
command NN O
line NN O
patched VBN O
and CC O
authority NN O
verified VBD O
, , O
the DT O
server NN O
variant NN O
sleeps VBZ O
for IN O
5 CD O
seconds NNS O
before IN O
verifying VBG O
that IN O
the DT O
fShutdown NNP O
flag NN O
is VBZ O
not RB O
set VBN O
. . O

The DT O
fShutdown JJ O
flag NN O
can MD O
become VB O
set VBN O
by IN O
the DT O
process NN O
loading VBG O
the DT O
server NN O
variant NN O
calling VBG O
the DT O
DllRegisterServer NNP O
export NN O
. . O

The DT O
DllRegisterServer NNP B-Entity
function NN I-Entity
, , O
among IN O
other JJ O
tasks NNS O
, , O
will MD O
attempt VB O
to TO O
install VB B-Action
the DT O
server NN B-Entity
variant NN I-Entity
as IN O
a DT O
server NN O
on IN O
the DT O
victim NN O
's POS O
machine NN O
. . O

Therefore RB O
, , O
by IN O
waiting VBG O
5 CD O
seconds NNS O
before IN O
continuing VBG O
the DT O
mainThread JJ O
functionality NN O
, , O
the DT O
server NN O
variant NN O
is VBZ O
giving VBG O
the DT O
DllRegisterServer NNP O
time NN O
to TO O
activate VB O
and CC O
perform VB O
the DT O
necessary JJ O
operations NNS O
to TO O
ensure VB O
that IN O
the DT O
server NN O
variant NN O
is VBZ O
properly RB O
installed VBN O
and CC O
activated VBN O
as IN O
a DT O
service NN O
. . O

The DT O
mainThread NN O
calls VBZ O
the DT O
mainLoop NN O
function NN O
of IN O
the DT O
server NN O
variant NN O
. . O

The DT O
mainLoop NN B-Entity
function NN I-Entity
begins VBZ O
by IN O
loading VBG B-Action
the DT O
unique JJ B-Entity
infection NN I-Entity
ID NNP I-Entity
for IN O
the DT O
victim NN O
's POS O
machine NN O
from IN O
the DT O
registry NN O
( -LRB- O
under IN O
the DT O
key JJ O
value NN O
located VBN O
at IN O
HKLM\SOFTWARE\Microsoft\Rpc\Security NNP O
) -RRB- O
. . O

The DT O
infection NN O
ID NNP O
, , O
if IN O
present JJ O
, , O
must MD O
be VB O
decoded VBN O
by IN O
XOR'ing VBG O
each DT O
byte NN O
of IN O
the DT O
string NN O
with IN O
a DT O
static JJ O
byte NN O
value NN O
( -LRB- O
typically RB O
0x5F NNP O
) -RRB- O
. . O

If IN O
the DT O
infection NN O
ID NNP O
does VBZ O
not RB O
exist VB O
within IN O
the DT O
registry NN O
, , O
the DT O
server NN O
variant NN O
will MD O
attempt VB O
to TO O
load VB O
the DT O
configuration NN O
from IN O
an DT O
encoded JJ O
buffer NN O
located VBN O
immediately RB O
after IN O
the DT O
static JJ O
string NN O
XXXXXXXXXXXXXXX NNP O
, , O
decode VB O
the DT O
buffer NN O
by IN O
starting VBG O
at IN O
the DT O
last JJ O
byte NN O
and CC O
XORing VBG O
each DT O
previous JJ O
byte NN O
by IN O
the DT O
current JJ O
byte NN O
value NN O
in IN O
reverse NN O
order NN O
; : O
the DT O
server NN O
variant NN O
will MD O
then RB O
use VB O
a DT O
specific JJ O
portion NN O
of IN O
the DT O
configuration NN O
blob NN O
as IN O
the DT O
infection NN O
ID NNP O
's POS O
base NN O
. . O

Next RB O
, , O
the DT O
server NN O
variant NN O
will MD O
append VB O
a DT O
hyphen NN O
and CC O
a DT O
four CD O
digit NN O
value NN O
to IN O
the DT O
end NN O
of IN O
the DT O
infection NN O
ID NNP O
to TO O
generate VB O
the DT O
unique JJ O
infection NN O
ID NNP O
for IN O
the DT O
victim NN O
's POS O
machine NN O
. . O

The DT O
newly RB O
generated VBN O
infection NN O
ID NN O
is VBZ O
then RB O
saved VBN O
to IN O
the DT O
registry NN O
location NN O
stated VBD O
previously RB O
. . O

The DT O
mainLoop NNP B-Entity
attempts VBZ O
to TO O
get VB B-Action
the DT O
privileges NNS B-Entity
for IN O
SeDebugPrivilege NNP O
, , O
SeLoadDriverPrivilege NNP O
, , O
SeShutdownPrivilege NNP O
, , O
and CC O
SeTcbPrivilege NNP O
in IN O
order NN O
to TO O
perform VB O
the DT O
necessary JJ O
operations NNS O
to TO O
load VB O
the DT O
driver NN O
portion NN O
of IN O
the DT O
server NN O
variant NN O
. . O

The DT O
mainLoop NNP O
will MD O
attempt VB O
to TO O
open VB O
a DT O
handle NN O
to IN O
the DT O
driver NN O
( -LRB- O
if IN O
it PRP O
is VBZ O
already RB O
installed VBN O
) -RRB- O
by IN O
calling VBG O
CreateFile NNP O
with IN O
the DT O
filename NN O
of IN O
\Device\{93144EB0 CD O
- HYPH O
8E3E-4591-B307 CD O
- HYPH O
8EEBFE7DB28F}. CD O

Failing VBG O
this DT O
, , O
the DT O
mainLoop NNP O
determines VBZ O
if IN O
the DT O
victim NN O
's POS O
machine NN O
is VBZ O
running VBG O
the DT O
360 CD O
antivirus NN O
product NN O
by IN O
looking VBG O
for IN O
a DT O
process NN O
with IN O
the DT O
name NN O
ZhuDongFangYu.exe NNP O
. . O

If IN O
the DT O
process NN O
is VBZ O
running VBG O
, , O
the DT O
driver NN O
is VBZ O
not RB O
installed VBN O
but CC O
the DT O
mainLoop NN O
continues VBZ O
regardless RB O
. . O

If IN O
the DT O
process NN O
is VBZ O
not RB O
found VBN O
, , O
however RB O
, , O
the DT O
mainLoop NNP O
will MD O
extract VB O
the DT O
driver NN O
binary NN O
from IN O
an DT O
encoded VBN O
buffer NN O
within IN O
itself PRP O
, , O
decode VB O
the DT O
file NN O
in IN O
memory NN O
( -LRB- O
using VBG O
a DT O
rotating NN O
4-byte CD O
XOR NNP O
key NN O
) -RRB- O
, , O
and CC O
install VB O
the DT O
driver NN O
on IN O
the DT O
victim NN O
's POS O
machine NN O
as IN O
% NN O
SYSDIR%\Drivers\{93144EB0 NNP O
- HYPH O
8E3E-4591-B307 NNP O
- HYPH O
8EEBFE7DB28F}.sys NNP O
. . O

With IN O
the DT O
driver NN O
present JJ O
( -LRB- O
or CC O
recently RB O
installed VBN O
) -RRB- O
, , O
the DT O
mainLoop NNP O
spawns VBZ O
another DT O
thread NN O
( -LRB- O
dubbed VBN O
DerusbiThread::DerusbiThread NNP O
) -RRB- O
that DT O
acts VBZ O
as IN O
the DT O
primary JJ O
communication NN O
loop NN O
. . O

DerusbiThread::DerusbiThread NN O
begins VBZ O
by IN O
generating VBG O
a DT O
PCC_SOCK JJ O
object NN O
. . O

PCC_SOCK NN O
is VBZ O
an DT O
abstraction NN O
for IN O
the DT O
communication NN O
subsystem NN O
. . O

The DT O
prototype NN O
for IN O
PCC_SOCK NN O
appears VBZ O
in IN O
Figure NNP O
1 CD O
. . O

With IN O
a DT O
new JJ O
PCC_SOCK NNP O
object NN O
allocates VBZ O
, , O
DerusbiThread::DerusbiThread NNP B-Entity
selects VBZ B-Action
a DT O
port NN B-Entity
between IN I-Entity
40,000 CD I-Entity
and CC I-Entity
45,000 CD I-Entity
to IN B-Modifier
use NN O
as IN B-Entity
a DT I-Entity
listening VBG I-Entity
port NN I-Entity
. . O

The DT O
port NN O
number NN O
is VBZ O
sent VBN O
to IN O
the DT O
driver NN O
( -LRB- O
via IN O
IOCTL NNP O
0x220200 NNP O
) -RRB- O
in IN O
order NN O
to TO O
inform VB O
the DT O
driver NN O
where WRB O
to TO O
redirect VB O
incoming JJ O
traffic NN O
. . O

The DT O
" `` O
Windows NNP O
Device NNP O
Driver NNP O
( -LRB- O
Firewall NNP O
Hook NNP O
) -RRB- O
" `` O
section NN O
explains VBZ O
the DT O
functionality NN O
of IN O
the DT O
driver NN O
in IN O
greater JJR O
detail NN O
. . O

DerusbiThread::DerusbiThread IN B-Entity
binds VBZ O
to IN O
the DT O
specified VBN O
port NN O
and CC O
opens VBZ B-Action
the DT O
port NN B-Entity
as IN B-Modifier
a DT O
listener NN B-Entity
. . O

At IN O
this DT O
point NN O
DerusbiThread::DerusbiThread NN O
enters VBZ O
an DT O
infinite JJ O
loop NN O
of IN O
waiting VBG O
for IN O
new JJ O
connections NNS O
to IN O
the DT O
listening VBG O
socket NN O
and CC O
dispatching VBG O
a DT O
new JJ O
thread NN O
( -LRB- O
dubbed VBN O
CommLoop NNP O
) -RRB- O
to TO O
handle VB O
the DT O
traffic NN O
for IN O
the DT O
socket NN O
until IN O
fShutdown NNP O
is VBZ O
set VBN O
. . O

At IN O
this DT O
point NN O
, , O
the DT O
startup NN O
sequence NN O
for IN O
Derusbi NNP O
is VBZ O
complete JJ O
and CC O
the DT O
server NN O
variant NN O
moves VBZ O
into IN O
a DT O
communication NN O
and CC O
command NN O
dispatch NN O
phase NN O
. . O

The DT O
communication NN O
between IN O
the DT O
controlling VBG O
client NN O
and CC O
the DT O
Derusbi NNP O
server NN O
variant NN O
depends VBZ O
on IN O
the DT O
device NN O
driver NN O
being VBG O
in IN O
place NN O
. . O

The DT O
authors NNS O
of IN O
the DT O
device NN O
driver NN O
designed VBN O
the DT O
driver NN O
to TO O
work VB O
on IN O
Windows NNP O
2000 CD O
and CC O
later JJ O
versions NNS O
of IN O
the DT O
Windows NNP O
operating VBG O
system NN O
. . O

Depending VBG O
on IN O
the DT O
version NN O
of IN O
the DT O
victim NN O
's POS O
OS NN O
, , O
the DT O
driver NN O
will MD O
hook VB O
the DT O
Windows NNP O
Firewall NNP O
by IN O
either CC O
using VBG O
the DT O
surprisingly RB O
undocumented JJ O
IOCTL_IP_SET_FIREWALL_HOOK NNP O
command NN O
of IN O
the DT O
\\Device\IP JJ O
device NN O
for IN O
Windows NNP O
XP NNP O
or CC O
older JJR O
machines NNS O
or CC O
by IN O
using VBG O
the DT O
documented VBN O
Windows NNP O
Filtering NNP O
Platform NNP O
( -LRB- O
WFP NNP O
) -RRB- O
found VBD O
in IN O
Windows NNP O
Vista NNP O
and CC O
later RB O
. . O

The DT O
device NN B-Entity
driver NN I-Entity
inspects VBZ B-Action
incoming VBG O
network NN B-Entity
traffic NN I-Entity
from IN I-Entity
any DT I-Entity
client NN I-Entity
connecting VBG I-Entity
to IN I-Entity
the DT I-Entity
victim NN I-Entity
machine NN I-Entity
, , O
determines VBZ O
if IN O
an DT O
appropriate JJ O
handshake NN O
packet NN O
occurs VBZ O
at IN O
the DT O
beginning NN O
of IN O
a DT O
new JJ O
TCP NNP O
session NN O
, , O
and CC O
then RB O
makes VBZ O
the DT O
decision NN O
to TO O
reroute VB B-Action
the DT O
network NN B-Entity
traffic NN I-Entity
to IN O
the DT O
Derusbi NNP O
malware NN O
or CC O
let VB O
the DT O
traffic NN O
continue VB O
unaltered JJ O
to IN O
its PRP$ O
original JJ O
service NN O
. . O

Once RB O
a DT O
session NN O
has VBZ O
been VBN O
established VBN O
by IN O
means NNS O
of IN O
a DT O
valid JJ O
handshake NN O
, , O
any DT O
subsequent JJ O
packets NNS O
from IN O
the DT O
client NN O
for IN O
the DT O
given VBN O
TCP NNP O
session NN O
will MD O
automatically RB O
be VB O
directed VBN O
by IN O
the DT O
device NN O
driver NN O
to IN O
the DT O
Derusbi NNP O
server NN O
variant NN O
. . O

The DT O
device NN O
driver NN O
does VBZ O
not RB O
capture VB O
or CC O
store VB O
any DT O
network NN O
traffic NN O
outside IN O
of IN O
the DT O
initial JJ O
handshake NN O
inspection NN O
. . O

The DT O
Derusbi NNP B-Entity
server NN I-Entity
variant NN I-Entity
will MD O
select VB O
an DT B-Entity
available JJ I-Entity
, , I-Entity
random JJ I-Entity
port NN I-Entity
between IN O
the DT O
range NN O
of IN O
40,000 CD O
and CC O
45,000 CD O
on IN O
the DT O
victim NN O
's POS O
machine NN O
upon IN O
which WDT O
to TO O
listen VB B-Action
. . O

After IN O
selecting VBG O
the DT O
port NN O
, , O
the DT O
server NN O
variant NN O
will MD O
wait VB O
for IN O
incoming VBG O
connections NNS O
and CC O
instruct VB O
the DT B-Entity
driver NN I-Entity
to TO O
redirect VB B-Action
appropriate JJ O
TCP NNP B-Entity
sessions NNS I-Entity
to IN O
the DT O
listening NN O
port NN O
. . O

In IN O
order NN O
to TO O
establish VB O
a DT O
valid JJ O
communication NN O
channel NN O
between IN O
the DT O
server NN O
variant NN O
and CC O
a DT O
controlling VBG O
client NN O
, , O
a DT O
specific JJ O
handshake NN O
is VBZ O
required VBN O
. . O

The DT O
handshake NN O
between IN O
a DT O
client NN O
and CC O
the DT O
server NN O
variant NN O
is VBZ O
well RB O
defined VBN O
and CC O
consisting VBG O
of IN O
64 CD O
bytes NNS O
, , O
the DT O
data NNS O
within IN O
the DT O
handshake NN O
is VBZ O
entirely RB O
random JJ O
with IN O
the DT O
exception NN O
of IN O
the DT O
3rd NN O
and CC O
8th JJ O
DWORD NNS O
. . O

The DT O
handshake NN O
begins VBZ O
when WRB O
the DT O
client NN O
sends VBZ O
a DT O
64 CD O
byte NN O
random JJ O
buffer NN O
with IN O
the DT O
3rd NN O
( -LRB- O
offset VBN O
12 CD O
) -RRB- O
and CC O
8th NN O
( -LRB- O
offset VBN O
32 CD O
) -RRB- O
DWORDs NN O
defined VBN O
as IN O
. . O

The DT O
server NN O
will MD O
acknowledge VB O
the DT O
handshake NN O
by IN O
sending VBG O
a DT O
64 CD O
byte NN O
random JJ O
buffer NN O
with IN O
the DT O
same JJ O
pattern NN O
for IN O
the DT O
3rd NN O
and CC O
8th NN O
DWORDs NNS O
based VBN O
on IN O
the DT O
new JJ O
, , O
randomly RB O
generated VBD O
1st NN O
DWORD NNP O
( -LRB- O
offset VBN O
0 CD O
) -RRB- O
. . O

It PRP O
is VBZ O
the DT O
client NN O
's POS O
handshake NN O
that IN O
the DT O
driver NN O
for IN O
the DT O
server NN O
variant NN O
triggers VBZ O
off IN O
of IN O
. . O

Some DT O
older JJR O
versions NNS O
of IN O
the DT O
server NN O
variant NN O
use VB O
a DT O
different JJ O
set NN O
of IN O
DWORDs NNS O
to TO O
validate VB O
the DT O
handshake NN O
, , O
also RB O
the DT O
tests NNS O
are VBP O
the DT O
same JJ O
. . O

These DT O
other JJ O
versions NNS O
have VBP O
been VBN O
observed VBN O
to TO O
use VB O
the DT O
following VBG O
DWORDs NNS O
. . O

If IN O
the DT O
handshake NN O
fails VBZ O
, , O
the DT O
server NN O
variant NN O
provides VBZ O
a DT O
secondary JJ O
means VBZ O
to TO O
authenticate VB O
a DT O
client NN O
. . O

Presumably RB O
a DT O
failsafe NN O
if IN O
the DT O
driver NN O
is VBZ O
unable JJ O
to TO O
load VB O
, , O
the DT O
secondary JJ O
method NN O
requires VBZ O
the DT O
client NN O
to TO O
send VB O
a DT O
POST NNP O
request NN O
with IN O
the DT O
following VBG O
form NN O
. . O

In IN O
addition NN O
, , O
the DT O
POST NNP O
request NN O
must MD O
contain VB O
a DT O
Via NNP O
field NN O
. . O

If IN O
the DT O
request NN O
and CC O
the DT O
Via NNP O
field NN O
exist VBP O
, , O
the DT O
server NN O
variant NN O
authenticates VBZ O
the DT O
client NN O
and CC O
responds VBZ O
with IN O
If IN O
the DT O
client NN O
's POS O
request NN O
does VBZ O
not RB O
meet VB O
the DT O
appropriate JJ O
authentication NN O
criteria NNS O
, , O
the DT O
server NN O
variant NN O
sends VBZ O
. . O

With IN O
a DT O
communication NN O
channel NN O
between IN O
the DT O
server NN O
variant NN O
and CC O
the DT O
client NN O
established VBD O
, , O
the DT O
server NN O
sends VBZ O
information NN O
about IN O
the DT O
victim NN O
's POS O
computer NN O
. . O

Consisting NN O
of IN O
a DT O
180 CD O
byte NN O
data NNS O
structure NN O
( -LRB- O
Figure NN O
3 CD O
) -RRB- O
, , O
the DT O
server NN O
variant NN O
provides VBZ O
the DT O
client NN O
with IN O
a DT O
variety NN O
of IN O
details NNS O
about IN O
the DT O
victim NN O
's POS O
machine NN O
. . O

The DT O
VictimInfoPacket NNP O
has VBZ O
an DT O
identifier NN O
of IN O
2 CD O
( -LRB- O
see VB O
the DT O
dwPktType NN O
explanation NN O
below RB O
) -RRB- O
. . O

The DT O
communication NN O
between IN O
the DT O
server NN O
and CC O
the DT O
client NN O
at IN O
this DT O
point NN O
, , O
and CC O
for IN O
the DT O
remainder NN O
of IN O
the DT O
session NN O
, , O
is VBZ O
encrypted VBN O
. . O

Communication NN O
between IN O
the DT O
client NN O
and CC O
the DT O
server NN O
variant NN O
exists VBZ O
in IN O
the DT O
form NN O
of IN O
a DT O
sequence NN O
of IN O
encrypted JJ O
datagrams NNS O
. . O

Each DT O
datagram NN O
consists VBZ O
of IN O
a DT O
24 CD O
byte NN O
header NN O
followed VBD O
by IN O
an DT O
optional JJ O
payload NN O
section NN O
. . O

The DT O
header NN O
is VBZ O
not RB O
encrypted VBN O
but CC O
if IN O
the DT O
optional JJ O
payload NN O
is VBZ O
attached VBN O
, , O
the DT O
payload NN O
is VBZ O
encrypted VBN O
using VBG O
a DT O
DWORD NNP O
XOR NNP O
. . O

The DT O
format NN O
of IN O
the DT O
header NN O
is VBZ O
as IN O
follows VBZ O
. . O

The DT O
dwTotalPacketSize NNP O
field NN O
defines VBZ O
the DT O
total JJ O
size NN O
of IN O
the DT O
datagram NN O
including VBG O
both CC O
the DT O
size NN O
of IN O
the DT O
header NN O
and CC O
the DT O
size NN O
of IN O
the DT O
optional JJ O
payload NN O
. . O

The DT O
dwPktType NN O
field NN O
correlates VBZ O
to IN O
the DT O
module NN O
ID NN O
which WDT O
allows VBZ O
the DT O
server NN O
variant NN O
to TO O
route VB O
the DT O
datagram NN O
to IN O
the DT O
appropriate JJ O
module NN O
without IN O
further JJ O
inspection NN O
of IN O
the DT O
payload NN O
data NNS O
. . O

The DT O
dwChecksum JJ O
value NN O
is VBZ O
sum NN O
of IN O
all DT O
of IN O
the DT O
bytes NNS O
within IN O
the DT O
optional JJ O
header NN O
( -LRB- O
the DT O
field NN O
is VBZ O
ignored VBN O
, , O
but CC O
present JJ O
, , O
if IN O
there EX O
is VBZ O
no DT O
payload NN O
section NN O
) -RRB- O
. . O

The DT O
dwEncryptionKey NN O
is VBZ O
the DT O
32-bit CD O
XOR NNP O
encryption NN O
key NN O
for IN O
the DT O
payload NN O
section NN O
. . O

If IN O
the DT O
fCompressedPayload NN O
field NN O
is VBZ O
non AFX O
- HYPH O
zero NN O
, , O
then RB O
the DT O
data NNS O
within IN O
the DT O
payload NN O
is VBZ O
compressed VBN O
using VBG O
LZO NNP O
compression NN O
( -LRB- O
prior RB O
to IN O
XOR NNP O
encoding NN O
) -RRB- O
and CC O
the DT O
dwDecompressedSize NNP O
field NN O
represents VBZ O
the DT O
final JJ O
size NN O
of IN O
the DT O
payload NN O
data NNS O
after IN O
decompression NN O
. . O

The DT O
payload NN O
section NN O
can MD O
have VB O
up RB O
to TO O
three CD O
different JJ O
presentations NNS O
depending VBG O
on IN O
if IN O
compression NN O
is VBZ O
used VBN O
. . O

The DT O
first JJ O
presentation NN O
is VBZ O
the DT O
original JJ O
payload NN O
data NNS O
as RB O
generated VBN O
by IN O
the DT O
client NN O
or CC O
server NN O
, , O
the DT O
second JJ O
presentation NN O
is VBZ O
the DT O
LZO NNP O
compressed VBN O
form NN O
, , O
and CC O
the DT O
final JJ O
presentation NN O
( -LRB- O
the DT O
presentation NN O
that WDT O
exists VBZ O
going VBG O
across IN O
the DT O
network NN O
) -RRB- O
is VBZ O
the DT O
32-bit CD O
XOR NN O
encoded JJ O
data NN O
blob NN O
. . O

Figure NN O
4 CD O
provides VBZ O
a DT O
graphical JJ O
representation NN O
of IN O
the DT O
presentation NN O
types NNS O
of IN O
the DT O
payload NN O
section NN O
. . O

After IN O
sending VBG B-Action
the DT O
server NN B-Entity
information NN I-Entity
via IN O
the DT O
VictimInfoPacket NNP O
, , O
the DT B-Entity
server NN I-Entity
variant NN O
spins VBZ O
off IN O
a DT O
CommLoop NNP O
thread NN O
for IN O
the DT O
connection NN O
and CC O
returns VBZ O
to IN O
waiting VBG O
for IN O
new JJ O
connections NNS O
from IN O
clients NNS O
to TO O
appear VB O
. . O

The DT O
CommLoop NNP O
thread NN O
begins VBZ O
by IN O
establishing VBG O
the DT O
set NN O
of IN O
internal JJ O
command NN O
handlers NNS O
available JJ O
to IN O
the DT O
server NN O
variant NN O
. . O

With IN O
the DT O
exception NN O
of IN O
the DT O
administrative JJ O
command NN O
handler NN O
( -LRB- O
which WDT O
is VBZ O
built VBN O
into IN O
the DT O
CommLoop NNP O
) -RRB- O
, , O
each DT O
of IN O
the DT O
internal JJ O
commands NNS O
consists VBZ O
of IN O
an DT O
object NN O
derived VBN O
from IN O
a DT O
base NN O
object NN O
PCC_BASEMOD NNP O
. . O

The DT O
server NN O
variant NN O
appears VBZ O
to TO O
have VB O
a DT O
modular JJ O
design NN O
allowing VBG O
an DT O
attacker NN O
to TO O
compile VB O
only RB O
the DT O
components NNS O
that WDT O
are VBP O
necessary JJ O
for IN O
any DT O
given VBN O
operation NN O
. . O

The DT O
malware NN O
supports VBZ O
up IN O
to TO O
8 CD O
different JJ O
modules NNS O
per IN O
sample NN O
with IN O
each DT O
module NN O
designating VBG O
its PRP$ O
own JJ O
ID NN O
code NN O
. . O

Novetta NNP O
has VBZ O
observed VBN O
the DT O
following VBG O
modules NNS O
. . O

Given VBN O
the DT O
spacing NN O
in IN O
ID NNP O
numbers NNS O
( -LRB- O
as IN O
noted VBN O
in IN O
the DT O
gap NN O
between IN O
0x82 NNP O
and CC O
0x84 NNP O
in IN O
an DT O
otherwise RB O
sequential JJ O
ID NN O
scheme NN O
) -RRB- O
, , O
it PRP O
is VBZ O
conceivable JJ O
that IN O
additional JJ O
modules NNS O
exist VBP O
. . O

After IN O
establishing VBG O
the DT O
tools NNS O
, , O
an DT O
infinite JJ O
loop NN O
( -LRB- O
CommLoop NNP O
) -RRB- O
is VBZ O
entered VBN O
in IN O
which WDT O
the DT O
server NN O
variant NN O
will MD O
wait VB O
for IN O
up IN O
to TO O
1/100 CD O
of IN O
a DT O
second JJ O
for IN O
input NN O
from IN O
the DT O
network NN O
; : O
if IN O
such JJ O
input NN O
arrives NNS O
, , O
the DT O
server NN O
routes VBZ O
the DT O
packet NN O
to IN O
the DT O
appropriate JJ O
handler NN O
. . O

If IN O
the DT O
network NN O
input NN O
does VBZ O
not RB O
arrive VB O
, , O
the DT O
CommLoop NNP O
queries NNS O
each DT O
of IN O
the DT O
command NN O
handlers NNS O
for IN O
any DT O
packets NNS O
they PRP O
may MD O
have VB O
queued VBN O
( -LRB- O
by IN O
calling VBG O
each DT O
command NN O
handler NN O
's POS O
ReadWaitingData NNP O
function NN O
) -RRB- O
and CC O
transmits VBZ O
the DT O
packets NNS O
the DT O
handlers NNS O
have VBP O
generated VBN O
. . O

Additionally RB O
, , O
if IN O
more JJR O
than IN O
60 CD O
seconds NNS O
passes VBZ O
between IN O
network NN O
inputs NNS O
from IN O
the DT O
client NN O
or CC O
network NN O
outputs NNS O
from IN O
the DT O
server NN O
variant NN O
, , O
the DT O
CommLoop NNP O
will MD O
send VB O
out RP O
a DT O
beacon NN O
packet NN O
( -LRB- O
dwPktType NN O
= SYM O
4 CD O
) -RRB- O
. . O

CommLoop NNP B-Entity
routes VBZ B-Action
packets NNS B-Entity
to IN B-Modifier
the DT O
appropriate JJ B-Entity
command NN I-Entity
handler NN I-Entity
object NN I-Entity
by IN O
locating VBG O
the DT O
dwPacketIdentifierCode NN O
within IN O
each DT O
of IN O
the DT O
registered JJ O
command NN O
handlers NNS O
that WDT O
matches VBZ O
the DT O
incoming JJ O
packets NNS O
dwPktType NN O
. . O

When WRB O
the DT O
appropriate JJ O
command NN O
handler NN O
is VBZ O
found VBN O
, , O
CommLoop NNP O
passes VBZ O
the DT O
payload NN O
of IN O
portion NN O
of IN O
the DT O
packet NN O
to IN O
the DT O
command NN O
handler NN O
's POS O
ProcessPacket NNP O
function NN O
. . O

The DT O
PCC_CMD NNP O
object NN O
contains VBZ O
the DT O
remote JJ O
shell NN O
functionality NN O
of IN O
the DT O
server NN O
variant NN O
along IN O
with IN O
the DT O
ability NN O
to TO O
execute VB O
arbitrary JJ O
programs NNS O
. . O

Derived VBN O
from IN O
the DT O
PCC_BASEMOD NNP O
class NN O
, , O
the DT O
PCC_CMD NNP O
class NN O
's POS O
operations NNS O
are VBP O
focused VBN O
largely RB O
in IN O
the DT O
ProcessPacket NNP O
and CC O
ReadWaitingData NNP O
functions NNS O
. . O

The DT O
PCC_CMD::ProcessPacket NNP O
function NN O
works VBZ O
as IN O
a DT O
stub NN O
function NN O
that WDT O
merely RB O
passes VBZ O
the DT O
packet NN O
's POS O
payload NN O
data NNS O
( -LRB- O
pkt NN O
) -RRB- O
data NNS O
to IN O
PCC_CMD::ProcessPacketEx VB O
while IN O
ignoring VBG O
the DT O
dwPktSize NNP O
parameter NN O
. . O

The DT O
packet NN O
's POS O
payload NN O
data NNS O
is VBZ O
, , O
in IN O
and CC O
of IN O
itself PRP O
, , O
another DT O
datagram NN O
with IN O
a DT O
header NN O
and CC O
optional JJ O
payload NN O
section NN O
. . O

The DT O
payload NN O
of IN O
each DT O
PCC_CMD NNP O
destined VBD O
packet NN O
contains VBZ O
the DT O
following VBG O
header NN O
. . O

The DT O
dwCommandType NN O
field NN O
specifies VBZ O
the DT O
specific JJ O
PCC_CMD NNP O
command NN O
that WDT O
the DT O
client NN O
is VBZ O
requesting VBG O
the DT O
server NN O
variant NN O
perform NN O
. . O

There EX O
are VBP O
four CD O
commands NNS O
that WDT O
PCC_CMD NNP O
supports VBZ O
. . O

For IN O
each DT O
of IN O
the DT O
commands NNS O
, , O
any DT O
output NN O
from IN O
or CC O
acknowledgement NN O
of IN O
the DT O
commands NNS O
comes VBZ O
in IN O
the DT O
form NN O
of IN O
another DT O
packet NN O
consisting VBG O
of IN O
a DT O
PacketHeader NNP O
followed VBN O
by IN O
a DT O
PCCCMDPacketHeader NNP O
and CC O
any DT O
optional JJ O
payload NN O
data NNS O
. . O

The DT O
dwCommandType NN O
of IN O
the DT O
newly RB O
constructed VBN O
packet NN O
matches VBZ O
the DT O
command NN O
's POS O
original JJ O
dwCommandType NN O
value NN O
( -LRB- O
e.g. NN O

responses NNS O
from IN O
0x04 CD O
commands NNS O
will MD O
reply VB O
with IN O
dwCommandType NN O
set NN O
to IN O
0x04 CD O
) -RRB- O
. . O

PCC_CMD::ProcessPacketEx NN O
will MD O
queue VB O
the DT O
response NN O
packets NNS O
in IN O
an DT O
internal JJ O
buffer NN O
. . O

The DT O
PCC_CMD::ReadWaitingData NNP O
member NN O
function NN O
is VBZ O
responsible JJ O
for IN O
transmitting VBG O
any DT O
of IN O
the DT O
previously RB O
queued VBN O
packets NNS O
from IN O
PCC_CMD::ProcessPacketEx NNP O
. . O

If IN O
there EX O
are VBP O
no DT O
queued VBN O
packets NNS O
, , O
PCC_CMD::ReadWaitingData NNP O
will MD O
perform VB O
a DT O
queue NN O
of IN O
the DT O
console NN O
output NN O
pipe NN O
for IN O
the DT O
remote JJ O
shell NN O
process NN O
( -LRB- O
if IN O
it PRP O
is VBZ O
active JJ O
) -RRB- O
; : O
the DT O
function NN O
will MD O
also RB O
attempt VB O
to TO O
read VB O
the DT O
entirety NN O
of IN O
the DT O
waiting VBG O
data NNS O
, , O
which WDT O
then RB O
becomes VBZ O
the DT O
payload NN O
of IN O
a DT O
PacketHeader NNP O
/ SYM O
PCCCMDPacketHeader NNP O
based VBN O
packet NN O
with IN O
the DT O
dwCommandType NN O
set NN O
to IN O
0x0C. CD O

If IN O
the DT O
read NN O
is VBZ O
unsuccessful JJ O
, , O
the DT O
function NN O
returns VBZ O
a DT O
PacketHeader NNP O
/ SYM O
PCCCMDPacketHeader NNP O
based VBN O
packet NN O
with IN O
the DT O
dwCommandType NN O
set NN O
to IN O
0x10 NNP O
indicating VBG O
an DT O
error NN O
and CC O
terminating VBG O
the DT O
remote JJ O
shell NN O
session NN O
. . O

The DT O
PCC_FILE NNP O
object NN O
provides VBZ O
a DT O
large JJ O
range NN O
of IN O
file NN O
system NN O
administration NN O
functions NNS O
. . O

PCC_FILE NN O
is VBZ O
derived VBN O
from IN O
the DT O
PCC_BASEMOD NNP O
class NN O
meaning VBG O
that IN O
the DT O
processing NN O
of IN O
commands NNS O
should MD O
be VB O
contained VBN O
within IN O
the DT O
PCC_FILE::ProcessPacket NN O
member NN O
function NN O
with IN O
some DT O
additional JJ O
processing NN O
done VBN O
in IN O
the DT O
PCC_FILE::ReadWaitingData NNP O
member NN O
function NN O
. . O

This DT O
is VBZ O
not RB O
necessarily RB O
the DT O
case NN O
, , O
however RB O
. . O

The DT O
PCC_FILE::ProcessPacket NN O
member NN O
function NN O
, , O
much RB O
like IN O
PCC_CMD::ProcessPacket NNP O
, , O
is VBZ O
little RB O
more JJR O
than IN O
a DT O
stub NN O
function NN O
that WDT O
passes VBZ O
only RB O
a DT O
copy NN O
of IN O
the DT O
payload NN O
data NNS O
( -LRB- O
pkt NN O
) -RRB- O
to IN O
PCC_FILE::ProcessPacketEx NNP O
. . O

PCC_FILE::ProcessPacketEx NN O
performs VBZ O
no DT O
file NN O
management NN O
operations NNS O
but CC O
instead RB O
adds VBZ O
any DT O
incoming JJ O
command NN O
packets NNS O
to IN O
a DT O
queue NN O
for IN O
processing NN O
by IN O
PCC_FILE::ReadWaitingData NNP O
if IN O
the DT O
packet NN O
is VBZ O
not RB O
already RB O
within IN O
the DT O
queue NN O
( -LRB- O
thus RB O
avoiding VBG O
duplication NN O
of IN O
commands NNS O
) -RRB- O
. . O

The DT O
PCC_FILE::ReadWaitingData NNP O
member NN O
function NN O
is VBZ O
a DT O
stub NN O
function NN O
that IN O
calls VBZ O
PCC_FILE::ProcessQueue NNP O
and CC O
returns VBZ O
the DT O
resulting VBG O
packet NN O
from IN O
the DT O
queue NN O
processing NN O
. . O

This DT O
means VBZ O
that IN O
file NN O
operations NNS O
are VBP O
surprisingly RB O
low JJ O
priority NN O
, , O
and CC O
potentially RB O
, , O
high JJ O
latency NN O
operations NNS O
. . O

Each DT O
packet NN O
that WDT O
arrives VBZ O
within IN O
the DT O
packet NN O
queue NN O
of IN O
PCC_FILE NNP O
contains VBZ O
a DT O
standard JJ O
header NN O
followed VBN O
by IN O
a DT O
( -LRB- O
quasi JJ O
- , O
optional JJ O
) -RRB- O
payload NN O
data NNS O
blob NN O
. . O

The DT O
header NN O
for IN O
the DT O
PCC_FILE NNP O
command NN O
packets NNS O
takes VBZ O
the DT O
following VBG O
form NN O
. . O

The DT O
dwCommandType NN O
field NN O
specifies VBZ O
the DT O
specific JJ O
PCC_FILE NNP O
command NN O
that WDT O
the DT O
client NN O
is VBZ O
requesting VBG O
the DT O
server NN O
variant NN O
to TO O
perform VB O
. . O

PCC_FILE NN O
supports VBZ O
17 CD O
( -LRB- O
of IN O
which WDT O
15 CD O
are VBP O
unique JJ O
) -RRB- O
commands NNS O
. . O

While IN O
the DT O
general JJ O
form NN O
within IN O
the DT O
Derusbi NNP O
server NN O
variant JJ O
communication NN O
model NN O
is VBZ O
to TO O
return VB O
a DT O
packet NN O
with IN O
the DT O
same JJ O
dwCommandType NN O
as IN O
the DT O
original JJ O
command NN O
, , O
many JJ O
of IN O
the DT O
PCC_FILE NN O
commands VBZ O
return VB O
a DT O
status NN O
packet NN O
type NN O
( -LRB- O
dwCommandType NN O
= SYM O
0x04 CD O
) -RRB- O
. . O

Commands NNS O
0x2C NFP O
, , O
0x44 NFP O
, , O
and CC O
0x48 VB O
all DT O
appear VBP O
to TO O
be VB O
the DT O
exact JJ O
same JJ O
base NN O
command NN O
with IN O
only RB O
slight JJ O
variations NNS O
in IN O
their PRP$ O
response NN O
format NN O
. . O

It PRP O
is VBZ O
unclear JJ O
why WRB O
this DT O
particular JJ O
command NN O
is VBZ O
included VBN O
three CD O
times NNS O
in IN O
PCC_FILE NNP O
. . O

The DT O
PCC_PROXY NNP O
object NN O
provides VBZ O
the DT O
platform NN O
for IN O
a DT O
tunneling NN O
network NN O
traffic NN O
to IN O
and CC O
from IN O
the DT O
client NN O
to IN O
a DT O
specific JJ O
endpoint NN O
( -LRB- O
or CC O
endpoints NNS O
if IN O
multiple JJ O
tunnels NNS O
are VBP O
activated VBN O
by IN O
the DT O
client NN O
) -RRB- O
. . O

Derived VBN O
on IN O
the DT O
PCC_BASEMOD NNP O
class NN O
, , O
the DT O
PCC_PROXY NNP O
class NN O
performs VBZ O
very RB O
little JJ O
network NN O
tunneling NN O
within IN O
the DT O
CommLoop NNP O
interactive JJ O
PCC_PROXY::ProcessPacket NN O
and CC O
PCC_PROXY::ReadWaitingData NN O
member NN O
functions NNS O
. . O

The DT O
PCC_PROXY::ProcessPacket NN O
member NN O
function NN O
queues NNS O
incoming VBG O
PCC_PROXY NN O
packets NNS O
into IN O
a DT O
received VBN O
queue NN O
while IN O
PCC_PROXY::ReadWaitingData NNP O
returns VBZ O
packets NNS O
from IN O
a DT O
transmit NN O
queue NN O
, , O
with IN O
the DT O
directionality NN O
from IN O
the DT O
perspective NN O
of IN O
the DT O
server NN O
variant NN O
. . O

The DT O
core NN O
of IN O
the DT O
PCC_PROXY NNP O
's POS O
network NN O
tunneling NN O
comes VBZ O
from IN O
a DT O
spawned VBN O
processing NN O
thread NN O
( -LRB- O
PCC_PROXY::MainThread NNP O
) -RRB- O
that WDT O
is VBZ O
generated VBN O
when WRB O
the DT O
PCC_PROXY NNP O
object NN O
is VBZ O
instantiated VBN O
. . O

The DT O
PCC_PROXY::MainThread NN O
function NN O
consist VB O
an DT O
infinite JJ O
loop NN O
that WDT O
only RB O
terminates VBZ O
when WRB O
the DT O
PCC_PROXY::fShutdown NNP O
flag NN O
is VBZ O
set VBN O
. . O

Otherwise RB O
, , O
the DT O
loop NN O
will MD O
inspect VB O
another DT O
internal JJ O
flag NN O
( -LRB- O
PCC_PROXY::fNetworkEnabled NNP O
) -RRB- O
to TO O
determine VB O
if IN O
the DT O
network NN O
tunneling NN O
is VBZ O
currently RB O
active JJ O
. . O

If IN O
the DT O
PCC_PROXY::fNetworkEnabled VBN O
flag NN O
is VBZ O
set VBN O
to IN O
false JJ O
, , O
then RB O
tunneling VBG O
is VBZ O
disabled JJ O
but CC O
command NN O
processing NN O
continues VBZ O
. . O

It PRP O
is VBZ O
possible JJ O
to TO O
have VB O
more JJR O
than IN O
one CD O
tunnel NN O
active JJ O
at IN O
any DT O
given VBN O
time NN O
. . O

In IN O
order NN O
to IN O
firewall NN O
tunnels NNS O
from IN O
each DT O
other JJ O
over IN O
the DT O
backbone NN O
of IN O
the DT O
server NN O
variant NN O
's POS O
command NN O
channel NN O
, , O
each DT O
tunnel NN O
is VBZ O
assigned VBN O
a DT O
specific JJ O
channel NN O
identifier NN O
. . O

This DT O
allows VBZ O
the DT O
client NN O
to TO O
specify VB O
which WDT O
specific JJ O
tunnel NN O
data NN O
is VBZ O
transmitted VBN O
to IN O
as RB O
well RB O
as IN O
telling VBG O
the DT O
client NN O
which WDT O
tunnel NN O
is VBZ O
returning VBG O
data NNS O
. . O

If IN O
the DT O
PCC_PROXY::fNetworkEnabled VBN O
flag NN O
is VBZ O
set VBN O
to IN O
true JJ O
, . O
PRC_PROXY::MainThread NNP O
will MD O
loop VB O
through RB O
all DT O
active JJ O
channels NNS O
, , O
perform VB O
a DT O
select NN O
on IN O
the DT O
socket NN O
connected VBN O
to IN O
the DT O
endpoint NN O
and CC O
-- : O
if IN O
the DT O
select JJ O
indicates VBZ O
that IN O
there EX O
is VBZ O
data NN O
waiting VBG O
on IN O
a DT O
particular JJ O
socket NN O
-- : O
the DT O
data NNS O
is VBZ O
read VBN O
. . O

A DT O
new JJ O
PCC_PROXY NN O
based VBN O
packet NN O
is VBZ O
then RB O
generated VBN O
and CC O
the DT O
packet NN O
is VBZ O
queued VBN O
for IN O
delivery NN O
to IN O
the DT O
client NN O
. . O

After IN O
processing VBG O
each DT O
of IN O
the DT O
channels NNS O
for IN O
new JJ O
data NNS O
, , O
PCC_PROXY::MainThread NN O
processes VBZ O
incoming VBG O
command NN O
packets NNS O
from IN O
the DT O
client NN O
( -LRB- O
an DT O
operation NN O
usually RB O
handled VBN O
by IN O
the DT O
PCC_BASEMOD::ProcessPacket NN O
function NN O
) -RRB- O
. . O

Packets NNS O
belonging VBG O
to IN O
the DT O
PCC_PROXY NNP O
subsystem NN O
have VBP O
a DT O
common JJ O
header NN O
, , O
much JJ O
like IN O
the DT O
other JJ O
PCC_BASEMOD NNP O
derived VBN O
classes NNS O
. . O

To IN O
this DT O
end NN O
, , O
the DT O
PCC_PROXY NNP O
packets NNS O
have VBP O
the DT O
same JJ O
packet NN O
header NN O
as IN O
the DT O
PCCFilePacketHeader NNP O
packet NN O
header NN O
. . O

The DT O
PCC_PROXY NNP O
supports VBZ O
five CD O
commands NNS O
. . O

The DT O
administrative JJ O
commands NNS O
are VBP O
built VBN O
- HYPH O
in RP O
to IN O
the DT O
server NN O
variant NN O
and CC O
are VBP O
not RB O
derived VBN O
from IN O
the DT O
PCC_BASEMOD NNP O
class NN O
. . O

Each DT O
of IN O
the DT O
administrative JJ O
command NN O
packets NNS O
contains VBZ O
the DT O
same JJ O
header NN O
structure NN O
as IN O
the DT O
PCCFilePacketHeader NN O
structure NN O
followed VBN O
by IN O
an DT O
optional JJ O
payload NN O
data NNS O
blob NN O
. . O

The DT O
administrative JJ O
commands NNS O
consist VBP O
of IN O
the DT O
following VBG O
five CD O
commands NNS O
. . O

Given VBN O
the DT O
encrypted NN O
, , O
and CC O
potentially RB O
compressed JJ O
, , O
nature NN O
of IN O
Derusbi NNP O
server NN O
variant NN O
network NN O
traffic NN O
, , O
detecting VBG O
the DT O
traffic NN O
on IN O
a DT O
network NN O
can MD O
be VB O
problematic JJ O
using VBG O
traditional JJ O
IDS NNP O
signatures NNS O
. . O

Using VBG O
a DT O
heuristic JJ O
approach NN O
, , O
it PRP O
would MD O
be VB O
possible JJ O
to TO O
detect VB O
the DT O
handshake NN O
of IN O
a DT O
possible JJ O
Derusbi NNP O
server NN O
variant NN O
session NN O
by IN O
looking VBG O
for IN O
the DT O
following VBG O
pattern NN O
. . O

Detecting VBG O
Derusbi NNP O
server NN O
variants NNS O
on IN O
disk NN O
is VBZ O
possible JJ O
using VBG O
the DT O
following VBG O
YARA NNP O
signature NN O
. . O

