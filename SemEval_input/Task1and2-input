Over
the
last
10
months
,
Kaspersky
Lab
researchers
have
analyzed
a
massive
cyber-espionage
operation
which
we
call
''
Epic
Turla
''
.

The
attackers
behind
Epic
Turla
have
infected
several
hundred
computers
in
more
than
45
countries
,
including
government
institutions
,
embassies
,
military
,
education
,
research
and
pharmaceutical
companies
.

The
attacks
are
known
to
have
used
at
least
two
zero-day
exploits
:
We
also
observed
exploits
against
older
(
patched
)
vulnerabilities
,
social
engineering
techniques
and
watering
hole
strategies
in
these
attacks
.

The
primary
backdoor
used
in
the
Epic
attacks
is
also
known
as
''
WorldCupSec
''
,
''
TadjMakhal
''
,
''
Wipbot
''
or
''
Tavdig
''
.

When
G-Data
published
on
Turla/Uroburos
back
in
February
,
several
questions
remained
unanswered
.

One
big
unknown
was
the
infection
vector
for
Turla
(
aka
Snake
or
Uroburos
)
.

Our
analysis
indicates
that
victims
are
infected
via
a
sophisticated
multi-stage
attack
,
which
begins
with
the
Epic
Turla
.

In
time
,
as
the
attackers
gain
confidence
,
this
is
upgraded
to
more
sophisticated
backdoors
,
such
as
the
Carbon/Cobra
system
.

Sometimes
,
both
backdoors
are
run
in
tandem
,
and
used
to
''
rescue
''
each
other
if
communications
are
lost
with
one
of
the
backdoors
.

Once
the
attackers
obtain
the
necessary
credentials
without
the
victim
noticing
,
they
deploy
the
rootkit
and
other
extreme
persistence
mechanisms
.

The
attacks
are
still
ongoing
as
of
July
2014
,
actively
targeting
users
in
Europe
and
the
Middle
East
.

Note
:
A
full
analysis
of
the
Epic
attacks
is
available
to
the
Kaspersky
Intelligent
Services
subscribers
.

Contact
:
intelreports
@
kaspersky.com
The
attacks
in
this
campaign
fall
into
several
different
categories
depending
on
the
vector
used
in
the
initial
compromise
:
The
attackers
use
both
direct
spearphishing
and
watering
hole
attacks
to
infect
their
victims
.

Watering
holes
(
waterholes
)
are
websites
of
interest
to
the
victims
that
have
been
compromised
by
the
attackers
and
injected
to
serve
malicious
code
.

So
far
we
have
n't
been
able
to
locate
any
e-mail
used
against
the
victims
,
only
the
attachments
.

The
PDF
attachments
do
not
show
any
''
lure
''
to
the
victim
when
opened
,
however
,
the
SCR
packages
sometime
show
a
clean
PDF
upon
successful
installation
.

Some
of
known
attachment
names
used
in
the
spearphishing
attacks
are
:
In
some
cases
,
these
filenames
can
provide
clues
about
the
type
of
victims
the
attackers
are
targeting
.

Currently
,
the
Epic
attackers
run
a
vast
network
of
watering
holes
that
target
visitors
with
surgical
precision
.

Some
of
the
injected
websites
include
:
In
total
,
we
observed
more
than
100
injected
websites
.

Currently
,
the
largest
number
of
injected
sites
is
in
Romania
.

Here
's
a
statistic
on
the
injected
websites
:
The
distribution
is
obviously
not
random
,
and
it
reflects
some
of
the
interests
of
the
attackers
.

For
instance
,
in
Romania
many
of
the
infected
sites
are
in
the
Mures
region
,
while
many
of
the
Spanish
infected
sites
belong
to
local
governments
(
City
Hall
)
.

Most
of
the
infected
sites
use
the
TYPO3
CMS
(
see
:
http
:
//typo3.org/
)
,
which
could
indicate
the
attackers
are
abusing
a
specific
vulnerability
in
this
publishing
platform
.

Injected
websites
load
a
remote
JavaScript
into
the
victim
's
browser
:
The
script
''
sitenavigatoin.js
''
is
a
Pinlady-style
browser
and
plugin
detection
script
,
which
in
turn
,
redirects
to
a
PHP
script
sometimes
called
main.php
or
wreq.php
.

Sometimes
,
the
attackers
register
the
.JPG

extension
with
the
PHP
handler
on
the
server
,
using
''
JPG
''
files
to
run
PHP
scripts
:
The
main
exploitation
script
''
wreq.php
''
,
''
main.php
''
or
''
main.jpg
''
performs
a
numbers
of
tasks
.

We
have
located
several
versions
of
this
script
which
attempt
various
exploitation
mechanisms
.

One
version
of
this
script
attempts
to
exploit
Internet
Explorer
versions
6
,
7
and
8
:
Unfortunately
,
the
Internet
Explorer
exploits
have
not
yet
been
retrieved
.

Another
more
recent
version
attempts
to
exploit
Oracle
Sun
Java
and
Adobe
Flash
Player
:
Although
the
Flash
Player
exploits
could
n't
be
retrieved
,
we
did
manage
to
obtain
the
Java
exploits
:
The
Java
files
exploit
a
popular
vulnerability
,
CVE-2012-1723
,
in
various
configurations
.

The
payload
dropped
by
these
Java
exploits
is
the
following
:
The
Java
exploit
use
a
special
loader
that
attempts
to
inject
the
final
Epic
backdoor
payload
into
explorer.exe
.

The
backdoor
extracted
from
the
Java
exploits
has
the
following
C
&
C
hardcoded
inside
:
This
C
&
C
is
still
online
at
the
moment
although
it
redirects
to
a
currently
suspended
page
at
''
hxxp
:
//busandcoachdirectory.com
[
.

]
au
''
.

For
a
full
list
of
C
&
C
servers
,
please
see
the
Appendix
.

The
Epic
Turla
attackers
are
extremely
dynamic
in
using
exploits
or
different
methods
depending
on
what
is
available
at
the
moment
.

Most
recently
,
we
observed
them
using
yet
another
technique
coupled
with
watering
hole
attacks
.

This
takes
advantage
of
social
engineering
to
trick
the
user
into
running
a
fake
Flash
Player
(
MD5
:
030f5fdb78bfc1ce7b459d3cc2cf1877
)
:
In
at
least
one
case
,
they
tried
to
trick
the
user
into
downloading
and
running
a
fake
Microsoft
Security
Essentials
app
(
MD5
:
89b0f1a3a667e5cd43f5670e12dba411
)
:
The
fake
application
is
signed
by
a
valid
digital
certificate
from
Sysprint
AG
:
This
file
was
distributed
from
the
Ministry
of
Foreign
Affairs
of
Tajikistan
's
website
,
at
''
hxxp
:
//mfa
[
.
]
tj/upload/security.php
''
.

The
file
is
a
.NET

application
that
contains
an
encrypted
resource
.

This
drops
the
malicious
file
with
the
MD5
7731d42b043865559258464fe1c98513
.

This
is
an
Epic
backdoor
which
connects
to
the
following
C
&
Cs
,
with
a
generic
internal
ID
of
1156fd22-
3443-4344-c4ffff
:
A
full
list
with
all
the
C
&
C
server
URLs
that
we
recovered
from
the
samples
can
be
found
in
the
technical
Appendix
.

The
Epic
backdoors
are
commanded
by
a
huge
network
of
hacked
servers
that
deliver
command
and
control
functionality
.

The
huge
network
commanded
by
the
Epic
Turla
attackers
serves
multiple
purposes
.

For
instance
,
the
motherships
function
as
both
exploitation
sites
and
command
and
control
panels
for
the
malware
.

Here
's
how
the
big
picture
looks
like
:
The
first
level
of
command
and
control
proxies
generally
talk
to
a
second
level
of
proxies
,
which
in
turn
,
talk
to
the
''
mothership
''
server
.

The
mothership
server
is
generally
a
VPS
,
which
runs
the
Control
panel
software
used
to
interact
with
the
victims
.

The
attackers
operate
the
mothership
using
a
network
of
proxies
and
VPN
servers
for
anonymity
reasons
.

The
mothership
also
work
as
the
exploitation
servers
used
in
the
watering
hole
attacks
,
delivering
Java
,
IE
or
fake
applications
to
the
victim
.

We
were
able
to
get
a
copy
of
one
of
the
motherships
,
which
provided
some
insight
into
the
operation
.

It
runs
a
control
panel
which
is
password
protected
:
Once
logged
into
the
Control
panel
,
the
attackers
can
see
a
general
overview
of
the
system
including
the
number
of
interesting
potential
targets
:
A
very
interesting
file
on
the
servers
is
task.css
,
where
the
attackers
define
the
IP
ranges
they
are
interested
in
.

To
change
the
file
,
they
are
using
the
''
Task
editor
''
from
the
menu
.

Depending
on
the
''
tasks
''
,
they
will
decide
whether
to
infect
the
visitors
or
not
.

In
this
case
,
we
found
they
targeted
two
ranges
belonging
to
:
It
should
be
noted
though
,
the
fact
that
the
attackers
were
targeting
these
ranges
does
n't
necessarily
mean
they
also
got
infected
.

Some
other
unknown
IPs
were
also
observed
in
the
targeting
schedules
.

There
is
also
an
''
except.css
''
file
where
attackers
log
the
reasons
they
did
n't
try
to
exploit
certain
visitors
.

There
are
three
possible
values
:
These
are
the
''
do
n't
meet
the
conditions
''
reasons
observed
in
the
logs
:
For
this
first
stage
of
the
attack
,
the
threat
actor
uses
a
custom
backdoor
.

In
some
cases
,
the
backdoor
is
packaged
together
with
the
CVE-2013-5065
EoP
exploit
and
heavily
obfuscated
.

This
makes
the
analysis
more
difficult
.

The
CVE-2013-5065
exploit
allows
the
backdoor
to
achieve
administrator
privileges
on
the
system
and
run
unrestricted
.

This
exploit
only
works
on
unpatched
Microsoft
Windows
XP
systems
.

Other
known
detection
names
for
the
backdoor
is
Trojan.Wipbot
(
Symantec
)
or
Tavdig
.

The
main
backdoor
is
about
60KB
in
size
and
implements
a
C
&
C
protocol
on
top
of
normal
HTTP
requests
.

The
communication
protocol
uses
requests
in
the
C
&
C
replies
,
which
the
malware
decrypts
and
processes
.

The
replies
are
sent
back
to
the
C
&
C
through
the
same
channel
.

The
malware
behavior
is
defined
by
a
configuration
block
.

The
configuration
block
usually
contains
two
hard-coded
C
&
C
URLs
.

He
have
also
seen
one
case
where
the
configuration
block
contains
just
one
URL
.

The
configuration
can
also
be
updated
on
the
fly
by
the
attackers
,
via
the
C
&
C
.

The
backdoor
attempts
to
identify
the
following
processes
and
,
if
found
,
it
will
terminate
itself
:
It
contains
an
internal
unique
ID
,
which
is
used
to
identify
the
victim
to
the
C
&
C
.

Most
samples
,
especially
old
ones
,
have
the
ID
1156fd22-3443-4344-c4ffff
.

Once
a
victim
is
confirmed
as
''
interesting
''
,
the
attackers
upload
another
Epic
backdoor
which
has
a
unique
ID
used
to
control
this
specific
victim
.

During
the
first
C
&
C
call
,
the
backdoor
sends
a
pack
with
the
victim
's
system
information
.

All
further
information
sent
to
the
C
&
C
is
encrypted
with
a
public
key
framework
,
making
decryption
impossible
.

The
commands
from
the
C
&
C
are
encrypted
in
a
simpler
manner
and
can
be
decrypted
if
intercepted
because
the
secret
key
is
hardcoded
in
the
malware
.

Through
monitoring
,
we
were
able
to
capture
a
large
amount
of
commands
sent
to
the
victims
by
the
attackers
,
providing
an
unique
view
into
this
operation
.

Here
's
a
look
at
one
of
the
encrypted
server
replies
:
Once
a
victim
is
infected
and
''
checks
in
''
with
the
server
,
the
attackers
send
a
template
of
commands
:
Next
,
the
attackers
try
to
move
through
the
victim
's
network
using
pre-defined
or
collected
passwords
:
Listing
all
.doc

files
recursively
is
also
a
common
''
theme
''
:
In
total
,
we
have
decoded
several
hundreds
of
these
command
packages
delivered
to
the
victims
,
providing
an
unique
insight
into
the
inner
workings
of
the
attackers
.

In
addition
to
generic
searches
,
some
very
specific
lookups
have
been
observed
as
well
.

These
include
searches
for
:
In
this
case
,
the
attackers
were
interested
to
find
e-mails
related
to
''
NATO
''
,
''
Energy
Dialogue
within
European
Unition
''
and
so
on
.

For
some
of
the
C
&
C
servers
,
the
attackers
implemented
RSA
encryption
for
the
C
&
C
logs
,
which
makes
it
impossible
to
decrypt
them
.

This
scheme
was
implemented
in
April
2014
.

Once
a
victim
is
compromised
,
the
attackers
upload
several
tools
that
are
used
for
lateral
movement
.

One
such
tool
observed
in
the
attacks
and
saved
as
''
C
:
\Documents
and
Settings\All
users\Start
Menu\Programs\Startup\winsvclg.exe
''
is
:
This
is
a
keylogger
tool
that
creates
%
temp
%
\~DFD3O8.tmp
.

Note
:
the
filename
can
change
across
victims
.

On
one
Central
Asian
government
's
Ministry
of
Foreign
Affairs
victim
system
,
the
filename
used
was
''
adobe32updt.exe
''
.

In
addition
to
these
custom
tools
,
we
observed
the
usage
of
standard
administration
utilities
.

For
instance
,
another
tool
often
uploaded
by
the
attackers
to
the
victim
's
machine
is
''
winrs.exe
''
:
This
is
an
UPX
packed
binary
,
which
contains
the
genuine
''
dnsquery.exe
''
tool
from
Microsoft
,
unpacked
MD5
:
c0c03b71684eb0545ef9182f5f9928ca
.

In
several
cases
,
an
interesting
update
has
been
observed
--
a
malware
from
a
different
,
yet
related
family
.

This
backdoor
is
more
sophisticated
and
belongs
to
the
next
level
of
cyber-espionage
tools
called
the
''
Carbon
system
''
or
Cobra
by
the
Turla
attackers
.

Several
plugins
for
the
''
Carbon
system
''
are
known
to
exist
.

Note
:
the
command
and
control
servers
www.losguayaberos
[
.

]
com
and
thebesttothbrushes
[
.

]
com
have
been
sinkholed
by
Kaspersky
Lab
.

Other
packages
delivered
to
the
victims
include
:
These
top
level
packages
deploy
both
updated
Epic
backdoors
and
Turla
Carbon
system
backdoors
to
confirmed
victims
,
effectively
linking
the
Epic
and
Turla
Carbon
operations
together
.

The
Turla
Carbon
dropper
from
these
packages
has
the
following
properties
:
This
is
called
internally
by
the
authors
''
Carbon
System
''
,
part
of
the
''
Cobra
''
project
,
as
it
can
be
seen
from
the
debug
path
inside
:
This
acts
as
a
dropper
for
the
following
modules
,
both
32
and
64
bit
:
The
Carbon
system
is
in
essence
an
extensible
platform
,
very
similar
to
other
attack
platforms
such
as
the
Tilded
platform
or
the
Flame
platform
.

The
plugins
for
the
Carbon
system
can
be
easily
recognized
as
they
always
feature
at
least
two
exports
named
:
Several
Epic
backdoors
appear
to
have
been
designed
to
work
as
Carbon
system
plugins
as
well
-
they
require
a
specialized
loader
to
start
in
victim
systems
that
do
not
have
the
Carbon
system
deployed
.

Some
modules
have
artifacts
which
indicate
the
Carbon
system
is
already
at
version
3.x
,
although
the
exact
Carbon
system
version
is
very
rarely
seen
in
samples
:
The
author
of
the
Carbon
module
above
can
be
also
seen
in
the
code
,
as
''
gilg
''
,
which
also
authored
several
other
Turla
modules
.

We
are
planning
to
cover
the
Turla
Carbon
system
with
more
details
in
a
future
report
.

The
payload
recovered
from
one
of
the
mothership
servers
(
at
newsforum.servehttp
[
.

]
com/wordpress/wp-includes/css/img/upload.php
,
MD5
:
4dc22c1695d1f275c3b6e503a1b171f5
,
Compiled
:
Thu
Sep
06
14:09:55
2012
)
contains
two
modules
,
a
loader/injector
and
a
backdoor
.

Internally
,
the
backdoor
is
named
''
Zagruzchick.dll
''
:
The
word
''
Zagruzchick
''
means
''
boot
loader
''
in
Russian
.

The
Control
panel
for
the
Epic
motherships
also
sets
the
language
to
codepage
''
1251
''
:
Codepage
1251
is
commonly
used
to
render
Cyrillic
characters
.

There
are
other
indications
that
the
attackers
are
not
native
English
language
speakers
:
The
sample
e9580b6b13822090db018c320e80865f
that
was
delivered
to
several
Epic
victims
as
an
upgraded
backdoor
,
has
the
compilation
code
page
language
set
to
''
LANGRUSSIAN
''
.

The
threat
actor
behind
the
''
Epic
''
operation
uses
mainly
hacked
servers
to
host
their
proxies
.

The
hacked
servers
are
controlled
through
the
use
of
a
PHP
webshell
.

This
shell
is
password
protected
;
the
password
is
checked
against
an
MD5
hash
:
The
MD5
''
af3e8be26c63c4dd066935629cf9bac8
''
has
been
solved
by
Kaspersky
Lab
as
the
password
''
kenpachi
''
.

In
February
2014
we
observed
the
Miniduke
threat
actor
using
the
same
backdoor
on
their
hacked
servers
,
although
using
a
much
stronger
password
.

Once
again
,
it
is
also
interesting
to
point
out
the
usage
of
Codepage
1251
in
the
webshell
,
which
is
used
to
render
Cyrillic
characters
.

There
appears
to
be
several
links
between
Turla
and
Miniduke
,
but
we
will
leave
that
for
a
future
blogpost
.

On
some
of
the
C
&
C
servers
used
in
the
Epic
attacks
,
we
were
able
to
identify
detailed
victim
statistics
,
which
were
saved
for
debugging
purposes
by
the
attackers
.

This
is
the
country
distribution
for
the
top
20
affected
countries
by
victim
's
IP
:
According
to
the
public
information
available
for
the
victims
'
IPs
,
targets
of
''
Epic
''
belong
to
the
following
categories
:
When
G-Data
published
their
Turla
paper
,
there
were
few
details
publicly
available
on
how
victims
get
infected
with
this
malware
campaign
.

Our
analysis
indicates
this
is
a
sophisticated
multi-stage
infection
;
which
begins
with
Epic
Turla
.

This
is
used
to
gain
a
foothold
and
validate
the
high
profile
victim
.

If
the
victim
is
interesting
,
they
get
upgraded
to
the
Turla
Carbon
system
.

Most
recently
,
we
observed
this
attack
against
a
Kaspersky
Lab
user
on
August
5
,
2014
,
indicating
the
operation
remains
fresh
and
ongoing
.

Note
:
A
full
analysis
of
the
Epic
attacks
is
available
to
the
Kaspersky
Intelligent
Services
customers
.

Contact
:
intelreports
@
kaspersky.com
We
would
like
to
add
the
following
at
the
end
of
the
blogpost
,
right
before
the
detection
names
:
If
you
'd
like
to
read
more
about
Turla/Uroburos
,
here
's
a
few
recommendations
:
Downloaders
,
injectors
,
infostealers
Example
md5s
of
files
detected
with
Kaspersky
's
Virus.Win32.Pioneer.dx
and
Symantec
's
Infostealer.Nemim
!
inf
:
To
ensure
only
single
instance
of
the
module
is
running
,
the
module
verifies
if
system
mutex
named
«132DF6E»
exists
.

If
it
exists
the
module
exits
,
if
not
­the
module
creates
one
.

The
module
implements
a
method
to
resist
running
in
virtual
environment
.

It
gets
CPU
name
and
identifier
from
the
registry
at
HKLM\HARDWARE\DESCRIPTION\
System\CentralProcessor\0
and
collects
IP
and
MAC
addresses
of
local
network
adapters
.

After
that
it
compiles
a
string
describing
the
system
in
the
following
format
:
«
C
P
U
:
%
CPUNAME
%
<
br
>
Net
card
:
%
IP
%
(
%
MACADDR
%
)
<
br
>
»
.

Next
it
checks
if
this
string
contains
one
of
the
following
substrings
:
If
any
of
these
strings
is
found
,
the
module
terminates
.

After
that
,
there
is
a
hardcoded
value
of
10
,
which
delays
further
execution
of
the
module
for
10
seconds
.

Then
the
module
attempts
to
delete
some
other
,
prob-
ably
older
,
components
which
might
be
present
on
the
system
.

The
list
of
deleted
files
includes
the
following
:
The
next
is
step
is
to
check
if
current
directory
has
a
file
named
«U»
.

If
not
,
the
module
proceeds
with
network
communication
routine
.

But
if
this
file
is
found
it
does
some
additional
checks
.

If
«U»
file
is
older
than
180
days
,
the
module
wipes
the
file
.

If
not
,
it
triggers
a
special
variable
that
makes
module
dormant
and
dis-
ables
further
communication
with
C
&
C
server
.

After
all
,
if
the
module
is
ready
and
allowed
to
communicate
with
C
&
C
server
it
does
that
in
the
following
manner
.

1
.

The
module
connects
to
autolace.twilightparadox.com
(
or
automachine
.
servequake.com
)
and
issues
a
HTTP
GET
request
with
hardcoded
User­Agent
string
:
The
server
response
should
contain
«DEXT87»
string
which
is
used
to
rec-
ognize
valid
response
.

The
malware
locates
«DEXT87»
and
reads
the
data
appended
to
it
.

The
appended
data
should
be
an
IP
address
in
plaintext
.

This
is
used
a
real
C
&
C
IP
address
.

Reading
stops
when
non­digit
or
dot
symbol
is
found
.

Here
is
an
example
of
shortest
possible
valid
server
response
:
2
.

If
the
real
C
&
C
IP
address
is
not
valid
the
module
may
try
to
send
identical
request
again
but
using
a
different
HTTP
path
:
If
the
C
&
C
IP
address
is
valid
,
the
module
issues
another
HTTP
request
:
The
server
response
can
be
one
of
the
following
:
Where
<
DATASIZE
>
is
a
decimal
integer
that
represents
length
of
<
DATA
>
field
in
bytes;
<
DATA
>
is
a
binary
data
separated
from
<
DATASIZE
>
field
by
semicolon
.

Please
note
,
that
after
receiving
<
DATA
>
,
it
is
XORed
with
byte
value
0x55
and
saved
to
a
disk
in
a
file
named
«ctfmon.exe»
(
current
directory
is
used
)
.

Upon
successful
receiving
of
the
file
it
is
started
in
a
new
process
.

This
module
is
relatively
large
(
455Kb
)
and
comes
as
a
part
of
WinRar
SFX
file
that
drops
and
starts
the
module
from
%
APPDATA
%
\Microsoft\Display\DmaUp3
.
exe
.

The
main
purpose
of
the
module
is
to
collect
various
secrets
stored
on
a
local
system
.

This
module
is
designed
not
to
run
on
Windows
with
system
default
codepage
set
to
Korean
.

From
the
very
beginning
this
module
checks
if
«bdagent.exe»
process
is
running
on
current
system
.

Bdagent.exe
is
a
name
for
BitDefender
Antivirus
component
.

If
it
is
running
,
it
uses
simple
AV
heuristics
evasion
technique
.

The
code
starts
a
thread
that
simulates
keystrokes
of
ESC
keyboard
key
and
then
shows
a
system
modal
message
box
.

Pushing
ESC
key
closes
the
modal
message
box
.

Right
after
that
keystroke
generation
thread
is
terminated
and
the
module
continues
normal
execution
as
if
«bdagent.exe»
was
not
running
.

Next
the
module
makes
sure
only
one
instance
of
current
code
is
running
by
checking
if
system
mutex
object
named
«920111215»
exists
.

After
that
,
the
mod-
ule
collects
information
about
current
system
which
includes
the
following
:
If
the
module
reveals
that
current
System
default
codepage
is
0412
(
Korean
)
it
terminates
.

There
is
one
interesting
specifics
in
Microsoft
IntelliForms
which
reveals
attack-
er
's
interests
.

IntelliForms
technology
keeps
login/password
information
in
the
registry
in
encrypted
form
.

However
,
there
is
no
clear
information
about
the
corre-
sponding
website
which
requires
given
login
and
password
.

The
only
information
Intelliforms
offers
about
the
place
where
given
login/password
should
be
used
is
a
hash
of
the
webpage
URL
.

So
far
,
the
attackers
can
steal
logins
and
pass-
words
but
to
understand
where
they
are
from
they
must
guess
the
string
which
produced
given
hash
.

They
have
implemented
this
logics
in
the
malware
.

When
IntelliForms
information
is
stolen
the
malware
tries
to
check
the
list
of
known
login
page
URLs
to
recover
the
originating
webpage
address
.

Here
is
the
list
of
URLs
that
are
checked
by
the
malware
:
The
list
of
targeted
services
includes
some
local
services
specifically
popular
in
:
The
module
uses
several
simple
XOR­based
algorithms
to
encrypt
embedded
string
data
.

String
encryption/decryption
functions
use
the
following
keys
:
The
module
works
with
all
Firefox
versions
prior
to
Mozilla
Firefox
12.0
.

Depend-
ing
on
version
of
Firefox
,
it
can
read
Firefox
database
directly
to
dump
stored
se-
crets
or
utilize
one
Firefox
libraries
to
access
the
configuration
data
.

In
addition
it
makes
use
of
the
following
Mozilla
Firefox
libraries
depending
on
Firefox
version
:
When
stealing
secrets
from
Firefox
and
Chrome
it
uses
built­in
SQLite
library
code
.

The
module
is
linked
with
SQLite
version
3.7.5
release
candidate
2
,
release
hash
ed759d5a9edb3bba5f48f243df47be29e3fe8cd7
dated
as
2011­01­28
17:03:50
.

After
stealing
secrets
from
local
system
the
malware
executes
some
kind
of
embedded
script
.

It
is
logging
all
actions
to
inform
the
operator
what
exactly
was
executed
by
this
variant
of
the
malware
.

The
result
of
this
execution
is
appended
to
the
stolen
data
and
uploaded
to
the
C
&
C
server
.

The
module
uploads
all
collected
information
to
one
of
the
following
URLs
via
POST
request
:
It
's
the
first
time
we
see
.pn

domain
used
in
malware
.

This
top
level
country
code
domain
is
quite
exotic
and
is
assigned
to
Pitcairn
Islands
,
which
is
Overseas
ter-
ritory
of
the
United
Kingdom
in
the
Pacific
.

As
of
2013
estimated
population
of
Pitcairn
Islands
is
only
56
people
.

An
official
.pn

domain
costs
$
100/year
from
the
registry
,
however
.eu.pn

domains
seem
to
be
given
away
for
free
.

The
malware
uses
fixed
User­Agent
string
:
The
data
is
uploaded
as
a
POST
request
binary
in
the
following
format
:
where
<
UserId
>
is
hardcoded
identifier
(
i.e
.

«user2»
in
current
sample
)
;
<
UniqueMachineId
>
is
a
32
characters
long
hex
string
which
derived
from
net-
work
card
MAC
address;
<
EncryptionKey
>
is
symmetrical
encryption
key
used
to
encrypt
<
UserId
>
and
<
GeneralSysInfo
>
values
.

The
malware
uses
text
protocol
,
which
is
why
potentially
binary
values
of
<
UserId
>
and
<
GeneralSysInfo
>
are
ad-
ditionally
encoded
using
Base64
algorithm
.

<
GeneralSysInfo
>
field
contains
only
basic
information
about
the
system
,
i.e
.

:
If
the
server
reply
contains
a
keyword
«minmei»
it
continues
sending
additional
in-
formation
.

«Minmei»
may
be
a
reference
to
a
popular
Japanese
anime
and
manga
known
as
«The
Super
Dimension
Fortress
Macross»
.

A
quote
from
Wikipedia
:
«Born
in
Yokohama
Chinatown
,
Japan
(
though
she
is
of
partial
Chinese
descent
)
as
Linn
Minmei
,
Minmay
moved
in
with
her
uncle
Shaochin
(
少江
)
and
aunt
Feic-
hun
(
慧中
)
on
South
Ataria
Island
in
hopes
of
finding
the
path
to
fulfill
her
dream
of
becoming
a
star.»
The
trojan
iterates
through
running
processes
and
looks
for
security
software
basing
on
executable
filenames
from
the
list
below
.

If
the
process
is
found
it
keeps
a
record
of
the
software
name
using
short
AV
Identifier
string
from
the
fol-
lowing
table
of
rules
The
malware
uses
a
trick
to
evade
running
on
a
VMware
.

First
,
it
checks
if
cur-
rent
process
is
running
in
WOW64
environment
.

If
yes
it
does
additional
port
I/O
specific
to
VMWare
virtual
machine
(
the
VMware
hypervisor
port
:
0x5658;
VMware
hypervisor
magic
value
:
0x564D5868
)
.

Another
method
to
detect
VM
en-
vironment
is
to
check
local
network
adapter
's
IP
address
.

If
it
belongs
to
subnet
192.168.100
.

*
then
the
malware
believes
it
's
running
in
a
VM
.

If
VM
is
detected
the
process
instantly
terminates
.

Next
the
malware
submits
collected
information
to
the
C
&
C
server
using
HTTP
GET
request
and
the
following
URL
format
:
http
:
//
<
C2DOMAIN
>
/bin/readi.php
?
a1=
%
STEPID
%
&
a2=
%
HOSTID
%
&
a3=
%
SYSINFO
%
&
a4=
%
AVSOFTID
%
,
where
%
C2DOMAIN
%
is
one
of
the
following
C
&
C
domains
:
%
STEPID
%
is
special
text
string
indicating
stage
of
malware
operation
.

This
string
varies
depending
on
the
local
system
language
and
may
be
one
of
the
following
:
%
HOSTID
%
is
a
special
value
generated
from
local
network
card
MAC
address;
%
SYSINFO
%
is
a
string
with
general
system
information
(
please
see
description
above
)
;
%
AVSOFTID
%
is
a
string
that
contains
indexes
of
AV
software
names
in
internal
table
of
AV
Identifiers
(
please
see
the
table
above
)
.

Igfxext.exe
can
download
a
file
and
drop
it
to
%
APPDATA
%
\microsoft\dis-
play\ctfmon.exe
(
md5=
e8bfb82b0dd5cef46116d61f62c25060
)
.

After
execution
,
the
downloaded
file
drops
SMAGENT.EXE
(
md5
0306f9ae-
7786570139f78e78bc940597
)
to
%
APPDATA
%
\MICROSOFT\DISPLAY
and
ex-
ecutes
it
.

This
component
is
a
virus
,
and
is
used
to
selectively
infiltrate
into
other
computers
via
USB
or
network
shares
.

A
large
number
of
files
are
detected
by
Kaspersky
Lab
scanners
as
Virus.Win32
.

Pioneer.dx
.

These
files
are
all
legitimate
files
that
have
been
infected
by
another
Darkhotel
component
.

All
of
these
infected
files
drop
a
63kb
self
injecting
compo-
nent
.

This
malware
is
63kb
in
size
.

It
is
bound
to
a
variety
of
other
software
packages
that
vary
in
name
,
but
the
host
package
is
consistently
detected
as
''
Virus.Win32
.

Pioneer.dx
''
.

The
igfxext.exe
component
is
dropped
to
disk
and
run
.

It
spawns
an-
other
suspended
process
with
its
own
igfxext.exe
image
,
but
decrypts
a
smaller
32kb
executable
(
cf1319d94f33380622ba000b7d8ad6e9
,
Trojan­Downloader
.

Win32.Agent.xwge
)
from
its
.data

section
in
memory
with
a
simple
xor
0xbb
.

The
running
process
overwrites
the
igfxext.exe
image
in
the
suspended
process
with
this
smaller
chunk
of
code
.

It
then
resumes
the
thread
in
the
new
process
.

This
smaller
code
section
maintains
similar
functionality
to
the
''
worm
''
compo-
nent
:
Host
package
files
detected
as
''
Virus.Win32.Pioneer.dx
''
are
infected
legitimate
files
,
that
do
not
have
any
self­propagation
routines
.

It
is
signed
with
the
familiar
''
''
digital
certificate
.

This
sample
is
started
by
code
running
within
svchost.exe
on
WinXP
SP3
.

It
drops
a
keylogger
.

The
debug
path
inside
:
The
dropper
above
maintains
,
drops
and
installs
this
kernel
mode
keylogger
:
Likely
,
it
was
developed
as
a
part
of
a
mid­to­late
2009
project
:
This
driver
package
is
built
to
look
like
a
legitimate
low
level
Microsoft
system
device
.

It
is
installed
as
a
system
kernel
driver
''
Ndiskpro
''
service
,
described
as
a
''
Microcode
Update
Device
''
.

It
is
somewhat
surprising
that
there
is
no
rootkit
functionality
hiding
this
service
:
When
loaded
,
the
NDISKPRO.SYS
driver
hooks
both
INT
0x01
and
INT
0xff
,
and
retrieves
keystroke
data
directly
from
port
0x60
,
the
motherboard
keyboard
con-
troller
itself
.

Here
we
see
the
local
port
variables
assigned
values
And
here
,
the
ports
are
directly
being
read
with
READPORTUCHAR
(
0x64
)
and
then
READPORTUCHAR
(
0x60
)
:
It
buffers
,
then
communicates
the
data
to
the
running
user
mode
component
.

This
component
then
encrypts
and
writes
the
retrieved
values
ondisk
to
a
ran-
domly
named
.tmp
,
file
like
ffffz07131101.tmp
.

This
file
is
located
in
the
same
directory
as
the
original
dropper
,
which
maintains
persistence
across
reboots
with
a
simple
addition
to
the
HKCU
run
key
.

Here
is
debug
output
demonstrating
this
component
's
data
retrieval
when
the
letter
''
D
''
is
repeatedly
pressed
on
the
keyboard
.

Keyscan
make
and
break
codes
are
''
0x20
''
and
''
0xA0
''
and
for
the
key
press
and
key
release
for
the
''
D
''
key
.

The
''
0x1D
''
value
from
port
0x64
that
you
see
below
is
basically
an
indication
that
the
output
buffer
is
full
and
the
keyboard
is
locked
,
so
it
is
safe
for
the
driver
to
access
the
key
value
in
port
0x60
:
These
debug
messages
and
code
style
are
duplicates
of
what
chpie
posted
in
the
past
.

This
keylogger
module
encrypts
and
stores
gathered
data
in
a
log
file
,
as
men-
tioned
previously
.

Its
encryption
algorithm
is
similar
to
RC4
.

Interesting
part
is
that
the
module
randomly
generates
the
key
and
stores
it
in
an
unexpected
place
:
in
the
middle
of
the
log
file
name
.

Hence
,
the
numeric
part
of
the
filename
is
used
as
a
seed
for
the
pseudorandom
number
generator
.

Rand
function
is
statically
linked
to
insure
same
results
on
different
computers
.

Here
is
the
commented
RC4
encryption
code
:
In
this
day
and
age
of
interconnected
cloud
services
and
distributed
content
delivery
networks
(
CDNs
)
,
it
is
important
for
both
CDN
service
providers
and
security
professionals
alike
to
recognize
and
understand
the
risks
that
these
systems
can
introduce
within
an
modern
enterprise
.

For
organizations
within
both
public
and
private
sectors
that
leverage
CDN
platforms
to
dynamically
deliver
web
content
,
it
is
important
that
the
content
is
also
routinely
monitored
.

Otherwise
,
malicious
third-party
content
can
be
loaded
into
a
target
organization
's
website
without
their
knowledge
,
delivering
untold
risks
to
unwitting
visitors
.

The
ThreatConnect
Intelligence
Research
Team
(
TCIRT
)
recently
observed
a
targeted
cross-site
scripting
(
XSS
)
''
drive-by
''
attack
that
leveraged
a
single
content
delivery
network
resource
to
distribute
a
malicious
Java
applet
via
nearly
all
of
the
major
official
Government
of
Afghanistan
websites
.

The
compromised
CDN
resource
in
question
is
a
JavaScript
file
hosted
at
[
http
:
]
//cdn.afghanistan
[
.

]
af/scripts/gop-script.js
The
domain
cdn.afghanistan
[
.

]
af
is
a
legitimate
CDN
site
used
by
the
Afghan
Ministry
of
Communications
and
IT
(
MCIT
)
to
host
web
content
that
is
displayed
and
used
on
many
official
gov.af
websites
.

The
javascript
URL
(
[
http
:
]
//cdn.afghanistan
[
.

]
af/scripts/gop-script.js
)
is
called
from
numerous
official
Afghan
Government
websites
,
including
the
following
:
It
is
likely
that
this
javascript
URL
itself
is
normally
legitimate
,
but
the
attackers
obtained
access
to
the
file
and
prepended
the
following
malicious
JavaScript
functions
to
the
beginning
of
the
script
:
Note
that
the
gov.af
websites
would
not
need
to
be
compromised
individually
for
this
attack
to
be
delivered
to
visitors
of
the
sites
,
because
it
is
the
backend
CDN
infrastructure
that
is
serving
up
the
malicious
script
.

Judging
by
the
last
modified
timestamp
on
the
HTTP
response
of
gop-script.js
,
which
is
Tue
,
16
Dec
2014
08:07:06
GMT
,
this
malicious
CDN
compromise
was
very
recent
in
nature
.

In
fact
,
it
occurred
on
the
very
same
day
that
China
's
Prime
Minister
Li
Keqiang
would
meet
with
Abdullah
Abdullah
,
the
Chief
Executive
Officer
of
Afghanistan
in
Astana
Kazakhstan
,
they
would
discuss
infrastructure
development
and
bilateral
cooperation
issues
.

Looking
at
the
EXIF
metadata
of
the
image
of
Keqiang
meeting
with
Abdullah
that
is
hosted
on
the
Chinese
embassy
website
we
note
a
Tue
,
16
December
2014
07:43:31
modify
time
as
well
as
the
www.news
[
.

]
cn
watermark
in
the
bottom
righthand
corner
.

This
indicates
that
the
image
of
Keqiang
and
Abdullah
was
likely
taken
and
edited
sometime
prior
to
07:43:31
.

While
it
is
ambiguous
as
to
which
timezone
the
edits
actually
took
place
in
(
Kazakhstan
or
China
)
we
assume
the
date
timestamp
references
GMT
because
the
press
release
states
''
In
the
afternoon
of
December
15
local
time…
''
If
we
assume
the
photograph
and
afternoon
meeting
took
place
sometime
prior
to
13:43
Alma-Ata
standard
time
(
+0600
)
this
would
closely
correspond
with
a
07:43
GMT
time
stamp
.

The
modification
of
the
gop-script.js
by
the
attackers
at
08:07:06
GMT
likely
tracks
extremely
close
to
a
window
of
a
few
hours
in
which
Keqiang
met
with
Abdullah
.

It
is
worth
mentioning
that
a
similar
scenario
occurred
on
June
20th
when
security
researcher
PhysicalDrive0
observed
a
malicious
Java
file
hosted
on
the
Embassy
of
Greece
in
Beijing
.

At
the
time
,
a
Chinese
delegation
led
by
Keqiang
was
visiting
Greek
Prime
Minister
Antonis
Samaras
in
Athens
.

Security
researcher
R136a1
aka
''
thegoldenmessenger
''
released
a
followup
blog
with
detailed
analysis
of
the
Greek
embassy
compromise
.

While
these
two
separate
events
are
not
directly
related
,
additional
research
into
the
status
of
ministerial
and
official
government
websites
on
or
around
the
dates
of
notable
Chinese
delegations
and
or
bilateral
meetings
may
yield
additional
patterns
of
interest
.

Upon
closer
inspection
of
the
prepended
malicious
JavaScript
code
,
one
will
notice
the
similarity
in
the
update.javaplug-in
[
.

]
com
naming
convention
and
URL
structure
to
the
C2
domain
java-se
[
.

]
com
found
in
the
Palo
Alto
Networks
blog
post
Attacks
on
East
Asia
using
Google
Code
for
Command
and
Control
and
associated
with
Operation
Poisoned
Hurricane
.

However
,
the
malicious
document.write
driveby
URLs
listed
above
both
result
in
403
Forbidden
errors
as
of
December
18
,
2014
.

While
the
403
Forbidden
errors
may
seem
like
an
analytic
dead
end
,
the
TCIRT
also
identified
a
malicious
Java
applet
submission
to
VirusTotal
that
confirms
the
nature
of
this
malicious
activity
.

This
Java
applet
,
SHA1
:
388E6F41462774268491D1F121F333618C6A2C9A
,
has
no
antivirus
detections
as
of
December
21st
.

The
applet
contains
its
malicious
class
file
at
the
path
''
jre7u61windows/x86/Update.class
''
.

This
class
file
downloads
and
decodes
an
XOR
0xC8
encoded
Windows
PE
executable
payload
from
[
http
:
]
//mfa.gov
[
.
]
af/content/images/icon35.png
,
hosted
on
the
official
Afghan
Ministry
of
Foreign
Affairs
site
,
which
was
also
affected
by
the
gop-script
XSS
.

Using
historic
context
archived
within
ThreatConnect
,
the
TCIRT
concluded
that
this
Java
applet
is
from
the
same
source
code
as
the
applet
SHA1
:
ADC162DD909283097E72FC50B7AB0E04AB8A2BCC
,
which
was
previously
observed
by
the
TCIRT
at
the
Operation
Poisoned
Hurricane
related
URL
[
http
:
]
//jre7.java-se
[
.

]
com/java.jar
on
August
15
,
2014
.

This
applet
has
the
same
class
path
,
and
downloads
an
XOR
0xFF
encoded
payload
executable
from
the
URL
[
https
:
]
//amco-
triton.co
[
.
]
jp/js/dl/in.jpg
.

Additional
indicators
and
context
associated
with
this
particular
Java
driveby
activity
can
be
found
in
the
ThreatConnect
Common
Community
Incident
20140815A
:
The
XOR
0xC8
encoded
payload
downloaded
from
[
http
:
]
//mfa.gov
[
.
]
af/content/images/icon35.png
decodes
into
the
Windows
PE
executable
SHA1
:
This
executable
is
a
self-extracting
(
SFX
)
Microsoft
Cabinet
executable
that
is
digitally
signed
with
a
valid
certificate
from
''
OnAndOn
Information
System
Co.
,
Ltd.
''
,
serial
number
''
1F
F7
D8
64
18
1C
55
5E
70
CF
DD
3A
59
34
C4
7D
''
.

This
same
certificate
was
also
used
to
sign
the
Java
applet
that
downloaded
this
malware
.

This
executable
drops
the
following
files
:
Malicious
DLL
that
loads
into
the
above
dllhost.exe
,
using
a
similar
DLL
sideloading
technique
to
that
most
commonly
associated
with
the
PlugX
backdoor
.

This
backdoor
connects
to
the
faux
Oracle
Java
themed
command
and
control
(
C2
)
domain
oracle0876634.javaplug-in
[
.
]
com
.

Note
that
javaplug-in
[
.

]
com
is
the
same
root
domain
found
in
the
compromised
version
of
[
http
:
]
//cdn.afghanistan
[
.

]
af/scripts/gop-script.js
as
[
http
:
]
//update.javaplug-
in
[
.

]
com/o/j.js
,
confirming
that
this
Java
malware
is
in
fact
directly
associated
with
the
Afghan
MCIT
CDN
XSS
compromise
.

Full
indicators
of
this
activity
and
a
YARA
rule
to
detect
the
malware
certificate
can
be
found
in
the
ThreatConnect
Common
Community
under
Incident
20141217A
:
Afghan
Government
Java
Driveby
and
signature
APTOnAndOncert.yara
.

As
the
US
and
NATO
reduce
their
troop
levels
in
Afghanistan
,
China
is
posturing
to
fill
the
gap
of
influence
that
the
west
is
leaving
behind
.

With
plans
to
facilitate
multilateral
peace
talks
with
the
Taliban
and
establish
major
transportation
projects
which
aim
to
bolster
the
Afghan
economy
,
Beijing
has
been
eyeing
Afghanistan
as
part
of
its
broader
South
Asian
strategy
.

By
exploiting
and
co-opting
Afghan
network
infrastructure
that
is
used
by
multiple
ministerial
level
websites
,
Chinese
intelligence
services
would
be
able
to
widely
distribute
malicious
payloads
to
a
variety
of
global
targets
using
Afghanistan
's
government
websites
as
a
topical
and
trusted
distribution
platform
,
exploiting
a
single
hidden
entry
point
.

This
being
a
variant
of
a
typical
''
watering-hole
''
attack
,
the
attackers
will
most
likely
infect
victims
outside
the
Afghan
government
who
happened
to
be
browsing
any
one
of
the
CDN
client
systems
,
specifically
,
partner
states
involved
in
the
planned
troop
reduction
.

It
is
important
to
consider
that
corporate
enterprises
are
not
immune
to
this
tactic
,
and
this
is
not
just
a
technique
that
is
used
by
APT
threat
actors
.

If
an
enterprise
's
website
leverages
a
CDN
to
speed
up
content
delivery
,
unintended
consequences
must
be
anticipated
.

Fortunately
,
modern
browsers
now
implement
a
security
concept
called
''
Content
Security
Policy
''
.

As
long
as
the
server
's
response
headers
are
configured
properly
,
third
party
content
may
be
restricted
to
originating
from
a
narrow
whitelist
.

Just
as
attackers
distribute
malicious
content
to
users
en
masse
or
CDN
services
distribute
web
content
to
users
,
security
professionals
must
be
able
to
quickly
distribute
actionable
Threat
Intelligence
in
formats
readable
by
both
humans
and
machines
.

ThreatConnect
is
the
industry
's
first
comprehensive
Threat
Intelligence
Platform
that
enables
enterprises
to
orchestrate
the
aggregation
of
Threat
Intelligence
from
multiple
sources
,
use
integrated
analytics
and
a
robust
API
that
gives
enterprises
the
control
to
action
their
own
Threat
Intelligence
,
in
the
cloud
and
on
premises
.

Register
for
a
free
account
now
to
view
the
Common
Community
shares
and
more
.

by
John
Scott-Railton
and
Seth
Hardy
With
the
collaboration
of
Cyber
Arabs
.

Media
coverage
:
Associated
Press
,
Forbes
This
report
describes
a
malware
attack
with
circumstantial
links
to
the
Islamic
State
in
Iraq
and
Syria
.

In
the
interest
of
highlighting
a
developing
threat
,
this
post
analyzes
the
attack
and
provides
a
list
of
Indicators
of
Compromise
.

A
Syrian
citizen
media
group
critical
of
Islamic
State
of
Iraq
and
Syria
(
ISIS
)
was
recently
targeted
in
a
customized
digital
attack
designed
to
unmask
their
location
.

The
Syrian
group
,
Raqqah
is
being
Slaughtered
Silently
(
RSS
)
,
focuses
its
advocacy
on
documenting
human
rights
abuses
by
ISIS
elements
occupying
the
city
of
Ar-
Raqah
.

In
response
,
ISIS
forces
in
the
city
have
reportedly
targeted
the
group
with
house
raids
,
kidnappings
,
and
an
alleged
assassination
.

The
group
also
faces
online
threats
from
ISIS
and
its
supporters
,
including
taunts
that
ISIS
is
spying
on
the
group
.

Though
we
are
unable
to
conclusively
attribute
the
attack
to
ISIS
or
its
supporters
,
a
link
to
ISIS
is
plausible
.

The
malware
used
in
the
attack
differs
substantially
from
campaigns
linked
to
the
Syrian
regime
,
and
the
attack
is
focused
against
a
group
that
is
an
active
target
of
ISIS
forces
.

As
the
Syrian
Civil
War
continues
,
Syrian
citizen
journalists
and
nonviolent
activists
operate
in
an
increasingly
unsafe
environment
.

The
regime
has
never
welcomed
their
work
,
and
has
often
targeted
them
for
arrest
and
detention
,
and
a
multi-year
hacking
campaign
(
see
Pro-Regime
/
Regime
Linked
Groups
)
.

Additionally
,
not
all
elements
of
the
Syrian
opposition
have
uniformly
supported
nonviolent
activists
and
citizen
journalists
.

More
recently
,
in
areas
like
Raqqah
,
nonviolent
activists
face
a
new
and
exceptionally
grave
threat
:
ISIS
.

A
growing
number
of
reports
suggest
that
ISIS
is
systematically
targeting
groups
that
document
atrocities
,
or
that
communicate
with
Western
media
and
aid
organizations
,
sometimes
under
the
pretext
of
finding
''
spies
''
.

Ar-Raqqah
,
the
city
in
which
the
case
study
is
located
,
is
situated
in
northern
Syria
and
continues
to
be
a
key
conflict
flashpoint
of
the
Syrian
Civil
War
.

In
the
spring
of
2013
,
Islamists
and
Free
Syrian
Army
(
FSA
)
fighters
took
over
Ar-
Raqqah
from
regime
forces
.

As
ISIS
gained
momentum
,
they
consolidated
their
control
over
the
city
,
edging
out
FSA-
affiliated
groups
through
attacks
,
summary
executions
,
and
kidnappings
against
a
range
of
groups
,
including
ethnic
and
religious
minorities
.

During
2014
,
there
were
a
number
of
reports-many
unconfirmed-that
ISIS
confiscated
smartphones
and
laptops
from
captured
activists
.

According
to
Syrians
who
experienced
these
searches
and
spoke
with
one
of
the
reports
'
authors
,
ISIS
sometimes
extracts
data
from
confiscated
smartphones
and
laptops
to
collect
information
about
people
and
groups
they
are
targeting
,
as
well
as
to
seek
evidence
of
''
un-Islamic
''
activities
.

As
ISIS
cements
their
control
of
Ar-Raqqah
and
other
territories
,
reports
have
emerged
recently
(
though
not
all
of
them
confirmed
)
suggesting
that
elements
within
ISIS
are
growing
increasingly
sophisticated
at
imposing
control
and
targeting
opponents
using
digital
methods
.

Reports
about
ISIS
targeting
Internet
cafés
have
grown
increasingly
common
,
and
in
some
cases
reports
point
to
the
possible
use
of
keyloggers
as
well
as
unspecified
''
IP
sniffers
''
to
track
behaviour
in
Internet
cafes
.

Nonviolent
activists
and
citizen
journalists
based
in
Ar-Raqqah
have
provided
the
outside
world
with
much
of
what
we
know
about
how
ISIS
treats
the
population
.

These
activists
and
journalists
face
mortal
danger
for
their
actions
,
and
reports
have
emerged
of
their
detention
and
torture
at
the
hands
of
ISIS
.

As
ISIS
continues
to
use
social
media
to
push
the
message
that
it
is
welcomed
by
the
population
of
Ar-Raqqah
,
groups
like
Raqqah
is
being
Slaughtered
Silently
(
RSS
)
provide
a
compelling
counter
narrative
.

RSS
has
n't
escaped
ISIS
'
notice
,
and
the
group
has
been
targeted
for
kidnappings
,
house
raids
,
and
at
least
one
alleged
targeted
killing
.

At
the
time
of
writing
,
ISIS
is
allegedly
holding
several
citizen
journalists
in
Ar-Raqqah
.

In
addition
,
RSS
is
targeted
online
by
ISIS
supporters
with
harassment
,
including
threats
to
the
physical
safety
of
its
members
.

For
example
,
ISIS
supporters
have
claimed
that
ISIS
has
established
a
system
of
CCTV
cameras
in
Ar-Raqqah
to
observe
residents
'
movements
.

While
this
claim
may
be
a
bluff
or
exaggeration
,
at
least
one
ISIS
supporter
has
indicated
on
social
media
that
this
system
could
be
used
to
look
for
members
of
RSS
.

This
section
describes
a
highly
targeted
attack
sent
to
an
e-mail
address
belonging
to
RSS
.

The
Citizen
Lab
analyzed
this
attack
with
the
consent
of
RSS
,
which
requested
that
their
name
be
used
in
this
report
.

The
attack
took
the
form
of
an
unsolicited
e-mail
containing
a
download
link
to
a
decoy
file
.

The
file
contained
custom
malware
that
profiled
the
victim
's
computer
and
beaconed
its
IP
address
to
an
e-mail
account
under
the
attacker
's
control
.

The
unsolicited
message
below
was
sent
to
RSS
at
the
end
of
November
2014
from
a
Gmail
email
address
.

The
message
was
carefully
worded
,
and
contained
references
specific
to
the
work
and
interests
of
RSS
.

Thank
you
for
your
efforts
to
deliver
a
true
picture
of
the
reality
of
life
in
Raqqah
.

As
Syrians
residing
in
Canada
we
are
working
with
media
because
we
believe
in
the
importance
of
shedding
light
on
the
realities
of
life
in
Syria
,
and
Raqqah
in
particular
.

We
are
preparing
a
lengthy
news
report
on
the
realities
of
life
in
Raqqah
.

We
are
sharing
some
information
with
you
with
the
hope
that
you
will
correct
it
in
case
it
contains
errors
.

We
have
prepared
a
map
of
the
city
of
Raqqah
,
in
addition
to
a
preliminary
report
.

We
hope
that
you
have
a
look
at
it
with
them
and
inform
us
of
any
errors
.

We
also
hope
that
if
you
happen
to
be
on
Facebook
,
you
could
provide
us
with
the
account
of
the
person
responsible
for
the
campaign
,
if
you
do
n't
mind
,
so
that
we
can
communicate
with
him
directly
.

You
can
see
a
preliminary
copy
of
the
report
on
this
linkhttp
:
//tempsend
[
DOT
]
com/
[
Redacted
]
With
all
respect
[
Name
Redacted
]
We
are
unsure
why
the
attacker
specifically
mentions
Canada
in
the
email
lure
.

However
,
it
is
well
known
that
Syria's
extensive
diaspora
(
including
in
Canada
)
regularly
engages
in
advocacy
,
sometimes
in
coordination
with
groups
within
Syria
.

Thus
,
the
message
is
not
on
its
face
implausible
.

However
,
we
note
that
the
attacker
also
attempts
to
social
engineer
the
identity
of
individuals
working
with
RSS
,
by
requesting
a
personal
Facebook
page
.

The
custom
malware
used
in
this
attack
infects
a
user
who
views
the
decoy
''
slideshow
,
''
and
beacons
home
with
the
IP
address
of
the
victim
's
computer
and
details
about
his
or
her
system
each
time
the
computer
restarts
.

Unlike
Syrian
regime-linked
malware
,
it
contains
no
Remote
Access
Trojan
(
RAT
)
functionality
,
suggesting
it
is
intended
for
identifying
and
locating
a
target
.

Further
,
because
the
malware
sends
data
captured
by
the
malware
to
an
e-mail
address
,
it
does
not
require
that
the
attackers
maintain
a
command-and-control
server
online
.

This
functionality
would
be
especially
useful
to
an
adversary
unsure
of
whether
it
can
maintain
uninterrupted
Internet
connectivity
.

Accessing
the
link
provided
in
the
malicious
e-mail
sends
the
user
to
a
.zip

file
hosted
on
file-sharing
site
tempsend.com
.

At
the
time
of
writing
the
file
had
been
downloaded
only
10
times
This
file
is
a
self-extracting
archive
with
an
icon
intended
to
suggest
to
the
victim
that
it
is
itself
a
slideshow
.

When
run
,
the
file
opens
a
slideshow
of
Google
Earth
screen
captures
to
the
victim
,
displaying
a
series
of
locations
in
Syria
,
and
highlighting
an
''
ISIS
HQ
''
and
other
images
showing
the
alleged
locations
of
US
airstrikes
.

Examples
of
images
in
the
slideshow
as
follows
:
When
opened
,
the
''
slideshow.zip
''
file
writes
and
executes
several
files
:
''
AdobeR1.exe
''
is
malicious
,
while
''
pictures.exe
''
is
the
genuine
slideshow
displayed
to
the
victim
.

When
the
slideshow
is
closed
both
AdobeR1.exe
and
pictures.exe
are
deleted
.

The
AdobeR1
file
writes
a
series
of
executable
files
that
perform
information
collection
and
communication
functions
,
including
:
The
program
sequence
of
data
collection
and
sending
is
somewhat
unusual
,
with
each
program
performing
a
single
task
and
communicating
via
markers
left
in
the
registry
.

Programs
appear
to
make
use
of
the
Visual
C++
Runtime
Library
.

First
,
the
program
nvidrv
adds
itself
to
autorun
:
It
also
creates
a
series
of
registry
keys
that
the
individual
programs
use
to
communicate
:
Registry
keys
and
programs
using
them
:
It
then
runs
GooglUpd
,
which
cleans
up
the
program
files
if
they
exist
,
and
runs
AdbrRader
.

AdbrRader
(
communicating
through
registry
key
''
2
''
)
writes
the
file
vgadmysadm.tmp
with
the
name
of
another
registry
key
''
2
''
with
startup
info
.

Next
,
nvidrv
runs
GoogleUpate
,
which
collects
system
information
and
writes
it
to
:
Then
nvidrv
runs
nvisdvr
(
registry
key
''
4
''
)
that
collects
a
list
of
running
processes
,
which
are
written
to
:
Finally
,
nvidrv
runs
svhosts
,
which
tests
Internet
connectivity
by
doing
a
DNS
query
for
windowsupdate.microsoft.com
.

It
then
runs
rundl132
if
it
has
not
before
,
by
checking
whether
registry
key
name
''
6
''
is
present
.

It
sets
the
key
to
''
0
''
and
runs
it
.

Next
,
''
rundl132.exe
''
performs
an
HTTP
GET
request
to
myexternalip.com
and
collects
the
external
IP
of
the
infected
machine
:
Next
,
rundl132
writes
:
Then
rundl132
writes
the
external
IP
to
:
Finally
,
rundl132
runs
AdobeIns
,
which
zips
the
contents
of
the
win32.tmp
folder
.

Program
''
AdobeIns.exe
''
takes
the
files
written
by
the
other
programs
and
zips
them
in
an
encrypted
,
password-
protected
file
:
Data
is
transmitted
by
e-mail
to
an
account
presumably
controlled
by
the
attacker
.

AdobeIns
connects
to
an
account
at
the
online
e-mail
provider
inbox.com
via
smtp
using
hardcoded
credentials
.

The
malware
then
sends
an
e-mail
to
the
same
inbox
containing
the
text
''
Hello
''
and
with
mxtd
file
attached
.

SMTP
traffic
generated
by
the
malware
to
inbox.com
(
with
redactions
)
The
malware
seen
in
this
case
study
is
unusual
as
it
relies
on
a
half-dozen
separate
executable
files
,
each
with
a
single
task
,
and
each
communicating
via
markers
dropped
in
the
Registry
.

The
malware
is
also
interesting
because
it
does
not
provide
remote
access
,
but
only
sends
an
e-mail
containing
the
victim
's
IP
address
and
miscellaneous
system
information
.

The
malware
resends
the
information
each
time
the
computer
is
restarted
,
but
it
does
not
refresh
the
sent
information
on
restart
(
which
may
be
a
bug
)
.

This
behaviour
strongly
suggests
that
the
function
of
this
malware
is
to
serve
as
a
beacon
.

The
system
information
could
be
used
to
identify
processes
to
exploit
in
the
future
,
however
since
the
attacker
has
already
triggered
the
execution
of
a
file
on
the
victim
's
system
,
it
is
surprising
that
more
was
not
taken
,
or
that
a
RAT
(
custom
or
widely
available
)
was
not
used
.

A
RAT
would
have
provided
much
greater
access
alongside
IP
information
By
not
providing
remote
access
and
other
RAT
functionality
,
the
program
looks
less
like
malware
,
and
may
attract
less
attention
from
endpoint
protection
tools
and
scanners
.

Detections
were
low
when
the
file
was
first
submitted
to
VirusTotal
,
for
example
.

It
registered
only
6/55
detections
by
anti
virus
scanners
,
or
a
10
%
detection
rate
.

Transmitting
the
malware
via
e-mail
also
provides
a
degree
of
obscurity
,
and
has
the
additional
advantage
of
providing
a
layer
of
abstraction
between
the
attacker
and
the
target
:
there
is
no
need
to
maintain
a
RAT
command-and-control
server
.

The
malware
transmits
autonomously
,
leaving
the
material
in
an
inbox
for
the
attacker
to
collect
at
a
later
time
.

The
malware
has
no
obfuscation
processes
and
is
not
highly
technical
in
its
development
or
interaction
with
Windows
.

Nevertheless
,
we
believe
that
the
author
of
the
program
is
aware
of
certain
techniques
to
reduce
the
visibility
of
malware
on
a
network
,
including
transmitting
data
via
encrypted
e-mail
communications
.

However
,
the
attacker
has
not
correctly
implemented
encrypted
e-mail
:
the
malware
will
not
attempt
to
use
a
TLS
connection
in
certain
cases
.

As
a
result
,
account
login
credentials
may
be
readily
available
in
network
traffic
.

In
addition
,
the
malware
uses
the
old
PKWARE
implementation
of
zip
encryption
,
which
is
not
particularly
secure
.

The
password
for
the
zipped
file
is
also
present
in
the
binary
without
encryption
or
obfuscation
.

Citizen
Lab
researchers
have
developed
the
Targeted
Threat
Index
(
TTI
)
as
a
tool
to
standardize
information
about
the
sophistication
of
targeted
threats
against
civil
society
groups
in
our
research
.

The
index
captures
information
about
the
level
of
social
engineering
used
(
''
Targeting
Sophistication
''
)
,
and
adds
a
Technical
Sophistication
value
for
the
attack
as
a
multiplier
.

This
attack
,
which
has
little
technical
sophistication
(
i.e.
,
it
uses
no
exploits
,
code
obfuscation
,
or
techniques
to
frustrate
reversing
,
etc
.

)
,
nevertheless
has
carefully
developed
social
engineering
in
the
seeding
materials
and
bait
document
.

Taken
together
it
rates
a
3
for
Targeting
Sophistication
and
a
1.25
for
Technical
Sophistication
by
our
metric
,
yielding
a
TTI
score
of
3.75
.

Citizen
Lab
research
using
the
TTI
has
found
that
,
despite
low
levels
of
technical
sophistication
,
with
well-crafted
social
engineering
malware
attacks
remain
highly
effective
against
civil
society
groups
.

More
information
is
available
about
the
TTI
in
a
recent
Usenix
Security
paper
.

There
are
at
least
three
possible
sources
for
this
malware
attack
:
We
evaluate
each
of
these
possibilities
in
turn
,
drawing
on
the
information
available
to
us
after
almost
three
years
of
tracking
regime-linked
malware
.

Pro-regime
malware
actors
have
continually
targeted
the
Syrian
opposition
with
waves
of
malware
since
at
least
late
2011
.

Those
campaigns
have
been
extensively
reported
on
by
a
range
of
groups
,
including
Kaspersky
,
FireEye
,
Citizen
Lab
,
the
Electronic
Frontier
Foundation
,
and
many
others
.

Regime-linked
malware
has
a
number
of
common
features
that
typically
serve
as
distinguishing
characteristics
:
Social
engineering
focusing
on
the
needs
and
interests
of
the
opposition
.

Although
targeted
,
the
malware
seeding
often
aims
at
classes
of
people
(
e.g.
,
people
interested
in
'shocking
'
news
about
a
fighter
,
or
'leaked
'
information
about
the
Assad
regime
)
rather
than
carefully
written
spear
phishing
targeting
a
single
individual
or
small
group
.

Use
of
widely
available
RATs
(
njRAT
,
Xtreme
Rat
,
ShadowTech
Rat
,
DarkComet
RAT
,
and
Blackshades
RAT
,
among
others
)
.

At
least
one
command-and-control
server
located
within
Syrian
IP
space
(
often
from
a
limited
range
of
addresses
)
.

Frequent
use
of
Dynamic
DNS
providers
like
no-ip
.

Use
of
''
crypters
''
to
obscure
the
binary
.

These
characteristics
are
not
all
present
in
every
sample
,
but
we
have
typically
found
one
or
more
in
almost
every
binary
we
have
examined
that
is
Syrian
regime-linked
.

This
malware
attack
differs
from
known
regime-linked
groups
in
each
of
these
elements
.

Not
only
is
it
exceptionally
targeted
,
but
it
is
also
not
a
commonly
available
RAT
.

Nor
does
it
have
RAT
functionality
.

The
function
of
the
malware
appears
to
be
:
identify
and
unmask
the
IP
address
of
target
(
s
)
,
and
resend
them
to
the
attacker
with
each
reboot
.

In
addition
,
data
is
sent
to
an
Internet
e-mail
address
,
and
no
crypter
is
used
to
obscure
the
binary
.

We
are
aware
of
only
one
previous
case
in
Syria
in
which
e-mail
was
used
to
transmit
data
,
and
that
we
believed
was
regime
linked
.

That
incident
,
observed
in
2012
,
also
used
hardcoded
e-mail
to
exfiltrate
.

However
,
that
malware
had
substantially
more
functionality
than
this
case
:
not
only
did
it
drop
a
second
stage
from
a
compromised
site
,
but
was
also
included
a
mechanism
for
exfiltrating
credentials
from
Facebook
and
hooking
programs
like
Skype
.

The
lack
of
overlap
in
Tactics
,
Techniques
,
and
Procedures
(
TTPs
)
between
this
attack
and
prior
attacks
does
not
rule
out
Syrian
regime-linked
attackers
.

It
is
possible
that
regime-linked
groups
are
trying
a
new
approach
.

However
,
given
that
known
regime-linked
groups
continued
to
remain
active
during
the
same
date
range
using
familiar
TTPs
,
this
scenario
seems
unlikely
.

In
addition
,
it
would
be
strange
for
regime-linked
malware
groups
to
undertake
significant
effort
to
prepare
and
send
an
implant
that
has
significantly
less
functionality
than
what
they
commonly
use
.

Taken
together
,
we
find
this
evidence
supports
the
hypothesis
that
familiar
regime-linked
groups
did
not
conduct
the
attack
.

RSS
operates
in
territory
controlled
by
ISIS
,
and
has
faced
extensive
targeting
by
ISIS
.

Currently
,
they
appear
to
be
directly
targeted
by
ISIS
for
kidnappings
and
other
retaliation
,
including
executions
.

In
addition
,
ISIS
supporters
have
explicitly
suggested
that
the
group
is
under
surveillance
and
actively
hunted
.

Together
this
evidence
suggests
that
ISIS
has
a
strong
motivation
for
using
social
engineering
and/or
malware
to
locate
the
members
of
RSS
.

We
think
there
are
several
features
of
the
malware
attack
that
align
with
the
needs
and
constraints
of
ISIS
and
its
supporters
in
Ar-Raqqah
,
more
so
than
other
groups
,
as
we
understand
them
.

For
example
:
The
malware
beacons
location
but
does
not
provide
RAT
functionality
.

The
seeding
attempts
to
obtain
a
'private
'
Facebook
identity
from
RSS
through
social
engineering
.

The
malware
exfiltrates
to
an
online
e-mail
account
,
thus
not
requiring
the
attacker
to
maintain
a
command-and-
control
server
online
.

The
social
media
activity
of
members
of
RSS
is
often
highly
public
.

Their
location
and
exact
membership
,
however
,
is
secret
.

We
speculate
that
if
an
attacker
were
interested
in
maintaining
long-term
surveillance
of
the
activities
of
RSS
they
could
have
employed
a
RAT
.

However
,
if
the
attacker
were
interested
in
unmasking
the
location
of
its
targets
so
they
could
be
physically
tracked
down
,
collecting
IP
data
and
system
info
would
be
a
more
reasonable
approach
.

ISIS
or
its
supporters
clearly
have
a
strong
interest
in
the
(
rudimentary
)
location
tracking
of
the
members
of
RSS
that
this
malware
provides
.

Internet
connectivity
in
Raqqah
is
extremely
limited
,
and
some
of
it
is
under
ISIS
control
.

Knowing
the
IP
address
of
a
target
could
quickly
narrow
down
targets
to
specific
locations
,
and
specific
Internet
services
,
or
Internet
cafes
in
Raqqah
.

Given
that
the
identities
and
locations
of
RSS
members
are
closely
guarded
,
such
information
would
hold
significant
intelligence
value
for
ISIS
.

Armed
with
this
kind
of
information
,
ISIS
could
physically
harm
people
within
Raqqah
(
and
it
is
also
possible
that
they
have
the
ability
to
operate
in
some
capacity
in
border
areas
of
Turkey
)
.

Little
is
publicly
known
about
the
technical
capabilities
of
ISIS
and
its
supporters
;
however
,
reports
have
begun
to
emerge
suggesting
that
ISIS
is
interested
in
expanding
its
abilities
.

In
addition
,
ISIS
has
reportedly
gained
the
support
of
at
least
one
individual
with
some
experience
with
social
engineering
and
hacking
:
Junaid
Hussain
(
aka
TriCk
)
,
a
former
member
of
teamp0ison
hacking
team
.

While
Mr.
Hussain
and
associates
have
reportedly
made
threats
against
Western
governments
,
it
is
possible
that
he
or
others
working
with
ISIS
have
quietly
supported
an
effort
to
identify
the
targeted
organization
,
which
is
a
highly
visible
thorn
in
the
side
of
ISIS
.

It
is
possible
that
the
attack
is
the
product
of
actors
working
for
unknown
purposes
and
targeting
RSS
.

Given
the
activities
of
RSS
,
however
,
it
is
unclear
who
this
might
be
.

It
is
not
possible
,
for
example
,
to
reject
the
theory
that
some
unknown
group
within
the
FSA
,
or
other
groups
opposing
the
Assad
regime
are
responsible
.

Citizen
journalists
in
Ar-Raqqah
were
previously
critical
of
arbitrary
arrests
carried
out
by
non-ISIS
groups
in
2013
.

However
,
it
is
unclear
why
those
groups
,
which
no
longer
control
Ar-Raqqah
,
would
be
interested
in
RSS
in
November
2014
.

It
is
likely
that
third
party
actors
,
including
several
intelligence
services
,
are
closely
monitoring
various
actors
in
the
conflict
through
a
range
of
electronic
means
.

However
,
there
is
little
reason
to
suggest
that
they
would
use
a
tailored
but
technically
rudimentary
attack
to
target
RSS
in
particular
.

After
considering
each
possibility
,
we
find
strong
but
inconclusive
circumstantial
evidence
to
support
a
link
to
ISIS
.

However
,
we
are
unable
to
connect
this
attack
directly
to
ISIS
,
Mr.
Hussain
,
or
other
ISIS
supporters
.

If
indeed
ISIS
or
its
supporters
are
responsible
,
it
seems
reasonable
that
such
an
offensive
capability
may
still
be
in
development
.

We
hope
that
publishing
this
report
will
draw
attention
to
a
new
and
concerning
threat
that
includes
ISIS
critics
among
its
targets
.

If
ISIS
is
responsible
,
while
this
attack
targets
in-country
impediments
to
ISIS
objectives
,
other
targets
may
include
ideological
or
military
adversaries
abroad
.

Whether
or
not
ISIS
is
responsible
,
this
attack
is
likely
the
work
of
a
non-regime
threat
actor
who
may
be
just
beginning
to
field
a
still-rudimentary
capability
in
the
Syrian
conflict
.

The
entry
costs
for
engaging
in
malware
attacks
in
a
conflict
like
the
Syrian
Civil
War
are
low
,
and
made
lower
by
the
fact
that
the
rule
of
law
is
nonexistent
for
large
parts
of
the
country
.

In
still
other
parts
(
under
regime
control
)
,
malware
attacks
appear
to
be
state
sanctioned
.

Citizen
Lab
research
into
targeted
digital
threats
against
civil
society
confirms
that
civil
society
groups
face
grave
threats
from
targeted
malware
attacks
,
despite
being
under-resourced
to
defend
against
them
.

The
case
highlighted
here
is
no
exception
:
lack
of
IT
and
security
resources
have
made
it
difficult
for
the
Syrian
opposition
to
address
targeted
and
persistent
digital
threats
against
them
.

In
addition
,
if
ISIS
is
indeed
responsible
,
this
case
suggests
how
easy
it
is
for
belligerents
in
a
conflict
to
begin
fielding
basic
offensive
digital
capabilities
,
and
how
quickly
the
capabilities
can
be
pointed
at
unarmed
civil
society
groups
.

This
attack
was
exceptionally
targeted
,
and
clearly
reflected
the
work
of
an
actor
familiar
with
the
operations
of
the
targeted
organization
.

As
most
organizations
working
on
issues
surrounding
Syria
are
aware
,
malware
delivered
with
good
social
engineering
is
a
constant
source
of
danger
.

This
particular
attack
can
be
prevented
by
not
opening
files
sent
by
unknown
persons
.

However
,
many
attacks
in
Syria
come
from
hijacked
accounts
and
impersonate
people
known
to
the
targets
.

Social
engineering
remains
an
unsolved
problem
,
and
continues
to
compromise
groups
throughout
the
Syrian
opposition
and
their
supporters
.

This
attack
reaffirms
the
dangers
posed
by
social
engineering
attacks
,
whether
they
deliver
phishing
campaigns
or
malware
.

The
circumstantial
evidence
of
ISIS
involvement
suggests
that
groups
working
on
topics
that
ISIS
considers
a
threat
,
and
their
partner
organizations
and
supporters
,
should
urgently
examine
their
security
policies
and
assess
the
possible
risks
to
their
operations
,
and
the
consequences
of
exposure
of
sensitive
information
to
ISIS
.

Even
if
the
link
to
ISIS
turns
out
to
be
incorrect
,
it
is
possible
that
this
will
be
a
threat
in
the
future
.

Individuals
and
groups
at
risk
can
also
consult
materials
in
Arabic
provided
by
Cyber
Arabs
including
a
series
of
very
accessible
videos
on
digital
security
.

The
malware
files
Files
dropped
by
the
malware
Collected
Information
Files
(
unencrypted
)
Exfiltrated
file
(
encrypted
)
Registry
Keys
Acknowledgements
:
We
are
grateful
to
Cyber
Arabs
and
the
Institute
for
War
and
Peace
Reporting
for
their
critical
work
and
assistance
.

Special
thanks
to
:
several
anonymous
Syrians
,
Masashi
Crete-Nishihata
,
Sarah
McKune
,
Morgan
Marquis-Boire
,
Ron
Deibert
,
Bill
Marczak
,
Nart
Villeneuve
,
Irene
Poetranto
,
and
Kristen
Dennesen
.

Support
for
this
research
is
provided
by
grants
from
the
John
D.
and
Catherine
T.
MacArthur
Foundation
and
the
Ford
Foundation
.

In
February
2014
,
the
experts
of
the
G
DATA
SecurityLabs
published
an
analysis
of
Uroburos
,
the
rootkit
with
Russian
roots
.

We
explained
that
a
link
exists
between
Uroburos
and
the
Agent.BTZ
malware
,
which
was
responsible
for
''
the
most
significant
breach
of
U.S.
military
computers
ever
.

''
Nine
months
later
,
after
the
buzz
around
Uroburos
,
aka
Snake
or
Turla
,
we
now
identified
a
new
generation
of
Agent.BTZ
.

We
dubbed
it
ComRAT
and
,
by
now
,
analyzed
two
versions
of
the
threat
(
v3.25
and
v3.26
)
.

As
reported
earlier
this
year
,
Agent.BTZ
used
the
same
encoding
key
and
the
installation
log
file
name
as
Uroburos
.

ComRAT
,
in
its
version
3.25
,
shows
the
same
behavior
.

Furthermore
,
the
attackers
also
shared
a
C
&
C
domain
.

The
latest
version
of
ComRAT
known
to
us
(
v3.26
)
uses
a
new
key
and
does
not
create
the
installation
log
file
,
in
order
to
complicate
the
analysis
and
to
disguise
the
link
between
the
two
cases
.

Another
very
interesting
fact
:
the
attackers
use
COM
Object
hijacking
,
the
same
persistence
mechanism
as
COMpfun
,
which
we
described
recently
.

Taken
everything
into
consideration
,
the
indications
we
saw
during
our
analyzes
lead
to
the
supposition
that
the
group
behind
Agent.BTZ
and
Uroburos
is
still
active
and
is
pursuing
the
Agent.BTZ
path
once
more
to
improve
and
change
the
RAT
.

The
analyzed
file
is
the
latest
version
we
identified
:
v3.26
.

The
version
identification
is
described
in
the
chapter
''
Log
files
''
.

The
major
difference
between
this
version
and
the
older
version
(
s
)
will
be
described
there
.

The
first
task
of
the
malware
is
to
install
the
file
credprov.tlb
in
%
APPDATA
%
\Microsoft\
.

This
file
is
the
main
payload
of
the
malware
.

The
dropper
executes
the
following
command
in
order
to
install
a
second
file
:
The
second
file
is
shdocw.tlp
.

The
two
files
are
Microsoft
Windows
dynamic
libraries
.

To
be
started
during
the
boot
process
of
the
infected
machine
,
the
malware
creates
the
following
registry
key
:
This
registry
key
is
used
to
associate
the
library
shdocvw.tlp
to
the
object
42aedc87-2188-41fd-b9a3-0c966feabec1
as
previously
explained
in
the
article
about
COMpfun
.

The
purpose
is
to
load
the
library
into
each
and
every
process
executed
on
the
infected
system
.

If
the
version
of
the
malware
is
older
than
3.26
,
the
dropper
creates
an
additional
file
called
winview.ocx
.

We
noticed
that
the
file
name
is
still
the
same
as
the
file
name
used
by
Agent.BTZ
in
the
past
.

The
file
is
xored
with
the
following
obfuscation
key
(
used
by
both
,
Uroburos
and
Agent.BTZ
)
:
Here
is
the
decoded
log
file
content
:
We
can
notice
that
the
malware
checks
if
an
older
version
is
installed
on
the
system
and
if
this
is
the
case
,
the
dropper
removes
the
older
version
.

In
contrast
to
this
,
in
our
Uroburos
analysis
,
we
found
out
that
Uroburos
does
not
install
itself
in
case
a
version
of
Agent.BTZ
was
found
on
a
system
.

During
the
startup
of
the
infected
machine
,
the
shdocvw.tlp
library
is
loaded
into
all
processes
.

If
the
process
is
explorer.exe
,
this
library
will
load
the
other
library
called
credprov.tlb
.

This
library
is
the
real
payload
.

Its
features
are
common
for
a
Remote
Administration
Tool
(
RAT
)
:
ComRAT
's
communication
to
the
command
and
control
server
is
performed
by
the
browser
process
and
not
by
explorer.exe
in
order
to
avoid
being
blocked
by
a
firewall
on
the
system
or
any
additional
security
products
.

The
communication
between
the
processes
is
performed
by
named
pipe
.

Two
log
files
are
created
during
the
malware
execution
:
mskfp32.ocx
and
msvcrtd.tlb
.

If
the
malware
version
is
older
than
3.26
,
the
xored
key
is
the
same
as
the
dropper
key
.

Concerning
the
version
3.26
,
the
malware
uses
a
new
non-ASCII
key
.

Here
is
an
example
of
decoded
log
file
for
the
version
3.26
:
We
can
identify
the
version
of
the
malware
thanks
to
the
PVer
flag
.

The
command
and
control
server
information
is
stored
in
the
registry
,
not
in
an
XML
,
and
encoded
:
For
example
,
in
the
analyzed
sample
the
CC
is
:
weather-online.hopto.org
.

This
domain
is
far
from
unknown
,
as
it
has
been
mentioned
in
BAE
System
's
Uroburos
(
aka
Snake
)
analysis
paper
as
C
&
C
server
domain
for
the
Uroburos
malware
.

Another
connection
between
the
cases
.

If
the
malware
version
in
lower
than
3.26
,
the
XML
log
file
contains
the
command
and
control
server
information
:
Let
us
summarize
the
similarities
and
differences
between
Agent.BTZ
,
Uroburos
and
ComRAT
as
far
as
we
can
:
Some
parts
of
the
code
are
exactly
the
same
(
appears
to
be
copy
&
paste
)
.

That
is
the
reason
why
the
sample
is
detected
as
Uroburos
(
aka
Turla
)
.

The
same
code
was
used
by
Agent.BTZ
and
also
the
dll
loaded
into
userland
during
the
Uroburos
analysis
.

Command
and
control
server
domains
are
shared
between
Uroburos
and
ComRAT
.

In
version
3.26
,
the
author
changed
the
key
and
remove
the
known
file
name
.

This
action
can
be
an
indication
for
the
developer
's
effort
to
hide
this
connection
.

The
main
difference
is
the
design
.

Agent.BTZ
is
a
common
RAT
,
a
simple
library
executed
on
an
infected
machine
.

ComRAT
is
more
complex
and
cleverer
.

The
malware
is
loaded
into
each
and
every
process
of
the
infected
machine
and
the
main
part
(
payload
)
of
the
malware
is
only
executed
in
explorer.exe
.

Furthermore
,
the
C
&
C
communication
blends
into
the
usual
browser
traffic
and
the
malware
communicates
to
the
browser
by
named
pipe
.

It
is
by
far
a
more
complex
userland
design
than
Agent.BTZ
.

These
differences
,
mainly
the
more
complex
design
,
lead
us
to
give
this
malware
a
new
name
.

The
analyzed
dropper
of
v3.25
has
a
compilation
date
of
February
6th
2014
.

The
more
recent
dropper
of
v3.26
,
which
has
all
the
mentioned
changes
implemented
,
reveals
a
compilation
date
of
January
3rd
2013
.

We
suspect
that
this
date
is
spoofed
in
order
to
disguise
that
this
is
in
fact
a
newer
version
.

This
analysis
shows
that
even
after
the
Uroburos
publication
in
February
2014
,
the
group
behind
this
piece
of
malware
seems
to
be
still
active
.

In
any
case
,
the
ComRAT
developers
implemented
new
mechanisms
,
changed
keys
,
removed
log
files
to
hide
their
activities
and
tried
to
disguise
the
connections
between
the
RAT
ComRAT
,
the
rootkit
Uroburos
and
the
RAT
Agent.BTZ
as
much
as
possible
.

However
,
we
can
still
follow
the
evolution
of
the
malware
by
comparing
the
versions
.

The
persistence
mechanism
discovered
in
October
2014
makes
it
possible
to
intrude
into
a
system
in
a
really
discreet
manner
and
we
estimate
that
other
actors
will
use
the
same
persistence
mechanism
in
the
near
future
.

We
will
definitely
keep
our
ears
and
eyes
open
and
continue
analyzing
.

Cyber
espionage
has
been
a
hot
topic
through
the
last
years
.

Computer
attacks
known
as
''
APT
''
(
Advanced
Persistent
Threat
)
have
become
widely
reported
and
emphasized
by
the
media
,
damages
are
now
considered
as
real
and
strategic
trends
are
moving
in
cyber
defense
.

AIRBUS
Defence
&
Space
–
CyberSecurity
unit
responds
to
such
attacks
for
its
customers
every
day
,
developing
a
complete
range
of
solutions
.

Today
,
we
decided
to
release
publicly
information
on
a
specific
group
of
APT
attackers
known
as
''
Pitty
Tiger
''
.

This
information
comes
directly
from
investigations
led
by
our
Threat
Intelligence
.

Pitty
Tiger
is
a
group
of
attackers
that
have
been
active
since
at
least
2011
.

They
have
targeted
private
companies
in
several
sectors
,
such
as
defense
and
telecommunications
,
but
also
at
least
one
government
.

We
have
been
able
to
track
down
this
group
of
attackers
and
can
provide
detailed
information
about
them
.

We
were
able
to
collect
and
reveal
their
''
malware
arsenal
''
.

We
also
analyzed
their
technical
organization
.

Our
investigations
indicate
that
Pitty
Tiger
has
not
used
any
0day
vulnerability
so
far
,
rather
they
prefer
using
custom
malware
,
developed
for
the
group
's
exclusive
usage
.

Our
discoveries
indicate
that
Pitty
Tiger
is
a
group
of
attackers
with
the
ability
to
stay
under
the
radar
,
yet
still
not
as
mature
as
other
groups
of
attackers
we
monitor
.

Pitty
Tiger
is
probably
not
a
state-sponsored
group
of
attackers
.

They
lack
the
experience
and
financial
support
that
one
would
expect
from
state-sponsored
attackers
.

We
suppose
this
group
is
opportunistic
and
sells
its
services
to
probable
competitors
of
their
targets
in
the
private
sector
.

We
have
been
able
to
leverage
several
attackers
profiles
,
showing
that
the
Pitty
Tiger
group
is
fairly
small
compared
to
other
APT
groups
,
which
is
probably
why
we
saw
them
work
on
a
very
limited
amount
of
targets
.

At
the
end
of
this
report
,
we
provide
indicators
of
compromise
to
help
people
detect
current
Pitty
Tiger
attacks
.

APT
attacks
follow
what
we
call
the
''
APT
kill
chain
''
.

The
kill
chain
describes
briefly
the
way
attackers
do
perform
their
actions
.

It
can
be
summarized
by
the
following
scheme
:
The
reconnaissance
phase
commences
when
an
attacker
selects
a
new
target
and
involves
the
acquisition
of
information
about
that
target
.

There
is
very
little
information
available
about
this
phase
,
and
there
is
little
data
about
it
.

The
only
way
to
collect
information
about
this
phase
would
be
to
already
monitor
all
attackers
'
actions
at
this
step
,
which
is
hardly
feasible
.

The
longer
the
attackers
spend
time
in
attempting
to
understand
their
target
and
its
online
presence
,
the
easier
it
will
be
to
find
efficient
ways
to
penetrate
that
company
's
systems
.

This
reconnaissance
phase
is
both
about
finding
information
to
break
into
the
targeted
network
successfully
and
about
searching
for
data
which
could
help
to
accelerate
sensitive
information
isolation
(
like
the
name
of
a
key
employee
for
example
)
.

This
phase
mostly
relies
on
open
sources
from
the
Internet
:
social
networks
,
press
releases
,
white
papers
,
corporate
websites
,
search
engines
,
but
also
on
some
active
tools
like
vulnerability
scanners
etc
.

At
this
stage
,
the
APT
attackers
have
a
solid
knowledge
of
their
target
and
its
key
employees
.

The
attackers
have
everything
they
need
to
start
looking
for
an
entry
point
to
the
company
's
network
and
establish
one
or
several
permanent
backdoors
into
the
environment
.

The
attackers
mostly
rely
on
two
techniques
here
to
infect
one
or
several
computers
,
usually
workstations
,
inside
the
target
's
network
:
spear
phishing
and
drive-by
downloads
.

Spear
phishing
can
be
described
as
targeted
e-mail
phishing
.

In
a
spear
phishing
scheme
,
attackers
send
very
few
e-mails
to
targeted
people
.

In
fact
,
they
can
even
send
just
a
single
e-mail
.

The
trick
is
to
target
the
right
victim
and
provide
it
with
the
right
content
,
so
that
they
will
click
on
a
link
leading
to
drive-by
download
of
a
malware
,
or
open
an
attached
file
which
will
infect
their
computer
.

Some
groups
of
attackers
also
use
''
watering
hole
''
techniques
to
successfully
compromise
their
targets
.

To
build
a
watering
hole
attack
,
attackers
do
compromise
the
website
of
a
third
party
,
generally
a
supplier
of
the
target
,
which
is
typically
visited
by
a
specific
group
of
professionals
and
very
likely
by
the
target
.

Every
visitor
of
the
compromised
third
party
is
then
infected
.

The
method
has
one
major
drawback
:
it
will
also
infect
third
parties
who
visit
the
website
.

Attackers
have
developed
ways
to
avoid
this
.

If
their
reconnaissance
phase
has
been
done
effectively
,
they
already
know
all
IP
ranges
used
by
the
target
company
.

It
just
takes
a
few
lines
of
code
in
the
infecting
script
to
only
compromise
visitors
coming
from
the
target
IP
ranges
.

Direct
attacks
against
servers
of
the
target
can
also
be
a
way
to
penetrate
the
target
's
network
.

Attackers
have
gained
access
to
one
or
several
machines
inside
the
target
's
corporate
network
.

They
need
to
install
several
different
backdoors
in
order
to
be
able
to
always
access
the
network
.

In
case
one
backdoor
falls
,
there
will
be
others
.

As
soon
as
the
attackers
are
sure
they
have
enough
access
,
they
start
looking
for
two
things
:
intellectual
property
(
or
anything
else
they
want
to
know
or
steal
)
in
alignment
with
predefined
mission
objectives
,
and
a
means
of
privilege
escalation
to
facilitate
lateral
movement
within
the
compromised
environment
.

It
generally
does
not
take
long
before
the
attackers
gain
domain
administrator
privileges
and
dump
all
the
Active
Directory
content
.

They
use
lateral
moves
between
machines
inside
the
network
,
and
look
for
everything
they
need
.

This
step
is
very
hard
to
detect
,
since
they
only
use
valid
credentials
and
legitimate
administration
tools
such
as
PsExec
.

Data
exfiltration
is
the
last
step
before
the
attackers
loop
to
the
lateral
moves
step
,
in
a
never-ending
circle
of
prolonged
access
and
information
theft
.

They
generally
create
archive
files
containing
the
content
they
want
to
exfiltrate
,
which
are
then
sent
to
the
attackers
by
using
a
remote
administration
tool
(
RAT
)
or
transfer
protocols
such
as
FTP
and
HTTP
.

This
phase
is
not
the
end
of
an
APT
attack
.

The
attackers
loop
to
the
access
strengthening/lateral
moves
stage
and
generally
keep
stealing
more
information
and
stay
inside
the
network
for
more
data
gathering
.

For
more
information
about
all
the
APT
phases
,
please
refer
to
our
APT
Kill
Chain
blog
post
serie
.

During
our
regular
investigations
on
APT
cases
,
one
particular
variant
of
malware
caught
our
attention
,
because
we
had
not
faced
it
before
.

We
decided
to
spend
some
time
to
investigate
around
this
malware
and
found
out
that
it
was
used
exclusively
by
a
single
group
of
attackers
.

This
malware
family
is
known
as
''
PittyTiger
''
by
the
anti-virus
research
community
.

We
discovered
this
malware
sample
in
June
2014
,
leading
to
a
command
&
control
(
c
&
c
)
server
still
in
activity
.

Our
researches
around
this
particular
malware
family
revealed
the
''
Pitty
Tiger
''
group
has
been
active
since
2011
,
yet
we
found
other
publications
which
could
probably
be
attributed
to
the
same
group
of
attacker
back
in
2010
.

This
group
uses
other
malware
and
tools
during
their
APT
operations
,
in
addition
to
the
PittyTiger
RAT
.

A
variant
of
the
infamous
Gh0st
RAT
dubbed
''
Paladin
''
has
been
used
repeatedly
by
the
PT
group
,
together
with
other
RATs
which
seem
to
be
developed
exclusively
for
the
PT
group
:
''
MM
RAT
''
(
aka
Troj/Goldsun-B
)
,
and
''
CT
RAT
''
.

Another
variant
of
Gh0st
RAT
named
''
Leo
''
has
been
found
inactive
on
a
c
&
c
server
.

We
also
found
another
malware
,
named
''
Troj/ReRol.A
''
.

This
one
is
also
used
by
the
group
to
infect
workstations
,
collect
system
information
,
and
install
more
malware
on
the
infected
computer
.

It
acts
as
a
first
stage
downloader
and
system
data
collector
often
used
in
the
initial
compromise
of
the
Pitty
Tiger
campaigns
,
generally
embedded
in
Microsoft
Office
documents
.

Thanks
to
server
's
misconfigurations
,
we
managed
to
get
information
from
three
c
&
c
servers
used
by
this
group
of
attackers
,
which
provided
us
with
insight
from
the
end
of
2013
to
the
beginning
of
July
2014
.

Our
investigation
has
been
focused
on
the
data
we
could
get
from
these
c
&
c
servers
but
also
on
the
Pitty
Tiger
environment
.

This
whitepaper
aims
to
expose
the
view
we
have
on
the
group
,
especially
on
their
infrastructure
and
capabilities
.

We
hope
this
publication
will
bring
further
counter
analysis
from
the
research
community
to
enrich
the
global
common
threat
knowledge
.

Pitty
Tiger
,
like
most
other
APT
groups
,
use
spear
phishing
e-mails
extensively
in
order
to
gain
an
initial
foothold
within
the
targeted
environment
.

We
have
been
able
to
find
a
spear
phishing
e-mail
crafted
by
the
attackers
.

This
e-mail
spoofed
the
identity
of
an
employee
of
a
targeted
company
:
The
attached
file
is
a
Microsoft
Office
Word
document
triggering
CVE-2014-1761
to
infect
the
computer
it
is
sent
to
:
While
this
example
looks
very
''
amateur
''
for
a
spear
phishing
attempt
,
we
suppose
the
group
has
conducted
more
advanced
spear
phishing
campaigns
,
based
on
the
fact
that
we
found
infected
Word
documents
showing
content
stolen
from
victims
of
the
group
.

These
documents
were
infecting
the
system
with
Troj/ReRol.A
malware
,
which
we
will
detail
later
in
this
report
.

This
could
mean
that
the
Pitty
Tiger
group
is
using
stolen
material
as
spear
phishing
content
either
to
target
other
persons
in
the
compromised
company
,
or
to
target
other
persons
in
a
competitor's
company
,
or
more
generally
to
compromise
another
target
.

Pitty
Tiger
also
seem
to
use
fake
Microsoft
Office
Excel
content
,
yet
we
could
only
find
empty
content
delivering
once
again
the
Troj/ReRol.A
malware
.

Although
we
have
not
been
able
to
find
evidences
of
any
attack
aimed
at
exploiting
vulnerabilities
on
the
group
's
targets
servers
,
we
have
been
able
to
record
several
vulnerability
scanning
launched
from
one
c
&
c
server
straight
to
the
targets
.

The
attackers
have
been
using
different
vulnerability
scanners
aimed
at
their
targets
.

While
some
targets
have
been
scanned
with
''
generic
''
vulnerability
scanning
tools
like
HScan
or
Fluxay
and
port
scanners
like
Nmap
,
some
other
targets
have
been
scanned
for
very
specific
vulnerabilities
,
like
a
ZyWALL
vulnerability
or
a
FORTINET
product
.

We
have
also
been
able
to
testify
that
the
Pitty
Tiger
group
has
successfully
collected
information
on
some
of
their
targets
by
exploiting
the
HeartBleed
bug
.

This
vulnerability
which
exists
on
some
old
versions
of
OpenSSL
allows
attackers
to
collect
data
from
chunks
of
memory
from
the
targeted
machine
.

It
allowed
the
Pitty
Tiger
group
to
get
admin
credentials
from
at
least
one
target
,
for
example
.

Running
automated
vulnerability
scanners
on
whole
ranges
of
IP
addresses
used
by
the
targets
or
on
several
domains
is
a
very
noisy
way
to
collect
information
and
find
server
vulnerabilities
.

We
would
advocate
that
this
method
is
unwise
when
you
want
to
stay
furtive
,
and
doing
it
from
a
c
&
c
server
is
very
surprising
,
to
say
the
least
.

While
the
Pitty
Tiger
group
is
experienced
on
some
aspects
on
its
running
APT
campaigns
,
it
definitely
lacks
some
maturity
here
.

One
of
the
favorite
methods
used
by
the
Pitty
Tiger
group
to
infect
users
is
to
use
a
Microsoft
Office
Word
document
which
exploits
a
specific
vulnerability
.

The
payload
infecting
the
system
is
malware
known
as
''
Troj/ReRol.A
''
.

It
is
generally
the
first
step
of
the
initial
compromise
for
Pitty
Tiger
campaigns
.

We
have
been
able
to
find
one
such
document
used
by
that
group
of
attacker
,
exploiting
CVE-
2012-0158
,
an
old
critical
vulnerability
impacting
Microsoft
Office
and
corrected
by
Microsoft's
MS12-027
fix
in
April
2012
.

This
vulnerability
affects
Microsoft
Office
versions
up
to
Office
2010
.

We
also
found
one
RTF
document
embedding
CVE-2014-1761
,
which
is
a
more
recent
exploit
.

We
discovered
several
different
documents
spreading
this
malware
by
triggering
CVE-2012-0158
vulnerability
,
yet
we
could
not
share
them
in
this
report
,
since
these
documents
contain
information
about
victims
of
the
Pitty
Tiger
group
.

The
discovery
of
this
''
old
''
vulnerability
exploitation
in
June
2014
could
mean
that
the
Pitty
Tiger
group
has
no
direct
access
to
0day
exploits
,
or
not
enough
budgets
to
buy
some
.

It
could
also
mean
they
use
their
low
range
exploit
by
default
because
it
is
working
on
their
targets
and
is
sufficient
to
compromise
their
workstations
.

The
Word
document
we
initially
found
was
probably
a
''
test
''
document
used
by
the
group
.

When
opened
,
it
shows
a
single
line
written
in
Chinese
language
,
which
can
be
translated
as
''
Hello
!
''
When
successfully
triggered
,
the
exploit
infects
the
host
by
dropping
and
executing
a
file
named
''
svohost.exe
''
in
the
temporary
folder
of
the
currently
logged-in
user
:
This
binary
is
''
Troj/ReRol.A
''
according
to
Sophos
naming
convention
.

It
immediately
triggers
alarms
on
our
sandbox
:
The
binary
drops
a
copy
of
itself
in
the
Application
Data
folder
of
the
currently
logged-in
user
:
The
malware
initiates
a
communication
to
time.windows.com
to
check
for
connectivity
,
and
then
communicates
with
the
c
&
c
server
at
mac.avstore.com.tw
.

Very
few
variants
of
Troj/ReRol.A
are
public
.

The
variants
we
have
seen
did
use
that
same
User-
Agent
:
The
persistence
mechanism
used
by
the
malware
is
the
creation
of
a
registry
key
named
''
Shell
''
containing
the
path
to
the
malware
on
the
infected
system
:
The
payload
of
this
malware
is
used
to
collect
information
on
the
newly
infected
host
,
and
send
it
back
to
the
c
&
c
server
.

It
can
also
download
and
execute
binaries
.

The
data
sent
in
the
POST
request
has
a
0x11
bytes
header
consisting
of
a
fixed-value
byte
(
0xc3
)
followed
by
a
0x10
bytes
encryption
key
.

The
data
following
the
header
is
encrypted
using
RC4
with
the
previous
key
.

Once
the
data
is
deciphered
,
the
last
byte
of
the
clear
text
should
also
be
0xc3
.

We
have
been
able
to
decrypt
the
communications
and
confirmed
what
is
transmitted
to
the
c
&
c
server
.

Here
is
an
anonymized
sample
of
communication
showing
information
collected
by
the
malware
:
This
information
is
very
useful
for
an
attacker
:
it
shows
all
software
installed
on
the
system
,
and
running
services
.

Once
this
data
has
been
transferred
to
the
c
&
c
server
,
it
responds
by
sending
additional
malware
to
execute
on
the
machine
.

The
c
&
c
part
consists
of
two
files
:
The
dr.asp
registers
the
following
keywords
:
These
two
binaries
were
no
longer
available
on
the
server
.

However
,
we
found
various
files
which
could
have
been
used
as
''
32.exe
''
in
the
past
:
The
322.exe
file
is
a
legitimate
,
Chinese
,
calc.exe
tool
.

It
might
have
been
used
by
the
attackers
to
perform
tests
.

The
3
others
binaries
are
RATs
,
which
will
be
detailed
in
the
next
parts
.

This
RAT
is
the
origin
of
the
attackers
'
group
name
.

''
PittyTiger
''
is
a
mutex
used
by
the
malware
.

''
Pitty
Tiger
''
is
also
a
string
transmitted
in
the
network
communications
of
the
RAT
,
as
you
will
see
in
this
chapter
.

The
malware
,
when
running
in
our
sandbox
,
triggers
the
following
alarms
:
The
binary
drops
two
files
in
''
C
:
\Windows\System32
''
:
The
''
qmgrxp.exe
''
binary
is
a
simple
copy
of
the
original
binary
.

It
drops
the
''
packet64.dll
''
,
and
injects
it
in
''
explorer.exe
''
.

When
executed
,
a
mutex
called
''
PittyTiger
''
is
created
.

Persistence
is
achieved
by
adding
the
path
to
the
binary
to
the
WinlogonUserInit
key
:
The
''
packet64.dll
''
is
the
main
payload
of
the
RAT
.

After
being
injected
,
it
starts
sending
its
Hello
packet
to
its
c
&
c
server
:
All
the
requests
sent
to
the
c
&
c
contains
the
string
''
/FC001/
''
followed
by
the
bot
id
.

This
id
consists
of
the
infected
computer
name
followed
by
a
dash
and
the
lower
word
of
the
disk
serial
id
.

The
data
sent
is
simply
encoded
using
base64
,
there
is
no
cipher
at
all
.

The
hello
packet
,
once
decoded
,
looks
like
the
following
:
Our
sample
had
3
c
&
c
servers
configured
:
The
following
commands
are
implemented
:
Regarding
the
controller
part
,
we
found
two
different
versions
:
The
interface
handling
both
Pitty
TIGER
and
CT
connections
is
very
interesting
.

We
have
been
able
to
confirm
that
the
author
of
those
two
families
of
malware
is
the
same
person
,
as
will
be
seen
in
the
next
chapter
about
''
CT
RAT
''
.

This
remote
administration
tool
is
often
used
by
the
Pitty
Tiger
group
.

We
have
been
able
to
acquire
both
the
client
and
the
server
parts
.

We
found
two
instances
of
the
same
binary
with
different
names
–
32mm.exe
and
mm32.exe
.

This
RAT
seems
to
be
an
evolution
of
PittyTiger
,
since
a
specific
server
binary
we
found
could
handle
both
requests
from
CT
and
PittyTiger
,
and
was
indicated
as
compatible
with
PittyTiger
.

Moreover
,
the
same
commands
are
implemented
in
both
RATs
.

Unsurprisingly
,
when
running
in
our
sandbox
,
the
RAT
triggers
the
same
alarms
as
PittyTiger
:
The
binary
drops
two
files
in
''
C
:
\Program
Files\Internet
Explorer
''
:
The
''
ieupdate.exe
''
is
a
simple
binary
to
inject
the
DLL
into
''
explorer.exe
''
.

Persistence
is
achieved
via
the
following
registry
key
:
After
injection
,
the
RAT
sends
a
first
login
packet
to
its
c
&
c
:
The
RAT
communication
is
performed
through
HTTP
requests
.

The
data
is
sent
encrypted
with
RC4
,
and
base64-encoded
.

The
RC4
key
is
the
Unicode
form
of
the
requested
URL
.

The
Login
packet
contains
the
following
string
,
after
decoding
and
deciphering
:
It
contains
the
computer
name
,
the
user
name
,
the
internal
IP
address
,
the
OS
version
,
the
RAT
internal
version
and
the
Language
ID
of
the
system
.

The
RAT
can
then
receive
commands
from
its
c
&
c
.

Usual
RAT
features
are
implemented
:
Regarding
the
configuration
,
our
sample
communicates
with
''
sop.avstore.com.tw
''
,
and
contains
the
string
''
Nov
13
2013
''
,
which
should
be
a
version
identifier
.

The
c
&
c
part
is
a
Windows
binary
written
in
.NET

.

We
found
2
versions
:
The
About
form
gives
the
name
of
the
developer
(
s
)
:
The
version
of
the
controller
which
can
handle
both
PittyTiger
and
CT
shows
the
same
author
(
s
)
:
As
these
screenshots
show
,
the
switch
between
PittyTiger
and
CT
was
probably
in
the
last
semester
of
2013
.

The
text
can
be
translated
,
thanks
to
Google
Translate
,
as
:
Further
discussion
about
this
author
is
provided
in
subsequent
sections
.

We
named
this
malware
''
MM
RAT
''
at
the
beginning
of
our
investigation
,
before
we
found
an
existing
name
for
it
,
''
Troj/Goldsun-B
''
according
to
Sophos
.

This
is
another
remote
administration
tool
often
used
by
the
Pitty
Tiger
crew
.

We
have
been
able
to
acquire
both
a
client
and
server
part
for
it
.

The
binary
we
found
is
named
3200.exe
,
and
triggers
the
following
alarms
in
our
sandbox
:
The
''
release.tmp
''
file
is
dropped
on
the
system
:
The
binary
is
also
copied
to
the
user
's
''
Application
Data
''
directory
,
and
injects
the
''
release.tmp
''
file
in
''
explorer.exe
''
.

Persistence
is
achieved
by
adding
the
path
to
the
binary
to
the
Winlogon
Shell
key
:
The
RAT
embeds
its
own
DNS
server
IP
addresses
to
make
the
c
&
c
domain
names
resolutions
.

These
addresses
are
listed
below
:
It
starts
resolving
its
domains
after
injection
,
and
immediately
sends
requests
.

First
requests
are
used
to
check
for
updates
(
GET
request
on
/httpdocs/update/update.ini
)
.

A
Hello
packet
is
then
sent
:
The
bot
then
repeatedly
sends
GET
requests
on
''
/httpdocs/mm/
<
botid
>
/ComMand.sec
''
to
retrieve
remote
commands
.

The
communication
protocol
is
quite
simple
:
GET
requests
are
used
to
receive
data
from
the
c
&
c
,
and
POST
requests
to
send
data
.

In
POST
commands
,
the
CGI
name
represents
the
command
.

The
following
features
are
implemented
:
The
following
CGI
files
can
be
requested
by
the
bot
:
The
configuration
is
stored
locally
in
a
file
called
''
schmup.sys
''
.

The
file
is
ciphered
using
RC4
,
using
the
MD5
hash
of
''
rEdstArs
''
as
the
key
.

Our
sample
uses
''
mca.avstore.com.tw
''
,
''
star.yamn.net
''
and
''
bz.kimoo.com.tw
''
as
c
&
c
servers
.

It
contains
the
''
1.6.0
''
version
number
,
and
uses
the
password
''
9ol.8ik
,
''
to
authenticate
with
the
bots
.

Unlike
others
c
&
c
binaries
,
the
c
&
c
part
of
this
RAT
does
not
have
a
graphical
interface
,
but
can
be
remotely
requested
to
manage
the
bots
.

Furthermore
,
no
authentication
is
required
to
send
commands
to
the
c
&
c
(
but
you
need
to
know
the
configured
password
to
interact
with
the
bots
)
.

The
management
protocol
is
the
same
as
the
bots
protocol
,
with
different
CGI
files
:
The
bots
'
answers
to
remote
commands
can
be
retrieved
by
requesting
the
''
Reply.sec
''
file
(
e.g
.

GET
/httpdocs/mm/
<
botid
>
/Reply.sec
)
These
network
patterns
might
ring
bells
in
some
researcher
's
minds
.

The
network
communication
used
by
this
binary
are
the
same
as
those
used
by
the
Enfal
malware
,
which
has
been
used
in
the
past
by
the
Lurid
group
(
APT
attackers
)
and
by
other
threat
actors
in
China
.

An
examination
of
the
code
did
not
reveal
code
similarities
with
the
Enfal
malware
.

We
do
not
currently
know
why
this
malware
uses
the
same
patterns
to
communicate
.

This
is
another
remote
administration
tool
used
by
the
Pitty
Tiger
group
.

We
have
been
able
to
get
both
a
client
and
server
part
of
it
.

The
binary
we
found
was
dropped
by
a
malicious
Word
document
.

The
following
alarms
are
triggered
in
the
sandbox
:
The
shellcode
contained
in
the
Word
file
drops
the
following
file
,
and
executes
it
:
This
one
drops
in
turn
the
following
file
:
This
tmp
file
is
then
copied
to
''
C
:
\Windows\system32\Nwsapagentex.dll
''
and
registered
as
a
service
called
''
Nwsapagent
''
.

This
malware
is
a
variant
of
the
infamous
Gh0st
RAT
.

Our
specific
sample
uses
''
ssss0
''
instead
of
the
usual
''
Gh0st
''
header
for
network
communications
.

The
commands
ID
used
in
the
communication
protocol
have
also
changed
,
but
the
features
are
quite
the
same
.

The
configuration
is
directly
embedded
in
the
binary
,
and
deciphered
at
runtime
.

Up
to
5
c
&
c
servers
can
be
configured
,
but
our
sample
only
had
one
:
''
ey.avstore.com.tw:53
''
.

''
EY
''
could
stand
for
''
Ernst
&
Young
''
.

It
would
not
be
very
surprising
,
since
a
lot
of
different
attack
groups
do
use
anti-virus
vendors
or
other
big
company
's
names
to
try
to
look
more
legitimate
.

Pitty
Tiger
is
no
exception
,
as
detailed
later
in
this
report
.

We
also
found
two
c
&
c
binaries
,
claiming
to
be
versions
2.1
and
2.2
of
the
Paladin
RAT
controller
.

Version
2.1
answers
to
the
''
ssss0
''
header
,
while
version
2.2
uses
the
classical
''
Gh0st
''
header
.

Additionally
to
the
Paladin
RAT
,
we
found
another
variant
of
Gh0st
RAT
,
named
''
Leo
''
.

Although
we
have
found
it
on
a
c
&
c
server
of
the
group
,
there
is
no
evidence
that
is
has
been
used
by
the
group
,
in
opposition
to
Paladin
which
is
used
often
by
Pitty
Tiger
.

Moreover
,
the
built
malware
we
found
in
the
same
folder
was
configured
to
connect
to
a
local
IP
address
,
probably
for
testing
purposes
.

Our
investigation
has
focused
on
three
particular
c
&
c
servers
used
by
the
group
.

These
c
&
c
servers
,
unlike
the
other
c
&
cs
used
by
the
group
,
have
been
misconfigured
.

Once
parsed
and
dumped
,
it
provided
us
with
more
insight
.

We
found
several
domains
used
by
the
Pitty
Tiger
group
,
the
most
interesting
ones
being
detailed
in
this
chapter
.

Pitty
Tiger
,
like
other
APT
attackers
,
often
use
anti-virus
''
familiar
names
''
when
registering
domains
or
creating
subdomains
.

Some
examples
can
be
avstore.com.tw
,
sophos.skypetm.com.tw
,
symantecs.com.tw
,
trendmicro.org.tw
etc
.

The
registration
information
for
this
domain
has
been
the
same
since
2013-06-04
:
This
information
has
been
used
to
register
another
domain
,
skypetm.com.tw
,
which
has
also
been
used
by
the
Pitty
Tiger
group
.

Our
research
also
led
us
to
the
discovery
of
four
different
malware
families
connected
to
subdomains
of
avstore.com.tw
:
This
domain
has
shown
two
different
WHOIS
entries
through
time
:
The
most
recent
registration
information
is
also
used
for
avstore.com.tw
.

Six
malware
families
have
been
identified
as
communicating
with
subdomains
of
skypetm.com.tw
:
Avstore.com.tw
and
skypetm.com.tw
have
4
malware
families
in
common
,
communicating
to
subdomains
of
both
domains
:
Some
domains
registered
by
the
group
are
very
old
.

There
is
an
increase
in
the
registrations
from
2010
on
.

All
the
e-mail
addresses
used
are
connected
to
the
Pitty
Tiger
group
.

Mapping
the
victims
of
such
a
targeted
campaign
is
not
an
easy
task
.

We
have
found
the
Pitty
Tiger
group
to
be
very
active
against
one
particular
private
company
from
the
defense
industry
and
one
academic
network
of
a
government
,
,
yet
we
think
it
was
done
to
be
used
as
a
proxy
for
some
of
the
group
's
operations
.

We
have
also
found
some
connections
from
other
companies
to
the
c
&
c
servers
,
yet
we
did
not
find
evidence
that
they
were
real
victims
.

These
alleged
victims
do
work
in
different
sectors
and
are
located
mostly
in
European
countries
.

It
might
be
surprising
to
see
a
company
specialized
in
web
development
here
,
yet
it
has
built
websites
for
interesting
potential
targets
.

We
suspect
Pitty
Tiger
to
use
this
compromise
to
spear
phish
other
companies
which
are
in
commercial
relation
with
this
web
development
company
.

We
have
to
mention
that
we
only
had
access
to
three
of
the
several
attackers
'
servers
.

Therefore
,
we
suppose
the
Pitty
Tiger
group
could
have
more
targets
than
what
we
could
confirm
.

We
also
found
a
lot
of
vulnerability
scanners
launched
by
the
attackers
at
different
targets
,
yet
there
was
no
sign
of
compromise
.

During
the
course
of
our
investigations
,
we
discovered
a
RAR
archive
on
the
attacker
's
server
containing
5
Word
documents
and
one
small
C
source
code
.

These
documents
belong
to
the
defense
company
which
has
been
compromised
.

According
to
the
name
of
the
files
and
the
general
feel
of
the
archive
,
we
do
think
it
was
extracted
by
the
attackers
to
''
show
''
someone
what
kind
of
data
they
could
get
from
the
compromise
of
that
particular
target
.

The
documents
were
still
exhibiting
comments
from
various
users
,
showing
it
was
an
ongoing
work
and
not
old
documents
.

Interestingly
enough
,
we
saw
a
part
of
these
documents
appear
on
Virus-Total
,
with
an
additional
''
gift
''
from
the
attackers
,
a
payload
dropping
a
malware
.

There
are
only
two
options
we
can
think
of
here
:

Someone
from
the
same
company
has
been
targeted
with
this
document
.


Someone
from
another
company
has
been
targeted
with
this
document
.

This
other
company
could
be
a
partner
or
competitor
.

Since
we
were
unable
to
determine
the
intended
use
of
this
specific
document
,
we
can
only
suppose
that
it
could
be
used
to
provide
commercial
advantages
to
competitors
of
that
company
,
or
used
by
a
foreign
state
.

During
our
investigation
,
we
found
out
interesting
information
about
the
Pitty
Tiger
group
itself
.

After
analyzing
the
various
collected
elements
,
we
have
tried
to
draw
a
portrait
of
this
particular
threat
.

We
have
been
able
to
get
all
the
RDP
connections
logs
to
one
c
&
c
server
:
These
connections
are
either
VPS
or
dynamic
IP
addresses
,
mostly
from
China
.

A
computer
named
CHMXY-PC
connected
to
the
c
&
c
via
RDP
with
IP
address
58.61.40.5
.

The
IP
is
in
an
ADSL
dynamic
pool
in
the
Gangzhou
area
(
Guangdong
province
)
:
A
few
connections
to
the
c
&
c
were
done
by
a
computer
named
TIEWEISHIPC
with
IP
address
27.16.139.143
.

This
IP
address
belongs
to
an
ADSL
dynamic
pool
in
the
Wuhan
area
(
Hubei's
provincial
capital
)
.

Some
connections
to
the
c
&
c
originated
from
a
computer
named
FLY-THINK
with
several
IP
addresses
,
all
located
in
Fuqing
(
Fujian
province
)
.

The
IP
addresses
are
in
an
ADSL
dynamic
pool
:
Most
of
the
connections
to
the
c
&
c
server
were
coming
from
a
computer
named
50PZ80C-
1DFDCB8
with
several
IP
addresses
.

There
are
11
IP
addresses
from
Chinese
dynamic
ADSL
ranges
:
9
from
Fuqing
(
Fujian
province
)
,
one
from
Fuzhou
(
Fujian
's
province
capital
)
and
one
from
Nanchang
(
Jiangxi
's
province
capital
)
.

The
last
one
came
from
a
VPS
instance
located
in
Los
Angeles
(
California
,
USA
)
but
purchased
by
a
China
based
VPS
provider
XeVPS
which
belong
to
the
AS38197
(
Sun
Network
Hong
Kong
Limited
)
.

The
two
computers
FLY-THINK
and
50PZ80C-1DFDCB8
have
used
distinct
IP
addresses
to
connect
to
the
c
&
c
,
yet
some
of
these
IP
addresses
come
from
the
same
IP
range
:
We
mapped
these
RDP
connections
to
have
a
graphical
view
:
We
found
that
a
member
of
this
group
of
attackers
used
some
tools
on
his
own
system
,
for
testing
purposes
.

This
information
was
still
available
when
we
got
access
to
the
c
&
c
server
.

He
launched
some
tests
with
the
CT
RAT
we
exposed
earlier
:
Here
we
can
see
a
user
''
Toot
''
from
a
machine
named
''
toot-2a601225a8
''
logging
in
the
CT
RAT
and
executing
some
commands
.

The
c
&
c
IP
address
,
198.100.113.27
,
can
be
seen
there
.

Other
log
files
showed
that
''
Toot
''
is
using
virtual
machines
for
his
tests
.

We
can
also
see
the
system
:
Microsoft
Windows
XP
SP3
.

The
''
P
''
field
is
the
language
ID
.

1028
means
''
Chinese
traditional
''
.

We
have
also
seen
tests
run
by
''
toot
''
with
a
language
ID
of
2052
,
which
is
''
Chinese
simplified
''
.

The
''
M
''
field
is
probably
used
for
versioning
.

It
is
a
hardcoded
string
in
the
binary
.

After
these
tests
,
we
could
see
some
real
connections
to
a
victim
using
this
RAT
.

Here
is
a
follow-up
of
the
commands
launched
by
the
bot
controller
,
in
a
standard
command-line
shell
:
The
attacker
goes
on
like
this
,
using
his
tools
,
and
then
ends
the
communication
with
this
RAT
on
that
computer
.

Please
note
that
at
this
point
,
the
attacker
has
at
least
the
privileges
of
a
local
administrator
,
since
he
is
allowed
to
write
content
in
the
system32
folder
of
a
Windows
XP
system
.

He
could
also
gain
the
credentials
to
a
sensitive
e-mail
account
.

In
addition
to
all
information
already
shown
,
we
saw
Toot
connect
to
an
account
on
a
cloud
service
named
''
Baidu
Drive
''
.

The
e-mail
address
linked
to
this
account
is
dyanmips
@
qq.com
(
QQ-ID
:
2589315828
)
.

We
could
find
traces
of
two
other
e-mail
accounts
associated
to
Toot
,
ciscodyanmips
@
qq.com
(
QQ
ID
:
204156335
)
and
ciscodynamips
@
qq.com
(
QQ
ID
:
1878836793
)
.

We
did
not
find
more
information
about
user
''
Toot
''
,
yet
we
miss
Chinese
language
capabilities
.

The
controller
part
of
CT
RAT/PittyTiger
RAT
revealed
the
following
''
about
''
information
,
once
translated
from
Chinese
to
English
language
:
CT
console
(
compatible
pittytiger
)
v1.3
2013.12
by
Trees
and
snow
We
believe
this
translation
of
the
author
's
name
might
not
be
accurate
due
to
the
use
of
automated
translation
tools
.

Moreover
,
we
have
strong
suspicions
that
there
is
not
a
single
individual
nicknamed
''
Trees
and
snow
''
but
rather
two
programmers
nicknamed
''
Trees
''
and
''
Snow
''
.

''
Trees
''
could
also
be
''
Cold
''
.

We
noticed
that
the
symbol
for
this
word
is
translated
differently
according
to
the
context
it
is
used
in
.

Once
again
,
we
lack
Chinese
language
skills
.

We
identify
the
two
nicknames
on
the
current
campaign
as
Automn
Snow
(
秋雪
)
and
Cold
Air
Kiss
(
风吻寒
)
.

While
we
are
confident
that
these
people
are
indeed
the
developers
of
both
PittyTiger
and
CT
RAT
malware
,
we
are
not
sure
they
belong
to
the
PittyTiger
group
.

These
developers
might
just
have
been
hired
to
develop
these
RATs
.

They
might
also
just
be
selling
it
to
the
PittyTiger
group
.

There
is
no
trace
of
usage
from
other
attacking
groups
,
we
believe
the
PittyTiger
RAT
is
exclusively
used
by
this
group
of
attackers
.

According
to
indicators
we
gathered
and
threat
activities
profiling
we
have
some
hypothesis
on
the
way
the
group
is
conducting
its
operations
.

We
have
strong
evidence
of
a
bot
operator
position
.

We
identify
one
nickname
for
this
position
,
the
user
known
as
TooT
.

As
we
did
not
see
other
nickname
,
we
think
that
TooT
is
one
person
and
not
a
group
of
persons
.

We
also
identified
a
malware
development
position
.

We
identified
two
nicknames
for
this
position
on
the
current
campaign
,
Automn
Snow
(
秋雪
)
and
Cold
Air
Kiss
(
风吻寒
)
.

Yet
we
are
unsure
that
they
belong
to
the
group
,
they
might
just
be
a
third
party
providing
or
selling
their
malware
.

We
have
a
strong
suspicion
of
a
coordinator
position
,
which
coordinates
the
bot
operator
,
provides
him
with
some
logistics
support
(
weaponized
document
,
tools…
)
and
reviews
the
programmers
work
.

This
position
could
imply
a
communication
channel
with
another
manager
.

We
named
this
position
'Chen
'
,
in
relation
with
several
references
of
this
common
Chinese
name
in
c
&
c
WHOIS
and
other
investigation
materials
.

We
have
some
suspicion
of
a
customer
relationship
manager
position
that
may
act
as
an
interface
between
a
customer
and
Chen
.

We
named
this
position
'Lilly
'
.

The
c
&
c
servers
used
by
the
attackers
revealed
a
lot
of
interesting
files
stored
in
various
folders
:
This
is
quite
the
usual
arsenal
for
a
group
of
APT
attackers
:
What
is
rare
to
find
is
the
controller
part
of
those
tools
.

We
have
been
lucky
enough
to
get
the
controller
part
of
Pitty
Tiger
and
CT
RAT
,
and
even
to
get
a
kind
of
hybrid
controller
made
for
CT
RAT
but
also
supporting
Pitty
Tiger
.

We
suppose
that
the
CT
RAT
is
the
new
evolution
of
Pitty
Tiger
and
that
it
will
replace
Pitty
Tiger
in
the
following
months
.

The
presence
of
a
Chinese
version
of
''
calc.exe
''
,
the
official
calculator
provided
in
Microsoft
Windows
,
is
interesting
.

Not
only
is
it
one
more
indicator
of
a
probable
Chinese
origin
,
but
also
an
indicator
that
this
server
was
probably
used
as
a
test
base
,
in
addition
to
being
operational
and
controlling
infected
machines
from
different
targets
.

In
addition
to
those
tools
,
we
found
some
interesting
scripts
.

A
script
named
ipc.bat
uses
a
file
named
user.txt
to
try
to
brute-force
a
shared
folder
access
:
The
user.txt
file
contains
thousands
of
lines
,
each
one
being
a
couple
of
one
particular
username
and
one
password
attempt
:
This
user.txt
file
has
been
anonymized
,
yet
we
wanted
to
give
you
the
feel
for
it
.

This
file
is
67320
lines
long
,
and
uses
5610
different
passwords
for
each
of
12
users
contained
in
this
file
.

The
user
names
are
clearly
the
result
from
a
user
enumeration
and
are
dedicated
to
a
particular
French
victim
.

The
passwords
listed
in
this
file
are
either
build
from
several
campaigns
or
from
the
current
campaign
.

A
lot
of
passwords
are
related
to
the
targeted
company
and
might
be
previous
passwords
from
users
.

We
have
also
discovered
a
pack
of
files
which
can
be
used
to
trigger
an
Internet
Explorer
vulnerability
(
CVE-2014-0322
)
.

The
date
of
these
files
,
namely
Tope.swf
and
index.html
,
was
2014/02/18
,
a
few
days
after
the
revelation
of
existing
exploits
in
the
wild
used
in
APT
attacks
.

We
do
not
know
if
the
Pitty
Tiger
group
used
this
exploit
or
not
,
but
found
no
trace
indicating
they
did
.

A
lot
of
different
attackers
seem
to
have
used
that
vulnerability
since
.

Determining
who
is
exactly
behind
an
APT
campaign
is
difficult
.

We
tried
to
extract
different
technical
indicators
,
together
with
contextual
elements
.

Information
relating
to
the
tools
used
by
the
attackers
has
been
leveraged
for
attribution
:
The
IP
addresses
used
for
the
hosting
of
the
c
&
c
domains
are
mainly
located
in
Taipei
(
Taïwan
)
and
Hong
Kong
City
(
Hong
Kong
Special
Administrative
Region
,
PRC
)
:
Most
RDP
connections
to
the
c
&
c
infrastructure
come
from
Chinese
IP
ranges
in
Fuqing
(
Fujian
province
,
PRC
)
.

Yet
some
IP
addresses
in
the
USA
and
in
Hong
Kong
have
also
been
found
;
All
the
items
listed
in
this
chapter
are
strong
indicators
that
the
attackers
might
be
Chinese
.

Pitty
Tiger
is
a
group
of
attackers
that
have
been
active
since
at
least
2011
.

Pitty
Tiger
is
effective
and
mature
in
the
use
of
targeted
malware
,
the
use
of
known
exploits
to
infect
computers
with
their
malware
and
the
creation
of
an
infrastructure
to
efficiently
conduct
APT
attacks
.

They
are
quite
unprofessional
in
their
way
of
using
their
infrastructure
:
they
do
launch
vulnerability
scanners
directly
from
a
c
&
c
server
and
also
use
their
connection
for
personal
activities
(
downloading
pornographic
material
for
example
,
as
we
have
seen
a
whole
folder
on
a
c
&
c
server
full
of
xxx
torrent
links
)
.

Pitty
Tiger
is
probably
not
a
state-sponsored
group
of
attackers
.

The
attackers
lack
the
experience
and
financial
support
that
one
would
expect
from
state-sponsored
attackers
.

We
suppose
this
group
is
opportunistic
and
sells
its
services
to
probable
competitors
of
their
targets
in
the
private
sector
.

One
governmental
network
has
been
targeted
by
the
group
,
yet
we
do
not
have
any
evidence
of
the
purpose
of
this
attack
.

We
suppose
this
particular
attack
has
been
executed
to
provide
a
usable
bounce
for
the
group
.

The
campaign
we
studied
has
been
largely
focused
on
one
particular
target
.

We
suspect
the
Pitty
Tiger
group
to
work
according
to
an
opportunistic
business
model
:
this
group
might
offer
its
services
to
third
parties
from
the
private
sector
.

This
group
seems
to
be
very
small
compared
to
other
APT
groups
.

We
have
leveraged
several
profiles
and
could
identify
some
attackers
to
a
certain
extent
.

We
believe
this
group
might
keep
working
as
it
is
now
,
with
limited
budgets
,
or
grow
to
extend
its
attacking
campaign
capabilities
.

This
list
of
indicators
is
provided
in
order
to
help
people
detect
Pitty
Tiger
APT
campaign
.

Domains
used
by
the
Pitty
Tiger
group
:
(
please
note
several
subdomains
are
used
,
as
seen
in
the
report
)
A
few
days
ago
we
detected
a
watering
hole
campaign
in
a
website
owned
by
one
big
industrial
company
.

The
website
is
related
to
software
used
for
simulation
and
system
engineering
in
a
wide
range
of
industries
,
including
automotive
,
aerospace
,
and
manufacturing
.

The
attackers
were
able
to
compromise
the
website
and
include
code
that
loaded
a
malicious
Javascript
file
from
a
remote
server
.

This
Javascript
file
is
a
framework
for
reconnaissance
that
the
attackers
call
''
Scanbox
''
and
includes
some
of
the
techniques
we
described
in
a
previous
blog
post
:
The
Scanbox
framework
first
configures
the
remote
C
&
C
server
that
it
will
use
and
collects
a
small
amount
of
information
about
the
victim
that
is
visiting
the
compromised
website
including
:
Resulting
in
something
like
this
:
Before
sending
the
information
to
the
C
&
C
server
,
Scanbox
encodes
and
encrypts
the
data
with
the
following
function
:
Producing
the
following
request
:
If
we
decrypt
the
data
it
translates
to
:
After
the
first
request
,
the
framework
contains
several
plugins
to
extract
different
information
from
the
victim
.

While
the
user
is
browsing
the
compromised
website
,
all
keystrokes
are
being
recorded
and
sent
to
the
C
&
C
periodically
.

It
will
also
send
keystrokes
when
the
user
submits
web
forms
that
can
potentially
include
passwords
and
other
sensitive
data
.

As
we
have
seen
,
this
is
a
very
powerful
framework
that
gives
attackers
a
lot
of
insight
into
the
potential
targets
that
will
help
them
launching
future
attacks
against
them
.

We
have
also
seen
several
Metasploit-produced
exploits
that
target
different
versions
of
Java
in
the
same
IP
address
that
hosts
the
Scanbox
framework
(
122.10.9
[
.

]
109
)
.

We
recommend
you
look
for
this
type
of
activity
against
the
following
machines
in
your
network
:
Recently
,
research
was
published
identifying
a
Tor
exit
node
,
located
in
Russia
,
that
was
consistently
and
maliciously
modifying
any
uncompressed
Windows
executables
downloaded
through
it
.

Naturally
this
piqued
our
interest
,
so
we
decided
to
peer
down
the
rabbit
hole
.

Suffice
to
say
,
the
hole
was
a
lot
deeper
than
we
expected
!
In
fact
,
it
went
all
the
way
back
to
the
notorious
Russian
APT
family
MiniDuke
,
known
to
have
been
used
in
targeted
attacks
against
NATO
and
European
government
agencies
.

The
malware
used
in
this
case
is
,
however
,
not
a
version
of
MiniDuke
.

It
is
instead
a
separate
,
distinct
family
of
malware
that
we
have
since
taken
to
calling
OnionDuke
.

But
lets
start
from
the
beginning
.

When
a
user
attempts
to
download
an
executable
via
the
malicious
Tor
exit
node
,
what
they
actually
receive
is
an
executable
''
wrapper
''
that
embeds
both
the
original
executable
and
a
second
,
malicious
executable
.

By
using
a
separate
wrapper
,
the
malicious
actors
are
able
to
bypass
any
integrity
checks
the
original
binary
might
contain
.

Upon
execution
,
the
wrapper
will
proceed
to
write
to
disk
and
execute
the
original
executable
,
thereby
tricking
the
user
into
believing
that
everything
went
fine
.

However
,
the
wrapper
will
also
write
to
disk
and
execute
the
second
executable
.

In
all
the
cases
we
have
observed
,
this
malicious
executable
has
been
the
same
binary
(
SHA1
:
a75995f94854dea8799650a2f4a97980b71199d2
,
detected
as
Trojan-Dropper
:
W32/OnionDuke.A
)
.

This
executable
is
a
dropper
containing
a
PE
resource
that
pretends
to
be
an
embedded
GIF
image
file
.

In
reality
,
the
resource
is
actually
an
encrypted
dynamically
linked
library
(
DLL
)
file
.

The
dropper
will
proceed
to
decrypt
this
DLL
,
write
it
to
disk
and
execute
it
.

Once
executed
,
the
DLL
file
(
SHA1
:
b491c14d8cfb48636f6095b7b16555e9a575d57f
,
detected
as
Backdoor
:
W32/OnionDuke.B
)
will
decrypt
an
embedded
configuration
(
shown
below
)
and
attempt
to
connect
to
hardcoded
C
&
C
URLs
specified
in
the
configuration
data
.

From
these
C
&
Cs
the
malware
may
receive
instructions
to
download
and
execute
additional
malicious
components
.

It
should
be
noted
,
that
we
believe
all
five
domains
contacted
by
the
malware
are
innocent
websites
compromised
by
the
malware
operators
,
not
dedicated
malicious
servers
.

Through
our
research
,
we
have
also
been
able
to
identify
multiple
other
components
of
the
OnionDuke
malware
family
.

We
have
,
for
instance
,
observed
components
dedicated
to
stealing
login
credentials
from
the
victim
machine
and
components
dedicated
to
gathering
further
information
on
the
compromised
system
like
the
presence
of
antivirus
software
or
a
firewall
.

Some
of
these
components
have
been
observed
being
downloaded
and
executed
by
the
original
backdoor
process
but
for
other
components
,
we
have
yet
to
identify
the
infection
vector
.

Most
of
these
components
do
n't
embed
their
own
C
&
C
information
but
rather
communicate
with
their
controllers
through
the
original
backdoor
process
.

One
component
,
however
,
is
an
interesting
exception
.

This
DLL
file
(
SHA1
d433f281cf56015941a1c2cb87066ca62ea1db37
,
detected
as
Backdoor
:
W32/OnionDuke.A
)
contains
among
its
configuration
data
a
different
hardcoded
C
&
C
domain
,
overpict.com
and
also
evidence
suggesting
that
this
component
may
abuse
Twitter
as
an
additional
C
&
C
channel
.

What
makes
the
overpict.com
domain
interesting
,
is
it
was
originally
registered
in
2011
with
the
alias
of
''
John
Kasai
''
.

Within
a
two-week
window
,
''
John
Kasai
''
also
registered
the
following
domains
:
airtravelabroad.com
,
beijingnewsblog.net
,
grouptumbler.com
,
leveldelta.com
,
nasdaqblog.net
,
natureinhome.com
,
nestedmail.com
,
nostressjob.com
,
nytunion.com
,
oilnewsblog.com
,
sixsquare.net
and
ustradecomp.com
.

This
is
significant
because
the
domains
leveldelta.com
and
grouptumbler.com
have
previously
been
identified
as
C
&
C
domains
used
by
MiniDuke
.

This
strongly
suggests
that
although
OnionDuke
and
MiniDuke
are
two
separate
families
of
malware
,
the
actors
behind
them
are
connected
through
the
use
of
shared
infrastructure
.

Based
on
compilation
timestamps
and
discovery
dates
of
samples
we
have
observed
,
we
believe
the
OnionDuke
operators
have
been
infecting
downloaded
executables
at
least
since
the
end
of
October
2013
.

We
also
have
evidence
suggesting
that
,
at
least
since
February
of
2014
,
OnionDuke
has
not
only
been
spread
by
modifying
downloaded
executables
but
also
by
infecting
executables
in
.torrent
files
containing
pirated
software
.

However
,
it
would
seem
that
the
OnionDuke
family
is
much
older
,
both
based
on
older
compilation
timestamps
and
also
on
the
fact
that
some
of
the
embedded
configuration
data
make
reference
to
an
apparent
version
number
of
4
suggesting
that
at
least
three
earlier
versions
of
the
family
exist
.

During
our
research
,
we
have
also
uncovered
strong
evidence
suggesting
that
OnionDuke
has
been
used
in
targeted
attacks
against
European
government
agencies
,
although
we
have
so
far
been
unable
to
identify
the
infection
vector
(
s
)
.

Interestingly
,
this
would
suggest
two
very
different
targeting
strategies
.

On
one
hand
is
the
''
shooting
a
fly
with
a
cannon
''
mass-infection
strategy
through
modified
binaries
and
,
on
the
other
,
the
more
surgical
targeting
traditionally
associated
with
APT
operations
.

In
any
case
,
although
much
is
still
shrouded
in
mystery
and
speculation
,
one
thing
is
certain
.

While
using
Tor
may
help
you
stay
anonymous
,
it
does
at
the
same
time
paint
a
huge
target
on
your
back
.

It
's
never
a
good
idea
to
download
binaries
via
Tor
(
or
anything
else
)
without
encryption
.

The
problem
with
Tor
is
that
you
have
no
idea
who
is
maintaining
the
exit
node
you
are
using
and
what
their
motives
are
.

VPNs
(
such
as
our
Freedome
VPN
)
will
encrypt
your
connection
all
the
way
through
the
Tor
network
,
so
the
maintainers
of
Tor
exit
nodes
will
not
see
your
traffic
and
ca
n't
tamper
with
it
.

Samples
:

